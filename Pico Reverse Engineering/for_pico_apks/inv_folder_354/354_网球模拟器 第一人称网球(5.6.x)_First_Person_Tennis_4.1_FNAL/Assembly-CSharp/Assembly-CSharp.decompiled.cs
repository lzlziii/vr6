using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using CodeStage.AntiCheat.ObscuredTypes;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using LunarCatsStudio.SuperCombiner;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using PlayFab;
using PlayFab.ClientModels;
using RootMotion.FinalIK;
using TMPro;
using Unity.Labs.SuperScience;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000005")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xBAF920", Offset = "0xBAF920", VA = "0xBAF920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xBAF940", Offset = "0xBAF940", VA = "0xBAF940")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xBB03F0", Offset = "0xBB03F0", VA = "0xBB03F0")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000006")]
public class ForestMaker : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_treePrefab;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_amount;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ground;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radiusDistance;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xBB040C", Offset = "0xBB040C", VA = "0xBB040C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xBB077C", Offset = "0xBB077C", VA = "0xBB077C")]
	public ForestMaker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
[RequireComponent(typeof(LineRenderer))]
public class ArcTargetBasic : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform StartPoint;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseMousePos;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ArcDelay;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TargetDelay;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HitDistance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DecalOffset;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TargetDecal;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color StartColor;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color EndColor;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float SectionDetail;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float StartSize;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float EndSize;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ArcHeight;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 MousePos;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Ray ray;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit hit;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 middle;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 end;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion rot;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool TargetTypeLight;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Light TargetLight;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float g;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float dist;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xBB0784", Offset = "0xBB0784", VA = "0xBB0784", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBB09F8", Offset = "0xBB09F8", VA = "0xBB09F8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBB0CE4", Offset = "0xBB0CE4", VA = "0xBB0CE4", Slot = "6")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBB0D4C", Offset = "0xBB0D4C", VA = "0xBB0D4C")]
	public ArcTargetBasic()
	{
	}
}
[Token(Token = "0x2000008")]
public class Discordserver : MonoBehaviour
{
	[Token(Token = "0x6000021")]
	[Address(RVA = "0xBB0DE4", Offset = "0xBB0DE4", VA = "0xBB0DE4")]
	public void Link()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xBB0E28", Offset = "0xBB0E28", VA = "0xBB0E28")]
	public Discordserver()
	{
	}
}
[Token(Token = "0x2000009")]
public class DisplayHighscores : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	[CompilerGenerated]
	private sealed class <RefreshHighscores>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayHighscores <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002A")]
			[Address(RVA = "0xBB1278", Offset = "0xBB1278", VA = "0xBB1278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600002C")]
			[Address(RVA = "0xBB12C0", Offset = "0xBB12C0", VA = "0xBB12C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0xBB1150", Offset = "0xBB1150", VA = "0xBB1150")]
		[DebuggerHidden]
		public <RefreshHighscores>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xBB1180", Offset = "0xBB1180", VA = "0xBB1180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0xBB1184", Offset = "0xBB1184", VA = "0xBB1184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0xBB1280", Offset = "0xBB1280", VA = "0xBB1280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text[] highscoreFields;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Highscores highscoresManager;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xBB0E30", Offset = "0xBB0E30", VA = "0xBB0E30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xBB0F50", Offset = "0xBB0F50", VA = "0xBB0F50")]
	public void OnHighscoresDownloaded(Highscore[] highscoreList)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xBB10DC", Offset = "0xBB10DC", VA = "0xBB10DC")]
	[IteratorStateMachine(typeof(<RefreshHighscores>d__4))]
	private IEnumerator RefreshHighscores()
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xBB1178", Offset = "0xBB1178", VA = "0xBB1178")]
	public DisplayHighscores()
	{
	}
}
[Token(Token = "0x200000B")]
public class dreamloLeaderBoard : MonoBehaviour
{
	[Token(Token = "0x200000C")]
	public struct Score
	{
		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerName;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int score;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int seconds;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string shortText;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string dateString;
	}

	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <GetRequest>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0xBB2918", Offset = "0xBB2918", VA = "0xBB2918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0xBB2960", Offset = "0xBB2960", VA = "0xBB2960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xBB1FD4", Offset = "0xBB1FD4", VA = "0xBB1FD4")]
		[DebuggerHidden]
		public <GetRequest>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xBB26DC", Offset = "0xBB26DC", VA = "0xBB26DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0xBB26F8", Offset = "0xBB26F8", VA = "0xBB26F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xBB2868", Offset = "0xBB2868", VA = "0xBB2868")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xBB2920", Offset = "0xBB2920", VA = "0xBB2920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IUpgradedAndGotSSL;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string privateCode;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string publicCode;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string highScores;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBB12C8", Offset = "0xBB12C8", VA = "0xBB12C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xBB1388", Offset = "0xBB1388", VA = "0xBB1388")]
	public static dreamloLeaderBoard GetSceneDreamloLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xBB1488", Offset = "0xBB1488", VA = "0xBB1488")]
	public void AddScore(string playerName, int totalScore)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xBB16F0", Offset = "0xBB16F0", VA = "0xBB16F0")]
	public void AddScore(string playerName, int totalScore, int totalSeconds)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xBB19E4", Offset = "0xBB19E4", VA = "0xBB19E4")]
	public void AddScore(string playerName, int totalScore, int totalSeconds, string shortText)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBB148C", Offset = "0xBB148C", VA = "0xBB148C")]
	private void AddScoreWithPipe(string playerName, int totalScore)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBB16F4", Offset = "0xBB16F4", VA = "0xBB16F4")]
	private void AddScoreWithPipe(string playerName, int totalScore, int totalSeconds)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBB19E8", Offset = "0xBB19E8", VA = "0xBB19E8")]
	private void AddScoreWithPipe(string playerName, int totalScore, int totalSeconds, string shortText)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xBB1E88", Offset = "0xBB1E88", VA = "0xBB1E88")]
	private void GetScores()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBB1F20", Offset = "0xBB1F20", VA = "0xBB1F20")]
	private void GetSingleScore(string playerName)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBB1DF8", Offset = "0xBB1DF8", VA = "0xBB1DF8")]
	[IteratorStateMachine(typeof(<GetRequest>d__16))]
	private IEnumerator GetRequest(string url)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBB1FFC", Offset = "0xBB1FFC", VA = "0xBB1FFC")]
	public string[] ToStringArray()
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xBB20B8", Offset = "0xBB20B8", VA = "0xBB20B8")]
	public List<Score> ToListLowToHigh()
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xBB248C", Offset = "0xBB248C", VA = "0xBB248C")]
	public List<Score> ToListHighToLow()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xBB2240", Offset = "0xBB2240", VA = "0xBB2240")]
	public Score[] ToScoreArray()
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBB1D64", Offset = "0xBB1D64", VA = "0xBB1D64")]
	private string Clean(string s)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xBB2614", Offset = "0xBB2614", VA = "0xBB2614")]
	private int CheckInt(string s)
	{
		return default(int);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xBB2638", Offset = "0xBB2638", VA = "0xBB2638")]
	public dreamloLeaderBoard()
	{
	}
}
[Token(Token = "0x200000F")]
public class dreamloPromoCode : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	public enum State
	{
		[Token(Token = "0x400004C")]
		None,
		[Token(Token = "0x400004D")]
		WaitingForResponse,
		[Token(Token = "0x400004E")]
		ERROR,
		[Token(Token = "0x400004F")]
		OK
	}

	[Token(Token = "0x2000011")]
	[CompilerGenerated]
	private sealed class <WebService>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public dreamloPromoCode <>4__this;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000052")]
			[Address(RVA = "0xBB31D8", Offset = "0xBB31D8", VA = "0xBB31D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000054")]
			[Address(RVA = "0xBB3220", Offset = "0xBB3220", VA = "0xBB3220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0xBB2CA8", Offset = "0xBB2CA8", VA = "0xBB2CA8")]
		[DebuggerHidden]
		public <WebService>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0xBB2D74", Offset = "0xBB2D74", VA = "0xBB2D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0xBB2D90", Offset = "0xBB2D90", VA = "0xBB2D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0xBB3128", Offset = "0xBB3128", VA = "0xBB3128")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0xBB31E0", Offset = "0xBB31E0", VA = "0xBB31E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string publicCode;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string value;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string error;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public State state;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xBB2A04", Offset = "0xBB2A04", VA = "0xBB2A04")]
	public static dreamloPromoCode GetSceneDreamloPromoCode()
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBB2B04", Offset = "0xBB2B04", VA = "0xBB2B04")]
	public void RedeemCode(string code)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xBB2C18", Offset = "0xBB2C18", VA = "0xBB2C18")]
	[IteratorStateMachine(typeof(<WebService>d__8))]
	private IEnumerator WebService(string url)
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xBB2CD0", Offset = "0xBB2CD0", VA = "0xBB2CD0")]
	public dreamloPromoCode()
	{
	}
}
[Token(Token = "0x2000012")]
public class Highscores : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[CompilerGenerated]
	private sealed class <UploadNewHighscore>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Highscores <>4__this;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0xBB3878", Offset = "0xBB3878", VA = "0xBB3878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0xBB38C0", Offset = "0xBB38C0", VA = "0xBB38C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0xBB33CC", Offset = "0xBB33CC", VA = "0xBB33CC")]
		[DebuggerHidden]
		public <UploadNewHighscore>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xBB36C4", Offset = "0xBB36C4", VA = "0xBB36C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xBB36C8", Offset = "0xBB36C8", VA = "0xBB36C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0xBB3880", Offset = "0xBB3880", VA = "0xBB3880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[CompilerGenerated]
	private sealed class <DownloadHighscoresFromDatabase>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Highscores <>4__this;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000065")]
			[Address(RVA = "0xBB3A24", Offset = "0xBB3A24", VA = "0xBB3A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0xBB3A6C", Offset = "0xBB3A6C", VA = "0xBB3A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0xBB3468", Offset = "0xBB3468", VA = "0xBB3468")]
		[DebuggerHidden]
		public <DownloadHighscoresFromDatabase>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0xBB38C8", Offset = "0xBB38C8", VA = "0xBB38C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0xBB38CC", Offset = "0xBB38CC", VA = "0xBB38CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xBB3A2C", Offset = "0xBB3A2C", VA = "0xBB3A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000055")]
	private const string privateCode = "O9NkY199c0aBPd4_5HMZugwZW4sjZBDEW8rVuiXGm5aQ";

	[Token(Token = "0x4000056")]
	private const string publicCode = "5f129d52eb36c909c47fde2e";

	[Token(Token = "0x4000057")]
	private const string webURL = "http://dreamlo.com/lb/";

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DisplayHighscores highscoreDisplay;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Highscore[] highscoresList;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Highscores instance;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xBB3228", Offset = "0xBB3228", VA = "0xBB3228")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xBB32B8", Offset = "0xBB32B8", VA = "0xBB32B8")]
	public static void AddNewHighscore(string username, int score)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xBB3334", Offset = "0xBB3334", VA = "0xBB3334")]
	[IteratorStateMachine(typeof(<UploadNewHighscore>d__8))]
	private IEnumerator UploadNewHighscore(string username, int score)
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xBB122C", Offset = "0xBB122C", VA = "0xBB122C")]
	public void DownloadHighscores()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xBB33F4", Offset = "0xBB33F4", VA = "0xBB33F4")]
	[IteratorStateMachine(typeof(<DownloadHighscoresFromDatabase>d__10))]
	private IEnumerator DownloadHighscoresFromDatabase()
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xBB3490", Offset = "0xBB3490", VA = "0xBB3490")]
	private void FormatHighscores(string textStream)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xBB36BC", Offset = "0xBB36BC", VA = "0xBB36BC")]
	public Highscores()
	{
	}
}
[Token(Token = "0x2000015")]
public struct Highscore
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string username;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int score;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xBB3694", Offset = "0xBB3694", VA = "0xBB3694")]
	public Highscore(string _username, int _score)
	{
	}
}
[Token(Token = "0x2000016")]
public class Highscores0 : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <UploadNewHighscore>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0xBB40C4", Offset = "0xBB40C4", VA = "0xBB40C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0xBB410C", Offset = "0xBB410C", VA = "0xBB410C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xBB3C2C", Offset = "0xBB3C2C", VA = "0xBB3C2C")]
		[DebuggerHidden]
		public <UploadNewHighscore>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xBB3F24", Offset = "0xBB3F24", VA = "0xBB3F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xBB3F28", Offset = "0xBB3F28", VA = "0xBB3F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xBB40CC", Offset = "0xBB40CC", VA = "0xBB40CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <DownloadHighscoresFromDatabase>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Highscores0 <>4__this;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000079")]
			[Address(RVA = "0xBB4260", Offset = "0xBB4260", VA = "0xBB4260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007B")]
			[Address(RVA = "0xBB42A8", Offset = "0xBB42A8", VA = "0xBB42A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0xBB3CC8", Offset = "0xBB3CC8", VA = "0xBB3CC8")]
		[DebuggerHidden]
		public <DownloadHighscoresFromDatabase>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0xBB4114", Offset = "0xBB4114", VA = "0xBB4114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xBB4118", Offset = "0xBB4118", VA = "0xBB4118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xBB4268", Offset = "0xBB4268", VA = "0xBB4268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000067")]
	private const string privateCode = "O9NkY199c0aBPd4_5HMZugwZW4sjZBDEW8rVuiXGm5aQ";

	[Token(Token = "0x4000068")]
	private const string publicCode = "5f129d52eb36c909c47fde2e";

	[Token(Token = "0x4000069")]
	private const string webURL = "http://dreamlo.com/lb/";

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Highscore0[] highscoresList;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xBB3A74", Offset = "0xBB3A74", VA = "0xBB3A74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xBB3B3C", Offset = "0xBB3B3C", VA = "0xBB3B3C")]
	public void AddNewHighscore(string username, int score)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xBB3BA8", Offset = "0xBB3BA8", VA = "0xBB3BA8")]
	[IteratorStateMachine(typeof(<UploadNewHighscore>d__6))]
	private IEnumerator UploadNewHighscore(string username, int score)
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xBB3B5C", Offset = "0xBB3B5C", VA = "0xBB3B5C")]
	public void DownloadHighscores()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xBB3C54", Offset = "0xBB3C54", VA = "0xBB3C54")]
	[IteratorStateMachine(typeof(<DownloadHighscoresFromDatabase>d__8))]
	private IEnumerator DownloadHighscoresFromDatabase()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xBB3CF0", Offset = "0xBB3CF0", VA = "0xBB3CF0")]
	private void FormatHighscores(string textStream)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xBB3F1C", Offset = "0xBB3F1C", VA = "0xBB3F1C")]
	public Highscores0()
	{
	}
}
[Token(Token = "0x2000019")]
public struct Highscore0
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string username;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int score;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xBB3EF4", Offset = "0xBB3EF4", VA = "0xBB3EF4")]
	public Highscore0(string _username, int _score)
	{
	}
}
[Token(Token = "0x200001A")]
public class LeaderBoardSample : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	private enum gameState
	{
		[Token(Token = "0x400007F")]
		waiting,
		[Token(Token = "0x4000080")]
		running,
		[Token(Token = "0x4000081")]
		enterscore,
		[Token(Token = "0x4000082")]
		leaderboard
	}

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int totalScore;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playerName;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string code;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private gameState gs;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private dreamloLeaderBoard dl;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private dreamloPromoCode pc;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xBB42B0", Offset = "0xBB42B0", VA = "0xBB42B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xBB42F4", Offset = "0xBB42F4", VA = "0xBB42F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xBB4358", Offset = "0xBB4358", VA = "0xBB4358")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xBB50D0", Offset = "0xBB50D0", VA = "0xBB50D0")]
	public LeaderBoardSample()
	{
	}
}
[Token(Token = "0x200001C")]
public class ButtonInputUI : MonoBehaviour
{
	[Token(Token = "0x200001D")]
	[CompilerGenerated]
	private sealed class <ClearText>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textToCLead;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0xBB5538", Offset = "0xBB5538", VA = "0xBB5538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0xBB5580", Offset = "0xBB5580", VA = "0xBB5580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xBB534C", Offset = "0xBB534C", VA = "0xBB534C")]
		[DebuggerHidden]
		public <ClearText>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0xBB5460", Offset = "0xBB5460", VA = "0xBB5460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0xBB5464", Offset = "0xBB5464", VA = "0xBB5464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0xBB5540", Offset = "0xBB5540", VA = "0xBB5540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text getButtonDownText;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text getButtonText;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text getButtonTimeText;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text getButtonUpText;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xBB5140", Offset = "0xBB5140", VA = "0xBB5140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xBB52D8", Offset = "0xBB52D8", VA = "0xBB52D8")]
	[IteratorStateMachine(typeof(<ClearText>d__5))]
	private IEnumerator ClearText(Text textToCLead)
	{
		return null;
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xBB5374", Offset = "0xBB5374", VA = "0xBB5374")]
	public void SetSwipeIn(bool value)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xBB53C0", Offset = "0xBB53C0", VA = "0xBB53C0")]
	public void SetSwipeOut(bool value)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xBB540C", Offset = "0xBB540C", VA = "0xBB540C")]
	public void setTimePush(bool value)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xBB5458", Offset = "0xBB5458", VA = "0xBB5458")]
	public ButtonInputUI()
	{
	}
}
[Token(Token = "0x200001E")]
public class ButtonUIEvent : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <ClearText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textToCLead;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000096")]
			[Address(RVA = "0xBB58C0", Offset = "0xBB58C0", VA = "0xBB58C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0xBB5908", Offset = "0xBB5908", VA = "0xBB5908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0xBB57B8", Offset = "0xBB57B8", VA = "0xBB57B8")]
		[DebuggerHidden]
		public <ClearText>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0xBB57E8", Offset = "0xBB57E8", VA = "0xBB57E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0xBB57EC", Offset = "0xBB57EC", VA = "0xBB57EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0xBB58C8", Offset = "0xBB58C8", VA = "0xBB58C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text downText;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text pressText;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text pressValueText;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text upText;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xBB5588", Offset = "0xBB5588", VA = "0xBB5588")]
	public void Down()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xBB5670", Offset = "0xBB5670", VA = "0xBB5670")]
	public void Up()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xBB5714", Offset = "0xBB5714", VA = "0xBB5714")]
	public void Press()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xBB5770", Offset = "0xBB5770", VA = "0xBB5770")]
	public void PressValue(float value)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xBB55FC", Offset = "0xBB55FC", VA = "0xBB55FC")]
	[IteratorStateMachine(typeof(<ClearText>d__8))]
	private IEnumerator ClearText(Text textToCLead)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xBB57E0", Offset = "0xBB57E0", VA = "0xBB57E0")]
	public ButtonUIEvent()
	{
	}
}
[Token(Token = "0x2000020")]
public class ControlUIEvent : MonoBehaviour
{
	[Token(Token = "0x2000021")]
	[CompilerGenerated]
	private sealed class <ClearText>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textToCLead;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AD")]
			[Address(RVA = "0xBB60E0", Offset = "0xBB60E0", VA = "0xBB60E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AF")]
			[Address(RVA = "0xBB6128", Offset = "0xBB6128", VA = "0xBB6128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xBB5FD8", Offset = "0xBB5FD8", VA = "0xBB5FD8")]
		[DebuggerHidden]
		public <ClearText>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xBB6008", Offset = "0xBB6008", VA = "0xBB6008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xBB600C", Offset = "0xBB600C", VA = "0xBB600C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xBB60E8", Offset = "0xBB60E8", VA = "0xBB60E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text moveStartText;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moveText;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text moveSpeedText;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text moveEndText;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text touchStartText;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text touchUpText;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text downRightText;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text downDownText;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text downLeftText;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text downUpText;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text rightText;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text downText;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text leftText;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text upText;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isDown;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool isLeft;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool isUp;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private bool isRight;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBB5910", Offset = "0xBB5910", VA = "0xBB5910")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xBB5A6C", Offset = "0xBB5A6C", VA = "0xBB5A6C")]
	public void MoveStart()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBB5B54", Offset = "0xBB5B54", VA = "0xBB5B54")]
	public void Move(Vector2 move)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xBB5B9C", Offset = "0xBB5B9C", VA = "0xBB5B9C")]
	public void MoveSpeed(Vector2 move)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xBB5BE4", Offset = "0xBB5BE4", VA = "0xBB5BE4")]
	public void MoveEnd()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xBB5CC0", Offset = "0xBB5CC0", VA = "0xBB5CC0")]
	public void TouchStart()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xBB5D34", Offset = "0xBB5D34", VA = "0xBB5D34")]
	public void TouchUp()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xBB5DD8", Offset = "0xBB5DD8", VA = "0xBB5DD8")]
	public void DownRight()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBB5E4C", Offset = "0xBB5E4C", VA = "0xBB5E4C")]
	public void DownDown()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xBB5EC0", Offset = "0xBB5EC0", VA = "0xBB5EC0")]
	public void DownLeft()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBB5F34", Offset = "0xBB5F34", VA = "0xBB5F34")]
	public void DownUp()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBB5FA8", Offset = "0xBB5FA8", VA = "0xBB5FA8")]
	public void Right()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBB5FB4", Offset = "0xBB5FB4", VA = "0xBB5FB4")]
	public void Down()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBB5FC0", Offset = "0xBB5FC0", VA = "0xBB5FC0")]
	public void Left()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBB5FCC", Offset = "0xBB5FCC", VA = "0xBB5FCC")]
	public void Up()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xBB5AE0", Offset = "0xBB5AE0", VA = "0xBB5AE0")]
	[IteratorStateMachine(typeof(<ClearText>d__33))]
	private IEnumerator ClearText(Text textToCLead)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xBB6000", Offset = "0xBB6000", VA = "0xBB6000")]
	public ControlUIEvent()
	{
	}
}
[Token(Token = "0x2000022")]
public class ControlUIInput : MonoBehaviour
{
	[Token(Token = "0x2000023")]
	[CompilerGenerated]
	private sealed class <ClearText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textToCLead;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B6")]
			[Address(RVA = "0xBB6664", Offset = "0xBB6664", VA = "0xBB6664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B8")]
			[Address(RVA = "0xBB66AC", Offset = "0xBB66AC", VA = "0xBB66AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xBB655C", Offset = "0xBB655C", VA = "0xBB655C")]
		[DebuggerHidden]
		public <ClearText>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xBB658C", Offset = "0xBB658C", VA = "0xBB658C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xBB6590", Offset = "0xBB6590", VA = "0xBB6590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xBB666C", Offset = "0xBB666C", VA = "0xBB666C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text getAxisText;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text getAxisSpeedText;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text getAxisYText;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text getAxisYSpeedText;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text downRightText;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text downDownText;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text downLeftText;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text downUpText;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text rightText;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text downText;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text leftText;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text upText;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xBB6130", Offset = "0xBB6130", VA = "0xBB6130")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xBB64E8", Offset = "0xBB64E8", VA = "0xBB64E8")]
	[IteratorStateMachine(typeof(<ClearText>d__13))]
	private IEnumerator ClearText(Text textToCLead)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xBB6584", Offset = "0xBB6584", VA = "0xBB6584")]
	public ControlUIInput()
	{
	}
}
[Token(Token = "0x2000024")]
public class DPadParameterUI : MonoBehaviour
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBB66B4", Offset = "0xBB66B4", VA = "0xBB66B4")]
	public void SetClassicalInertia(bool value)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xBB6730", Offset = "0xBB6730", VA = "0xBB6730")]
	public void SetTimePushInertia(bool value)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xBB67AC", Offset = "0xBB67AC", VA = "0xBB67AC")]
	public void SetClassicalTwoAxesCount()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xBB67F4", Offset = "0xBB67F4", VA = "0xBB67F4")]
	public void SetClassicalFourAxesCount()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xBB683C", Offset = "0xBB683C", VA = "0xBB683C")]
	public void SetTimePushTwoAxesCount()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBB6884", Offset = "0xBB6884", VA = "0xBB6884")]
	public void SetTimePushFourAxesCount()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBB68CC", Offset = "0xBB68CC", VA = "0xBB68CC")]
	public DPadParameterUI()
	{
	}
}
[Token(Token = "0x2000025")]
public class FPSPlayerControl : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[CompilerGenerated]
	private sealed class <Flash>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPSPlayerControl <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CC")]
			[Address(RVA = "0xBB73A0", Offset = "0xBB73A0", VA = "0xBB73A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CE")]
			[Address(RVA = "0xBB73E8", Offset = "0xBB73E8", VA = "0xBB73E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xBB727C", Offset = "0xBB727C", VA = "0xBB727C")]
		[DebuggerHidden]
		public <Flash>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xBB72DC", Offset = "0xBB72DC", VA = "0xBB72DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xBB72E0", Offset = "0xBB72E0", VA = "0xBB72E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xBB73A8", Offset = "0xBB73A8", VA = "0xBB73A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[CompilerGenerated]
	private sealed class <Reload>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPSPlayerControl <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0xBB74D4", Offset = "0xBB74D4", VA = "0xBB74D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0xBB751C", Offset = "0xBB751C", VA = "0xBB751C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xBB72A4", Offset = "0xBB72A4", VA = "0xBB72A4")]
		[DebuggerHidden]
		public <Reload>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xBB73F0", Offset = "0xBB73F0", VA = "0xBB73F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xBB73F4", Offset = "0xBB73F4", VA = "0xBB73F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xBB74DC", Offset = "0xBB74DC", VA = "0xBB74DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip gunSound;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip reload;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip needReload;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem shellParticle;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject muzzleEffect;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject impactEffect;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text armoText;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inJump;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float jumpStart;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool inFire;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool inReload;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int armoCount;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioSource;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBB68D4", Offset = "0xBB68D4", VA = "0xBB68D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBB6964", Offset = "0xBB6964", VA = "0xBB6964")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBB710C", Offset = "0xBB710C", VA = "0xBB710C")]
	public void MoveStart()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xBB7164", Offset = "0xBB7164", VA = "0xBB7164")]
	public void MoveStop()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xBB6CF0", Offset = "0xBB6CF0", VA = "0xBB6CF0")]
	public void GunFire()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBB7230", Offset = "0xBB7230", VA = "0xBB7230")]
	public void TouchPadSwipe(bool value)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xBB71BC", Offset = "0xBB71BC", VA = "0xBB71BC")]
	[IteratorStateMachine(typeof(<Flash>d__20))]
	private IEnumerator Flash()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBB7098", Offset = "0xBB7098", VA = "0xBB7098")]
	[IteratorStateMachine(typeof(<Reload>d__21))]
	private IEnumerator Reload()
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBB72CC", Offset = "0xBB72CC", VA = "0xBB72CC")]
	public FPSPlayerControl()
	{
	}
}
[Token(Token = "0x2000028")]
public class ImpactEffect : MonoBehaviour
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBB7524", Offset = "0xBB7524", VA = "0xBB7524")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBB757C", Offset = "0xBB757C", VA = "0xBB757C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBB760C", Offset = "0xBB760C", VA = "0xBB760C")]
	public ImpactEffect()
	{
	}
}
[Token(Token = "0x2000029")]
public class AxisXUi : MonoBehaviour
{
	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xBB7614", Offset = "0xBB7614", VA = "0xBB7614")]
	public void ActivateAxisX(bool value)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBB7660", Offset = "0xBB7660", VA = "0xBB7660")]
	public void InvertedAxisX(bool value)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBB76AC", Offset = "0xBB76AC", VA = "0xBB76AC")]
	public void DeadAxisX(float value)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xBB7700", Offset = "0xBB7700", VA = "0xBB7700")]
	public void SpeedAxisX(float value)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xBB7754", Offset = "0xBB7754", VA = "0xBB7754")]
	public void IsInertiaX(bool value)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xBB77A0", Offset = "0xBB77A0", VA = "0xBB77A0")]
	public void InertiaSpeedX(float value)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xBB77F4", Offset = "0xBB77F4", VA = "0xBB77F4")]
	public void ActivateAxisY(bool value)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xBB7840", Offset = "0xBB7840", VA = "0xBB7840")]
	public void InvertedAxisY(bool value)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xBB788C", Offset = "0xBB788C", VA = "0xBB788C")]
	public void DeadAxisY(float value)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xBB78E0", Offset = "0xBB78E0", VA = "0xBB78E0")]
	public void SpeedAxisY(float value)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xBB7934", Offset = "0xBB7934", VA = "0xBB7934")]
	public void IsInertiaY(bool value)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xBB7980", Offset = "0xBB7980", VA = "0xBB7980")]
	public void InertiaSpeedY(float value)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xBB79D4", Offset = "0xBB79D4", VA = "0xBB79D4")]
	public AxisXUi()
	{
	}
}
[Token(Token = "0x200002A")]
public class LoadLevelScript : MonoBehaviour
{
	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xBB79DC", Offset = "0xBB79DC", VA = "0xBB79DC")]
	public void LoadMainMenu()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xBB7A20", Offset = "0xBB7A20", VA = "0xBB7A20")]
	public void LoadJoystickEvent()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xBB7A64", Offset = "0xBB7A64", VA = "0xBB7A64")]
	public void LoadJoysticParameter()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xBB7AA8", Offset = "0xBB7AA8", VA = "0xBB7AA8")]
	public void LoadDPadEvent()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xBB7AEC", Offset = "0xBB7AEC", VA = "0xBB7AEC")]
	public void LoadDPadClassicalTime()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xBB7B30", Offset = "0xBB7B30", VA = "0xBB7B30")]
	public void LoadTouchPad()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xBB7B74", Offset = "0xBB7B74", VA = "0xBB7B74")]
	public void LoadButton()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xBB7BB8", Offset = "0xBB7BB8", VA = "0xBB7BB8")]
	public void LoadFPS()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xBB7BFC", Offset = "0xBB7BFC", VA = "0xBB7BFC")]
	public LoadLevelScript()
	{
	}
}
[Token(Token = "0x200002B")]
public class TouchPadUIEvent : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	[CompilerGenerated]
	private sealed class <ClearText>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textToCLead;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0xBB7EC8", Offset = "0xBB7EC8", VA = "0xBB7EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0xBB7F10", Offset = "0xBB7F10", VA = "0xBB7F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xBB7DC0", Offset = "0xBB7DC0", VA = "0xBB7DC0")]
		[DebuggerHidden]
		public <ClearText>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xBB7DF0", Offset = "0xBB7DF0", VA = "0xBB7DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xBB7DF4", Offset = "0xBB7DF4", VA = "0xBB7DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xBB7ED0", Offset = "0xBB7ED0", VA = "0xBB7ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text touchDownText;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text touchText;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text touchUpText;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xBB7C04", Offset = "0xBB7C04", VA = "0xBB7C04")]
	public void TouchDown()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xBB7CEC", Offset = "0xBB7CEC", VA = "0xBB7CEC")]
	public void TouchEvt(Vector2 value)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xBB7D34", Offset = "0xBB7D34", VA = "0xBB7D34")]
	public void TouchUp()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xBB7C78", Offset = "0xBB7C78", VA = "0xBB7C78")]
	[IteratorStateMachine(typeof(<ClearText>d__6))]
	private IEnumerator ClearText(Text textToCLead)
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xBB7DE8", Offset = "0xBB7DE8", VA = "0xBB7DE8")]
	public TouchPadUIEvent()
	{
	}
}
[Token(Token = "0x200002D")]
public class SliderText : MonoBehaviour
{
	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xBB7F18", Offset = "0xBB7F18", VA = "0xBB7F18")]
	public void SetText(float value)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xBB7FB8", Offset = "0xBB7FB8", VA = "0xBB7FB8")]
	public SliderText()
	{
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(Camera))]
public class EnableDepthTexture : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera _camera;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xBB7FC0", Offset = "0xBB7FC0", VA = "0xBB7FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xBB8030", Offset = "0xBB8030", VA = "0xBB8030")]
	public EnableDepthTexture()
	{
	}
}
[Token(Token = "0x200002F")]
public class EnviroFogVolumeIntegration : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xBB8038", Offset = "0xBB8038", VA = "0xBB8038")]
	public EnviroFogVolumeIntegration()
	{
	}
}
[Token(Token = "0x2000030")]
[AddComponentMenu("Enviro/Integration/Global Snow")]
public class GlobalSnowIntegration : MonoBehaviour
{
	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xBB8040", Offset = "0xBB8040", VA = "0xBB8040")]
	public GlobalSnowIntegration()
	{
	}
}
[Token(Token = "0x2000031")]
public class EnviroLUXIntegration : MonoBehaviour
{
	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xBB8048", Offset = "0xBB8048", VA = "0xBB8048")]
	public EnviroLUXIntegration()
	{
	}
}
[Token(Token = "0x2000032")]
public class EnviroMegaSplatIntegration : MonoBehaviour
{
	[Token(Token = "0x6000100")]
	[Address(RVA = "0xBB8050", Offset = "0xBB8050", VA = "0xBB8050")]
	public EnviroMegaSplatIntegration()
	{
	}
}
[Token(Token = "0x2000033")]
public class EnviroMicroSplatIntegration : MonoBehaviour
{
	[Token(Token = "0x6000101")]
	[Address(RVA = "0xBB8058", Offset = "0xBB8058", VA = "0xBB8058")]
	public EnviroMicroSplatIntegration()
	{
	}
}
[Token(Token = "0x2000034")]
public class EnviroMirrorPlayer : MonoBehaviour
{
	[Token(Token = "0x6000102")]
	[Address(RVA = "0xBB8060", Offset = "0xBB8060", VA = "0xBB8060")]
	public EnviroMirrorPlayer()
	{
	}
}
[Token(Token = "0x2000035")]
public class EnviroMirrorServer : MonoBehaviour
{
	[Token(Token = "0x6000103")]
	[Address(RVA = "0xBB8068", Offset = "0xBB8068", VA = "0xBB8068")]
	public EnviroMirrorServer()
	{
	}
}
[Token(Token = "0x2000036")]
public class EnviroPhotonIntegration : MonoBehaviour
{
	[Token(Token = "0x6000104")]
	[Address(RVA = "0xBB8070", Offset = "0xBB8070", VA = "0xBB8070")]
	public EnviroPhotonIntegration()
	{
	}
}
[Token(Token = "0x2000037")]
public class EnviroPhotonPlayerAssign : MonoBehaviour
{
	[Token(Token = "0x6000105")]
	[Address(RVA = "0xBB8078", Offset = "0xBB8078", VA = "0xBB8078")]
	public EnviroPhotonPlayerAssign()
	{
	}
}
[Token(Token = "0x2000038")]
public class EnviroRTPIntegration : MonoBehaviour
{
	[Token(Token = "0x6000106")]
	[Address(RVA = "0xBB8080", Offset = "0xBB8080", VA = "0xBB8080")]
	public EnviroRTPIntegration()
	{
	}
}
[Token(Token = "0x2000039")]
public class EnviroUBERIntegration : MonoBehaviour
{
	[Token(Token = "0x6000107")]
	[Address(RVA = "0xBB8088", Offset = "0xBB8088", VA = "0xBB8088")]
	public EnviroUBERIntegration()
	{
	}
}
[Token(Token = "0x200003A")]
public class EnviroUNetPlayer : MonoBehaviour
{
	[Token(Token = "0x6000108")]
	[Address(RVA = "0xBB8090", Offset = "0xBB8090", VA = "0xBB8090")]
	public EnviroUNetPlayer()
	{
	}
}
[Token(Token = "0x200003B")]
public class EnviroUNetServer : MonoBehaviour
{
	[Token(Token = "0x6000109")]
	[Address(RVA = "0xBB8098", Offset = "0xBB8098", VA = "0xBB8098")]
	public EnviroUNetServer()
	{
	}
}
[Token(Token = "0x200003C")]
[AddComponentMenu("Enviro/Integration/VS Pro Integration")]
public class EnviroVegetationStudioPro : MonoBehaviour
{
	[Token(Token = "0x600010A")]
	[Address(RVA = "0xBB80A0", Offset = "0xBB80A0", VA = "0xBB80A0")]
	public EnviroVegetationStudioPro()
	{
	}
}
[Token(Token = "0x200003D")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
public class EnviroPostProcessing : MonoBehaviour
{
	[Token(Token = "0x200003E")]
	public enum SunShaftsResolution
	{
		[Token(Token = "0x40000D9")]
		Low,
		[Token(Token = "0x40000DA")]
		Normal,
		[Token(Token = "0x40000DB")]
		High
	}

	[Token(Token = "0x200003F")]
	public enum ShaftsScreenBlendMode
	{
		[Token(Token = "0x40000DD")]
		Screen,
		[Token(Token = "0x40000DE")]
		Add
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int radialBlurIterations;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material sunShaftsMaterial;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material moonShaftsMaterial;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material simpleSunClearMaterial;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material simpleMoonClearMaterial;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture tempTexture;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xBB80A8", Offset = "0xBB80A8", VA = "0xBB80A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xBB82C0", Offset = "0xBB82C0", VA = "0xBB82C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xBB8150", Offset = "0xBB8150", VA = "0xBB8150")]
	private void CreateMaterialsAndTextures()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xBB8338", Offset = "0xBB8338", VA = "0xBB8338")]
	private void CleanupMaterials()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xBB84A0", Offset = "0xBB84A0", VA = "0xBB84A0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xBB8B50", Offset = "0xBB8B50", VA = "0xBB8B50")]
	private void RenderLightShaft(RenderTexture source, RenderTexture destination, Material mat, Material clearMat, Transform lightSource, Color treshold, Color clr)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xBB9318", Offset = "0xBB9318", VA = "0xBB9318")]
	private void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xBB9690", Offset = "0xBB9690", VA = "0xBB9690")]
	public EnviroPostProcessing()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class EnviroSeasons
{
	[Token(Token = "0x2000041")]
	public enum Seasons
	{
		[Token(Token = "0x40000E3")]
		Spring,
		[Token(Token = "0x40000E4")]
		Summer,
		[Token(Token = "0x40000E5")]
		Autumn,
		[Token(Token = "0x40000E6")]
		Winter
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("When enabled the system will change seasons automaticly when enough days passed.")]
	public bool calcSeasons;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("The current season.")]
	public Seasons currentSeasons;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Seasons lastSeason;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xBB96A0", Offset = "0xBB96A0", VA = "0xBB96A0")]
	public EnviroSeasons()
	{
	}
}
[Serializable]
[Token(Token = "0x2000042")]
public class EnviroLightshafts
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Use sunlight shafts?")]
	public bool sunLightShafts;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[Tooltip("Use moonlight shafts?")]
	public bool moonLightShafts;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xBB96A8", Offset = "0xBB96A8", VA = "0xBB96A8")]
	public EnviroLightshafts()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public class EnviroAudio
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("The prefab with AudioSources used by Enviro. Will be instantiated at runtime.")]
	public GameObject SFXHolderPrefab;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Tooltip("The volume of ambient sounds played by enviro.")]
	public float ambientSFXVolume;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	[Tooltip("The volume of weather sounds played by enviro.")]
	public float weatherSFXVolume;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EnviroAudioSource currentAmbientSource;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float ambientSFXVolumeMod;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float weatherSFXVolumeMod;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceWeather;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceWeather2;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceAmbient;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceAmbient2;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceThunder;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public EnviroAudioSource AudioSourceZone;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xBB96B8", Offset = "0xBB96B8", VA = "0xBB96B8")]
	public EnviroAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x2000044")]
public class EnviroParticleCloud
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem layer1System;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material layer1Material;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem layer2System;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material layer2Material;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xBB96CC", Offset = "0xBB96CC", VA = "0xBB96CC")]
	public EnviroParticleCloud()
	{
	}
}
[Serializable]
[Token(Token = "0x2000045")]
public class EnviroComponents
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("The Enviro sun object.")]
	public GameObject Sun;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The Enviro moon object.")]
	public GameObject Moon;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The directional light for directional sun lighting when using dual mode. Used for sun and moon in single mode.")]
	public Transform DirectLight;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The directional light for directional moon lighting when using the dual mode.")]
	public Transform AdditionalDirectLight;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The Enviro global reflection probe for dynamic reflections.")]
	public EnviroReflectionProbe GlobalReflectionProbe;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Your WindZone that reflect our weather wind settings.")]
	public WindZone windZone;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The Enviro Lighting Flash Component.")]
	public EnviroLightning LightningGenerator;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Link to the object that hold all additional satellites as childs.")]
	public Transform satellites;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Just a transform for stars rotation calculations. ")]
	public Transform starsRotation;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Plane to cast cloud shadows.")]
	public GameObject particleClouds;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xBB96D4", Offset = "0xBB96D4", VA = "0xBB96D4")]
	public EnviroComponents()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class EnviroTime
{
	[Token(Token = "0x2000047")]
	public enum TimeProgressMode
	{
		[Token(Token = "0x4000114")]
		None,
		[Token(Token = "0x4000115")]
		Simulated,
		[Token(Token = "0x4000116")]
		OneDay,
		[Token(Token = "0x4000117")]
		SystemTime
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("None = No time auto time progressing, Simulated = Time calculated with DayLenghtInMinutes, SystemTime = uses your systemTime.")]
	public TimeProgressMode ProgressTime;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(0f, 60f)]
	[Tooltip("Current Time: minutes")]
	public int Seconds;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Current Time: minutes")]
	[Range(0f, 60f)]
	public int Minutes;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 24f)]
	[Tooltip("Current Time: hours")]
	public int Hours;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Current Time: Days")]
	public int Days;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Current Time: Years")]
	public int Years;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("How many days in one year?")]
	public int DaysInYear;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Ful 24h cycle in realtime minutes.")]
	public float cycleLengthInMinutes;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Day lenght modifier.")]
	[Range(0.1f, 10f)]
	public float dayLengthModifier;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Night lenght modifier.")]
	[Range(0.1f, 10f)]
	public float nightLengthModifier;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Time offset for timezones")]
	[Range(-13f, 13f)]
	public int utcOffset;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("-90,  90   Horizontal earth lines")]
	[Range(-90f, 90f)]
	public float Latitude;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-180f, 180f)]
	[Tooltip("-180, 180  Vertical earth line")]
	public float Longitude;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float solarTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float lunarTime;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("This setting will change the timing when system switches from day to night and night to day. It uses the sun position in sky: 0 -> Night, ~0.5 -> Dawn/Dusk, 1 -> Midday.")]
	[Range(0.3f, 0.7f)]
	public float dayNightSwitch;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xBB96DC", Offset = "0xBB96DC", VA = "0xBB96DC")]
	public EnviroTime()
	{
	}
}
[Serializable]
[Token(Token = "0x2000048")]
public class EnviroInteriorZoneSettings
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Color currentInteriorDirectLightMod;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Color currentInteriorAmbientLightMod;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Color currentInteriorAmbientEQLightMod;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Color currentInteriorAmbientGRLightMod;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Color currentInteriorSkyboxMod;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Color currentInteriorFogColorMod;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float currentInteriorFogMod;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float currentInteriorWeatherEffectMod;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public float currentInteriorZoneAudioVolume;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public float currentInteriorZoneAudioFadingSpeed;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xBB9718", Offset = "0xBB9718", VA = "0xBB9718")]
	public EnviroInteriorZoneSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000049")]
public class EnviroSatellite
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Name of this satellite")]
	public string name;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Prefab with model that get instantiated.")]
	public GameObject prefab;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Orbit distance.")]
	public float orbit;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Orbit modification on x axis.")]
	public float xRot;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Orbit modification on y axis.")]
	public float yRot;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xBB972C", Offset = "0xBB972C", VA = "0xBB972C")]
	public EnviroSatellite()
	{
	}
}
[Serializable]
[Token(Token = "0x200004A")]
public class EnviroWeather
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("If disabled the weather will never change.")]
	public bool updateWeather;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EnviroWeatherPreset> weatherPresets;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnviroWeatherPrefab> WeatherPrefabs;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("List of additional zones. Will be updated on startup!")]
	public List<EnviroZone> zones;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnviroWeatherPreset startWeatherPreset;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The current active zone.")]
	public EnviroZone currentActiveZone;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The current active weather conditions.")]
	public EnviroWeatherPrefab currentActiveWeatherPrefab;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EnviroWeatherPreset currentActiveWeatherPreset;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public EnviroWeatherPrefab lastActiveWeatherPrefab;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public EnviroWeatherPreset lastActiveWeatherPreset;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public GameObject VFXHolder;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float wetness;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float curWetness;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float snowStrength;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float curSnowStrength;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int thundersfx;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public EnviroAudioSource currentAudioSource;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool weatherFullyChanged;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public float currentTemperature;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public float temperatureModifier;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xBB9734", Offset = "0xBB9734", VA = "0xBB9734")]
	public EnviroWeather()
	{
	}
}
[Serializable]
[Token(Token = "0x200004B")]
public class EnviroFogging
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public float skyFogStart;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public float skyFogHeight;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float skyFogIntensity;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float skyFogStrength;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float scatteringStrenght;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float sunBlocking;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float moonIntensity;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float hdrpRelativeFogHeight;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xBB9864", Offset = "0xBB9864", VA = "0xBB9864")]
	public EnviroFogging()
	{
	}
}
[Token(Token = "0x200004C")]
public class EnviroCore : MonoBehaviour
{
	[Token(Token = "0x200004D")]
	public enum EnviroStartMode
	{
		[Token(Token = "0x4000198")]
		Started,
		[Token(Token = "0x4000199")]
		Paused,
		[Token(Token = "0x400019A")]
		PausedButTimeProgress
	}

	[Token(Token = "0x200004E")]
	[CompilerGenerated]
	private sealed class <PlayThunderRandom>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroCore <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000162")]
			[Address(RVA = "0xBC0D34", Offset = "0xBC0D34", VA = "0xBC0D34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000164")]
			[Address(RVA = "0xBC0D7C", Offset = "0xBC0D7C", VA = "0xBC0D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0xBC0BA8", Offset = "0xBC0BA8", VA = "0xBC0BA8")]
		[DebuggerHidden]
		public <PlayThunderRandom>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0xBC0BD0", Offset = "0xBC0BD0", VA = "0xBC0BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0xBC0BD4", Offset = "0xBC0BD4", VA = "0xBC0BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xBC0D3C", Offset = "0xBC0D3C", VA = "0xBC0D3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004F")]
	[CompilerGenerated]
	private sealed class <PlayLightningEffect>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroCore <>4__this;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0xBC0EE4", Offset = "0xBC0EE4", VA = "0xBC0EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xBC0F2C", Offset = "0xBC0F2C", VA = "0xBC0F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xBC0D84", Offset = "0xBC0D84", VA = "0xBC0D84")]
		[DebuggerHidden]
		public <PlayLightningEffect>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xBC0DAC", Offset = "0xBC0DAC", VA = "0xBC0DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xBC0DB0", Offset = "0xBC0DB0", VA = "0xBC0DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xBC0EEC", Offset = "0xBC0EEC", VA = "0xBC0EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Profile")]
	public EnviroProfile profile;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool profileLoaded;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Assign your player gameObject here. Required Field! or enable AssignInRuntime!")]
	public GameObject Player;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Assign your main camera here. Required Field! or enable AssignInRuntime!")]
	public Camera PlayerCamera;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("If enabled Enviro will search for your Player and Camera by Tag!")]
	public bool AssignInRuntime;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Your Player Tag")]
	public string PlayerTag;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Your CameraTag")]
	public string CameraTag;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Enables enviro tonemapping. Disable that one later and use a third party tonemapping effect for best results!")]
	public bool tonemapping;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public EnviroStartMode startMode;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool started;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool serverMode;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public EnviroWeatherCloudsConfig cloudsConfig;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float thunder;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool isNight;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<GameObject> satellites;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public List<GameObject> satellitesRotation;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public List<EnviroVegetationInstance> EnviroVegetationInstances;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public EnviroLightSettings lightSettings;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public EnviroVolumeLightingSettings volumeLightSettings;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public EnviroSkySettings skySettings;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public EnviroReflectionSettings reflectionSettings;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public EnviroCloudSettings cloudsSettings;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public EnviroWeatherSettings weatherSettings;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public EnviroFogSettings fogSettings;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public EnviroLightShaftsSettings lightshaftsSettings;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public EnviroSeasonSettings seasonsSettings;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public EnviroAudioSettings audioSettings;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public EnviroSatellitesSettings satelliteSettings;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public EnviroQualitySettings qualitySettings;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public EnviroInteriorZoneSettings interiorZoneSettings;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public EnviroDistanceBlurSettings distanceBlurSettings;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public EnviroAuroraSettings auroraSettings;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public DateTime dateTime;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public float internalHour;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public float currentHour;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public float currentDay;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public float currentYear;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public double currentTimeInHours;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public float LST;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[HideInInspector]
	public float lastHourUpdate;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public float hourTime;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	public Vector3 cloudAnim;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public Vector2 cloudFlatBaseAnim;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public Vector2 cloudFlatDetailAnim;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public Vector2 cloudAnimNonScaled;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public Vector2 cirrusAnim;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public float windIntensity;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public float shadowIntensityMod;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public bool interiorMode;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public EnviroInterior lastInteriorZone;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public bool updateFogDensity;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[HideInInspector]
	public Color customFogColor;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[HideInInspector]
	public float customFogIntensity;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public Color currentWeatherSkyMod;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public Color currentWeatherLightMod;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public Color currentWeatherFogMod;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Range(-2f, 2f)]
	[HideInInspector]
	public float customMoonPhase;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Light MainLight;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Light AdditionalLight;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform MoonTransform;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[HideInInspector]
	public float lastAmbientSkyUpdate;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	public double lastRelfectionUpdate;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[HideInInspector]
	public Vector3 lastRelfectionPositionUpdate;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	public GameObject EffectsHolder;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public ParticleSystem lightningEffect;

	[Token(Token = "0x4000184")]
	public const float pi = (float)Math.PI;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 K;

	[Token(Token = "0x4000186")]
	private const float n = 1.0003f;

	[Token(Token = "0x4000187")]
	private const float N = 2.545E+25f;

	[Token(Token = "0x4000188")]
	private const float pn = 0.035f;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public EnviroTime GameTime;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public EnviroAudio Audio;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public EnviroWeather Weather;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public EnviroSeasons Seasons;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public EnviroComponents Components;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public EnviroFogging Fog;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public EnviroLightshafts LightShafts;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public EnviroParticleCloud particleClouds;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public EnviroPostProcessing EnviroPostProcessing;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[Header("Layer Setup")]
	[Tooltip("This is the layer id forfor the moon.")]
	public int moonRenderingLayer;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	[Tooltip("This is the layer id for additional satellites like moons, planets.")]
	public int satelliteRenderingLayer;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[Tooltip("Activate to set recommended maincamera clear flag.")]
	public bool setCameraClearFlags;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	[HideInInspector]
	public int frames;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[HideInInspector]
	public int lightingUpdateEachFrames;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xBB9884", Offset = "0xBB9884", VA = "0xBB9884")]
	public void UpdateEnviroment()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xBB9A50", Offset = "0xBB9A50", VA = "0xBB9A50")]
	public void PlayAmbient(AudioClip sfx)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xBB9C2C", Offset = "0xBB9C2C", VA = "0xBB9C2C")]
	public void TryPlayAmbientSFX()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xBB9FBC", Offset = "0xBB9FBC", VA = "0xBB9FBC")]
	public void CreateWeatherEffectHolder(string name)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xBBA1B0", Offset = "0xBBA1B0", VA = "0xBBA1B0")]
	public void CreateEffects(string name)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xBBA444", Offset = "0xBBA444", VA = "0xBBA444")]
	public Transform CreateDirectionalLight(bool additional)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xBBA584", Offset = "0xBBA584", VA = "0xBBA584")]
	public Vector3 BetaRay(Vector3 waveLength)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xBBA640", Offset = "0xBBA640", VA = "0xBBA640")]
	public Vector3 BetaMie(float turbidity, Vector3 waveLength)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xBBA6C4", Offset = "0xBBA6C4", VA = "0xBBA6C4")]
	public Vector3 GetMieG(float g)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xBBA6EC", Offset = "0xBBA6EC", VA = "0xBBA6EC")]
	public Vector3 GetMieGScene(float g)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xBBA714", Offset = "0xBBA714", VA = "0xBBA714")]
	public void UpdateTime(int daysInYear)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xBBAC00", Offset = "0xBBAC00", VA = "0xBBAC00")]
	public void SetInternalTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xBBA9AC", Offset = "0xBBA9AC", VA = "0xBBA9AC")]
	public void SetGameTime()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xBBAAE0", Offset = "0xBBAAE0", VA = "0xBBAAE0")]
	public void SetTime(DateTime date)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xBBAC50", Offset = "0xBBAC50", VA = "0xBBAC50")]
	public void ResetHourEventTimer()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xBBA958", Offset = "0xBBA958", VA = "0xBBA958")]
	public void SetTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xBBAC5C", Offset = "0xBBAC5C", VA = "0xBBAC5C")]
	public void SetInternalTimeOfDay(float inHours)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xBBACE4", Offset = "0xBBACE4", VA = "0xBBACE4")]
	public string GetTimeStringWithSeconds()
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xBBADBC", Offset = "0xBBADBC", VA = "0xBBADBC")]
	public string GetTimeString()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBBAE68", Offset = "0xBBAE68", VA = "0xBBAE68")]
	public DateTime CreateSystemDate()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xBBAEC8", Offset = "0xBBAEC8", VA = "0xBBAEC8")]
	public float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xBBAEE4", Offset = "0xBBAEE4", VA = "0xBBAEE4")]
	public Vector3 OrbitalToLocal(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBBAF3C", Offset = "0xBBAF3C", VA = "0xBBAF3C")]
	public void CalculateSunPosition(float d, float ecl, bool simpleMoon)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xBBB380", Offset = "0xBBB380", VA = "0xBBB380")]
	public void CalculateMoonPosition(float d, float ecl)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xBBB6F4", Offset = "0xBBB6F4", VA = "0xBBB6F4")]
	public Vector3 UpdateSatellitePosition(float orbit, float orbit2, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xBBB8E8", Offset = "0xBBB8E8", VA = "0xBBB8E8")]
	public void CalculateStarsPosition(float siderealTime)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBBBA98", Offset = "0xBBBA98", VA = "0xBBBA98")]
	public void UpdateSunAndMoonPosition()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBBB358", Offset = "0xBBB358", VA = "0xBBB358")]
	public float GetUniversalTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBBBC3C", Offset = "0xBBBC3C", VA = "0xBBBC3C")]
	public float GetTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBBABDC", Offset = "0xBBABDC", VA = "0xBBABDC")]
	public double GetInHours(float hours, float days, float years, int daysInYear)
	{
		return default(double);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBB9990", Offset = "0xBB9990", VA = "0xBB9990")]
	public void UpdateSeason()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xBBBC44", Offset = "0xBBBC44", VA = "0xBBBC44")]
	public void ChangeSeason(EnviroSeasons.Seasons season)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xBBBCA4", Offset = "0xBBBCA4", VA = "0xBBBCA4")]
	public void ApplyProfile(EnviroProfile p)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xBBC024", Offset = "0xBBC024", VA = "0xBBC024")]
	public void SaveProfile()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBBC3D0", Offset = "0xBBC3D0", VA = "0xBBC3D0")]
	public void UpdateReflections()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBBCA60", Offset = "0xBBCA60", VA = "0xBBCA60")]
	public void UpdateAmbientLight()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xBBCEBC", Offset = "0xBBCEBC", VA = "0xBBCEBC")]
	public void CalculateDirectLight()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xBBD7D4", Offset = "0xBBD7D4", VA = "0xBBD7D4")]
	public void UpdateSceneView()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBBD908", Offset = "0xBBD908", VA = "0xBBD908")]
	public void UpdateWind(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBBDF1C", Offset = "0xBBDF1C", VA = "0xBBDF1C")]
	public int GetActiveWeatherID()
	{
		return default(int);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBBE00C", Offset = "0xBBE00C", VA = "0xBBE00C")]
	public void UpdateWeatherVariables(EnviroWeatherPreset p)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBBE298", Offset = "0xBBE298", VA = "0xBBE298")]
	[IteratorStateMachine(typeof(<PlayThunderRandom>d__126))]
	public IEnumerator PlayThunderRandom()
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBBE30C", Offset = "0xBBE30C", VA = "0xBBE30C")]
	[IteratorStateMachine(typeof(<PlayLightningEffect>d__127))]
	public IEnumerator PlayLightningEffect(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBBE3A4", Offset = "0xBBE3A4", VA = "0xBBE3A4")]
	public void PlayLightning()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBBE550", Offset = "0xBBE550", VA = "0xBBE550")]
	public void ForceWeatherUpdate()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBBE6C0", Offset = "0xBBE6C0", VA = "0xBBE6C0")]
	public void CalcWeatherTransitionState()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBBE83C", Offset = "0xBBE83C", VA = "0xBBE83C")]
	public void SetWeatherOverwrite(int weatherId)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBBE9FC", Offset = "0xBBE9FC", VA = "0xBBE9FC")]
	public void SetWeatherOverwrite(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBBEBE4", Offset = "0xBBEBE4", VA = "0xBBEBE4")]
	public void ChangeWeather(int weatherId)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBBED7C", Offset = "0xBBED7C", VA = "0xBBED7C")]
	public void ChangeWeather(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBBEF28", Offset = "0xBBEF28", VA = "0xBBEF28")]
	public void ChangeWeather(string weatherName)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBBF0A4", Offset = "0xBBF0A4", VA = "0xBBF0A4")]
	public void UpdateAudioSource(EnviroWeatherPreset i)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xBBF340", Offset = "0xBBF340", VA = "0xBBF340")]
	public void RegisterZone(EnviroZone zoneToAdd)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBBF3F8", Offset = "0xBBF3F8", VA = "0xBBF3F8")]
	public void EnterZone(EnviroZone zone)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBBF414", Offset = "0xBBF414", VA = "0xBBF414")]
	public void ExitZone()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xBBF418", Offset = "0xBBF418", VA = "0xBBF418")]
	public void UpdateParticleClouds(bool active)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBBFAD4", Offset = "0xBBFAD4", VA = "0xBBFAD4")]
	public void CreateSatellite(int id)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBBFDCC", Offset = "0xBBFDCC", VA = "0xBBFDCC")]
	public void CheckSatellites()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBBFF88", Offset = "0xBBFF88", VA = "0xBBFF88")]
	public void CalculateSatPositions(float siderealTime)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBC023C", Offset = "0xBC023C", VA = "0xBC023C")]
	public void SetCameraHDR(Camera cam, bool hdr)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBC0258", Offset = "0xBC0258", VA = "0xBC0258")]
	public bool GetCameraHDR(Camera cam)
	{
		return default(bool);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBC0270", Offset = "0xBC0270", VA = "0xBC0270")]
	private Quaternion LightLookAt(Quaternion inputRotation, Quaternion newRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBC0304", Offset = "0xBC0304", VA = "0xBC0304")]
	public int RegisterMe(EnviroVegetationInstance me)
	{
		return default(int);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBC03D0", Offset = "0xBC03D0", VA = "0xBC03D0")]
	public void Save()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBC0550", Offset = "0xBC0550", VA = "0xBC0550")]
	public void Load()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBC0674", Offset = "0xBC0674", VA = "0xBC0674")]
	public EnviroCore()
	{
	}
}
[Token(Token = "0x2000050")]
public class EnviroEvents : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000051")]
	public class EnviroActionEvent : UnityEvent
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0xBC21D0", Offset = "0xBC21D0", VA = "0xBC21D0")]
		public EnviroActionEvent()
		{
		}
	}

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroActionEvent onHourPassedActions;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroActionEvent onDayPassedActions;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroActionEvent onYearPassedActions;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnviroActionEvent onWeatherChangedActions;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnviroActionEvent onSeasonChangedActions;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnviroActionEvent onNightActions;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EnviroActionEvent onDayActions;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EnviroActionEvent onZoneChangedActions;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBC0F34", Offset = "0xBC0F34", VA = "0xBC0F34")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBC1F64", Offset = "0xBC1F64", VA = "0xBC1F64")]
	private void HourPassed()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBC1F80", Offset = "0xBC1F80", VA = "0xBC1F80")]
	private void DayPassed()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xBC1F9C", Offset = "0xBC1F9C", VA = "0xBC1F9C")]
	private void YearPassed()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBC1FB8", Offset = "0xBC1FB8", VA = "0xBC1FB8")]
	private void WeatherChanged()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBC1FD4", Offset = "0xBC1FD4", VA = "0xBC1FD4")]
	private void SeasonsChanged()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBC1FF0", Offset = "0xBC1FF0", VA = "0xBC1FF0")]
	private void NightTime()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBC200C", Offset = "0xBC200C", VA = "0xBC200C")]
	private void DayTime()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBC2028", Offset = "0xBC2028", VA = "0xBC2028")]
	private void ZoneChanged()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBC2044", Offset = "0xBC2044", VA = "0xBC2044")]
	public EnviroEvents()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public class EnviroQualitySettings
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Modifies the amount of particles used in weather effects.")]
	[Range(0f, 1f)]
	public float GlobalParticleEmissionRates;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("How often Enviro Growth Instances should be updated. Lower value = smoother growth and more frequent updates but more perfomance hungry!")]
	public float UpdateInterval;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xBC22B8", Offset = "0xBC22B8", VA = "0xBC22B8")]
	public EnviroQualitySettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000053")]
public class EnviroSatelliteVariables
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Name of this satellite")]
	public string name;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Prefab with model that get instantiated.")]
	public GameObject prefab;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("This value will influence the satellite orbitpositions.")]
	public float orbit_X;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This value will influence the satellite orbitpositions.")]
	public float orbit_Y;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The speed of the satellites orbit.")]
	public float speed;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xBC22CC", Offset = "0xBC22CC", VA = "0xBC22CC")]
	public EnviroSatelliteVariables()
	{
	}
}
[Serializable]
[Token(Token = "0x2000054")]
public class EnviroSeasonSettings
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Start Day of Year for Spring")]
	[Header("Spring")]
	[Range(0f, 366f)]
	public int SpringStart;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(0f, 366f)]
	[Tooltip("End Day of Year for Spring")]
	public int SpringEnd;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Base Temperature in Spring")]
	public AnimationCurve springBaseTemperature;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Start Day of Year for Summer")]
	[Header("Summer")]
	[Range(0f, 366f)]
	public int SummerStart;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("End Day of Year for Summer")]
	[Range(0f, 366f)]
	public int SummerEnd;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Base Temperature in Summer")]
	public AnimationCurve summerBaseTemperature;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Autumn")]
	[Range(0f, 366f)]
	[Tooltip("Start Day of Year for Autumn")]
	public int AutumnStart;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 366f)]
	[Tooltip("End Day of Year for Autumn")]
	public int AutumnEnd;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Base Temperature in Autumn")]
	public AnimationCurve autumnBaseTemperature;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Winter")]
	[Tooltip("Start Day of Year for Winter")]
	[Range(0f, 366f)]
	public int WinterStart;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("End Day of Year for Winter")]
	[Range(0f, 366f)]
	public int WinterEnd;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Base Temperature in Winter")]
	public AnimationCurve winterBaseTemperature;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xBC22D4", Offset = "0xBC22D4", VA = "0xBC22D4")]
	public EnviroSeasonSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class EnviroWeatherSettings
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Zones Setup:")]
	[Tooltip("Tag for zone triggers. Create and assign a tag to this gameObject")]
	public bool useTag;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Header("Weather Transition Settings:")]
	[Tooltip("Defines the speed of wetness will raise when it is raining.")]
	public float wetnessAccumulationSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Defines the speed of wetness will dry when it is not raining.")]
	public float wetnessDryingSpeed;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Defines the speed of snow will raise when it is snowing.")]
	public float snowAccumulationSpeed;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Defines the speed of snow will meld when it is not snowing.")]
	public float snowMeltingSpeed;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Defines the temperature when snow starts to melt.")]
	public float snowMeltingTresholdTemperature;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Defines the speed of clouds will change when weather conditions changed.")]
	public float cloudTransitionSpeed;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Defines the speed of fog will change when weather conditions changed.")]
	public float fogTransitionSpeed;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Defines the speed of wind intensity will change when weather conditions changed.")]
	public float windIntensityTransitionSpeed;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Defines the speed of particle effects will change when weather conditions changed.")]
	public float effectTransitionSpeed;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Defines the speed of sfx will fade in and out when weather conditions changed.")]
	public float audioTransitionSpeed;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Lightning Effect:")]
	public GameObject lightningEffect;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(500f, 10000f)]
	public float lightningRange;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(500f, 5000f)]
	public float lightningHeight;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Defines the speed of temperature changes.")]
	[Header("Temperature:")]
	public float temperatureChangingSpeed;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xBC2404", Offset = "0xBC2404", VA = "0xBC2404")]
	public EnviroWeatherSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000056")]
public class EnviroSkySettings
{
	[Token(Token = "0x2000057")]
	public enum SunAndMoonCalc
	{
		[Token(Token = "0x40001F8")]
		Simple,
		[Token(Token = "0x40001F9")]
		Realistic
	}

	[Token(Token = "0x2000058")]
	public enum MoonPhases
	{
		[Token(Token = "0x40001FB")]
		Custom,
		[Token(Token = "0x40001FC")]
		Realistic
	}

	[Token(Token = "0x2000059")]
	public enum SkyboxModi
	{
		[Token(Token = "0x40001FE")]
		Default,
		[Token(Token = "0x40001FF")]
		Simple,
		[Token(Token = "0x4000200")]
		CustomSkybox,
		[Token(Token = "0x4000201")]
		CustomColor
	}

	[Token(Token = "0x200005A")]
	public enum SkyboxModiLW
	{
		[Token(Token = "0x4000203")]
		Simple,
		[Token(Token = "0x4000204")]
		CustomSkybox,
		[Token(Token = "0x4000205")]
		CustomColor
	}

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Select if you want to use enviro skybox your custom material.")]
	[Header("Sky Mode:")]
	public SkyboxModi skyboxMode;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Select if you want to use enviro skybox your custom material.")]
	public SkyboxModiLW skyboxModeLW;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("If SkyboxMode == CustomSkybox : Assign your skybox material here!")]
	public Material customSkyboxMaterial;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If SkyboxMode == CustomColor : Select your sky color here!")]
	public Color customSkyboxColor;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Enable to render black skybox at ground level.")]
	public bool blackGroundMode;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Scattering")]
	[Tooltip("Light Wavelength used for atmospheric scattering. Keep it near defaults for earthlike atmospheres, or change for alien or fantasy atmospheres for example.")]
	public Vector3 waveLength;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Influence atmospheric scattering.")]
	public float rayleigh;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Sky turbidity. Particle in air. Influence atmospheric scattering.")]
	public float turbidity;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Influence scattering near sun.")]
	public float mie;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Influence scattering near sun.")]
	public float g;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Intensity gradient for atmospheric scattering. Influence atmospheric scattering based on current sun altitude.")]
	public AnimationCurve scatteringCurve;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Color gradient for atmospheric scattering. Influence atmospheric scattering based on current sun altitude.")]
	public Gradient scatteringColor;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Sun")]
	public SunAndMoonCalc sunAndMoonPosition;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Intensity of Sun Influence Scale and Dropoff of sundisk.")]
	public float sunIntensity;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Scale of rendered sundisk.")]
	public float sunDiskScale;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Intenisty of rendered sundisk.")]
	public float sunDiskIntensity;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Color gradient for sundisk. Influence sundisk color based on current sun altitude")]
	[GradientUsage(true)]
	public Gradient sunDiskColor;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Top color of simple skybox.")]
	public Gradient simpleSkyColor;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Horizon color of simple skybox.")]
	public Gradient simpleHorizonColor;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Horizon color of opposite side of sun.")]
	public Gradient simpleHorizonBackColor;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Sun color of simple skybox.")]
	public Gradient simpleSunColor;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Ground color of simple skybox.")]
	public Color simpleGroundColor;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Size of sun in simple skybox mode.")]
	public AnimationCurve simpleSunDiskSize;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Whether to render the moon.")]
	[Header("Moon")]
	public bool renderMoon;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Tooltip("The Moon phase mode. Custom = for customizable phase.")]
	public MoonPhases moonPhaseMode;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("The Moon texture.")]
	public Texture moonTexture;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("The Moon's Glow texture.")]
	public Texture glowTexture;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("The color of the moon")]
	public Color moonColor;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Range(0f, 5f)]
	[Tooltip("Brightness of the moon.")]
	public float moonBrightness;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("Size of the moon.")]
	[Range(0f, 20f)]
	public float moonSize;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("Size of the moon glowing effect.")]
	[Range(0f, 20f)]
	public float glowSize;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Glow around moon.")]
	public AnimationCurve moonGlow;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Glow color around moon.")]
	public Color moonGlowColor;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("Higher values = brighter sky.")]
	[Header("Sky Color Corrections")]
	public AnimationCurve skyLuminence;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Tooltip("Higher values = stronger colors applied BEFORE clouds rendered!")]
	public AnimationCurve skyColorPower;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Tonemapping")]
	[Tooltip("Sky exposure when using Enviro Tonemapping option in Rendering Setup.")]
	public float skyExposure;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("A cubemap for night sky.")]
	[Header("Stars")]
	public Cubemap starsCubeMap;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Tooltip("Intensity of stars based on time of day.")]
	public AnimationCurve starsIntensity;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Range(0f, 10f)]
	[Tooltip("Stars Twinkling Speed")]
	public float starsTwinklingRate;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Galaxy")]
	[Tooltip("A cubemap for night galaxy.")]
	public Cubemap galaxyCubeMap;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Tooltip("Intensity of galaxy based on time of day.")]
	public AnimationCurve galaxyIntensity;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Range(0f, 1f)]
	[Header("Sky Dithering")]
	public float dithering;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[Tooltip("HDRP only. Set sky type to EnviroSkybox on start.")]
	public bool setEnviroSkybox;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBC2448", Offset = "0xBC2448", VA = "0xBC2448")]
	public EnviroSkySettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class EnviroSatellitesSettings
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("List of satellites.")]
	public List<EnviroSatellite> additionalSatellites;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBC2638", Offset = "0xBC2638", VA = "0xBC2638")]
	public EnviroSatellitesSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200005C")]
public class EnviroReflectionSettings
{
	[Token(Token = "0x200005D")]
	public enum GlobalReflectionResolution
	{
		[Token(Token = "0x4000215")]
		R16,
		[Token(Token = "0x4000216")]
		R32,
		[Token(Token = "0x4000217")]
		R64,
		[Token(Token = "0x4000218")]
		R128,
		[Token(Token = "0x4000219")]
		R256,
		[Token(Token = "0x400021A")]
		R512,
		[Token(Token = "0x400021B")]
		R1024,
		[Token(Token = "0x400021C")]
		R2048
	}

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Enable/disable enviro reflection probe..")]
	[Header("Global Reflections Settings")]
	public bool globalReflections;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[Tooltip("Enable/disable if enviro reflection probe should render in custom mode to support clouds and other enviro effects.")]
	[Header("Global Reflections Custom Rendering")]
	public bool globalReflectionCustomRendering;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[Tooltip("Enable/disable if enviro reflection probe should render with fog.")]
	public bool globalReflectionUseFog;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	[Tooltip("Set if enviro reflection probe should update faces individual on different frames.")]
	public bool globalReflectionTimeSlicing;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Header("Global Reflections Updates Settings")]
	[Tooltip("Enable/disable enviro reflection probe updates based on gametime changes..")]
	public bool globalReflectionsUpdateOnGameTime;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[Tooltip("Enable/disable enviro reflection probe updates based on transform position changes..")]
	public bool globalReflectionsUpdateOnPosition;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Reflection probe intensity.")]
	[Range(0f, 2f)]
	public float globalReflectionsIntensity;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Reflection probe update rate based on game time.")]
	public float globalReflectionsTimeTreshold;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Reflection probe update rate based on camera position.")]
	public float globalReflectionsPositionTreshold;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Reflection probe scale. Increase that one to increase the area where reflection probe will influence your scene.")]
	[Range(0.1f, 10f)]
	public float globalReflectionsScale;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Reflection probe resolution.")]
	public GlobalReflectionResolution globalReflectionResolution;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Reflection probe rendered Layers.")]
	public LayerMask globalReflectionLayers;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Set the quality of clouds in reflection rendering. Leave empty to use global settings.")]
	public EnviroVolumeCloudsQuality reflectionCloudsQuality;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xBC26C0", Offset = "0xBC26C0", VA = "0xBC26C0")]
	public EnviroReflectionSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class EnviroLightSettings
{
	[Token(Token = "0x200005F")]
	public enum LightingMode
	{
		[Token(Token = "0x4000230")]
		Single,
		[Token(Token = "0x4000231")]
		Dual
	}

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Direct")]
	[Tooltip("Whether you want to use two direcitonal lights for sun and moon or only one that will switch. Dual mode can be expensive in complex scenes!")]
	public LightingMode directionalLightMode;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Color gradient for sun and moon light based on sun position in sky.")]
	[GradientUsage(true)]
	public Gradient LightColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Direct light sun intensity based on sun position in sky")]
	public AnimationCurve directLightSunIntensity;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Direct light moon intensity based on moon position in sky")]
	public AnimationCurve directLightMoonIntensity;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Set the speed of how fast light intensity will update.")]
	[Range(0.01f, 10f)]
	public float lightIntensityTransitionSpeed;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Realtime shadow strength of the directional light.")]
	public AnimationCurve shadowIntensity;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 5000f)]
	[Tooltip("Direct lighting y-offset.")]
	public float directLightAngleOffset;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Ambient")]
	[Tooltip("Ambient Rendering Mode.")]
	public AmbientMode ambientMode;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Ambientlight intensity based on sun position in sky.")]
	public AnimationCurve ambientIntensity;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[GradientUsage(true)]
	[Tooltip("Ambientlight sky color based on sun position in sky.")]
	public Gradient ambientSkyColor;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[GradientUsage(true)]
	[Tooltip("Ambientlight Equator color based on sun position in sky.")]
	public Gradient ambientEquatorColor;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Ambientlight Ground color based on sun position in sky.")]
	[GradientUsage(true)]
	public Gradient ambientGroundColor;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Activate to stop the rotation of sun and moon at 'rotationStopHigh' sun/moon altitude in sky.")]
	public bool stopRotationAtHigh;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 1f)]
	[Tooltip("The altitude of sun/moon in sky (Same as 'DayNightSwitch' or the evaluatation of gradients.")]
	public float rotationStopHigh;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Set fixed exposure for your scene.")]
	[Range(0f, 20f)]
	public float exposure;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Enable this to control the scene exposure with Enviro. Otherwise check the Enviro - Post Processing Volume.")]
	public bool controlSceneExposure;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("set sky and indirect lighting exposure.")]
	[Range(0f, 20f)]
	public float skyExposure;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("Set directional light exposure.")]
	[Range(0f, 20f)]
	public float lightExposure;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xBC26F0", Offset = "0xBC26F0", VA = "0xBC26F0")]
	public EnviroLightSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class EnviroDistanceBlurSettings
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool antiFlicker;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool highQuality;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(1f, 7f)]
	public float radius;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xBC2818", Offset = "0xBC2818", VA = "0xBC2818")]
	public EnviroDistanceBlurSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000061")]
public class EnviroFogSettings
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Unity's fog mode.")]
	[Header("Mode")]
	public FogMode Fogmode;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Simple fog = just plain color without scattering.")]
	public bool useSimpleFog;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[Tooltip("Use Unity Forward Rendering Fog.")]
	public bool useUnityFog;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[Tooltip("Use distance fog?")]
	[Header("Distance Fog")]
	public bool distanceFog;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	[Tooltip("Use radial distance fog?")]
	public bool useRadialDistance;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The distance where fog starts.")]
	public float startDistance;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The intensity of distance fog.")]
	[Range(0f, 10f)]
	public float distanceFogIntensity;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	[Tooltip("The maximum density of fog.")]
	public float maximumFogDensity;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Use heightbased fog?")]
	[Header("Height Fog")]
	public bool heightFog;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The height of heightbased fog.")]
	public float height;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The intensity of heightbased fog.")]
	[Range(0f, 1f)]
	public float heightFogIntensity;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float heightDensity;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	[Tooltip("The noise intensity of height based fog.")]
	[Header("Height Fog Noise")]
	public float noiseIntensity;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	[Tooltip("The noise intensity offset of height based fog.")]
	public float noiseIntensityOffset;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("The noise scaling of height based fog.")]
	[Range(0f, 0.1f)]
	public float noiseScale;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The speed and direction of height based fog.")]
	public Vector2 noiseVelocity;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Influence scattering near sun.")]
	public float mie;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Influence scattering near sun.")]
	public float g;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Fog Dithering")]
	[Range(0f, 1f)]
	public float fogDithering;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Color gradient for Top Fog")]
	[GradientUsage(true)]
	public Gradient simpleFogColor;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float skyFogIntensity;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Fog tonemapping exposure when using the enviro tonemapper.")]
	public float fogExposure;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useEnviroGroundFog;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool useHDRPFog;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xBC2830", Offset = "0xBC2830", VA = "0xBC2830")]
	public EnviroFogSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000062")]
public class EnviroVolumeLightingSettings
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Downsampling of volume light rendering.")]
	public EnviroSkyRendering.VolumtericResolution Resolution;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Activate or deactivate directional volume light rendering.")]
	public bool dirVolumeLighting;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Quality")]
	[Range(1f, 64f)]
	public int SampleCount;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Light Settings")]
	public AnimationCurve ScatteringCoef;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.1f)]
	public float ExtinctionCoef;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 0.999f)]
	public float Anistropy;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxRayLength;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("3D Noise")]
	[Tooltip("Use 3D noise for directional lighting. Attention: Expensive operation for directional lights with high sample count!")]
	public bool directLightNoise;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	[Tooltip("The noise intensity volume lighting.")]
	public float noiseIntensity;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("The noise intensity offset of volume lighting.")]
	[Range(0f, 1f)]
	public float noiseIntensityOffset;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.1f)]
	[Tooltip("The noise scaling of volume lighting.")]
	public float noiseScale;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The speed and direction of volume lighting.")]
	public Vector2 noiseVelocity;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xBC28A0", Offset = "0xBC28A0", VA = "0xBC28A0")]
	public EnviroVolumeLightingSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class EnviroLightShaftsSettings
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Quality Settings")]
	[Tooltip("Lightshafts resolution quality setting.")]
	public EnviroPostProcessing.SunShaftsResolution resolution;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Lightshafts blur mode.")]
	public EnviroPostProcessing.ShaftsScreenBlendMode screenBlendMode;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Use cameras depth to hide lightshafts?")]
	public bool useDepthTexture;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color gradient for lightshafts based on sun position.")]
	[Header("Intensity Settings")]
	public Gradient lightShaftsColorSun;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Color gradient for lightshafts based on moon position.")]
	public Gradient lightShaftsColorMoon;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Treshhold gradient for lightshafts based on sun position. This will influence lightshafts intensity!")]
	public Gradient thresholdColorSun;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Treshhold gradient for lightshafts based on moon position. This will influence lightshafts intensity!")]
	public Gradient thresholdColorMoon;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Radius of blurring applied.")]
	public float blurRadius;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Global Lightshafts intensity.")]
	public float intensity;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Lightshafts maximum radius.")]
	public float maxRadius;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xBC2964", Offset = "0xBC2964", VA = "0xBC2964")]
	public EnviroLightShaftsSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class EnviroAudioSettings
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("A list of all possible thunder audio effects.")]
	public List<AudioClip> ThunderSFX;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xBC298C", Offset = "0xBC298C", VA = "0xBC298C")]
	public EnviroAudioSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class EnviroCloudSettings
{
	[Token(Token = "0x2000066")]
	public enum FlatCloudResolution
	{
		[Token(Token = "0x4000294")]
		R512,
		[Token(Token = "0x4000295")]
		R1024,
		[Token(Token = "0x4000296")]
		R2048,
		[Token(Token = "0x4000297")]
		R4096
	}

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnviroVolumeCloudsQualitySettings cloudsQualitySettings;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(10000f, 486000f)]
	[Tooltip("Clouds world scale. This settings will influece rendering of clouds at horizon.")]
	public float cloudsWorldScale;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Change Clouds Height.")]
	[Range(-2000f, 2000f)]
	public float cloudsHeightMod;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Changes the way sky fog will blend with clouds when inside/above the volumetric clouds.")]
	[Range(1000f, 20000f)]
	public float cloudsSkyFogHeightBlending;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Enable this option to blend clouds with your scene.")]
	public bool depthBlending;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[Tooltip("Use this option to minimize blending artifacts of downsampled clouds with full resolution scene.")]
	public bool bilateralUpsampling;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[Header("Clouds Wind Animation")]
	public bool useWindZoneDirection;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(-1f, 1f)]
	[Tooltip("Time scale / wind animation speed of clouds.")]
	public float cloudsTimeScale;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	[Tooltip("Global clouds wind speed modificator.")]
	public float cloudsWindIntensity;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	[Tooltip("Global clouds detail wind speed modificator.")]
	public float cloudsDetailWindIntensity;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	[Tooltip("Global clouds upwards wind speed modificator.")]
	public float cloudsUpwardsWindIntensity;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Cirrus clouds wind speed modificator.")]
	[Range(0f, 1f)]
	public float cirrusWindIntensity;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(-1f, 1f)]
	[Tooltip("Global clouds wind direction X axes.")]
	public float cloudsWindDirectionX;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	[Tooltip("Global clouds wind direction Y axes.")]
	public float cloudsWindDirectionY;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Clamps directional shadows on clouds.")]
	public AnimationCurve attenuationClamp;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0.01f, 1f)]
	[Tooltip("Sun highlight in near of sun.")]
	public float hgPhase;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("SilverLining intensity away from sun. Evaluated based on sun position. Keep between 0-1 range!")]
	[Range(0.01f, 1f)]
	public float silverLiningIntensity;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("SilverLining spread away from sun. Evaluated based on sun position. Keep between 0-1 range!")]
	public AnimationCurve silverLiningSpread;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[GradientUsage(true)]
	[Tooltip("Global Color for volume clouds based sun positon.")]
	public Gradient volumeCloudsColor;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[GradientUsage(true)]
	[Tooltip("Global Color for clouds based moon positon.")]
	public Gradient volumeCloudsMoonColor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[GradientUsage(true)]
	[Tooltip("Global ambient color add for volume clouds based sun positon.")]
	public Gradient volumeCloudsAmbientColor;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Raie or lower the light intensity based on sun altitude.")]
	public AnimationCurve lightIntensity;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Tweak the ambient lighting from sky based on sun altitude.")]
	public AnimationCurve ambientLightIntensity;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Tonemapping exposure")]
	public float cloudsExposure;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("Use Halton Sequence based raymarching offset to help with undersampling raymarching. This option will make clouds more noisy, so use it with TAA only.")]
	public bool useHaltonRaymarchOffset;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	[Tooltip("Enable this to only use half the amount of raymarching steps when using the halton sequence offset together with TAA.")]
	public bool useLessSteps;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Tiling of the generated weather map.")]
	public int weatherMapTiling;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Tiling modification of lighting variance.")]
	[Range(0f, 5f)]
	public float lightingVarianceTiling;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Option to add own weather map. Red Channel = Coverage, Blue = Clouds Height")]
	public Texture2D customWeatherMap;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Weathermap sampling offset.")]
	public Vector2 locationOffset;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Range(0f, 1f)]
	[Tooltip("Weathermap animation speed.")]
	public float weatherAnimSpeedScale;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Header("Global Clouds Control")]
	[Range(0f, 2f)]
	public float globalCloudCoverage;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Tooltip("Texture for cirrus clouds.")]
	public Texture cirrusCloudsTexture;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Global Color for flat clouds based sun positon.")]
	public Gradient cirrusCloudsColor;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Range(5f, 15f)]
	[Tooltip("Flat Clouds Altitude")]
	public float cirrusCloudsAltitude;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("Base texture for 2D clouds.")]
	public Texture2D flatCloudsBaseTexture;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Range(1f, 10f)]
	public float flatCloudsBaseTextureTiling;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Detail texture for 2D clouds.")]
	public Texture2D flatCloudsDetailTexture;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Range(1f, 20f)]
	public float flatCloudsDetailTextureTiling;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[GradientUsage(true)]
	[Tooltip("Direct Light Color for flat clouds based sun positon.")]
	public Gradient flatCloudsDirectLightColor;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[GradientUsage(true)]
	[Tooltip("Light Color for flat clouds based sun positon.")]
	public Gradient flatCloudsAmbientLightColor;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Flat Clouds Altitude")]
	[Range(50f, 250f)]
	public float flatCloudsAltitude;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Tooltip("Clouds Shadowcast Intensity. 0 = disabled")]
	[Range(0f, 1f)]
	public float shadowIntensity;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("Size of the shadow cookie.")]
	[Range(100f, 100000f)]
	public int shadowCookieSize;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public EnviroParticleClouds ParticleCloudsLayer1;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public EnviroParticleClouds ParticleCloudsLayer2;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("Enable this to use two layer of particle clouds.")]
	public bool dualLayerParticleClouds;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xBC2A14", Offset = "0xBC2A14", VA = "0xBC2A14")]
	public EnviroCloudSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class EnviroParticleClouds
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Range(0.01f, 0.2f)]
	[Tooltip("Particle clouds height.")]
	public float height;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Global Color for flat clouds based sun positon.")]
	[GradientUsage(true)]
	public Gradient particleCloudsColor;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xBC2D78", Offset = "0xBC2D78", VA = "0xBC2D78")]
	public EnviroParticleClouds()
	{
	}
}
[Serializable]
[Token(Token = "0x2000068")]
public class EnviroAuroraSettings
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve auroraIntensity;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Aurora Color and Brightness")]
	public Color auroraColor;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float auroraBrightness;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float auroraContrast;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Aurora Height and Scale")]
	public float auroraHeight;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.025f)]
	public float auroraScale;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Aurora Performance")]
	[Range(8f, 32f)]
	public int auroraSteps;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Aurora Modelling and Animation")]
	public Vector4 auroraLayer1Settings;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector4 auroraLayer2Settings;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector4 auroraColorshiftSettings;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Range(0f, 0.1f)]
	public float auroraSpeed;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xBC2D8C", Offset = "0xBC2D8C", VA = "0xBC2D8C")]
	public EnviroAuroraSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class EnviroProfile : ScriptableObject
{
	[Token(Token = "0x200006A")]
	public enum settingsMode
	{
		[Token(Token = "0x40002BF")]
		Lighting,
		[Token(Token = "0x40002C0")]
		Sky,
		[Token(Token = "0x40002C1")]
		Reflections,
		[Token(Token = "0x40002C2")]
		Weather,
		[Token(Token = "0x40002C3")]
		Season,
		[Token(Token = "0x40002C4")]
		Clouds,
		[Token(Token = "0x40002C5")]
		Fog,
		[Token(Token = "0x40002C6")]
		VolumeLighting,
		[Token(Token = "0x40002C7")]
		Lightshafts,
		[Token(Token = "0x40002C8")]
		DistanceBlur,
		[Token(Token = "0x40002C9")]
		Aurora,
		[Token(Token = "0x40002CA")]
		Satellites,
		[Token(Token = "0x40002CB")]
		Audio,
		[Token(Token = "0x40002CC")]
		Quality
	}

	[Token(Token = "0x200006B")]
	public enum settingsModeLW
	{
		[Token(Token = "0x40002CE")]
		Lighting,
		[Token(Token = "0x40002CF")]
		Sky,
		[Token(Token = "0x40002D0")]
		Reflections,
		[Token(Token = "0x40002D1")]
		Weather,
		[Token(Token = "0x40002D2")]
		Season,
		[Token(Token = "0x40002D3")]
		Clouds,
		[Token(Token = "0x40002D4")]
		Fog,
		[Token(Token = "0x40002D5")]
		Lightshafts,
		[Token(Token = "0x40002D6")]
		Satellites,
		[Token(Token = "0x40002D7")]
		Audio,
		[Token(Token = "0x40002D8")]
		Quality
	}

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string version;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroLightSettings lightSettings;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroReflectionSettings reflectionSettings;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnviroVolumeLightingSettings volumeLightSettings;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnviroDistanceBlurSettings distanceBlurSettings;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnviroSkySettings skySettings;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EnviroCloudSettings cloudsSettings;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EnviroWeatherSettings weatherSettings;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EnviroFogSettings fogSettings;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EnviroLightShaftsSettings lightshaftsSettings;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EnviroSeasonSettings seasonsSettings;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EnviroAudioSettings audioSettings;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EnviroSatellitesSettings satelliteSettings;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnviroQualitySettings qualitySettings;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnviroAuroraSettings auroraSettings;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public settingsMode viewMode;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public settingsModeLW viewModeLW;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool showPlayerSetup;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool showRenderingSetup;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool showComponentsSetup;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	[HideInInspector]
	public bool showTimeUI;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public bool showWeatherUI;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[HideInInspector]
	public bool showAudioUI;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	[HideInInspector]
	public bool showEffectsUI;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	[HideInInspector]
	public bool modified;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xBC2F7C", Offset = "0xBC2F7C", VA = "0xBC2F7C")]
	public EnviroProfile()
	{
	}
}
[Token(Token = "0x200006C")]
public static class EnviroProfileCreation
{
	[Token(Token = "0x600018F")]
	[Address(RVA = "0xBC3380", Offset = "0xBC3380", VA = "0xBC3380")]
	public static void SetupDefaults(EnviroProfile profile)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xBC33B0", Offset = "0xBC33B0", VA = "0xBC33B0")]
	public static bool UpdateProfile(EnviroProfile profile, string fromV, string toV)
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xBC36C8", Offset = "0xBC36C8", VA = "0xBC36C8")]
	public static GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xBC36D0", Offset = "0xBC36D0", VA = "0xBC36D0")]
	public static AudioClip GetAudioClip(string name)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xBC36D8", Offset = "0xBC36D8", VA = "0xBC36D8")]
	public static Cubemap GetAssetCubemap(string name)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xBC33A8", Offset = "0xBC33A8", VA = "0xBC33A8")]
	public static EnviroProfile GetDefaultProfile(string name)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBC36E0", Offset = "0xBC36E0", VA = "0xBC36E0")]
	public static Texture GetAssetTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xBC36E8", Offset = "0xBC36E8", VA = "0xBC36E8")]
	public static Gradient CreateGradient(Color clr1, float time1, Color clr2, float time2)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xBC3830", Offset = "0xBC3830", VA = "0xBC3830")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBC39E0", Offset = "0xBC39E0", VA = "0xBC39E0")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times, List<float> alpha, List<float> timesAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xBC3BF0", Offset = "0xBC3BF0", VA = "0xBC3BF0")]
	public static Color GetColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xBC3C1C", Offset = "0xBC3C1C", VA = "0xBC3C1C")]
	public static Keyframe CreateKey(float value, float time)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBC3C78", Offset = "0xBC3C78", VA = "0xBC3C78")]
	public static Keyframe CreateKey(float value, float time, float inTangent, float outTangent)
	{
		return default(Keyframe);
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
[RequireComponent(typeof(ReflectionProbe))]
[AddComponentMenu("Enviro/Reflection Probe")]
public class EnviroReflectionProbe : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	[CompilerGenerated]
	private sealed class <RefreshFirstTime>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0xBC643C", Offset = "0xBC643C", VA = "0xBC643C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0xBC6484", Offset = "0xBC6484", VA = "0xBC6484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xBC538C", Offset = "0xBC538C", VA = "0xBC538C")]
		[DebuggerHidden]
		public <RefreshFirstTime>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xBC63BC", Offset = "0xBC63BC", VA = "0xBC63BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xBC63C0", Offset = "0xBC63C0", VA = "0xBC63C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xBC6444", Offset = "0xBC6444", VA = "0xBC6444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006F")]
	[CompilerGenerated]
	private sealed class <RefreshUnity>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0xBC64FC", Offset = "0xBC64FC", VA = "0xBC64FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BB")]
			[Address(RVA = "0xBC6544", Offset = "0xBC6544", VA = "0xBC6544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xBC53B4", Offset = "0xBC53B4", VA = "0xBC53B4")]
		[DebuggerHidden]
		public <RefreshUnity>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xBC648C", Offset = "0xBC648C", VA = "0xBC648C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xBC6490", Offset = "0xBC6490", VA = "0xBC6490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xBC6504", Offset = "0xBC6504", VA = "0xBC6504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000070")]
	[CompilerGenerated]
	private sealed class <RefreshInstant>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture renderTex;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture mirrorTex;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0xBC6718", Offset = "0xBC6718", VA = "0xBC6718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C1")]
			[Address(RVA = "0xBC6760", Offset = "0xBC6760", VA = "0xBC6760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xBC53DC", Offset = "0xBC53DC", VA = "0xBC53DC")]
		[DebuggerHidden]
		public <RefreshInstant>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xBC654C", Offset = "0xBC654C", VA = "0xBC654C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xBC6550", Offset = "0xBC6550", VA = "0xBC6550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xBC6720", Offset = "0xBC6720", VA = "0xBC6720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000071")]
	[CompilerGenerated]
	private sealed class <RefreshOvertime>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroReflectionProbe <>4__this;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture renderTex;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture mirrorTex;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <face>5__2;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0xBC692C", Offset = "0xBC692C", VA = "0xBC692C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C7")]
			[Address(RVA = "0xBC6974", Offset = "0xBC6974", VA = "0xBC6974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xBC5404", Offset = "0xBC5404", VA = "0xBC5404")]
		[DebuggerHidden]
		public <RefreshOvertime>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xBC6768", Offset = "0xBC6768", VA = "0xBC6768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xBC676C", Offset = "0xBC676C", VA = "0xBC676C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xBC6934", Offset = "0xBC6934", VA = "0xBC6934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool standalone;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool updateReflectionOnGameTime;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float reflectionsUpdateTreshhold;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useTimeSlicing;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera renderCam;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useEnviroEffects;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool rendering;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ReflectionProbe myProbe;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool customRendering;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EnviroVolumeCloudsQuality customCloudsQuality;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnviroSkyRendering eSky;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useFog;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera bakingCam;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool currentMode;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentRes;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture cubemap;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture finalCubemap;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture mirrorTexture;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject renderCamObj;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material mirror;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material bakeMat;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material convolutionMat;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine refreshing;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool paused;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int renderID;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Quaternion[] orientations;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private double lastRelfectionUpdate;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xBC3D04", Offset = "0xBC3D04", VA = "0xBC3D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xBC49AC", Offset = "0xBC49AC", VA = "0xBC49AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xBC4A44", Offset = "0xBC4A44", VA = "0xBC4A44")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xBC45B8", Offset = "0xBC45B8", VA = "0xBC45B8")]
	private void CreateRenderCamera()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xBC4C78", Offset = "0xBC4C78", VA = "0xBC4C78")]
	private void UpdateCameraSettings()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xBC4DF8", Offset = "0xBC4DF8", VA = "0xBC4DF8")]
	private Camera CreateBakingCamera()
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xBC3E6C", Offset = "0xBC3E6C", VA = "0xBC3E6C")]
	private void CreateCubemap()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xBC4164", Offset = "0xBC4164", VA = "0xBC4164")]
	private void CreateTexturesAndMaterial()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xBC5068", Offset = "0xBC5068", VA = "0xBC5068")]
	public void RefreshReflection(bool timeSlice = false)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xBC4938", Offset = "0xBC4938", VA = "0xBC4938")]
	[IteratorStateMachine(typeof(<RefreshFirstTime>d__37))]
	private IEnumerator RefreshFirstTime()
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xBC5318", Offset = "0xBC5318", VA = "0xBC5318")]
	[IteratorStateMachine(typeof(<RefreshUnity>d__38))]
	public IEnumerator RefreshUnity()
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xBC51D0", Offset = "0xBC51D0", VA = "0xBC51D0")]
	[IteratorStateMachine(typeof(<RefreshInstant>d__39))]
	public IEnumerator RefreshInstant(RenderTexture renderTex, RenderTexture mirrorTex)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xBC5274", Offset = "0xBC5274", VA = "0xBC5274")]
	[IteratorStateMachine(typeof(<RefreshOvertime>d__40))]
	public IEnumerator RefreshOvertime(RenderTexture renderTex, RenderTexture mirrorTex)
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xBC542C", Offset = "0xBC542C", VA = "0xBC542C")]
	public RenderTexture BakeCubemapFace(int face, int res)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xBC56A8", Offset = "0xBC56A8", VA = "0xBC56A8")]
	private void ClearTextures()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xBC5730", Offset = "0xBC5730", VA = "0xBC5730")]
	private void ConvolutionCubemap()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBC5E80", Offset = "0xBC5E80", VA = "0xBC5E80")]
	private void UpdateStandaloneReflection()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBC5F48", Offset = "0xBC5F48", VA = "0xBC5F48")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBC5FF8", Offset = "0xBC5FF8", VA = "0xBC5FF8")]
	public EnviroReflectionProbe()
	{
	}
}
[Token(Token = "0x2000072")]
public class EnviroSkyMgr : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000073")]
	public class EnviroBaking
	{
		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int resolution;

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xBCB0F4", Offset = "0xBCB0F4", VA = "0xBCB0F4")]
		public EnviroBaking()
		{
		}
	}

	[Token(Token = "0x2000074")]
	public enum EnviroSkyVersion
	{
		[Token(Token = "0x4000320")]
		None,
		[Token(Token = "0x4000321")]
		LW,
		[Token(Token = "0x4000322")]
		HD
	}

	[Token(Token = "0x2000075")]
	public delegate void HourPassed();

	[Token(Token = "0x2000076")]
	public delegate void DayPassed();

	[Token(Token = "0x2000077")]
	public delegate void YearPassed();

	[Token(Token = "0x2000078")]
	public delegate void WeatherChanged(EnviroWeatherPreset weatherType);

	[Token(Token = "0x2000079")]
	public delegate void ZoneWeatherChanged(EnviroWeatherPreset weatherType, EnviroZone zone);

	[Token(Token = "0x200007A")]
	public delegate void SeasonChanged(EnviroSeasons.Seasons season);

	[Token(Token = "0x200007B")]
	public delegate void isNightE();

	[Token(Token = "0x200007C")]
	public delegate void isDay();

	[Token(Token = "0x200007D")]
	public delegate void ZoneChanged(EnviroZone zone);

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnviroSkyMgr _instance;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Enable to make sure thast enviro objects don't get destroyed on scene load.")]
	[Header("General")]
	public bool dontDestroy;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showSetup;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showInstances;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool showThirdParty;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showUtilities;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool showThirdPartyShaders;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showThirdPartyMisc;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool showThirdPartyNetwork;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showUtiliies;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture cube;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnviroBaking skyBaking;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EnviroSkyVersion currentEnviroSkyVersion;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnviroSky enviroHDInstance;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EnviroSkyLite enviroLWInstance;

	[Token(Token = "0x17000034")]
	public static EnviroSkyMgr instance
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xBC1268", Offset = "0xBC1268", VA = "0xBC1268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public EnviroComponents Components
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xBC7B38", Offset = "0xBC7B38", VA = "0xBC7B38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xBC7B74", Offset = "0xBC7B74", VA = "0xBC7B74")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public EnviroQualitySettings QualitySettings
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xBC7BB4", Offset = "0xBC7BB4", VA = "0xBC7BB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xBC7BF0", Offset = "0xBC7BF0", VA = "0xBC7BF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public EnviroTime Time
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xBC7C2C", Offset = "0xBC7C2C", VA = "0xBC7C2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xBC7C68", Offset = "0xBC7C68", VA = "0xBC7C68")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public EnviroSeasons Seasons
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xBC7CA8", Offset = "0xBC7CA8", VA = "0xBC7CA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xBC7CE4", Offset = "0xBC7CE4", VA = "0xBC7CE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public EnviroSeasonSettings SeasonSettings
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xBC7D24", Offset = "0xBC7D24", VA = "0xBC7D24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xBC7D60", Offset = "0xBC7D60", VA = "0xBC7D60")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public EnviroAuroraSettings AuroraSettings
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xBC7D9C", Offset = "0xBC7D9C", VA = "0xBC7D9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xBC7DD0", Offset = "0xBC7DD0", VA = "0xBC7DD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public EnviroReflectionSettings ReflectionSettings
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xBC4C3C", Offset = "0xBC4C3C", VA = "0xBC4C3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xBC7E0C", Offset = "0xBC7E0C", VA = "0xBC7E0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public EnviroCloudSettings CloudSettings
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xBC7E48", Offset = "0xBC7E48", VA = "0xBC7E48")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xBC7E84", Offset = "0xBC7E84", VA = "0xBC7E84")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public EnviroInteriorZoneSettings InteriorZoneSettings
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xBC7EC0", Offset = "0xBC7EC0", VA = "0xBC7EC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xBC7EFC", Offset = "0xBC7EFC", VA = "0xBC7EFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public EnviroAudio AudioSettings
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xBC7F38", Offset = "0xBC7F38", VA = "0xBC7F38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xBC7F74", Offset = "0xBC7F74", VA = "0xBC7F74")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public EnviroWeatherCloudsConfig Clouds
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xBC7FB4", Offset = "0xBC7FB4", VA = "0xBC7FB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xBC7FF0", Offset = "0xBC7FF0", VA = "0xBC7FF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public EnviroWeatherSettings WeatherSettings
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xBC802C", Offset = "0xBC802C", VA = "0xBC802C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xBC8068", Offset = "0xBC8068", VA = "0xBC8068")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public EnviroLightSettings LightSettings
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xBC80A4", Offset = "0xBC80A4", VA = "0xBC80A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xBC80E0", Offset = "0xBC80E0", VA = "0xBC80E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public EnviroVolumeLightingSettings VolumeLightSettings
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xBC811C", Offset = "0xBC811C", VA = "0xBC811C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xBC8158", Offset = "0xBC8158", VA = "0xBC8158")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public EnviroLightShaftsSettings LightShaftsSettings
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xBC8194", Offset = "0xBC8194", VA = "0xBC8194")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xBC81D0", Offset = "0xBC81D0", VA = "0xBC81D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public EnviroSkySettings SkySettings
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xBC820C", Offset = "0xBC820C", VA = "0xBC820C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xBC8248", Offset = "0xBC8248", VA = "0xBC8248")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public EnviroFogSettings FogSettings
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xBC8284", Offset = "0xBC8284", VA = "0xBC8284")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xBC82C0", Offset = "0xBC82C0", VA = "0xBC82C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public GameObject Player
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xBC82FC", Offset = "0xBC82FC", VA = "0xBC82FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xBC8338", Offset = "0xBC8338", VA = "0xBC8338")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public Camera Camera
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xBC8374", Offset = "0xBC8374", VA = "0xBC8374")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xBC83B0", Offset = "0xBC83B0", VA = "0xBC83B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool Tonemapping
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xBC83EC", Offset = "0xBC83EC", VA = "0xBC83EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xBC8428", Offset = "0xBC8428", VA = "0xBC8428")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public EnviroWeather Weather
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xBC89DC", Offset = "0xBC89DC", VA = "0xBC89DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xBC8A18", Offset = "0xBC8A18", VA = "0xBC8A18")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public float CustomFogIntensity
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xBC8C0C", Offset = "0xBC8C0C", VA = "0xBC8C0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xBC8C48", Offset = "0xBC8C48", VA = "0xBC8C48")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public Color CustomFogColor
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xBC8C8C", Offset = "0xBC8C8C", VA = "0xBC8C8C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xBC8CE0", Offset = "0xBC8CE0", VA = "0xBC8CE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool UpdateFogIntensity
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xBC8D44", Offset = "0xBC8D44", VA = "0xBC8D44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xBC8D80", Offset = "0xBC8D80", VA = "0xBC8D80")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float ambientAudioVolume
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xBC9EA0", Offset = "0xBC9EA0", VA = "0xBC9EA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xBC9EE4", Offset = "0xBC9EE4", VA = "0xBC9EE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float weatherAudioVolume
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xBC9F30", Offset = "0xBC9F30", VA = "0xBC9F30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xBC9F74", Offset = "0xBC9F74", VA = "0xBC9F74")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float ambientAudioVolumeModifier
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xBC9FC0", Offset = "0xBC9FC0", VA = "0xBC9FC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xBCA004", Offset = "0xBCA004", VA = "0xBCA004")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float weatherAudioVolumeModifier
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xBCA050", Offset = "0xBCA050", VA = "0xBCA050")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xBCA094", Offset = "0xBCA094", VA = "0xBCA094")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float audioTransitionSpeed
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xBCA0E0", Offset = "0xBCA0E0", VA = "0xBCA0E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xBCA124", Offset = "0xBCA124", VA = "0xBCA124")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float interiorZoneAudioVolume
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xBCA170", Offset = "0xBCA170", VA = "0xBCA170")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xBCA1B4", Offset = "0xBCA1B4", VA = "0xBCA1B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float interiorZoneAudioFadingSpeed
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xBCA200", Offset = "0xBCA200", VA = "0xBCA200")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xBCA244", Offset = "0xBCA244", VA = "0xBCA244")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool useVolumeClouds
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xBC4C00", Offset = "0xBC4C00", VA = "0xBC4C00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xBCA4BC", Offset = "0xBCA4BC", VA = "0xBCA4BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public bool useAurora
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xBCA4F0", Offset = "0xBCA4F0", VA = "0xBCA4F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xBCA52C", Offset = "0xBCA52C", VA = "0xBCA52C")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool useVolumeLighting
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xBCA560", Offset = "0xBCA560", VA = "0xBCA560")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xBCA59C", Offset = "0xBCA59C", VA = "0xBCA59C")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool useFlatClouds
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xBCA5D0", Offset = "0xBCA5D0", VA = "0xBCA5D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xBCA60C", Offset = "0xBCA60C", VA = "0xBCA60C")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public bool useParticleClouds
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xBCA640", Offset = "0xBCA640", VA = "0xBCA640")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xBCA684", Offset = "0xBCA684", VA = "0xBCA684")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public bool useSunShafts
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xBCA6C4", Offset = "0xBCA6C4", VA = "0xBCA6C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xBCA708", Offset = "0xBCA708", VA = "0xBCA708")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public bool useMoonShafts
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xBCA750", Offset = "0xBCA750", VA = "0xBCA750")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xBCA794", Offset = "0xBCA794", VA = "0xBCA794")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public bool useDistanceBlur
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xBCA7DC", Offset = "0xBCA7DC", VA = "0xBCA7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xBCA818", Offset = "0xBCA818", VA = "0xBCA818")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public bool useFog
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xBCA84C", Offset = "0xBCA84C", VA = "0xBCA84C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xBCA890", Offset = "0xBCA890", VA = "0xBCA890")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool interiorMode
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xBCAFE4", Offset = "0xBCAFE4", VA = "0xBCAFE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xBCB020", Offset = "0xBCB020", VA = "0xBCB020")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public EnviroInterior lastInteriorZone
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xBCB060", Offset = "0xBCB060", VA = "0xBCB060")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xBCB09C", Offset = "0xBCB09C", VA = "0xBCB09C")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event HourPassed OnHourPassed
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xBC1408", Offset = "0xBC1408", VA = "0xBC1408")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xBCA8D0", Offset = "0xBCA8D0", VA = "0xBCA8D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event DayPassed OnDayPassed
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xBC1570", Offset = "0xBC1570", VA = "0xBC1570")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xBCA96C", Offset = "0xBCA96C", VA = "0xBCA96C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event YearPassed OnYearPassed
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xBC16D8", Offset = "0xBC16D8", VA = "0xBC16D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xBCAA08", Offset = "0xBCAA08", VA = "0xBCAA08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event WeatherChanged OnWeatherChanged
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xBC18B0", Offset = "0xBC18B0", VA = "0xBC18B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xBCAAA4", Offset = "0xBCAAA4", VA = "0xBCAAA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event ZoneWeatherChanged OnZoneWeatherChanged
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xBCAB40", Offset = "0xBCAB40", VA = "0xBCAB40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xBCABDC", Offset = "0xBCABDC", VA = "0xBCABDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event SeasonChanged OnSeasonChanged
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xBC1A20", Offset = "0xBC1A20", VA = "0xBC1A20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xBCAC78", Offset = "0xBCAC78", VA = "0xBCAC78")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event isNightE OnNightTime
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xBC1B88", Offset = "0xBC1B88", VA = "0xBC1B88")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xBCAD14", Offset = "0xBCAD14", VA = "0xBCAD14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event isDay OnDayTime
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xBC1CF0", Offset = "0xBC1CF0", VA = "0xBC1CF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xBCADB0", Offset = "0xBCADB0", VA = "0xBCADB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event ZoneChanged OnZoneChanged
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xBC1EC8", Offset = "0xBC1EC8", VA = "0xBC1EC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xBCAE4C", Offset = "0xBCAE4C", VA = "0xBCAE4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBC697C", Offset = "0xBC697C", VA = "0xBC697C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBC6A08", Offset = "0xBC6A08", VA = "0xBC6A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBC6AB0", Offset = "0xBC6AB0", VA = "0xBC6AB0")]
	public void ActivateHDInstance()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBC6BB0", Offset = "0xBC6BB0", VA = "0xBC6BB0")]
	public void DeactivateHDInstance()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xBC6CA8", Offset = "0xBC6CA8", VA = "0xBC6CA8")]
	public void ActivateLWInstance()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xBC6DA8", Offset = "0xBC6DA8", VA = "0xBC6DA8")]
	public void DeactivateLWInstance()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xBC6EA0", Offset = "0xBC6EA0", VA = "0xBC6EA0")]
	public void DeleteHDInstance()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xBC6FEC", Offset = "0xBC6FEC", VA = "0xBC6FEC")]
	public void DeleteLWInstance()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xBC7138", Offset = "0xBC7138", VA = "0xBC7138")]
	public void SearchForEnviroInstances()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xBC71C8", Offset = "0xBC71C8", VA = "0xBC71C8")]
	public void CreateEnviroHDInstance()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xBC74A8", Offset = "0xBC74A8", VA = "0xBC74A8")]
	public void CreateEnviroHDVRInstance()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xBC76D8", Offset = "0xBC76D8", VA = "0xBC76D8")]
	public void CreateEnviroLWInstance()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xBC7908", Offset = "0xBC7908", VA = "0xBC7908")]
	public void CreateEnviroLWMobileInstance()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xBC7400", Offset = "0xBC7400", VA = "0xBC7400")]
	private void DeactivateAllInstances()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xBC73F8", Offset = "0xBC73F8", VA = "0xBC73F8")]
	public GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xBC8468", Offset = "0xBC8468", VA = "0xBC8468")]
	public void AssignAndStart(GameObject Player, Camera cam)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xBC84CC", Offset = "0xBC84CC", VA = "0xBC84CC")]
	public void ChangeFocus(GameObject Player, Camera cam)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xBC8530", Offset = "0xBC8530", VA = "0xBC8530")]
	public void StartAsServer()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xBC8574", Offset = "0xBC8574", VA = "0xBC8574")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xBC85B8", Offset = "0xBC85B8", VA = "0xBC85B8")]
	public void SetupSkybox()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xBC85FC", Offset = "0xBC85FC", VA = "0xBC85FC")]
	public bool IsNight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xBC8638", Offset = "0xBC8638", VA = "0xBC8638")]
	public bool IsStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBC8674", Offset = "0xBC8674", VA = "0xBC8674")]
	public bool HasInstance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBC8740", Offset = "0xBC8740", VA = "0xBC8740")]
	public bool IsInterior()
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBC877C", Offset = "0xBC877C", VA = "0xBC877C")]
	public bool IsEnviroSkyAttached(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBC882C", Offset = "0xBC882C", VA = "0xBC882C")]
	public bool IsDefaultZone(GameObject zone)
	{
		return default(bool);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBC890C", Offset = "0xBC890C", VA = "0xBC890C")]
	public bool IsAutoWeatherUpdateActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBC8950", Offset = "0xBC8950", VA = "0xBC8950")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBC8A58", Offset = "0xBC8A58", VA = "0xBC8A58")]
	public bool GetUseWeatherTag()
	{
		return default(bool);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBC8A9C", Offset = "0xBC8A9C", VA = "0xBC8A9C")]
	public string GetEnviroSkyTag()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBC8AD4", Offset = "0xBC8AD4", VA = "0xBC8AD4")]
	public float GetSnowIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBC8B18", Offset = "0xBC8B18", VA = "0xBC8B18")]
	public float GetWetnessIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xBC8B5C", Offset = "0xBC8B5C", VA = "0xBC8B5C")]
	public string GetCurrentTemperatureString()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xBC8DC0", Offset = "0xBC8DC0", VA = "0xBC8DC0")]
	public EnviroZone GetZoneByID(int id)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xBC8E48", Offset = "0xBC8E48", VA = "0xBC8E48")]
	public void RegisterZone(EnviroZone z)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xBC8E84", Offset = "0xBC8E84", VA = "0xBC8E84")]
	public float GetUniversalTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xBC8EF8", Offset = "0xBC8EF8", VA = "0xBC8EF8")]
	public float GetTimeOfDay()
	{
		return default(float);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xBC5F0C", Offset = "0xBC5F0C", VA = "0xBC5F0C")]
	public double GetCurrentTimeInHours()
	{
		return default(double);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xBC8F34", Offset = "0xBC8F34", VA = "0xBC8F34")]
	public EnviroSeasons.Seasons GetCurrentSeason()
	{
		return default(EnviroSeasons.Seasons);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xBC8F78", Offset = "0xBC8F78", VA = "0xBC8F78")]
	public void SetYears(int year)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xBC8FBC", Offset = "0xBC8FBC", VA = "0xBC8FBC")]
	public void SetDays(int days)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xBC9000", Offset = "0xBC9000", VA = "0xBC9000")]
	public void SetTime(DateTime date)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xBC903C", Offset = "0xBC903C", VA = "0xBC903C")]
	public void SetTime(int year, int dayOfYear, int hour, int minute, int seconds)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xBC90A8", Offset = "0xBC90A8", VA = "0xBC90A8")]
	public void ResetHourEventTimer()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBC90E0", Offset = "0xBC90E0", VA = "0xBC90E0")]
	public void SetTimeOfDay(float timeOfDay)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBC9124", Offset = "0xBC9124", VA = "0xBC9124")]
	public void ChangeSeason(EnviroSeasons.Seasons s)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xBC9160", Offset = "0xBC9160", VA = "0xBC9160")]
	public void SetTimeProgress(EnviroTime.TimeProgressMode tpm)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xBC91A4", Offset = "0xBC91A4", VA = "0xBC91A4")]
	public string GetTimeStringWithSeconds()
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xBC9318", Offset = "0xBC9318", VA = "0xBC9318")]
	public string GetTimeString()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBC9420", Offset = "0xBC9420", VA = "0xBC9420")]
	public int GetCurrentYear()
	{
		return default(int);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBC9464", Offset = "0xBC9464", VA = "0xBC9464")]
	public int GetCurrentMonth()
	{
		return default(int);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBC9544", Offset = "0xBC9544", VA = "0xBC9544")]
	public DateTime GetDateAsDateTime()
	{
		return default(DateTime);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBC973C", Offset = "0xBC973C", VA = "0xBC973C")]
	public int GetCurrentDay()
	{
		return default(int);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBC9780", Offset = "0xBC9780", VA = "0xBC9780")]
	public int GetCurrentHour()
	{
		return default(int);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xBC97C4", Offset = "0xBC97C4", VA = "0xBC97C4")]
	public int GetCurrentMinute()
	{
		return default(int);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xBC9808", Offset = "0xBC9808", VA = "0xBC9808")]
	public int GetCurrentSecond()
	{
		return default(int);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xBC984C", Offset = "0xBC984C", VA = "0xBC984C")]
	public void ChangeWeatherInstant(int weatherId)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xBC9888", Offset = "0xBC9888", VA = "0xBC9888")]
	public void ChangeWeatherInstant(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xBC98C4", Offset = "0xBC98C4", VA = "0xBC98C4")]
	public void ChangeWeather(int weatherId)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xBC9900", Offset = "0xBC9900", VA = "0xBC9900")]
	public void ChangeWeather(EnviroWeatherPreset preset)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xBC993C", Offset = "0xBC993C", VA = "0xBC993C")]
	public void ChangeWeather(string Name)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xBC9978", Offset = "0xBC9978", VA = "0xBC9978")]
	public EnviroZone GetCurrentActiveZone()
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xBC99BC", Offset = "0xBC99BC", VA = "0xBC99BC")]
	public void SetCurrentActiveZone(EnviroZone z)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xBC9A04", Offset = "0xBC9A04", VA = "0xBC9A04")]
	public void InstantWeatherChange(EnviroWeatherPreset preset, EnviroWeatherPrefab prefab)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xBC9A68", Offset = "0xBC9A68", VA = "0xBC9A68")]
	public void SetToZone(int z)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xBC9B20", Offset = "0xBC9B20", VA = "0xBC9B20")]
	public EnviroWeatherPreset GetCurrentWeatherPreset()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xBC9B64", Offset = "0xBC9B64", VA = "0xBC9B64")]
	public EnviroWeatherPreset GetStartWeatherPreset()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xBC9BA8", Offset = "0xBC9BA8", VA = "0xBC9BA8")]
	public List<EnviroWeatherPreset> GetCurrentWeatherPresetList()
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xBC9BEC", Offset = "0xBC9BEC", VA = "0xBC9BEC")]
	public List<EnviroWeatherPrefab> GetCurrentWeatherPrefabList()
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xBC9C30", Offset = "0xBC9C30", VA = "0xBC9C30")]
	public List<EnviroZone> GetZoneList()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xBC9C74", Offset = "0xBC9C74", VA = "0xBC9C74")]
	public void ChangeZoneWeather(int zoneId, int weatherId)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xBC9E58", Offset = "0xBC9E58", VA = "0xBC9E58")]
	public void SetAutoWeatherUpdates(bool b)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xBCA290", Offset = "0xBCA290", VA = "0xBCA290")]
	public GameObject GetVFXHolder()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBCA2D4", Offset = "0xBCA2D4", VA = "0xBCA2D4")]
	public void SetLightningFlashTrigger(float trigger)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBCA318", Offset = "0xBCA318", VA = "0xBCA318")]
	public float GetEmissionRate(ParticleSystem system)
	{
		return default(float);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBCA370", Offset = "0xBCA370", VA = "0xBCA370")]
	public void SetEmissionRate(ParticleSystem sys, float emissionRate)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xBCA3F4", Offset = "0xBCA3F4", VA = "0xBCA3F4")]
	public void RegisterVegetationInstance(EnviroVegetationInstance v)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xBCA430", Offset = "0xBCA430", VA = "0xBCA430")]
	public double GetInHours(float hours, float days, float years)
	{
		return default(double);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xBCAEE8", Offset = "0xBCAEE8", VA = "0xBCAEE8", Slot = "4")]
	public virtual void NotifyHourPassed()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xBCAF04", Offset = "0xBCAF04", VA = "0xBCAF04", Slot = "5")]
	public virtual void NotifyDayPassed()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xBCAF20", Offset = "0xBCAF20", VA = "0xBCAF20", Slot = "6")]
	public virtual void NotifyYearPassed()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xBCAF3C", Offset = "0xBCAF3C", VA = "0xBCAF3C", Slot = "7")]
	public virtual void NotifyWeatherChanged(EnviroWeatherPreset type)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xBCAF58", Offset = "0xBCAF58", VA = "0xBCAF58", Slot = "8")]
	public virtual void NotifyZoneWeatherChanged(EnviroWeatherPreset type, EnviroZone zone)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xBCAF74", Offset = "0xBCAF74", VA = "0xBCAF74", Slot = "9")]
	public virtual void NotifySeasonChanged(EnviroSeasons.Seasons season)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xBCAF90", Offset = "0xBCAF90", VA = "0xBCAF90", Slot = "10")]
	public virtual void NotifyIsNight()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xBCAFAC", Offset = "0xBCAFAC", VA = "0xBCAFAC", Slot = "11")]
	public virtual void NotifyIsDay()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xBCAFC8", Offset = "0xBCAFC8", VA = "0xBCAFC8", Slot = "12")]
	public virtual void NotifyZoneChanged(EnviroZone zone)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xBCB0DC", Offset = "0xBCB0DC", VA = "0xBCB0DC")]
	public EnviroSkyMgr()
	{
	}
}
[Serializable]
[Token(Token = "0x200007E")]
public class EnviroVegetationStage
{
	[Token(Token = "0x200007F")]
	public enum GrowState
	{
		[Token(Token = "0x400032B")]
		Grow,
		[Token(Token = "0x400032C")]
		Stay
	}

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Range(0f, 100f)]
	public float minAgePercent;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GrowState growAction;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GrowGameobjectSpring;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GrowGameobjectSummer;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowGameobjectAutumn;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GrowGameobjectWinter;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool billboard;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xBCB4F0", Offset = "0xBCB4F0", VA = "0xBCB4F0")]
	public EnviroVegetationStage()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
public class EnviroVegetationAge
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxAgeHours;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxAgeDays;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxAgeYears;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool randomStartAge;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startAgeinHours;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double birthdayInHours;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Loop;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int LoopFromGrowStage;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xBCB4F8", Offset = "0xBCB4F8", VA = "0xBCB4F8")]
	public EnviroVegetationAge()
	{
	}
}
[Serializable]
[Token(Token = "0x2000081")]
public class EnviroVegetationSeasons
{
	[Token(Token = "0x2000082")]
	public enum SeasonAction
	{
		[Token(Token = "0x400033B")]
		SpawnDeadPrefab,
		[Token(Token = "0x400033C")]
		Deactivate,
		[Token(Token = "0x400033D")]
		Destroy
	}

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SeasonAction seasonAction;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool GrowInSpring;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool GrowInSummer;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool GrowInAutumn;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool GrowInWinter;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xBCB514", Offset = "0xBCB514", VA = "0xBCB514")]
	public EnviroVegetationSeasons()
	{
	}
}
[Token(Token = "0x2000083")]
[AddComponentMenu("Enviro/Vegetation Growth Object")]
public class EnviroVegetationInstance : MonoBehaviour
{
	[Token(Token = "0x2000084")]
	[CompilerGenerated]
	private sealed class <BirthColliders>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroVegetationInstance <>4__this;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] <colliders>5__2;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0xBCC898", Offset = "0xBCC898", VA = "0xBCC898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0xBCC8E0", Offset = "0xBCC8E0", VA = "0xBCC8E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xBCC2D8", Offset = "0xBCC2D8", VA = "0xBCC2D8")]
		[DebuggerHidden]
		public <BirthColliders>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xBCC718", Offset = "0xBCC718", VA = "0xBCC718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xBCC71C", Offset = "0xBCC71C", VA = "0xBCC71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xBCC8A0", Offset = "0xBCC8A0", VA = "0xBCC8A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EnviroVegetationAge Age;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnviroVegetationSeasons Seasons;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EnviroVegetationStage> GrowStages;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 minScale;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 maxScale;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GrowSpeedMod;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject DeadPrefab;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color GizmoColor;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float GizmoSize;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private EnviroSeasons.Seasons currentSeason;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private double ageInHours;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private double maxAgeInHours;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentStage;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject currentVegetationObject;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool stay;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool reBirth;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool rescale;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool canGrow;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool shrink;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBCB524", Offset = "0xBCB524", VA = "0xBCB524")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xBCB6AC", Offset = "0xBCB6AC", VA = "0xBCB6AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xBCB8F4", Offset = "0xBCB8F4", VA = "0xBCB8F4")]
	private void SetSeason()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xBCBB60", Offset = "0xBCBB60", VA = "0xBCBB60")]
	public void KeepVariablesClear()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xBCBC38", Offset = "0xBCBC38", VA = "0xBCBC38")]
	public void UpdateInstance()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xBCBDD0", Offset = "0xBCBDD0", VA = "0xBCBDD0")]
	public void UpdateGrowth()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBCC0F8", Offset = "0xBCC0F8", VA = "0xBCC0F8")]
	private void DeadPrefabLoop()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBCC264", Offset = "0xBCC264", VA = "0xBCC264")]
	[IteratorStateMachine(typeof(<BirthColliders>d__27))]
	private IEnumerator BirthColliders()
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBCBFB8", Offset = "0xBCBFB8", VA = "0xBCBFB8")]
	private void CalculateScale()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBCB634", Offset = "0xBCB634", VA = "0xBCB634")]
	public void Birth(int stage, float startAge)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xBCC300", Offset = "0xBCC300", VA = "0xBCC300")]
	private void SeasonAction()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xBCC510", Offset = "0xBCC510", VA = "0xBCC510")]
	private void CheckSeason(bool update)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xBCBC84", Offset = "0xBCBC84", VA = "0xBCBC84")]
	private void ShrinkAndDeactivate()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xBCB91C", Offset = "0xBCB91C", VA = "0xBCB91C")]
	public void VegetationChange()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xBCC554", Offset = "0xBCC554", VA = "0xBCC554")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xBCC608", Offset = "0xBCC608", VA = "0xBCC608")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xBCC654", Offset = "0xBCC654", VA = "0xBCC654")]
	public EnviroVegetationInstance()
	{
	}
}
[Serializable]
[Token(Token = "0x2000085")]
public class EnviroWeatherPrefab : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroWeatherPreset weatherPreset;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<ParticleSystem> effectSystems;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<float> effectEmmisionRates;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xBCC8E8", Offset = "0xBCC8E8", VA = "0xBCC8E8")]
	public EnviroWeatherPrefab()
	{
	}
}
[Serializable]
[Token(Token = "0x2000086")]
public class EnviroWeatherCloudsConfig
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Range(0f, 1f)]
	[Tooltip("Ambient Light Intensity.")]
	public float ambientSkyColorIntensity;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Light extinction factor.")]
	[Range(0f, 2f)]
	public float scatteringCoef;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Darkens the edges of clouds from in-out scattering.")]
	[Range(1f, 3f)]
	public float edgeDarkness;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float baseErosionIntensity;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float detailErosionIntensity;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Density factor of clouds.")]
	public float density;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Light Step modifier.")]
	public float lightStepModifier;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Min lighting variance intensity.")]
	public float lightVariance;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Global coverage multiplicator of clouds.")]
	[Range(0f, 1f)]
	public float coverage;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Defines how much light will be absorbed from cloud particles.")]
	[Range(0f, 1f)]
	public float lightAbsorbtion;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	[Tooltip("Coverage type of clouds. 1 = more round scattered shapes , 0 = connected islands style")]
	public float coverageType;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0.25f, 1f)]
	[Tooltip("Clouds raynarching step modifier.")]
	public float raymarchingScale;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	[Tooltip("Clouds modelling type.")]
	public float cloudType;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	[Tooltip("Cirrus Clouds Alpha")]
	public float cirrusAlpha;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	[Tooltip("Cirrus Clouds Coverage")]
	public float cirrusCoverage;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[Tooltip("Cirrus Clouds Color Power")]
	public float cirrusColorPow;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 5f)]
	[Tooltip("Flat Clouds Density")]
	public float flatCloudsDensity;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 5f)]
	[Tooltip("Flat Clouds Absorbtion")]
	public float flatCloudsAbsorbtion;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Flat Clouds Direct Light Intensity")]
	[Range(0f, 20f)]
	public float flatCloudsDirectLightIntensity;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 2f)]
	[Tooltip("Flat Clouds Ambient Light Intensity")]
	public float flatCloudsAmbientLightIntensity;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	[Tooltip("Flat Clouds HG Phase")]
	public float flatCloudsHGPhase;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 2f)]
	[Tooltip("Flat Clouds Coverage")]
	public float flatCoverage;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 1f)]
	[Tooltip("Particle Clouds Alpha")]
	public float particleLayer1Alpha;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Particle Clouds Brightness")]
	[Range(0f, 1f)]
	public float particleLayer1Brightness;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Particle Clouds Color Power")]
	[Range(0f, 1f)]
	public float particleLayer1ColorPow;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Particle Clouds Alpha")]
	[Range(0f, 1f)]
	public float particleLayer2Alpha;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Particle Clouds Brightness")]
	[Range(0f, 1f)]
	public float particleLayer2Brightness;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(0f, 1f)]
	[Tooltip("Particle Clouds Color Power")]
	public float particleLayer2ColorPow;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Use particle clouds here even when it is disabled!")]
	public bool particleCloudsOverwrite;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xBCC9C0", Offset = "0xBCC9C0", VA = "0xBCC9C0")]
	public EnviroWeatherCloudsConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x2000087")]
public class EnviroWeatherEffects
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject prefab;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localPositionOffset;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localRotationOffset;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xBCCA1C", Offset = "0xBCCA1C", VA = "0xBCCA1C")]
	public EnviroWeatherEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000088")]
public class EnviroWeatherPreset : ScriptableObject
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string version;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Name;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Season Settings")]
	public bool Spring;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(1f, 100f)]
	public float possibiltyInSpring;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Summer;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(1f, 100f)]
	public float possibiltyInSummer;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Autumn;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(1f, 100f)]
	public float possibiltyInAutumn;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool winter;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(1f, 100f)]
	public float possibiltyInWinter;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Cloud Settings")]
	public EnviroWeatherCloudsConfig cloudsConfig;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Linear Fog")]
	public float fogStartDistance;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fogDistance;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Exp Fog")]
	public float fogDensity;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Used to modify sky, direct, ambient light and fog color. The color alpha value defines the intensity")]
	public Gradient weatherSkyMod;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Gradient weatherLightMod;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Gradient weatherFogMod;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(0f, 2f)]
	public float volumeLightIntensity;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Range(-1f, 1f)]
	public float shadowIntensityMod;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("The density of height based fog for this weather.")]
	[Range(0f, 100f)]
	public float heightFogDensity;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("Define the height of fog rendered in sky.")]
	[Range(0f, 2f)]
	public float SkyFogHeight;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Range(0f, 1f)]
	[Tooltip("Define the start height of fog rendered in sky.")]
	public float skyFogStart;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("Define the intensity of fog rendered in sky.")]
	[Range(0f, 2f)]
	public float SkyFogIntensity;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Define the scattering intensity of fog.")]
	[Range(1f, 10f)]
	public float FogScatteringIntensity;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Block the sundisk with fog.")]
	[Range(0f, 1f)]
	public float fogSunBlocking;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Range(0f, 1f)]
	[Tooltip("Block the moon with fog.")]
	public float moonIntensity;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Weather Settings")]
	public List<EnviroWeatherEffects> effectSystems;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Wind intensity that will applied to wind zone.")]
	[Range(0f, 1f)]
	public float WindStrenght;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Range(0f, 1f)]
	[Tooltip("The maximum wetness level that can be reached.")]
	public float wetnessLevel;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Range(0f, 1f)]
	[Tooltip("The maximum snow level that can be reached.")]
	public float snowLevel;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Range(-50f, 50f)]
	[Tooltip("The temperature modifcation for this weather type. (Will be added or substracted)")]
	public float temperatureLevel;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Activate this to enable thunder and lightning.")]
	public bool isLightningStorm;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Tooltip("The Intervall of lightning in seconds. Random(lightningInterval,lightningInterval * 2). ")]
	[Range(0f, 2f)]
	public float lightningInterval;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Range(0f, 1f)]
	[Header("Aurora Settings")]
	public float auroraIntensity;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Audio Settings - SFX")]
	[Tooltip("Define an sound effect for this weather preset.")]
	public AudioClip weatherSFX;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Audio Settings - Ambient")]
	[Tooltip("This sound wil be played in spring at day.(looped)")]
	public AudioClip SpringDayAmbient;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("This sound wil be played in spring at night.(looped)")]
	public AudioClip SpringNightAmbient;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("This sound wil be played in summer at day.(looped)")]
	public AudioClip SummerDayAmbient;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("This sound wil be played in summer at night.(looped)")]
	public AudioClip SummerNightAmbient;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("This sound wil be played in autumn at day.(looped)")]
	public AudioClip AutumnDayAmbient;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("This sound wil be played in autumn at night.(looped)")]
	public AudioClip AutumnNightAmbient;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Tooltip("This sound wil be played in winter at day.(looped)")]
	public AudioClip WinterDayAmbient;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Tooltip("This sound wil be played in winter at night.(looped)")]
	public AudioClip WinterNightAmbient;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float blurDistance;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float blurIntensity;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float blurSkyIntensity;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xBCCA24", Offset = "0xBCCA24", VA = "0xBCCA24")]
	public EnviroWeatherPreset()
	{
	}
}
[Token(Token = "0x2000089")]
public class EnviroWeatherPresetCreation
{
	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xBCCB28", Offset = "0xBCCB28", VA = "0xBCCB28")]
	public static GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xBCCB30", Offset = "0xBCCB30", VA = "0xBCCB30")]
	public static Cubemap GetAssetCubemap(string name)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xBCCB38", Offset = "0xBCCB38", VA = "0xBCCB38")]
	public static Texture GetAssetTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xBCCB40", Offset = "0xBCCB40", VA = "0xBCCB40")]
	public static Gradient CreateGradient()
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xBCCC48", Offset = "0xBCCC48", VA = "0xBCCC48")]
	public static Color GetColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xBCCC74", Offset = "0xBCCC74", VA = "0xBCCC74")]
	public static Keyframe CreateKey(float value, float time)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xBCCCD0", Offset = "0xBCCCD0", VA = "0xBCCCD0")]
	public static Keyframe CreateKey(float value, float time, float inTangent, float outTangent)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBCCD5C", Offset = "0xBCCD5C", VA = "0xBCCD5C")]
	public EnviroWeatherPresetCreation()
	{
	}
}
[Token(Token = "0x200008A")]
[AddComponentMenu("Enviro/Weather Zone")]
public class EnviroZone : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	public enum WeatherUpdateMode
	{
		[Token(Token = "0x40003BE")]
		GameTimeHours,
		[Token(Token = "0x40003BF")]
		RealTimeMinutes
	}

	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <CreateWeatherListLate>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroZone <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0xBCED10", Offset = "0xBCED10", VA = "0xBCED10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0xBCED58", Offset = "0xBCED58", VA = "0xBCED58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xBCE51C", Offset = "0xBCE51C", VA = "0xBCE51C")]
		[DebuggerHidden]
		public <CreateWeatherListLate>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xBCEC58", Offset = "0xBCEC58", VA = "0xBCEC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xBCEC5C", Offset = "0xBCEC5C", VA = "0xBCEC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xBCED18", Offset = "0xBCED18", VA = "0xBCED18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Defines the zone name.")]
	public string zoneName;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Uncheck to remove OnTriggerExit call when using overlapping zone layout.")]
	public bool ExitToDefault;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[Tooltip("Enable this option to force to change weather preset. Disable that option and same weather can occure in row.")]
	public bool forceWeatherChange;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<EnviroWeatherPrefab> zoneWeather;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EnviroWeatherPrefab> curPossibleZoneWeather;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Zone weather settings:")]
	[Tooltip("Add all weather prefabs for this zone here.")]
	public List<EnviroWeatherPreset> zoneWeatherPresets;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Shall weather changes occure based on gametime or realtime?")]
	public WeatherUpdateMode updateMode;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Defines how often (gametime hours or realtime minutes) the system will heck to change the current weather conditions.")]
	public float WeatherUpdateIntervall;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Enable this to use a mesh for zone trigger.")]
	[Header("Zone scaling and gizmo:")]
	public bool useMeshZone;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Custom Zone Mesh")]
	public Mesh zoneMesh;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Defines the zone scale.")]
	public Vector3 zoneScale;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Defines the color of the zone's gizmo in editor mode.")]
	public Color zoneGizmoColor;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The current active weather conditions.")]
	[Header("Current active weather:")]
	public EnviroWeatherPrefab currentActiveZoneWeatherPrefab;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnviroWeatherPreset currentActiveZoneWeatherPreset;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public EnviroWeatherPrefab lastActiveZoneWeatherPrefab;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public EnviroWeatherPreset lastActiveZoneWeatherPreset;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BoxCollider zoneCollider;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshCollider zoneMeshCollider;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private double nextUpdate;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float nextUpdateRealtime;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool init;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isDefault;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBCCD64", Offset = "0xBCCD64", VA = "0xBCCD64")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBCCF70", Offset = "0xBCCF70", VA = "0xBCCF70")]
	public void UpdateZoneScale()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBCD07C", Offset = "0xBCD07C", VA = "0xBCD07C")]
	public void CreateZoneWeatherTypeList()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBCDE20", Offset = "0xBCDE20", VA = "0xBCDE20")]
	private void BuildNewWeatherList()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBCE060", Offset = "0xBCE060", VA = "0xBCE060")]
	private EnviroWeatherPrefab PossibiltyCheck()
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBCE3D8", Offset = "0xBCE3D8", VA = "0xBCE3D8")]
	private void WeatherUpdate()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xBCE4A8", Offset = "0xBCE4A8", VA = "0xBCE4A8")]
	[IteratorStateMachine(typeof(<CreateWeatherListLate>d__29))]
	private IEnumerator CreateWeatherListLate()
	{
		return null;
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xBCE544", Offset = "0xBCE544", VA = "0xBCE544")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xBCE81C", Offset = "0xBCE81C", VA = "0xBCE81C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xBCE950", Offset = "0xBCE950", VA = "0xBCE950")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xBCEA98", Offset = "0xBCEA98", VA = "0xBCEA98")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xBCEB54", Offset = "0xBCEB54", VA = "0xBCEB54")]
	public EnviroZone()
	{
	}
}
[Token(Token = "0x200008D")]
[AddComponentMenu("Enviro/Utility/Audio Mixer Support")]
public class EnviroAudioMixerSupport : MonoBehaviour
{
	[Token(Token = "0x200008E")]
	[CompilerGenerated]
	private sealed class <Setup>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroAudioMixerSupport <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0xBCF174", Offset = "0xBCF174", VA = "0xBCF174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0xBCF1BC", Offset = "0xBCF1BC", VA = "0xBCF1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xBCEE8C", Offset = "0xBCEE8C", VA = "0xBCEE8C")]
		[DebuggerHidden]
		public <Setup>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xBCEEBC", Offset = "0xBCEEBC", VA = "0xBCEEBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xBCEEC0", Offset = "0xBCEEC0", VA = "0xBCEEC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xBCF17C", Offset = "0xBCF17C", VA = "0xBCF17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Mixer")]
	public AudioMixer audioMixer;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Group Names")]
	public string ambientMixerGroup;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string weatherMixerGroup;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string thunderMixerGroup;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xBCED60", Offset = "0xBCED60", VA = "0xBCED60")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xBCEE18", Offset = "0xBCEE18", VA = "0xBCEE18")]
	[IteratorStateMachine(typeof(<Setup>d__5))]
	private IEnumerator Setup()
	{
		return null;
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBCEEB4", Offset = "0xBCEEB4", VA = "0xBCEEB4")]
	public EnviroAudioMixerSupport()
	{
	}
}
[Token(Token = "0x200008F")]
public class EnviroAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000090")]
	public enum AudioSourceFunction
	{
		[Token(Token = "0x40003D2")]
		Weather1,
		[Token(Token = "0x40003D3")]
		Weather2,
		[Token(Token = "0x40003D4")]
		Ambient,
		[Token(Token = "0x40003D5")]
		Ambient2,
		[Token(Token = "0x40003D6")]
		Thunder,
		[Token(Token = "0x40003D7")]
		ZoneAmbient
	}

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSourceFunction myFunction;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audiosrc;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFadingIn;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isFadingOut;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentAmbientVolume;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentWeatherVolume;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentZoneVolume;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBCF1C4", Offset = "0xBCF1C4", VA = "0xBCF1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBCF350", Offset = "0xBCF350", VA = "0xBCF350")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBCF35C", Offset = "0xBCF35C", VA = "0xBCF35C")]
	public void FadeIn(AudioClip clip)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBCF394", Offset = "0xBCF394", VA = "0xBCF394")]
	public void PlayOneShot(AudioClip clip)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xBCF3E8", Offset = "0xBCF3E8", VA = "0xBCF3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xBCF9E8", Offset = "0xBCF9E8", VA = "0xBCF9E8")]
	public EnviroAudioSource()
	{
	}
}
[Token(Token = "0x2000091")]
[ExecuteInEditMode]
public class EnviroCopyLightSettings : MonoBehaviour
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light myLight;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light enviroLight;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xCA2150", Offset = "0xCA2150", VA = "0xCA2150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xCA2270", Offset = "0xCA2270", VA = "0xCA2270")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xCA2444", Offset = "0xCA2444", VA = "0xCA2444")]
	public EnviroCopyLightSettings()
	{
	}
}
[Token(Token = "0x2000092")]
public class EnviroDayNightSwitch : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light[] lightsArray;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xCA244C", Offset = "0xCA244C", VA = "0xCA244C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xCA25BC", Offset = "0xCA25BC", VA = "0xCA25BC")]
	private void Activate()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xCA2620", Offset = "0xCA2620", VA = "0xCA2620")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xCA2684", Offset = "0xCA2684", VA = "0xCA2684")]
	public EnviroDayNightSwitch()
	{
	}
}
[Token(Token = "0x2000093")]
[AddComponentMenu("Enviro/Interior Zone")]
public class EnviroInterior : MonoBehaviour
{
	[Token(Token = "0x2000094")]
	public enum ZoneTriggerType
	{
		[Token(Token = "0x400040A")]
		Entry_Exit,
		[Token(Token = "0x400040B")]
		Zone
	}

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneTriggerType zoneTriggerType;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool directLighting;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ambientLighting;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool weatherAudio;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool ambientAudio;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fog;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fogColor;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool skybox;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool weatherEffects;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color directLightingMod;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color ambientLightingMod;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color ambientEQLightingMod;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color ambientGRLightingMod;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color curDirectLightingMod;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color curAmbientLightingMod;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color curAmbientEQLightingMod;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color curAmbientGRLightingMod;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float directLightFadeSpeed;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float ambientLightFadeSpeed;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color skyboxColorMod;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color curskyboxColorMod;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float skyboxFadeSpeed;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool fadeInDirectLight;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool fadeOutDirectLight;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool fadeInAmbientLight;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	private bool fadeOutAmbientLight;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool fadeInSkybox;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool fadeOutSkybox;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float ambientVolume;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float weatherVolume;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip zoneAudioClip;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float zoneAudioVolume;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float zoneAudioFadingSpeed;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color fogColorMod;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color curFogColorMod;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float fogFadeSpeed;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float minFogMod;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool fadeInFog;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool fadeOutFog;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool fadeInFogColor;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool fadeOutFogColor;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float weatherFadeSpeed;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool fadeInWeather;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool fadeOutWeather;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<EnviroTrigger> triggers;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Color fadeOutColor;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xCA2694", Offset = "0xCA2694", VA = "0xCA2694")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xCA2698", Offset = "0xCA2698", VA = "0xCA2698")]
	public void CreateNewTrigger()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xCA2890", Offset = "0xCA2890", VA = "0xCA2890")]
	public void RemoveTrigger(EnviroTrigger id)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xCA2930", Offset = "0xCA2930", VA = "0xCA2930")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xCA2AD8", Offset = "0xCA2AD8", VA = "0xCA2AD8")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xCA2C44", Offset = "0xCA2C44", VA = "0xCA2C44")]
	public void StopAllFading()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xCA2D20", Offset = "0xCA2D20", VA = "0xCA2D20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xCA3830", Offset = "0xCA3830", VA = "0xCA3830")]
	public EnviroInterior()
	{
	}
}
[Token(Token = "0x2000095")]
public class EnviroLightning : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <LightningBolt>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroLightning <>4__this;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <defaultIntensity>5__2;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <flashCount>5__3;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <thisFlash>5__4;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030C")]
			[Address(RVA = "0xCA3C54", Offset = "0xCA3C54", VA = "0xCA3C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0xCA3C9C", Offset = "0xCA3C9C", VA = "0xCA3C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xCA3A1C", Offset = "0xCA3A1C", VA = "0xCA3A1C")]
		[DebuggerHidden]
		public <LightningBolt>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xCA3A4C", Offset = "0xCA3A4C", VA = "0xCA3A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xCA3A50", Offset = "0xCA3A50", VA = "0xCA3A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xCA3C5C", Offset = "0xCA3C5C", VA = "0xCA3C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xCA3908", Offset = "0xCA3908", VA = "0xCA3908")]
	public void Lightning()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xCA399C", Offset = "0xCA399C", VA = "0xCA399C")]
	public void StopLightning()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xCA3928", Offset = "0xCA3928", VA = "0xCA3928")]
	[IteratorStateMachine(typeof(<LightningBolt>d__2))]
	public IEnumerator LightningBolt()
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xCA3A44", Offset = "0xCA3A44", VA = "0xCA3A44")]
	public EnviroLightning()
	{
	}
}
[Token(Token = "0x2000097")]
[AddComponentMenu("Enviro/Utility/Seasons for Meshes")]
public class EnviroMeshSeasons : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material SpringMaterial;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SummerMaterial;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material AutumnMaterial;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material WinterMaterial;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer myRenderer;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xCA3CA4", Offset = "0xCA3CA4", VA = "0xCA3CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xCA3EA8", Offset = "0xCA3EA8", VA = "0xCA3EA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xCA3E10", Offset = "0xCA3E10", VA = "0xCA3E10")]
	private void UpdateSeasonMaterial()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xCA40B0", Offset = "0xCA40B0", VA = "0xCA40B0")]
	public EnviroMeshSeasons()
	{
	}
}
[Token(Token = "0x2000098")]
[AddComponentMenu("Enviro/Utility/Seasons for GameObjects")]
public class EnviroSeasonObjectSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SpringObject;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SummerObject;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject AutumnObject;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject WinterObject;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xCA40BC", Offset = "0xCA40BC", VA = "0xCA40BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xCA42D4", Offset = "0xCA42D4", VA = "0xCA42D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xCA415C", Offset = "0xCA415C", VA = "0xCA415C")]
	private void SwitchSeasonObject()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xCA44DC", Offset = "0xCA44DC", VA = "0xCA44DC")]
	public EnviroSeasonObjectSwitcher()
	{
	}
}
[Token(Token = "0x2000099")]
public class EnviroTrigger : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroInterior myZone;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Name;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xCA44E8", Offset = "0xCA44E8", VA = "0xCA44E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xCA44EC", Offset = "0xCA44EC", VA = "0xCA44EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xCA44F0", Offset = "0xCA44F0", VA = "0xCA44F0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xCA46D8", Offset = "0xCA46D8", VA = "0xCA46D8")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xCA45B4", Offset = "0xCA45B4", VA = "0xCA45B4")]
	private void EnterExit()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xCA47B0", Offset = "0xCA47B0", VA = "0xCA47B0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xCA48B0", Offset = "0xCA48B0", VA = "0xCA48B0")]
	public EnviroTrigger()
	{
	}
}
[Token(Token = "0x200009A")]
public class EnviroWindSynchronize : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Terrain Grass")]
	public bool syncTerrainGrassWind;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Terrain> terrains;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Speed")]
	[Range(0f, 10f)]
	public float windChangingSpeed;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xCA48B8", Offset = "0xCA48B8", VA = "0xCA48B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xCA496C", Offset = "0xCA496C", VA = "0xCA496C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xCA4B04", Offset = "0xCA4B04", VA = "0xCA4B04")]
	public EnviroWindSynchronize()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
public class EnviroSkyLite : EnviroCore
{
	[Token(Token = "0x200009C")]
	[CompilerGenerated]
	private sealed class <SetSkyBoxLateAdditive>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroSkyLite <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0xCA95EC", Offset = "0xCA95EC", VA = "0xCA95EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0xCA9634", Offset = "0xCA9634", VA = "0xCA9634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xCA51F4", Offset = "0xCA51F4", VA = "0xCA51F4")]
		[DebuggerHidden]
		public <SetSkyBoxLateAdditive>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xCA94C8", Offset = "0xCA94C8", VA = "0xCA94C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xCA94CC", Offset = "0xCA94CC", VA = "0xCA94CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xCA95F4", Offset = "0xCA95F4", VA = "0xCA95F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009D")]
	[CompilerGenerated]
	private sealed class <UpdateAmbientLightWithDelay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034A")]
			[Address(RVA = "0xCA96D8", Offset = "0xCA96D8", VA = "0xCA96D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034C")]
			[Address(RVA = "0xCA9720", Offset = "0xCA9720", VA = "0xCA9720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xCA6364", Offset = "0xCA6364", VA = "0xCA6364")]
		[DebuggerHidden]
		public <UpdateAmbientLightWithDelay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0xCA963C", Offset = "0xCA963C", VA = "0xCA963C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xCA9640", Offset = "0xCA9640", VA = "0xCA9640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xCA96E0", Offset = "0xCA96E0", VA = "0xCA96E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnviroSkyLite _instance;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public bool useParticleClouds;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x275")]
	public bool usePostEffectFog;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x276")]
	public bool showFogInEditor;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public EnviroSkyRenderingLW EnviroSkyRender;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[HideInInspector]
	public Material skyMat;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private double lastMoonUpdate;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public bool showSettings;

	[Token(Token = "0x17000067")]
	public static EnviroSkyLite instance
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xCA4B9C", Offset = "0xCA4B9C", VA = "0xCA4B9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xCA4C70", Offset = "0xCA4C70", VA = "0xCA4C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xCA5180", Offset = "0xCA5180", VA = "0xCA5180")]
	[IteratorStateMachine(typeof(<SetSkyBoxLateAdditive>d__11))]
	private IEnumerator SetSkyBoxLateAdditive()
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xCA521C", Offset = "0xCA521C", VA = "0xCA521C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xCA5CE4", Offset = "0xCA5CE4", VA = "0xCA5CE4")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xCA5460", Offset = "0xCA5460", VA = "0xCA5460")]
	private void PreInit()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xCA5CE8", Offset = "0xCA5CE8", VA = "0xCA5CE8")]
	public void SetupSkybox()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xCA6304", Offset = "0xCA6304", VA = "0xCA6304")]
	[IteratorStateMachine(typeof(<UpdateAmbientLightWithDelay>d__16))]
	private IEnumerator UpdateAmbientLightWithDelay()
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xCA507C", Offset = "0xCA507C", VA = "0xCA507C")]
	private void Init()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xCA638C", Offset = "0xCA638C", VA = "0xCA638C")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xCA5F4C", Offset = "0xCA5F4C", VA = "0xCA5F4C")]
	private void SetupMainLight()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xCA615C", Offset = "0xCA615C", VA = "0xCA615C")]
	private void SetupAdditionalLight()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xCA7788", Offset = "0xCA7788", VA = "0xCA7788")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xCA8400", Offset = "0xCA8400", VA = "0xCA8400")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xCA653C", Offset = "0xCA653C", VA = "0xCA653C")]
	private void SetMaterialsVariables()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xCA7DEC", Offset = "0xCA7DEC", VA = "0xCA7DEC")]
	private void ValidateParameters()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xCA7E70", Offset = "0xCA7E70", VA = "0xCA7E70")]
	private void UpdateClouds(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCA813C", Offset = "0xCA813C", VA = "0xCA813C")]
	private void UpdateFog(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCA85B4", Offset = "0xCA85B4", VA = "0xCA85B4")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCA8A2C", Offset = "0xCA8A2C", VA = "0xCA8A2C")]
	private void UpdateWeather()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xCA8CF4", Offset = "0xCA8CF4", VA = "0xCA8CF4")]
	public void InstantWeatherChange(EnviroWeatherPreset preset, EnviroWeatherPrefab prefab)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xCA8D38", Offset = "0xCA8D38", VA = "0xCA8D38")]
	public void AssignAndStart(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xCA8D7C", Offset = "0xCA8D7C", VA = "0xCA8D7C")]
	public void StartAsServer()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xCA8DB0", Offset = "0xCA8DB0", VA = "0xCA8DB0")]
	public void ChangeFocus(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xCA8E58", Offset = "0xCA8E58", VA = "0xCA8E58")]
	private void RemoveEnviroCameraComponents(Camera cam)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xCA8F84", Offset = "0xCA8F84", VA = "0xCA8F84")]
	public void Play(EnviroTime.TimeProgressMode progressMode = EnviroTime.TimeProgressMode.Simulated)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xCA90B8", Offset = "0xCA90B8", VA = "0xCA90B8")]
	public void Stop(bool disableLight = false, bool stopTime = true)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xCA9200", Offset = "0xCA9200", VA = "0xCA9200")]
	public void Deactivate(bool disableLight = false)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xCA9330", Offset = "0xCA9330", VA = "0xCA9330")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xCA94B4", Offset = "0xCA94B4", VA = "0xCA94B4")]
	public EnviroSkyLite()
	{
	}
}
[Token(Token = "0x200009E")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
[RequireComponent(typeof(Camera))]
public class EnviroSkyRenderingLW : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isAddionalCamera;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera myCam;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Material material;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool simpleFog;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool currentSimpleFog;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xCA9728", Offset = "0xCA9728", VA = "0xCA9728")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xCA9A28", Offset = "0xCA9A28", VA = "0xCA9A28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xCA9834", Offset = "0xCA9834", VA = "0xCA9834")]
	private void CreateFogMaterial()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xCA9AE8", Offset = "0xCA9AE8", VA = "0xCA9AE8")]
	private void DestroyFogMaterial()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xCA9B78", Offset = "0xCA9B78", VA = "0xCA9B78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xCA9C58", Offset = "0xCA9C58", VA = "0xCA9C58")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xCAA18C", Offset = "0xCAA18C", VA = "0xCAA18C")]
	[ImageEffectOpaque]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xCAA2FC", Offset = "0xCAA2FC", VA = "0xCAA2FC")]
	private void RenderFog(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xCAA594", Offset = "0xCAA594", VA = "0xCAA594")]
	public EnviroSkyRenderingLW()
	{
	}
}
[Token(Token = "0x200009F")]
[AddComponentMenu("Enviro/Lite/AddionalCamera")]
[ExecuteInEditMode]
public class EnviroLiteAdditionalCamera : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	[CompilerGenerated]
	private sealed class <SetupWeatherEffects>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroLiteAdditionalCamera <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000363")]
			[Address(RVA = "0xCABE84", Offset = "0xCABE84", VA = "0xCABE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000365")]
			[Address(RVA = "0xCABECC", Offset = "0xCABECC", VA = "0xCABECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xCAAF3C", Offset = "0xCAAF3C", VA = "0xCAAF3C")]
		[DebuggerHidden]
		public <SetupWeatherEffects>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xCAB474", Offset = "0xCAB474", VA = "0xCAB474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xCAB478", Offset = "0xCAB478", VA = "0xCAB478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xCABE8C", Offset = "0xCABE8C", VA = "0xCABE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addEnviroSkyRendering;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool addEnviroSkyPostProcessing;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool addWeatherEffects;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera myCam;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnviroSkyRenderingLW skyRender;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnviroPostProcessing enviroPostProcessing;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectHolder;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject VFX;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnviroWeatherPrefab> zoneWeather;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnviroWeatherPrefab currentWeather;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xCAA59C", Offset = "0xCAA59C", VA = "0xCAA59C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xCAA824", Offset = "0xCAA824", VA = "0xCAA824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xCAAB14", Offset = "0xCAAB14", VA = "0xCAAB14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCAA85C", Offset = "0xCAA85C", VA = "0xCAA85C")]
	private void CreateEffectHolder()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCAAAA0", Offset = "0xCAAAA0", VA = "0xCAAAA0")]
	[IteratorStateMachine(typeof(<SetupWeatherEffects>d__14))]
	private IEnumerator SetupWeatherEffects()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xCAABA4", Offset = "0xCAABA4", VA = "0xCAABA4")]
	private void UpdateWeatherEffects()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCAAF64", Offset = "0xCAAF64", VA = "0xCAAF64")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xCAA654", Offset = "0xCAA654", VA = "0xCAA654")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xCAADA0", Offset = "0xCAADA0", VA = "0xCAADA0")]
	private void UpdateSkyRenderer()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xCAB3DC", Offset = "0xCAB3DC", VA = "0xCAB3DC")]
	public EnviroLiteAdditionalCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A1")]
public class EnviroRessources
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Cubemap starsTwinklingNoise;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D aurora_layer_1;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D aurora_layer_2;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D aurora_colorshift;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D curlMap;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture3D noiseTextureHigh;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture3D noiseTexture;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture3D detailNoiseTexture;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture3D detailNoiseTextureHigh;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D dither;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D blueNoise;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D distributionTexture;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xCABED4", Offset = "0xCABED4", VA = "0xCABED4")]
	public EnviroRessources()
	{
	}
}
[Token(Token = "0x20000A2")]
[ExecuteInEditMode]
public class EnviroSky : EnviroCore
{
	[Token(Token = "0x20000A3")]
	[CompilerGenerated]
	private sealed class <SetSceneSettingsLate>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroSky <>4__this;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000393")]
			[Address(RVA = "0xD90ED8", Offset = "0xD90ED8", VA = "0xD90ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0xD90F20", Offset = "0xD90F20", VA = "0xD90F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xD90D38", Offset = "0xD90D38", VA = "0xD90D38")]
		[DebuggerHidden]
		public <SetSceneSettingsLate>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xD90D60", Offset = "0xD90D60", VA = "0xD90D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xD90D64", Offset = "0xD90D64", VA = "0xD90D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xD90EE0", Offset = "0xD90EE0", VA = "0xD90EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private sealed class <UpdateAmbientLightWithDelay>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0xD90FEC", Offset = "0xD90FEC", VA = "0xD90FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039B")]
			[Address(RVA = "0xD91034", Offset = "0xD91034", VA = "0xD91034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xD90F28", Offset = "0xD90F28", VA = "0xD90F28")]
		[DebuggerHidden]
		public <UpdateAmbientLightWithDelay>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xD90F50", Offset = "0xD90F50", VA = "0xD90F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xD90F54", Offset = "0xD90F54", VA = "0xD90F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xD90FF4", Offset = "0xD90FF4", VA = "0xD90FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EnviroSky _instance;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[Tooltip("Enable this when using singlepass rendering.")]
	public bool singlePassVR;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x275")]
	[Tooltip("Enable this when using singlepass instanced rendering.")]
	public bool singlePassInstancedVR;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x276")]
	[HideInInspector]
	[Tooltip("Enable this to activate volume lighing")]
	public bool useVolumeLighting;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x277")]
	[HideInInspector]
	public bool useVolumeClouds;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public bool useFog;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	[HideInInspector]
	public bool useFlatClouds;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
	[HideInInspector]
	public bool useParticleClouds;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27B")]
	[HideInInspector]
	public bool useDistanceBlur;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	[HideInInspector]
	public bool useAurora;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
	private bool flatCloudsSkybox;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27E")]
	public bool showVolumeLightingInEditor;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27F")]
	public bool showVolumeCloudsInEditor;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public bool showFlatCloudsInEditor;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	public bool showFogInEditor;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x282")]
	public bool showDistanceBlurInEditor;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x283")]
	public bool showSettings;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public Camera satCamera;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public EnviroVolumeLight directVolumeLight;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public EnviroVolumeLight additionalDirectVolumeLight;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public EnviroSkyRendering EnviroSkyRender;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public float globalVolumeLightIntensity;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float auroraIntensity;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public EnviroVolumeCloudsQuality currentActiveCloudsQualityPreset;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[HideInInspector]
	public RenderTexture cloudsRenderTarget;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[HideInInspector]
	public RenderTexture weatherMap;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[HideInInspector]
	public RenderTexture satRenderTarget;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[HideInInspector]
	public RenderTexture cloudShadowMap;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[HideInInspector]
	public Material skyMat;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[HideInInspector]
	public Material skyReflectionMat;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private Material weatherMapMat;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Material cloudShadowMat;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public List<EnviroVolumeCloudsQuality> cloudsQualityList;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private string[] cloudsQualityPresetsFound;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public int selectedCloudsQuality;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private float starsTwinklingRot;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private EnviroSkySettings.SkyboxModi currentSkyboxMode;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public float blurDistance;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float blurIntensity;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float blurSkyIntensity;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Transform floatingPointOriginAnchor;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Vector3 floatingPointOriginMod;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[HideInInspector]
	public EnviroRessources ressources;

	[Token(Token = "0x1700006E")]
	public static EnviroSky instance
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xCABEDC", Offset = "0xCABEDC", VA = "0xCABEDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xCABFB0", Offset = "0xCABFB0", VA = "0xCABFB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xCAC8A4", Offset = "0xCAC8A4", VA = "0xCAC8A4")]
	[IteratorStateMachine(typeof(<SetSceneSettingsLate>d__46))]
	private IEnumerator SetSceneSettingsLate()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xCAC918", Offset = "0xCAC918", VA = "0xCAC918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xCADF1C", Offset = "0xCADF1C", VA = "0xCADF1C")]
	public void ReInit()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xCAD32C", Offset = "0xCAD32C", VA = "0xCAD32C")]
	private void PreInit()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xCAE4A0", Offset = "0xCAE4A0", VA = "0xCAE4A0")]
	public void SetupSkybox()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xCAEA20", Offset = "0xCAEA20", VA = "0xCAEA20")]
	[IteratorStateMachine(typeof(<UpdateAmbientLightWithDelay>d__51))]
	private IEnumerator UpdateAmbientLightWithDelay()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xCACBD4", Offset = "0xCACBD4", VA = "0xCACBD4")]
	public void LoadRessources()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xCAC6C4", Offset = "0xCAC6C4", VA = "0xCAC6C4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xCAEA80", Offset = "0xCAEA80", VA = "0xCAEA80")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xCAEC30", Offset = "0xCAEC30", VA = "0xCAEC30")]
	public void CreateSatCamera()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xCADF20", Offset = "0xCADF20", VA = "0xCADF20")]
	private void SetupMainLight()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xCAE214", Offset = "0xCAE214", VA = "0xCAE214")]
	private void SetupAdditionalLight()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xCAF0C0", Offset = "0xCAF0C0", VA = "0xCAF0C0")]
	private void RenderWeatherMap()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xCAF3E0", Offset = "0xCAF3E0", VA = "0xCAF3E0")]
	private void RenderCloudMaps()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xCAF420", Offset = "0xCAF420", VA = "0xCAF420")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xCB1434", Offset = "0xCB1434", VA = "0xCB1434")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xCB090C", Offset = "0xCB090C", VA = "0xCB090C")]
	private void UpdateCloudShadows()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xCB16D4", Offset = "0xCB16D4", VA = "0xCB16D4")]
	public void UpdateSkyShaderVariables(Material skyMat)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xCB0AF8", Offset = "0xCB0AF8", VA = "0xCB0AF8")]
	private void SetMaterialsVariables()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xCAFE38", Offset = "0xCAFE38", VA = "0xCAFE38")]
	private void ValidateParameters()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xCAFEBC", Offset = "0xCAFEBC", VA = "0xCAFEBC")]
	private void UpdateClouds(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xCB0288", Offset = "0xCB0288", VA = "0xCB0288")]
	private void UpdateFog(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xCB0538", Offset = "0xCB0538", VA = "0xCB0538")]
	private void UpdatePostProcessing(EnviroWeatherPreset i, bool withTransition)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xCB3030", Offset = "0xCB3030", VA = "0xCB3030")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xCB062C", Offset = "0xCB062C", VA = "0xCB062C")]
	private void UpdateWeather()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xCADED4", Offset = "0xCADED4", VA = "0xCADED4")]
	public void PopulateCloudsQualityList()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xCADED8", Offset = "0xCADED8", VA = "0xCADED8")]
	public void ApplyVolumeCloudsQualityPreset(EnviroVolumeCloudsQuality preset)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xCB34F8", Offset = "0xCB34F8", VA = "0xCB34F8")]
	public void ApplyVolumeCloudsQualityPreset(string name)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xCB3604", Offset = "0xCB3604", VA = "0xCB3604")]
	public void ApplyVolumeCloudsQualityPreset(int id)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xCB36C8", Offset = "0xCB36C8", VA = "0xCB36C8")]
	public void InstantWeatherChange(EnviroWeatherPreset preset, EnviroWeatherPrefab prefab)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xCB371C", Offset = "0xCB371C", VA = "0xCB371C")]
	public void AssignAndStart(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xCB3834", Offset = "0xCB3834", VA = "0xCB3834")]
	public void StartAsServer()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xCB3868", Offset = "0xCB3868", VA = "0xCB3868")]
	public void ChangeFocus(GameObject player, Camera Camera)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xCB3910", Offset = "0xCB3910", VA = "0xCB3910")]
	private void RemoveEnviroCameraComponents(Camera cam)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xCAFC64", Offset = "0xCAFC64", VA = "0xCAFC64")]
	public void Play(EnviroTime.TimeProgressMode progressMode = EnviroTime.TimeProgressMode.Simulated)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xCAFB1C", Offset = "0xCAFB1C", VA = "0xCAFB1C")]
	public void Stop(bool disableLight = false, bool stopTime = true)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xCB3A3C", Offset = "0xCB3A3C", VA = "0xCB3A3C")]
	public void Deactivate(bool disableLight = false)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xCB3B6C", Offset = "0xCB3B6C", VA = "0xCB3B6C")]
	public void Activate()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xCB3CF0", Offset = "0xCB3CF0", VA = "0xCB3CF0")]
	public EnviroSky()
	{
	}
}
[Token(Token = "0x20000A5")]
public class EnviroHaltonSequence
{
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int radix;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int storedIndex;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD9103C", Offset = "0xD9103C", VA = "0xD9103C")]
	public float Get()
	{
		return default(float);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xD91094", Offset = "0xD91094", VA = "0xD91094")]
	public EnviroHaltonSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A6")]
public class EnviroCustomRenderingSettings
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Feature Control")]
	public bool useVolumeClouds;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useVolumeLighting;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useDistanceBlur;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useFog;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroVolumeCloudsQuality customCloudsQuality;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD910A4", Offset = "0xD910A4", VA = "0xD910A4")]
	public EnviroCustomRenderingSettings()
	{
	}
}
[Token(Token = "0x20000A7")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
[RequireComponent(typeof(Camera))]
public class EnviroSkyRendering : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum FogType
	{
		[Token(Token = "0x40004C3")]
		Disabled,
		[Token(Token = "0x40004C4")]
		Simple,
		[Token(Token = "0x40004C5")]
		Standard
	}

	[Token(Token = "0x20000A9")]
	public enum VolumtericResolution
	{
		[Token(Token = "0x40004C7")]
		Full,
		[Token(Token = "0x40004C8")]
		Half,
		[Token(Token = "0x40004C9")]
		Quarter
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool aboveClouds;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool isAddionalCamera;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera myCam;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture spSatTex;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera spSatCam;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useGlobalRenderingSettings;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EnviroCustomRenderingSettings customRenderingSettings;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool useVolumeClouds;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool useVolumeLighting;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool useDistanceBlur;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool useFog;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public FogType currentFogType;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnviroHaltonSequence sequence;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material cloudsMat;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material blitMat;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material compose;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material downsample;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture subFrameTex;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture prevFrameTex;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Matrix4x4 projection;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Matrix4x4 projectionSPVR;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Matrix4x4 inverseRotation;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Matrix4x4 inverseRotationSPVR;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Matrix4x4 rotation;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Matrix4x4 rotationSPVR;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Matrix4x4 previousRotation;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Matrix4x4 previousRotationSPVR;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public EnviroVolumeCloudsQualitySettings.ReprojectionPixelSize currentReprojectionPixelSize;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private int reprojectionPixelSize;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool isFirstFrame;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int subFrameNumber;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private int[] frameList;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private int renderingCounter;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private int subFrameWidth;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private int subFrameHeight;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private int frameWidth;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private int frameHeight;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private bool textureDimensionChanged;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private EnviroVolumeCloudsQualitySettings usedCloudsQuality;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Mesh _pointLightMesh;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Mesh _spotLightMesh;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Material _lightMaterial;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private CommandBuffer _preLightPass;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public CommandBuffer _afterLightPass;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Matrix4x4 _viewProj;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Matrix4x4 _viewProjSP;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[HideInInspector]
	public Material fogMat;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private Material _bilateralBlurMaterial;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private RenderTexture _volumeLightTexture;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private RenderTexture _halfVolumeLightTexture;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private RenderTexture _quarterVolumeLightTexture;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Texture _defaultSpotCookie;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private RenderTexture _halfDepthBuffer;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private RenderTexture _quarterDepthBuffer;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private VolumtericResolution currentVolumeRes;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	[HideInInspector]
	public Texture2D _ditheringTexture;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private Texture2D blackTexture;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[HideInInspector]
	public Texture DefaultSpotCookie;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[HideInInspector]
	public Material volumeLightMat;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private Material postProcessMat;

	[Token(Token = "0x40004BF")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private RenderTexture[] _blurBuffer1;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private RenderTexture[] _blurBuffer2;

	[Token(Token = "0x17000073")]
	public CommandBuffer GlobalCommandBuffer
	{
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xD9124C", Offset = "0xD9124C", VA = "0xD9124C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public CommandBuffer GlobalCommandBufferForward
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xD91254", Offset = "0xD91254", VA = "0xD91254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public float thresholdGamma
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xD91454", Offset = "0xD91454", VA = "0xD91454")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000076")]
	public float thresholdLinear
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xD9145C", Offset = "0xD9145C", VA = "0xD9145C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<EnviroSkyRendering, Matrix4x4, Matrix4x4> PreRenderEvent
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xD910B4", Offset = "0xD910B4", VA = "0xD910B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xD91180", Offset = "0xD91180", VA = "0xD91180")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD9125C", Offset = "0xD9125C", VA = "0xD9125C")]
	public static Material GetLightMaterial()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD912A4", Offset = "0xD912A4", VA = "0xD912A4")]
	public static Mesh GetPointLightMesh()
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD912EC", Offset = "0xD912EC", VA = "0xD912EC")]
	public static Mesh GetSpotLightMesh()
	{
		return null;
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD91334", Offset = "0xD91334", VA = "0xD91334")]
	public RenderTexture GetVolumeLightBuffer()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD913A0", Offset = "0xD913A0", VA = "0xD913A0")]
	public RenderTexture GetVolumeLightDepthBuffer()
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD9140C", Offset = "0xD9140C", VA = "0xD9140C")]
	public static Texture GetDefaultSpotCookie()
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD91468", Offset = "0xD91468", VA = "0xD91468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xD923B4", Offset = "0xD923B4", VA = "0xD923B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD92448", Offset = "0xD92448", VA = "0xD92448")]
	private void CleanupMaterials()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD91DFC", Offset = "0xD91DFC", VA = "0xD91DFC")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD923CC", Offset = "0xD923CC", VA = "0xD923CC")]
	private void RemoveCommandBuffer()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD91AEC", Offset = "0xD91AEC", VA = "0xD91AEC")]
	private void SetupVolumeFog()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD926D0", Offset = "0xD926D0", VA = "0xD926D0")]
	private void ChangeResolution()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD91F38", Offset = "0xD91F38", VA = "0xD91F38")]
	private void CreateFogMaterial()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD9165C", Offset = "0xD9165C", VA = "0xD9165C")]
	private void CreateMaterialsAndTextures()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD938EC", Offset = "0xD938EC", VA = "0xD938EC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD94D94", Offset = "0xD94D94", VA = "0xD94D94")]
	private void RenderCamera(Camera targetCam, Camera.MonoOrStereoscopicEye eye)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD9221C", Offset = "0xD9221C", VA = "0xD9221C")]
	private void UpdateQualitySettings()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD9511C", Offset = "0xD9511C", VA = "0xD9511C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD95344", Offset = "0xD95344", VA = "0xD95344")]
	[ImageEffectOpaque]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD95C00", Offset = "0xD95C00", VA = "0xD95C00")]
	private void RenderVolumeClouds(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD96FF0", Offset = "0xD96FF0", VA = "0xD96FF0")]
	private void RenderFog(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD9632C", Offset = "0xD9632C", VA = "0xD9632C")]
	private void RenderVolumeFog(RenderTexture src, RenderTexture dst)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD97508", Offset = "0xD97508", VA = "0xD97508")]
	private void RenderDistanceBlur(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD94BAC", Offset = "0xD94BAC", VA = "0xD94BAC")]
	private void UpdateMaterialParameters()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD93310", Offset = "0xD93310", VA = "0xD93310")]
	private void GenerateDitherTexture()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD92D68", Offset = "0xD92D68", VA = "0xD92D68")]
	private Mesh CreateSpotLightMesh()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD98C6C", Offset = "0xD98C6C", VA = "0xD98C6C")]
	public void SetCloudProperties()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD9870C", Offset = "0xD9870C", VA = "0xD9870C")]
	private void SetBlitmaterialProperties()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xD98628", Offset = "0xD98628", VA = "0xD98628")]
	private RenderTexture DownsampleDepth(int X, int Y, Texture src, Material mat, int downsampleFactor)
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xD98504", Offset = "0xD98504", VA = "0xD98504")]
	private void RenderClouds(RenderTexture source, RenderTexture tex)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xD981C8", Offset = "0xD981C8", VA = "0xD981C8")]
	private void CreateCloudsRenderTextures(RenderTexture source)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD92344", Offset = "0xD92344", VA = "0xD92344")]
	private void SetReprojectionPixelSize(EnviroVolumeCloudsQualitySettings.ReprojectionPixelSize pSize)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xD97F30", Offset = "0xD97F30", VA = "0xD97F30")]
	private void StartFrame()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD98BB0", Offset = "0xD98BB0", VA = "0xD98BB0")]
	private void FinalizeFrame()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xD9A164", Offset = "0xD9A164", VA = "0xD9A164")]
	private bool UpdateFrameDimensions()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xD9A018", Offset = "0xD9A018", VA = "0xD9A018")]
	private int[] CalculateFrames(int reproSize)
	{
		return null;
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD9A320", Offset = "0xD9A320", VA = "0xD9A320")]
	public EnviroSkyRendering()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AA")]
public class EnviroVolumeCloudsQualitySettings
{
	[Token(Token = "0x20000AB")]
	public enum ReprojectionPixelSize
	{
		[Token(Token = "0x40004D8")]
		Off,
		[Token(Token = "0x40004D9")]
		Low,
		[Token(Token = "0x40004DA")]
		Medium,
		[Token(Token = "0x40004DB")]
		High
	}

	[Token(Token = "0x20000AC")]
	public enum CloudDetailQuality
	{
		[Token(Token = "0x40004DD")]
		Low,
		[Token(Token = "0x40004DE")]
		High
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Clouds start height.")]
	[Header("Clouds Height Settings")]
	public float bottomCloudHeight;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Clouds end height.")]
	public float topCloudHeight;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Number of raymarching samples.")]
	[Range(32f, 256f)]
	[Header("Raymarch Step Settings")]
	public int raymarchSteps;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0.1f, 1f)]
	[Tooltip("Increase performance by using less steps when clouds are hidden by objects.")]
	public float stepsInDepthModificator;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 0.5f)]
	[Tooltip("Increase performance by using early exit expensive raymarching. Higher values = more performant but less accurate lighting.")]
	public float transmissionToExit;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 8f)]
	[Header("Resolution, Upsample and Reprojection")]
	[Tooltip("Downsampling of clouds rendering. 1 = full res, 2 = half Res, ...")]
	public int cloudsRenderResolution;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ReprojectionPixelSize reprojectionPixelSize;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	[Tooltip("LOD Distance for using lower res 3d texture for far away clouds. ")]
	[Header("Clouds Modelling")]
	public float lodDistance;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The UV scale of base noise. High Values = Low performance!")]
	[Range(2f, 100f)]
	public float baseNoiseUV;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(2f, 100f)]
	[Tooltip("The UV scale of detail noise. High Values = Low performance!")]
	public float detailNoiseUV;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Enable to use a curl noise to further enhance the detail erode.")]
	public bool useCurlNoise;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Resolution of Base Noise Texture.")]
	public CloudDetailQuality baseQuality;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Resolution of Detail Noise Texture.")]
	public CloudDetailQuality detailQuality;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xD9A448", Offset = "0xD9A448", VA = "0xD9A448")]
	public EnviroVolumeCloudsQualitySettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AD")]
public class EnviroVolumeCloudsQuality : ScriptableObject
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnviroVolumeCloudsQualitySettings qualitySettings;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xD9A48C", Offset = "0xD9A48C", VA = "0xD9A48C")]
	public EnviroVolumeCloudsQuality()
	{
	}
}
[Token(Token = "0x20000AE")]
public static class EnviroCloudsQualityCreation
{
	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xD9A494", Offset = "0xD9A494", VA = "0xD9A494")]
	public static GameObject GetAssetPrefab(string name)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xD9A49C", Offset = "0xD9A49C", VA = "0xD9A49C")]
	public static AudioClip GetAudioClip(string name)
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xD9A4A4", Offset = "0xD9A4A4", VA = "0xD9A4A4")]
	public static Cubemap GetAssetCubemap(string name)
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xD9A4AC", Offset = "0xD9A4AC", VA = "0xD9A4AC")]
	public static EnviroProfile GetDefaultProfile(string name)
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xD9A4B4", Offset = "0xD9A4B4", VA = "0xD9A4B4")]
	public static Texture GetAssetTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xD9A4BC", Offset = "0xD9A4BC", VA = "0xD9A4BC")]
	public static Gradient CreateGradient(Color clr1, float time1, Color clr2, float time2)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xD9A604", Offset = "0xD9A604", VA = "0xD9A604")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xD9A7B4", Offset = "0xD9A7B4", VA = "0xD9A7B4")]
	public static Gradient CreateGradient(List<Color> clrs, List<float> times, List<float> alpha, List<float> timesAlpha)
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xD9A9C4", Offset = "0xD9A9C4", VA = "0xD9A9C4")]
	public static Color GetColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xD9A9F0", Offset = "0xD9A9F0", VA = "0xD9A9F0")]
	public static Keyframe CreateKey(float value, float time)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xD9AA4C", Offset = "0xD9AA4C", VA = "0xD9AA4C")]
	public static Keyframe CreateKey(float value, float time, float inTangent, float outTangent)
	{
		return default(Keyframe);
	}
}
[Token(Token = "0x20000AF")]
[AddComponentMenu("Enviro/Volume Light")]
[RequireComponent(typeof(Light))]
[ExecuteInEditMode]
public class EnviroVolumeLight : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light _light;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _material;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader volumeLightShader;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader volumeLightBlurShader;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer _commandBuffer;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer _cascadeShadowCommandBuffer;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RenderTexture temp;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(1f, 64f)]
	public int SampleCount;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool scaleWithTime;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Range(0f, 1f)]
	public float ScatteringCoef;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(0f, 0.1f)]
	public float ExtinctionCoef;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 0.999f)]
	public float Anistropy;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Header("3D Noise")]
	public bool Noise;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float NoiseScale;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float NoiseIntensity;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public float NoiseIntensityOffset;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector2 NoiseVelocity;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _reversedZ;

	[Token(Token = "0x17000077")]
	public Light Light
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD9AC38", Offset = "0xD9AC38", VA = "0xD9AC38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000078")]
	public Material VolumetricMaterial
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD9AC40", Offset = "0xD9AC40", VA = "0xD9AC40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<EnviroSkyRendering, EnviroVolumeLight, CommandBuffer, Matrix4x4> CustomRenderEvent
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xD9AAD8", Offset = "0xD9AAD8", VA = "0xD9AAD8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD9AB88", Offset = "0xD9AB88", VA = "0xD9AB88")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xD9AC48", Offset = "0xD9AC48", VA = "0xD9AC48")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xD9ACC0", Offset = "0xD9ACC0", VA = "0xD9ACC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xD9B0AC", Offset = "0xD9B0AC", VA = "0xD9B0AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xD9B1C4", Offset = "0xD9B1C4", VA = "0xD9B1C4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xD9B220", Offset = "0xD9B220", VA = "0xD9B220")]
	private void VolumetricLightRenderer_PreRenderEvent(EnviroSkyRendering renderer, Matrix4x4 viewProj, Matrix4x4 viewProjSP)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xD9B78C", Offset = "0xD9B78C", VA = "0xD9B78C")]
	private void SetupPointLight(EnviroSkyRendering renderer, Matrix4x4 viewProj, Matrix4x4 viewProjSP)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xD9C420", Offset = "0xD9C420", VA = "0xD9C420")]
	private void SetupSpotLight(EnviroSkyRendering renderer, Matrix4x4 viewProj, Matrix4x4 viewProjSP)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xD9DB0C", Offset = "0xD9DB0C", VA = "0xD9DB0C")]
	private bool IsCameraInPointLightBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xD9DBC4", Offset = "0xD9DBC4", VA = "0xD9DBC4")]
	private bool IsCameraInSpotLightBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xD9DE44", Offset = "0xD9DE44", VA = "0xD9DE44")]
	public EnviroVolumeLight()
	{
	}
}
[Token(Token = "0x20000B0")]
[ExecuteInEditMode]
[AddComponentMenu("Enviro/Standard/AddionalCamera")]
public class EnviroAdditionalCamera : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	[CompilerGenerated]
	private sealed class <SetupWeatherEffects>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnviroAdditionalCamera <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0xD9F540", Offset = "0xD9F540", VA = "0xD9F540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xD9F588", Offset = "0xD9F588", VA = "0xD9F588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xD9E608", Offset = "0xD9E608", VA = "0xD9E608")]
		[DebuggerHidden]
		public <SetupWeatherEffects>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xD9EB44", Offset = "0xD9EB44", VA = "0xD9EB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xD9EB48", Offset = "0xD9EB48", VA = "0xD9EB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xD9F548", Offset = "0xD9F548", VA = "0xD9F548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addEnviroSkyRendering;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool addEnviroSkyPostProcessing;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool addWeatherEffects;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera myCam;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnviroSkyRendering skyRender;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnviroPostProcessing enviroPostProcessing;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectHolder;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject VFX;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnviroWeatherPrefab> zoneWeather;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnviroWeatherPrefab currentWeather;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xD9DE94", Offset = "0xD9DE94", VA = "0xD9DE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD9E11C", Offset = "0xD9E11C", VA = "0xD9E11C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD9E40C", Offset = "0xD9E40C", VA = "0xD9E40C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD9E154", Offset = "0xD9E154", VA = "0xD9E154")]
	private void CreateEffectHolder()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD9E398", Offset = "0xD9E398", VA = "0xD9E398")]
	[IteratorStateMachine(typeof(<SetupWeatherEffects>d__14))]
	private IEnumerator SetupWeatherEffects()
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xD9E41C", Offset = "0xD9E41C", VA = "0xD9E41C")]
	private void UpdateWeatherEffects()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xD9E630", Offset = "0xD9E630", VA = "0xD9E630")]
	private void UpdateEffectSystems(EnviroWeatherPrefab id, bool withTransition)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xD9DF4C", Offset = "0xD9DF4C", VA = "0xD9DF4C")]
	private void InitImageEffects()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xD9EAAC", Offset = "0xD9EAAC", VA = "0xD9EAAC")]
	public EnviroAdditionalCamera()
	{
	}
}
[Token(Token = "0x20000B2")]
public class CursorHit : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HeadLookController headLook;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offset;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xD9F590", Offset = "0xD9F590", VA = "0xD9F590")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xD9F594", Offset = "0xD9F594", VA = "0xD9F594")]
	public CursorHit()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class BendingSegment
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform firstTransform;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastTransform;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thresholdAngleDifference;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bendingMultiplier;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngleDifference;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxBendingAngle;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float responsiveness;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal float angleH;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal float angleV;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal Vector3 dirUp;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Vector3 referenceLookDir;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal Vector3 referenceUpDir;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int chainLength;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal Quaternion[] origRotations;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xD9F5A4", Offset = "0xD9F5A4", VA = "0xD9F5A4")]
	public BendingSegment()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B4")]
public class NonAffectedJoints
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform joint;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effect;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xD9F5B8", Offset = "0xD9F5B8", VA = "0xD9F5B8")]
	public NonAffectedJoints()
	{
	}
}
[Token(Token = "0x20000B5")]
public class HeadLookController : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootNode;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BendingSegment[] segments;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NonAffectedJoints[] nonAffectedJoints;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 headLookVector;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 headUpVector;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 target;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float effect;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool overrideAnimation;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xD9F5C0", Offset = "0xD9F5C0", VA = "0xD9F5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xD9FBC8", Offset = "0xD9FBC8", VA = "0xD9FBC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xDA0E18", Offset = "0xDA0E18", VA = "0xDA0E18")]
	public static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDA1148", Offset = "0xDA1148", VA = "0xDA1148")]
	public HeadLookController()
	{
	}
}
[Token(Token = "0x20000B6")]
public class HelpText : MonoBehaviour
{
	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDE47CC", Offset = "0xDE47CC", VA = "0xDE47CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDE4984", Offset = "0xDE4984", VA = "0xDE4984")]
	public HelpText()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OrbitCamera : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cam;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraRotSide;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cameraRotUp;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float cameraRotSideCur;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cameraRotUpCur;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float distance;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xDE498C", Offset = "0xDE498C", VA = "0xDE498C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xDE4A24", Offset = "0xDE4A24", VA = "0xDE4A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xDE4DA0", Offset = "0xDE4DA0", VA = "0xDE4DA0")]
	public OrbitCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B8")]
public class IKControl : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform forearm;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hand;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float transition;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float elbowAngle;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform armIK;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform armRotation;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float upperArmLength;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float forearmLength;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float armLength;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xDE4E00", Offset = "0xDE4E00", VA = "0xDE4E00", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xDE5068", Offset = "0xDE5068", VA = "0xDE5068", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xDE506C", Offset = "0xDE506C", VA = "0xDE506C", Slot = "6")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xDE5188", Offset = "0xDE5188", VA = "0xDE5188")]
	public IKControl()
	{
	}
}
[Token(Token = "0x20000B9")]
public class IKLimb : MonoBehaviour
{
	[Token(Token = "0x20000BA")]
	public enum HandRotations
	{
		[Token(Token = "0x4000542")]
		KeepLocalRotation,
		[Token(Token = "0x4000543")]
		KeepGlobalRotation,
		[Token(Token = "0x4000544")]
		UseTargetRotation
	}

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upperArm;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forearm;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hand;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform elbowTarget;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsEnabled;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool debug;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float transition;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool idleOptimization;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public HandRotations handRotationPolicy;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion upperArmStartRotation;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion forearmStartRotation;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion handStartRotation;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 targetRelativeStartPosition;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 elbowTargetRelativeStartPosition;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject upperArmAxisCorrection;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject forearmAxisCorrection;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject handAxisCorrection;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 lastUpperArmPosition;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 lastTargetPosition;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastElbowTargetPosition;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDE51A8", Offset = "0xDE51A8", VA = "0xDE51A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDE5484", Offset = "0xDE5484", VA = "0xDE5484")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xDE5494", Offset = "0xDE5494", VA = "0xDE5494")]
	private void CalculateIK()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xDE6414", Offset = "0xDE6414", VA = "0xDE6414")]
	public IKLimb()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
public class ikLimb : MonoBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upperArm;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forearm;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hand;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform elbowTarget;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsEnabled;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool debug;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float transition;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion upperArmStartRotation;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion forearmStartRotation;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion handStartRotation;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 targetRelativeStartPosition;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 elbowTargetRelativeStartPosition;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xDE6424", Offset = "0xDE6424", VA = "0xDE6424", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xDE6510", Offset = "0xDE6510", VA = "0xDE6510", Slot = "5")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xDE6528", Offset = "0xDE6528", VA = "0xDE6528", Slot = "6")]
	public virtual void CalculateIK()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xDE72D4", Offset = "0xDE72D4", VA = "0xDE72D4")]
	public ikLimb()
	{
	}
}
[Token(Token = "0x20000BC")]
public class FurDemo : MonoBehaviour
{
	[Token(Token = "0x600040E")]
	[Address(RVA = "0xDE72FC", Offset = "0xDE72FC", VA = "0xDE72FC")]
	public void HandlePhysics()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xDE7340", Offset = "0xDE7340", VA = "0xDE7340")]
	public void HandleLOD()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xDE7384", Offset = "0xDE7384", VA = "0xDE7384")]
	public FurDemo()
	{
	}
}
[Token(Token = "0x20000BD")]
public class Grass0 : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] mats;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer render;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int matIndex;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xDE738C", Offset = "0xDE738C", VA = "0xDE738C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xDE73F4", Offset = "0xDE73F4", VA = "0xDE73F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xDE7490", Offset = "0xDE7490", VA = "0xDE7490")]
	public Grass0()
	{
	}
}
[Token(Token = "0x20000BE")]
public class HUDFPS : MonoBehaviour
{
	[Token(Token = "0x20000BF")]
	[CompilerGenerated]
	private sealed class <FPS>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HUDFPS <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xDE7B2C", Offset = "0xDE7B2C", VA = "0xDE7B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0xDE7B74", Offset = "0xDE7B74", VA = "0xDE7B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xDE7554", Offset = "0xDE7554", VA = "0xDE7554")]
		[DebuggerHidden]
		public <FPS>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xDE7968", Offset = "0xDE7968", VA = "0xDE7968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xDE796C", Offset = "0xDE796C", VA = "0xDE796C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xDE7B34", Offset = "0xDE7B34", VA = "0xDE7B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect startRect;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateColor;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool allowDrag;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float frequency;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int nbDecimal;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double lastInterval;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int frames;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color color;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string sFPS;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle style;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDE7498", Offset = "0xDE7498", VA = "0xDE7498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDE7544", Offset = "0xDE7544", VA = "0xDE7544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xDE74D0", Offset = "0xDE74D0", VA = "0xDE74D0")]
	[IteratorStateMachine(typeof(<FPS>d__12))]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDE757C", Offset = "0xDE757C", VA = "0xDE757C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDE776C", Offset = "0xDE776C", VA = "0xDE776C")]
	private void DoMyWindow(int windowID)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDE78B8", Offset = "0xDE78B8", VA = "0xDE78B8")]
	public HUDFPS()
	{
	}
}
[Token(Token = "0x20000C0")]
public class LODDemo : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lodSphere;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text buttonLabel;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool lodOn;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xDE7B7C", Offset = "0xDE7B7C", VA = "0xDE7B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDE7D10", Offset = "0xDE7D10", VA = "0xDE7D10")]
	public void ToggleLod()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDE7D9C", Offset = "0xDE7D9C", VA = "0xDE7D9C")]
	public void HandleBack()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xDE7DE0", Offset = "0xDE7DE0", VA = "0xDE7DE0")]
	public LODDemo()
	{
	}
}
[Token(Token = "0x20000C1")]
public class LODSphere : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODSphere <>4__this;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pointA>5__2;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <pointB>5__3;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0xDE831C", Offset = "0xDE831C", VA = "0xDE831C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042D")]
			[Address(RVA = "0xDE8364", Offset = "0xDE8364", VA = "0xDE8364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xDE7E64", Offset = "0xDE7E64", VA = "0xDE7E64")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xDE807C", Offset = "0xDE807C", VA = "0xDE807C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xDE8080", Offset = "0xDE8080", VA = "0xDE8080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xDE8324", Offset = "0xDE8324", VA = "0xDE8324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <MoveObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform thisTransform;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startPos;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 endPos;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <i>5__2;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <rate>5__3;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0xDE845C", Offset = "0xDE845C", VA = "0xDE845C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0xDE84A4", Offset = "0xDE84A4", VA = "0xDE84A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xDE8044", Offset = "0xDE8044", VA = "0xDE8044")]
		[DebuggerHidden]
		public <MoveObject>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xDE836C", Offset = "0xDE836C", VA = "0xDE836C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xDE8370", Offset = "0xDE8370", VA = "0xDE8370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xDE8464", Offset = "0xDE8464", VA = "0xDE8464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ImperialFurLOD lodScript;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LODDemo demoScript;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool lodEnabled;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string shaderBase;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xDE7DF0", Offset = "0xDE7DF0", VA = "0xDE7DF0")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xDE7E8C", Offset = "0xDE7E8C", VA = "0xDE7E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xDE7F84", Offset = "0xDE7F84", VA = "0xDE7F84")]
	[IteratorStateMachine(typeof(<MoveObject>d__7))]
	private IEnumerator MoveObject(Transform thisTransform, Vector3 startPos, Vector3 endPos, float time)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xDE806C", Offset = "0xDE806C", VA = "0xDE806C")]
	public LODSphere()
	{
	}
}
[Token(Token = "0x20000C4")]
public class PhysicsDemo : MonoBehaviour
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spheres;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text shellText;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text shaderText;

	[Token(Token = "0x400057A")]
	private const int shell10 = 0;

	[Token(Token = "0x400057B")]
	private const int shell20 = 1;

	[Token(Token = "0x400057C")]
	private const int shell40 = 2;

	[Token(Token = "0x400057D")]
	private const int typeMain = 0;

	[Token(Token = "0x400057E")]
	private const int typeSimple = 1;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int shellCount;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int type;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xDE84AC", Offset = "0xDE84AC", VA = "0xDE84AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xDE875C", Offset = "0xDE875C", VA = "0xDE875C")]
	public void ToggleShellCount()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xDE8774", Offset = "0xDE8774", VA = "0xDE8774")]
	public void ToggleShader()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xDE84BC", Offset = "0xDE84BC", VA = "0xDE84BC")]
	private void SetShaders()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xDE878C", Offset = "0xDE878C", VA = "0xDE878C")]
	public void HandleBack()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDE87D0", Offset = "0xDE87D0", VA = "0xDE87D0")]
	public PhysicsDemo()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Tips : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text[] tip;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] mat;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer torus;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ImperialFurPhysics wind;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currTip;

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xDE87D8", Offset = "0xDE87D8", VA = "0xDE87D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDE88DC", Offset = "0xDE88DC", VA = "0xDE88DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDE87E4", Offset = "0xDE87E4", VA = "0xDE87E4")]
	private void ShowTip(int index)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDE89BC", Offset = "0xDE89BC", VA = "0xDE89BC")]
	public Tips()
	{
	}
}
[Token(Token = "0x20000C6")]
public class WallForce : MonoBehaviour
{
	[Token(Token = "0x600043E")]
	[Address(RVA = "0xDE89C4", Offset = "0xDE89C4", VA = "0xDE89C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xDE89C8", Offset = "0xDE89C8", VA = "0xDE89C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDE89CC", Offset = "0xDE89CC", VA = "0xDE89CC")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDE8A50", Offset = "0xDE8A50", VA = "0xDE8A50")]
	public WallForce()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ImperialFurLOD : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float from40To20;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float from20To10;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float from10To5;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float from5To2;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float from2To1;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string shaderBase;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader[] shaders;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lodLevel;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ImperialFurPhysics physicsScript;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDE8A58", Offset = "0xDE8A58", VA = "0xDE8A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDE8E58", Offset = "0xDE8E58", VA = "0xDE8E58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDE7F78", Offset = "0xDE7F78", VA = "0xDE7F78")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDE91A8", Offset = "0xDE91A8", VA = "0xDE91A8")]
	public ImperialFurLOD()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ImperialFurPhysics : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useRigidbody;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool usePhysicsGravity;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool physicsEnabled;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool windEnabled;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 AdditionalGravity;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forceScale;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravityScale;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float forceDamping;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform thisTransform;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 oldPosition;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 forceSmooth;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDE91B0", Offset = "0xDE91B0", VA = "0xDE91B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDE9328", Offset = "0xDE9328", VA = "0xDE9328")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xDE9620", Offset = "0xDE9620", VA = "0xDE9620")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xDE9444", Offset = "0xDE9444", VA = "0xDE9444")]
	private void CalculateAdditionalForce(Vector3 force)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xDE9110", Offset = "0xDE9110", VA = "0xDE9110")]
	public void UpdatePhysics()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xDE8948", Offset = "0xDE8948", VA = "0xDE8948")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xDE96B8", Offset = "0xDE96B8", VA = "0xDE96B8")]
	public ImperialFurPhysics()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ImperialFurWind : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float windDamping;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minWindForce;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxWindForce;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static Vector3 windForce;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xDE9738", Offset = "0xDE9738", VA = "0xDE9738")]
	private void Start()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xDE973C", Offset = "0xDE973C", VA = "0xDE973C")]
	private void Update()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xDE9874", Offset = "0xDE9874", VA = "0xDE9874")]
	public ImperialFurWind()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Example : MonoBehaviour
{
	[Token(Token = "0x20000CB")]
	[CompilerGenerated]
	private sealed class <DisplayBigLoading>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Example <>4__this;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform prefab;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0xDEA494", Offset = "0xDEA494", VA = "0xDEA494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0xDEA4DC", Offset = "0xDEA4DC", VA = "0xDEA4DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xDEA1D4", Offset = "0xDEA1D4", VA = "0xDEA1D4")]
		[DebuggerHidden]
		public <DisplayBigLoading>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xDEA2A4", Offset = "0xDEA2A4", VA = "0xDEA2A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xDEA2A8", Offset = "0xDEA2A8", VA = "0xDEA2A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xDEA49C", Offset = "0xDEA49C", VA = "0xDEA49C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	[CompilerGenerated]
	private sealed class <DisplayBigLoadingBox>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Example <>4__this;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rect loadingRect;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool withText;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool withBg;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000460")]
			[Address(RVA = "0xDEABC4", Offset = "0xDEABC4", VA = "0xDEABC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0xDEAC0C", Offset = "0xDEAC0C", VA = "0xDEAC0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xDEA1FC", Offset = "0xDEA1FC", VA = "0xDEA1FC")]
		[DebuggerHidden]
		public <DisplayBigLoadingBox>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xDEA4E4", Offset = "0xDEA4E4", VA = "0xDEA4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xDEA4E8", Offset = "0xDEA4E8", VA = "0xDEA4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xDEABCC", Offset = "0xDEABCC", VA = "0xDEABCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private sealed class <DisplayLoadingBar>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Example <>4__this;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool withText;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool withPercent;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xDEAF6C", Offset = "0xDEAF6C", VA = "0xDEAF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0xDEAFB4", Offset = "0xDEAFB4", VA = "0xDEAFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xDEA224", Offset = "0xDEA224", VA = "0xDEA224")]
		[DebuggerHidden]
		public <DisplayLoadingBar>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xDEAC14", Offset = "0xDEAC14", VA = "0xDEAC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xDEAC18", Offset = "0xDEAC18", VA = "0xDEAC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xDEAF74", Offset = "0xDEAF74", VA = "0xDEAF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform loadingPrefab;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform loadingPrefab2;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform loadingPrefab3;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform loadingClone;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Loading loadingComp;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rect defaultRect;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xDE9910", Offset = "0xDE9910", VA = "0xDE9910")]
	private void Start()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xDE99CC", Offset = "0xDE99CC", VA = "0xDE99CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xDE9FF4", Offset = "0xDE9FF4", VA = "0xDE9FF4")]
	[IteratorStateMachine(typeof(<DisplayBigLoading>d__8))]
	private IEnumerator DisplayBigLoading(Transform prefab)
	{
		return null;
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xDEA084", Offset = "0xDEA084", VA = "0xDEA084")]
	[IteratorStateMachine(typeof(<DisplayBigLoadingBox>d__9))]
	private IEnumerator DisplayBigLoadingBox(bool withText, bool withBg, Rect loadingRect)
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xDEA140", Offset = "0xDEA140", VA = "0xDEA140")]
	[IteratorStateMachine(typeof(<DisplayLoadingBar>d__10))]
	private IEnumerator DisplayLoadingBar(bool withText, bool withPercent)
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xDEA24C", Offset = "0xDEA24C", VA = "0xDEA24C")]
	public Example()
	{
	}
}
[Token(Token = "0x20000CE")]
public class Loading : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum loadingBarPercentPositions
	{
		[Token(Token = "0x40005DB")]
		None,
		[Token(Token = "0x40005DC")]
		Top,
		[Token(Token = "0x40005DD")]
		Hover,
		[Token(Token = "0x40005DE")]
		Bottom
	}

	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <Counter>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Loading <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xDEBA20", Offset = "0xDEBA20", VA = "0xDEBA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xDEBA68", Offset = "0xDEBA68", VA = "0xDEBA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xDEB688", Offset = "0xDEB688", VA = "0xDEB688")]
		[DebuggerHidden]
		public <Counter>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xDEB918", Offset = "0xDEB918", VA = "0xDEB918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xDEB91C", Offset = "0xDEB91C", VA = "0xDEB91C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xDEBA28", Offset = "0xDEBA28", VA = "0xDEBA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <LoadingSprite>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Loading <>4__this;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xDEBC1C", Offset = "0xDEBC1C", VA = "0xDEBC1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0xDEBC64", Offset = "0xDEBC64", VA = "0xDEBC64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xDEB724", Offset = "0xDEB724", VA = "0xDEB724")]
		[DebuggerHidden]
		public <LoadingSprite>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xDEBA70", Offset = "0xDEBA70", VA = "0xDEBA70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xDEBA74", Offset = "0xDEBA74", VA = "0xDEBA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xDEBC24", Offset = "0xDEBC24", VA = "0xDEBC24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rect loadingRect;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showBackground;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D background;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float loadingMargin;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool showText;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int counter;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string loadingText;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool showLoadingTextPoints;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int loadingTextPointsNumber;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rect loadingTextRect;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GUIStyle loadingTextStyle;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool showSprite;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D loadingSprite;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 loadingImageSize;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int lastRowImagesNr;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Rect loadingImageRectGroup;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Rect loadingImageRect;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float loadingImageRectTop;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float loadingImageRectLeft;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isLoading;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool isLoadingNow;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool showLoadingBar;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rect loadingBarRect;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Texture2D loadingBarBackground;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Rect loadingBarFillRect;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Texture2D loadingBarFill;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float loadingBarHeight;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float loadingBarFillMargin;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int loadingBarPercent;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string loadCompleteText;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public loadingBarPercentPositions loadingBarPercentPosition;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GUIStyle loadingBarPercentStyle;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rect guiRectZero;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float loadingSpriteFrame;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaitForSeconds waitForSprite;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xDEAFBC", Offset = "0xDEAFBC", VA = "0xDEAFBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xDEB100", Offset = "0xDEB100", VA = "0xDEB100")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xDEA604", Offset = "0xDEA604", VA = "0xDEA604")]
	public void SetLoadingRect(Rect newLoadingRect)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xDEAA8C", Offset = "0xDEAA8C", VA = "0xDEAA8C")]
	public void StartLoading()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xDEAB40", Offset = "0xDEAB40", VA = "0xDEAB40")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xDEB614", Offset = "0xDEB614", VA = "0xDEB614")]
	[IteratorStateMachine(typeof(<Counter>d__40))]
	private IEnumerator Counter()
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xDEB6B0", Offset = "0xDEB6B0", VA = "0xDEB6B0")]
	[IteratorStateMachine(typeof(<LoadingSprite>d__43))]
	private IEnumerator LoadingSprite()
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xDEB74C", Offset = "0xDEB74C", VA = "0xDEB74C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xDEB794", Offset = "0xDEB794", VA = "0xDEB794")]
	public Loading()
	{
	}
}
[Token(Token = "0x20000D2")]
[DisallowMultipleComponent]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Lutify")]
public class Lutify : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	public enum SplitMode
	{
		[Token(Token = "0x40005F9")]
		None,
		[Token(Token = "0x40005FA")]
		Horizontal,
		[Token(Token = "0x40005FB")]
		Vertical
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The texture to use as a lookup table. Size should be: height = sqrt(width)")]
	public Texture2D LookupTexture;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Shows a before/after comparison by splitting the screen in half.")]
	public SplitMode Split;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Lutify will automatically detect the correct shader to use for the device but you can force it to only use the compatibility shader.")]
	public bool ForceCompatibility;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Sets the filter mode for the LUT texture. You'll want to set this to Point when using palette reduction LUTs.")]
	public FilterMode LutFiltering;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	[Tooltip("Blending factor.")]
	public float Blend;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int _LastSelectedCategory;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int _ThumbWidth;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _ThumbHeight;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int cache_ThumbWidth;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int cache_ThumbHeight;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool cache_IsLinear;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderTexture _PreviewRT;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Texture3D m_Lut3D;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected string m_BaseTextureName;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_Use2DLut;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader Shader2D;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Shader3D;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Material m_Material2D;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Material m_Material3D;

	[Token(Token = "0x1700008B")]
	public bool IsLinear
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xDEBC6C", Offset = "0xDEBC6C", VA = "0xDEBC6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	public Material Material
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xDEBC88", Offset = "0xDEBC88", VA = "0xDEBC88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xDEBDA0", Offset = "0xDEBDA0", VA = "0xDEBDA0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xDEBF14", Offset = "0xDEBF14", VA = "0xDEBF14", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xDEC284", Offset = "0xDEC284", VA = "0xDEC284", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xDEC3B8", Offset = "0xDEC3B8", VA = "0xDEC3B8")]
	protected void SetIdentityLut3D()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xDEC5C8", Offset = "0xDEC5C8", VA = "0xDEC5C8")]
	public bool ValidDimensions(Texture2D tex2D)
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xDEBFB0", Offset = "0xDEBFB0", VA = "0xDEBFB0")]
	protected void ConvertBaseTexture3D()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xDEC6CC", Offset = "0xDEC6CC", VA = "0xDEC6CC", Slot = "7")]
	protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xDEC98C", Offset = "0xDEC98C", VA = "0xDEC98C")]
	private void RenderLut3D(RenderTexture source, RenderTexture destination, int pass)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xDEC7F8", Offset = "0xDEC7F8", VA = "0xDEC7F8")]
	private void RenderLut2D(RenderTexture source, RenderTexture destination, int pass)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xDECB38", Offset = "0xDECB38", VA = "0xDECB38")]
	public Lutify()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x600048A")]
	[Address(RVA = "0xDECB54", Offset = "0xDECB54", VA = "0xDECB54")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MoveMe : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool forwarding;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delta;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xDECB5C", Offset = "0xDECB5C", VA = "0xDECB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xDECB60", Offset = "0xDECB60", VA = "0xDECB60")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xDECC08", Offset = "0xDECC08", VA = "0xDECC08")]
	public MoveMe()
	{
	}
}
[Token(Token = "0x20000D6")]
public class RotateMe : MonoBehaviour
{
	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 center_to_ratate;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xDECC18", Offset = "0xDECC18", VA = "0xDECC18")]
	private void Start()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xDECDC0", Offset = "0xDECDC0", VA = "0xDECDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xDECF0C", Offset = "0xDECF0C", VA = "0xDECF0C")]
	public RotateMe()
	{
	}
}
[Token(Token = "0x20000D7")]
public enum LensFlareTypes
{
	[Token(Token = "0x4000600")]
	BloomAndFlare = 0,
	[Token(Token = "0x4000601")]
	Flare = 2,
	[Token(Token = "0x4000602")]
	Bloom = 1
}
[Token(Token = "0x20000D8")]
[AddComponentMenu("Image Effects/Max P/Dirty Lens Flare")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
public class DirtyLensFlare : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LensFlareTypes lensFlareType;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float saturation;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float threshold;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float flareIntensity;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bloomIntensity;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int iterations;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float blurSpread;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int downsample;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useDirt;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D screenDirt;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shader blurShader;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material blurMaterial;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Shader shader;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_Material;

	[Token(Token = "0x1700008D")]
	protected Material material
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xDED1AC", Offset = "0xDED1AC", VA = "0xDED1AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xDECF14", Offset = "0xDECF14", VA = "0xDECF14", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xDED280", Offset = "0xDED280", VA = "0xDED280", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xDED30C", Offset = "0xDED30C", VA = "0xDED30C")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration, Material blurMtl)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xDED410", Offset = "0xDED410", VA = "0xDED410")]
	private void ApplyBlurPass(RenderTexture source, RenderTexture destination, Material blurMtl)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xDECFBC", Offset = "0xDECFBC", VA = "0xDECFBC")]
	private bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xDED5DC", Offset = "0xDED5DC", VA = "0xDED5DC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xDED970", Offset = "0xDED970", VA = "0xDED970")]
	public DirtyLensFlare()
	{
	}
}
[Token(Token = "0x20000D9")]
[RequireComponent(typeof(Renderer))]
[RequireComponent(typeof(PhotonView))]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xDED9A4", Offset = "0xDED9A4", VA = "0xDED9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xDEDB08", Offset = "0xDEDB08", VA = "0xDEDB08")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xDEDBB0", Offset = "0xDEDBB0", VA = "0xDEDBB0")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000DA")]
[RequireComponent(typeof(PhotonView))]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x600049C")]
	[Address(RVA = "0xDEDBB8", Offset = "0xDEDBB8", VA = "0xDEDBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xDEDC74", Offset = "0xDEDC74", VA = "0xDEDC74")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20000DB")]
[RequireComponent(typeof(PhotonVoiceView))]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xDEDC7C", Offset = "0xDEDC7C", VA = "0xDEDC7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xDEDD94", Offset = "0xDEDD94", VA = "0xDEDD94")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xDEDCEC", Offset = "0xDEDCEC", VA = "0xDEDCEC")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xDEDDEC", Offset = "0xDEDDEC", VA = "0xDEDDEC")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20000DC")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(Collider))]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x1700008E")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xDEDDF4", Offset = "0xDEDDF4", VA = "0xDEDDF4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xDEDE74", Offset = "0xDEDE74", VA = "0xDEDE74", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xDEE0C0", Offset = "0xDEE0C0", VA = "0xDEE0C0")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xDEE3C0", Offset = "0xDEE3C0", VA = "0xDEE3C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xDEE628", Offset = "0xDEE628", VA = "0xDEE628")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xDEE8D0", Offset = "0xDEE8D0", VA = "0xDEE8D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xDEDF40", Offset = "0xDEDF40", VA = "0xDEDF40")]
	private bool IsLocalCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xDEEF70", Offset = "0xDEEF70", VA = "0xDEEF70")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DD")]
public class MouseLookHelper
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xDEF028", Offset = "0xDEF028", VA = "0xDEF028")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xDEF078", Offset = "0xDEF078", VA = "0xDEF078")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xDEF3B8", Offset = "0xDEF3B8", VA = "0xDEF3B8")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xDEF41C", Offset = "0xDEF41C", VA = "0xDEF41C")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class NGSS_ContactShadows : MonoBehaviour
{
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light mainDirectionalLight;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader contactShadowsShader;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("SHADOWS SETTINGS")]
	public bool noiseFilter;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 3f)]
	public float shadowsSoftness;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 4f)]
	public float shadowsDistance;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.1f, 4f)]
	public float shadowsFade;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 2f)]
	public float shadowsOffset;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float rayWidth;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(16f, 128f)]
	public int raySamples;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer blendShadowsCB;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CommandBuffer computeShadowsCB;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera _mCamera;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _mMaterial;

	[Token(Token = "0x1700008F")]
	private Camera mCamera
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xDEF448", Offset = "0xDEF448", VA = "0xDEF448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	private Material mMaterial
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xDEF5CC", Offset = "0xDEF5CC", VA = "0xDEF5CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xDEF764", Offset = "0xDEF764", VA = "0xDEF764")]
	private void AddCommandBuffers()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xDEFA44", Offset = "0xDEFA44", VA = "0xDEFA44")]
	private void RemoveCommandBuffers()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xDEFB4C", Offset = "0xDEFB4C", VA = "0xDEFB4C")]
	private void Init()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xDEFFB0", Offset = "0xDEFFB0", VA = "0xDEFFB0")]
	private bool IsNotSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xDEFFF4", Offset = "0xDEFFF4", VA = "0xDEFFF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xDF008C", Offset = "0xDF008C", VA = "0xDF008C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xDF009C", Offset = "0xDF009C", VA = "0xDF009C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xDF00AC", Offset = "0xDF00AC", VA = "0xDF00AC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xDF036C", Offset = "0xDF036C", VA = "0xDF036C")]
	public NGSS_ContactShadows()
	{
	}
}
[Token(Token = "0x20000DF")]
[RequireComponent(typeof(Light))]
[ExecuteInEditMode]
public class NGSS_Directional : MonoBehaviour
{
	[Token(Token = "0x20000E0")]
	public enum SAMPLER_COUNT
	{
		[Token(Token = "0x400063F")]
		SAMPLERS_16,
		[Token(Token = "0x4000640")]
		SAMPLERS_25,
		[Token(Token = "0x4000641")]
		SAMPLERS_32,
		[Token(Token = "0x4000642")]
		SAMPLERS_64
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("If false, NGSS Directional shadows replacement will be removed from Graphics settings when OnDisable is called in this component.")]
	[Header("MAIN SETTINGS")]
	public bool KEEP_NGSS_ONDISABLE;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Header("OPTIMIZATION")]
	[Tooltip("Optimize shadows performance by skipping fragments that are either 100% lit or 100% shadowed. Some macro noisy artefacts can be seen if shadows are too soft or sampling amount is below 64.")]
	public bool EARLY_BAILOUT_OPTIMIZATION;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Recommended values: Mobile = 16, Consoles = 25, Desktop VR = 32, Desktop High = 64")]
	public SAMPLER_COUNT SAMPLERS_COUNT;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Overall softness for both PCF and PCSS shadows.")]
	[Range(0f, 2f)]
	[Header("SOFTNESS")]
	public float GLOBAL_SOFTNESS;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("CASCADES")]
	[Tooltip("Blends cascades at seams intersection.\nAdditional overhead required for this option.")]
	public bool CASCADES_BLENDING;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Blends cascades at seams intersection.\nAdditional overhead required for this option.")]
	[Range(0f, 2f)]
	public float CASCADES_BLENDING_VALUE;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("If disabled, noise will be computed normally.\nIf enabled, noise will be computed statically from an internal screen-space texture.")]
	[Header("NOISE")]
	public bool NOISE_STATIC;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 2f)]
	[Tooltip("Amount of noise. The higher the value the more Noise.")]
	public float NOISE_SCALE_VALUE;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("PCSS Requires inline sampling and SM3.5, only available in Unity 2017.\nIt provides Area Light like soft-shadows.\nDisable it if you are looking for PCF filtering (uniform soft-shadows) which runs with SM3.0.")]
	[Header("PCSS")]
	public bool PCSS_ENABLED;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("PCSS softness when shadows is close to caster.")]
	[Range(0f, 2f)]
	public float PCSS_SOFTNESS_MIN;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("PCSS softness when shadows is far from caster.")]
	[Range(0f, 2f)]
	public float PCSS_SOFTNESS_MAX;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isInitialized;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isGraphicSet;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xDF0390", Offset = "0xDF0390", VA = "0xDF0390")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xDF041C", Offset = "0xDF041C", VA = "0xDF041C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xDF04F8", Offset = "0xDF04F8", VA = "0xDF04F8")]
	private void Init()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xDF04B4", Offset = "0xDF04B4", VA = "0xDF04B4")]
	private bool IsNotSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xDF0584", Offset = "0xDF0584", VA = "0xDF0584")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xDF08D0", Offset = "0xDF08D0", VA = "0xDF08D0")]
	public NGSS_Directional()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E1")]
public class Abilitypoint : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int AP;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int APmax;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float Accuracy;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float Strength;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float Speed;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float Racpow;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float Racacc;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float Basestrenght;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float Baseaccuracy;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float Basespeed;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDF090C", Offset = "0xDF090C", VA = "0xDF090C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDF0AF0", Offset = "0xDF0AF0", VA = "0xDF0AF0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDF0C44", Offset = "0xDF0C44", VA = "0xDF0C44")]
	static Abilitypoint()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xDF0C90", Offset = "0xDF0C90", VA = "0xDF0C90")]
	public Abilitypoint()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
public class Accuracyless : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xDF0C98", Offset = "0xDF0C98", VA = "0xDF0C98", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xDF0DBC", Offset = "0xDF0DBC", VA = "0xDF0DBC", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xDF105C", Offset = "0xDF105C", VA = "0xDF105C")]
	public Accuracyless()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E3")]
public class Accuracyplus : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xDF1064", Offset = "0xDF1064", VA = "0xDF1064", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xDF1188", Offset = "0xDF1188", VA = "0xDF1188", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xDF1430", Offset = "0xDF1430", VA = "0xDF1430")]
	public Accuracyplus()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E4")]
public class AIop : MonoBehaviour
{
	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <wait>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIop <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0xDF4F00", Offset = "0xDF4F00", VA = "0xDF4F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0xDF4F48", Offset = "0xDF4F48", VA = "0xDF4F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xDF4DDC", Offset = "0xDF4DDC", VA = "0xDF4DDC")]
		[DebuggerHidden]
		public <wait>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xDF4E04", Offset = "0xDF4E04", VA = "0xDF4E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xDF4E08", Offset = "0xDF4E08", VA = "0xDF4E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xDF4F08", Offset = "0xDF4F08", VA = "0xDF4F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[CompilerGenerated]
	private sealed class <tiro>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIop <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0xDF5A64", Offset = "0xDF5A64", VA = "0xDF5A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0xDF5AAC", Offset = "0xDF5AAC", VA = "0xDF5AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xDF4F50", Offset = "0xDF4F50", VA = "0xDF4F50")]
		[DebuggerHidden]
		public <tiro>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xDF4F78", Offset = "0xDF4F78", VA = "0xDF4F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xDF4F7C", Offset = "0xDF4F7C", VA = "0xDF4F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xDF5A6C", Offset = "0xDF5A6C", VA = "0xDF5A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private sealed class <servizio>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIop <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xDF61A0", Offset = "0xDF61A0", VA = "0xDF61A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0xDF61E8", Offset = "0xDF61E8", VA = "0xDF61E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xDF5AB4", Offset = "0xDF5AB4", VA = "0xDF5AB4")]
		[DebuggerHidden]
		public <servizio>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xDF5ADC", Offset = "0xDF5ADC", VA = "0xDF5ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xDF5AE0", Offset = "0xDF5AE0", VA = "0xDF5AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xDF61A8", Offset = "0xDF61A8", VA = "0xDF61A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private sealed class <Speedserve>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIop <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0xDF6424", Offset = "0xDF6424", VA = "0xDF6424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0xDF646C", Offset = "0xDF646C", VA = "0xDF646C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xDF61F0", Offset = "0xDF61F0", VA = "0xDF61F0")]
		[DebuggerHidden]
		public <Speedserve>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xDF6218", Offset = "0xDF6218", VA = "0xDF6218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xDF621C", Offset = "0xDF621C", VA = "0xDF621C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xDF642C", Offset = "0xDF642C", VA = "0xDF642C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource grunt;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource gruntfem;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int rotationSpeed;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float powerAI;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float precisionAI;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool risposta;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool forehand;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool backhand;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool prepare;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject target;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Male01;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject player1;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject cube;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject cubenet;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizionerimbalzo;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 posizionerimbalzo1;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 posizionepl1;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 lookPos;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool acetoccata;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int gotonet;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool preptiro;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool comeback;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool stotirando;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator anim;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NavMeshAgent agent;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 destinazione;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float tiropref;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool incorsaserve;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool randomvolley;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject netcollider;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool slice;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public static bool smash;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public static bool lobshot;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int percerror;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timetohit;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool stop;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float timetocharge;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform spawnTarget;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 obiettivotiro;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 obiettivoservizio;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float horizontalOffset;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float lob;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 startingVelocity;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Rigidbody ballpreview;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float speedrun;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float stamina;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float runop;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float proporzione;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float cb;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float ab;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float ch;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float al;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float dl;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float distrimbalzo;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float puntoimpatto;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float lob1;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float random;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float gapimpatto;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float distance1;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float rangez;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float rangex;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float tflight;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float physicsTimestep;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 p;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 a;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 s;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float n;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int randomlob;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float timestepsPerSecond;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int speedserving;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xDF1438", Offset = "0xDF1438", VA = "0xDF1438", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xDF1848", Offset = "0xDF1848", VA = "0xDF1848", Slot = "5")]
	public virtual void stopanimidle()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xDF1884", Offset = "0xDF1884", VA = "0xDF1884", Slot = "6")]
	public virtual void smashit()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xDF18E0", Offset = "0xDF18E0", VA = "0xDF18E0", Slot = "7")]
	public virtual void esultation()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xDF1978", Offset = "0xDF1978", VA = "0xDF1978", Slot = "8")]
	public virtual void defeat()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xDF1A08", Offset = "0xDF1A08", VA = "0xDF1A08", Slot = "9")]
	public virtual void stand()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xDF1A84", Offset = "0xDF1A84", VA = "0xDF1A84")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xDF3D90", Offset = "0xDF3D90", VA = "0xDF3D90", Slot = "10")]
	[IteratorStateMachine(typeof(<wait>d__79))]
	public virtual IEnumerator wait()
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xDF3E04", Offset = "0xDF3E04", VA = "0xDF3E04", Slot = "11")]
	public virtual void randomslice()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xDF3E30", Offset = "0xDF3E30", VA = "0xDF3E30", Slot = "12")]
	[IteratorStateMachine(typeof(<tiro>d__81))]
	public virtual IEnumerator tiro()
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xDF3EA4", Offset = "0xDF3EA4", VA = "0xDF3EA4", Slot = "13")]
	[IteratorStateMachine(typeof(<servizio>d__82))]
	public virtual IEnumerator servizio()
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xDF3F18", Offset = "0xDF3F18", VA = "0xDF3F18", Slot = "14")]
	public virtual void GetTrajectoryVelocitytiro()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xDF48B0", Offset = "0xDF48B0", VA = "0xDF48B0", Slot = "15")]
	public virtual void GetTrajectoryVelocityservizio()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xDF4D0C", Offset = "0xDF4D0C", VA = "0xDF4D0C", Slot = "16")]
	[IteratorStateMachine(typeof(<Speedserve>d__85))]
	public virtual IEnumerator Speedserve()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xDF4D80", Offset = "0xDF4D80", VA = "0xDF4D80")]
	public AIop()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E9")]
public class AIsettings : MonoBehaviour
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider AItrainslider;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text AItraintext;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDF6474", Offset = "0xDF6474", VA = "0xDF6474", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDF69FC", Offset = "0xDF69FC", VA = "0xDF69FC", Slot = "5")]
	public virtual void AItrainchange()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xDF6FCC", Offset = "0xDF6FCC", VA = "0xDF6FCC")]
	public AIsettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public class AIvr : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[CompilerGenerated]
	private sealed class <wait>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIvr <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xDFC464", Offset = "0xDFC464", VA = "0xDFC464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xDFC4AC", Offset = "0xDFC4AC", VA = "0xDFC4AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xDFA508", Offset = "0xDFA508", VA = "0xDFA508")]
		[DebuggerHidden]
		public <wait>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xDFC398", Offset = "0xDFC398", VA = "0xDFC398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xDFC39C", Offset = "0xDFC39C", VA = "0xDFC39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xDFC46C", Offset = "0xDFC46C", VA = "0xDFC46C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <servizio>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIvr <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0xDFC8E4", Offset = "0xDFC8E4", VA = "0xDFC8E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0xDFC92C", Offset = "0xDFC92C", VA = "0xDFC92C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xDFB10C", Offset = "0xDFB10C", VA = "0xDFB10C")]
		[DebuggerHidden]
		public <servizio>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xDFC4B4", Offset = "0xDFC4B4", VA = "0xDFC4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xDFC4B8", Offset = "0xDFC4B8", VA = "0xDFC4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xDFC8EC", Offset = "0xDFC8EC", VA = "0xDFC8EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[CompilerGenerated]
	private sealed class <Speedserve>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIvr <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0xDFCB64", Offset = "0xDFCB64", VA = "0xDFCB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0xDFCBAC", Offset = "0xDFCBAC", VA = "0xDFCBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xDFC334", Offset = "0xDFC334", VA = "0xDFC334")]
		[DebuggerHidden]
		public <Speedserve>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xDFC934", Offset = "0xDFC934", VA = "0xDFC934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xDFC938", Offset = "0xDFC938", VA = "0xDFC938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xDFCB6C", Offset = "0xDFCB6C", VA = "0xDFCB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource grunt;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource gruntfem;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int rotationSpeed;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float powerAI;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float precisionAI;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float precisionlongAI;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool risposta;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool forehand;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool backhand;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool prepare;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject target;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody targetrigidbody;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject Male01;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject player1;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizionerimbalzo;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 posizionerimbalzo1;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 posizionepl1;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 lookPos;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool acetoccata;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int gotonet;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool preptiro;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool comeback;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool stotirando;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator anim;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NavMeshAgent agent;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 destinazione;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float tiropref;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public static bool incorsaserve;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool randomvolley;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject netcollider;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool slice;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool dropshot;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public static bool smash;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool lobshot;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int percerror;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timetohit;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool stop;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float timetocharge;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform spawnTarget;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 obiettivotiro;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float horizontalOffset;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lob;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 startingVelocity;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float speedrun;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float stamina;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float runop;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float puntoimpatto;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lob1;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float random;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float timestepsPerSecond;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int speedserving;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int randomnum;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int randomlob;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int randomdrop;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int destrasinistra;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int randomesultation;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float ab;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float cb;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float proporzione;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float ch;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float al;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float dl;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float distrimbalzo;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float physicsTimestep;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 p;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 a;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 s;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float n;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float gapimpatto;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Scene scene;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float tempdistance;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float tempdistancey;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float distance;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float distancey;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 impactposition1;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 impactposition2;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float rangez1;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 posizionehit;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int passdxsx;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xDF6FD4", Offset = "0xDF6FD4", VA = "0xDF6FD4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xDF70BC", Offset = "0xDF70BC", VA = "0xDF70BC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xDF6EA0", Offset = "0xDF6EA0", VA = "0xDF6EA0")]
	public static void ChangeStan()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xDF795C", Offset = "0xDF795C", VA = "0xDF795C", Slot = "5")]
	public virtual void stopanimidle()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xDF7A2C", Offset = "0xDF7A2C", VA = "0xDF7A2C", Slot = "6")]
	public virtual void smashit()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xDF7A78", Offset = "0xDF7A78", VA = "0xDF7A78", Slot = "7")]
	public virtual void esultation()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xDF7B14", Offset = "0xDF7B14", VA = "0xDF7B14", Slot = "8")]
	public virtual void defeat()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xDF7BA4", Offset = "0xDF7BA4", VA = "0xDF7BA4", Slot = "9")]
	public virtual void stand()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xDF7C20", Offset = "0xDF7C20", VA = "0xDF7C20", Slot = "10")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xDF9BA8", Offset = "0xDF9BA8", VA = "0xDF9BA8")]
	private void Hitball()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xDFA494", Offset = "0xDFA494", VA = "0xDFA494", Slot = "11")]
	[IteratorStateMachine(typeof(<wait>d__91))]
	public virtual IEnumerator wait()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xDFA530", Offset = "0xDFA530", VA = "0xDFA530", Slot = "12")]
	public virtual void randomslice()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xDFA5A0", Offset = "0xDFA5A0", VA = "0xDFA5A0")]
	public void tiro()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xDFB098", Offset = "0xDFB098", VA = "0xDFB098", Slot = "13")]
	[IteratorStateMachine(typeof(<servizio>d__94))]
	public virtual IEnumerator servizio()
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xDFB134", Offset = "0xDFB134", VA = "0xDFB134", Slot = "14")]
	public virtual void GetTrajectoryVelocitytiro()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDFB970", Offset = "0xDFB970", VA = "0xDFB970", Slot = "15")]
	public virtual void GetTrajectoryVelocityservizio()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDFC2C0", Offset = "0xDFC2C0", VA = "0xDFC2C0", Slot = "16")]
	[IteratorStateMachine(typeof(<Speedserve>d__97))]
	public virtual IEnumerator Speedserve(float ballspeed)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDFC35C", Offset = "0xDFC35C", VA = "0xDFC35C")]
	public AIvr()
	{
	}
}
[Token(Token = "0x20000EE")]
public class AmbientVolume : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Fondo;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource Trainingfondo;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xDFCBB4", Offset = "0xDFCBB4", VA = "0xDFCBB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xDFCD04", Offset = "0xDFCD04", VA = "0xDFCD04")]
	public AmbientVolume()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EF")]
public class Animconfirm : MonoBehaviour
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Player0;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject ball;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xDFCD0C", Offset = "0xDFCD0C", VA = "0xDFCD0C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xDFCD9C", Offset = "0xDFCD9C", VA = "0xDFCD9C", Slot = "5")]
	public virtual void tiropronto()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xDFD088", Offset = "0xDFD088", VA = "0xDFD088", Slot = "6")]
	public virtual void serviziopronto()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xDFD318", Offset = "0xDFD318", VA = "0xDFD318")]
	public Animconfirm()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F0")]
public class Arrow : MonoBehaviour
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xDFD320", Offset = "0xDFD320", VA = "0xDFD320", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xDFD42C", Offset = "0xDFD42C", VA = "0xDFD42C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xDFD530", Offset = "0xDFD530", VA = "0xDFD530")]
	public Arrow()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F1")]
public class Arrow1pl : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arrow1pl <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0xDFD860", Offset = "0xDFD860", VA = "0xDFD860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0xDFD8A8", Offset = "0xDFD8A8", VA = "0xDFD8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xDFD5F4", Offset = "0xDFD5F4", VA = "0xDFD5F4")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xDFD624", Offset = "0xDFD624", VA = "0xDFD624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xDFD628", Offset = "0xDFD628", VA = "0xDFD628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xDFD868", Offset = "0xDFD868", VA = "0xDFD868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EMTransition;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fermapulsanti;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xDFD538", Offset = "0xDFD538", VA = "0xDFD538", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xDFD580", Offset = "0xDFD580", VA = "0xDFD580", Slot = "5")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xDFD61C", Offset = "0xDFD61C", VA = "0xDFD61C")]
	public Arrow1pl()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F3")]
public class Arrownetwork : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	[CompilerGenerated]
	private sealed class <OnClick>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arrownetwork <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0xDFDA9C", Offset = "0xDFDA9C", VA = "0xDFDA9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0xDFDAE4", Offset = "0xDFDAE4", VA = "0xDFDAE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xDFD924", Offset = "0xDFD924", VA = "0xDFD924")]
		[DebuggerHidden]
		public <OnClick>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xDFD954", Offset = "0xDFD954", VA = "0xDFD954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xDFD958", Offset = "0xDFD958", VA = "0xDFD958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xDFDAA4", Offset = "0xDFDAA4", VA = "0xDFDAA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EMTransition;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xDFD8B0", Offset = "0xDFD8B0", VA = "0xDFD8B0", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__1))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xDFD94C", Offset = "0xDFD94C", VA = "0xDFD94C")]
	public Arrownetwork()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F5")]
public class Arrowopt : MonoBehaviour
{
	[Token(Token = "0x20000F6")]
	[CompilerGenerated]
	private sealed class <OnClick>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arrowopt <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0xDFDFE8", Offset = "0xDFDFE8", VA = "0xDFDFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0xDFE030", Offset = "0xDFE030", VA = "0xDFE030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xDFDBE8", Offset = "0xDFDBE8", VA = "0xDFDBE8")]
		[DebuggerHidden]
		public <OnClick>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xDFDC18", Offset = "0xDFDC18", VA = "0xDFDC18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xDFDC1C", Offset = "0xDFDC1C", VA = "0xDFDC1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xDFDFF0", Offset = "0xDFDFF0", VA = "0xDFDFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stop;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject screenfader;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xDFDAEC", Offset = "0xDFDAEC", VA = "0xDFDAEC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xDFDAF4", Offset = "0xDFDAF4", VA = "0xDFDAF4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xDFDB74", Offset = "0xDFDB74", VA = "0xDFDB74", Slot = "6")]
	[IteratorStateMachine(typeof(<OnClick>d__4))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xDFDC10", Offset = "0xDFDC10", VA = "0xDFDC10")]
	public Arrowopt()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class Arrowopt1 : MonoBehaviour
{
	[Token(Token = "0x20000F8")]
	[CompilerGenerated]
	private sealed class <OnClick>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0xDFE1F0", Offset = "0xDFE1F0", VA = "0xDFE1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xDFE238", Offset = "0xDFE238", VA = "0xDFE238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xDFE098", Offset = "0xDFE098", VA = "0xDFE098")]
		[DebuggerHidden]
		public <OnClick>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xDFE0C8", Offset = "0xDFE0C8", VA = "0xDFE0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xDFE0CC", Offset = "0xDFE0CC", VA = "0xDFE0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xDFE1F8", Offset = "0xDFE1F8", VA = "0xDFE1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xDFE038", Offset = "0xDFE038", VA = "0xDFE038", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__0))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xDFE0C0", Offset = "0xDFE0C0", VA = "0xDFE0C0")]
	public Arrowopt1()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F9")]
public class Arrowtour : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xDFE240", Offset = "0xDFE240", VA = "0xDFE240", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xDFE34C", Offset = "0xDFE34C", VA = "0xDFE34C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xDFE450", Offset = "0xDFE450", VA = "0xDFE450", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xDFE954", Offset = "0xDFE954", VA = "0xDFE954")]
	public Arrowtour()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FA")]
public class Arrowtourselect : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	[CompilerGenerated]
	private sealed class <OnClick>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arrowtourselect <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0xDFECFC", Offset = "0xDFECFC", VA = "0xDFECFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0xDFED44", Offset = "0xDFED44", VA = "0xDFED44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xDFEA58", Offset = "0xDFEA58", VA = "0xDFEA58")]
		[DebuggerHidden]
		public <OnClick>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xDFEA88", Offset = "0xDFEA88", VA = "0xDFEA88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xDFEA8C", Offset = "0xDFEA8C", VA = "0xDFEA8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xDFED04", Offset = "0xDFED04", VA = "0xDFED04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stop;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xDFE95C", Offset = "0xDFE95C", VA = "0xDFE95C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xDFE964", Offset = "0xDFE964", VA = "0xDFE964", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDFE9E4", Offset = "0xDFE9E4", VA = "0xDFE9E4", Slot = "6")]
	[IteratorStateMachine(typeof(<OnClick>d__4))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDFEA80", Offset = "0xDFEA80", VA = "0xDFEA80")]
	public Arrowtourselect()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Autoaccept : MonoBehaviour
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int autoaccept;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xDFED4C", Offset = "0xDFED4C", VA = "0xDFED4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xDFEE44", Offset = "0xDFEE44", VA = "0xDFEE44", Slot = "4")]
	public virtual void Autoacceptchange()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xDFEF48", Offset = "0xDFEF48", VA = "0xDFEF48")]
	public Autoaccept()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Autocreateroom : MonoBehaviour
{
	[Token(Token = "0x20000FF")]
	[CompilerGenerated]
	private sealed class <Serverchange>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Autocreateroom <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0xE0137C", Offset = "0xE0137C", VA = "0xE0137C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0xE013C4", Offset = "0xE013C4", VA = "0xE013C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xE00464", Offset = "0xE00464", VA = "0xE00464")]
		[DebuggerHidden]
		public <Serverchange>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xE00B98", Offset = "0xE00B98", VA = "0xE00B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xE00B9C", Offset = "0xE00B9C", VA = "0xE00B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xE01384", Offset = "0xE01384", VA = "0xE01384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int autocreateroom;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dropdown serverdrop;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject signal1;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject signal2;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject signal3;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject signal4;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text roomtext;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string difficulty;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xDFEF50", Offset = "0xDFEF50", VA = "0xDFEF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xDFF484", Offset = "0xDFF484", VA = "0xDFF484")]
	public void Roomset()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xDFFEE0", Offset = "0xDFFEE0", VA = "0xDFFEE0", Slot = "4")]
	public virtual void Autocreatechange()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xE003D0", Offset = "0xE003D0", VA = "0xE003D0")]
	public void ServerChange()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xE003F0", Offset = "0xE003F0", VA = "0xE003F0")]
	[IteratorStateMachine(typeof(<Serverchange>d__14))]
	public IEnumerator Serverchange()
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xE0048C", Offset = "0xE0048C", VA = "0xE0048C")]
	public void Update()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xE00A78", Offset = "0xE00A78", VA = "0xE00A78")]
	public Autocreateroom()
	{
	}
}
[Serializable]
[Token(Token = "0x2000100")]
public class Autorun : MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool autorun;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xE013CC", Offset = "0xE013CC", VA = "0xE013CC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE01588", Offset = "0xE01588", VA = "0xE01588", Slot = "5")]
	public virtual void Onclick()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xE01698", Offset = "0xE01698", VA = "0xE01698")]
	static Autorun()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xE016E4", Offset = "0xE016E4", VA = "0xE016E4")]
	public Autorun()
	{
	}
}
[Serializable]
[Token(Token = "0x2000101")]
public class B1 : MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool B10;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xE016EC", Offset = "0xE016EC", VA = "0xE016EC", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xE016F0", Offset = "0xE016F0", VA = "0xE016F0")]
	static B1()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xE0173C", Offset = "0xE0173C", VA = "0xE0173C")]
	public B1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public class B3 : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool B30;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xE01744", Offset = "0xE01744", VA = "0xE01744", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xE01850", Offset = "0xE01850", VA = "0xE01850", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xE01A30", Offset = "0xE01A30", VA = "0xE01A30")]
	public B3()
	{
	}
}
[Serializable]
[Token(Token = "0x2000103")]
public class Back : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject commento;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fader;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource musicapausa;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool exit;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player1;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xE01A38", Offset = "0xE01A38", VA = "0xE01A38", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xE01AB8", Offset = "0xE01AB8", VA = "0xE01AB8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xE01BB8", Offset = "0xE01BB8", VA = "0xE01BB8", Slot = "6")]
	public virtual void Exit()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xE02124", Offset = "0xE02124", VA = "0xE02124")]
	public Back()
	{
	}
}
[Serializable]
[Token(Token = "0x2000104")]
public class Bersaglio : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	[CompilerGenerated]
	private sealed class <OnCollisionEnter>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0xE025E0", Offset = "0xE025E0", VA = "0xE025E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xE02628", Offset = "0xE02628", VA = "0xE02628", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xE021A0", Offset = "0xE021A0", VA = "0xE021A0")]
		[DebuggerHidden]
		public <OnCollisionEnter>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xE02384", Offset = "0xE02384", VA = "0xE02384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xE02388", Offset = "0xE02388", VA = "0xE02388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xE025E8", Offset = "0xE025E8", VA = "0xE025E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targets;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xE0212C", Offset = "0xE0212C", VA = "0xE0212C", Slot = "4")]
	[IteratorStateMachine(typeof(<OnCollisionEnter>d__1))]
	public virtual IEnumerator OnCollisionEnter(Collision other)
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xE021C8", Offset = "0xE021C8", VA = "0xE021C8", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xE0237C", Offset = "0xE0237C", VA = "0xE0237C")]
	public Bersaglio()
	{
	}
}
[Serializable]
[Token(Token = "0x2000106")]
public class Bersaglioground : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[CompilerGenerated]
	private sealed class <OnCollisionEnter>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0xE0283C", Offset = "0xE0283C", VA = "0xE0283C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0xE02884", Offset = "0xE02884", VA = "0xE02884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xE026A4", Offset = "0xE026A4", VA = "0xE026A4")]
		[DebuggerHidden]
		public <OnCollisionEnter>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xE026D4", Offset = "0xE026D4", VA = "0xE026D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xE026D8", Offset = "0xE026D8", VA = "0xE026D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xE02844", Offset = "0xE02844", VA = "0xE02844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool nopanel;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xE02630", Offset = "0xE02630", VA = "0xE02630", Slot = "4")]
	[IteratorStateMachine(typeof(<OnCollisionEnter>d__1))]
	public virtual IEnumerator OnCollisionEnter(Collision other)
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xE026CC", Offset = "0xE026CC", VA = "0xE026CC")]
	public Bersaglioground()
	{
	}
}
[Token(Token = "0x2000108")]
public class Billboardcamera : MonoBehaviour
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform Camera;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xE0288C", Offset = "0xE0288C", VA = "0xE0288C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xE029D0", Offset = "0xE029D0", VA = "0xE029D0")]
	public Billboardcamera()
	{
	}
}
[Serializable]
[Token(Token = "0x2000109")]
public class Blob : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xE029D8", Offset = "0xE029D8", VA = "0xE029D8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xE02A30", Offset = "0xE02A30", VA = "0xE02A30", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xE02AD0", Offset = "0xE02AD0", VA = "0xE02AD0")]
	public Blob()
	{
	}
}
[Serializable]
[Token(Token = "0x200010A")]
public class Blobtarget : MonoBehaviour
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizione;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float x;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float y;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Scene scene;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xE02AD8", Offset = "0xE02AD8", VA = "0xE02AD8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xE02B4C", Offset = "0xE02B4C", VA = "0xE02B4C", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xE03010", Offset = "0xE03010", VA = "0xE03010")]
	public Blobtarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public class Blobtarget1 : MonoBehaviour
{
	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizione;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float x;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float y;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xE03018", Offset = "0xE03018", VA = "0xE03018", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xE0303C", Offset = "0xE0303C", VA = "0xE0303C", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xE03420", Offset = "0xE03420", VA = "0xE03420")]
	public Blobtarget1()
	{
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class Blobtargetexperiment : MonoBehaviour
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xE03428", Offset = "0xE03428", VA = "0xE03428", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xE0344C", Offset = "0xE0344C", VA = "0xE0344C", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xE034C0", Offset = "0xE034C0", VA = "0xE034C0")]
	public Blobtargetexperiment()
	{
	}
}
[Serializable]
[Token(Token = "0x200010D")]
public class Blobtargetrimb1 : MonoBehaviour
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizione;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float x;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float y;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xE034C8", Offset = "0xE034C8", VA = "0xE034C8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xE034EC", Offset = "0xE034EC", VA = "0xE034EC", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xE0354C", Offset = "0xE0354C", VA = "0xE0354C")]
	public Blobtargetrimb1()
	{
	}
}
[Serializable]
[Token(Token = "0x200010E")]
public class Blobtargetrimb2 : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizione;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float x;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float y;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xE03554", Offset = "0xE03554", VA = "0xE03554", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xE03578", Offset = "0xE03578", VA = "0xE03578", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xE035D8", Offset = "0xE035D8", VA = "0xE035D8")]
	public Blobtargetrimb2()
	{
	}
}
[Serializable]
[Token(Token = "0x200010F")]
public class Blobtargetrimb3 : MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform myTransform;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 posizione;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float x;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float y;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xE035E0", Offset = "0xE035E0", VA = "0xE035E0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xE03604", Offset = "0xE03604", VA = "0xE03604", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xE03664", Offset = "0xE03664", VA = "0xE03664")]
	public Blobtargetrimb3()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class Bordi : MonoBehaviour
{
	[Token(Token = "0x600059C")]
	[Address(RVA = "0xE0366C", Offset = "0xE0366C", VA = "0xE0366C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xE03C7C", Offset = "0xE03C7C", VA = "0xE03C7C")]
	public Bordi()
	{
	}
}
[Serializable]
[Token(Token = "0x2000111")]
public class Bounce : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audiofile;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 direction;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxbouncerate;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float bouncerate;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float dragvel;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dragrot;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 velprojectx;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 velprojecty;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 finalvel;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 normalvec;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 friction;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 spinforce;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 ballanglprev;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE03C84", Offset = "0xE03C84", VA = "0xE03C84")]
	private void Start()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE03D2C", Offset = "0xE03D2C", VA = "0xE03D2C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xE062F8", Offset = "0xE062F8", VA = "0xE062F8")]
	public Bounce()
	{
	}
}
[Serializable]
[Token(Token = "0x2000112")]
public class Buttonrank : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <OnClick>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xE06610", Offset = "0xE06610", VA = "0xE06610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0xE06658", Offset = "0xE06658", VA = "0xE06658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xE06360", Offset = "0xE06360", VA = "0xE06360")]
		[DebuggerHidden]
		public <OnClick>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xE06390", Offset = "0xE06390", VA = "0xE06390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xE06394", Offset = "0xE06394", VA = "0xE06394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xE06618", Offset = "0xE06618", VA = "0xE06618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xE06300", Offset = "0xE06300", VA = "0xE06300", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__0))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xE06388", Offset = "0xE06388", VA = "0xE06388")]
	public Buttonrank()
	{
	}
}
[Token(Token = "0x2000114")]
public class Buttonselect : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, ISelectHandler
{
	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xE06660", Offset = "0xE06660", VA = "0xE06660", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xE06664", Offset = "0xE06664", VA = "0xE06664", Slot = "5")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xE06668", Offset = "0xE06668", VA = "0xE06668")]
	public Buttonselect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class Buyracquet : MonoBehaviour
{
	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xE06670", Offset = "0xE06670", VA = "0xE06670")]
	public Buyracquet()
	{
	}
}
[Serializable]
[Token(Token = "0x2000116")]
public class Buytour : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	[CompilerGenerated]
	private sealed class <Purchase>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xE06854", Offset = "0xE06854", VA = "0xE06854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xE0689C", Offset = "0xE0689C", VA = "0xE0689C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xE06750", Offset = "0xE06750", VA = "0xE06750")]
		[DebuggerHidden]
		public <Purchase>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xE06780", Offset = "0xE06780", VA = "0xE06780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xE06784", Offset = "0xE06784", VA = "0xE06784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xE0685C", Offset = "0xE0685C", VA = "0xE0685C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xE06678", Offset = "0xE06678", VA = "0xE06678", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xE066F0", Offset = "0xE066F0", VA = "0xE066F0", Slot = "5")]
	[IteratorStateMachine(typeof(<Purchase>d__1))]
	public virtual IEnumerator Purchase()
	{
		return null;
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xE06778", Offset = "0xE06778", VA = "0xE06778")]
	public Buytour()
	{
	}
}
[Token(Token = "0x2000118")]
public class CalibrateSize : MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upperArmBoneLeft;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lowerArmBoneLeft;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform upperArmBoneRight;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lowerArmBoneRight;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scalePct;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleHeight;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleArms;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform headvr;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator anim;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VRIK IK;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xE068A4", Offset = "0xE068A4", VA = "0xE068A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xE06940", Offset = "0xE06940", VA = "0xE06940")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xE06A38", Offset = "0xE06A38", VA = "0xE06A38")]
	public void GrowHeight()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xE06AF4", Offset = "0xE06AF4", VA = "0xE06AF4")]
	public void ShrinkHeight()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xE06BB0", Offset = "0xE06BB0", VA = "0xE06BB0")]
	public void GrowArms()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xE06C64", Offset = "0xE06C64", VA = "0xE06C64")]
	public void ShrinkArms()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xE06D18", Offset = "0xE06D18", VA = "0xE06D18")]
	public CalibrateSize()
	{
	}
}
[Serializable]
[Token(Token = "0x2000119")]
public class Cameraicon : MonoBehaviour
{
	[Token(Token = "0x200011A")]
	[CompilerGenerated]
	private sealed class <Punteggio>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cameraicon <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xE08974", Offset = "0xE08974", VA = "0xE08974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0xE089BC", Offset = "0xE089BC", VA = "0xE089BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xE06FC4", Offset = "0xE06FC4", VA = "0xE06FC4")]
		[DebuggerHidden]
		public <Punteggio>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xE08860", Offset = "0xE08860", VA = "0xE08860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xE08864", Offset = "0xE08864", VA = "0xE08864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xE0897C", Offset = "0xE0897C", VA = "0xE0897C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cameraview;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] hair;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject visuale;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool stoppa;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool inversezoom;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject male;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject player1;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xE06D2C", Offset = "0xE06D2C", VA = "0xE06D2C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xE06EB4", Offset = "0xE06EB4", VA = "0xE06EB4", Slot = "5")]
	public virtual void ChangeCameraView()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xE06F50", Offset = "0xE06F50", VA = "0xE06F50", Slot = "6")]
	[IteratorStateMachine(typeof(<Punteggio>d__9))]
	public virtual IEnumerator Punteggio()
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xE06FEC", Offset = "0xE06FEC", VA = "0xE06FEC", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xE08840", Offset = "0xE08840", VA = "0xE08840")]
	public Cameraicon()
	{
	}
}
[Serializable]
[Token(Token = "0x200011B")]
public class Cameraicon1 : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	[CompilerGenerated]
	private sealed class <Punteggio>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cameraicon1 <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xE0BC14", Offset = "0xE0BC14", VA = "0xE0BC14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xE0BC5C", Offset = "0xE0BC5C", VA = "0xE0BC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xE08CB0", Offset = "0xE08CB0", VA = "0xE08CB0")]
		[DebuggerHidden]
		public <Punteggio>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xE0BB00", Offset = "0xE0BB00", VA = "0xE0BB00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xE0BB04", Offset = "0xE0BB04", VA = "0xE0BB04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xE0BC1C", Offset = "0xE0BC1C", VA = "0xE0BC1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cameraview;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cameraview1;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject visuale;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject visuale1;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool stoppa;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool stoppa1;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool inversezoom;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool inversezoom1;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject male;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject player1;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject male1;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject player0;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xE089C4", Offset = "0xE089C4", VA = "0xE089C4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xE08B94", Offset = "0xE08B94", VA = "0xE08B94", Slot = "5")]
	public virtual void ChangeCameraView()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xE08BE8", Offset = "0xE08BE8", VA = "0xE08BE8", Slot = "6")]
	public virtual void ChangeCameraView1()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xE08C3C", Offset = "0xE08C3C", VA = "0xE08C3C", Slot = "7")]
	[IteratorStateMachine(typeof(<Punteggio>d__15))]
	public virtual IEnumerator Punteggio()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE08CD8", Offset = "0xE08CD8", VA = "0xE08CD8", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE0BAE0", Offset = "0xE0BAE0", VA = "0xE0BAE0")]
	public Cameraicon1()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class Cameramotion : MonoBehaviour
{
	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE0BC64", Offset = "0xE0BC64", VA = "0xE0BC64")]
	public Cameramotion()
	{
	}
}
[Serializable]
[Token(Token = "0x200011E")]
public class CameraSelectMenu : MonoBehaviour
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int cameraview;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE0BC6C", Offset = "0xE0BC6C", VA = "0xE0BC6C", Slot = "4")]
	public virtual void changecameraview(int value)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE0BCB8", Offset = "0xE0BCB8", VA = "0xE0BCB8", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE0C448", Offset = "0xE0C448", VA = "0xE0C448")]
	public CameraSelectMenu()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class Changeskin : MonoBehaviour
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer skinrenderer;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE0C450", Offset = "0xE0C450", VA = "0xE0C450", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE0C5BC", Offset = "0xE0C5BC", VA = "0xE0C5BC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE0C678", Offset = "0xE0C678", VA = "0xE0C678")]
	public Changeskin()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class ChangeskinMulti : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer skinrenderer;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xE0C680", Offset = "0xE0C680", VA = "0xE0C680", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xE0C7EC", Offset = "0xE0C7EC", VA = "0xE0C7EC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xE0C8E0", Offset = "0xE0C8E0", VA = "0xE0C8E0")]
	public ChangeskinMulti()
	{
	}
}
[Serializable]
[Token(Token = "0x2000121")]
public class CharacterMove : MonoBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 moveDirection;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xE0C8E8", Offset = "0xE0C8E8", VA = "0xE0C8E8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xE0CA84", Offset = "0xE0CA84", VA = "0xE0CA84")]
	public CharacterMove()
	{
	}
}
[Serializable]
[Token(Token = "0x2000122")]
public class Charge1 : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	[CompilerGenerated]
	private sealed class <attesaanimazione>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1 <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xE11D28", Offset = "0xE11D28", VA = "0xE11D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xE11D70", Offset = "0xE11D70", VA = "0xE11D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xE0CF68", Offset = "0xE0CF68", VA = "0xE0CF68")]
		[DebuggerHidden]
		public <attesaanimazione>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xE11C6C", Offset = "0xE11C6C", VA = "0xE11C6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xE11C70", Offset = "0xE11C70", VA = "0xE11C70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xE11D30", Offset = "0xE11D30", VA = "0xE11D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000124")]
	[CompilerGenerated]
	private sealed class <shot>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1 <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xE12504", Offset = "0xE12504", VA = "0xE12504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xE1254C", Offset = "0xE1254C", VA = "0xE1254C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xE10A48", Offset = "0xE10A48", VA = "0xE10A48")]
		[DebuggerHidden]
		public <shot>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xE11D78", Offset = "0xE11D78", VA = "0xE11D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xE11D7C", Offset = "0xE11D7C", VA = "0xE11D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xE1250C", Offset = "0xE1250C", VA = "0xE1250C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <servizio>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1 <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0xE12C74", Offset = "0xE12C74", VA = "0xE12C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0xE12CBC", Offset = "0xE12CBC", VA = "0xE12CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xE10AE4", Offset = "0xE10AE4", VA = "0xE10AE4")]
		[DebuggerHidden]
		public <servizio>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xE12554", Offset = "0xE12554", VA = "0xE12554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xE12558", Offset = "0xE12558", VA = "0xE12558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xE12C7C", Offset = "0xE12C7C", VA = "0xE12C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000126")]
	[CompilerGenerated]
	private sealed class <wait>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1 <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0xE13F70", Offset = "0xE13F70", VA = "0xE13F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xE13FB8", Offset = "0xE13FB8", VA = "0xE13FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE13CC4", Offset = "0xE13CC4", VA = "0xE13CC4")]
		[DebuggerHidden]
		public <wait>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xE13CEC", Offset = "0xE13CEC", VA = "0xE13CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xE13CF0", Offset = "0xE13CF0", VA = "0xE13CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xE13F78", Offset = "0xE13F78", VA = "0xE13F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000127")]
	[CompilerGenerated]
	private sealed class <Speedserve>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1 <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0xE144E8", Offset = "0xE144E8", VA = "0xE144E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0xE14530", Offset = "0xE14530", VA = "0xE14530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xE13FC0", Offset = "0xE13FC0", VA = "0xE13FC0")]
		[DebuggerHidden]
		public <Speedserve>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xE13FE8", Offset = "0xE13FE8", VA = "0xE13FE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xE13FEC", Offset = "0xE13FEC", VA = "0xE13FEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xE144F0", Offset = "0xE144F0", VA = "0xE144F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource hitsound;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource grunt;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource gruntfem;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inTrigger;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool tiro;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool tirato;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ball;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CharacterController character;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool forehand;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool backhand;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool volee;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool stopanimation;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject male00;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool slice;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool top;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator anim;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float speed;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tiropref;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool prontoaltiro;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool acetoccata;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NavMeshAgent agent;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 destinazione;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject player0;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool lobshot;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float puntoimpatto;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool smash;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 lookPos;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Quaternion rotation;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool stoppa;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject target;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject barraserve;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform spawnTarget;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform obiettivotiro;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float horizontalOffset;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float lob;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector3 startingVelocity;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Vector3 posizionerimbalzo;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Vector3 posizionerimbalzo1;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Vector3 posizionepl0;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Rigidbody ballpreview;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float powershotskill;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float run;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float speedrun;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float stamina;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float proporzione;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float cb;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float ab;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float ch;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float al;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float dl;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float distrimbalzo;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float lob1;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float random;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float timestepsPerSecond;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 p;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int speedserving;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float tflight;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float rangez;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float rangex;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float n;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float physicsTimestep;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 a;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 s;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 startingPosition;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 velocity;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float powershot;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float powertiro;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float powerserve;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float powerservizio;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float mag;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Scene scene;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xE0CAEC", Offset = "0xE0CAEC", VA = "0xE0CAEC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xE0CB70", Offset = "0xE0CB70", VA = "0xE0CB70", Slot = "5")]
	public virtual void Restartanim()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xE0CB8C", Offset = "0xE0CB8C", VA = "0xE0CB8C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xE0CEF4", Offset = "0xE0CEF4", VA = "0xE0CEF4", Slot = "7")]
	[IteratorStateMachine(typeof(<attesaanimazione>d__75))]
	public virtual IEnumerator attesaanimazione()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE0CF90", Offset = "0xE0CF90", VA = "0xE0CF90", Slot = "8")]
	public virtual void idle()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE0D19C", Offset = "0xE0D19C", VA = "0xE0D19C", Slot = "9")]
	public virtual void esultation()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE0D234", Offset = "0xE0D234", VA = "0xE0D234", Slot = "10")]
	public virtual void defeat()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE0D2C4", Offset = "0xE0D2C4", VA = "0xE0D2C4", Slot = "11")]
	public virtual void stand()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE0D340", Offset = "0xE0D340", VA = "0xE0D340", Slot = "12")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE108C8", Offset = "0xE108C8", VA = "0xE108C8", Slot = "13")]
	public virtual void checktiro()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE109D4", Offset = "0xE109D4", VA = "0xE109D4", Slot = "14")]
	[IteratorStateMachine(typeof(<shot>d__82))]
	public virtual IEnumerator shot()
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE10A70", Offset = "0xE10A70", VA = "0xE10A70", Slot = "15")]
	[IteratorStateMachine(typeof(<servizio>d__83))]
	public virtual IEnumerator servizio()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE10B0C", Offset = "0xE10B0C", VA = "0xE10B0C", Slot = "16")]
	[IteratorStateMachine(typeof(<wait>d__84))]
	public virtual IEnumerator wait()
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE10B80", Offset = "0xE10B80", VA = "0xE10B80", Slot = "17")]
	public virtual void GetTrajectoryVelocitytiroswipe()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE114CC", Offset = "0xE114CC", VA = "0xE114CC", Slot = "18")]
	public virtual void GetTrajectoryVelocityservizioswipe()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE11BF0", Offset = "0xE11BF0", VA = "0xE11BF0", Slot = "19")]
	[IteratorStateMachine(typeof(<Speedserve>d__87))]
	public virtual IEnumerator Speedserve()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE11C64", Offset = "0xE11C64", VA = "0xE11C64")]
	public Charge1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class Charge1vr : MonoBehaviour
{
	[Token(Token = "0x2000129")]
	[CompilerGenerated]
	private sealed class <BacktocenterNormal>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1vr <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0xE157B4", Offset = "0xE157B4", VA = "0xE157B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xE157FC", Offset = "0xE157FC", VA = "0xE157FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xE151C0", Offset = "0xE151C0", VA = "0xE151C0")]
		[DebuggerHidden]
		public <BacktocenterNormal>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xE15380", Offset = "0xE15380", VA = "0xE15380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xE15384", Offset = "0xE15384", VA = "0xE15384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xE157BC", Offset = "0xE157BC", VA = "0xE157BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <CambioposizioneNormal>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1vr <>4__this;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0xE19114", Offset = "0xE19114", VA = "0xE19114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xE1915C", Offset = "0xE1915C", VA = "0xE1915C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xE152A8", Offset = "0xE152A8", VA = "0xE152A8")]
		[DebuggerHidden]
		public <CambioposizioneNormal>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xE15804", Offset = "0xE15804", VA = "0xE15804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xE15808", Offset = "0xE15808", VA = "0xE15808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xE1911C", Offset = "0xE1911C", VA = "0xE1911C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[CompilerGenerated]
	private sealed class <CambioposizioneTraining>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge1vr <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xE1B284", Offset = "0xE1B284", VA = "0xE1B284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0xE1B2CC", Offset = "0xE1B2CC", VA = "0xE1B2CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xE15344", Offset = "0xE15344", VA = "0xE15344")]
		[DebuggerHidden]
		public <CambioposizioneTraining>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xE19164", Offset = "0xE19164", VA = "0xE19164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE19168", Offset = "0xE19168", VA = "0xE19168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE1B28C", Offset = "0xE1B28C", VA = "0xE1B28C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource hitsound;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool tiro;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myTransform;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody ball;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool stopanimation;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool acetoccata;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshAgent agent;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 destinazione;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float puntoimpatto;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool smash;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool stoppa;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int runprefs;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rangez1;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rangex1;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float tflight;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float ab;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float cb;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float proporzione;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float ch;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float al;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float dl;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distrimbalzo;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 posizionerimbalzo;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Vector3 posizionerimbalzo1;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Vector3 posizionepl0;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tempdistance;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float tempdistancey;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float distance;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float distancey;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float distance1y;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float distance2y;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float temppicco;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 picco;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 impactposition1;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 impactposition2;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool goingtocenter;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public static bool goToNet;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Scene scene;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int scenex;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float posizioneattesa;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int rankedtemp;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int openspacetemp;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int trainingtemp;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int rundirection;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE14538", Offset = "0xE14538", VA = "0xE14538", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE14910", Offset = "0xE14910", VA = "0xE14910", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xE14F44", Offset = "0xE14F44", VA = "0xE14F44", Slot = "6")]
	public virtual void Rungotonet()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE15118", Offset = "0xE15118", VA = "0xE15118", Slot = "7")]
	public virtual void Backtocenter()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xE1514C", Offset = "0xE1514C", VA = "0xE1514C")]
	[IteratorStateMachine(typeof(<BacktocenterNormal>d__49))]
	public IEnumerator BacktocenterNormal()
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE151E8", Offset = "0xE151E8", VA = "0xE151E8")]
	public void Cambioposizione()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xE15234", Offset = "0xE15234", VA = "0xE15234", Slot = "8")]
	[IteratorStateMachine(typeof(<CambioposizioneNormal>d__51))]
	public virtual IEnumerator CambioposizioneNormal()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE152D0", Offset = "0xE152D0", VA = "0xE152D0", Slot = "9")]
	[IteratorStateMachine(typeof(<CambioposizioneTraining>d__52))]
	public virtual IEnumerator CambioposizioneTraining()
	{
		return null;
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE1536C", Offset = "0xE1536C", VA = "0xE1536C")]
	public Charge1vr()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class Charge2 : MonoBehaviour
{
	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private sealed class <attesaanimazione>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge2 <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063E")]
			[Address(RVA = "0xE20F20", Offset = "0xE20F20", VA = "0xE20F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000640")]
			[Address(RVA = "0xE20F68", Offset = "0xE20F68", VA = "0xE20F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xE20E3C", Offset = "0xE20E3C", VA = "0xE20E3C")]
		[DebuggerHidden]
		public <attesaanimazione>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xE20E64", Offset = "0xE20E64", VA = "0xE20E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xE20E68", Offset = "0xE20E68", VA = "0xE20E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xE20F28", Offset = "0xE20F28", VA = "0xE20F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012E")]
	[CompilerGenerated]
	private sealed class <shot>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge2 <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0xE217B8", Offset = "0xE217B8", VA = "0xE217B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000646")]
			[Address(RVA = "0xE21800", Offset = "0xE21800", VA = "0xE21800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xE20F70", Offset = "0xE20F70", VA = "0xE20F70")]
		[DebuggerHidden]
		public <shot>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE20F98", Offset = "0xE20F98", VA = "0xE20F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xE20F9C", Offset = "0xE20F9C", VA = "0xE20F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xE217C0", Offset = "0xE217C0", VA = "0xE217C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <servizio>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge2 <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064A")]
			[Address(RVA = "0xE21FB0", Offset = "0xE21FB0", VA = "0xE21FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0xE21FF8", Offset = "0xE21FF8", VA = "0xE21FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xE21808", Offset = "0xE21808", VA = "0xE21808")]
		[DebuggerHidden]
		public <servizio>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xE21830", Offset = "0xE21830", VA = "0xE21830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xE21834", Offset = "0xE21834", VA = "0xE21834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xE21FB8", Offset = "0xE21FB8", VA = "0xE21FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <wait>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge2 <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0xE222AC", Offset = "0xE222AC", VA = "0xE222AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xE222F4", Offset = "0xE222F4", VA = "0xE222F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xE22000", Offset = "0xE22000", VA = "0xE22000")]
		[DebuggerHidden]
		public <wait>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xE22028", Offset = "0xE22028", VA = "0xE22028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xE2202C", Offset = "0xE2202C", VA = "0xE2202C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xE222B4", Offset = "0xE222B4", VA = "0xE222B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000131")]
	[CompilerGenerated]
	private sealed class <Speedserve>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Charge2 <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000656")]
			[Address(RVA = "0xE22540", Offset = "0xE22540", VA = "0xE22540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000658")]
			[Address(RVA = "0xE22588", Offset = "0xE22588", VA = "0xE22588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xE222FC", Offset = "0xE222FC", VA = "0xE222FC")]
		[DebuggerHidden]
		public <Speedserve>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xE22324", Offset = "0xE22324", VA = "0xE22324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xE22328", Offset = "0xE22328", VA = "0xE22328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xE22548", Offset = "0xE22548", VA = "0xE22548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource hitsound;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource grunt;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource gruntfem;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inTrigger;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool tiro;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myTransform;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool tirato;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ball;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CharacterController character;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool forehand;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool backhand;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool volee;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool stopanimation;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject male01;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool slice;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool top;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator anim;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float speed;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tiropref;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool prontoaltiro;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool acetoccata;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 destinazione;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject player0;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool lobshot;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float puntoimpatto;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool smash;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 lookPos;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Quaternion rotation;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool stoppa;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject target;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject barraserve;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform spawnTarget;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform obiettivotiro;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float horizontalOffset;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float lob;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 startingVelocity;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 posizionerimbalzo;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Vector3 posizionerimbalzo1;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Vector3 posizionepl1;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Rigidbody ballpreview;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float powershotskill;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float run;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float speedrun;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float stamina;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float proporzione;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float cb;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float ab;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float ch;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float al;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float dl;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float distrimbalzo;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float lob1;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float random;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float timestepsPerSecond;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 p;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int speedserving;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xE1B2D4", Offset = "0xE1B2D4", VA = "0xE1B2D4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xE1B358", Offset = "0xE1B358", VA = "0xE1B358", Slot = "5")]
	public virtual void Restartanim()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE1B374", Offset = "0xE1B374", VA = "0xE1B374", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xE1B644", Offset = "0xE1B644", VA = "0xE1B644", Slot = "7")]
	[IteratorStateMachine(typeof(<attesaanimazione>d__60))]
	public virtual IEnumerator attesaanimazione()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE1B6B8", Offset = "0xE1B6B8", VA = "0xE1B6B8", Slot = "8")]
	public virtual void idle()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE1B8C0", Offset = "0xE1B8C0", VA = "0xE1B8C0", Slot = "9")]
	public virtual void esultation()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xE1B958", Offset = "0xE1B958", VA = "0xE1B958", Slot = "10")]
	public virtual void defeat()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xE1B9E8", Offset = "0xE1B9E8", VA = "0xE1B9E8", Slot = "11")]
	public virtual void stand()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xE1BA64", Offset = "0xE1BA64", VA = "0xE1BA64", Slot = "12")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xE1EB44", Offset = "0xE1EB44", VA = "0xE1EB44", Slot = "13")]
	public virtual void checktiro()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xE1EC50", Offset = "0xE1EC50", VA = "0xE1EC50", Slot = "14")]
	[IteratorStateMachine(typeof(<shot>d__67))]
	public virtual IEnumerator shot()
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xE1ECC4", Offset = "0xE1ECC4", VA = "0xE1ECC4", Slot = "15")]
	[IteratorStateMachine(typeof(<servizio>d__68))]
	public virtual IEnumerator servizio()
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xE1ED38", Offset = "0xE1ED38", VA = "0xE1ED38", Slot = "16")]
	[IteratorStateMachine(typeof(<wait>d__69))]
	public virtual IEnumerator wait()
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xE1EDAC", Offset = "0xE1EDAC", VA = "0xE1EDAC", Slot = "17")]
	public virtual Vector3 GetTrajectoryVelocitytiroswipe(object startingPosition, object targetPosition, object lob, object gravity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xE1F6C0", Offset = "0xE1F6C0", VA = "0xE1F6C0", Slot = "18")]
	public virtual Vector3 GetTrajectoryVelocityservizioswipe(object startingPosition, object targetPosition, object lob, object gravity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xE1FDA8", Offset = "0xE1FDA8", VA = "0xE1FDA8", Slot = "19")]
	[IteratorStateMachine(typeof(<Speedserve>d__72))]
	public virtual IEnumerator Speedserve()
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xE1FE1C", Offset = "0xE1FE1C", VA = "0xE1FE1C")]
	public Charge2()
	{
	}
}
[Token(Token = "0x2000132")]
public class PlayerInfo
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string player;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int score;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xE22590", Offset = "0xE22590", VA = "0xE22590")]
	public PlayerInfo(int _id, string _player, int _score)
	{
	}
}
[Token(Token = "0x2000133")]
public class Classifica : MonoBehaviour
{
	[Token(Token = "0x600065A")]
	[Address(RVA = "0xE225DC", Offset = "0xE225DC", VA = "0xE225DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xE29A14", Offset = "0xE29A14", VA = "0xE29A14")]
	public Classifica()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class Clay : MonoBehaviour
{
	[Token(Token = "0x2000136")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Clay <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0xE29F34", Offset = "0xE29F34", VA = "0xE29F34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0xE29F7C", Offset = "0xE29F7C", VA = "0xE29F7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xE29B30", Offset = "0xE29B30", VA = "0xE29B30")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xE29B60", Offset = "0xE29B60", VA = "0xE29B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xE29B64", Offset = "0xE29B64", VA = "0xE29B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xE29F3C", Offset = "0xE29F3C", VA = "0xE29F3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool clay;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EMTransition;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xE29ABC", Offset = "0xE29ABC", VA = "0xE29ABC", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xE29B58", Offset = "0xE29B58", VA = "0xE29B58")]
	public Clay()
	{
	}
}
[Serializable]
[Token(Token = "0x2000137")]
public class Collide1 : MonoBehaviour
{
	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE29F84", Offset = "0xE29F84", VA = "0xE29F84", Slot = "4")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xE2A098", Offset = "0xE2A098", VA = "0xE2A098")]
	public Collide1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000138")]
public class Collidehelp : MonoBehaviour
{
	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int rimbalzo;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player0;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xE2A0A0", Offset = "0xE2A0A0", VA = "0xE2A0A0", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xE2A12C", Offset = "0xE2A12C", VA = "0xE2A12C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE2A370", Offset = "0xE2A370", VA = "0xE2A370")]
	public Collidehelp()
	{
	}
}
[Serializable]
[Token(Token = "0x2000139")]
public class Collidehelp1 : MonoBehaviour
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int rimbalzo;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player0;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE2A378", Offset = "0xE2A378", VA = "0xE2A378", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE2A404", Offset = "0xE2A404", VA = "0xE2A404", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE2A72C", Offset = "0xE2A72C", VA = "0xE2A72C")]
	public Collidehelp1()
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
public class Colliderobjects : MonoBehaviour
{
	[Token(Token = "0x200013B")]
	[CompilerGenerated]
	private sealed class <OnCollisionStay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xE2D034", Offset = "0xE2D034", VA = "0xE2D034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0xE2D07C", Offset = "0xE2D07C", VA = "0xE2D07C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xE2BCC4", Offset = "0xE2BCC4", VA = "0xE2BCC4")]
		[DebuggerHidden]
		public <OnCollisionStay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xE2BCF4", Offset = "0xE2BCF4", VA = "0xE2BCF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xE2BCF8", Offset = "0xE2BCF8", VA = "0xE2BCF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xE2D03C", Offset = "0xE2D03C", VA = "0xE2D03C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene scene;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE2A734", Offset = "0xE2A734", VA = "0xE2A734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE2A790", Offset = "0xE2A790", VA = "0xE2A790", Slot = "4")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE2B950", Offset = "0xE2B950", VA = "0xE2B950", Slot = "5")]
	public virtual void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE2BC50", Offset = "0xE2BC50", VA = "0xE2BC50", Slot = "6")]
	[IteratorStateMachine(typeof(<OnCollisionStay>d__4))]
	public virtual IEnumerator OnCollisionStay(Collision other)
	{
		return null;
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE2BCEC", Offset = "0xE2BCEC", VA = "0xE2BCEC")]
	public Colliderobjects()
	{
	}
}
[Serializable]
[Token(Token = "0x200013C")]
public class Collidestep1 : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource step1;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE2D084", Offset = "0xE2D084", VA = "0xE2D084", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE2D148", Offset = "0xE2D148", VA = "0xE2D148")]
	public Collidestep1()
	{
	}
}
[Serializable]
[Token(Token = "0x200013D")]
public class Collidestep2 : MonoBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource step1;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE2D150", Offset = "0xE2D150", VA = "0xE2D150", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE2D214", Offset = "0xE2D214", VA = "0xE2D214")]
	public Collidestep2()
	{
	}
}
[Serializable]
[Token(Token = "0x200013E")]
public class Collisioncone : MonoBehaviour
{
	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private sealed class <Destroyer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collisioncone <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0xE2D5C4", Offset = "0xE2D5C4", VA = "0xE2D5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0xE2D60C", Offset = "0xE2D60C", VA = "0xE2D60C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xE2D370", Offset = "0xE2D370", VA = "0xE2D370")]
		[DebuggerHidden]
		public <Destroyer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xE2D3A0", Offset = "0xE2D3A0", VA = "0xE2D3A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xE2D3A4", Offset = "0xE2D3A4", VA = "0xE2D3A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE2D5CC", Offset = "0xE2D5CC", VA = "0xE2D5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource hitsound;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE2D21C", Offset = "0xE2D21C", VA = "0xE2D21C", Slot = "4")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xE2D2FC", Offset = "0xE2D2FC", VA = "0xE2D2FC", Slot = "5")]
	[IteratorStateMachine(typeof(<Destroyer>d__2))]
	public virtual IEnumerator Destroyer()
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xE2D398", Offset = "0xE2D398", VA = "0xE2D398")]
	public Collisioncone()
	{
	}
}
[Serializable]
[Token(Token = "0x2000140")]
public class Collisioncone1 : MonoBehaviour
{
	[Token(Token = "0x6000687")]
	[Address(RVA = "0xE2D614", Offset = "0xE2D614", VA = "0xE2D614", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xE2D6B4", Offset = "0xE2D6B4", VA = "0xE2D6B4")]
	public Collisioncone1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000141")]
public class Collisioncone2 : MonoBehaviour
{
	[Token(Token = "0x2000142")]
	[CompilerGenerated]
	private sealed class <Destroyer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collisioncone2 <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xE2DA64", Offset = "0xE2DA64", VA = "0xE2DA64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xE2DAAC", Offset = "0xE2DAAC", VA = "0xE2DAAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xE2D810", Offset = "0xE2D810", VA = "0xE2D810")]
		[DebuggerHidden]
		public <Destroyer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xE2D840", Offset = "0xE2D840", VA = "0xE2D840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xE2D844", Offset = "0xE2D844", VA = "0xE2D844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xE2DA6C", Offset = "0xE2DA6C", VA = "0xE2DA6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource hitsound;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xE2D6BC", Offset = "0xE2D6BC", VA = "0xE2D6BC", Slot = "4")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xE2D79C", Offset = "0xE2D79C", VA = "0xE2D79C", Slot = "5")]
	[IteratorStateMachine(typeof(<Destroyer>d__2))]
	public virtual IEnumerator Destroyer()
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xE2D838", Offset = "0xE2D838", VA = "0xE2D838")]
	public Collisioncone2()
	{
	}
}
[Token(Token = "0x2000143")]
public class CollisionSim : MonoBehaviour
{
	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int bouncenum;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool collisionstop;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 simbounce1;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Vector3 simbounce2;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xE2DAB4", Offset = "0xE2DAB4", VA = "0xE2DAB4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE2DB00", Offset = "0xE2DB00", VA = "0xE2DB00")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE2DCB4", Offset = "0xE2DCB4", VA = "0xE2DCB4")]
	public CollisionSim()
	{
	}
}
[Serializable]
[Token(Token = "0x2000144")]
public class Commentary : MonoBehaviour
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audio1;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource secondservice0;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource secondservice1;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource out0;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource out1;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource fault0;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource fault1;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource let;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int commento;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int boo;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int ace;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int shots;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool forehandtiro;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool volleytiro;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int commentovar;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int commento1;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int commento2;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int commento3;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int commento4;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int commento5;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int commento6;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int commento7;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int commento8;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int commento9;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int commento10;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int boovar;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int boo1;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int boo2;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int boo3;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int boo4;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int boo5;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int boo6;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int boo7;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int boo8;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int boo9;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int boo10;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] crowd;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Scene scene;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int randomout;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int randomfault;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int randomsecond;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE2DCBC", Offset = "0xE2DCBC", VA = "0xE2DCBC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE2DE8C", Offset = "0xE2DE8C", VA = "0xE2DE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xE2DEE8", Offset = "0xE2DEE8", VA = "0xE2DEE8", Slot = "5")]
	public virtual void Commentogo()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE2EB98", Offset = "0xE2EB98", VA = "0xE2EB98", Slot = "6")]
	public virtual void Boo()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE2EFBC", Offset = "0xE2EFBC", VA = "0xE2EFBC", Slot = "7")]
	public virtual void Commentoace()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE2F910", Offset = "0xE2F910", VA = "0xE2F910", Slot = "8")]
	public virtual void Secondserveaudio()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE2FA10", Offset = "0xE2FA10", VA = "0xE2FA10", Slot = "9")]
	public virtual void Faultaudio()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xE2FB10", Offset = "0xE2FB10", VA = "0xE2FB10", Slot = "10")]
	public virtual void Outaudio()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xE2FC10", Offset = "0xE2FC10", VA = "0xE2FC10", Slot = "11")]
	public virtual void Letaudio()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xE2FCEC", Offset = "0xE2FCEC", VA = "0xE2FCEC")]
	public Commentary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000145")]
public class Commentarysettings : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Commentary;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int Grunt;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Ambient;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float Music;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float Umpire;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider Musicslider;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider Umpireslider;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject on;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject off;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Grunton;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Gruntoff;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Ambienton;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Ambientoff;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xE2FCF4", Offset = "0xE2FCF4", VA = "0xE2FCF4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xE302CC", Offset = "0xE302CC", VA = "0xE302CC", Slot = "5")]
	public virtual void Commentarychange()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xE30420", Offset = "0xE30420", VA = "0xE30420", Slot = "6")]
	public virtual void Musicchange()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xE30580", Offset = "0xE30580", VA = "0xE30580", Slot = "7")]
	public virtual void Umpirechange()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xE30664", Offset = "0xE30664", VA = "0xE30664", Slot = "8")]
	public virtual void Gruntchange()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xE307B8", Offset = "0xE307B8", VA = "0xE307B8", Slot = "9")]
	public virtual void Ambientchange()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xE3090C", Offset = "0xE3090C", VA = "0xE3090C")]
	static Commentarysettings()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xE30960", Offset = "0xE30960", VA = "0xE30960")]
	public Commentarysettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000146")]
public class Continue : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	[CompilerGenerated]
	private sealed class <select>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Continue <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xE37850", Offset = "0xE37850", VA = "0xE37850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0xE37898", Offset = "0xE37898", VA = "0xE37898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xE37474", Offset = "0xE37474", VA = "0xE37474")]
		[DebuggerHidden]
		public <select>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xE3749C", Offset = "0xE3749C", VA = "0xE3749C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xE374A0", Offset = "0xE374A0", VA = "0xE374A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xE37858", Offset = "0xE37858", VA = "0xE37858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000148")]
	[CompilerGenerated]
	private sealed class <selectMulti>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Continue <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0xE37CC4", Offset = "0xE37CC4", VA = "0xE37CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0xE37D0C", Offset = "0xE37D0C", VA = "0xE37D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xE378A0", Offset = "0xE378A0", VA = "0xE378A0")]
		[DebuggerHidden]
		public <selectMulti>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xE378C8", Offset = "0xE378C8", VA = "0xE378C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xE378CC", Offset = "0xE378CC", VA = "0xE378CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xE37CCC", Offset = "0xE37CCC", VA = "0xE37CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attiva;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AsyncOperation op;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layercamera;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject texthead;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject textbody;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject textracket;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] elementbody;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] elementpelle;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] elementracchetta;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int heads;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int outfit;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int racket;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int points;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text pointstext;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image forehandbar;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image backhandbar;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image servebar;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image volleybar;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image speedbar;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image staminabar;

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xE30968", Offset = "0xE30968", VA = "0xE30968", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xE31280", Offset = "0xE31280", VA = "0xE31280", Slot = "5")]
	public virtual void male()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xE31294", Offset = "0xE31294", VA = "0xE31294", Slot = "6")]
	public virtual void female()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xE312AC", Offset = "0xE312AC", VA = "0xE312AC", Slot = "7")]
	public virtual void testapiu()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xE312D0", Offset = "0xE312D0", VA = "0xE312D0", Slot = "8")]
	public virtual void testameno()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xE312F0", Offset = "0xE312F0", VA = "0xE312F0", Slot = "9")]
	public virtual void bodypiu()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xE31314", Offset = "0xE31314", VA = "0xE31314", Slot = "10")]
	public virtual void bodymeno()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xE31334", Offset = "0xE31334", VA = "0xE31334", Slot = "11")]
	public virtual void racchettapiu()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xE31358", Offset = "0xE31358", VA = "0xE31358", Slot = "12")]
	public virtual void racchettameno()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xE31378", Offset = "0xE31378", VA = "0xE31378", Slot = "13")]
	public virtual void testa()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xE3404C", Offset = "0xE3404C", VA = "0xE3404C", Slot = "14")]
	public virtual void body()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xE34380", Offset = "0xE34380", VA = "0xE34380", Slot = "15")]
	public virtual void racchetta()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xE34790", Offset = "0xE34790", VA = "0xE34790", Slot = "16")]
	public virtual void forehandplus()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xE349B4", Offset = "0xE349B4", VA = "0xE349B4", Slot = "17")]
	public virtual void forehandless()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xE34BDC", Offset = "0xE34BDC", VA = "0xE34BDC", Slot = "18")]
	public virtual void backhandplus()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xE34E00", Offset = "0xE34E00", VA = "0xE34E00", Slot = "19")]
	public virtual void backhandless()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xE35028", Offset = "0xE35028", VA = "0xE35028", Slot = "20")]
	public virtual void serveplus()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xE3524C", Offset = "0xE3524C", VA = "0xE3524C", Slot = "21")]
	public virtual void serveless()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xE35474", Offset = "0xE35474", VA = "0xE35474", Slot = "22")]
	public virtual void volleyplus()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xE35698", Offset = "0xE35698", VA = "0xE35698", Slot = "23")]
	public virtual void volleyless()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xE358C0", Offset = "0xE358C0", VA = "0xE358C0", Slot = "24")]
	public virtual void speedplus()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE35AE4", Offset = "0xE35AE4", VA = "0xE35AE4", Slot = "25")]
	public virtual void speedless()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE35D0C", Offset = "0xE35D0C", VA = "0xE35D0C", Slot = "26")]
	public virtual void staminaplus()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE35F30", Offset = "0xE35F30", VA = "0xE35F30", Slot = "27")]
	public virtual void staminaless()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xE36158", Offset = "0xE36158", VA = "0xE36158", Slot = "28")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xE36364", Offset = "0xE36364", VA = "0xE36364", Slot = "29")]
	[IteratorStateMachine(typeof(<select>d__48))]
	public virtual IEnumerator select()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xE363D8", Offset = "0xE363D8", VA = "0xE363D8", Slot = "30")]
	[IteratorStateMachine(typeof(<selectMulti>d__49))]
	public virtual IEnumerator selectMulti()
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xE3644C", Offset = "0xE3644C", VA = "0xE3644C")]
	public Continue()
	{
	}
}
[Serializable]
[Token(Token = "0x2000149")]
public class Continue1 : MonoBehaviour
{
	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <OnClick>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Continue1 <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0xE38A08", Offset = "0xE38A08", VA = "0xE38A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0xE38A50", Offset = "0xE38A50", VA = "0xE38A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xE37D88", Offset = "0xE37D88", VA = "0xE37D88")]
		[DebuggerHidden]
		public <OnClick>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xE37DB8", Offset = "0xE37DB8", VA = "0xE37DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xE37DBC", Offset = "0xE37DBC", VA = "0xE37DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xE38A10", Offset = "0xE38A10", VA = "0xE38A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE37D14", Offset = "0xE37D14", VA = "0xE37D14", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__1))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xE37DB0", Offset = "0xE37DB0", VA = "0xE37DB0")]
	public Continue1()
	{
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class Continue1player : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private sealed class <select>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Continue1player <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0xE3C7E0", Offset = "0xE3C7E0", VA = "0xE3C7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0xE3C828", Offset = "0xE3C828", VA = "0xE3C828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xE3C32C", Offset = "0xE3C32C", VA = "0xE3C32C")]
		[DebuggerHidden]
		public <select>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xE3C37C", Offset = "0xE3C37C", VA = "0xE3C37C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xE3C380", Offset = "0xE3C380", VA = "0xE3C380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xE3C7E8", Offset = "0xE3C7E8", VA = "0xE3C7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attiva;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AsyncOperation op;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layercamera;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject texthead;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject textbody;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject textracket;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] elementbody;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] elementpelle;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] elementracchetta;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int heads;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int outfit;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int racket;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int points;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text pointstext;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image forehandbar;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image backhandbar;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image servebar;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image volleybar;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image speedbar;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image staminabar;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xE38A58", Offset = "0xE38A58", VA = "0xE38A58", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE38F6C", Offset = "0xE38F6C", VA = "0xE38F6C", Slot = "5")]
	public virtual void testapiu()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xE38F8C", Offset = "0xE38F8C", VA = "0xE38F8C", Slot = "6")]
	public virtual void testameno()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE38FA8", Offset = "0xE38FA8", VA = "0xE38FA8", Slot = "7")]
	public virtual void bodypiu()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xE38FC8", Offset = "0xE38FC8", VA = "0xE38FC8", Slot = "8")]
	public virtual void bodymeno()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xE38FE4", Offset = "0xE38FE4", VA = "0xE38FE4", Slot = "9")]
	public virtual void racchettapiu()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xE39008", Offset = "0xE39008", VA = "0xE39008", Slot = "10")]
	public virtual void racchettameno()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xE39028", Offset = "0xE39028", VA = "0xE39028", Slot = "11")]
	public virtual void testa()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xE39C60", Offset = "0xE39C60", VA = "0xE39C60", Slot = "12")]
	public virtual void body()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xE39E8C", Offset = "0xE39E8C", VA = "0xE39E8C", Slot = "13")]
	public virtual void racchetta()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xE3A704", Offset = "0xE3A704", VA = "0xE3A704", Slot = "14")]
	public virtual void forehandplus()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xE3A928", Offset = "0xE3A928", VA = "0xE3A928", Slot = "15")]
	public virtual void forehandless()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xE3AB50", Offset = "0xE3AB50", VA = "0xE3AB50", Slot = "16")]
	public virtual void backhandplus()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xE3AD74", Offset = "0xE3AD74", VA = "0xE3AD74", Slot = "17")]
	public virtual void backhandless()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xE3AF9C", Offset = "0xE3AF9C", VA = "0xE3AF9C", Slot = "18")]
	public virtual void serveplus()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xE3B1C0", Offset = "0xE3B1C0", VA = "0xE3B1C0", Slot = "19")]
	public virtual void serveless()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xE3B3E8", Offset = "0xE3B3E8", VA = "0xE3B3E8", Slot = "20")]
	public virtual void volleyplus()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xE3B60C", Offset = "0xE3B60C", VA = "0xE3B60C", Slot = "21")]
	public virtual void volleyless()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xE3B834", Offset = "0xE3B834", VA = "0xE3B834", Slot = "22")]
	public virtual void speedplus()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xE3BA58", Offset = "0xE3BA58", VA = "0xE3BA58", Slot = "23")]
	public virtual void speedless()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xE3BC80", Offset = "0xE3BC80", VA = "0xE3BC80", Slot = "24")]
	public virtual void staminaplus()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xE3BEA4", Offset = "0xE3BEA4", VA = "0xE3BEA4", Slot = "25")]
	public virtual void staminaless()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xE3C0CC", Offset = "0xE3C0CC", VA = "0xE3C0CC", Slot = "26")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xE3C2B8", Offset = "0xE3C2B8", VA = "0xE3C2B8", Slot = "27")]
	[IteratorStateMachine(typeof(<select>d__46))]
	public virtual IEnumerator select()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xE3C354", Offset = "0xE3C354", VA = "0xE3C354")]
	public Continue1player()
	{
	}
}
[Serializable]
[Token(Token = "0x200014D")]
public class Continue2 : MonoBehaviour
{
	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <OnClick>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0xE3CBEC", Offset = "0xE3CBEC", VA = "0xE3CBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0xE3CC34", Offset = "0xE3CC34", VA = "0xE3CC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xE3C890", Offset = "0xE3C890", VA = "0xE3C890")]
		[DebuggerHidden]
		public <OnClick>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xE3C8C0", Offset = "0xE3C8C0", VA = "0xE3C8C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xE3C8C4", Offset = "0xE3C8C4", VA = "0xE3C8C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xE3CBF4", Offset = "0xE3CBF4", VA = "0xE3CBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xE3C830", Offset = "0xE3C830", VA = "0xE3C830", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__0))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xE3C8B8", Offset = "0xE3C8B8", VA = "0xE3C8B8")]
	public Continue2()
	{
	}
}
[Serializable]
[Token(Token = "0x200014F")]
public class Continue2player : MonoBehaviour
{
	[Token(Token = "0x2000150")]
	[CompilerGenerated]
	private sealed class <select>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Continue2player <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xE408C4", Offset = "0xE408C4", VA = "0xE408C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0xE4090C", Offset = "0xE4090C", VA = "0xE4090C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xE40410", Offset = "0xE40410", VA = "0xE40410")]
		[DebuggerHidden]
		public <select>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xE40460", Offset = "0xE40460", VA = "0xE40460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xE40464", Offset = "0xE40464", VA = "0xE40464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xE408CC", Offset = "0xE408CC", VA = "0xE408CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attiva;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AsyncOperation op;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layercamera;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject texthead;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject textbody;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject textracket;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int index;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] elementbody;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] elementpelle;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] elementracchetta;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int heads;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int outfit;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int racket;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int points;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text pointstext;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image forehandbar;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image backhandbar;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image servebar;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image volleybar;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image speedbar;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image staminabar;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xE3CC3C", Offset = "0xE3CC3C", VA = "0xE3CC3C", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xE3D150", Offset = "0xE3D150", VA = "0xE3D150", Slot = "5")]
	public virtual void testapiu()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xE3D170", Offset = "0xE3D170", VA = "0xE3D170", Slot = "6")]
	public virtual void testameno()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xE3D18C", Offset = "0xE3D18C", VA = "0xE3D18C", Slot = "7")]
	public virtual void bodypiu()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xE3D1AC", Offset = "0xE3D1AC", VA = "0xE3D1AC", Slot = "8")]
	public virtual void bodymeno()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xE3D1C8", Offset = "0xE3D1C8", VA = "0xE3D1C8", Slot = "9")]
	public virtual void racchettapiu()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xE3D1EC", Offset = "0xE3D1EC", VA = "0xE3D1EC", Slot = "10")]
	public virtual void racchettameno()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xE3D20C", Offset = "0xE3D20C", VA = "0xE3D20C", Slot = "11")]
	public virtual void testa()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xE3DE44", Offset = "0xE3DE44", VA = "0xE3DE44", Slot = "12")]
	public virtual void body()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xE3E070", Offset = "0xE3E070", VA = "0xE3E070", Slot = "13")]
	public virtual void racchetta()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xE3E8E8", Offset = "0xE3E8E8", VA = "0xE3E8E8", Slot = "14")]
	public virtual void forehandplus()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xE3EB0C", Offset = "0xE3EB0C", VA = "0xE3EB0C", Slot = "15")]
	public virtual void forehandless()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xE3ED34", Offset = "0xE3ED34", VA = "0xE3ED34", Slot = "16")]
	public virtual void backhandplus()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xE3EF58", Offset = "0xE3EF58", VA = "0xE3EF58", Slot = "17")]
	public virtual void backhandless()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xE3F180", Offset = "0xE3F180", VA = "0xE3F180", Slot = "18")]
	public virtual void serveplus()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xE3F3A4", Offset = "0xE3F3A4", VA = "0xE3F3A4", Slot = "19")]
	public virtual void serveless()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xE3F5CC", Offset = "0xE3F5CC", VA = "0xE3F5CC", Slot = "20")]
	public virtual void volleyplus()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xE3F7F0", Offset = "0xE3F7F0", VA = "0xE3F7F0", Slot = "21")]
	public virtual void volleyless()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xE3FA18", Offset = "0xE3FA18", VA = "0xE3FA18", Slot = "22")]
	public virtual void speedplus()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xE3FC3C", Offset = "0xE3FC3C", VA = "0xE3FC3C", Slot = "23")]
	public virtual void speedless()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xE3FE64", Offset = "0xE3FE64", VA = "0xE3FE64", Slot = "24")]
	public virtual void staminaplus()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xE40088", Offset = "0xE40088", VA = "0xE40088", Slot = "25")]
	public virtual void staminaless()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xE402B0", Offset = "0xE402B0", VA = "0xE402B0", Slot = "26")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xE4039C", Offset = "0xE4039C", VA = "0xE4039C", Slot = "27")]
	[IteratorStateMachine(typeof(<select>d__46))]
	public virtual IEnumerator select()
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xE40438", Offset = "0xE40438", VA = "0xE40438")]
	public Continue2player()
	{
	}
}
[Serializable]
[Token(Token = "0x2000151")]
public class ContinueMulti : MonoBehaviour
{
	[Token(Token = "0x600071D")]
	[Address(RVA = "0xE40914", Offset = "0xE40914", VA = "0xE40914", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xE40D54", Offset = "0xE40D54", VA = "0xE40D54")]
	public ContinueMulti()
	{
	}
}
[Serializable]
[Token(Token = "0x2000152")]
public class Controllercheck : MonoBehaviour
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvascontroller;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject canvaskeyboard;

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xE40D5C", Offset = "0xE40D5C", VA = "0xE40D5C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xE40DC8", Offset = "0xE40DC8", VA = "0xE40DC8")]
	public Controllercheck()
	{
	}
}
[Serializable]
[Token(Token = "0x2000153")]
public class Controllercheck1 : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvascontroller;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject canvaskeyboard;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject joypad;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject keyboard;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject htcpad;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xE40DD0", Offset = "0xE40DD0", VA = "0xE40DD0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xE40E44", Offset = "0xE40E44", VA = "0xE40E44")]
	public Controllercheck1()
	{
	}
}
[Token(Token = "0x2000154")]
public class Controllercheck3 : MonoBehaviour
{
	[Token(Token = "0x6000723")]
	[Address(RVA = "0xE40E4C", Offset = "0xE40E4C", VA = "0xE40E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xE40E94", Offset = "0xE40E94", VA = "0xE40E94")]
	public Controllercheck3()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class Controlsloading : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Controlsloading <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0xE41244", Offset = "0xE41244", VA = "0xE41244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xE4128C", Offset = "0xE4128C", VA = "0xE4128C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xE40F10", Offset = "0xE40F10", VA = "0xE40F10")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xE40F40", Offset = "0xE40F40", VA = "0xE40F40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xE40F44", Offset = "0xE40F44", VA = "0xE40F44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xE4124C", Offset = "0xE4124C", VA = "0xE4124C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xE40E9C", Offset = "0xE40E9C", VA = "0xE40E9C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xE40F38", Offset = "0xE40F38", VA = "0xE40F38")]
	public Controlsloading()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class Crowdoff : MonoBehaviour
{
	[Token(Token = "0x2000158")]
	[CompilerGenerated]
	private sealed class <off>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crowdoff <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xE414A0", Offset = "0xE414A0", VA = "0xE414A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xE414E8", Offset = "0xE414E8", VA = "0xE414E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xE41394", Offset = "0xE41394", VA = "0xE41394")]
		[DebuggerHidden]
		public <off>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xE413C4", Offset = "0xE413C4", VA = "0xE413C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xE413C8", Offset = "0xE413C8", VA = "0xE413C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xE414A8", Offset = "0xE414A8", VA = "0xE414A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource crowd;

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xE41294", Offset = "0xE41294", VA = "0xE41294", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xE41320", Offset = "0xE41320", VA = "0xE41320", Slot = "5")]
	[IteratorStateMachine(typeof(<off>d__2))]
	public virtual IEnumerator off()
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xE413BC", Offset = "0xE413BC", VA = "0xE413BC")]
	public Crowdoff()
	{
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public class Crowdoff0 : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <off>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crowdoff0 <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xE416F8", Offset = "0xE416F8", VA = "0xE416F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xE41740", Offset = "0xE41740", VA = "0xE41740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xE415EC", Offset = "0xE415EC", VA = "0xE415EC")]
		[DebuggerHidden]
		public <off>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xE4161C", Offset = "0xE4161C", VA = "0xE4161C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xE41620", Offset = "0xE41620", VA = "0xE41620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xE41700", Offset = "0xE41700", VA = "0xE41700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource crowd;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xE414F0", Offset = "0xE414F0", VA = "0xE414F0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xE41578", Offset = "0xE41578", VA = "0xE41578", Slot = "5")]
	[IteratorStateMachine(typeof(<off>d__2))]
	public virtual IEnumerator off()
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xE41614", Offset = "0xE41614", VA = "0xE41614")]
	public Crowdoff0()
	{
	}
}
[Token(Token = "0x200015B")]
public class DebugBug : MonoBehaviour
{
	[Token(Token = "0x600073F")]
	[Address(RVA = "0xE41748", Offset = "0xE41748", VA = "0xE41748")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xE417C8", Offset = "0xE417C8", VA = "0xE417C8")]
	public DebugBug()
	{
	}
}
[Serializable]
[Token(Token = "0x200015C")]
public class Dentro0 : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	[CompilerGenerated]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro0 <>4__this;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xE42C34", Offset = "0xE42C34", VA = "0xE42C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xE42C7C", Offset = "0xE42C7C", VA = "0xE42C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xE41844", Offset = "0xE41844", VA = "0xE41844")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xE42AEC", Offset = "0xE42AEC", VA = "0xE42AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xE42AF0", Offset = "0xE42AF0", VA = "0xE42AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xE42C3C", Offset = "0xE42C3C", VA = "0xE42C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <secondserve>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro0 <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000751")]
			[Address(RVA = "0xE43348", Offset = "0xE43348", VA = "0xE43348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000753")]
			[Address(RVA = "0xE43390", Offset = "0xE43390", VA = "0xE43390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xE42A20", Offset = "0xE42A20", VA = "0xE42A20")]
		[DebuggerHidden]
		public <secondserve>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xE42C84", Offset = "0xE42C84", VA = "0xE42C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xE42C88", Offset = "0xE42C88", VA = "0xE42C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xE43350", Offset = "0xE43350", VA = "0xE43350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015F")]
	[CompilerGenerated]
	private sealed class <loadlevel>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro0 <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xE43560", Offset = "0xE43560", VA = "0xE43560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0xE435A8", Offset = "0xE435A8", VA = "0xE435A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xE42ABC", Offset = "0xE42ABC", VA = "0xE42ABC")]
		[DebuggerHidden]
		public <loadlevel>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xE43398", Offset = "0xE43398", VA = "0xE43398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xE4339C", Offset = "0xE4339C", VA = "0xE4339C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xE43568", Offset = "0xE43568", VA = "0xE43568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fault;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scoreboard;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject player0;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player1;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelpause;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ballstop;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AsyncOperation op;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int rimbalzo;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int counter0;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xE417D0", Offset = "0xE417D0", VA = "0xE417D0", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__9))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xE4186C", Offset = "0xE4186C", VA = "0xE4186C", Slot = "5")]
	public virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xE41904", Offset = "0xE41904", VA = "0xE41904", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xE4248C", Offset = "0xE4248C", VA = "0xE4248C", Slot = "7")]
	public virtual void stop()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xE429AC", Offset = "0xE429AC", VA = "0xE429AC", Slot = "8")]
	[IteratorStateMachine(typeof(<secondserve>d__13))]
	public virtual IEnumerator secondserve()
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xE42A48", Offset = "0xE42A48", VA = "0xE42A48", Slot = "9")]
	[IteratorStateMachine(typeof(<loadlevel>d__14))]
	public virtual IEnumerator loadlevel()
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xE42AE4", Offset = "0xE42AE4", VA = "0xE42AE4")]
	public Dentro0()
	{
	}
}
[Serializable]
[Token(Token = "0x2000160")]
public class Dentro1 : MonoBehaviour
{
	[Token(Token = "0x2000161")]
	[CompilerGenerated]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro1 <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0xBD0CAC", Offset = "0xBD0CAC", VA = "0xBD0CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xBD0CF4", Offset = "0xBD0CF4", VA = "0xBD0CF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xBD09F0", Offset = "0xBD09F0", VA = "0xBD09F0")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xBD0A18", Offset = "0xBD0A18", VA = "0xBD0A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xBD0A1C", Offset = "0xBD0A1C", VA = "0xBD0A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xBD0CB4", Offset = "0xBD0CB4", VA = "0xBD0CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000162")]
	[CompilerGenerated]
	private sealed class <OnCollisionStay>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dentro1 <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xBD16FC", Offset = "0xBD16FC", VA = "0xBD16FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xBD1744", Offset = "0xBD1744", VA = "0xBD1744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xBD0CFC", Offset = "0xBD0CFC", VA = "0xBD0CFC")]
		[DebuggerHidden]
		public <OnCollisionStay>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xBD0D24", Offset = "0xBD0D24", VA = "0xBD0D24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xBD0D28", Offset = "0xBD0D28", VA = "0xBD0D28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xBD1704", Offset = "0xBD1704", VA = "0xBD1704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fault;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scoreboard;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject player0;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player1;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelpause;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject target;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject loadscene;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ball;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ingresso;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool uscita;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int dentro0rimbalzo;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int dentro1rimbalzo;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool fuoririmbalzo;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int counter0;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int counter1;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool entrata;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool ballstop;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int ballpreviewbounce;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 impattopreview;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 rotationpreview;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float tflight;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rangez;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float rangex;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xE435B0", Offset = "0xE435B0", VA = "0xE435B0", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__23))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xE43624", Offset = "0xE43624", VA = "0xE43624", Slot = "5")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xE43F54", Offset = "0xE43F54", VA = "0xE43F54", Slot = "6")]
	public virtual void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xE4466C", Offset = "0xE4466C", VA = "0xE4466C", Slot = "7")]
	[IteratorStateMachine(typeof(<OnCollisionStay>d__26))]
	public virtual IEnumerator OnCollisionStay(Collision other)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xE446FC", Offset = "0xE446FC", VA = "0xE446FC", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xE4ABA8", Offset = "0xE4ABA8", VA = "0xE4ABA8", Slot = "9")]
	public virtual void secondserve1()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xE4B28C", Offset = "0xE4B28C", VA = "0xE4B28C", Slot = "10")]
	public virtual void secondserve0()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xE4B970", Offset = "0xE4B970", VA = "0xE4B970", Slot = "11")]
	public virtual void netprima()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xE4C078", Offset = "0xE4C078", VA = "0xE4C078", Slot = "12")]
	public virtual void netseconda()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xE4C77C", Offset = "0xE4C77C", VA = "0xE4C77C", Slot = "13")]
	public virtual void netprimaop()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xE4CE84", Offset = "0xE4CE84", VA = "0xE4CE84", Slot = "14")]
	public virtual void netsecondaop()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xE4D588", Offset = "0xE4D588", VA = "0xE4D588", Slot = "15")]
	public virtual void stop()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xE4D854", Offset = "0xE4D854", VA = "0xE4D854", Slot = "16")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xE4DA2C", Offset = "0xE4DA2C", VA = "0xE4DA2C")]
	public Dentro1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public class Dentro1vr : MonoBehaviour
{
	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro1vr <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xBDB394", Offset = "0xBDB394", VA = "0xBDB394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xBDB3DC", Offset = "0xBDB3DC", VA = "0xBDB3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xBD17C0", Offset = "0xBD17C0", VA = "0xBD17C0")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xBDB134", Offset = "0xBDB134", VA = "0xBDB134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xBDB138", Offset = "0xBDB138", VA = "0xBDB138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xBDB39C", Offset = "0xBDB39C", VA = "0xBDB39C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <OnCollisionStay>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xBDC048", Offset = "0xBDC048", VA = "0xBDC048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xBDC090", Offset = "0xBDC090", VA = "0xBDC090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xBD247C", Offset = "0xBD247C", VA = "0xBD247C")]
		[DebuggerHidden]
		public <OnCollisionStay>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xBDB3E4", Offset = "0xBDB3E4", VA = "0xBDB3E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xBDB3E8", Offset = "0xBDB3E8", VA = "0xBDB3E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xBDC050", Offset = "0xBDC050", VA = "0xBDC050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] fault;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject scoreboard;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject player0;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject player1;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] panelpause;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject loadscene;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject ball;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ingresso;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool uscita;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int dentro0rimbalzo;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int dentro1rimbalzo;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool fuoririmbalzo;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int counter0;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int counter1;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool entrata;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool ballstop;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xBD174C", Offset = "0xBD174C", VA = "0xBD174C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__16))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xBD17E8", Offset = "0xBD17E8", VA = "0xBD17E8", Slot = "5")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xBD236C", Offset = "0xBD236C", VA = "0xBD236C", Slot = "6")]
	public virtual void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xBD2408", Offset = "0xBD2408", VA = "0xBD2408", Slot = "7")]
	[IteratorStateMachine(typeof(<OnCollisionStay>d__19))]
	public virtual IEnumerator OnCollisionStay(Collision other)
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xBD24A4", Offset = "0xBD24A4", VA = "0xBD24A4", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xBD89A8", Offset = "0xBD89A8", VA = "0xBD89A8", Slot = "9")]
	public virtual void secondserve1()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xBD8FB0", Offset = "0xBD8FB0", VA = "0xBD8FB0", Slot = "10")]
	public virtual void secondserve0()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xBD95B8", Offset = "0xBD95B8", VA = "0xBD95B8", Slot = "11")]
	public virtual void netprima()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xBD9BD4", Offset = "0xBD9BD4", VA = "0xBD9BD4", Slot = "12")]
	public virtual void netseconda()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xBDA1EC", Offset = "0xBDA1EC", VA = "0xBDA1EC", Slot = "13")]
	public virtual void netprimaop()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xBDA808", Offset = "0xBDA808", VA = "0xBDA808", Slot = "14")]
	public virtual void netsecondaop()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xBDAE20", Offset = "0xBDAE20", VA = "0xBDAE20", Slot = "15")]
	public virtual void stop()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xBDAFDC", Offset = "0xBDAFDC", VA = "0xBDAFDC", Slot = "16")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xBDB12C", Offset = "0xBDB12C", VA = "0xBDB12C")]
	public Dentro1vr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000166")]
public class Dentro2 : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[CompilerGenerated]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro2 <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xBE6A94", Offset = "0xBE6A94", VA = "0xBE6A94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xBE6ADC", Offset = "0xBE6ADC", VA = "0xBE6ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xBDC10C", Offset = "0xBDC10C", VA = "0xBDC10C")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xBE67D0", Offset = "0xBE67D0", VA = "0xBE67D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xBE67D4", Offset = "0xBE67D4", VA = "0xBE67D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBE6A9C", Offset = "0xBE6A9C", VA = "0xBE6A9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000168")]
	[CompilerGenerated]
	private sealed class <OnCollisionStay>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dentro2 <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xBE74BC", Offset = "0xBE74BC", VA = "0xBE74BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xBE7504", Offset = "0xBE7504", VA = "0xBE7504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xBDD1C8", Offset = "0xBDD1C8", VA = "0xBDD1C8")]
		[DebuggerHidden]
		public <OnCollisionStay>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xBE6AE4", Offset = "0xBE6AE4", VA = "0xBE6AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xBE6AE8", Offset = "0xBE6AE8", VA = "0xBE6AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xBE74C4", Offset = "0xBE74C4", VA = "0xBE74C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fault;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scoreboard;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject player0;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player1;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelpause;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject target;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject target2;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject loadscene;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ball;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ingresso;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool uscita;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int dentro0rimbalzo;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int dentro1rimbalzo;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool fuoririmbalzo;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int counter0;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int counter1;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool entrata;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool ballstop;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int ballpreviewbounce;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 impattopreview;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 rotationpreview;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tflight;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rangez;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float rangex;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xBDC098", Offset = "0xBDC098", VA = "0xBDC098", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__24))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xBDC134", Offset = "0xBDC134", VA = "0xBDC134", Slot = "5")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xBDCA64", Offset = "0xBDCA64", VA = "0xBDCA64", Slot = "6")]
	public virtual void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xBDD138", Offset = "0xBDD138", VA = "0xBDD138", Slot = "7")]
	[IteratorStateMachine(typeof(<OnCollisionStay>d__27))]
	public virtual IEnumerator OnCollisionStay(Collision other)
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xBDD1F0", Offset = "0xBDD1F0", VA = "0xBDD1F0", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xBE3570", Offset = "0xBE3570", VA = "0xBE3570", Slot = "9")]
	public virtual void secondserve1()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xBE3CB4", Offset = "0xBE3CB4", VA = "0xBE3CB4", Slot = "10")]
	public virtual void secondserve0()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xBE43F8", Offset = "0xBE43F8", VA = "0xBE43F8", Slot = "11")]
	public virtual void netprima()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xBE4B60", Offset = "0xBE4B60", VA = "0xBE4B60", Slot = "12")]
	public virtual void netseconda()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xBE52C4", Offset = "0xBE52C4", VA = "0xBE52C4", Slot = "13")]
	public virtual void netprimaop()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBE5A2C", Offset = "0xBE5A2C", VA = "0xBE5A2C", Slot = "14")]
	public virtual void netsecondaop()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBE6190", Offset = "0xBE6190", VA = "0xBE6190", Slot = "15")]
	public virtual void stop()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBE6590", Offset = "0xBE6590", VA = "0xBE6590", Slot = "16")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBE67C8", Offset = "0xBE67C8", VA = "0xBE67C8")]
	public Dentro2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000169")]
public class Dentro2vr : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	[CompilerGenerated]
	private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dentro2vr <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0xBF10B4", Offset = "0xBF10B4", VA = "0xBF10B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0xBF10FC", Offset = "0xBF10FC", VA = "0xBF10FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xBF0DA0", Offset = "0xBF0DA0", VA = "0xBF0DA0")]
		[DebuggerHidden]
		public <Start>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xBF0DC8", Offset = "0xBF0DC8", VA = "0xBF0DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xBF0DCC", Offset = "0xBF0DCC", VA = "0xBF0DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xBF10BC", Offset = "0xBF10BC", VA = "0xBF10BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <OnCollisionStay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collision other;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0xBF1F3C", Offset = "0xBF1F3C", VA = "0xBF1F3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0xBF1F84", Offset = "0xBF1F84", VA = "0xBF1F84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xBF1104", Offset = "0xBF1104", VA = "0xBF1104")]
		[DebuggerHidden]
		public <OnCollisionStay>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xBF112C", Offset = "0xBF112C", VA = "0xBF112C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xBF1130", Offset = "0xBF1130", VA = "0xBF1130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xBF1F44", Offset = "0xBF1F44", VA = "0xBF1F44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] fault;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject scoreboard;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] panelpause;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject loadscene;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject ball;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject player1;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObscuredBool ingresso;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static ObscuredBool uscita;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ObscuredInt dentro0rimbalzo;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ObscuredInt dentro1rimbalzo;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ObscuredBool fuoririmbalzo;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static ObscuredInt counter0;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static ObscuredInt counter1;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static ObscuredBool entrata;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static ObscuredBool ballstop;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 impattopreview;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 rotationpreview;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float tflight;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rangez;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rangex;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ObscuredInt rankedmatch;

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xBE750C", Offset = "0xBE750C", VA = "0xBE750C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__21))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xBE7580", Offset = "0xBE7580", VA = "0xBE7580", Slot = "5")]
	public virtual void Azzerarimbalzi()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xBE7668", Offset = "0xBE7668", VA = "0xBE7668", Slot = "6")]
	public virtual void Rimbalzo()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xBE777C", Offset = "0xBE777C", VA = "0xBE777C", Slot = "7")]
	public virtual void ResetNetcollider()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xBE77F4", Offset = "0xBE77F4", VA = "0xBE77F4", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xBE7894", Offset = "0xBE7894", VA = "0xBE7894", Slot = "9")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xBE85D8", Offset = "0xBE85D8", VA = "0xBE85D8", Slot = "10")]
	public virtual void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xBE86E8", Offset = "0xBE86E8", VA = "0xBE86E8", Slot = "11")]
	[IteratorStateMachine(typeof(<OnCollisionStay>d__28))]
	public virtual IEnumerator OnCollisionStay(Collision other)
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xBE875C", Offset = "0xBE875C", VA = "0xBE875C", Slot = "12")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xBEE884", Offset = "0xBEE884", VA = "0xBEE884", Slot = "13")]
	public virtual void secondserve1()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xBEEDE0", Offset = "0xBEEDE0", VA = "0xBEEDE0", Slot = "14")]
	public virtual void secondserve0()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xBEF33C", Offset = "0xBEF33C", VA = "0xBEF33C", Slot = "15")]
	public virtual void netprima()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xBEF8AC", Offset = "0xBEF8AC", VA = "0xBEF8AC", Slot = "16")]
	public virtual void netseconda()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xBEFE18", Offset = "0xBEFE18", VA = "0xBEFE18", Slot = "17")]
	public virtual void netprimaop()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xBF0388", Offset = "0xBF0388", VA = "0xBF0388", Slot = "18")]
	public virtual void netsecondaop()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xBF08F4", Offset = "0xBF08F4", VA = "0xBF08F4", Slot = "19")]
	public virtual void stop()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBF0C48", Offset = "0xBF0C48", VA = "0xBF0C48", Slot = "20")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xBF0D98", Offset = "0xBF0D98", VA = "0xBF0D98")]
	public Dentro2vr()
	{
	}
}
[Serializable]
[Token(Token = "0x200016C")]
public class DentroS : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DentroS <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xBF2600", Offset = "0xBF2600", VA = "0xBF2600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xBF2648", Offset = "0xBF2648", VA = "0xBF2648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xBF2000", Offset = "0xBF2000", VA = "0xBF2000")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xBF2550", Offset = "0xBF2550", VA = "0xBF2550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xBF2554", Offset = "0xBF2554", VA = "0xBF2554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xBF2608", Offset = "0xBF2608", VA = "0xBF2608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ballstop;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int rimbalzo;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool entrata;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xBF1F8C", Offset = "0xBF1F8C", VA = "0xBF1F8C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xBF2028", Offset = "0xBF2028", VA = "0xBF2028", Slot = "5")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xBF2548", Offset = "0xBF2548", VA = "0xBF2548")]
	public DentroS()
	{
	}
}
[Serializable]
[Token(Token = "0x200016E")]
public class DentroTraining : MonoBehaviour
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int rimbalzo;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject torretta;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject male00;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int side;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Scene scene;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xBF2650", Offset = "0xBF2650", VA = "0xBF2650", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xBF281C", Offset = "0xBF281C", VA = "0xBF281C", Slot = "5")]
	public virtual void Start2()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xBF2A8C", Offset = "0xBF2A8C", VA = "0xBF2A8C")]
	static DentroTraining()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xBF2AD8", Offset = "0xBF2AD8", VA = "0xBF2AD8")]
	public DentroTraining()
	{
	}
}
[Serializable]
[Token(Token = "0x200016F")]
public class DentroTraining1 : MonoBehaviour
{
	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xBF2AE0", Offset = "0xBF2AE0", VA = "0xBF2AE0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xBF2D00", Offset = "0xBF2D00", VA = "0xBF2D00")]
	public DentroTraining1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000170")]
public class DentroTraining1vr : MonoBehaviour
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ground;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ground1;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material erba;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material erba1;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material terra;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material terra1;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material hardb;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material hardb1;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material hardg;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material hardg1;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xBF2D08", Offset = "0xBF2D08", VA = "0xBF2D08", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xBF2EB8", Offset = "0xBF2EB8", VA = "0xBF2EB8")]
	public DentroTraining1vr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class Destroyopponent : MonoBehaviour
{
	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Male01;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xBF2EC0", Offset = "0xBF2EC0", VA = "0xBF2EC0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xBF36C8", Offset = "0xBF36C8", VA = "0xBF36C8")]
	public Destroyopponent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000172")]
public class Destroyplayer : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Male00;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xBF36D0", Offset = "0xBF36D0", VA = "0xBF36D0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xBF3FD0", Offset = "0xBF3FD0", VA = "0xBF3FD0")]
	public Destroyplayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000173")]
public class Difficulty : MonoBehaviour
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int hand;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int mode;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int modemulti;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int run;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int runmulti;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject racketforehandright;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject racketforehandleft;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject racketbackhandright;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject racketbackhandleft;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject righthandtext;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lefthandtext;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject arcadetext;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject simulationtext;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject teleporttext;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject runinplacetext;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject autoruntext;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject manualrun1text;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject manualrun2text;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xBF3FD8", Offset = "0xBF3FD8", VA = "0xBF3FD8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xBF4B94", Offset = "0xBF4B94", VA = "0xBF4B94", Slot = "5")]
	public virtual void Handchange()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xBF4E90", Offset = "0xBF4E90", VA = "0xBF4E90", Slot = "6")]
	public virtual void Modechange()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBF4F80", Offset = "0xBF4F80", VA = "0xBF4F80", Slot = "7")]
	public virtual void ModechangeMulti()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBF5070", Offset = "0xBF5070", VA = "0xBF5070", Slot = "8")]
	public virtual void Runchange()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBF537C", Offset = "0xBF537C", VA = "0xBF537C", Slot = "9")]
	public virtual void RunchangeMulti()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBF569C", Offset = "0xBF569C", VA = "0xBF569C")]
	public Difficulty()
	{
	}
}
[Serializable]
[Token(Token = "0x2000174")]
public class Difficultysettings : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int difficulty;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject textbeginner;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject textadvanced;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBF56A4", Offset = "0xBF56A4", VA = "0xBF56A4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBF5818", Offset = "0xBF5818", VA = "0xBF5818", Slot = "5")]
	public virtual void Difficultychange()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xBF595C", Offset = "0xBF595C", VA = "0xBF595C")]
	static Difficultysettings()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBF59A4", Offset = "0xBF59A4", VA = "0xBF59A4")]
	public Difficultysettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public class Disablegui : MonoBehaviour
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xBF59AC", Offset = "0xBF59AC", VA = "0xBF59AC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBF5AB8", Offset = "0xBF5AB8", VA = "0xBF5AB8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xBF5B6C", Offset = "0xBF5B6C", VA = "0xBF5B6C")]
	public Disablegui()
	{
	}
}
[Token(Token = "0x2000176")]
public class DisableHand : MonoBehaviour
{
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Handsx;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Handdx;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int handactive;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject on;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject off;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputDevice rightHandDevice;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputDevice leftHandDevice;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool trackingState;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xBF5B74", Offset = "0xBF5B74", VA = "0xBF5B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBF5D00", Offset = "0xBF5D00", VA = "0xBF5D00")]
	public void DisableLeftHand()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBF5E50", Offset = "0xBF5E50", VA = "0xBF5E50")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBF5FCC", Offset = "0xBF5FCC", VA = "0xBF5FCC")]
	public DisableHand()
	{
	}
}
[Serializable]
[Token(Token = "0x2000177")]
public class Dontgothroughthings : MonoBehaviour
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform racket;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion rotationDifference;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 rotationDifferenceInDegree;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 rotationAxis;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float angleInDegree;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float distanceracket;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBF5FD4", Offset = "0xBF5FD4", VA = "0xBF5FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xBF60B8", Offset = "0xBF60B8", VA = "0xBF60B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xBF6378", Offset = "0xBF6378", VA = "0xBF6378")]
	public Dontgothroughthings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000178")]
public class Dontgothroughthings1 : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform racket;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform racketbody;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform controller;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform mano;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform manodx;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform manosx;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform controllerdx;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform controllersx;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion rotationDifference;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 rotationDifferenceInDegree;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 rotationAxis;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float angleInDegree;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float distanceracket;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xBF6380", Offset = "0xBF6380", VA = "0xBF6380", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xBF6788", Offset = "0xBF6788", VA = "0xBF6788")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBF6A48", Offset = "0xBF6A48", VA = "0xBF6A48")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xBF6A88", Offset = "0xBF6A88", VA = "0xBF6A88")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xBF6AC8", Offset = "0xBF6AC8", VA = "0xBF6AC8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xBF6B00", Offset = "0xBF6B00", VA = "0xBF6B00")]
	public Dontgothroughthings1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000179")]
public class Effetto1 : MonoBehaviour
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float effetto;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer trailrenderline;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xBF6B08", Offset = "0xBF6B08", VA = "0xBF6B08", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xBF6BE4", Offset = "0xBF6BE4", VA = "0xBF6BE4", Slot = "5")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xBF6CA4", Offset = "0xBF6CA4", VA = "0xBF6CA4")]
	static Effetto1()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xBF6CF4", Offset = "0xBF6CF4", VA = "0xBF6CF4")]
	public Effetto1()
	{
	}
}
[Serializable]
[Token(Token = "0x200017A")]
public class Effetto2 : MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float effetto;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xBF6CFC", Offset = "0xBF6CFC", VA = "0xBF6CFC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xBF6D5C", Offset = "0xBF6D5C", VA = "0xBF6D5C")]
	static Effetto2()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xBF6DAC", Offset = "0xBF6DAC", VA = "0xBF6DAC")]
	public Effetto2()
	{
	}
}
[Serializable]
[Token(Token = "0x200017B")]
public class Effettoballpreview : MonoBehaviour
{
	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 direction;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxbouncerate;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float bouncerate;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float dragvel;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float dragrot;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 velprojectx;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 velprojecty;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 finalvel;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 normalvec;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 friction;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 spinforce;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xBF6DB4", Offset = "0xBF6DB4", VA = "0xBF6DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xBF6E28", Offset = "0xBF6E28", VA = "0xBF6E28")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBF83F4", Offset = "0xBF83F4", VA = "0xBF83F4")]
	public Effettoballpreview()
	{
	}
}
[Serializable]
[Token(Token = "0x200017C")]
public class Exhibition : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Exhibition <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0xBF8768", Offset = "0xBF8768", VA = "0xBF8768", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xBF87B0", Offset = "0xBF87B0", VA = "0xBF87B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xBF8470", Offset = "0xBF8470", VA = "0xBF8470")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xBF84A0", Offset = "0xBF84A0", VA = "0xBF84A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xBF84A4", Offset = "0xBF84A4", VA = "0xBF84A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xBF8770", Offset = "0xBF8770", VA = "0xBF8770", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool exhibition;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool click;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBF83FC", Offset = "0xBF83FC", VA = "0xBF83FC", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBF8498", Offset = "0xBF8498", VA = "0xBF8498")]
	public Exhibition()
	{
	}
}
[Token(Token = "0x200017E")]
public class Exit : MonoBehaviour
{
	[Token(Token = "0x6000808")]
	[Address(RVA = "0xBF87B8", Offset = "0xBF87B8", VA = "0xBF87B8")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xBF87C0", Offset = "0xBF87C0", VA = "0xBF87C0")]
	public Exit()
	{
	}
}
[Token(Token = "0x200017F")]
public class FadingVR : MonoBehaviour
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int fadevar;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int finematch;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xBF87C8", Offset = "0xBF87C8", VA = "0xBF87C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xBF8818", Offset = "0xBF8818", VA = "0xBF8818")]
	private void Start()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xBF889C", Offset = "0xBF889C", VA = "0xBF889C")]
	public void fadeblack()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xBF88E8", Offset = "0xBF88E8", VA = "0xBF88E8")]
	public void fadeclear()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xBF8934", Offset = "0xBF8934", VA = "0xBF8934")]
	public FadingVR()
	{
	}
}
[Serializable]
[Token(Token = "0x2000180")]
public class fbconnect : MonoBehaviour
{
	[Token(Token = "0x600080F")]
	[Address(RVA = "0xBF893C", Offset = "0xBF893C", VA = "0xBF893C", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xBF8980", Offset = "0xBF8980", VA = "0xBF8980")]
	public fbconnect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000181")]
public class Female : MonoBehaviour
{
	[Token(Token = "0x6000811")]
	[Address(RVA = "0xBF8988", Offset = "0xBF8988", VA = "0xBF8988", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xBF89E4", Offset = "0xBF89E4", VA = "0xBF89E4")]
	public Female()
	{
	}
}
[Serializable]
[Token(Token = "0x2000182")]
public class Fermapulsanti : MonoBehaviour
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fermapulsanti;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xBF89EC", Offset = "0xBF89EC", VA = "0xBF89EC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xBF8A34", Offset = "0xBF8A34", VA = "0xBF8A34")]
	public Fermapulsanti()
	{
	}
}
[Serializable]
[Token(Token = "0x2000183")]
public class Final : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Final <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0xBF9C6C", Offset = "0xBF9C6C", VA = "0xBF9C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0xBF9CB4", Offset = "0xBF9CB4", VA = "0xBF9CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xBF8AB0", Offset = "0xBF8AB0", VA = "0xBF8AB0")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xBF8AE0", Offset = "0xBF8AE0", VA = "0xBF8AE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xBF8AE4", Offset = "0xBF8AE4", VA = "0xBF8AE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xBF9C74", Offset = "0xBF9C74", VA = "0xBF9C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int positionrank;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xBF8A3C", Offset = "0xBF8A3C", VA = "0xBF8A3C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xBF8AD8", Offset = "0xBF8AD8", VA = "0xBF8AD8")]
	public Final()
	{
	}
}
[Serializable]
[Token(Token = "0x2000185")]
public class FirstPersonControl : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool enumeratedJoysticks;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float forwardSpeed;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float backwardSpeed;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float sidestepSpeed;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform thisTransform;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController character;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cameraVelocity;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedrun;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float stamina;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject male00;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool stoppa;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mag;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xBF9CBC", Offset = "0xBF9CBC", VA = "0xBF9CBC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xBF9D14", Offset = "0xBF9D14", VA = "0xBF9D14", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xBF9F9C", Offset = "0xBF9F9C", VA = "0xBF9F9C", Slot = "6")]
	public virtual void OnEndGame()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xBF9FA8", Offset = "0xBF9FA8", VA = "0xBF9FA8", Slot = "7")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xBFA384", Offset = "0xBFA384", VA = "0xBFA384")]
	static FirstPersonControl()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xBFA3DC", Offset = "0xBFA3DC", VA = "0xBFA3DC")]
	public FirstPersonControl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000186")]
public class FirstPersonControl1 : MonoBehaviour
{
	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool enumeratedJoysticks;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float forwardSpeed;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float backwardSpeed;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float sidestepSpeed;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform thisTransform;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController character;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cameraVelocity;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedrun;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float stamina;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject male01;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool stoppa;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mag;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xBFA3E4", Offset = "0xBFA3E4", VA = "0xBFA3E4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xBFA43C", Offset = "0xBFA43C", VA = "0xBFA43C", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xBFA6C4", Offset = "0xBFA6C4", VA = "0xBFA6C4", Slot = "6")]
	public virtual void OnEndGame()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xBFA6D0", Offset = "0xBFA6D0", VA = "0xBFA6D0", Slot = "7")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xBFAAAC", Offset = "0xBFAAAC", VA = "0xBFAAAC")]
	static FirstPersonControl1()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xBFAB04", Offset = "0xBFAB04", VA = "0xBFAB04")]
	public FirstPersonControl1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000187")]
public class Flare : MonoBehaviour
{
	[Token(Token = "0x6000829")]
	[Address(RVA = "0xBFAB0C", Offset = "0xBFAB0C", VA = "0xBFAB0C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xBFABFC", Offset = "0xBFABFC", VA = "0xBFABFC")]
	public Flare()
	{
	}
}
[Serializable]
[Token(Token = "0x2000188")]
public class Flareremove : MonoBehaviour
{
	[Token(Token = "0x600082B")]
	[Address(RVA = "0xBFAC04", Offset = "0xBFAC04", VA = "0xBFAC04", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xBFAD40", Offset = "0xBFAD40", VA = "0xBFAD40")]
	public Flareremove()
	{
	}
}
[Token(Token = "0x2000189")]
public class Followball : MonoBehaviour
{
	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject racket;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shoot;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xBFAD48", Offset = "0xBFAD48", VA = "0xBFAD48")]
	private void Start()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xBFADC0", Offset = "0xBFADC0", VA = "0xBFADC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xBFB550", Offset = "0xBFB550", VA = "0xBFB550")]
	public Followball()
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public class Frecciameno : MonoBehaviour
{
	[Token(Token = "0x6000830")]
	[Address(RVA = "0xBFB558", Offset = "0xBFB558", VA = "0xBFB558", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xBFB5DC", Offset = "0xBFB5DC", VA = "0xBFB5DC")]
	public Frecciameno()
	{
	}
}
[Serializable]
[Token(Token = "0x200018B")]
public class Frecciapiu : MonoBehaviour
{
	[Token(Token = "0x6000832")]
	[Address(RVA = "0xBFB5E4", Offset = "0xBFB5E4", VA = "0xBFB5E4", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xBFB668", Offset = "0xBFB668", VA = "0xBFB668")]
	public Frecciapiu()
	{
	}
}
[Serializable]
[Token(Token = "0x200018C")]
public class Fuori : MonoBehaviour
{
	[Token(Token = "0x6000834")]
	[Address(RVA = "0xBFB670", Offset = "0xBFB670", VA = "0xBFB670")]
	public Fuori()
	{
	}
}
[Serializable]
[Token(Token = "0x200018D")]
public class Generatecrowd : MonoBehaviour
{
	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xBFB678", Offset = "0xBFB678", VA = "0xBFB678", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xBFB958", Offset = "0xBFB958", VA = "0xBFB958")]
	public Generatecrowd()
	{
	}
}
[Serializable]
[Token(Token = "0x200018E")]
public class Gestorescene : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xBFB960", Offset = "0xBFB960", VA = "0xBFB960", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xBFB9BC", Offset = "0xBFB9BC", VA = "0xBFB9BC", Slot = "5")]
	public virtual void Carica()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xBFBAD0", Offset = "0xBFBAD0", VA = "0xBFBAD0")]
	static Gestorescene()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xBFBB1C", Offset = "0xBFBB1C", VA = "0xBFBB1C")]
	public Gestorescene()
	{
	}
}
[Serializable]
[Token(Token = "0x200018F")]
public class Gestorescene1 : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	[CompilerGenerated]
	private sealed class <StartNewScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene1 <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0xBFFC3C", Offset = "0xBFFC3C", VA = "0xBFFC3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0xBFFC84", Offset = "0xBFFC84", VA = "0xBFFC84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xBFBDE0", Offset = "0xBFBDE0", VA = "0xBFBDE0")]
		[DebuggerHidden]
		public <StartNewScene>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xBFBE5C", Offset = "0xBFBE5C", VA = "0xBFBE5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xBFBE60", Offset = "0xBFBE60", VA = "0xBFBE60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xBFFC44", Offset = "0xBFFC44", VA = "0xBFFC44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player0;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player1;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject male00;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject male01;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fault;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fader;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stadium;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool cambiatocampo;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int lato;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int moltiplicatorepunti;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Scene scene;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xBFBB24", Offset = "0xBFBB24", VA = "0xBFBB24", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xBFBD6C", Offset = "0xBFBD6C", VA = "0xBFBD6C", Slot = "5")]
	[IteratorStateMachine(typeof(<StartNewScene>d__14))]
	public virtual IEnumerator StartNewScene()
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xBFBE08", Offset = "0xBFBE08", VA = "0xBFBE08")]
	static Gestorescene1()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xBFBE54", Offset = "0xBFBE54", VA = "0xBFBE54")]
	public Gestorescene1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000191")]
public class Gestorescene1vr : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	[CompilerGenerated]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene1vr <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0xC0028C", Offset = "0xC0028C", VA = "0xC0028C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xC002D4", Offset = "0xC002D4", VA = "0xC002D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xBFFD00", Offset = "0xBFFD00", VA = "0xBFFD00")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xBFFF54", Offset = "0xBFFF54", VA = "0xBFFF54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xBFFF58", Offset = "0xBFFF58", VA = "0xBFFF58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xC00294", Offset = "0xC00294", VA = "0xC00294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000193")]
	[CompilerGenerated]
	private sealed class <StartNewSceneInstant>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene1vr <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0xC02CB0", Offset = "0xC02CB0", VA = "0xC02CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xC02CF8", Offset = "0xC02CF8", VA = "0xC02CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xBFFE3C", Offset = "0xBFFE3C", VA = "0xBFFE3C")]
		[DebuggerHidden]
		public <StartNewSceneInstant>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xC002DC", Offset = "0xC002DC", VA = "0xC002DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xC002E0", Offset = "0xC002E0", VA = "0xC002E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xC02CB8", Offset = "0xC02CB8", VA = "0xC02CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private sealed class <StartNewScene>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene1vr <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0xC05744", Offset = "0xC05744", VA = "0xC05744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xC0578C", Offset = "0xC0578C", VA = "0xC0578C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xC02D00", Offset = "0xC02D00", VA = "0xC02D00")]
		[DebuggerHidden]
		public <StartNewScene>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xC02D28", Offset = "0xC02D28", VA = "0xC02D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xC02D2C", Offset = "0xC02D2C", VA = "0xC02D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xC0574C", Offset = "0xC0574C", VA = "0xC0574C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene1vr <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xC081A0", Offset = "0xC081A0", VA = "0xC081A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xC081E8", Offset = "0xC081E8", VA = "0xC081E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xC05794", Offset = "0xC05794", VA = "0xC05794")]
		[DebuggerHidden]
		public <LoadScene>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xC057BC", Offset = "0xC057BC", VA = "0xC057BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xC057C0", Offset = "0xC057C0", VA = "0xC057C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xC081A8", Offset = "0xC081A8", VA = "0xC081A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player0;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player1;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject male01;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] fault;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fader;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ball;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stadium;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool cambiatocampo;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int lato;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int moltiplicatorepunti;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Scene scene;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xBFFC8C", Offset = "0xBFFC8C", VA = "0xBFFC8C", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__13))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xBFFD28", Offset = "0xBFFD28", VA = "0xBFFD28", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xBFFDC8", Offset = "0xBFFDC8", VA = "0xBFFDC8", Slot = "6")]
	[IteratorStateMachine(typeof(<StartNewSceneInstant>d__15))]
	public virtual IEnumerator StartNewSceneInstant()
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xBFFE64", Offset = "0xBFFE64", VA = "0xBFFE64", Slot = "7")]
	[IteratorStateMachine(typeof(<StartNewScene>d__16))]
	public virtual IEnumerator StartNewScene()
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xBFFED8", Offset = "0xBFFED8", VA = "0xBFFED8", Slot = "8")]
	[IteratorStateMachine(typeof(<LoadScene>d__17))]
	public virtual IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xBFFF4C", Offset = "0xBFFF4C", VA = "0xBFFF4C")]
	public Gestorescene1vr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000196")]
public class Gestorescene21pl : MonoBehaviour
{
	[Token(Token = "0x2000197")]
	[CompilerGenerated]
	private sealed class <StartNewScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gestorescene21pl <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xC0A32C", Offset = "0xC0A32C", VA = "0xC0A32C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xC0A374", Offset = "0xC0A374", VA = "0xC0A374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xC0838C", Offset = "0xC0838C", VA = "0xC0838C")]
		[DebuggerHidden]
		public <StartNewScene>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xC08408", Offset = "0xC08408", VA = "0xC08408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xC0840C", Offset = "0xC0840C", VA = "0xC0840C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xC0A334", Offset = "0xC0A334", VA = "0xC0A334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player0;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject player1;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject male00;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject male01;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fault;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fader;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC081F0", Offset = "0xC081F0", VA = "0xC081F0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC08318", Offset = "0xC08318", VA = "0xC08318", Slot = "5")]
	[IteratorStateMachine(typeof(<StartNewScene>d__9))]
	public virtual IEnumerator StartNewScene()
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC083B4", Offset = "0xC083B4", VA = "0xC083B4")]
	static Gestorescene21pl()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC08400", Offset = "0xC08400", VA = "0xC08400")]
	public Gestorescene21pl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000198")]
public class Gestorescene2pl : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC0A37C", Offset = "0xC0A37C", VA = "0xC0A37C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC0A3D8", Offset = "0xC0A3D8", VA = "0xC0A3D8", Slot = "5")]
	public virtual void Carica()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC0A3DC", Offset = "0xC0A3DC", VA = "0xC0A3DC")]
	static Gestorescene2pl()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC0A428", Offset = "0xC0A428", VA = "0xC0A428")]
	public Gestorescene2pl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class Gestorescenevr : MonoBehaviour
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scenacaricata;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int scena;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene scene;

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC0A430", Offset = "0xC0A430", VA = "0xC0A430", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC0A594", Offset = "0xC0A594", VA = "0xC0A594", Slot = "5")]
	public virtual void Carica()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC0A6A8", Offset = "0xC0A6A8", VA = "0xC0A6A8", Slot = "6")]
	public virtual void Caricainstant()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xC0A7BC", Offset = "0xC0A7BC", VA = "0xC0A7BC", Slot = "7")]
	public virtual void Load()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xC0A8D0", Offset = "0xC0A8D0", VA = "0xC0A8D0")]
	public Gestorescenevr()
	{
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class Go : MonoBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xC0A8D8", Offset = "0xC0A8D8", VA = "0xC0A8D8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xC0A9E4", Offset = "0xC0A9E4", VA = "0xC0A9E4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xC0AAFC", Offset = "0xC0AAFC", VA = "0xC0AAFC", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC0B8B0", Offset = "0xC0B8B0", VA = "0xC0B8B0")]
	public Go()
	{
	}
}
[Serializable]
[Token(Token = "0x200019B")]
public class Grass : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grass <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0xC0BD30", Offset = "0xC0BD30", VA = "0xC0BD30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0xC0BD78", Offset = "0xC0BD78", VA = "0xC0BD78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xC0B92C", Offset = "0xC0B92C", VA = "0xC0B92C")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xC0B95C", Offset = "0xC0B95C", VA = "0xC0B95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xC0B960", Offset = "0xC0B960", VA = "0xC0B960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xC0BD38", Offset = "0xC0BD38", VA = "0xC0BD38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool grass;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EMTransition;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC0B8B8", Offset = "0xC0B8B8", VA = "0xC0B8B8", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC0B954", Offset = "0xC0B954", VA = "0xC0B954")]
	public Grass()
	{
	}
}
[Token(Token = "0x200019D")]
public class Handpointer : MonoBehaviour
{
	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointerdx;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pointersx;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Handsx;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Handdx;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice rightHandDevice;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputDevice leftHandDevice;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool trackingState;

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC0BD80", Offset = "0xC0BD80", VA = "0xC0BD80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC0BDB0", Offset = "0xC0BDB0", VA = "0xC0BDB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC0C4E0", Offset = "0xC0C4E0", VA = "0xC0C4E0")]
	public void Haptic()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC0C560", Offset = "0xC0C560", VA = "0xC0C560")]
	public void StopHaptic()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC0C5E0", Offset = "0xC0C5E0", VA = "0xC0C5E0")]
	public Handpointer()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class Hardb : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hardb <>4__this;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0xC0CA60", Offset = "0xC0CA60", VA = "0xC0CA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xC0CAA8", Offset = "0xC0CAA8", VA = "0xC0CAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xC0C65C", Offset = "0xC0C65C", VA = "0xC0C65C")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xC0C68C", Offset = "0xC0C68C", VA = "0xC0C68C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xC0C690", Offset = "0xC0C690", VA = "0xC0C690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xC0CA68", Offset = "0xC0CA68", VA = "0xC0CA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hardb;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EMTransition;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xC0C5E8", Offset = "0xC0C5E8", VA = "0xC0C5E8", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xC0C684", Offset = "0xC0C684", VA = "0xC0C684")]
	public Hardb()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public class Hardg : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	[CompilerGenerated]
	private sealed class <OnClick>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hardg <>4__this;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xC0CF28", Offset = "0xC0CF28", VA = "0xC0CF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0xC0CF70", Offset = "0xC0CF70", VA = "0xC0CF70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xC0CB24", Offset = "0xC0CB24", VA = "0xC0CB24")]
		[DebuggerHidden]
		public <OnClick>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xC0CB54", Offset = "0xC0CB54", VA = "0xC0CB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xC0CB58", Offset = "0xC0CB58", VA = "0xC0CB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xC0CF30", Offset = "0xC0CF30", VA = "0xC0CF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hardg;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EMTransition;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xC0CAB0", Offset = "0xC0CAB0", VA = "0xC0CAB0", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__3))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xC0CB4C", Offset = "0xC0CB4C", VA = "0xC0CB4C")]
	public Hardg()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A2")]
public class Helpopt : MonoBehaviour
{
	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <OnClick>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Helpopt <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xC0D2A0", Offset = "0xC0D2A0", VA = "0xC0D2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xC0D2E8", Offset = "0xC0D2E8", VA = "0xC0D2E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xC0CFEC", Offset = "0xC0CFEC", VA = "0xC0CFEC")]
		[DebuggerHidden]
		public <OnClick>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xC0D01C", Offset = "0xC0D01C", VA = "0xC0D01C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xC0D020", Offset = "0xC0D020", VA = "0xC0D020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xC0D2A8", Offset = "0xC0D2A8", VA = "0xC0D2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool click;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xC0CF78", Offset = "0xC0CF78", VA = "0xC0CF78", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__2))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xC0D014", Offset = "0xC0D014", VA = "0xC0D014")]
	public Helpopt()
	{
	}
}
[Token(Token = "0x20001A4")]
[RequireComponent(typeof(Animator))]
public class IKControl0 : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator animator;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ikActive;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightHandObj;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookObj;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xC0D2F0", Offset = "0xC0D2F0", VA = "0xC0D2F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xC0D348", Offset = "0xC0D348", VA = "0xC0D348")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xC0D514", Offset = "0xC0D514", VA = "0xC0D514")]
	public IKControl0()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A5")]
public class Info : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <OnClick>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0xC0D6D4", Offset = "0xC0D6D4", VA = "0xC0D6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xC0D71C", Offset = "0xC0D71C", VA = "0xC0D71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xC0D57C", Offset = "0xC0D57C", VA = "0xC0D57C")]
		[DebuggerHidden]
		public <OnClick>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xC0D5AC", Offset = "0xC0D5AC", VA = "0xC0D5AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xC0D5B0", Offset = "0xC0D5B0", VA = "0xC0D5B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xC0D6DC", Offset = "0xC0D6DC", VA = "0xC0D6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xC0D51C", Offset = "0xC0D51C", VA = "0xC0D51C", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__0))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xC0D5A4", Offset = "0xC0D5A4", VA = "0xC0D5A4")]
	public Info()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A7")]
public class Infoscript : MonoBehaviour
{
	[Token(Token = "0x20001A8")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Infoscript <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xC0D904", Offset = "0xC0D904", VA = "0xC0D904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xC0D94C", Offset = "0xC0D94C", VA = "0xC0D94C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xC0D798", Offset = "0xC0D798", VA = "0xC0D798")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xC0D7C8", Offset = "0xC0D7C8", VA = "0xC0D7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xC0D7CC", Offset = "0xC0D7CC", VA = "0xC0D7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xC0D90C", Offset = "0xC0D90C", VA = "0xC0D90C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EMTransition;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xC0D724", Offset = "0xC0D724", VA = "0xC0D724", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xC0D7C0", Offset = "0xC0D7C0", VA = "0xC0D7C0")]
	public Infoscript()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A9")]
public class InizializefadeVR : MonoBehaviour
{
	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xC0DA88", Offset = "0xC0DA88", VA = "0xC0DA88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xC0DAD0", Offset = "0xC0DAD0", VA = "0xC0DAD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xC0D9B4", Offset = "0xC0D9B4", VA = "0xC0D9B4")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xC0D9E4", Offset = "0xC0D9E4", VA = "0xC0D9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xC0D9E8", Offset = "0xC0D9E8", VA = "0xC0D9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xC0DA90", Offset = "0xC0DA90", VA = "0xC0DA90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CameraRig;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xC0D954", Offset = "0xC0D954", VA = "0xC0D954", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xC0D9DC", Offset = "0xC0D9DC", VA = "0xC0D9DC")]
	public InizializefadeVR()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AB")]
public class Instaopponent : MonoBehaviour
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC0DAD8", Offset = "0xC0DAD8", VA = "0xC0DAD8", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC0E1E4", Offset = "0xC0E1E4", VA = "0xC0E1E4")]
	public Instaopponent()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AC")]
public class Instaopponenttraining : MonoBehaviour
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xC0E1EC", Offset = "0xC0E1EC", VA = "0xC0E1EC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xC0E524", Offset = "0xC0E524", VA = "0xC0E524")]
	public Instaopponenttraining()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AD")]
public class Instaplayer : MonoBehaviour
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] elementbody;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] elementpelle;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] elementracchetta;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int heads;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int outfit;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int racket;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xC0E52C", Offset = "0xC0E52C", VA = "0xC0E52C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xC0FF28", Offset = "0xC0FF28", VA = "0xC0FF28")]
	public Instaplayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AE")]
public class Instaplayer1 : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] elementbody;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] elementpelle;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] elementracchetta;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int heads;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int outfit;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int racket;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xC0FF30", Offset = "0xC0FF30", VA = "0xC0FF30", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xC1192C", Offset = "0xC1192C", VA = "0xC1192C")]
	public Instaplayer1()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AF")]
public class Instaplayer2 : MonoBehaviour
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] elementbody;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] elementpelle;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] elementracchetta;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int heads;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int outfit;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int racket;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xC11934", Offset = "0xC11934", VA = "0xC11934", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xC13338", Offset = "0xC13338", VA = "0xC13338")]
	public Instaplayer2()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
public class Instaplayervr : MonoBehaviour
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] elementbody;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] elementpelle;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] elementracchetta;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int heads;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int outfit;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int racket;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform controllersx;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform controllerdx;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform controllertracker;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trackermocksx;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform trackermockdx;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject body1;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject pelle1;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject capmedio1;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject occhi1;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject fascia1;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject faccia1;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject polsini1;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject testa11;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject testa21;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject testa31;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject testa41;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject testa51;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject testa61;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject testa71;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject testa81;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject testa91;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject testa101;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject racchetta;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject racchettasx;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject racchettadx;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject femshirt1;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject femskirt1;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject femboots1;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject femskin1;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject femhair1o1;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject femhair2o1;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject femhair3o1;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject femhair4o1;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject femhair5o1;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject femhair6o1;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject femhair7o1;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject femhair8o1;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject femhair9o1;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject femhair10o1;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject femhair11o1;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject femhead1o1;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject femhead2o1;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject femhead3o1;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject femhead4o1;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject femhead5o1;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject femhead6o1;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject femhead7o1;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject femhead8o1;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject femhead9o1;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject femhead10o1;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject femhead11o1;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xC13340", Offset = "0xC13340", VA = "0xC13340", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xC16988", Offset = "0xC16988", VA = "0xC16988")]
	public Instaplayervr()
	{
	}
}
[Token(Token = "0x20001B1")]
public class Instaracket : MonoBehaviour
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] elementracchetta;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int racket;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xC16990", Offset = "0xC16990", VA = "0xC16990")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xC17550", Offset = "0xC17550", VA = "0xC17550")]
	public Instaracket()
	{
	}
}
[Token(Token = "0x20001B2")]
public class Internetcheck : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button multi1;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button multi2;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button autocreate;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ping;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject panellogin;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject panelselection;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject panelcreateroom;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject panelroomlist;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject panelinsideroom;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text bannedtext;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gobool;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xC17558", Offset = "0xC17558", VA = "0xC17558")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xC175A4", Offset = "0xC175A4", VA = "0xC175A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xC179F0", Offset = "0xC179F0", VA = "0xC179F0")]
	public Internetcheck()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B3")]
public class Joystick0pos : MonoBehaviour
{
	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xC179F8", Offset = "0xC179F8", VA = "0xC179F8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xC17AB8", Offset = "0xC17AB8", VA = "0xC17AB8")]
	public Joystick0pos()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B4")]
public class Joystick0ppos : MonoBehaviour
{
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xC17AC0", Offset = "0xC17AC0", VA = "0xC17AC0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xC17B80", Offset = "0xC17B80", VA = "0xC17B80")]
	public Joystick0ppos()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B5")]
public class Joystick1 : MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool pressed1;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool pressedtop;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool pressedslice;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool pressedlob;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float thePower;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float thePowerserve;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool increasing;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool increasingserve;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool incrementa;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shooting;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bar;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject barraserve;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool stop;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xC17B88", Offset = "0xC17B88", VA = "0xC17B88", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xC17BEC", Offset = "0xC17BEC", VA = "0xC17BEC", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xC17D38", Offset = "0xC17D38", VA = "0xC17D38", Slot = "6")]
	public virtual void Pressedtop()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xC17EFC", Offset = "0xC17EFC", VA = "0xC17EFC", Slot = "7")]
	public virtual void Pressedslice()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xC180C0", Offset = "0xC180C0", VA = "0xC180C0", Slot = "8")]
	public virtual void Pressedlob()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xC18288", Offset = "0xC18288", VA = "0xC18288", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xC18D9C", Offset = "0xC18D9C", VA = "0xC18D9C")]
	static Joystick1()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xC18DE8", Offset = "0xC18DE8", VA = "0xC18DE8")]
	public Joystick1()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B6")]
public class Joystick2 : MonoBehaviour
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool pressed2;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool pressedtop;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool pressedslice;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool pressedlob;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float thePower;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float thePowerserve;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool increasing;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool increasingserve;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool incrementa;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shooting;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bar;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject barraserve;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool stop;

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xC18DF0", Offset = "0xC18DF0", VA = "0xC18DF0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xC18E54", Offset = "0xC18E54", VA = "0xC18E54", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xC18FA0", Offset = "0xC18FA0", VA = "0xC18FA0", Slot = "6")]
	public virtual void Pressedtop()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xC19164", Offset = "0xC19164", VA = "0xC19164", Slot = "7")]
	public virtual void Pressedslice()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xC19328", Offset = "0xC19328", VA = "0xC19328", Slot = "8")]
	public virtual void Pressedlob()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xC194F0", Offset = "0xC194F0", VA = "0xC194F0", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xC1A004", Offset = "0xC1A004", VA = "0xC1A004")]
	static Joystick2()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xC1A050", Offset = "0xC1A050", VA = "0xC1A050")]
	public Joystick2()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B7")]
public class Judgehead : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lookSmoother;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lookWeight;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xC1A058", Offset = "0xC1A058", VA = "0xC1A058", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xC1A198", Offset = "0xC1A198", VA = "0xC1A198", Slot = "5")]
	public virtual void OnAnimatorIK()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xC1A40C", Offset = "0xC1A40C", VA = "0xC1A40C")]
	public Judgehead()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B8")]
public class Keyboard : MonoBehaviour
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchScreenKeyboard keyboard0;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tempString;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string playerName0;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xC1A42C", Offset = "0xC1A42C", VA = "0xC1A42C", Slot = "4")]
	public virtual void OnGUI()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xC1A58C", Offset = "0xC1A58C", VA = "0xC1A58C")]
	public Keyboard()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xC1A5E4", Offset = "0xC1A5E4", VA = "0xC1A5E4")]
	static Keyboard()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B9")]
public class Labeldifficulty : MonoBehaviour
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int difficulty;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xC1A650", Offset = "0xC1A650", VA = "0xC1A650", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xC1AA90", Offset = "0xC1AA90", VA = "0xC1AA90", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xC1AEE0", Offset = "0xC1AEE0", VA = "0xC1AEE0")]
	static Labeldifficulty()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xC1AF2C", Offset = "0xC1AF2C", VA = "0xC1AF2C")]
	public Labeldifficulty()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BA")]
public class Labelgames : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int games;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject labelgames;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xC1AF34", Offset = "0xC1AF34", VA = "0xC1AF34", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC1B1DC", Offset = "0xC1B1DC", VA = "0xC1B1DC", Slot = "5")]
	public virtual void OnClickMulti()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC1B484", Offset = "0xC1B484", VA = "0xC1B484", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC1B7D0", Offset = "0xC1B7D0", VA = "0xC1B7D0")]
	public Labelgames()
	{
	}
}
[Token(Token = "0x20001BB")]
public class Labelpublic : MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int publicroom;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text publictext;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text privatetext;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC1B7D8", Offset = "0xC1B7D8", VA = "0xC1B7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xC1B8C4", Offset = "0xC1B8C4", VA = "0xC1B8C4")]
	public void PrivatePublicRoom()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC1B9A0", Offset = "0xC1B9A0", VA = "0xC1B9A0")]
	public Labelpublic()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Labelranked : MonoBehaviour
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int ranked;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject labelranked;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text traininglabel;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text rankedlabel;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text unrankedlabel;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xC1B9A8", Offset = "0xC1B9A8", VA = "0xC1B9A8", Slot = "4")]
	public virtual void OnClickMulti()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xC1BB4C", Offset = "0xC1BB4C", VA = "0xC1BB4C")]
	public void Start()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xC1BD30", Offset = "0xC1BD30", VA = "0xC1BD30")]
	public Labelranked()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BD")]
public class Labelsets : MonoBehaviour
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int sets;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject labelsets;

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xC1BD38", Offset = "0xC1BD38", VA = "0xC1BD38", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xC1BFDC", Offset = "0xC1BFDC", VA = "0xC1BFDC", Slot = "5")]
	public virtual void OnClickMulti()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xC1C280", Offset = "0xC1C280", VA = "0xC1C280", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xC1C5CC", Offset = "0xC1C5CC", VA = "0xC1C5CC")]
	public Labelsets()
	{
	}
}
[Token(Token = "0x20001BE")]
public class Labelstadiumsonline : MonoBehaviour
{
	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int tour;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text tournamenttext;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xC1C5D4", Offset = "0xC1C5D4", VA = "0xC1C5D4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xC1CADC", Offset = "0xC1CADC", VA = "0xC1CADC", Slot = "5")]
	public virtual void Prev()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC1CB38", Offset = "0xC1CB38", VA = "0xC1CB38", Slot = "6")]
	public virtual void Next()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xC1C6A4", Offset = "0xC1C6A4", VA = "0xC1C6A4")]
	private void ChangeText()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xC1CB9C", Offset = "0xC1CB9C", VA = "0xC1CB9C")]
	public Labelstadiumsonline()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BF")]
public class Lastresult : MonoBehaviour
{
	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xC1CBA4", Offset = "0xC1CBA4", VA = "0xC1CBA4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xC216C0", Offset = "0xC216C0", VA = "0xC216C0")]
	public Lastresult()
	{
	}
}
[Token(Token = "0x20001C0")]
public class LevelChanger : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneNumb;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xC216C8", Offset = "0xC216C8", VA = "0xC216C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xC216CC", Offset = "0xC216CC", VA = "0xC216CC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xC21734", Offset = "0xC21734", VA = "0xC21734")]
	public LevelChanger()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
public class Likebuy : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	[CompilerGenerated]
	private sealed class <Purchase>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0xC219B4", Offset = "0xC219B4", VA = "0xC219B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xC219FC", Offset = "0xC219FC", VA = "0xC219FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xC218B0", Offset = "0xC218B0", VA = "0xC218B0")]
		[DebuggerHidden]
		public <Purchase>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC218E0", Offset = "0xC218E0", VA = "0xC218E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC218E4", Offset = "0xC218E4", VA = "0xC218E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xC219BC", Offset = "0xC219BC", VA = "0xC219BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC2173C", Offset = "0xC2173C", VA = "0xC2173C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xC217D8", Offset = "0xC217D8", VA = "0xC217D8", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xC21850", Offset = "0xC21850", VA = "0xC21850", Slot = "6")]
	[IteratorStateMachine(typeof(<Purchase>d__2))]
	public virtual IEnumerator Purchase()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC218D8", Offset = "0xC218D8", VA = "0xC218D8")]
	public Likebuy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C3")]
public class Likelink : MonoBehaviour
{
	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC21A04", Offset = "0xC21A04", VA = "0xC21A04", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xC21ABC", Offset = "0xC21ABC", VA = "0xC21ABC")]
	public Likelink()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C4")]
public class Likerate : MonoBehaviour
{
	[Token(Token = "0x600090D")]
	[Address(RVA = "0xC21AC4", Offset = "0xC21AC4", VA = "0xC21AC4", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xC21B7C", Offset = "0xC21B7C", VA = "0xC21B7C")]
	public Likerate()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C5")]
public class Liketweet : MonoBehaviour
{
	[Token(Token = "0x600090F")]
	[Address(RVA = "0xC21B84", Offset = "0xC21B84", VA = "0xC21B84", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xC21C3C", Offset = "0xC21C3C", VA = "0xC21C3C")]
	public Liketweet()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Listspectators : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text lista;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle mutetoggle;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] spectators;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xC21C44", Offset = "0xC21C44", VA = "0xC21C44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xC21CAC", Offset = "0xC21CAC", VA = "0xC21CAC")]
	public void CallList()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xC2208C", Offset = "0xC2208C", VA = "0xC2208C")]
	public void ClearList()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xC220E8", Offset = "0xC220E8", VA = "0xC220E8")]
	public void Muteall()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xC22208", Offset = "0xC22208", VA = "0xC22208")]
	public Listspectators()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C7")]
public class Loading1pl : MonoBehaviour
{
	[Token(Token = "0x6000916")]
	[Address(RVA = "0xC22210", Offset = "0xC22210", VA = "0xC22210", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xC22254", Offset = "0xC22254", VA = "0xC22254")]
	public Loading1pl()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Loadonlineleaderboard : MonoBehaviour
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> Scores;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int youronlinescore;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string yourname;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text scoretext;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xC2225C", Offset = "0xC2225C", VA = "0xC2225C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xC222B4", Offset = "0xC222B4", VA = "0xC222B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC22438", Offset = "0xC22438", VA = "0xC22438")]
	private void LoginPlayFab()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC2261C", Offset = "0xC2261C", VA = "0xC2261C")]
	private void OnSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC22804", Offset = "0xC22804", VA = "0xC22804")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC22974", Offset = "0xC22974", VA = "0xC22974")]
	private void OnDisplayNameUpdate(UpdateUserTitleDisplayNameResult result)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC226C0", Offset = "0xC226C0", VA = "0xC226C0")]
	public void SendLeaderboard(string name, int score)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC2297C", Offset = "0xC2297C", VA = "0xC2297C")]
	public void DisplayStatistics(string name, int score)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC22BD4", Offset = "0xC22BD4", VA = "0xC22BD4")]
	public void GetLeaderboard()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC22D6C", Offset = "0xC22D6C", VA = "0xC22D6C")]
	private void OnLeaderboardGet(GetLeaderboardResult result)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC233E0", Offset = "0xC233E0", VA = "0xC233E0")]
	private void OnLeaderboardUpdate(UpdatePlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC233E4", Offset = "0xC233E4", VA = "0xC233E4")]
	public Loadonlineleaderboard()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C9")]
public class Look : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int damping;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject target;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC2346C", Offset = "0xC2346C", VA = "0xC2346C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC235EC", Offset = "0xC235EC", VA = "0xC235EC", Slot = "5")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC2379C", Offset = "0xC2379C", VA = "0xC2379C")]
	static Look()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC237E8", Offset = "0xC237E8", VA = "0xC237E8")]
	public Look()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CA")]
public class Look1 : MonoBehaviour
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int damping;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lookPos;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC237F0", Offset = "0xC237F0", VA = "0xC237F0", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC23AF0", Offset = "0xC23AF0", VA = "0xC23AF0")]
	static Look1()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC23B3C", Offset = "0xC23B3C", VA = "0xC23B3C")]
	public Look1()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class Lookatanim : MonoBehaviour
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject target;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lookSmoother;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lookWeight;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject maincamera;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC23B44", Offset = "0xC23B44", VA = "0xC23B44", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xC23C9C", Offset = "0xC23C9C", VA = "0xC23C9C", Slot = "5")]
	public virtual void OnAnimatorIK()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC23DCC", Offset = "0xC23DCC", VA = "0xC23DCC")]
	public Lookatanim()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class Lookatanimop : MonoBehaviour
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject target;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lookSmoother;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lookWeight;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject maincamera;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC23DEC", Offset = "0xC23DEC", VA = "0xC23DEC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC23F80", Offset = "0xC23F80", VA = "0xC23F80", Slot = "5")]
	public virtual void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC240B0", Offset = "0xC240B0", VA = "0xC240B0")]
	public Lookatanimop()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CD")]
public class Lookcrowd : MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int damping;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool smooth;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject target;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC240D0", Offset = "0xC240D0", VA = "0xC240D0", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC2426C", Offset = "0xC2426C", VA = "0xC2426C", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC24394", Offset = "0xC24394", VA = "0xC24394")]
	public Lookcrowd()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC243B4", Offset = "0xC243B4", VA = "0xC243B4")]
	static Lookcrowd()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CE")]
public class Lookm : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int damping;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC24400", Offset = "0xC24400", VA = "0xC24400", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC24630", Offset = "0xC24630", VA = "0xC24630")]
	static Lookm()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC2467C", Offset = "0xC2467C", VA = "0xC2467C")]
	public Lookm()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CF")]
public class Lookmulti : MonoBehaviour
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float damping;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool smooth;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion rotation;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC24684", Offset = "0xC24684", VA = "0xC24684", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC248B4", Offset = "0xC248B4", VA = "0xC248B4", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC24970", Offset = "0xC24970", VA = "0xC24970")]
	public Lookmulti()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC24990", Offset = "0xC24990", VA = "0xC24990")]
	static Lookmulti()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D0")]
public class Lookpalla : MonoBehaviour
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float damping;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool smooth;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC249DC", Offset = "0xC249DC", VA = "0xC249DC", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xC24B70", Offset = "0xC24B70", VA = "0xC24B70", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC24C60", Offset = "0xC24C60", VA = "0xC24C60")]
	public Lookpalla()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC24C80", Offset = "0xC24C80", VA = "0xC24C80")]
	static Lookpalla()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D1")]
public class Maglia : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int random;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool stoprandom;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC24CCC", Offset = "0xC24CCC", VA = "0xC24CCC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC25258", Offset = "0xC25258", VA = "0xC25258")]
	public Maglia()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D2")]
public class Magliaopponent : MonoBehaviour
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool stoprandom;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int randomcharacter;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int randommaglia;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int randomracchetta;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] racchetteopponent;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC25260", Offset = "0xC25260", VA = "0xC25260", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC258F4", Offset = "0xC258F4", VA = "0xC258F4", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xC27108", Offset = "0xC27108", VA = "0xC27108")]
	public Magliaopponent()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D3")]
public class Magliascelta : MonoBehaviour
{
	[Token(Token = "0x6000945")]
	[Address(RVA = "0xC27110", Offset = "0xC27110", VA = "0xC27110", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xC28D34", Offset = "0xC28D34", VA = "0xC28D34")]
	public Magliascelta()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D4")]
public class Magliasceltafem : MonoBehaviour
{
	[Token(Token = "0x6000947")]
	[Address(RVA = "0xC28D3C", Offset = "0xC28D3C", VA = "0xC28D3C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xC29B7C", Offset = "0xC29B7C", VA = "0xC29B7C")]
	public Magliasceltafem()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MagnusPhysics : MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 force;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 forcedrag;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xC29B84", Offset = "0xC29B84", VA = "0xC29B84")]
	private void Start()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xC29BDC", Offset = "0xC29BDC", VA = "0xC29BDC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xC2A37C", Offset = "0xC2A37C", VA = "0xC2A37C")]
	public MagnusPhysics()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D6")]
public class Male : MonoBehaviour
{
	[Token(Token = "0x600094C")]
	[Address(RVA = "0xC2A384", Offset = "0xC2A384", VA = "0xC2A384", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xC2A3E0", Offset = "0xC2A3E0", VA = "0xC2A3E0")]
	public Male()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D7")]
public class malefemaleanim : MonoBehaviour
{
	[Token(Token = "0x600094E")]
	[Address(RVA = "0xC2A3E8", Offset = "0xC2A3E8", VA = "0xC2A3E8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xC2A498", Offset = "0xC2A498", VA = "0xC2A498")]
	public malefemaleanim()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D8")]
public class Matchstats : MonoBehaviour
{
	[Token(Token = "0x20001D9")]
	[CompilerGenerated]
	private sealed class <OnClick>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matchstats <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0xC2C940", Offset = "0xC2C940", VA = "0xC2C940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0xC2C988", Offset = "0xC2C988", VA = "0xC2C988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xC2A638", Offset = "0xC2A638", VA = "0xC2A638")]
		[DebuggerHidden]
		public <OnClick>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xC2A668", Offset = "0xC2A668", VA = "0xC2A668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xC2A66C", Offset = "0xC2A66C", VA = "0xC2A66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xC2C948", Offset = "0xC2C948", VA = "0xC2C948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject commento;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Scene scene;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xC2A4A0", Offset = "0xC2A4A0", VA = "0xC2A4A0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xC2A528", Offset = "0xC2A528", VA = "0xC2A528", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xC2A5C4", Offset = "0xC2A5C4", VA = "0xC2A5C4", Slot = "6")]
	[IteratorStateMachine(typeof(<OnClick>d__4))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xC2A660", Offset = "0xC2A660", VA = "0xC2A660")]
	public Matchstats()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DA")]
public class Materiale : MonoBehaviour
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial grassmaterial;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicMaterial claymaterial;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhysicMaterial hardbmaterial;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhysicMaterial hardgmaterial;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xC2C990", Offset = "0xC2C990", VA = "0xC2C990", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xC2D4FC", Offset = "0xC2D4FC", VA = "0xC2D4FC")]
	public Materiale()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DB")]
public class MaterialeMulti : MonoBehaviour
{
	[Token(Token = "0x600095C")]
	[Address(RVA = "0xC2D504", Offset = "0xC2D504", VA = "0xC2D504", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xC2D514", Offset = "0xC2D514", VA = "0xC2D514")]
	public MaterialeMulti()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DC")]
public class MaterialeTraining : MonoBehaviour
{
	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial grassmaterial;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicMaterial claymaterial;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhysicMaterial hardbmaterial;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhysicMaterial hardgmaterial;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xC2D51C", Offset = "0xC2D51C", VA = "0xC2D51C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xC2D67C", Offset = "0xC2D67C", VA = "0xC2D67C")]
	public MaterialeTraining()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DD")]
public class Menu1 : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <OnClick>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0xC2F650", Offset = "0xC2F650", VA = "0xC2F650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0xC2F698", Offset = "0xC2F698", VA = "0xC2F698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xC2D8B8", Offset = "0xC2D8B8", VA = "0xC2D8B8")]
		[DebuggerHidden]
		public <OnClick>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xC2E688", Offset = "0xC2E688", VA = "0xC2E688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xC2E68C", Offset = "0xC2E68C", VA = "0xC2E68C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xC2F658", Offset = "0xC2F658", VA = "0xC2F658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[CompilerGenerated]
	private sealed class <Trainingserve>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xC2F978", Offset = "0xC2F978", VA = "0xC2F978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xC2F9C0", Offset = "0xC2F9C0", VA = "0xC2F9C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xC2D954", Offset = "0xC2D954", VA = "0xC2D954")]
		[DebuggerHidden]
		public <Trainingserve>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xC2F6A0", Offset = "0xC2F6A0", VA = "0xC2F6A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xC2F6A4", Offset = "0xC2F6A4", VA = "0xC2F6A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xC2F980", Offset = "0xC2F980", VA = "0xC2F980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[CompilerGenerated]
	private sealed class <Traininggroundstroke>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xC2FCC4", Offset = "0xC2FCC4", VA = "0xC2FCC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xC2FD0C", Offset = "0xC2FD0C", VA = "0xC2FD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xC2D9F0", Offset = "0xC2D9F0", VA = "0xC2D9F0")]
		[DebuggerHidden]
		public <Traininggroundstroke>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xC2F9C8", Offset = "0xC2F9C8", VA = "0xC2F9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xC2F9CC", Offset = "0xC2F9CC", VA = "0xC2F9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC2FCCC", Offset = "0xC2FCCC", VA = "0xC2FCCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[CompilerGenerated]
	private sealed class <Trainingforehand>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0xC30010", Offset = "0xC30010", VA = "0xC30010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xC30058", Offset = "0xC30058", VA = "0xC30058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xC2DA8C", Offset = "0xC2DA8C", VA = "0xC2DA8C")]
		[DebuggerHidden]
		public <Trainingforehand>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC2FD14", Offset = "0xC2FD14", VA = "0xC2FD14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xC2FD18", Offset = "0xC2FD18", VA = "0xC2FD18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC30018", Offset = "0xC30018", VA = "0xC30018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[CompilerGenerated]
	private sealed class <Trainingbackhand>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xC3035C", Offset = "0xC3035C", VA = "0xC3035C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xC303A4", Offset = "0xC303A4", VA = "0xC303A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xC2DB28", Offset = "0xC2DB28", VA = "0xC2DB28")]
		[DebuggerHidden]
		public <Trainingbackhand>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xC30060", Offset = "0xC30060", VA = "0xC30060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xC30064", Offset = "0xC30064", VA = "0xC30064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xC30364", Offset = "0xC30364", VA = "0xC30364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[CompilerGenerated]
	private sealed class <Trainingmatch>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xC30ABC", Offset = "0xC30ABC", VA = "0xC30ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xC30B04", Offset = "0xC30B04", VA = "0xC30B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xC2DBC4", Offset = "0xC2DBC4", VA = "0xC2DBC4")]
		[DebuggerHidden]
		public <Trainingmatch>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xC303AC", Offset = "0xC303AC", VA = "0xC303AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xC303B0", Offset = "0xC303B0", VA = "0xC303B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xC30AC4", Offset = "0xC30AC4", VA = "0xC30AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E4")]
	[CompilerGenerated]
	private sealed class <Players2>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu1 <>4__this;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xC30DB8", Offset = "0xC30DB8", VA = "0xC30DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xC30E00", Offset = "0xC30E00", VA = "0xC30E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xC2DC60", Offset = "0xC2DC60", VA = "0xC2DC60")]
		[DebuggerHidden]
		public <Players2>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xC30B0C", Offset = "0xC30B0C", VA = "0xC30B0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xC30B10", Offset = "0xC30B10", VA = "0xC30B10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xC30DC0", Offset = "0xC30DC0", VA = "0xC30DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool single;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wait;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool click;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AsyncOperation op;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CameraRig;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int trainingcourt;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite train1;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite train2;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite train3;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite train4;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool canload;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int handnum;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string namemulti;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int testamulti;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int bodymulti;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int racchettamulti;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float forehandmulti;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float backhandmulti;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float servemulti;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float volleymulti;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float speedmulti;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float staminamulti;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int setmulti;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int gamemulti;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int modemulti;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int runmulti;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float xgrippos;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float ygrippos;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float zgrippos;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float xgriprot;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float ygriprot;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float zgriprot;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float wgriprot;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int autocreatetemp;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int autoaccepttemp;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int savegametemp;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int onlinescoretemp;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int qualitytemp;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int difficultytemp;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int trailtemp;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float musictemp;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int commentarytemp;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int speedkmhtemp;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int vivetrackertemp;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int playmatchtemp;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string profilecode;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string weeks;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xC2D684", Offset = "0xC2D684", VA = "0xC2D684", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC2D81C", Offset = "0xC2D81C", VA = "0xC2D81C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC2D844", Offset = "0xC2D844", VA = "0xC2D844", Slot = "6")]
	[IteratorStateMachine(typeof(<OnClick>d__49))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC2D8E0", Offset = "0xC2D8E0", VA = "0xC2D8E0", Slot = "7")]
	[IteratorStateMachine(typeof(<Trainingserve>d__50))]
	public virtual IEnumerator Trainingserve()
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC2D97C", Offset = "0xC2D97C", VA = "0xC2D97C", Slot = "8")]
	[IteratorStateMachine(typeof(<Traininggroundstroke>d__51))]
	public virtual IEnumerator Traininggroundstroke()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC2DA18", Offset = "0xC2DA18", VA = "0xC2DA18", Slot = "9")]
	[IteratorStateMachine(typeof(<Trainingforehand>d__52))]
	public virtual IEnumerator Trainingforehand()
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xC2DAB4", Offset = "0xC2DAB4", VA = "0xC2DAB4", Slot = "10")]
	[IteratorStateMachine(typeof(<Trainingbackhand>d__53))]
	public virtual IEnumerator Trainingbackhand()
	{
		return null;
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xC2DB50", Offset = "0xC2DB50", VA = "0xC2DB50", Slot = "11")]
	[IteratorStateMachine(typeof(<Trainingmatch>d__54))]
	public virtual IEnumerator Trainingmatch()
	{
		return null;
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xC2DBEC", Offset = "0xC2DBEC", VA = "0xC2DBEC", Slot = "12")]
	[IteratorStateMachine(typeof(<Players2>d__55))]
	public virtual IEnumerator Players2()
	{
		return null;
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xC2DC88", Offset = "0xC2DC88", VA = "0xC2DC88", Slot = "13")]
	public virtual void Starttrainchoose()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xC2E034", Offset = "0xC2E034", VA = "0xC2E034", Slot = "14")]
	public virtual void Prevtrain()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xC2E34C", Offset = "0xC2E34C", VA = "0xC2E34C", Slot = "15")]
	public virtual void Nexttrain()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xC2E668", Offset = "0xC2E668", VA = "0xC2E668")]
	public Menu1()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Mouselock : MonoBehaviour
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject selectedObj;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xC30E08", Offset = "0xC30E08", VA = "0xC30E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xC30E74", Offset = "0xC30E74", VA = "0xC30E74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xC30F64", Offset = "0xC30F64", VA = "0xC30F64")]
	public Mouselock()
	{
	}
}
[Token(Token = "0x20001E6")]
public class MusicNoSingleton : MonoBehaviour
{
	[Token(Token = "0x600099A")]
	[Address(RVA = "0xC30F6C", Offset = "0xC30F6C", VA = "0xC30F6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xC31024", Offset = "0xC31024", VA = "0xC31024")]
	public MusicNoSingleton()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E7")]
public class MusicSingleton : MonoBehaviour
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MusicSingleton instance;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xC3102C", Offset = "0xC3102C", VA = "0xC3102C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xC311F4", Offset = "0xC311F4", VA = "0xC311F4")]
	public static MusicSingleton GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xC3123C", Offset = "0xC3123C", VA = "0xC3123C")]
	public MusicSingleton()
	{
	}
}
[Token(Token = "0x20001E8")]
public class MyButton : Button
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public EventSystem eventSystem;

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xC31244", Offset = "0xC31244", VA = "0xC31244", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xC312B0", Offset = "0xC312B0", VA = "0xC312B0", Slot = "32")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xC31338", Offset = "0xC31338", VA = "0xC31338", Slot = "38")]
	public override void Select()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xC31374", Offset = "0xC31374", VA = "0xC31374")]
	public MyButton()
	{
	}
}
[Token(Token = "0x20001E9")]
public class MyEventSystem : EventSystem
{
	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xC3137C", Offset = "0xC3137C", VA = "0xC3137C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xC31384", Offset = "0xC31384", VA = "0xC31384", Slot = "18")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xC31400", Offset = "0xC31400", VA = "0xC31400")]
	public MyEventSystem()
	{
	}
}
[Token(Token = "0x20001EA")]
public class MyEventSystemProvider : MonoBehaviour
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventSystem eventSystem;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xC31458", Offset = "0xC31458", VA = "0xC31458")]
	public MyEventSystemProvider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001EB")]
public class Netcollider : MonoBehaviour
{
	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rete;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource netsound;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xC31460", Offset = "0xC31460", VA = "0xC31460", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xC314A8", Offset = "0xC314A8", VA = "0xC314A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xC315DC", Offset = "0xC315DC", VA = "0xC315DC")]
	public Netcollider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001EC")]
public class Netcollidersim : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rete;

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xC315E4", Offset = "0xC315E4", VA = "0xC315E4", Slot = "4")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xC31630", Offset = "0xC31630", VA = "0xC31630")]
	public Netcollidersim()
	{
	}
}
[Serializable]
[Token(Token = "0x20001ED")]
public class Netcollidertutorial : MonoBehaviour
{
	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xC31638", Offset = "0xC31638", VA = "0xC31638", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xC31718", Offset = "0xC31718", VA = "0xC31718")]
	public Netcollidertutorial()
	{
	}
}
[Token(Token = "0x20001EE")]
public class NetworkElementsSyncPhoton : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Behaviour[] componentsToDisable;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] disable;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CameraRig;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ControllerDx;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ControllerSx;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject model;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject body1;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cappello1;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject capcorto1;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject caplungo1;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject pelle1;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject testa11;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject testa21;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject testa31;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject testa41;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject testa51;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject testa61;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject testa71;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject testa81;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject testa91;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject testa101;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject capmedio1;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject occhi1;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject fascia1;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject faccia1;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject racchettasx;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject racchettadx;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject string1;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject string2;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject string1dx;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject string2dx;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject lenti1;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject montatura1;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject polsini1;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject femshirt1;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject femskirt1;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject femboots1;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject femskin1;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject femhair1o1;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject femhair2o1;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject femhair3o1;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject femhair4o1;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject femhair5o1;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject femhair6o1;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject femhair7o1;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject femhair8o1;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject femhair9o1;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject femhair10o1;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject femhair11o1;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject femhead1o1;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject femhead2o1;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject femhead3o1;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject femhead4o1;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject femhead5o1;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject femhead6o1;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject femhead7o1;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject femhead8o1;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject femhead9o1;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject femhead10o1;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject femhead11o1;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject Speaker;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int photonviewActorNum;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xC31720", Offset = "0xC31720", VA = "0xC31720")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xC32148", Offset = "0xC32148", VA = "0xC32148")]
	public NetworkElementsSyncPhoton()
	{
	}
}
[Serializable]
[Token(Token = "0x20001EF")]
public class Newgame : MonoBehaviour
{
	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingout;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xC32150", Offset = "0xC32150", VA = "0xC32150", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xC3225C", Offset = "0xC3225C", VA = "0xC3225C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xC32268", Offset = "0xC32268", VA = "0xC32268", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xC326F8", Offset = "0xC326F8", VA = "0xC326F8")]
	public Newgame()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F0")]
public class Newtour : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject check;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xC32700", Offset = "0xC32700", VA = "0xC32700", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xC32704", Offset = "0xC32704", VA = "0xC32704")]
	public Newtour()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F1")]
[RequireComponent(typeof(Text))]
public class ObjectLabel : MonoBehaviour
{
	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool clampToScreen;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float clampBorderSize;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useMainCamera;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera cameraToUse;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform thisTransform;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform camTransform;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xC3270C", Offset = "0xC3270C", VA = "0xC3270C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xC32788", Offset = "0xC32788", VA = "0xC32788", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xC328E4", Offset = "0xC328E4", VA = "0xC328E4")]
	public ObjectLabel()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Oculus_ControllerDx : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	[CompilerGenerated]
	private sealed class <LoadSceneAsync>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xC33708", Offset = "0xC33708", VA = "0xC33708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0xC33750", Offset = "0xC33750", VA = "0xC33750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xC33444", Offset = "0xC33444", VA = "0xC33444")]
		[DebuggerHidden]
		public <LoadSceneAsync>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xC33534", Offset = "0xC33534", VA = "0xC33534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xC33538", Offset = "0xC33538", VA = "0xC33538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xC33710", Offset = "0xC33710", VA = "0xC33710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <Vibrate>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputDevice device;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float amplitude;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float frequency;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startTime>5__2;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0xC337E8", Offset = "0xC337E8", VA = "0xC337E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xC33830", Offset = "0xC33830", VA = "0xC33830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xC33504", Offset = "0xC33504", VA = "0xC33504")]
		[DebuggerHidden]
		public <Vibrate>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xC33758", Offset = "0xC33758", VA = "0xC33758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xC3375C", Offset = "0xC3375C", VA = "0xC3375C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xC337F0", Offset = "0xC337F0", VA = "0xC337F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice controller;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FixedJoint joint;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CameraRig;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CameraCenter;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int duration;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float exitAmplitude;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float freq;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Exitbutton;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject InputmoduleDx;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject InputmoduleSx;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Scene scene;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int scenex;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool LaserVibra;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject spectator;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEngine.UI.Scrollbar leader;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEngine.UI.Scrollbar rooms;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool primaryIndexTriggerPressed;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool button1Pressed;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool button2Pressed;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private bool isThumbstickClicked;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool ThumbstickClickedLastFrame;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool button1PressedLastFrame;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2 thumbstickY;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2 thumbstick;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int manonum;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xC32958", Offset = "0xC32958", VA = "0xC32958")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xC32A64", Offset = "0xC32A64", VA = "0xC32A64")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xC32BA8", Offset = "0xC32BA8", VA = "0xC32BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xC333E4", Offset = "0xC333E4", VA = "0xC333E4")]
	[IteratorStateMachine(typeof(<LoadSceneAsync>d__28))]
	private IEnumerator LoadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC3346C", Offset = "0xC3346C", VA = "0xC3346C")]
	[IteratorStateMachine(typeof(<Vibrate>d__29))]
	private IEnumerator Vibrate(InputDevice device, float frequency, float amplitude, float duration)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xC3352C", Offset = "0xC3352C", VA = "0xC3352C")]
	public Oculus_ControllerDx()
	{
	}
}
[Token(Token = "0x20001F5")]
public class Oculus_ControllerSx : MonoBehaviour
{
	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <LoadSceneAsync>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0xC342A4", Offset = "0xC342A4", VA = "0xC342A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xC342EC", Offset = "0xC342EC", VA = "0xC342EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xC340A0", Offset = "0xC340A0", VA = "0xC340A0")]
		[DebuggerHidden]
		public <LoadSceneAsync>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xC340D0", Offset = "0xC340D0", VA = "0xC340D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xC340D4", Offset = "0xC340D4", VA = "0xC340D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xC342AC", Offset = "0xC342AC", VA = "0xC342AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice controller;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FixedJoint joint;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CameraRig;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CameraCenter;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Exitbutton;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputmoduleDx;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject InputmoduleSx;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Scene scene;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int scenex;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject spectator;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.UI.Scrollbar leader;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.UI.Scrollbar rooms;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool primaryIndexTriggerPressed;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool button1Pressed;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool button2Pressed;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool isThumbstickClicked;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool ThumbstickClickedLastFrame;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool button1PressedLastFrame;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 thumbstickY;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2 thumbstick;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xC33838", Offset = "0xC33838", VA = "0xC33838")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xC33910", Offset = "0xC33910", VA = "0xC33910")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xC34040", Offset = "0xC34040", VA = "0xC34040")]
	[IteratorStateMachine(typeof(<LoadSceneAsync>d__22))]
	private IEnumerator LoadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xC340C8", Offset = "0xC340C8", VA = "0xC340C8")]
	public Oculus_ControllerSx()
	{
	}
}
[Token(Token = "0x20001F7")]
public class Oculus_Servizio : MonoBehaviour
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice controller;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Ball;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody attachPointsx;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody attachPointdx;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Scoreboard;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Player1;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator handAnimatorsx;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator handAnimatordx;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator handAnimator;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject handsx;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject handdx;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 destination;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool corsamanuale;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int runcorsa;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FixedJoint joint;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject go;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rigidbody jointrigidbody;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody ballrigidbody;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SphereCollider ballcollider;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform balltransform;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float fps;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Scene scene;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int scenex;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Canvasopt;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject CameraRig;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform Controllerdirection;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform Controllerdirectiondx;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform Controllerdirectionsx;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool checkframerate;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float deltaTime;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int lowframe;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int highframe;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 destinationvector;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 moveDirside;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 moveDirForward;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PhysicsTracker m_MotionData;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int rankedtemp;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int trainingmodetemp;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 thumbstickY;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector2 thumbstick;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool primaryIndexTriggerPressed;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool button1Pressed;

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xC342F4", Offset = "0xC342F4", VA = "0xC342F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xC346DC", Offset = "0xC346DC", VA = "0xC346DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xC34910", Offset = "0xC34910", VA = "0xC34910")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xC36B8C", Offset = "0xC36B8C", VA = "0xC36B8C")]
	public Oculus_Servizio()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Oculus_Serviziodx : MonoBehaviour
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice controller;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRNode controllernode;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Ball;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody attachPoint1;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Player1;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Scoreboard;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject go;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody jointrigidbody;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody ballrigidbody;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SphereCollider ballcollider;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform balltransform;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Scene scene;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int scenex;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int runcorsa;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject Canvasopt;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private FixedJoint joint;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject CameraRig;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int rankedtemp;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int trainingmodetemp;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int handtemp;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector2 thumbstickY;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector2 thumbstick;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool primaryIndexTriggerPressed;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool button1Pressed;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC36C00", Offset = "0xC36C00", VA = "0xC36C00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC36DA4", Offset = "0xC36DA4", VA = "0xC36DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC36FC8", Offset = "0xC36FC8", VA = "0xC36FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xC38054", Offset = "0xC38054", VA = "0xC38054")]
	public Oculus_Serviziodx()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F9")]
public class Offar : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Offar0;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xC3805C", Offset = "0xC3805C", VA = "0xC3805C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xC38168", Offset = "0xC38168", VA = "0xC38168", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xC38368", Offset = "0xC38368", VA = "0xC38368")]
	static Offar()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC383B4", Offset = "0xC383B4", VA = "0xC383B4")]
	public Offar()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FA")]
public class Offas : MonoBehaviour
{
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Offas0;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC383BC", Offset = "0xC383BC", VA = "0xC383BC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC384C8", Offset = "0xC384C8", VA = "0xC384C8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xC386A8", Offset = "0xC386A8", VA = "0xC386A8")]
	public Offas()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FB")]
public class Offt : MonoBehaviour
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Offt0;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xC386B0", Offset = "0xC386B0", VA = "0xC386B0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xC387BC", Offset = "0xC387BC", VA = "0xC387BC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xC389BC", Offset = "0xC389BC", VA = "0xC389BC")]
	static Offt()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xC38A08", Offset = "0xC38A08", VA = "0xC38A08")]
	public Offt()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FC")]
public class Offv : MonoBehaviour
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Offv0;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xC38A10", Offset = "0xC38A10", VA = "0xC38A10", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xC38B1C", Offset = "0xC38B1C", VA = "0xC38B1C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xC38D1C", Offset = "0xC38D1C", VA = "0xC38D1C")]
	static Offv()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xC38D68", Offset = "0xC38D68", VA = "0xC38D68")]
	public Offv()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FD")]
public class Onar : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Onar0;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xC38D70", Offset = "0xC38D70", VA = "0xC38D70", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xC38E7C", Offset = "0xC38E7C", VA = "0xC38E7C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xC3907C", Offset = "0xC3907C", VA = "0xC3907C")]
	static Onar()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xC390C8", Offset = "0xC390C8", VA = "0xC390C8")]
	public Onar()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FE")]
public class Onas : MonoBehaviour
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Onas0;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xC390D0", Offset = "0xC390D0", VA = "0xC390D0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xC391DC", Offset = "0xC391DC", VA = "0xC391DC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xC393DC", Offset = "0xC393DC", VA = "0xC393DC")]
	static Onas()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xC39428", Offset = "0xC39428", VA = "0xC39428")]
	public Onas()
	{
	}
}
[Token(Token = "0x20001FF")]
public class Onlineplayerscount : MonoBehaviour
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text onlineplayers;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text readytoplay;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xC39430", Offset = "0xC39430", VA = "0xC39430")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xC395A4", Offset = "0xC395A4", VA = "0xC395A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xC396EC", Offset = "0xC396EC", VA = "0xC396EC")]
	public Onlineplayerscount()
	{
	}
}
[Serializable]
[Token(Token = "0x2000200")]
public class Ont : MonoBehaviour
{
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Ont0;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xC396F4", Offset = "0xC396F4", VA = "0xC396F4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xC39890", Offset = "0xC39890", VA = "0xC39890", Slot = "5")]
	public virtual void Onclick()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xC3998C", Offset = "0xC3998C", VA = "0xC3998C")]
	public Ont()
	{
	}
}
[Serializable]
[Token(Token = "0x2000201")]
public class Onv : MonoBehaviour
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Onv0;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xC39994", Offset = "0xC39994", VA = "0xC39994", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xC39B30", Offset = "0xC39B30", VA = "0xC39B30", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xC39C2C", Offset = "0xC39C2C", VA = "0xC39C2C")]
	public Onv()
	{
	}
}
[Token(Token = "0x2000202")]
public class OpenSpace : MonoBehaviour
{
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int openspace;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject on;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject off;

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xC39C34", Offset = "0xC39C34", VA = "0xC39C34")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xC39D0C", Offset = "0xC39D0C", VA = "0xC39D0C")]
	public void ChangeOpenSpace()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xC39DCC", Offset = "0xC39DCC", VA = "0xC39DCC")]
	public OpenSpace()
	{
	}
}
[Serializable]
[Token(Token = "0x2000203")]
public class Options : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <OnClick>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xC39F8C", Offset = "0xC39F8C", VA = "0xC39F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xC39FD4", Offset = "0xC39FD4", VA = "0xC39FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xC39E34", Offset = "0xC39E34", VA = "0xC39E34")]
		[DebuggerHidden]
		public <OnClick>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xC39E64", Offset = "0xC39E64", VA = "0xC39E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xC39E68", Offset = "0xC39E68", VA = "0xC39E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xC39F94", Offset = "0xC39F94", VA = "0xC39F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xC39DD4", Offset = "0xC39DD4", VA = "0xC39DD4", Slot = "4")]
	[IteratorStateMachine(typeof(<OnClick>d__0))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xC39E5C", Offset = "0xC39E5C", VA = "0xC39E5C")]
	public Options()
	{
	}
}
[Serializable]
[Token(Token = "0x2000205")]
public class Outfit : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int outfit;

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xC39FDC", Offset = "0xC39FDC", VA = "0xC39FDC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xC3A06C", Offset = "0xC3A06C", VA = "0xC3A06C", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xC3A138", Offset = "0xC3A138", VA = "0xC3A138", Slot = "6")]
	public virtual void Change()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xC3A13C", Offset = "0xC3A13C", VA = "0xC3A13C")]
	static Outfit()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xC3A188", Offset = "0xC3A188", VA = "0xC3A188")]
	public Outfit()
	{
	}
}
[Serializable]
[Token(Token = "0x2000206")]
public class Paneltutorial : MonoBehaviour
{
	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xC3A190", Offset = "0xC3A190", VA = "0xC3A190", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xC3A208", Offset = "0xC3A208", VA = "0xC3A208")]
	public Paneltutorial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000207")]
public class Pause : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material materialecorpo;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject male;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject racket;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xC3A210", Offset = "0xC3A210", VA = "0xC3A210", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xC3A6FC", Offset = "0xC3A6FC", VA = "0xC3A6FC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xC3A7BC", Offset = "0xC3A7BC", VA = "0xC3A7BC", Slot = "6")]
	public virtual void Changecameraview()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xC3B0C0", Offset = "0xC3B0C0", VA = "0xC3B0C0", Slot = "7")]
	public virtual void changemale()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xC3BF0C", Offset = "0xC3BF0C", VA = "0xC3BF0C", Slot = "8")]
	public virtual void changefemale()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xC3CD58", Offset = "0xC3CD58", VA = "0xC3CD58")]
	public Pause()
	{
	}
}
[Token(Token = "0x2000208")]
public class PhotonGameManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int playersinroom;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool spectator;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int photonviewActorNum;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool player1ishere;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool player2ishere;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int spectators;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int viewspot;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dentro1vr dentro1vr;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dentro2vr dentro2vr;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xC3DD60", Offset = "0xC3DD60", VA = "0xC3DD60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xC3E708", Offset = "0xC3E708", VA = "0xC3E708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xC3E82C", Offset = "0xC3E82C", VA = "0xC3E82C")]
	public PhotonGameManager()
	{
	}
}
[Token(Token = "0x2000209")]
public class Pingnum : MonoBehaviour
{
	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xC3E834", Offset = "0xC3E834", VA = "0xC3E834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xC3E8F0", Offset = "0xC3E8F0", VA = "0xC3E8F0")]
	public Pingnum()
	{
	}
}
[Serializable]
[Token(Token = "0x200020A")]
public class Player1 : MonoBehaviour
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int player;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int character;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xC3E8F8", Offset = "0xC3E8F8", VA = "0xC3E8F8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xC3E968", Offset = "0xC3E968", VA = "0xC3E968", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xC3E96C", Offset = "0xC3E96C", VA = "0xC3E96C", Slot = "6")]
	public virtual void player1()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xC3E9DC", Offset = "0xC3E9DC", VA = "0xC3E9DC", Slot = "7")]
	public virtual void player2()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xC3EA4C", Offset = "0xC3EA4C", VA = "0xC3EA4C", Slot = "8")]
	public virtual void player3()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xC3EABC", Offset = "0xC3EABC", VA = "0xC3EABC", Slot = "9")]
	public virtual void player4()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xC3EB2C", Offset = "0xC3EB2C", VA = "0xC3EB2C", Slot = "10")]
	public virtual void player5()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xC3EB9C", Offset = "0xC3EB9C", VA = "0xC3EB9C", Slot = "11")]
	public virtual void player6()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xC3EC0C", Offset = "0xC3EC0C", VA = "0xC3EC0C", Slot = "12")]
	public virtual void player7()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xC3EC7C", Offset = "0xC3EC7C", VA = "0xC3EC7C", Slot = "13")]
	public virtual void player8()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xC3ECEC", Offset = "0xC3ECEC", VA = "0xC3ECEC", Slot = "14")]
	public virtual void player9()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xC3ED5C", Offset = "0xC3ED5C", VA = "0xC3ED5C", Slot = "15")]
	public virtual void player10()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xC3EDCC", Offset = "0xC3EDCC", VA = "0xC3EDCC", Slot = "16")]
	public virtual void player11()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xC3EE3C", Offset = "0xC3EE3C", VA = "0xC3EE3C", Slot = "17")]
	public virtual void player12()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xC3EEAC", Offset = "0xC3EEAC", VA = "0xC3EEAC", Slot = "18")]
	public virtual void player13()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xC3EF1C", Offset = "0xC3EF1C", VA = "0xC3EF1C", Slot = "19")]
	public virtual void player14()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xC3EF8C", Offset = "0xC3EF8C", VA = "0xC3EF8C", Slot = "20")]
	public virtual void player15()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xC3EFFC", Offset = "0xC3EFFC", VA = "0xC3EFFC", Slot = "21")]
	public virtual void player16()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xC3F06C", Offset = "0xC3F06C", VA = "0xC3F06C", Slot = "22")]
	public virtual void player17()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xC3F0DC", Offset = "0xC3F0DC", VA = "0xC3F0DC", Slot = "23")]
	public virtual void player18()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xC3F14C", Offset = "0xC3F14C", VA = "0xC3F14C", Slot = "24")]
	public virtual void player19()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xC3F1BC", Offset = "0xC3F1BC", VA = "0xC3F1BC", Slot = "25")]
	public virtual void player20()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xC3F22C", Offset = "0xC3F22C", VA = "0xC3F22C", Slot = "26")]
	public virtual void player21()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xC3F29C", Offset = "0xC3F29C", VA = "0xC3F29C", Slot = "27")]
	public virtual void player22()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xC3F30C", Offset = "0xC3F30C", VA = "0xC3F30C", Slot = "28")]
	public virtual void player23()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xC3F37C", Offset = "0xC3F37C", VA = "0xC3F37C", Slot = "29")]
	public virtual void player24()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xC3F3EC", Offset = "0xC3F3EC", VA = "0xC3F3EC", Slot = "30")]
	public virtual void player25()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xC3F45C", Offset = "0xC3F45C", VA = "0xC3F45C", Slot = "31")]
	public virtual void player26()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xC3F4CC", Offset = "0xC3F4CC", VA = "0xC3F4CC", Slot = "32")]
	public virtual void player27()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xC3F53C", Offset = "0xC3F53C", VA = "0xC3F53C", Slot = "33")]
	public virtual void player28()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xC3F5AC", Offset = "0xC3F5AC", VA = "0xC3F5AC", Slot = "34")]
	public virtual void player29()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xC3F61C", Offset = "0xC3F61C", VA = "0xC3F61C", Slot = "35")]
	public virtual void player30()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xC3F68C", Offset = "0xC3F68C", VA = "0xC3F68C", Slot = "36")]
	public virtual void player31()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xC3F6FC", Offset = "0xC3F6FC", VA = "0xC3F6FC", Slot = "37")]
	public virtual void player32()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xC3F76C", Offset = "0xC3F76C", VA = "0xC3F76C", Slot = "38")]
	public virtual void player33()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xC3F7DC", Offset = "0xC3F7DC", VA = "0xC3F7DC", Slot = "39")]
	public virtual void player34()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xC3F84C", Offset = "0xC3F84C", VA = "0xC3F84C", Slot = "40")]
	public virtual void player35()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xC3F8BC", Offset = "0xC3F8BC", VA = "0xC3F8BC", Slot = "41")]
	public virtual void player36()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xC3F92C", Offset = "0xC3F92C", VA = "0xC3F92C", Slot = "42")]
	public virtual void player37()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xC3F99C", Offset = "0xC3F99C", VA = "0xC3F99C", Slot = "43")]
	public virtual void player38()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xC3FA0C", Offset = "0xC3FA0C", VA = "0xC3FA0C", Slot = "44")]
	public virtual void player39()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xC3FA7C", Offset = "0xC3FA7C", VA = "0xC3FA7C", Slot = "45")]
	public virtual void player40()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xC3FAEC", Offset = "0xC3FAEC", VA = "0xC3FAEC", Slot = "46")]
	public virtual void player41()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xC3FB5C", Offset = "0xC3FB5C", VA = "0xC3FB5C", Slot = "47")]
	public virtual void player42()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xC3FBCC", Offset = "0xC3FBCC", VA = "0xC3FBCC", Slot = "48")]
	public virtual void player43()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xC3FC3C", Offset = "0xC3FC3C", VA = "0xC3FC3C", Slot = "49")]
	public virtual void player44()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xC3FCAC", Offset = "0xC3FCAC", VA = "0xC3FCAC", Slot = "50")]
	public virtual void player45()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xC3FD1C", Offset = "0xC3FD1C", VA = "0xC3FD1C", Slot = "51")]
	public virtual void player46()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xC3FD8C", Offset = "0xC3FD8C", VA = "0xC3FD8C", Slot = "52")]
	public virtual void player47()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xC3FDFC", Offset = "0xC3FDFC", VA = "0xC3FDFC", Slot = "53")]
	public virtual void player48()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xC3FE6C", Offset = "0xC3FE6C", VA = "0xC3FE6C", Slot = "54")]
	public virtual void player49()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xC3FEDC", Offset = "0xC3FEDC", VA = "0xC3FEDC", Slot = "55")]
	public virtual void player50()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xC3FF4C", Offset = "0xC3FF4C", VA = "0xC3FF4C", Slot = "56")]
	public virtual void Change()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xC40010", Offset = "0xC40010", VA = "0xC40010")]
	static Player1()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xC4005C", Offset = "0xC4005C", VA = "0xC4005C")]
	public Player1()
	{
	}
}
[Serializable]
[Token(Token = "0x200020B")]
public class Player2 : MonoBehaviour
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int player;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int character;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xC40064", Offset = "0xC40064", VA = "0xC40064", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xC400D4", Offset = "0xC400D4", VA = "0xC400D4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xC400D8", Offset = "0xC400D8", VA = "0xC400D8", Slot = "6")]
	public virtual void player1()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xC40148", Offset = "0xC40148", VA = "0xC40148", Slot = "7")]
	public virtual void player2()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xC401B8", Offset = "0xC401B8", VA = "0xC401B8", Slot = "8")]
	public virtual void player3()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xC40228", Offset = "0xC40228", VA = "0xC40228", Slot = "9")]
	public virtual void player4()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xC40298", Offset = "0xC40298", VA = "0xC40298", Slot = "10")]
	public virtual void player5()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xC40308", Offset = "0xC40308", VA = "0xC40308", Slot = "11")]
	public virtual void player6()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xC40378", Offset = "0xC40378", VA = "0xC40378", Slot = "12")]
	public virtual void player7()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC403E8", Offset = "0xC403E8", VA = "0xC403E8", Slot = "13")]
	public virtual void player8()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC40458", Offset = "0xC40458", VA = "0xC40458", Slot = "14")]
	public virtual void player9()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC404C8", Offset = "0xC404C8", VA = "0xC404C8", Slot = "15")]
	public virtual void player10()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC40538", Offset = "0xC40538", VA = "0xC40538", Slot = "16")]
	public virtual void player11()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC405A8", Offset = "0xC405A8", VA = "0xC405A8", Slot = "17")]
	public virtual void player12()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xC40618", Offset = "0xC40618", VA = "0xC40618", Slot = "18")]
	public virtual void player13()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xC40688", Offset = "0xC40688", VA = "0xC40688", Slot = "19")]
	public virtual void player14()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xC406F8", Offset = "0xC406F8", VA = "0xC406F8", Slot = "20")]
	public virtual void player15()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xC40768", Offset = "0xC40768", VA = "0xC40768", Slot = "21")]
	public virtual void player16()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xC407D8", Offset = "0xC407D8", VA = "0xC407D8", Slot = "22")]
	public virtual void player17()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xC40848", Offset = "0xC40848", VA = "0xC40848", Slot = "23")]
	public virtual void player18()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC408B8", Offset = "0xC408B8", VA = "0xC408B8", Slot = "24")]
	public virtual void player19()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC40928", Offset = "0xC40928", VA = "0xC40928", Slot = "25")]
	public virtual void player20()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC40998", Offset = "0xC40998", VA = "0xC40998", Slot = "26")]
	public virtual void player21()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC40A08", Offset = "0xC40A08", VA = "0xC40A08", Slot = "27")]
	public virtual void player22()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xC40A78", Offset = "0xC40A78", VA = "0xC40A78", Slot = "28")]
	public virtual void player23()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xC40AE8", Offset = "0xC40AE8", VA = "0xC40AE8", Slot = "29")]
	public virtual void player24()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xC40B58", Offset = "0xC40B58", VA = "0xC40B58", Slot = "30")]
	public virtual void player25()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xC40BC8", Offset = "0xC40BC8", VA = "0xC40BC8", Slot = "31")]
	public virtual void player26()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xC40C38", Offset = "0xC40C38", VA = "0xC40C38", Slot = "32")]
	public virtual void player27()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xC40CA8", Offset = "0xC40CA8", VA = "0xC40CA8", Slot = "33")]
	public virtual void player28()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xC40D18", Offset = "0xC40D18", VA = "0xC40D18", Slot = "34")]
	public virtual void player29()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xC40D88", Offset = "0xC40D88", VA = "0xC40D88", Slot = "35")]
	public virtual void player30()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xC40DF8", Offset = "0xC40DF8", VA = "0xC40DF8", Slot = "36")]
	public virtual void player31()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xC40E68", Offset = "0xC40E68", VA = "0xC40E68", Slot = "37")]
	public virtual void player32()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xC40ED8", Offset = "0xC40ED8", VA = "0xC40ED8", Slot = "38")]
	public virtual void player33()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xC40F48", Offset = "0xC40F48", VA = "0xC40F48", Slot = "39")]
	public virtual void player34()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xC40FB8", Offset = "0xC40FB8", VA = "0xC40FB8", Slot = "40")]
	public virtual void player35()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xC41028", Offset = "0xC41028", VA = "0xC41028", Slot = "41")]
	public virtual void player36()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xC41098", Offset = "0xC41098", VA = "0xC41098", Slot = "42")]
	public virtual void player37()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xC41108", Offset = "0xC41108", VA = "0xC41108", Slot = "43")]
	public virtual void player38()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xC41178", Offset = "0xC41178", VA = "0xC41178", Slot = "44")]
	public virtual void player39()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xC411E8", Offset = "0xC411E8", VA = "0xC411E8", Slot = "45")]
	public virtual void player40()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xC41258", Offset = "0xC41258", VA = "0xC41258", Slot = "46")]
	public virtual void player41()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xC412C8", Offset = "0xC412C8", VA = "0xC412C8", Slot = "47")]
	public virtual void player42()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xC41338", Offset = "0xC41338", VA = "0xC41338", Slot = "48")]
	public virtual void player43()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xC413A8", Offset = "0xC413A8", VA = "0xC413A8", Slot = "49")]
	public virtual void player44()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xC41418", Offset = "0xC41418", VA = "0xC41418", Slot = "50")]
	public virtual void player45()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xC41488", Offset = "0xC41488", VA = "0xC41488", Slot = "51")]
	public virtual void player46()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xC414F8", Offset = "0xC414F8", VA = "0xC414F8", Slot = "52")]
	public virtual void player47()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xC41568", Offset = "0xC41568", VA = "0xC41568", Slot = "53")]
	public virtual void player48()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xC415D8", Offset = "0xC415D8", VA = "0xC415D8", Slot = "54")]
	public virtual void player49()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xC41648", Offset = "0xC41648", VA = "0xC41648", Slot = "55")]
	public virtual void player50()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xC416B8", Offset = "0xC416B8", VA = "0xC416B8", Slot = "56")]
	public virtual void Change()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xC4177C", Offset = "0xC4177C", VA = "0xC4177C")]
	static Player2()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xC417C8", Offset = "0xC417C8", VA = "0xC417C8")]
	public Player2()
	{
	}
}
[Token(Token = "0x200020C")]
public class Playermodel : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int playernum;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int character;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xC417D0", Offset = "0xC417D0", VA = "0xC417D0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xC41840", Offset = "0xC41840", VA = "0xC41840")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xC41844", Offset = "0xC41844", VA = "0xC41844")]
	public void player1()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xC418B4", Offset = "0xC418B4", VA = "0xC418B4")]
	public void player2()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xC41924", Offset = "0xC41924", VA = "0xC41924")]
	public void player3()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xC41994", Offset = "0xC41994", VA = "0xC41994")]
	public void player4()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xC41A04", Offset = "0xC41A04", VA = "0xC41A04")]
	public void player5()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xC41A74", Offset = "0xC41A74", VA = "0xC41A74")]
	public void player6()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xC41AE4", Offset = "0xC41AE4", VA = "0xC41AE4")]
	public void player7()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xC41B54", Offset = "0xC41B54", VA = "0xC41B54")]
	public void player8()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xC41BC4", Offset = "0xC41BC4", VA = "0xC41BC4")]
	public void player9()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xC41C34", Offset = "0xC41C34", VA = "0xC41C34", Slot = "4")]
	public virtual void player10()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xC41CA4", Offset = "0xC41CA4", VA = "0xC41CA4", Slot = "5")]
	public virtual void player11()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xC41D14", Offset = "0xC41D14", VA = "0xC41D14", Slot = "6")]
	public virtual void player12()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xC41D84", Offset = "0xC41D84", VA = "0xC41D84", Slot = "7")]
	public virtual void player13()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xC41DF4", Offset = "0xC41DF4", VA = "0xC41DF4", Slot = "8")]
	public virtual void player14()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xC41E64", Offset = "0xC41E64", VA = "0xC41E64", Slot = "9")]
	public virtual void player15()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xC41ED4", Offset = "0xC41ED4", VA = "0xC41ED4", Slot = "10")]
	public virtual void player16()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xC41F44", Offset = "0xC41F44", VA = "0xC41F44", Slot = "11")]
	public virtual void player17()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xC41FB4", Offset = "0xC41FB4", VA = "0xC41FB4", Slot = "12")]
	public virtual void player18()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xC42024", Offset = "0xC42024", VA = "0xC42024", Slot = "13")]
	public virtual void player19()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xC42094", Offset = "0xC42094", VA = "0xC42094", Slot = "14")]
	public virtual void player20()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xC42104", Offset = "0xC42104", VA = "0xC42104", Slot = "15")]
	public virtual void player21()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xC42174", Offset = "0xC42174", VA = "0xC42174", Slot = "16")]
	public virtual void player22()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xC421E4", Offset = "0xC421E4", VA = "0xC421E4", Slot = "17")]
	public virtual void player23()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xC42254", Offset = "0xC42254", VA = "0xC42254", Slot = "18")]
	public virtual void player24()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xC422C4", Offset = "0xC422C4", VA = "0xC422C4", Slot = "19")]
	public virtual void player25()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xC42334", Offset = "0xC42334", VA = "0xC42334", Slot = "20")]
	public virtual void player26()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xC423A4", Offset = "0xC423A4", VA = "0xC423A4", Slot = "21")]
	public virtual void player27()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xC42414", Offset = "0xC42414", VA = "0xC42414", Slot = "22")]
	public virtual void player28()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xC42484", Offset = "0xC42484", VA = "0xC42484", Slot = "23")]
	public virtual void player29()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xC424F4", Offset = "0xC424F4", VA = "0xC424F4", Slot = "24")]
	public virtual void player30()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xC42564", Offset = "0xC42564", VA = "0xC42564", Slot = "25")]
	public virtual void player31()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xC425D4", Offset = "0xC425D4", VA = "0xC425D4", Slot = "26")]
	public virtual void player32()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xC42644", Offset = "0xC42644", VA = "0xC42644", Slot = "27")]
	public virtual void player33()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xC426B4", Offset = "0xC426B4", VA = "0xC426B4", Slot = "28")]
	public virtual void player34()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xC42724", Offset = "0xC42724", VA = "0xC42724", Slot = "29")]
	public virtual void player35()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xC42794", Offset = "0xC42794", VA = "0xC42794", Slot = "30")]
	public virtual void player36()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xC42804", Offset = "0xC42804", VA = "0xC42804", Slot = "31")]
	public virtual void player37()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xC42874", Offset = "0xC42874", VA = "0xC42874", Slot = "32")]
	public virtual void player38()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xC428E4", Offset = "0xC428E4", VA = "0xC428E4", Slot = "33")]
	public virtual void player39()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xC42954", Offset = "0xC42954", VA = "0xC42954", Slot = "34")]
	public virtual void player40()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xC429C4", Offset = "0xC429C4", VA = "0xC429C4", Slot = "35")]
	public virtual void player41()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xC42A34", Offset = "0xC42A34", VA = "0xC42A34", Slot = "36")]
	public virtual void player42()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xC42AA4", Offset = "0xC42AA4", VA = "0xC42AA4", Slot = "37")]
	public virtual void player43()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xC42B14", Offset = "0xC42B14", VA = "0xC42B14", Slot = "38")]
	public virtual void player44()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xC42B84", Offset = "0xC42B84", VA = "0xC42B84", Slot = "39")]
	public virtual void player45()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xC42BF4", Offset = "0xC42BF4", VA = "0xC42BF4", Slot = "40")]
	public virtual void player46()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xC42C64", Offset = "0xC42C64", VA = "0xC42C64", Slot = "41")]
	public virtual void player47()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xC42CD4", Offset = "0xC42CD4", VA = "0xC42CD4", Slot = "42")]
	public virtual void player48()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xC42D44", Offset = "0xC42D44", VA = "0xC42D44", Slot = "43")]
	public virtual void player49()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xC42DB4", Offset = "0xC42DB4", VA = "0xC42DB4", Slot = "44")]
	public virtual void player50()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xC42E24", Offset = "0xC42E24", VA = "0xC42E24", Slot = "45")]
	public virtual void Change()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xC42EE8", Offset = "0xC42EE8", VA = "0xC42EE8")]
	public Playermodel()
	{
	}
}
[Serializable]
[Token(Token = "0x200020D")]
public class Playerrank : MonoBehaviour
{
	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int character;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int positionrank;

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xC42F3C", Offset = "0xC42F3C", VA = "0xC42F3C")]
	public Playerrank()
	{
	}
}
[Serializable]
[Token(Token = "0x200020E")]
public class Playtour : MonoBehaviour
{
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xC42F5C", Offset = "0xC42F5C", VA = "0xC42F5C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xC43068", Offset = "0xC43068", VA = "0xC43068", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xC43180", Offset = "0xC43180", VA = "0xC43180", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xC439D4", Offset = "0xC439D4", VA = "0xC439D4")]
	public Playtour()
	{
	}
}
[Serializable]
[Token(Token = "0x200020F")]
public class Qualitysettings : MonoBehaviour
{
	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int qualitysettings;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject textextreme;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject textultra;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject texthigh;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject textnormal;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject textlow;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float qualityfps;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject text120;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject text90;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject text80;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject text72;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float qualityFFR;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject textffr0;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject textffr2;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject textffr4;

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xC439DC", Offset = "0xC439DC", VA = "0xC439DC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xC441D0", Offset = "0xC441D0", VA = "0xC441D0", Slot = "5")]
	public virtual void Nextquality()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xC44244", Offset = "0xC44244", VA = "0xC44244", Slot = "6")]
	public virtual void Prevquality()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC442BC", Offset = "0xC442BC", VA = "0xC442BC", Slot = "7")]
	public virtual void Nextfps()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC443CC", Offset = "0xC443CC", VA = "0xC443CC", Slot = "8")]
	public virtual void Prevfps()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC444CC", Offset = "0xC444CC", VA = "0xC444CC", Slot = "9")]
	public virtual void NextFFR()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xC4457C", Offset = "0xC4457C", VA = "0xC4457C", Slot = "10")]
	public virtual void PrevFFR()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xC445EC", Offset = "0xC445EC", VA = "0xC445EC")]
	static Qualitysettings()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xC44634", Offset = "0xC44634", VA = "0xC44634")]
	public Qualitysettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000210")]
public class Racchettascelta : MonoBehaviour
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] racchette;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xC4463C", Offset = "0xC4463C", VA = "0xC4463C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xC44C54", Offset = "0xC44C54", VA = "0xC44C54")]
	public Racchettascelta()
	{
	}
}
[Token(Token = "0x2000211")]
public class Racketpower : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	[CompilerGenerated]
	private sealed class <Simulate>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Racketpower <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xC4BB70", Offset = "0xC4BB70", VA = "0xC4BB70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xC4BBB8", Offset = "0xC4BBB8", VA = "0xC4BBB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xC4A6C0", Offset = "0xC4A6C0", VA = "0xC4A6C0")]
		[DebuggerHidden]
		public <Simulate>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xC4B9E0", Offset = "0xC4B9E0", VA = "0xC4B9E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC4B9E4", Offset = "0xC4B9E4", VA = "0xC4B9E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xC4BB78", Offset = "0xC4BB78", VA = "0xC4BB78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform racketpunta;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform racket;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform racketnorm1;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform racketnorm2;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody racketperforza;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 startingVelocity;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lob;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float forceVec;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoxCollider racketcollider;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshCollider racchettacollider1;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshCollider racchettacollider2;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshCollider racchettacollider3;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 realpos;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject player1;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool lobshot;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource hit1;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource hit2;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float spin;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 spinangular;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float angleballdirection;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Rigidbody ballrigidbody;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool racketenabled;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timestepsPerSecond;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lob1;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int speedserving;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float physicsTimestep;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 p;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 a;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 s;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float n;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 velocity;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Scene scene;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float testspeed;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float testangle;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 directionball;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3 directionracket;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float motionspeed;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool collisiondisabled;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 velprojectx;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 velprojecty;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 finalvel;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 normalvec;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<float> times;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<Vector3> ballpos;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<Vector3> ballangls;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<Vector3> normracket;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<Vector3> headpos;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 headvel;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform m_ToTrack;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PhysicsTracker m_MotionData;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int speedtemp;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int runtemp;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int modetemp;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int choosehand;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int trail;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int trainingtemp;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float penalty;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool timestop;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 relativeVelocity;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Vector3 tangentVelocity;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3 reflectedVelocity;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float impactSpeed;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float timer;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xC44C5C", Offset = "0xC44C5C", VA = "0xC44C5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xC45040", Offset = "0xC45040", VA = "0xC45040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xC45498", Offset = "0xC45498", VA = "0xC45498")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xC45B24", Offset = "0xC45B24", VA = "0xC45B24")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xC49B38", Offset = "0xC49B38", VA = "0xC49B38")]
	private void Shot()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xC4A64C", Offset = "0xC4A64C", VA = "0xC4A64C")]
	[IteratorStateMachine(typeof(<Simulate>d__70))]
	private IEnumerator Simulate()
	{
		return null;
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xC4A6E8", Offset = "0xC4A6E8", VA = "0xC4A6E8", Slot = "4")]
	public virtual void GetTrajectoryVelocityTiroArcade()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xC4A24C", Offset = "0xC4A24C", VA = "0xC4A24C")]
	public void Speedserve()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xC4B718", Offset = "0xC4B718", VA = "0xC4B718")]
	private void Wait()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xC4B844", Offset = "0xC4B844", VA = "0xC4B844")]
	public Racketpower()
	{
	}
}
[Serializable]
[Token(Token = "0x2000213")]
public class RacketpowerMulti : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <Simulate>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RacketpowerMulti <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xC54E9C", Offset = "0xC54E9C", VA = "0xC54E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0xC54EE4", Offset = "0xC54EE4", VA = "0xC54EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xC54CDC", Offset = "0xC54CDC", VA = "0xC54CDC")]
		[DebuggerHidden]
		public <Simulate>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xC54D04", Offset = "0xC54D04", VA = "0xC54D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xC54D08", Offset = "0xC54D08", VA = "0xC54D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xC54EA4", Offset = "0xC54EA4", VA = "0xC54EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform racketpunta;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform racket;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform racketnorm1;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform racketnorm2;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody racketperforza;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 startingVelocity;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lob;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float forceVec;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoxCollider racketcollider;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshCollider racchettacollider1;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshCollider racchettacollider2;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshCollider racchettacollider3;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 realpos;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject player1;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool lobshot;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource hit1;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource hit2;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float spin;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 spinangular;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float angleballdirection;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Rigidbody ballrigidbody;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool racketenabled;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timestepsPerSecond;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lob1;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int speedserving;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float physicsTimestep;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 p;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 a;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 s;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float n;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 velocity;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Scene scene;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 directionball;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3 directionracket;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float motionspeed;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool collisiondisabled;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 velprojectx;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 velprojecty;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 finalvel;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 normalvec;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<float> times;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<Vector3> ballpos;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<Vector3> ballangls;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<Vector3> normracket;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<Vector3> headpos;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 headvel;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Transform m_ToTrack;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private PhysicsTracker m_MotionData;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ObscuredFloat timerserve;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static ObscuredInt timerfaults;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static ObscuredBool faultchange;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private ObscuredInt speedtemp;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ObscuredInt runmultitemp;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private ObscuredInt rankedmatchtemp;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private ObscuredInt modetemp;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private ObscuredInt choosehand;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private ObscuredInt trail;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private GameObject speedserveboard;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private GameObject speedserveopboard;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float penalty;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool timestop;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 relativeVelocity;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector3 tangentVelocity;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3 reflectedVelocity;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float impactSpeed;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float timer;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xC4BBC0", Offset = "0xC4BBC0", VA = "0xC4BBC0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xC4C180", Offset = "0xC4C180", VA = "0xC4C180")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xC4C5D8", Offset = "0xC4C5D8", VA = "0xC4C5D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xC4D66C", Offset = "0xC4D66C", VA = "0xC4D66C")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xC52560", Offset = "0xC52560", VA = "0xC52560")]
	private void Shot()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xC52FE4", Offset = "0xC52FE4", VA = "0xC52FE4")]
	[IteratorStateMachine(typeof(<Simulate>d__73))]
	private IEnumerator Simulate()
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xC53058", Offset = "0xC53058", VA = "0xC53058", Slot = "5")]
	public virtual void GetTrajectoryVelocityTiroArcade()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xC52E4C", Offset = "0xC52E4C", VA = "0xC52E4C")]
	public void Speedserve()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xC54B40", Offset = "0xC54B40", VA = "0xC54B40")]
	public RacketpowerMulti()
	{
	}
}
[Serializable]
[Token(Token = "0x2000215")]
public class Racquet : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int racquet;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBarracpow;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject energyBarracacc;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xC54EEC", Offset = "0xC54EEC", VA = "0xC54EEC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xC54F7C", Offset = "0xC54F7C", VA = "0xC54F7C", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xC55010", Offset = "0xC55010", VA = "0xC55010", Slot = "6")]
	public virtual void Change()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xC55FFC", Offset = "0xC55FFC", VA = "0xC55FFC")]
	static Racquet()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xC56048", Offset = "0xC56048", VA = "0xC56048")]
	public Racquet()
	{
	}
}
[Token(Token = "0x2000216")]
public class Rankcontinue : MonoBehaviour
{
	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xC56050", Offset = "0xC56050", VA = "0xC56050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xC5615C", Offset = "0xC5615C", VA = "0xC5615C")]
	public Rankcontinue()
	{
	}
}
[Serializable]
[Token(Token = "0x2000217")]
public class Replay : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <sequence>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xC56CDC", Offset = "0xC56CDC", VA = "0xC56CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xC56D24", Offset = "0xC56D24", VA = "0xC56D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xC561C4", Offset = "0xC561C4", VA = "0xC561C4")]
		[DebuggerHidden]
		public <sequence>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xC56240", Offset = "0xC56240", VA = "0xC56240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC56244", Offset = "0xC56244", VA = "0xC56244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xC56CE4", Offset = "0xC56CE4", VA = "0xC56CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int replay;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xC56164", Offset = "0xC56164", VA = "0xC56164", Slot = "4")]
	[IteratorStateMachine(typeof(<sequence>d__1))]
	public virtual IEnumerator sequence()
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xC561EC", Offset = "0xC561EC", VA = "0xC561EC")]
	static Replay()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xC56238", Offset = "0xC56238", VA = "0xC56238")]
	public Replay()
	{
	}
}
[Token(Token = "0x2000219")]
public class Resetprofile : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int handnum;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int playmatchtemp;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xC56D2C", Offset = "0xC56D2C", VA = "0xC56D2C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xC57430", Offset = "0xC57430", VA = "0xC57430")]
	public Resetprofile()
	{
	}
}
[Serializable]
[Token(Token = "0x200021A")]
public class Restore : MonoBehaviour
{
	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xC57438", Offset = "0xC57438", VA = "0xC57438", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xC5743C", Offset = "0xC5743C", VA = "0xC5743C")]
	public Restore()
	{
	}
}
[Serializable]
[Token(Token = "0x200021B")]
public class Round : MonoBehaviour
{
	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int turno;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool slam;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int opponentnum;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AsyncOperation op;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image energyBarForehandop;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image energyBarBackhandop;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image energyBarServeop;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image energyBarVolleyop;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image energyBarSpeedop;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image energyBarStaminaop;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image energyBarForehandpl;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image energyBarBackhandpl;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image energyBarServepl;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image energyBarVolleypl;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image energyBarSpeedpl;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image energyBarStaminapl;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text rankop;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text rankpl;

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xC57444", Offset = "0xC57444", VA = "0xC57444", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xC574F4", Offset = "0xC574F4", VA = "0xC574F4", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xC62BE0", Offset = "0xC62BE0", VA = "0xC62BE0", Slot = "6")]
	public virtual void randomizeopponent()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xC62C9C", Offset = "0xC62C9C", VA = "0xC62C9C", Slot = "7")]
	public virtual void scritta()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xC63978", Offset = "0xC63978", VA = "0xC63978")]
	public Round()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xC63998", Offset = "0xC63998", VA = "0xC63998")]
	static Round()
	{
	}
}
[Serializable]
[Token(Token = "0x200021C")]
public class Round1 : MonoBehaviour
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int turno;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool slam;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image energyBarForehandop;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image energyBarBackhandop;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image energyBarServeop;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image energyBarVolleyop;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image energyBarSpeedop;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image energyBarStaminaop;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image energyBarForehandpl;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image energyBarBackhandpl;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image energyBarServepl;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image energyBarVolleypl;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image energyBarSpeedpl;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image energyBarStaminapl;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xC639E4", Offset = "0xC639E4", VA = "0xC639E4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xC64488", Offset = "0xC64488", VA = "0xC64488")]
	static Round1()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xC644D4", Offset = "0xC644D4", VA = "0xC644D4")]
	public Round1()
	{
	}
}
[Token(Token = "0x200021D")]
public class Savesystem : MonoBehaviour
{
	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Data data;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string dataFileGrip;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string dataFileLang;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string dataFileSettings;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string dataFile1;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string dataFile2;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string dataFile3;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string dataFile4;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string dataFile5;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text TextNew1;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text TextNew2;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text TextNew3;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text TextLoad1;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text TextLoad2;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text TextLoad3;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text TextNew1Multi;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text TextNew2Multi;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xC644DC", Offset = "0xC644DC", VA = "0xC644DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xC64F50", Offset = "0xC64F50", VA = "0xC64F50")]
	public void NewGame1()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xC64FD8", Offset = "0xC64FD8", VA = "0xC64FD8")]
	public void NewGame2()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xC65060", Offset = "0xC65060", VA = "0xC65060")]
	public void NewGame3()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xC650E8", Offset = "0xC650E8", VA = "0xC650E8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xC651BC", Offset = "0xC651BC", VA = "0xC651BC")]
	public void Save1()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xC6529C", Offset = "0xC6529C", VA = "0xC6529C")]
	public void Save2()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xC6537C", Offset = "0xC6537C", VA = "0xC6537C")]
	public void Save3()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xC6545C", Offset = "0xC6545C", VA = "0xC6545C")]
	public void Save4()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xC6553C", Offset = "0xC6553C", VA = "0xC6553C")]
	public void Save5()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xC66C60", Offset = "0xC66C60", VA = "0xC66C60")]
	public void SaveGrip()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xC57178", Offset = "0xC57178", VA = "0xC57178")]
	public void LoadGrip()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xC66FBC", Offset = "0xC66FBC", VA = "0xC66FBC")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xC572D4", Offset = "0xC572D4", VA = "0xC572D4")]
	public void LoadSettings()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xC67490", Offset = "0xC67490", VA = "0xC67490")]
	public void SaveLanguage()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xC5701C", Offset = "0xC5701C", VA = "0xC5701C")]
	public void LoadLanguage()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xC6760C", Offset = "0xC6760C", VA = "0xC6760C")]
	public void Load1()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xC68A68", Offset = "0xC68A68", VA = "0xC68A68")]
	public void Load2()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xC68C10", Offset = "0xC68C10", VA = "0xC68C10")]
	public void Load3()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xC64C10", Offset = "0xC64C10", VA = "0xC64C10")]
	public void Load1Multi()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xC64DB0", Offset = "0xC64DB0", VA = "0xC64DB0")]
	public void Load2Multi()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xC69228", Offset = "0xC69228", VA = "0xC69228")]
	public Savesystem()
	{
	}
}
[Serializable]
[Token(Token = "0x200021E")]
public class Data
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Toursave;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Roundsave;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Loadmatchsave;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int points1save;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int points2save;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int points3save;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int points4save;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int points5save;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int points6save;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int points7save;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int points8save;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int points9save;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int points10save;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int points11save;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int points12save;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int points13save;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int spunta1save;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int spunta2save;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int spunta3save;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int spunta4save;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int spunta5save;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int spunta6save;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int spunta7save;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int spunta8save;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int spunta9save;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int spunta10save;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int spunta11save;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int spunta12save;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int spunta13save;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int ranksave;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int setssave;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int gamesave;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string playernamesave;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int playersave;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int charactersave;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float forehandplsave;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float backhandplsave;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float serveplsave;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float volleyplsave;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float speedplsave;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float staminaplsave;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int headssave;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int outfitsave;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int racketsave;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int rankop1save;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int rankop2save;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int rankop3save;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int rankop4save;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int rankop5save;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int rankop6save;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int rankop7save;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int rankop8save;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int rankop9save;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int rankop10save;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int rankop11save;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int rankop12save;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int rankop13save;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int rankop14save;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int rankop15save;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int rankop16save;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int rankop17save;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int rankop18save;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int rankop19save;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int rankop20save;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int rankop21save;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int rankop22save;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int rankop23save;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int rankop24save;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int rankop25save;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int rankop26save;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int rankop27save;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int rankop28save;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int rankop29save;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int rankop30save;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int rankop31save;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int rankop32save;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int rankop33save;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int rankop34save;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int rankop35save;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int rankop36save;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int rankop37save;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int rankop38save;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int rankop39save;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public int rankop40save;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int rankop41save;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int rankop42save;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int rankop43save;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int rankop44save;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int rankop45save;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public int rankop46save;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int rankop47save;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public int rankop48save;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public int rankop49save;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int rankplsave;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public int opponentnumsave;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int unendedmatchsave;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int load1save;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int load2save;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int load3save;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int load4save;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int load5save;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string load6save;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string load7save;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public int load8save;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public int load9save;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int load10save;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int load11save;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public int load12save;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public int load13save;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public int load14save;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int load15save;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public int load16save;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public int load17save;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int load18save;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public int load19save;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int load20save;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public int load21save;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public int load22save;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float load23save;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float load24save;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float load25save;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float load26save;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public int load27save;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int load28save;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int load29save;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public int load30save;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public int load31save;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public int load32save;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public int load33save;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int load34save;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public int load35save;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float load36save;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public string playernamemultisave;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public int testamultisave;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public int bodymultisave;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int racchettamultisave;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float forehandmultisave;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float backhandmultisave;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public float servemultisave;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float volleymultisave;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float speedmultisave;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float staminamultisave;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public int setmultisave;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public int gamemultisave;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public int modemultisave;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public int runmultisave;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public float xgrippossave;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public float ygrippossave;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public float zgrippossave;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float xgriprotsave;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float ygriprotsave;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float zgriprotsave;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float wgriprotsave;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public int autocreatetempsave;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public int autoaccepttempsave;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public int onlinescore;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public int ranked;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public int touronline;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public int mute;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public int quality;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public int trail;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public int speedkmh;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public int commentary;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public float music;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public float umpire;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public int grunt;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public int ambient;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public int difficulty;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public int vivetracker;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public int fps;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public int ffr;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public string profilecode;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public string weeks;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public int language;

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xC66E80", Offset = "0xC66E80", VA = "0xC66E80")]
	public void Loadgrip()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xC66D40", Offset = "0xC66D40", VA = "0xC66D40")]
	public void Savegrip()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xC67298", Offset = "0xC67298", VA = "0xC67298")]
	public void Loadsettings()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xC6709C", Offset = "0xC6709C", VA = "0xC6709C")]
	public void Savesettings()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xC675C0", Offset = "0xC675C0", VA = "0xC675C0")]
	public void Loadlanguage()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xC67570", Offset = "0xC67570", VA = "0xC67570")]
	public void Savelanguage()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xC677B4", Offset = "0xC677B4", VA = "0xC677B4")]
	public void Loaddata()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xC68DB8", Offset = "0xC68DB8", VA = "0xC68DB8")]
	public void Loaddatamulti()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xC6561C", Offset = "0xC6561C", VA = "0xC6561C")]
	public void Savedata()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xC6939C", Offset = "0xC6939C", VA = "0xC6939C")]
	public Data()
	{
	}
}
[Serializable]
[Token(Token = "0x200021F")]
public class Score : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <Scorepunt>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Score <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0xC7F118", Offset = "0xC7F118", VA = "0xC7F118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xC7F160", Offset = "0xC7F160", VA = "0xC7F160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xC78E3C", Offset = "0xC78E3C", VA = "0xC78E3C")]
		[DebuggerHidden]
		public <Scorepunt>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xC7D27C", Offset = "0xC7D27C", VA = "0xC7D27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xC7D280", Offset = "0xC7D280", VA = "0xC7D280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xC7F120", Offset = "0xC7F120", VA = "0xC7F120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <onserve>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xC7F2B0", Offset = "0xC7F2B0", VA = "0xC7F2B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xC7F2F8", Offset = "0xC7F2F8", VA = "0xC7F2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xC7A688", Offset = "0xC7A688", VA = "0xC7A688")]
		[DebuggerHidden]
		public <onserve>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xC7F168", Offset = "0xC7F168", VA = "0xC7F168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xC7F16C", Offset = "0xC7F16C", VA = "0xC7F16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xC7F2B8", Offset = "0xC7F2B8", VA = "0xC7F2B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onservice;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string punto0;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string punto1;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int game11;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int game21;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int game31;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int game10;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int game20;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int game30;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int setn0;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int setn1;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool set01;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool set02;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public static bool set03;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public static bool tiebreak;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fault;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject panelpause;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject text;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scoreboard;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name1;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource quindicizero;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource trentazero;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource quarantazero;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource zeroquindici;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource zerotrenta;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource zeroquaranta;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource quindicipari;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource trentapari;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource quarantapari;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource quindicitrenta;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource trentaquindici;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource quindiciquaranta;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource quarantaquindici;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource trentaquaranta;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource quarantatrenta;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource vantaggioserv;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource vantaggioric;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject loadscene;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int games;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int punteggio0;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int punteggio1;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xC7813C", Offset = "0xC7813C", VA = "0xC7813C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xC78274", Offset = "0xC78274", VA = "0xC78274", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xC78DC8", Offset = "0xC78DC8", VA = "0xC78DC8", Slot = "6")]
	[IteratorStateMachine(typeof(<Scorepunt>d__43))]
	public virtual IEnumerator Scorepunt()
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xC78E64", Offset = "0xC78E64", VA = "0xC78E64", Slot = "7")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xC792D4", Offset = "0xC792D4", VA = "0xC792D4", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xC7A628", Offset = "0xC7A628", VA = "0xC7A628", Slot = "9")]
	[IteratorStateMachine(typeof(<onserve>d__46))]
	public virtual IEnumerator onserve()
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xC7A6B0", Offset = "0xC7A6B0", VA = "0xC7A6B0", Slot = "10")]
	public virtual void set1()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xC7B458", Offset = "0xC7B458", VA = "0xC7B458", Slot = "11")]
	public virtual void set2()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xC7BB0C", Offset = "0xC7BB0C", VA = "0xC7BB0C", Slot = "12")]
	public virtual void set3()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xC7C1C0", Offset = "0xC7C1C0", VA = "0xC7C1C0", Slot = "13")]
	public virtual void tiebreak1()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xC7C840", Offset = "0xC7C840", VA = "0xC7C840", Slot = "14")]
	public virtual void tiebreak2()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xC7CF44", Offset = "0xC7CF44", VA = "0xC7CF44", Slot = "15")]
	public virtual void tiebreak3()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xC7D1E8", Offset = "0xC7D1E8", VA = "0xC7D1E8")]
	static Score()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xC7D274", Offset = "0xC7D274", VA = "0xC7D274")]
	public Score()
	{
	}
}
[Serializable]
[Token(Token = "0x2000222")]
public class Score2 : MonoBehaviour
{
	[Token(Token = "0x2000223")]
	[CompilerGenerated]
	private sealed class <Score>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Score2 <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xC858F4", Offset = "0xC858F4", VA = "0xC858F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xC8593C", Offset = "0xC8593C", VA = "0xC8593C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xC7FEE4", Offset = "0xC7FEE4", VA = "0xC7FEE4")]
		[DebuggerHidden]
		public <Score>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC83B78", Offset = "0xC83B78", VA = "0xC83B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC83B7C", Offset = "0xC83B7C", VA = "0xC83B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC858FC", Offset = "0xC858FC", VA = "0xC858FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000224")]
	[CompilerGenerated]
	private sealed class <onserve>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xC85A8C", Offset = "0xC85A8C", VA = "0xC85A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xC85AD4", Offset = "0xC85AD4", VA = "0xC85AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xC8173C", Offset = "0xC8173C", VA = "0xC8173C")]
		[DebuggerHidden]
		public <onserve>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xC85944", Offset = "0xC85944", VA = "0xC85944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC85948", Offset = "0xC85948", VA = "0xC85948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xC85A94", Offset = "0xC85A94", VA = "0xC85A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onservice;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string punto0;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string punto1;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int game11;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int game21;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int game31;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int game10;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int game20;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int game30;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int setn0;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int setn1;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool set01;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool set02;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public static bool set03;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public static bool tiebreak;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fault;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject panelpause;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject text;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scoreboard;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name1;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource quindicizero;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource trentazero;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource quarantazero;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource zeroquindici;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource zerotrenta;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource zeroquaranta;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource quindicipari;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource trentapari;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource quarantapari;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource quindicitrenta;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource trentaquindici;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource quindiciquaranta;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource quarantaquindici;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource trentaquaranta;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource quarantatrenta;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource vantaggioserv;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource vantaggioric;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject loadscene;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int games;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xC7F300", Offset = "0xC7F300", VA = "0xC7F300", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xC7F438", Offset = "0xC7F438", VA = "0xC7F438", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xC7FE70", Offset = "0xC7FE70", VA = "0xC7FE70", Slot = "6")]
	[IteratorStateMachine(typeof(<Score>d__41))]
	public virtual IEnumerator Score()
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xC7FF0C", Offset = "0xC7FF0C", VA = "0xC7FF0C", Slot = "7")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xC8037C", Offset = "0xC8037C", VA = "0xC8037C", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xC816DC", Offset = "0xC816DC", VA = "0xC816DC", Slot = "9")]
	[IteratorStateMachine(typeof(<onserve>d__44))]
	public virtual IEnumerator onserve()
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xC81764", Offset = "0xC81764", VA = "0xC81764", Slot = "10")]
	public virtual void set1()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xC82264", Offset = "0xC82264", VA = "0xC82264", Slot = "11")]
	public virtual void set2()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xC826E8", Offset = "0xC826E8", VA = "0xC826E8", Slot = "12")]
	public virtual void set3()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xC82B6C", Offset = "0xC82B6C", VA = "0xC82B6C", Slot = "13")]
	public virtual void tiebreak1()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xC831C0", Offset = "0xC831C0", VA = "0xC831C0", Slot = "14")]
	public virtual void tiebreak2()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xC83864", Offset = "0xC83864", VA = "0xC83864", Slot = "15")]
	public virtual void tiebreak3()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xC83AE4", Offset = "0xC83AE4", VA = "0xC83AE4")]
	static Score2()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xC83B70", Offset = "0xC83B70", VA = "0xC83B70")]
	public Score2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000225")]
public class Scorecones : MonoBehaviour
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shots;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cones;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xC85ADC", Offset = "0xC85ADC", VA = "0xC85ADC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xC85C4C", Offset = "0xC85C4C", VA = "0xC85C4C", Slot = "5")]
	public virtual void Newshot()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xC85DBC", Offset = "0xC85DBC", VA = "0xC85DBC", Slot = "6")]
	public virtual void Newcone()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xC85F2C", Offset = "0xC85F2C", VA = "0xC85F2C")]
	public Scorecones()
	{
	}
}
[Serializable]
[Token(Token = "0x2000226")]
public class Scorevr : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <ChangeName>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scorevr <>4__this;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xC86718", Offset = "0xC86718", VA = "0xC86718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC86760", Offset = "0xC86760", VA = "0xC86760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC85F34", Offset = "0xC85F34", VA = "0xC85F34")]
		[DebuggerHidden]
		public <ChangeName>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC85F5C", Offset = "0xC85F5C", VA = "0xC85F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC85F60", Offset = "0xC85F60", VA = "0xC85F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC86720", Offset = "0xC86720", VA = "0xC86720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <Score>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scorevr <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xC87DDC", Offset = "0xC87DDC", VA = "0xC87DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xC87E24", Offset = "0xC87E24", VA = "0xC87E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC86768", Offset = "0xC86768", VA = "0xC86768")]
		[DebuggerHidden]
		public <Score>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xC86790", Offset = "0xC86790", VA = "0xC86790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC86794", Offset = "0xC86794", VA = "0xC86794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC87DE4", Offset = "0xC87DE4", VA = "0xC87DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[CompilerGenerated]
	private sealed class <ScoreContinue>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scorevr <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xC89298", Offset = "0xC89298", VA = "0xC89298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xC892E0", Offset = "0xC892E0", VA = "0xC892E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC87E2C", Offset = "0xC87E2C", VA = "0xC87E2C")]
		[DebuggerHidden]
		public <ScoreContinue>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC87E54", Offset = "0xC87E54", VA = "0xC87E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xC87E58", Offset = "0xC87E58", VA = "0xC87E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC892A0", Offset = "0xC892A0", VA = "0xC892A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[CompilerGenerated]
	private sealed class <ScoreInstant>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scorevr <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xC8A960", Offset = "0xC8A960", VA = "0xC8A960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xC8A9A8", Offset = "0xC8A9A8", VA = "0xC8A9A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC892E8", Offset = "0xC892E8", VA = "0xC892E8")]
		[DebuggerHidden]
		public <ScoreInstant>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC89310", Offset = "0xC89310", VA = "0xC89310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC89314", Offset = "0xC89314", VA = "0xC89314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC8A968", Offset = "0xC8A968", VA = "0xC8A968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[CompilerGenerated]
	private sealed class <onserve>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scorevr <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xC8AD4C", Offset = "0xC8AD4C", VA = "0xC8AD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xC8AD94", Offset = "0xC8AD94", VA = "0xC8AD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xC8A9B0", Offset = "0xC8A9B0", VA = "0xC8A9B0")]
		[DebuggerHidden]
		public <onserve>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xC8A9D8", Offset = "0xC8A9D8", VA = "0xC8A9D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xC8A9DC", Offset = "0xC8A9DC", VA = "0xC8A9DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xC8AD54", Offset = "0xC8AD54", VA = "0xC8AD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObscuredBool onservice;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static ObscuredBool onservicelabel;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string punto0;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string punto1;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ObscuredInt game11;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ObscuredInt game21;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static ObscuredInt game31;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static ObscuredInt game10;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static ObscuredInt game20;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static ObscuredInt game30;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static ObscuredInt setn0;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static ObscuredInt setn1;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static ObscuredBool set01;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static ObscuredBool set02;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static ObscuredBool set03;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static ObscuredBool tiebreak;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] fault;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] panelpause;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject text;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scoreboard;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name1;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string opponentname;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string specplayer1;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string specplayer2;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource Scoreaudio;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource quindicizero;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource trentazero;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource quarantazero;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource zeroquindici;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource zerotrenta;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource zeroquaranta;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource quindicipari;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource trentapari;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource quarantapari;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource quindicitrenta;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource trentaquindici;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSource quindiciquaranta;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource quarantaquindici;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource trentaquaranta;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource quarantatrenta;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioSource vantaggioserv;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource vantaggioric;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource gameaudio;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource setaudio;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource matchaudio;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject loadscene;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] setplayer1;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject[] setplayer2;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject[] setplayer3;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject[] setcpu1;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject[] setcpu2;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject[] setcpu3;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject[] punticpu;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject[] puntiplayer;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] nomeplayer;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject[] nomecpu;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static ObscuredInt punteggio0;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static ObscuredInt punteggio1;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Scene scene;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int scenex;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xC693A4", Offset = "0xC693A4", VA = "0xC693A4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xC6979C", Offset = "0xC6979C", VA = "0xC6979C", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC6A254", Offset = "0xC6A254", VA = "0xC6A254", Slot = "6")]
	[IteratorStateMachine(typeof(<ChangeName>d__62))]
	public virtual IEnumerator ChangeName()
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xC6A2C8", Offset = "0xC6A2C8", VA = "0xC6A2C8", Slot = "7")]
	[IteratorStateMachine(typeof(<Score>d__63))]
	public virtual IEnumerator Score()
	{
		return null;
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xC6A33C", Offset = "0xC6A33C", VA = "0xC6A33C", Slot = "8")]
	[IteratorStateMachine(typeof(<ScoreContinue>d__64))]
	public virtual IEnumerator ScoreContinue()
	{
		return null;
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xC6A3B0", Offset = "0xC6A3B0", VA = "0xC6A3B0", Slot = "9")]
	[IteratorStateMachine(typeof(<ScoreInstant>d__65))]
	public virtual IEnumerator ScoreInstant()
	{
		return null;
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xC6A424", Offset = "0xC6A424", VA = "0xC6A424", Slot = "10")]
	public virtual void loadlevel()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xC6B618", Offset = "0xC6B618", VA = "0xC6B618", Slot = "11")]
	public virtual void loadlevelinstant()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xC6C80C", Offset = "0xC6C80C", VA = "0xC6C80C", Slot = "12")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xC6E0DC", Offset = "0xC6E0DC", VA = "0xC6E0DC", Slot = "13")]
	[IteratorStateMachine(typeof(<onserve>d__69))]
	public virtual IEnumerator onserve()
	{
		return null;
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xC6E150", Offset = "0xC6E150", VA = "0xC6E150", Slot = "14")]
	public virtual void set1()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xC70BF4", Offset = "0xC70BF4", VA = "0xC70BF4", Slot = "15")]
	public virtual void set2()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xC73698", Offset = "0xC73698", VA = "0xC73698", Slot = "16")]
	public virtual void set3()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xC7613C", Offset = "0xC7613C", VA = "0xC7613C", Slot = "17")]
	public virtual void tiebreak1()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xC76D14", Offset = "0xC76D14", VA = "0xC76D14", Slot = "18")]
	public virtual void tiebreak2()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xC7794C", Offset = "0xC7794C", VA = "0xC7794C", Slot = "19")]
	public virtual void tiebreak3()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xC78134", Offset = "0xC78134", VA = "0xC78134")]
	public Scorevr()
	{
	}
}
[Serializable]
[Token(Token = "0x200022C")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sceneStarting;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation anim;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation anim2;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation animUI;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xC8AD9C", Offset = "0xC8AD9C", VA = "0xC8AD9C", Slot = "4")]
	public virtual void changevarscenestarting()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xC8ADC8", Offset = "0xC8ADC8", VA = "0xC8ADC8", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC8ADD4", Offset = "0xC8ADD4", VA = "0xC8ADD4", Slot = "6")]
	public virtual void FadeToClear()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC8AED4", Offset = "0xC8AED4", VA = "0xC8AED4", Slot = "7")]
	public virtual void FadeToBlack()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xC8AFD4", Offset = "0xC8AFD4", VA = "0xC8AFD4")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x200022D")]
public class ScreenFader0 : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <load>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader0 <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xC8B5B8", Offset = "0xC8B5B8", VA = "0xC8B5B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xC8B600", Offset = "0xC8B600", VA = "0xC8B600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC8B110", Offset = "0xC8B110", VA = "0xC8B110")]
		[DebuggerHidden]
		public <load>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC8B4F8", Offset = "0xC8B4F8", VA = "0xC8B4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC8B4FC", Offset = "0xC8B4FC", VA = "0xC8B4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC8B5C0", Offset = "0xC8B5C0", VA = "0xC8B5C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[CompilerGenerated]
	private sealed class <EndSceneRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader0 <>4__this;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SceneNumber;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xC8B704", Offset = "0xC8B704", VA = "0xC8B704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xC8B74C", Offset = "0xC8B74C", VA = "0xC8B74C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xC8B428", Offset = "0xC8B428", VA = "0xC8B428")]
		[DebuggerHidden]
		public <EndSceneRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xC8B608", Offset = "0xC8B608", VA = "0xC8B608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xC8B60C", Offset = "0xC8B60C", VA = "0xC8B60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xC8B70C", Offset = "0xC8B70C", VA = "0xC8B70C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image FadeImg;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeSpeed;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool sceneStarting;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperation async;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xC8AFF4", Offset = "0xC8AFF4", VA = "0xC8AFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xC8B09C", Offset = "0xC8B09C", VA = "0xC8B09C")]
	[IteratorStateMachine(typeof(<load>d__5))]
	private IEnumerator load()
	{
		return null;
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xC8B138", Offset = "0xC8B138", VA = "0xC8B138")]
	public void ActivateScene()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xC8B158", Offset = "0xC8B158", VA = "0xC8B158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xC8B2FC", Offset = "0xC8B2FC", VA = "0xC8B2FC")]
	private void FadeToClear()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xC8B1D4", Offset = "0xC8B1D4", VA = "0xC8B1D4")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xC8B168", Offset = "0xC8B168", VA = "0xC8B168")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xC8B3A4", Offset = "0xC8B3A4", VA = "0xC8B3A4")]
	[IteratorStateMachine(typeof(<EndSceneRoutine>d__11))]
	public IEnumerator EndSceneRoutine(int SceneNumber)
	{
		return null;
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xC8B450", Offset = "0xC8B450", VA = "0xC8B450")]
	public void EndScene(int SceneNumber)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xC8B4E0", Offset = "0xC8B4E0", VA = "0xC8B4E0")]
	public ScreenFader0()
	{
	}
}
[Token(Token = "0x2000230")]
public class ScreenFader1 : MonoBehaviour
{
	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <EndSceneRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader1 <>4__this;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SceneNumber;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xC8BC74", Offset = "0xC8BC74", VA = "0xC8BC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xC8BCBC", Offset = "0xC8BCBC", VA = "0xC8BCBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xC8BAA8", Offset = "0xC8BAA8", VA = "0xC8BAA8")]
		[DebuggerHidden]
		public <EndSceneRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xC8BB78", Offset = "0xC8BB78", VA = "0xC8BB78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xC8BB7C", Offset = "0xC8BB7C", VA = "0xC8BB7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xC8BC7C", Offset = "0xC8BC7C", VA = "0xC8BC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image FadeImg;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeSpeed;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool sceneStarting;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC8B754", Offset = "0xC8B754", VA = "0xC8B754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC8B7AC", Offset = "0xC8B7AC", VA = "0xC8B7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC8B97C", Offset = "0xC8B97C", VA = "0xC8B97C")]
	private void FadeToClear()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC8B828", Offset = "0xC8B828", VA = "0xC8B828")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC8B7BC", Offset = "0xC8B7BC", VA = "0xC8B7BC")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC8BA24", Offset = "0xC8BA24", VA = "0xC8BA24")]
	[IteratorStateMachine(typeof(<EndSceneRoutine>d__8))]
	public IEnumerator EndSceneRoutine(int SceneNumber)
	{
		return null;
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC8BAD0", Offset = "0xC8BAD0", VA = "0xC8BAD0")]
	public void EndScene(int SceneNumber)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC8BB60", Offset = "0xC8BB60", VA = "0xC8BB60")]
	public ScreenFader1()
	{
	}
}
[Token(Token = "0x2000232")]
public class ScreenFader2 : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	[CompilerGenerated]
	private sealed class <EndSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader2 <>4__this;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SceneNumber;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xC8C1A8", Offset = "0xC8C1A8", VA = "0xC8C1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xC8C1F0", Offset = "0xC8C1F0", VA = "0xC8C1F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xC8BFE4", Offset = "0xC8BFE4", VA = "0xC8BFE4")]
		[DebuggerHidden]
		public <EndSceneRoutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xC8C0AC", Offset = "0xC8C0AC", VA = "0xC8C0AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xC8C0B0", Offset = "0xC8C0B0", VA = "0xC8C0B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xC8C1B0", Offset = "0xC8C1B0", VA = "0xC8C1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image FadeImg;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool sceneStarting;

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC8BCC4", Offset = "0xC8BCC4", VA = "0xC8BCC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC8BD1C", Offset = "0xC8BD1C", VA = "0xC8BD1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC8BEB8", Offset = "0xC8BEB8", VA = "0xC8BEB8")]
	private void FadeToClear()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC8BD98", Offset = "0xC8BD98", VA = "0xC8BD98")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xC8BD2C", Offset = "0xC8BD2C", VA = "0xC8BD2C")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC8BF60", Offset = "0xC8BF60", VA = "0xC8BF60")]
	[IteratorStateMachine(typeof(<EndSceneRoutine>d__7))]
	public IEnumerator EndSceneRoutine(int SceneNumber)
	{
		return null;
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC8C00C", Offset = "0xC8C00C", VA = "0xC8C00C")]
	public void EndScene(int SceneNumber)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC8C09C", Offset = "0xC8C09C", VA = "0xC8C09C")]
	public ScreenFader2()
	{
	}
}
[Token(Token = "0x2000234")]
public class ScreenFaderintro : MonoBehaviour
{
	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xC8C1F8", Offset = "0xC8C1F8", VA = "0xC8C1F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xC8C23C", Offset = "0xC8C23C", VA = "0xC8C23C")]
	public ScreenFaderintro()
	{
	}
}
[Serializable]
[Token(Token = "0x2000235")]
public class Screenfaderintrovr : MonoBehaviour
{
	[Token(Token = "0x2000236")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screenfaderintrovr <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xC8D8F0", Offset = "0xC8D8F0", VA = "0xC8D8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xC8D938", Offset = "0xC8D938", VA = "0xC8D938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xC8C2B8", Offset = "0xC8C2B8", VA = "0xC8C2B8")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xC8D458", Offset = "0xC8D458", VA = "0xC8D458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xC8D45C", Offset = "0xC8D45C", VA = "0xC8D45C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xC8D8F8", Offset = "0xC8D8F8", VA = "0xC8D8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audiologo;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int savenumber;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int tempscore;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool leadpresente;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int language;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xC8C244", Offset = "0xC8C244", VA = "0xC8C244", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xC8C2E0", Offset = "0xC8C2E0", VA = "0xC8C2E0")]
	private void AdjustScoreMulti1()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xC8C538", Offset = "0xC8C538", VA = "0xC8C538")]
	private void AdjustScoreMulti2()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xC8C810", Offset = "0xC8C810", VA = "0xC8C810")]
	private void LoginPlayFab()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xC8C9F4", Offset = "0xC8C9F4", VA = "0xC8C9F4")]
	private void OnSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xC8C9F8", Offset = "0xC8C9F8", VA = "0xC8C9F8")]
	private void DownloadScore()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xC8CB28", Offset = "0xC8CB28", VA = "0xC8CB28")]
	private void OnDownloadScore(GetPlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xC8D444", Offset = "0xC8D444", VA = "0xC8D444")]
	private void OnLeaderboardUpdate(UpdatePlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xC8D448", Offset = "0xC8D448", VA = "0xC8D448")]
	private void OnDisplayNameUpdate(UpdateUserTitleDisplayNameResult result)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xC8D44C", Offset = "0xC8D44C", VA = "0xC8D44C")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xC8D450", Offset = "0xC8D450", VA = "0xC8D450")]
	public Screenfaderintrovr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000237")]
public class Screenfaderintrovr1 : MonoBehaviour
{
	[Token(Token = "0x2000238")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screenfaderintrovr1 <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xC8DB84", Offset = "0xC8DB84", VA = "0xC8DB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xC8DBCC", Offset = "0xC8DBCC", VA = "0xC8DBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC8D9B4", Offset = "0xC8D9B4", VA = "0xC8D9B4")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC8D9E4", Offset = "0xC8D9E4", VA = "0xC8D9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xC8D9E8", Offset = "0xC8D9E8", VA = "0xC8D9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xC8DB8C", Offset = "0xC8DB8C", VA = "0xC8DB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CameraRig;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xC8D940", Offset = "0xC8D940", VA = "0xC8D940", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xC8D9DC", Offset = "0xC8D9DC", VA = "0xC8D9DC")]
	public Screenfaderintrovr1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000239")]
public class Screenfaderintrovr2 : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	[CompilerGenerated]
	private sealed class <Go>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screenfaderintrovr2 <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xC8DE54", Offset = "0xC8DE54", VA = "0xC8DE54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xC8DE9C", Offset = "0xC8DE9C", VA = "0xC8DE9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xC8DD38", Offset = "0xC8DD38", VA = "0xC8DD38")]
		[DebuggerHidden]
		public <Go>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xC8DD68", Offset = "0xC8DD68", VA = "0xC8DD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC8DD6C", Offset = "0xC8DD6C", VA = "0xC8DD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC8DE5C", Offset = "0xC8DE5C", VA = "0xC8DE5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC8DBD4", Offset = "0xC8DBD4", VA = "0xC8DBD4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC8DC9C", Offset = "0xC8DC9C", VA = "0xC8DC9C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xC8DCC4", Offset = "0xC8DCC4", VA = "0xC8DCC4", Slot = "4")]
	[IteratorStateMachine(typeof(<Go>d__3))]
	public virtual IEnumerator Go()
	{
		return null;
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xC8DD60", Offset = "0xC8DD60", VA = "0xC8DD60")]
	public Screenfaderintrovr2()
	{
	}
}
[Token(Token = "0x200023B")]
public class ScreenshotMovieHD : MonoBehaviour
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int resWidth;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int resHeight;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera myCamera;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int scale;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string path;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool showPreview;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTransparent;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string folder;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int frameRate;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string realFolder;

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xC8DEA4", Offset = "0xC8DEA4", VA = "0xC8DEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xC8DF4C", Offset = "0xC8DF4C", VA = "0xC8DF4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xC8E138", Offset = "0xC8E138", VA = "0xC8E138")]
	public ScreenshotMovieHD()
	{
	}
}
[Serializable]
[Token(Token = "0x200023C")]
public class Scrollbar : MonoBehaviour
{
	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xC8E1EC", Offset = "0xC8E1EC", VA = "0xC8E1EC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xC8E2CC", Offset = "0xC8E2CC", VA = "0xC8E2CC")]
	public Scrollbar()
	{
	}
}
[Serializable]
[Token(Token = "0x200023D")]
public class Servizio : MonoBehaviour
{
	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <serve1>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Servizio <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xC8F000", Offset = "0xC8F000", VA = "0xC8F000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xC8F048", Offset = "0xC8F048", VA = "0xC8F048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xC8E8B0", Offset = "0xC8E8B0", VA = "0xC8E8B0")]
		[DebuggerHidden]
		public <serve1>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xC8E938", Offset = "0xC8E938", VA = "0xC8E938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xC8E93C", Offset = "0xC8E93C", VA = "0xC8E93C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xC8F008", Offset = "0xC8F008", VA = "0xC8F008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool prima;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool serve;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int lancio;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool up;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool lunch;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject male;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject target;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC8E2D4", Offset = "0xC8E2D4", VA = "0xC8E2D4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC8E814", Offset = "0xC8E814", VA = "0xC8E814", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC8E83C", Offset = "0xC8E83C", VA = "0xC8E83C", Slot = "6")]
	[IteratorStateMachine(typeof(<serve1>d__11))]
	public virtual IEnumerator serve1()
	{
		return null;
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC8E8D8", Offset = "0xC8E8D8", VA = "0xC8E8D8")]
	static Servizio()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC8E930", Offset = "0xC8E930", VA = "0xC8E930")]
	public Servizio()
	{
	}
}
[Serializable]
[Token(Token = "0x200023F")]
public class Servizio0 : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <Serve0>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Servizio0 <>4__this;

		[Token(Token = "0x17000163")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xC8FA1C", Offset = "0xC8FA1C", VA = "0xC8FA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xC8FA64", Offset = "0xC8FA64", VA = "0xC8FA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC8F608", Offset = "0xC8F608", VA = "0xC8F608")]
		[DebuggerHidden]
		public <Serve0>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xC8F684", Offset = "0xC8F684", VA = "0xC8F684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xC8F688", Offset = "0xC8F688", VA = "0xC8F688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xC8FA24", Offset = "0xC8FA24", VA = "0xC8FA24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool prima;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool serve;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool lancio;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject male;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ball;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject player0;

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xC8F050", Offset = "0xC8F050", VA = "0xC8F050", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xC8F594", Offset = "0xC8F594", VA = "0xC8F594", Slot = "5")]
	[IteratorStateMachine(typeof(<Serve0>d__9))]
	public virtual IEnumerator Serve0()
	{
		return null;
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC8F630", Offset = "0xC8F630", VA = "0xC8F630")]
	static Servizio0()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC8F67C", Offset = "0xC8F67C", VA = "0xC8F67C")]
	public Servizio0()
	{
	}
}
[Serializable]
[Token(Token = "0x2000241")]
public class Servizio0vr : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	[CompilerGenerated]
	private sealed class <Serve0>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Servizio0vr <>4__this;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xC903C0", Offset = "0xC903C0", VA = "0xC903C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xC90408", Offset = "0xC90408", VA = "0xC90408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xC90040", Offset = "0xC90040", VA = "0xC90040")]
		[DebuggerHidden]
		public <Serve0>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC900BC", Offset = "0xC900BC", VA = "0xC900BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xC900C0", Offset = "0xC900C0", VA = "0xC900C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC903C8", Offset = "0xC903C8", VA = "0xC903C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool prima;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool serve;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool lancio;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform handop;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject male;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody ballrigidbody;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform balltransform;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject player0;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xC8FA6C", Offset = "0xC8FA6C", VA = "0xC8FA6C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xC8FD0C", Offset = "0xC8FD0C", VA = "0xC8FD0C")]
	public void StartServe()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xC8FFCC", Offset = "0xC8FFCC", VA = "0xC8FFCC", Slot = "5")]
	[IteratorStateMachine(typeof(<Serve0>d__12))]
	public virtual IEnumerator Serve0()
	{
		return null;
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xC90068", Offset = "0xC90068", VA = "0xC90068")]
	static Servizio0vr()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xC900B4", Offset = "0xC900B4", VA = "0xC900B4")]
	public Servizio0vr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000243")]
public class Servizio1 : MonoBehaviour
{
	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Servizio1 <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xC90B98", Offset = "0xC90B98", VA = "0xC90B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xC90BE0", Offset = "0xC90BE0", VA = "0xC90BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC90484", Offset = "0xC90484", VA = "0xC90484")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC905D0", Offset = "0xC905D0", VA = "0xC905D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC905D4", Offset = "0xC905D4", VA = "0xC905D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xC90BA0", Offset = "0xC90BA0", VA = "0xC90BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <serve1>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Servizio1 <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xC912B0", Offset = "0xC912B0", VA = "0xC912B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xC912F8", Offset = "0xC912F8", VA = "0xC912F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xC90548", Offset = "0xC90548", VA = "0xC90548")]
		[DebuggerHidden]
		public <serve1>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xC90BE8", Offset = "0xC90BE8", VA = "0xC90BE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xC90BEC", Offset = "0xC90BEC", VA = "0xC90BEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xC912B8", Offset = "0xC912B8", VA = "0xC912B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool prima;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool serve;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int lancio;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool up;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool lunch;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject male;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject target;

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xC90410", Offset = "0xC90410", VA = "0xC90410", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__9))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xC904AC", Offset = "0xC904AC", VA = "0xC904AC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xC904D4", Offset = "0xC904D4", VA = "0xC904D4", Slot = "6")]
	[IteratorStateMachine(typeof(<serve1>d__11))]
	public virtual IEnumerator serve1()
	{
		return null;
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xC90570", Offset = "0xC90570", VA = "0xC90570")]
	static Servizio1()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xC905C8", Offset = "0xC905C8", VA = "0xC905C8")]
	public Servizio1()
	{
	}
}
[Token(Token = "0x2000246")]
public class Simulation : MonoBehaviour
{
	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Scene mainScene;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Scene physicsScene;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PhysicsScene physicsSim;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GameObject balltoclone;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject court;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject net1;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject net2;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject ballsim;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject courtsim;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject netsim1;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject netsim2;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rigidbody ballrigidbody;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Vector3 posizionepalla1;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static Vector3 posizionepalla2;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Vector3 force;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static Vector3 forcedrag;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int count;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static int campodipartenza;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static List<Vector3> impact1ground;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static List<Vector3> impact0volley;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static List<Vector3> impact0smash;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static List<Vector3> impact0checksmash;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xC91300", Offset = "0xC91300", VA = "0xC91300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xC914B8", Offset = "0xC914B8", VA = "0xC914B8")]
	public static void Simulate(Vector3 simposition, Quaternion simrotation, Vector3 simvelocity, Vector3 simangularvelocity)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xC92A88", Offset = "0xC92A88", VA = "0xC92A88")]
	public static void Posizione1()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xC92B60", Offset = "0xC92B60", VA = "0xC92B60")]
	public static void Posizione2()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xC92C38", Offset = "0xC92C38", VA = "0xC92C38")]
	public Simulation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000247")]
public class Sky : MonoBehaviour
{
	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xC92D5C", Offset = "0xC92D5C", VA = "0xC92D5C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xC92E6C", Offset = "0xC92E6C", VA = "0xC92E6C")]
	public Sky()
	{
	}
}
[Serializable]
[Token(Token = "0x2000248")]
public class Smashsettings : MonoBehaviour
{
	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int smash;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xC92E74", Offset = "0xC92E74", VA = "0xC92E74", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xC92F6C", Offset = "0xC92F6C", VA = "0xC92F6C", Slot = "5")]
	public virtual void Smashon()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xC92FDC", Offset = "0xC92FDC", VA = "0xC92FDC", Slot = "6")]
	public virtual void Smashoff()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xC93048", Offset = "0xC93048", VA = "0xC93048", Slot = "7")]
	public virtual void Smashchange()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xC9314C", Offset = "0xC9314C", VA = "0xC9314C")]
	public Smashsettings()
	{
	}
}
[Token(Token = "0x2000249")]
public class SpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cameraviewspectator;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cameraspectatorprefab1;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cameraspectatorprefab2;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cameraspectatorprefab3;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Playertrack;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xC93154", Offset = "0xC93154", VA = "0xC93154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xC934EC", Offset = "0xC934EC", VA = "0xC934EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xC93838", Offset = "0xC93838", VA = "0xC93838")]
	public SpectatorCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x200024A")]
public class Speedless : MonoBehaviour
{
	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xC93840", Offset = "0xC93840", VA = "0xC93840", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xC93964", Offset = "0xC93964", VA = "0xC93964", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xC93C04", Offset = "0xC93C04", VA = "0xC93C04")]
	public Speedless()
	{
	}
}
[Serializable]
[Token(Token = "0x200024B")]
public class Speedplus : MonoBehaviour
{
	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xC93C0C", Offset = "0xC93C0C", VA = "0xC93C0C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xC93D30", Offset = "0xC93D30", VA = "0xC93D30", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xC93FD8", Offset = "0xC93FD8", VA = "0xC93FD8")]
	public Speedplus()
	{
	}
}
[Serializable]
[Token(Token = "0x200024C")]
public class Speedsettings : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float Speedballtrain;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider Speedballtrainslider;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool random;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject on;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject off;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image sliderimage;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xC93FE0", Offset = "0xC93FE0", VA = "0xC93FE0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xC9418C", Offset = "0xC9418C", VA = "0xC9418C", Slot = "5")]
	public virtual void Speedballtrainchange()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xC942C4", Offset = "0xC942C4", VA = "0xC942C4", Slot = "6")]
	public virtual void Speedballtrainrandom()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xC94438", Offset = "0xC94438", VA = "0xC94438")]
	static Speedsettings()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xC94484", Offset = "0xC94484", VA = "0xC94484")]
	public Speedsettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200024D")]
public class Stadionuovocilindro1 : MonoBehaviour
{
	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xC9448C", Offset = "0xC9448C", VA = "0xC9448C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xC9459C", Offset = "0xC9459C", VA = "0xC9459C")]
	public Stadionuovocilindro1()
	{
	}
}
[Serializable]
[Token(Token = "0x200024E")]
public class Stadionuovocilindro2 : MonoBehaviour
{
	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xC945A4", Offset = "0xC945A4", VA = "0xC945A4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xC94708", Offset = "0xC94708", VA = "0xC94708")]
	public Stadionuovocilindro2()
	{
	}
}
[Serializable]
[Token(Token = "0x200024F")]
public class Stadionuovocilindro3 : MonoBehaviour
{
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xC94710", Offset = "0xC94710", VA = "0xC94710", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xC947C0", Offset = "0xC947C0", VA = "0xC947C0")]
	public Stadionuovocilindro3()
	{
	}
}
[Serializable]
[Token(Token = "0x2000250")]
public class Stadionuovocilindro4 : MonoBehaviour
{
	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xC947C8", Offset = "0xC947C8", VA = "0xC947C8", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xC9492C", Offset = "0xC9492C", VA = "0xC9492C")]
	public Stadionuovocilindro4()
	{
	}
}
[Serializable]
[Token(Token = "0x2000251")]
public class Stadionuovoselect : MonoBehaviour
{
	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xC94934", Offset = "0xC94934", VA = "0xC94934", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xC94CE4", Offset = "0xC94CE4", VA = "0xC94CE4")]
	public Stadionuovoselect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000252")]
public class Stadioslamselect : MonoBehaviour
{
	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xC94CEC", Offset = "0xC94CEC", VA = "0xC94CEC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xC95048", Offset = "0xC95048", VA = "0xC95048")]
	public Stadioslamselect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000253")]
public class Stadiovecchioselect : MonoBehaviour
{
	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xC95050", Offset = "0xC95050", VA = "0xC95050", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xC95304", Offset = "0xC95304", VA = "0xC95304")]
	public Stadiovecchioselect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000254")]
public class Stadium1 : MonoBehaviour
{
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xC9530C", Offset = "0xC9530C", VA = "0xC9530C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xC95474", Offset = "0xC95474", VA = "0xC95474")]
	public Stadium1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000255")]
public class Stadium2 : MonoBehaviour
{
	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xC9547C", Offset = "0xC9547C", VA = "0xC9547C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xC955E4", Offset = "0xC955E4", VA = "0xC955E4")]
	public Stadium2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000256")]
public class Stadiumchair : MonoBehaviour
{
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xC955EC", Offset = "0xC955EC", VA = "0xC955EC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xC95D60", Offset = "0xC95D60", VA = "0xC95D60")]
	public Stadiumchair()
	{
	}
}
[Serializable]
[Token(Token = "0x2000257")]
public class Stadiumchair1 : MonoBehaviour
{
	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xC95D68", Offset = "0xC95D68", VA = "0xC95D68", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xC964DC", Offset = "0xC964DC", VA = "0xC964DC")]
	public Stadiumchair1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000258")]
public class Stadiumchairin : MonoBehaviour
{
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xC964E4", Offset = "0xC964E4", VA = "0xC964E4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xC965E8", Offset = "0xC965E8", VA = "0xC965E8")]
	public Stadiumchairin()
	{
	}
}
[Serializable]
[Token(Token = "0x2000259")]
public class Stadiumchairout : MonoBehaviour
{
	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xC965F0", Offset = "0xC965F0", VA = "0xC965F0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xC966F8", Offset = "0xC966F8", VA = "0xC966F8")]
	public Stadiumchairout()
	{
	}
}
[Serializable]
[Token(Token = "0x200025A")]
public class Stadiumground : MonoBehaviour
{
	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xC96700", Offset = "0xC96700", VA = "0xC96700", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xC96E74", Offset = "0xC96E74", VA = "0xC96E74")]
	public Stadiumground()
	{
	}
}
[Serializable]
[Token(Token = "0x200025B")]
public class Stadiumnet : MonoBehaviour
{
	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xC96E7C", Offset = "0xC96E7C", VA = "0xC96E7C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xC97514", Offset = "0xC97514", VA = "0xC97514")]
	public Stadiumnet()
	{
	}
}
[Serializable]
[Token(Token = "0x200025C")]
public class Stadiumslamtexture : MonoBehaviour
{
	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xC9751C", Offset = "0xC9751C", VA = "0xC9751C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xC9777C", Offset = "0xC9777C", VA = "0xC9777C")]
	public Stadiumslamtexture()
	{
	}
}
[Serializable]
[Token(Token = "0x200025D")]
public class Stadiumstruttura : MonoBehaviour
{
	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xC97784", Offset = "0xC97784", VA = "0xC97784", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xC97EF8", Offset = "0xC97EF8", VA = "0xC97EF8")]
	public Stadiumstruttura()
	{
	}
}
[Serializable]
[Token(Token = "0x200025E")]
public class Stadiumstruttura1 : MonoBehaviour
{
	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xC97F00", Offset = "0xC97F00", VA = "0xC97F00", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xC98598", Offset = "0xC98598", VA = "0xC98598")]
	public Stadiumstruttura1()
	{
	}
}
[Serializable]
[Token(Token = "0x200025F")]
public class Stadiumstruttura2 : MonoBehaviour
{
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xC985A0", Offset = "0xC985A0", VA = "0xC985A0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xC98BD0", Offset = "0xC98BD0", VA = "0xC98BD0")]
	public Stadiumstruttura2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000260")]
public class Statistiche : MonoBehaviour
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player1;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int aces;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int acesop;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float primaservizio;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float primaservizioop;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float secondaservizio;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float secondaservizioop;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int doppiofallo;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int doppiofalloop;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int winner;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int winnerop;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int unferror;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int unferrorop;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int fastestserve;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int fastestserveop;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite tour1;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite tour2;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite tour3;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite tour4;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite tour5;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite tour6;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tour7;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite tour8;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite tour9;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite tour10;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite tour11;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite tour12;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite tour13;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite tour14;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite tour15;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int resultsets;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float startTime;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float calcTime;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string textTime;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] timer;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int minutes;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int seconds;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int secondsprev;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static float loadedTime;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float savedTime;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Scene scene;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xC98BD8", Offset = "0xC98BD8", VA = "0xC98BD8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xC98C20", Offset = "0xC98C20", VA = "0xC98C20", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xC98CFC", Offset = "0xC98CFC", VA = "0xC98CFC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xC98EB0", Offset = "0xC98EB0", VA = "0xC98EB0", Slot = "5")]
	public virtual void ace()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xC99074", Offset = "0xC99074", VA = "0xC99074", Slot = "6")]
	public virtual void aceop()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xC99238", Offset = "0xC99238", VA = "0xC99238", Slot = "7")]
	public virtual void prima()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xC994F0", Offset = "0xC994F0", VA = "0xC994F0", Slot = "8")]
	public virtual void primaop()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xC99770", Offset = "0xC99770", VA = "0xC99770", Slot = "9")]
	public virtual void seconda()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xC999F0", Offset = "0xC999F0", VA = "0xC999F0", Slot = "10")]
	public virtual void secondaspeed()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xC99C90", Offset = "0xC99C90", VA = "0xC99C90", Slot = "11")]
	public virtual void secondaop()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xC99F10", Offset = "0xC99F10", VA = "0xC99F10", Slot = "12")]
	public virtual void doppio()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xC9A0D4", Offset = "0xC9A0D4", VA = "0xC9A0D4", Slot = "13")]
	public virtual void doppioop()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xC9A298", Offset = "0xC9A298", VA = "0xC9A298", Slot = "14")]
	public virtual void vincente()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xC9A45C", Offset = "0xC9A45C", VA = "0xC9A45C", Slot = "15")]
	public virtual void vincenteop()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xC9A620", Offset = "0xC9A620", VA = "0xC9A620", Slot = "16")]
	public virtual void errore()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xC9A7E4", Offset = "0xC9A7E4", VA = "0xC9A7E4", Slot = "17")]
	public virtual void erroreop()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xC9A9A8", Offset = "0xC9A9A8", VA = "0xC9A9A8", Slot = "18")]
	public virtual void printstats()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xC9FAB0", Offset = "0xC9FAB0", VA = "0xC9FAB0", Slot = "19")]
	public virtual void printstatsmulti()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xCA2148", Offset = "0xCA2148", VA = "0xCA2148")]
	public Statistiche()
	{
	}
}
[Serializable]
[Token(Token = "0x2000261")]
public class Statistiche1 : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Statistiche1 <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xCB5C20", Offset = "0xCB5C20", VA = "0xCB5C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xCB5C68", Offset = "0xCB5C68", VA = "0xCB5C68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xCB4E68", Offset = "0xCB4E68", VA = "0xCB4E68")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xCB4E98", Offset = "0xCB4E98", VA = "0xCB4E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xCB4E9C", Offset = "0xCB4E9C", VA = "0xCB4E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xCB5C28", Offset = "0xCB5C28", VA = "0xCB5C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite tour1;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite tour2;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite tour3;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite tour4;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite tour5;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite tour6;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite tour7;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tour8;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite tour9;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite tour10;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite tour11;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite tour12;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite tour13;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AsyncOperation op;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xCB4DF4", Offset = "0xCB4DF4", VA = "0xCB4DF4", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__14))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xCB4E90", Offset = "0xCB4E90", VA = "0xCB4E90")]
	public Statistiche1()
	{
	}
}
[Token(Token = "0x2000263")]
public class SteamVR_ControllerDx : MonoBehaviour
{
	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Action_Boolean Menu;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_Action_Boolean Trigger;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SteamVR_Action_Vibration Haptic;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Inputmodulesx;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Inputmoduledx;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject VrInputModule;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Exitbutton;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Scene scene;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int scenex;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FixedJoint joint;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject CameraRig;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int vivetrackertemp;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public SteamVR_Input_Sources hand;

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xCB5C70", Offset = "0xCB5C70", VA = "0xCB5C70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xCB5CF8", Offset = "0xCB5CF8", VA = "0xCB5CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xCB5D98", Offset = "0xCB5D98", VA = "0xCB5D98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xCB6254", Offset = "0xCB6254", VA = "0xCB6254")]
	public SteamVR_ControllerDx()
	{
	}
}
[Token(Token = "0x2000264")]
public class SteamVR_ControllerSx : MonoBehaviour
{
	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Action_Boolean Menu;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FixedJoint joint;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CameraRig;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Exitbutton;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SteamVR_Action_Boolean Trigger;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Inputmodulesx;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Inputmoduledx;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject VrInputModule;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int vivetrackertemp;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Scene scene;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int scenex;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public SteamVR_Input_Sources hand;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xCB625C", Offset = "0xCB625C", VA = "0xCB625C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xCB62E4", Offset = "0xCB62E4", VA = "0xCB62E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xCB6384", Offset = "0xCB6384", VA = "0xCB6384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xCB6744", Offset = "0xCB6744", VA = "0xCB6744")]
	public SteamVR_ControllerSx()
	{
	}
}
[Token(Token = "0x2000265")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xCB674C", Offset = "0xCB674C", VA = "0xCB674C")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xCB680C", Offset = "0xCB680C", VA = "0xCB680C")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xCB6880", Offset = "0xCB6880", VA = "0xCB6880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xCB6950", Offset = "0xCB6950", VA = "0xCB6950")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xCB6990", Offset = "0xCB6990", VA = "0xCB6990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xCB6B98", Offset = "0xCB6B98", VA = "0xCB6B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xCB6C64", Offset = "0xCB6C64", VA = "0xCB6C64")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xCB6F08", Offset = "0xCB6F08", VA = "0xCB6F08")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x2000266")]
public class SteamVR_Servizio : MonoBehaviour
{
	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Ball;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPointsx;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody attachPointdx;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Scoreboard;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Player1;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator handAnimatorsx;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator handAnimatordx;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator handAnimator;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject handsx;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject handdx;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject frameratedisplay;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NavMeshAgent agent;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 destination;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool corsamanuale;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int runcorsa;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 destinationvector;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 moveDirside;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 moveDirForward;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject go;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform origin;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float fps;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Scene scene;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int scenex;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Canvasopt;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SteamVR_Action_Boolean Menu;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SteamVR_Action_Boolean Trigger;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SteamVR_Action_Boolean TouchPad;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SteamVR_Action_Vector2 TouchPos;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SteamVR_Action_Pose Pose;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private FixedJoint joint;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform Controllerdirection;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool checkframerate;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float deltaTime;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int lowframe;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int highframe;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject manager;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SteamVR_Input_Sources hand;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Vector3 prevVel;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 prevAngVel;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xCB6F88", Offset = "0xCB6F88", VA = "0xCB6F88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xCB7298", Offset = "0xCB7298", VA = "0xCB7298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xCB73E0", Offset = "0xCB73E0", VA = "0xCB73E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xCB9AFC", Offset = "0xCB9AFC", VA = "0xCB9AFC")]
	public SteamVR_Servizio()
	{
	}
}
[Token(Token = "0x2000267")]
[RequireComponent(typeof(SteamVR_TrackedObject))]
public class SteamVR_Serviziodx : MonoBehaviour
{
	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Ball;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody attachPoint1;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Player1;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Scoreboard;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Scene scene;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FixedJoint joint;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SteamVR_Action_Boolean Trigger;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SteamVR_Action_Boolean TouchPad;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SteamVR_Action_Pose Pose;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CameraRig;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SteamVR_Input_Sources hand;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xCB9B04", Offset = "0xCB9B04", VA = "0xCB9B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xCB9BFC", Offset = "0xCB9BFC", VA = "0xCB9BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xCB9C58", Offset = "0xCB9C58", VA = "0xCB9C58")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xCBA974", Offset = "0xCBA974", VA = "0xCBA974")]
	public SteamVR_Serviziodx()
	{
	}
}
[Serializable]
[Token(Token = "0x2000268")]
public class Step1 : MonoBehaviour
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xCBA97C", Offset = "0xCBA97C", VA = "0xCBA97C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xCBAA88", Offset = "0xCBAA88", VA = "0xCBAA88", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xCBABA0", Offset = "0xCBABA0", VA = "0xCBABA0", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xCBAF88", Offset = "0xCBAF88", VA = "0xCBAF88")]
	public Step1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000269")]
public class Step2 : MonoBehaviour
{
	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xCBAF90", Offset = "0xCBAF90", VA = "0xCBAF90", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xCBB09C", Offset = "0xCBB09C", VA = "0xCBB09C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xCBB1B4", Offset = "0xCBB1B4", VA = "0xCBB1B4", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xCBB59C", Offset = "0xCBB59C", VA = "0xCBB59C")]
	public Step2()
	{
	}
}
[Serializable]
[Token(Token = "0x200026A")]
public class Step3 : MonoBehaviour
{
	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xCBB5A4", Offset = "0xCBB5A4", VA = "0xCBB5A4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xCBB6B0", Offset = "0xCBB6B0", VA = "0xCBB6B0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xCBB7C8", Offset = "0xCBB7C8", VA = "0xCBB7C8", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xCBBBB0", Offset = "0xCBBBB0", VA = "0xCBBBB0")]
	public Step3()
	{
	}
}
[Serializable]
[Token(Token = "0x200026B")]
public class Step4 : MonoBehaviour
{
	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fadingin;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool fadingout;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xCBBBB8", Offset = "0xCBBBB8", VA = "0xCBBBB8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xCBBCC4", Offset = "0xCBBCC4", VA = "0xCBBCC4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xCBBDDC", Offset = "0xCBBDDC", VA = "0xCBBDDC", Slot = "6")]
	public virtual void select()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xCBC1FC", Offset = "0xCBC1FC", VA = "0xCBC1FC")]
	public Step4()
	{
	}
}
[Serializable]
[Token(Token = "0x200026C")]
public class Stop : MonoBehaviour
{
	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 velocitapalla;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource musicapausa;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stop;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool musicastop;

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xCBC204", Offset = "0xCBC204", VA = "0xCBC204", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xCBC20C", Offset = "0xCBC20C", VA = "0xCBC20C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xCBC78C", Offset = "0xCBC78C", VA = "0xCBC78C", Slot = "6")]
	public virtual void stopvar()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xCBC9D4", Offset = "0xCBC9D4", VA = "0xCBC9D4")]
	public Stop()
	{
	}
}
[Serializable]
[Token(Token = "0x200026D")]
public class Stop1 : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	[CompilerGenerated]
	private sealed class <musicastop>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stop1 <>4__this;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xCBD350", Offset = "0xCBD350", VA = "0xCBD350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xCBD398", Offset = "0xCBD398", VA = "0xCBD398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xCBD190", Offset = "0xCBD190", VA = "0xCBD190")]
		[DebuggerHidden]
		public <musicastop>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xCBD1C0", Offset = "0xCBD1C0", VA = "0xCBD1C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xCBD1C4", Offset = "0xCBD1C4", VA = "0xCBD1C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xCBD358", Offset = "0xCBD358", VA = "0xCBD358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image gui;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 velocitapalla;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource musicapausa;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite play;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite pause;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject easytouch;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xCBC9DC", Offset = "0xCBC9DC", VA = "0xCBC9DC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xCBCA34", Offset = "0xCBCA34", VA = "0xCBCA34", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xCBD11C", Offset = "0xCBD11C", VA = "0xCBD11C", Slot = "6")]
	[IteratorStateMachine(typeof(<musicastop>d__8))]
	public virtual IEnumerator musicastop()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xCBD1B8", Offset = "0xCBD1B8", VA = "0xCBD1B8")]
	public Stop1()
	{
	}
}
[Serializable]
[Token(Token = "0x200026F")]
public class Stopm : MonoBehaviour
{
	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xCBD3A0", Offset = "0xCBD3A0", VA = "0xCBD3A0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xCBD3A4", Offset = "0xCBD3A4", VA = "0xCBD3A4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xCBD3A8", Offset = "0xCBD3A8", VA = "0xCBD3A8")]
	public Stopm()
	{
	}
}
[Serializable]
[Token(Token = "0x2000270")]
public class Stoptraining : MonoBehaviour
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 velocitapalla;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource musicapausa;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stop;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool musicastop;

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xCBD3B0", Offset = "0xCBD3B0", VA = "0xCBD3B0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xCBD3B8", Offset = "0xCBD3B8", VA = "0xCBD3B8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xCBD828", Offset = "0xCBD828", VA = "0xCBD828", Slot = "6")]
	public virtual void stopvar()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xCBDADC", Offset = "0xCBDADC", VA = "0xCBDADC")]
	public Stoptraining()
	{
	}
}
[Serializable]
[Token(Token = "0x2000271")]
public class Stopvr : MonoBehaviour
{
	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <Waitpermission>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xCBF668", Offset = "0xCBF668", VA = "0xCBF668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xCBF6B0", Offset = "0xCBF6B0", VA = "0xCBF6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xCBF2F8", Offset = "0xCBF2F8", VA = "0xCBF2F8")]
		[DebuggerHidden]
		public <Waitpermission>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xCBF598", Offset = "0xCBF598", VA = "0xCBF598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xCBF59C", Offset = "0xCBF59C", VA = "0xCBF59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xCBF670", Offset = "0xCBF670", VA = "0xCBF670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 velocitapalla;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource musicapausa;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stop;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool musicastop;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject racchetta;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject inputmodulesx;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject inputmoduledx;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Transform controller;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 resetposition;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Quaternion resetrotation;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Transform oldparent;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject handdx;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject handsx;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Button buttoncalibrate;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button buttoncalibratetest;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool permission;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject canvaspause;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Scene scene;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Textcalibrate;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Resume;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Exit;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject Smash;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Timespeed;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject Speed;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Calibratebutton;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Reset;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Random;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Hand;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Space;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Hellorealbutton;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Spectators;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public static bool timestop;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xCBDAE4", Offset = "0xCBDAE4", VA = "0xCBDAE4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xCB619C", Offset = "0xCB619C", VA = "0xCB619C")]
	public static void Trigger()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xCBDBBC", Offset = "0xCBDBBC", VA = "0xCBDBBC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xCBE264", Offset = "0xCBE264", VA = "0xCBE264", Slot = "6")]
	public virtual void stopvar()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xCBE4E8", Offset = "0xCBE4E8", VA = "0xCBE4E8")]
	public void HelloReal()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xCBE834", Offset = "0xCBE834", VA = "0xCBE834", Slot = "7")]
	public virtual void Calibrate()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xCBF298", Offset = "0xCBF298", VA = "0xCBF298")]
	[IteratorStateMachine(typeof(<Waitpermission>d__38))]
	private IEnumerator Waitpermission()
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xCBF320", Offset = "0xCBF320", VA = "0xCBF320", Slot = "8")]
	public virtual void Resetrotation()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xCBF590", Offset = "0xCBF590", VA = "0xCBF590")]
	public Stopvr()
	{
	}
}
[Serializable]
[Token(Token = "0x2000273")]
public class Strengthless : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xCBF6B8", Offset = "0xCBF6B8", VA = "0xCBF6B8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xCBF7DC", Offset = "0xCBF7DC", VA = "0xCBF7DC", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xCBFA7C", Offset = "0xCBFA7C", VA = "0xCBFA7C")]
	public Strengthless()
	{
	}
}
[Serializable]
[Token(Token = "0x2000274")]
public class Strengthplus : MonoBehaviour
{
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject energyBar;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xCBFA84", Offset = "0xCBFA84", VA = "0xCBFA84", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xCBFBA8", Offset = "0xCBFBA8", VA = "0xCBFBA8", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xCBFE50", Offset = "0xCBFE50", VA = "0xCBFE50")]
	public Strengthplus()
	{
	}
}
[Serializable]
[Token(Token = "0x2000275")]
public class Swipeicon : MonoBehaviour
{
	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xCBFE58", Offset = "0xCBFE58", VA = "0xCBFE58", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xCC0024", Offset = "0xCC0024", VA = "0xCC0024")]
	public Swipeicon()
	{
	}
}
[Token(Token = "0x2000276")]
public class SyncBallPositionPhoton : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000277")]
	[CompilerGenerated]
	private sealed class <Disconnect>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBallPositionPhoton <>4__this;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xCCF028", Offset = "0xCCF028", VA = "0xCCF028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xCCF070", Offset = "0xCCF070", VA = "0xCCF070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xCCD578", Offset = "0xCCD578", VA = "0xCCD578")]
		[DebuggerHidden]
		public <Disconnect>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xCCD5A0", Offset = "0xCCD5A0", VA = "0xCCD5A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xCCD5A4", Offset = "0xCCD5A4", VA = "0xCCD5A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xCCF030", Offset = "0xCCF030", VA = "0xCCF030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private sealed class <DisconnectTimer>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBallPositionPhoton <>4__this;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xCD0164", Offset = "0xCD0164", VA = "0xCD0164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xCD01AC", Offset = "0xCD01AC", VA = "0xCD01AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xCCF078", Offset = "0xCCF078", VA = "0xCCF078")]
		[DebuggerHidden]
		public <DisconnectTimer>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xCCF0A0", Offset = "0xCCF0A0", VA = "0xCCF0A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xCCF0A4", Offset = "0xCCF0A4", VA = "0xCCF0A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xCD016C", Offset = "0xCD016C", VA = "0xCD016C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <CallCharacterFromOthers>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBallPositionPhoton <>4__this;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xCD0418", Offset = "0xCD0418", VA = "0xCD0418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xCD0460", Offset = "0xCD0460", VA = "0xCD0460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xCD01B4", Offset = "0xCD01B4", VA = "0xCD01B4")]
		[DebuggerHidden]
		public <CallCharacterFromOthers>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xCD01DC", Offset = "0xCD01DC", VA = "0xCD01DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xCD01E0", Offset = "0xCD01E0", VA = "0xCD01E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xCD0420", Offset = "0xCD0420", VA = "0xCD0420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[CompilerGenerated]
	private sealed class <SendCharacterToServer>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBallPositionPhoton <>4__this;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int resend;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xCD08CC", Offset = "0xCD08CC", VA = "0xCD08CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xCD0914", Offset = "0xCD0914", VA = "0xCD0914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xCD0468", Offset = "0xCD0468", VA = "0xCD0468")]
		[DebuggerHidden]
		public <SendCharacterToServer>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xCD0490", Offset = "0xCD0490", VA = "0xCD0490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xCD0494", Offset = "0xCD0494", VA = "0xCD0494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xCD08D4", Offset = "0xCD08D4", VA = "0xCD08D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027B")]
	[CompilerGenerated]
	private sealed class <SendCharacterToClient>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncBallPositionPhoton <>4__this;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int resend;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xCD0D80", Offset = "0xCD0D80", VA = "0xCD0D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xCD0DC8", Offset = "0xCD0DC8", VA = "0xCD0DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xCD091C", Offset = "0xCD091C", VA = "0xCD091C")]
		[DebuggerHidden]
		public <SendCharacterToClient>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xCD0944", Offset = "0xCD0944", VA = "0xCD0944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xCD0948", Offset = "0xCD0948", VA = "0xCD0948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xCD0D88", Offset = "0xCD0D88", VA = "0xCD0D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource hitsound0;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource hitsound1;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject player1;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject player0;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject Ball;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody ballrigidbody;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] nomeplayer;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] nomecpu;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string name1;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string opponentname;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject ground;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObscuredInt speedserving;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject[] speedserve;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Scene scene;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhotonView photonViewpl;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PhotonView BallPhotonView;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PhotonRigidbodyView BallPhotonRigidbodyView;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ObscuredInt rankedmatchtemp;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ObscuredInt tempscore;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ObscuredInt trailtemp;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int speedtemp;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool goahead;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xCC002C", Offset = "0xCC002C", VA = "0xCC002C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xCC02B8", Offset = "0xCC02B8", VA = "0xCC02B8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xCC05A8", Offset = "0xCC05A8", VA = "0xCC05A8")]
	private void LoginPlayFab()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xCC1424", Offset = "0xCC1424", VA = "0xCC1424")]
	private void OnSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xCC1428", Offset = "0xCC1428", VA = "0xCC1428")]
	private void OnLeaderboardUpdate(UpdatePlayerStatisticsResult result)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xCC14A0", Offset = "0xCC14A0", VA = "0xCC14A0")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xCC1540", Offset = "0xCC1540", VA = "0xCC1540")]
	[IteratorStateMachine(typeof(<Disconnect>d__28))]
	public IEnumerator Disconnect()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xCC15B4", Offset = "0xCC15B4", VA = "0xCC15B4")]
	[IteratorStateMachine(typeof(<DisconnectTimer>d__29))]
	public IEnumerator DisconnectTimer()
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xCC1628", Offset = "0xCC1628", VA = "0xCC1628")]
	public void RestartMatch()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xCC3494", Offset = "0xCC3494", VA = "0xCC3494")]
	[PunRPC]
	public void RpcOpponentWin()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xCC3B98", Offset = "0xCC3B98", VA = "0xCC3B98")]
	[PunRPC]
	public void RpcOpponentLose()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xCC0A34", Offset = "0xCC0A34", VA = "0xCC0A34")]
	public void SendOrderToCallToSpectator()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xCC42A0", Offset = "0xCC42A0", VA = "0xCC42A0")]
	[PunRPC]
	public void RpcSendOrderToCallToSpectator()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xCC13B0", Offset = "0xCC13B0", VA = "0xCC13B0")]
	[IteratorStateMachine(typeof(<CallCharacterFromOthers>d__35))]
	private IEnumerator CallCharacterFromOthers()
	{
		return null;
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xCC4B10", Offset = "0xCC4B10", VA = "0xCC4B10")]
	[PunRPC]
	public void RpcCallCharacterFromOthers()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xCC4B70", Offset = "0xCC4B70", VA = "0xCC4B70")]
	public void SendCharacterToSpectator()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xCC5E38", Offset = "0xCC5E38", VA = "0xCC5E38")]
	[PunRPC]
	public void RpcSendCharacterToSpectator(bool server, int scenacaricata, int scena, string name, int choosehandclient, int vivetrackerclient, int headsclient, int outfitclient, int racketclient, int player, float time, int counter0, int counter1, int dentro0rimbalzo, int dentro1rimbalzo, bool set01, bool set02, bool set03, string punto0, string punto1, int game11, int game21, int game31, int game10, int game20, int game30, int setn0, int setn1, int punteggio0, int punteggio1, bool tiebreak, bool onservice, bool onservicelabel, int aces, int acesop, float primaservizio, float primaservizioop, float secondaservizio, float secondaservizioop, int doppiofallo, int doppiofalloop, int winner, int winnerop, int unferror, int unferrorop, int fastestserve, int fastestserveop, int resultsets)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xCC6860", Offset = "0xCC6860", VA = "0xCC6860")]
	public void SendScoreToSpectator()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xCC776C", Offset = "0xCC776C", VA = "0xCC776C")]
	[PunRPC]
	public void RpcSendScoreToSpectator(int scenacaricata, int scena, int counter0, int counter1, int dentro0rimbalzo, int dentro1rimbalzo, bool set01, bool set02, bool set03, string punto0, string punto1, int game11, int game21, int game31, int game10, int game20, int game30, int setn0, int setn1, int punteggio0, int punteggio1, bool tiebreak, bool onservice, bool onservicelabel, int aces, int acesop, float primaservizio, float primaservizioop, float secondaservizio, float secondaservizioop, int doppiofallo, int doppiofalloop, int winner, int winnerop, int unferror, int unferrorop, int fastestserve, int fastestserveop, int resultsets)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xCC09B0", Offset = "0xCC09B0", VA = "0xCC09B0")]
	[IteratorStateMachine(typeof(<SendCharacterToServer>d__41))]
	private IEnumerator SendCharacterToServer(int resend)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xCC7D14", Offset = "0xCC7D14", VA = "0xCC7D14")]
	[PunRPC]
	public void RpcSendCharacterToServer(int choosehandclient, int vivetrackerclient, int headsclient, int outfitclient, int racketclient, int resend)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xCC132C", Offset = "0xCC132C", VA = "0xCC132C")]
	[IteratorStateMachine(typeof(<SendCharacterToClient>d__43))]
	private IEnumerator SendCharacterToClient(int resend)
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xCC7EEC", Offset = "0xCC7EEC", VA = "0xCC7EEC")]
	[PunRPC]
	public void RpcSendCharacterToClient(int choosehandclient, int vivetrackerclient, int headsclient, int outfitclient, int racketclient, int resend)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xCC078C", Offset = "0xCC078C", VA = "0xCC078C")]
	public void SendNameToServer(int resend)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xCC1108", Offset = "0xCC1108", VA = "0xCC1108")]
	public void SendNameToClient(int resend)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xCC80E8", Offset = "0xCC80E8", VA = "0xCC80E8")]
	[PunRPC]
	public void RpcSendNameToClient(string nameserver, int onlinescore, int resend)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xCC83C0", Offset = "0xCC83C0", VA = "0xCC83C0")]
	[PunRPC]
	public void RpcSendNameToServer(string nameclient, int onlinescore, int resend)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xCB978C", Offset = "0xCB978C", VA = "0xCB978C")]
	public void TakeBall()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xCC8698", Offset = "0xCC8698", VA = "0xCC8698")]
	[PunRPC]
	public void RpcTakeBall()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xCB9888", Offset = "0xCB9888", VA = "0xCB9888")]
	public void ReleaseBall()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xCC86D0", Offset = "0xCC86D0", VA = "0xCC86D0")]
	[PunRPC]
	public void RpcReleaseBall(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xCC8980", Offset = "0xCC8980", VA = "0xCC8980")]
	[PunRPC]
	public void RpcReleaseBallNet(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xCC8BE4", Offset = "0xCC8BE4", VA = "0xCC8BE4")]
	public void Speedserve()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xCC8D5C", Offset = "0xCC8D5C", VA = "0xCC8D5C")]
	public void Speedserveop()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xCC8ED4", Offset = "0xCC8ED4", VA = "0xCC8ED4")]
	public void SyncBallPos(Vector3 ballposition, Quaternion ballrotation, Vector3 ballvelocity, Vector3 ballangularvelocity)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xCC964C", Offset = "0xCC964C", VA = "0xCC964C")]
	public void SyncBallPosBounce(bool fuoririmbalzo, int dentro0rimbalzo, int dentro1rimbalzo, bool entrata, bool netcollider)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xCC9A18", Offset = "0xCC9A18", VA = "0xCC9A18")]
	[PunRPC]
	public void RpcBounce(Vector3 position, Vector3 velocity, Vector3 angularVelocity, bool fuoririmbalzo, int dentro0rimbalzo, int dentro1rimbalzo, bool entrata, bool netcollider)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xCC9B74", Offset = "0xCC9B74", VA = "0xCC9B74")]
	[PunRPC]
	public void RpcHitClient(bool entrata, bool primocolpopl, bool primocolpoop, bool acetoccataplayer0, bool acetoccataplayer1)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xCC9F38", Offset = "0xCC9F38", VA = "0xCC9F38")]
	[PunRPC]
	public void RpcHitServer(bool entrata, bool primocolpopl, bool primocolpoop, bool acetoccataplayer0, bool acetoccataplayer1)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xCCA2FC", Offset = "0xCCA2FC", VA = "0xCCA2FC")]
	public void Timerfault()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xCCA4FC", Offset = "0xCCA4FC", VA = "0xCCA4FC")]
	[PunRPC]
	public void RpcTimerServer()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xCCA64C", Offset = "0xCCA64C", VA = "0xCCA64C")]
	[PunRPC]
	public void RpcTimerClient()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xCCA79C", Offset = "0xCCA79C", VA = "0xCCA79C")]
	public void SyncStats()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xCCB328", Offset = "0xCCB328", VA = "0xCCB328")]
	[PunRPC]
	public void RpcStats(int aces, int acesop, float primaservizio, float primaservizioop, float secondaservizio, float secondaservizioop, int doppiofallo, int doppiofalloop, int winner, int winnerop, int unferror, int unferrorop, int fastestserve, int fastestserveop, int speedkmh)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xCCB468", Offset = "0xCCB468", VA = "0xCCB468")]
	[PunRPC]
	public void RpcStatsSpectator(int aces, int acesop, float primaservizio, float primaservizioop, float secondaservizio, float secondaservizioop, int doppiofallo, int doppiofalloop, int winner, int winnerop, int unferror, int unferrorop, int fastestserve, int fastestserveop, int speedkmh)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xCCB6AC", Offset = "0xCCB6AC", VA = "0xCCB6AC")]
	public void letaudio()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xCCB774", Offset = "0xCCB774", VA = "0xCCB774")]
	[PunRPC]
	public void RPCletaudio()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xCCB8C8", Offset = "0xCCB8C8", VA = "0xCCB8C8")]
	public void secondserveaudio()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xCCB990", Offset = "0xCCB990", VA = "0xCCB990")]
	[PunRPC]
	public void RPCsecondserveaudio()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xCCBAE4", Offset = "0xCCBAE4", VA = "0xCCBAE4")]
	public void outaudio()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xCCBBAC", Offset = "0xCCBBAC", VA = "0xCCBBAC")]
	[PunRPC]
	public void RPCoutaudio()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xCCBD00", Offset = "0xCCBD00", VA = "0xCCBD00")]
	public void faultaudio()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xCCBDC8", Offset = "0xCCBDC8", VA = "0xCCBDC8")]
	[PunRPC]
	public void RPCfaultaudio()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xCCBF1C", Offset = "0xCCBF1C", VA = "0xCCBF1C")]
	public void commentogo()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xCCBFE4", Offset = "0xCCBFE4", VA = "0xCCBFE4")]
	[PunRPC]
	public void RPCcommentogo()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xCCC138", Offset = "0xCCC138", VA = "0xCCC138")]
	public void commentoace()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xCCC200", Offset = "0xCCC200", VA = "0xCCC200")]
	[PunRPC]
	public void RPCcommentoace()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xCCC354", Offset = "0xCCC354", VA = "0xCCC354")]
	public void boo()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xCCC41C", Offset = "0xCCC41C", VA = "0xCCC41C")]
	[PunRPC]
	public void RPCboo()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xCCC570", Offset = "0xCCC570", VA = "0xCCC570")]
	public SyncBallPositionPhoton()
	{
	}
}
[Serializable]
[Token(Token = "0x200027C")]
public class Textname : MonoBehaviour
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button startbutton;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject notavailable;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name1;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button Forehand;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas Canvasstats;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvaskeyboard;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string profilecode;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> Names;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xCD0DD0", Offset = "0xCD0DD0", VA = "0xCD0DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xCD0EC0", Offset = "0xCD0EC0", VA = "0xCD0EC0")]
	private void LoginPlayFab()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xCD10A4", Offset = "0xCD10A4", VA = "0xCD10A4")]
	public void SendLeaderboard(string name, int score)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xCD11E8", Offset = "0xCD11E8", VA = "0xCD11E8")]
	private void OnDisplayNameUpdate(UpdateUserTitleDisplayNameResult result)
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xCD1378", Offset = "0xCD1378", VA = "0xCD1378")]
	private void OnSuccess(LoginResult result)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xCD137C", Offset = "0xCD137C", VA = "0xCD137C")]
	private void OnError(PlayFabError error)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xCD13B4", Offset = "0xCD13B4", VA = "0xCD13B4", Slot = "4")]
	public virtual void cambionome()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xCD19C0", Offset = "0xCD19C0", VA = "0xCD19C0")]
	public Textname()
	{
	}
}
[Serializable]
[Token(Token = "0x200027D")]
public class Textname1 : MonoBehaviour
{
	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xCD1A48", Offset = "0xCD1A48", VA = "0xCD1A48", Slot = "4")]
	public virtual void cambionome()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xCD1C38", Offset = "0xCD1C38", VA = "0xCD1C38")]
	public Textname1()
	{
	}
}
[Serializable]
[Token(Token = "0x200027E")]
public class Textname2 : MonoBehaviour
{
	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xCD1C40", Offset = "0xCD1C40", VA = "0xCD1C40", Slot = "4")]
	public virtual void cambionome()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xCD1E30", Offset = "0xCD1E30", VA = "0xCD1E30")]
	public Textname2()
	{
	}
}
[Serializable]
[Token(Token = "0x200027F")]
public class Textroomname : MonoBehaviour
{
	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name1;

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xCD1E38", Offset = "0xCD1E38", VA = "0xCD1E38", Slot = "4")]
	public virtual void cambionome()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xCD2014", Offset = "0xCD2014", VA = "0xCD2014")]
	public Textroomname()
	{
	}
}
[Serializable]
[Token(Token = "0x2000280")]
public class Textured : MonoBehaviour
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int court;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xCD201C", Offset = "0xCD201C", VA = "0xCD201C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xCD2980", Offset = "0xCD2980", VA = "0xCD2980")]
	public Textured()
	{
	}
}
[Serializable]
[Token(Token = "0x2000281")]
public class Texturedm : MonoBehaviour
{
	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int court;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int court1;

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xCD2988", Offset = "0xCD2988", VA = "0xCD2988", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xCD2CF4", Offset = "0xCD2CF4", VA = "0xCD2CF4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xCD2F30", Offset = "0xCD2F30", VA = "0xCD2F30")]
	public Texturedm()
	{
	}
}
[Token(Token = "0x2000282")]
public class Timeday : MonoBehaviour
{
	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] clock;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] matchtext;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string textmatch;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Scene scene;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xCD2F38", Offset = "0xCD2F38", VA = "0xCD2F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xCD2FF0", Offset = "0xCD2FF0", VA = "0xCD2FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xCD310C", Offset = "0xCD310C", VA = "0xCD310C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xCD4978", Offset = "0xCD4978", VA = "0xCD4978")]
	public Timeday()
	{
	}
}
[Serializable]
[Token(Token = "0x2000283")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	[CompilerGenerated]
	private sealed class <exit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xCD4E70", Offset = "0xCD4E70", VA = "0xCD4E70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xCD4EB8", Offset = "0xCD4EB8", VA = "0xCD4EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xCD4BB4", Offset = "0xCD4BB4", VA = "0xCD4BB4")]
		[DebuggerHidden]
		public <exit>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xCD4BE4", Offset = "0xCD4BE4", VA = "0xCD4BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xCD4BE8", Offset = "0xCD4BE8", VA = "0xCD4BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xCD4E78", Offset = "0xCD4E78", VA = "0xCD4E78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textTime;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject timer;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool exita;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xCD4980", Offset = "0xCD4980", VA = "0xCD4980", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xCD49E0", Offset = "0xCD49E0", VA = "0xCD49E0", Slot = "5")]
	public virtual void OnGUI()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xCD4B54", Offset = "0xCD4B54", VA = "0xCD4B54", Slot = "6")]
	[IteratorStateMachine(typeof(<exit>d__6))]
	public virtual IEnumerator exit()
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xCD4BDC", Offset = "0xCD4BDC", VA = "0xCD4BDC")]
	public Timer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000285")]
public class Timesettings : MonoBehaviour
{
	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float Timing;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider Timingslider;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xCD4EC0", Offset = "0xCD4EC0", VA = "0xCD4EC0", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xCD4FD0", Offset = "0xCD4FD0", VA = "0xCD4FD0", Slot = "5")]
	public virtual void Timingchange()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xCD5070", Offset = "0xCD5070", VA = "0xCD5070")]
	public Timesettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000286")]
public class Torretta1 : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	[CompilerGenerated]
	private sealed class <Tiro>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Torretta1 <>4__this;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xCD6498", Offset = "0xCD6498", VA = "0xCD6498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xCD64E0", Offset = "0xCD64E0", VA = "0xCD64E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xCD5294", Offset = "0xCD5294", VA = "0xCD5294")]
		[DebuggerHidden]
		public <Tiro>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xCD59B8", Offset = "0xCD59B8", VA = "0xCD59B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xCD59BC", Offset = "0xCD59BC", VA = "0xCD59BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xCD64A0", Offset = "0xCD64A0", VA = "0xCD64A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ball;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody ballrigidbody;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ballcopy;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody ballrigidbodycopy;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource ballmachine;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject player1;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform spawnTarget;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float horizontalOffset;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lob;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startingVelocity;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timestepsPerSecond;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lob1;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float physicsTimestep;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 p;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 a;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 s;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float n;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 velocity;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Scene scene;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float randomspeed;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int randomzone;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float distance;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float time;

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xCD5078", Offset = "0xCD5078", VA = "0xCD5078", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xCD50D0", Offset = "0xCD50D0", VA = "0xCD50D0", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xCD5220", Offset = "0xCD5220", VA = "0xCD5220", Slot = "6")]
	[IteratorStateMachine(typeof(<Tiro>d__25))]
	public virtual IEnumerator Tiro()
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xCD52BC", Offset = "0xCD52BC", VA = "0xCD52BC", Slot = "7")]
	public virtual void GetTrajectoryVelocitytiro()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xCD59B0", Offset = "0xCD59B0", VA = "0xCD59B0")]
	public Torretta1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000288")]
public class Tour : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <tournament>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tour <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xCD81E8", Offset = "0xCD81E8", VA = "0xCD81E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xCD8230", Offset = "0xCD8230", VA = "0xCD8230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xCD68D0", Offset = "0xCD68D0", VA = "0xCD68D0")]
		[DebuggerHidden]
		public <tournament>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xCD6950", Offset = "0xCD6950", VA = "0xCD6950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xCD6954", Offset = "0xCD6954", VA = "0xCD6954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xCD81F0", Offset = "0xCD81F0", VA = "0xCD81F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int tour;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int rank;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool slam;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image banner;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite australia;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite indianwells;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite miami;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite montecarlo;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite madrid;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite rome;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite rolandgarros;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite wimbledon;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite toronto;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite cincinnati;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite usopen;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite shanghai;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite finals;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite banner1;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite banner2;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite banner3;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite banner4;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite banner5;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite banner6;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite banner7;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite banner8;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite banner9;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Sprite banner10;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sprite banner11;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite banner12;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Sprite banner13;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xCD64E8", Offset = "0xCD64E8", VA = "0xCD64E8", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xCD67F4", Offset = "0xCD67F4", VA = "0xCD67F4", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xCD685C", Offset = "0xCD685C", VA = "0xCD685C", Slot = "6")]
	[IteratorStateMachine(typeof(<tournament>d__32))]
	public virtual IEnumerator tournament()
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xCD68F8", Offset = "0xCD68F8", VA = "0xCD68F8")]
	public Tour()
	{
	}
}
[Serializable]
[Token(Token = "0x200028A")]
public class Tour1 : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	[CompilerGenerated]
	private sealed class <tournament>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tour1 <>4__this;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0xCD9EC4", Offset = "0xCD9EC4", VA = "0xCD9EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xCD9F0C", Offset = "0xCD9F0C", VA = "0xCD9F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xCD85AC", Offset = "0xCD85AC", VA = "0xCD85AC")]
		[DebuggerHidden]
		public <tournament>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xCD862C", Offset = "0xCD862C", VA = "0xCD862C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xCD8630", Offset = "0xCD8630", VA = "0xCD8630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xCD9ECC", Offset = "0xCD9ECC", VA = "0xCD9ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int tour;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int rank;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool slam;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image banner;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite australia;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite indianwells;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite miami;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite montecarlo;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite madrid;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite rome;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite rolandgarros;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite wimbledon;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite toronto;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite cincinnati;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite usopen;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite shanghai;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite finals;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite banner1;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite banner2;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite banner3;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite banner4;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite banner5;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite banner6;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite banner7;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite banner8;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite banner9;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Sprite banner10;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sprite banner11;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite banner12;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Sprite banner13;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xCD8238", Offset = "0xCD8238", VA = "0xCD8238", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xCD84D0", Offset = "0xCD84D0", VA = "0xCD84D0", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xCD8538", Offset = "0xCD8538", VA = "0xCD8538", Slot = "6")]
	[IteratorStateMachine(typeof(<tournament>d__32))]
	public virtual IEnumerator tournament()
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xCD85D4", Offset = "0xCD85D4", VA = "0xCD85D4")]
	public Tour1()
	{
	}
}
[Serializable]
[Token(Token = "0x200028C")]
public class Tournament : MonoBehaviour
{
	[Token(Token = "0x200028D")]
	[CompilerGenerated]
	private sealed class <tournament>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tournament <>4__this;

		[Token(Token = "0x17000183")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xCDEC40", Offset = "0xCDEC40", VA = "0xCDEC40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xCDEC88", Offset = "0xCDEC88", VA = "0xCDEC88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xCDA77C", Offset = "0xCDA77C", VA = "0xCDA77C")]
		[DebuggerHidden]
		public <tournament>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xCDC9D8", Offset = "0xCDC9D8", VA = "0xCDC9D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xCDC9DC", Offset = "0xCDC9DC", VA = "0xCDC9DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xCDEC48", Offset = "0xCDEC48", VA = "0xCDEC48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028E")]
	[CompilerGenerated]
	private sealed class <Playmatch>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xCDF2E4", Offset = "0xCDF2E4", VA = "0xCDF2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xCDF32C", Offset = "0xCDF32C", VA = "0xCDF32C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xCDC95C", Offset = "0xCDC95C", VA = "0xCDC95C")]
		[DebuggerHidden]
		public <Playmatch>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xCDEC90", Offset = "0xCDEC90", VA = "0xCDEC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xCDEC94", Offset = "0xCDEC94", VA = "0xCDEC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xCDF2EC", Offset = "0xCDF2EC", VA = "0xCDF2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int tour;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int rank;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 targetplace;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject buttoncontinua1;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttoncontinua2;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tournamenttext;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite australia;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite indianwells;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite miami;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite montecarlo;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite madrid;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite rome;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite rolandgarros;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite wimbledon;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite toronto;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite cincinnati;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite usopen;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite shanghai;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite finals;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image dotaustralia;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image dotindianwells;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image dotmiami;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image dotmontecarlo;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image dotmadrid;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image dotrome;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image dotrolandgarros;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image dotwimbledon;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image dottoronto;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image dotcincinnati;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image dotusopen;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Image dotshanghai;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Image dotfinals;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xCD9F14", Offset = "0xCD9F14", VA = "0xCD9F14", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xCDA0A0", Offset = "0xCDA0A0", VA = "0xCDA0A0", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xCDA23C", Offset = "0xCDA23C", VA = "0xCDA23C", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xCDA340", Offset = "0xCDA340", VA = "0xCDA340", Slot = "7")]
	public virtual void Prev()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xCDA524", Offset = "0xCDA524", VA = "0xCDA524", Slot = "8")]
	public virtual void Next()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xCDA708", Offset = "0xCDA708", VA = "0xCDA708", Slot = "9")]
	[IteratorStateMachine(typeof(<tournament>d__37))]
	public virtual IEnumerator tournament()
	{
		return null;
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xCDA7A4", Offset = "0xCDA7A4", VA = "0xCDA7A4", Slot = "10")]
	public virtual void tour1()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xCDA9DC", Offset = "0xCDA9DC", VA = "0xCDA9DC", Slot = "11")]
	public virtual void tour2()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xCDAC14", Offset = "0xCDAC14", VA = "0xCDAC14", Slot = "12")]
	public virtual void tour3()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xCDAE4C", Offset = "0xCDAE4C", VA = "0xCDAE4C", Slot = "13")]
	public virtual void tour4()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xCDB084", Offset = "0xCDB084", VA = "0xCDB084", Slot = "14")]
	public virtual void tour5()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xCDB2BC", Offset = "0xCDB2BC", VA = "0xCDB2BC", Slot = "15")]
	public virtual void tour6()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xCDB4F4", Offset = "0xCDB4F4", VA = "0xCDB4F4", Slot = "16")]
	public virtual void tour7()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xCDB72C", Offset = "0xCDB72C", VA = "0xCDB72C", Slot = "17")]
	public virtual void tour8()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xCDB964", Offset = "0xCDB964", VA = "0xCDB964", Slot = "18")]
	public virtual void tour9()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xCDBB9C", Offset = "0xCDBB9C", VA = "0xCDBB9C", Slot = "19")]
	public virtual void tour10()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xCDBDD4", Offset = "0xCDBDD4", VA = "0xCDBDD4", Slot = "20")]
	public virtual void tour11()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xCDC00C", Offset = "0xCDC00C", VA = "0xCDC00C", Slot = "21")]
	public virtual void tour12()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xCDC244", Offset = "0xCDC244", VA = "0xCDC244", Slot = "22")]
	public virtual void tour13()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xCDC8FC", Offset = "0xCDC8FC", VA = "0xCDC8FC", Slot = "23")]
	[IteratorStateMachine(typeof(<Playmatch>d__51))]
	public virtual IEnumerator Playmatch()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xCDC984", Offset = "0xCDC984", VA = "0xCDC984")]
	static Tournament()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xCDC9D0", Offset = "0xCDC9D0", VA = "0xCDC9D0")]
	public Tournament()
	{
	}
}
[Serializable]
[Token(Token = "0x200028F")]
public class Tournament1 : MonoBehaviour
{
	[Token(Token = "0x2000290")]
	[CompilerGenerated]
	private sealed class <tournament>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tournament1 <>4__this;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xCE1CB0", Offset = "0xCE1CB0", VA = "0xCE1CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0xCE1CF8", Offset = "0xCE1CF8", VA = "0xCE1CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCDFA70", Offset = "0xCDFA70", VA = "0xCDFA70")]
		[DebuggerHidden]
		public <tournament>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xCDFB74", Offset = "0xCDFB74", VA = "0xCDFB74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xCDFB78", Offset = "0xCDFB78", VA = "0xCDFB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xCE1CB8", Offset = "0xCE1CB8", VA = "0xCE1CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[CompilerGenerated]
	private sealed class <Playmatch>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xCE1E80", Offset = "0xCE1E80", VA = "0xCE1E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xCE1EC8", Offset = "0xCE1EC8", VA = "0xCE1EC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xCDFAF8", Offset = "0xCDFAF8", VA = "0xCDFAF8")]
		[DebuggerHidden]
		public <Playmatch>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xCE1D00", Offset = "0xCE1D00", VA = "0xCE1D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xCE1D04", Offset = "0xCE1D04", VA = "0xCE1D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xCE1E88", Offset = "0xCE1E88", VA = "0xCE1E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int tour;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int rank;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 targetplace;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tournamenttext;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite australia;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite indianwells;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite miami;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite montecarlo;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite madrid;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite rome;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite rolandgarros;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite wimbledon;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite toronto;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite cincinnati;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite usopen;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite shanghai;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite finals;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image dotaustralia;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image dotindianwells;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image dotmiami;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image dotmontecarlo;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image dotmadrid;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image dotrome;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image dotrolandgarros;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image dotwimbledon;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image dottoronto;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image dotcincinnati;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image dotusopen;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image dotshanghai;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image dotfinals;

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xCDF334", Offset = "0xCDF334", VA = "0xCDF334", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xCDF4F0", Offset = "0xCDF4F0", VA = "0xCDF4F0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xCDF5F4", Offset = "0xCDF5F4", VA = "0xCDF5F4", Slot = "6")]
	public virtual void Prev()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xCDF7F8", Offset = "0xCDF7F8", VA = "0xCDF7F8", Slot = "7")]
	public virtual void Next()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xCDF9FC", Offset = "0xCDF9FC", VA = "0xCDF9FC", Slot = "8")]
	[IteratorStateMachine(typeof(<tournament>d__34))]
	public virtual IEnumerator tournament()
	{
		return null;
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xCDFA98", Offset = "0xCDFA98", VA = "0xCDFA98", Slot = "9")]
	[IteratorStateMachine(typeof(<Playmatch>d__35))]
	public virtual IEnumerator Playmatch()
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xCDFB20", Offset = "0xCDFB20", VA = "0xCDFB20")]
	static Tournament1()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xCDFB6C", Offset = "0xCDFB6C", VA = "0xCDFB6C")]
	public Tournament1()
	{
	}
}
[Serializable]
[Token(Token = "0x2000292")]
public class Trailsettings : MonoBehaviour
{
	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int trail;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int speedkmh;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textspeedkmh;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xCE1ED0", Offset = "0xCE1ED0", VA = "0xCE1ED0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xCE20F8", Offset = "0xCE20F8", VA = "0xCE20F8", Slot = "5")]
	public virtual void Trailchange()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xCE2228", Offset = "0xCE2228", VA = "0xCE2228", Slot = "6")]
	public virtual void Speedkmhchange()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xCE2348", Offset = "0xCE2348", VA = "0xCE2348")]
	public Trailsettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000293")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	[CompilerGenerated]
	private sealed class <avviaistruzione2>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xCE2A80", Offset = "0xCE2A80", VA = "0xCE2A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xCE2AC8", Offset = "0xCE2AC8", VA = "0xCE2AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xCE27AC", Offset = "0xCE27AC", VA = "0xCE27AC")]
		[DebuggerHidden]
		public <avviaistruzione2>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xCE2978", Offset = "0xCE2978", VA = "0xCE2978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xCE297C", Offset = "0xCE297C", VA = "0xCE297C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xCE2A88", Offset = "0xCE2A88", VA = "0xCE2A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[CompilerGenerated]
	private sealed class <avviaistruzione3>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xCE2BD4", Offset = "0xCE2BD4", VA = "0xCE2BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xCE2C1C", Offset = "0xCE2C1C", VA = "0xCE2C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xCE2848", Offset = "0xCE2848", VA = "0xCE2848")]
		[DebuggerHidden]
		public <avviaistruzione3>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xCE2AD0", Offset = "0xCE2AD0", VA = "0xCE2AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xCE2AD4", Offset = "0xCE2AD4", VA = "0xCE2AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xCE2BDC", Offset = "0xCE2BDC", VA = "0xCE2BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int lancio;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject istruzione1;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject istruzione2;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject istruzione3;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xCE2350", Offset = "0xCE2350", VA = "0xCE2350", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xCE23EC", Offset = "0xCE23EC", VA = "0xCE23EC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xCE2738", Offset = "0xCE2738", VA = "0xCE2738", Slot = "6")]
	[IteratorStateMachine(typeof(<avviaistruzione2>d__6))]
	public virtual IEnumerator avviaistruzione2()
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xCE27D4", Offset = "0xCE27D4", VA = "0xCE27D4", Slot = "7")]
	[IteratorStateMachine(typeof(<avviaistruzione3>d__7))]
	public virtual IEnumerator avviaistruzione3()
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xCE2870", Offset = "0xCE2870", VA = "0xCE2870", Slot = "8")]
	public virtual void hitball()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCE2924", Offset = "0xCE2924", VA = "0xCE2924")]
	static Tutorial()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCE2970", Offset = "0xCE2970", VA = "0xCE2970")]
	public Tutorial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000296")]
public class tutorialtouch : MonoBehaviour
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tutorial;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xCE2C24", Offset = "0xCE2C24", VA = "0xCE2C24", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xCE2CDC", Offset = "0xCE2CDC", VA = "0xCE2CDC")]
	public tutorialtouch()
	{
	}
}
[Serializable]
[Token(Token = "0x2000297")]
public class twconnect : MonoBehaviour
{
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xCE2CE4", Offset = "0xCE2CE4", VA = "0xCE2CE4", Slot = "4")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xCE2D28", Offset = "0xCE2D28", VA = "0xCE2D28")]
	public twconnect()
	{
	}
}
[Token(Token = "0x2000298")]
public class UI_Keyboard1 : MonoBehaviour
{
	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputField input;

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xCE2D30", Offset = "0xCE2D30", VA = "0xCE2D30")]
	public void ClickKey(string character)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xCE2D60", Offset = "0xCE2D60", VA = "0xCE2D60")]
	public void Backspace()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xCE2DAC", Offset = "0xCE2DAC", VA = "0xCE2DAC")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xCE2E54", Offset = "0xCE2E54", VA = "0xCE2E54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xCE2EAC", Offset = "0xCE2EAC", VA = "0xCE2EAC")]
	public UI_Keyboard1()
	{
	}
}
[Token(Token = "0x2000299")]
public class Vibration : MonoBehaviour
{
	[Token(Token = "0x200029A")]
	[CompilerGenerated]
	private sealed class <vibra>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xCE45D4", Offset = "0xCE45D4", VA = "0xCE45D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xCE461C", Offset = "0xCE461C", VA = "0xCE461C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xCE44CC", Offset = "0xCE44CC", VA = "0xCE44CC")]
		[DebuggerHidden]
		public <vibra>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xCE44F4", Offset = "0xCE44F4", VA = "0xCE44F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xCE44F8", Offset = "0xCE44F8", VA = "0xCE44F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xCE45DC", Offset = "0xCE45DC", VA = "0xCE45DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Vibrationactive;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool stopvib;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float Rotationspeed;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Ball;

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xCE2EB4", Offset = "0xCE2EB4", VA = "0xCE2EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xCE2F54", Offset = "0xCE2F54", VA = "0xCE2F54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xCE3028", Offset = "0xCE3028", VA = "0xCE3028")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xCE32E4", Offset = "0xCE32E4", VA = "0xCE32E4")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xCE3284", Offset = "0xCE3284", VA = "0xCE3284")]
	[IteratorStateMachine(typeof(<vibra>d__8))]
	private IEnumerator vibra()
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xCE34C4", Offset = "0xCE34C4", VA = "0xCE34C4")]
	public Vibration()
	{
	}
}
[Serializable]
[Token(Token = "0x200029B")]
public class Victory : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Victory <>4__this;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xCE4ECC", Offset = "0xCE4ECC", VA = "0xCE4ECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xCE4F14", Offset = "0xCE4F14", VA = "0xCE4F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xCE4698", Offset = "0xCE4698", VA = "0xCE4698")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xCE46C8", Offset = "0xCE46C8", VA = "0xCE46C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xCE46CC", Offset = "0xCE46CC", VA = "0xCE46CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xCE4ED4", Offset = "0xCE4ED4", VA = "0xCE4ED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AsyncOperation op;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CameraRig;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xCE4624", Offset = "0xCE4624", VA = "0xCE4624", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xCE46C0", Offset = "0xCE46C0", VA = "0xCE46C0")]
	public Victory()
	{
	}
}
[Serializable]
[Token(Token = "0x200029D")]
public class Vivesettings : MonoBehaviour
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Vivetracker;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xCE4F1C", Offset = "0xCE4F1C", VA = "0xCE4F1C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xCE50B4", Offset = "0xCE50B4", VA = "0xCE50B4", Slot = "5")]
	public virtual void Vivetrackerchange()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xCE5208", Offset = "0xCE5208", VA = "0xCE5208")]
	public Vivesettings()
	{
	}
}
[Token(Token = "0x200029E")]
public class Voicemanager : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Recorder recorder;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xCE525C", Offset = "0xCE525C", VA = "0xCE525C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xCE52FC", Offset = "0xCE52FC", VA = "0xCE52FC")]
	public Voicemanager()
	{
	}
}
[Serializable]
[Token(Token = "0x200029F")]
public class Winner0 : MonoBehaviour
{
	[Token(Token = "0x20002A0")]
	[CompilerGenerated]
	private sealed class <Endmatch>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner0 <>4__this;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xCE60B0", Offset = "0xCE60B0", VA = "0xCE60B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xCE60F8", Offset = "0xCE60F8", VA = "0xCE60F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xCE5454", Offset = "0xCE5454", VA = "0xCE5454")]
		[DebuggerHidden]
		public <Endmatch>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xCE567C", Offset = "0xCE567C", VA = "0xCE567C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xCE5680", Offset = "0xCE5680", VA = "0xCE5680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xCE60B8", Offset = "0xCE60B8", VA = "0xCE60B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A1")]
	[CompilerGenerated]
	private sealed class <finematchvrmulti>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner0 <>4__this;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xCE63A4", Offset = "0xCE63A4", VA = "0xCE63A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xCE63EC", Offset = "0xCE63EC", VA = "0xCE63EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xCE55B0", Offset = "0xCE55B0", VA = "0xCE55B0")]
		[DebuggerHidden]
		public <finematchvrmulti>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xCE6100", Offset = "0xCE6100", VA = "0xCE6100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xCE6104", Offset = "0xCE6104", VA = "0xCE6104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xCE63AC", Offset = "0xCE63AC", VA = "0xCE63AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A2")]
	[CompilerGenerated]
	private sealed class <finematchvr>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner0 <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xCE8964", Offset = "0xCE8964", VA = "0xCE8964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xCE89AC", Offset = "0xCE89AC", VA = "0xCE89AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xCE564C", Offset = "0xCE564C", VA = "0xCE564C")]
		[DebuggerHidden]
		public <finematchvr>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xCE63F4", Offset = "0xCE63F4", VA = "0xCE63F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xCE63F8", Offset = "0xCE63F8", VA = "0xCE63F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xCE896C", Offset = "0xCE896C", VA = "0xCE896C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] fault;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] panelpause;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject commento;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int finego;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject player1;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Scene scene;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource finalcomment;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int commentofinal;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xCE5304", Offset = "0xCE5304", VA = "0xCE5304", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xCE53E0", Offset = "0xCE53E0", VA = "0xCE53E0")]
	[IteratorStateMachine(typeof(<Endmatch>d__9))]
	public IEnumerator Endmatch()
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xCE547C", Offset = "0xCE547C", VA = "0xCE547C", Slot = "5")]
	public virtual void fine()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xCE5494", Offset = "0xCE5494", VA = "0xCE5494", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xCE553C", Offset = "0xCE553C", VA = "0xCE553C", Slot = "7")]
	[IteratorStateMachine(typeof(<finematchvrmulti>d__12))]
	public virtual IEnumerator finematchvrmulti()
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xCE55D8", Offset = "0xCE55D8", VA = "0xCE55D8", Slot = "8")]
	[IteratorStateMachine(typeof(<finematchvr>d__13))]
	public virtual IEnumerator finematchvr()
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xCE5674", Offset = "0xCE5674", VA = "0xCE5674")]
	public Winner0()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A3")]
public class Winner1 : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	[CompilerGenerated]
	private sealed class <Endmatch>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner1 <>4__this;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xCE9764", Offset = "0xCE9764", VA = "0xCE9764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xCE97AC", Offset = "0xCE97AC", VA = "0xCE97AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xCE8B04", Offset = "0xCE8B04", VA = "0xCE8B04")]
		[DebuggerHidden]
		public <Endmatch>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xCE8D2C", Offset = "0xCE8D2C", VA = "0xCE8D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xCE8D30", Offset = "0xCE8D30", VA = "0xCE8D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xCE976C", Offset = "0xCE976C", VA = "0xCE976C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A5")]
	[CompilerGenerated]
	private sealed class <finematchvrmulti>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner1 <>4__this;

		[Token(Token = "0x1700019B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xCE9A58", Offset = "0xCE9A58", VA = "0xCE9A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xCE9AA0", Offset = "0xCE9AA0", VA = "0xCE9AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xCE8C60", Offset = "0xCE8C60", VA = "0xCE8C60")]
		[DebuggerHidden]
		public <finematchvrmulti>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xCE97B4", Offset = "0xCE97B4", VA = "0xCE97B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xCE97B8", Offset = "0xCE97B8", VA = "0xCE97B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xCE9A60", Offset = "0xCE9A60", VA = "0xCE9A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A6")]
	[CompilerGenerated]
	private sealed class <finematchvr>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Winner1 <>4__this;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xCEC304", Offset = "0xCEC304", VA = "0xCEC304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xCEC34C", Offset = "0xCEC34C", VA = "0xCEC34C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xCE8CFC", Offset = "0xCE8CFC", VA = "0xCE8CFC")]
		[DebuggerHidden]
		public <finematchvr>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xCE9AA8", Offset = "0xCE9AA8", VA = "0xCE9AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xCE9AAC", Offset = "0xCE9AAC", VA = "0xCE9AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xCEC30C", Offset = "0xCEC30C", VA = "0xCEC30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] fault;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] panelpause;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject commento;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int finego;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject player1;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Scene scene;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource finalcomment;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int commentofinal;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xCE89B4", Offset = "0xCE89B4", VA = "0xCE89B4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xCE8A90", Offset = "0xCE8A90", VA = "0xCE8A90")]
	[IteratorStateMachine(typeof(<Endmatch>d__9))]
	public IEnumerator Endmatch()
	{
		return null;
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xCE8B2C", Offset = "0xCE8B2C", VA = "0xCE8B2C", Slot = "5")]
	public virtual void fine()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xCE8B44", Offset = "0xCE8B44", VA = "0xCE8B44", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xCE8BEC", Offset = "0xCE8BEC", VA = "0xCE8BEC", Slot = "7")]
	[IteratorStateMachine(typeof(<finematchvrmulti>d__12))]
	public virtual IEnumerator finematchvrmulti()
	{
		return null;
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xCE8C88", Offset = "0xCE8C88", VA = "0xCE8C88", Slot = "8")]
	[IteratorStateMachine(typeof(<finematchvr>d__13))]
	public virtual IEnumerator finematchvr()
	{
		return null;
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xCE8D24", Offset = "0xCE8D24", VA = "0xCE8D24")]
	public Winner1()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A7")]
public class Yes : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	[CompilerGenerated]
	private sealed class <OnClick>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Yes <>4__this;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xCED564", Offset = "0xCED564", VA = "0xCED564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xCED5AC", Offset = "0xCED5AC", VA = "0xCED5AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xCEC7E8", Offset = "0xCEC7E8", VA = "0xCEC7E8")]
		[DebuggerHidden]
		public <OnClick>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xCEC9B0", Offset = "0xCEC9B0", VA = "0xCEC9B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xCEC9B4", Offset = "0xCEC9B4", VA = "0xCEC9B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xCED56C", Offset = "0xCED56C", VA = "0xCED56C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[CompilerGenerated]
	private sealed class <OnClickCreate>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xCED968", Offset = "0xCED968", VA = "0xCED968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xCED9B0", Offset = "0xCED9B0", VA = "0xCED9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xCEC870", Offset = "0xCEC870", VA = "0xCEC870")]
		[DebuggerHidden]
		public <OnClickCreate>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xCED5B4", Offset = "0xCED5B4", VA = "0xCED5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xCED5B8", Offset = "0xCED5B8", VA = "0xCED5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xCED970", Offset = "0xCED970", VA = "0xCED970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[CompilerGenerated]
	private sealed class <OnClickMulti1>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xCEDE2C", Offset = "0xCEDE2C", VA = "0xCEDE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xCEDE74", Offset = "0xCEDE74", VA = "0xCEDE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xCEC8F8", Offset = "0xCEC8F8", VA = "0xCEC8F8")]
		[DebuggerHidden]
		public <OnClickMulti1>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xCED9B8", Offset = "0xCED9B8", VA = "0xCED9B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xCED9BC", Offset = "0xCED9BC", VA = "0xCED9BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xCEDE34", Offset = "0xCEDE34", VA = "0xCEDE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[CompilerGenerated]
	private sealed class <OnClickMulti2>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xCEE2F0", Offset = "0xCEE2F0", VA = "0xCEE2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0xCEE338", Offset = "0xCEE338", VA = "0xCEE338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xCEC980", Offset = "0xCEC980", VA = "0xCEC980")]
		[DebuggerHidden]
		public <OnClickMulti2>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xCEDE7C", Offset = "0xCEDE7C", VA = "0xCEDE7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xCEDE80", Offset = "0xCEDE80", VA = "0xCEDE80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xCEE2F8", Offset = "0xCEE2F8", VA = "0xCEE2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AsyncOperation op;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int handnum;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string namemulti;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int testamulti;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int bodymulti;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int racchettamulti;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float forehandmulti;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float backhandmulti;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float servemulti;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float volleymulti;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float speedmulti;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float staminamulti;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int setmulti;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int gamemulti;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int modemulti;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int runmulti;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float xgrippos;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float ygrippos;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float zgrippos;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float xgriprot;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float ygriprot;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float zgriprot;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float wgriprot;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int autocreatetemp;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int autoaccepttemp;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int onlinescoretemp;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int savegametemp;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int qualitytemp;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int difficultytemp;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int trailtemp;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float musictemp;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int commentarytemp;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int speedkmhtemp;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int vivetrackertemp;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int playmatchtemp;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string profilecode;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string weeks;

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xCEC354", Offset = "0xCEC354", VA = "0xCEC354", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xCEC774", Offset = "0xCEC774", VA = "0xCEC774", Slot = "5")]
	[IteratorStateMachine(typeof(<OnClick>d__38))]
	public virtual IEnumerator OnClick()
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xCEC810", Offset = "0xCEC810", VA = "0xCEC810")]
	[IteratorStateMachine(typeof(<OnClickCreate>d__39))]
	public static IEnumerator OnClickCreate()
	{
		return null;
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xCEC898", Offset = "0xCEC898", VA = "0xCEC898")]
	[IteratorStateMachine(typeof(<OnClickMulti1>d__40))]
	public IEnumerator OnClickMulti1()
	{
		return null;
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xCEC920", Offset = "0xCEC920", VA = "0xCEC920")]
	[IteratorStateMachine(typeof(<OnClickMulti2>d__41))]
	public IEnumerator OnClickMulti2()
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xCEC9A8", Offset = "0xCEC9A8", VA = "0xCEC9A8")]
	public Yes()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AC")]
public class panningtexture : MonoBehaviour
{
	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeedMainTex;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeedBumpMap;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xCEE340", Offset = "0xCEE340", VA = "0xCEE340", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xCEE430", Offset = "0xCEE430", VA = "0xCEE430")]
	public panningtexture()
	{
	}
}
[Token(Token = "0x20002AD")]
public class MinMaxSliderAttribute : PropertyAttribute
{
	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly float max;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float min;

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xCEE454", Offset = "0xCEE454", VA = "0xCEE454")]
	public MinMaxSliderAttribute(float min, float max)
	{
	}
}
[Token(Token = "0x20002AE")]
public class ParticleTester : MonoBehaviour
{
	[Token(Token = "0x20002AF")]
	private enum SystemType
	{
		[Token(Token = "0x4001199")]
		None,
		[Token(Token = "0x400119A")]
		Explosions,
		[Token(Token = "0x400119B")]
		Flares,
		[Token(Token = "0x400119C")]
		Flames
	}

	[Token(Token = "0x20002B0")]
	private class FlareSystem
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject particleObject;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] particleSystems;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggleFlag;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool savedToggleFlag;

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xCEEB4C", Offset = "0xCEEB4C", VA = "0xCEEB4C")]
		public FlareSystem()
		{
		}
	}

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SystemType systemType;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object[] particleSystems;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Object[] loadFlareSystems;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Object[] loadDirectionalSystems;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<FlareSystem> flareSystems;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<FlareSystem> directionalSystems;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool expBool;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool flrBool;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool flmBool;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 scrollPosition;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private SystemType savedSystemType;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xCEE480", Offset = "0xCEE480", VA = "0xCEE480")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xCEEB54", Offset = "0xCEEB54", VA = "0xCEEB54")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xCEF71C", Offset = "0xCEF71C", VA = "0xCEF71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xCEF478", Offset = "0xCEF478", VA = "0xCEF478")]
	private bool SetBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xCEF48C", Offset = "0xCEF48C", VA = "0xCEF48C")]
	private bool SetFlareBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xCEF5D4", Offset = "0xCEF5D4", VA = "0xCEF5D4")]
	private bool SetDirBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xCEF748", Offset = "0xCEF748", VA = "0xCEF748")]
	private void SetNoFlares()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xCEF98C", Offset = "0xCEF98C", VA = "0xCEF98C")]
	public ParticleTester()
	{
	}
}
[Token(Token = "0x20002B1")]
public class LightBeamsControlScript : MonoBehaviour
{
	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SourceObject;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TargetObject;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RayPrefab;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color RayColor;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 PositionRange;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float RadiusA;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float RadiusB;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WidthA;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float WidthB;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float FadeSpeed;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int NumRays;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int Spawned;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float TimeToSpawnAll;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float spawnInterval;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentCountdown;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RayBehavior[] rays;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xCEF994", Offset = "0xCEF994", VA = "0xCEF994")]
	private void setRayValues(RayBehavior ray)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xCEFA88", Offset = "0xCEFA88", VA = "0xCEFA88")]
	private void SpawnRay()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xCEFBC4", Offset = "0xCEFBC4", VA = "0xCEFBC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xCEFC34", Offset = "0xCEFC34", VA = "0xCEFC34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xCEFC80", Offset = "0xCEFC80", VA = "0xCEFC80")]
	public LightBeamsControlScript()
	{
	}
}
[Token(Token = "0x20002B2")]
public class LookAtBehaviour : MonoBehaviour
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xCEFCF8", Offset = "0xCEFCF8", VA = "0xCEFCF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xCEFCFC", Offset = "0xCEFCFC", VA = "0xCEFCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xCEFD8C", Offset = "0xCEFD8C", VA = "0xCEFD8C")]
	public LookAtBehaviour()
	{
	}
}
[Token(Token = "0x20002B3")]
public class LookAtCameraBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xCEFD94", Offset = "0xCEFD94", VA = "0xCEFD94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xCEFD98", Offset = "0xCEFD98", VA = "0xCEFD98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xCEFEAC", Offset = "0xCEFEAC", VA = "0xCEFEAC")]
	public LookAtCameraBehaviour()
	{
	}
}
[Token(Token = "0x20002B4")]
public class RayBehavior : MonoBehaviour
{
	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BeginLocation;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EndLocation;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color BeginColor;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color EndColor;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 PositionRange;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WidthA;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float WidthB;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RadiusA;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float RadiusB;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LineRenderer Line;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animation Anim;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool changed;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 Offset;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float AlphaCurve;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float FadeSpeed;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xCEFA28", Offset = "0xCEFA28", VA = "0xCEFA28")]
	public void ResetRay()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xCEFEB4", Offset = "0xCEFEB4", VA = "0xCEFEB4")]
	public void UpdateLineData()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xCEFF90", Offset = "0xCEFF90", VA = "0xCEFF90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xCF0060", Offset = "0xCF0060", VA = "0xCF0060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xCF00AC", Offset = "0xCF00AC", VA = "0xCF00AC")]
	public RayBehavior()
	{
	}
}
[Token(Token = "0x20002B5")]
public class RotateBehaviour : MonoBehaviour
{
	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationAmount;

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xCF00D4", Offset = "0xCF00D4", VA = "0xCF00D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xCF00D8", Offset = "0xCF00D8", VA = "0xCF00D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xCF0134", Offset = "0xCF0134", VA = "0xCF0134")]
	public RotateBehaviour()
	{
	}
}
[Token(Token = "0x20002B6")]
public class ScrollBehaviour : MonoBehaviour
{
	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xCF013C", Offset = "0xCF013C", VA = "0xCF013C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xCF0218", Offset = "0xCF0218", VA = "0xCF0218")]
	public ScrollBehaviour()
	{
	}
}
[Token(Token = "0x20002B7")]
public class SENBDLCameraAnimation : MonoBehaviour
{
	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 randomRotation;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 randomModRotation;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xCF02B4", Offset = "0xCF02B4", VA = "0xCF02B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xCF04C4", Offset = "0xCF04C4", VA = "0xCF04C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xCF0674", Offset = "0xCF0674", VA = "0xCF0674")]
	public SENBDLCameraAnimation()
	{
	}
}
[Token(Token = "0x20002B8")]
public static class SENBDLGlobal
{
	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Quaternion sphereOfCubesRotation;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SENBDLMainCube mainCube;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float timeScale;
}
[Token(Token = "0x20002B9")]
public class SENBDLGlowingOrbitingCube : MonoBehaviour
{
	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float pulseSpeed;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float phase;

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xCF067C", Offset = "0xCF067C", VA = "0xCF067C")]
	private Vector3 Vec3(float x)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xCF0688", Offset = "0xCF0688", VA = "0xCF0688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xCF06E8", Offset = "0xCF06E8", VA = "0xCF06E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xCF0870", Offset = "0xCF0870", VA = "0xCF0870")]
	public SENBDLGlowingOrbitingCube()
	{
	}
}
[Token(Token = "0x20002BA")]
public class SENBDLMainCube : MonoBehaviour
{
	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color[] glowColors;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject orbitingCube;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glowingOrbitingCube;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cubeEmissivePart;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particles;

	[Token(Token = "0x40011D3")]
	private const float newColorFrequency = 8f;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float newColorCounter;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color currentColor;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color previousColor;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Color glowColor;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int currentColorIndex;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float bloomAmount;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lensDirtAmount;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float fps;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float deltaTime;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SENaturalBloomAndDirtyLens bloomShader;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xCF0878", Offset = "0xCF0878", VA = "0xCF0878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xCF0BA0", Offset = "0xCF0BA0", VA = "0xCF0BA0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xCF0BA4", Offset = "0xCF0BA4", VA = "0xCF0BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xCF0D98", Offset = "0xCF0D98", VA = "0xCF0D98")]
	private void AnimateColor()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xCF1014", Offset = "0xCF1014", VA = "0xCF1014")]
	private void RotateSphereOfCubes()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xCF10E8", Offset = "0xCF10E8", VA = "0xCF10E8")]
	private void IncrementCounters()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xCF1114", Offset = "0xCF1114", VA = "0xCF1114")]
	private void GetInput()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xCF12C8", Offset = "0xCF12C8", VA = "0xCF12C8")]
	private void UpdateShaderValues()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xCF12F0", Offset = "0xCF12F0", VA = "0xCF12F0")]
	private void SmoothFPSCounter()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xCF1328", Offset = "0xCF1328", VA = "0xCF1328")]
	public SENBDLMainCube()
	{
	}
}
[Token(Token = "0x20002BB")]
public class SENBDLOrbitingCube : MonoBehaviour
{
	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform transf;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 rotationVector;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationSpeed;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 spherePosition;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 randomSphereRotation;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float sphereRotationSpeed;

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xCF1398", Offset = "0xCF1398", VA = "0xCF1398")]
	private Vector3 Vec3(float x)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xCF13A4", Offset = "0xCF13A4", VA = "0xCF13A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xCF1734", Offset = "0xCF1734", VA = "0xCF1734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xCF19F4", Offset = "0xCF19F4", VA = "0xCF19F4")]
	public SENBDLOrbitingCube()
	{
	}
}
[Token(Token = "0x20002BC")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Sonic Ether/SE Natural Bloom and Dirty Lens")]
public class SENaturalBloomAndDirtyLens : MonoBehaviour
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 0.4f)]
	public float bloomIntensity;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader shader;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D lensDirtTexture;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 0.95f)]
	public float lensDirtIntensity;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isSupported;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float blurSize;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool inputIsHDR;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xCF19FC", Offset = "0xCF19FC", VA = "0xCF19FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xCF1AE8", Offset = "0xCF1AE8", VA = "0xCF1AE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xCF1B74", Offset = "0xCF1B74", VA = "0xCF1B74")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xCF20CC", Offset = "0xCF20CC", VA = "0xCF20CC")]
	public SENaturalBloomAndDirtyLens()
	{
	}
}
[Token(Token = "0x20002BD")]
public class RemoveMeshFromCombined : MonoBehaviour
{
	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> instanceID;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CombinedMeshModification meshModifier;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xCF20EC", Offset = "0xCF20EC", VA = "0xCF20EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xCF224C", Offset = "0xCF224C", VA = "0xCF224C")]
	public RemoveMeshFromCombined()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SkinnedMeshMovements : MonoBehaviour
{
	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] waypoints;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rigidBody;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int index;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xCF22D4", Offset = "0xCF22D4", VA = "0xCF22D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xCF24A8", Offset = "0xCF24A8", VA = "0xCF24A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xCF2334", Offset = "0xCF2334", VA = "0xCF2334")]
	private void NewDestination()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCF26C4", Offset = "0xCF26C4", VA = "0xCF26C4")]
	public SkinnedMeshMovements()
	{
	}
}
[Token(Token = "0x20002BF")]
public class TOD_Animation : MonoBehaviour
{
	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TOD_Min(0f)]
	[Tooltip("How much to move the clouds when the camera moves.")]
	public float CameraMovement;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[TOD_Range(0f, 360f)]
	[Tooltip("Wind direction in degrees.")]
	public float WindDegrees;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Speed of the wind that is acting on the clouds.")]
	[TOD_Min(0f)]
	public float WindSpeed;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TOD_Sky sky;

	[Token(Token = "0x170001A7")]
	public Vector3 CloudUV
	{
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xCF26D4", Offset = "0xCF26D4", VA = "0xCF26D4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xCF26E0", Offset = "0xCF26E0", VA = "0xCF26E0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public Vector3 OffsetUV
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xCF26EC", Offset = "0xCF26EC", VA = "0xCF26EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCF27B4", Offset = "0xCF27B4", VA = "0xCF27B4")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCF2840", Offset = "0xCF2840", VA = "0xCF2840")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCF2924", Offset = "0xCF2924", VA = "0xCF2924")]
	public TOD_Animation()
	{
	}
}
[Token(Token = "0x20002C0")]
[AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = false)]
public class TOD_MinAttribute : PropertyAttribute
{
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xCF2938", Offset = "0xCF2938", VA = "0xCF2938")]
	public TOD_MinAttribute(float min)
	{
	}
}
[Token(Token = "0x20002C1")]
[AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = false)]
public class TOD_MaxAttribute : PropertyAttribute
{
	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float max;

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xCF2960", Offset = "0xCF2960", VA = "0xCF2960")]
	public TOD_MaxAttribute(float max)
	{
	}
}
[Token(Token = "0x20002C2")]
[AttributeUsage(AttributeTargets.Field, Inherited = true, AllowMultiple = false)]
public class TOD_RangeAttribute : PropertyAttribute
{
	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xCF2988", Offset = "0xCF2988", VA = "0xCF2988")]
	public TOD_RangeAttribute(float min, float max)
	{
	}
}
[Token(Token = "0x20002C3")]
public class TOD_Billboard : MonoBehaviour
{
	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Altitude;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Azimuth;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Distance;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Size;

	[Token(Token = "0x6000E7D")]
	private T GetComponentInParents<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xCF29B4", Offset = "0xCF29B4", VA = "0xCF29B4")]
	public TOD_Billboard()
	{
	}
}
[Token(Token = "0x20002C4")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Time of Day/Camera Main Script")]
public class TOD_Camera : MonoBehaviour
{
	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DomePosToCamera;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 DomePosOffset;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DomeScaleToFarClip;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float DomeScaleFactor;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cameraComponent;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cameraTransform;

	[Token(Token = "0x170001A9")]
	public bool HDR
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xCF29C4", Offset = "0xCF29C4", VA = "0xCF29C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AA")]
	public float NearClipPlane
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xCF2A48", Offset = "0xCF2A48", VA = "0xCF2A48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AB")]
	public float FarClipPlane
	{
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xCF2AD0", Offset = "0xCF2AD0", VA = "0xCF2AD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AC")]
	public Color BackgroundColor
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xCF2B58", Offset = "0xCF2B58", VA = "0xCF2B58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xCF2BE4", Offset = "0xCF2BE4", VA = "0xCF2BE4")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xCF2C08", Offset = "0xCF2C08", VA = "0xCF2C08")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xCF2E60", Offset = "0xCF2E60", VA = "0xCF2E60")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xCF3034", Offset = "0xCF3034", VA = "0xCF3034")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xCF2CF8", Offset = "0xCF2CF8", VA = "0xCF2CF8")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xCF3120", Offset = "0xCF3120", VA = "0xCF3120")]
	public void DoDomeScaleToFarClip()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xCF3178", Offset = "0xCF3178", VA = "0xCF3178")]
	public void DoDomePosToCamera()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xCF3200", Offset = "0xCF3200", VA = "0xCF3200")]
	public TOD_Camera()
	{
	}
}
[Token(Token = "0x20002C5")]
[ExecuteInEditMode]
public class TOD_Components : MonoBehaviour
{
	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Space;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Stars;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Sun;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Moon;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Atmosphere;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Clear;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Clouds;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Billboards;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Light;

	[Token(Token = "0x170001AD")]
	public Transform DomeTransform
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xCF3274", Offset = "0xCF3274", VA = "0xCF3274")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xCF327C", Offset = "0xCF327C", VA = "0xCF327C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public Transform SpaceTransform
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xCF3284", Offset = "0xCF3284", VA = "0xCF3284")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xCF328C", Offset = "0xCF328C", VA = "0xCF328C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public Transform StarTransform
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xCF3294", Offset = "0xCF3294", VA = "0xCF3294")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xCF329C", Offset = "0xCF329C", VA = "0xCF329C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public Transform SunTransform
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xCF32A4", Offset = "0xCF32A4", VA = "0xCF32A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xCF32AC", Offset = "0xCF32AC", VA = "0xCF32AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public Transform MoonTransform
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xCF32B4", Offset = "0xCF32B4", VA = "0xCF32B4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xCF32BC", Offset = "0xCF32BC", VA = "0xCF32BC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public Transform AtmosphereTransform
	{
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xCF32C4", Offset = "0xCF32C4", VA = "0xCF32C4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xCF32CC", Offset = "0xCF32CC", VA = "0xCF32CC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public Transform ClearTransform
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xCF32D4", Offset = "0xCF32D4", VA = "0xCF32D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xCF32DC", Offset = "0xCF32DC", VA = "0xCF32DC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public Transform CloudTransform
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xCF32E4", Offset = "0xCF32E4", VA = "0xCF32E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xCF32EC", Offset = "0xCF32EC", VA = "0xCF32EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public Transform BillboardTransform
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xCF32F4", Offset = "0xCF32F4", VA = "0xCF32F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xCF32FC", Offset = "0xCF32FC", VA = "0xCF32FC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public Transform LightTransform
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xCF3304", Offset = "0xCF3304", VA = "0xCF3304")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xCF330C", Offset = "0xCF330C", VA = "0xCF330C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public Renderer SpaceRenderer
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xCF3314", Offset = "0xCF3314", VA = "0xCF3314")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xCF331C", Offset = "0xCF331C", VA = "0xCF331C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public Renderer StarRenderer
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xCF3324", Offset = "0xCF3324", VA = "0xCF3324")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xCF332C", Offset = "0xCF332C", VA = "0xCF332C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public Renderer SunRenderer
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xCF3334", Offset = "0xCF3334", VA = "0xCF3334")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xCF333C", Offset = "0xCF333C", VA = "0xCF333C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public Renderer MoonRenderer
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xCF3344", Offset = "0xCF3344", VA = "0xCF3344")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xCF334C", Offset = "0xCF334C", VA = "0xCF334C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public Renderer AtmosphereRenderer
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xCF3354", Offset = "0xCF3354", VA = "0xCF3354")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xCF335C", Offset = "0xCF335C", VA = "0xCF335C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public Renderer ClearRenderer
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xCF3364", Offset = "0xCF3364", VA = "0xCF3364")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xCF336C", Offset = "0xCF336C", VA = "0xCF336C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public Renderer CloudRenderer
	{
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xCF3374", Offset = "0xCF3374", VA = "0xCF3374")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xCF337C", Offset = "0xCF337C", VA = "0xCF337C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public Renderer[] BillboardRenderers
	{
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xCF3384", Offset = "0xCF3384", VA = "0xCF3384")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xCF338C", Offset = "0xCF338C", VA = "0xCF338C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public MeshFilter SpaceMeshFilter
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xCF3394", Offset = "0xCF3394", VA = "0xCF3394")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xCF339C", Offset = "0xCF339C", VA = "0xCF339C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public MeshFilter StarMeshFilter
	{
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xCF33A4", Offset = "0xCF33A4", VA = "0xCF33A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xCF33AC", Offset = "0xCF33AC", VA = "0xCF33AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public MeshFilter SunMeshFilter
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xCF33B4", Offset = "0xCF33B4", VA = "0xCF33B4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xCF33BC", Offset = "0xCF33BC", VA = "0xCF33BC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public MeshFilter MoonMeshFilter
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xCF33CC", Offset = "0xCF33CC", VA = "0xCF33CC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xCF33D4", Offset = "0xCF33D4", VA = "0xCF33D4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public MeshFilter AtmosphereMeshFilter
	{
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xCF33E4", Offset = "0xCF33E4", VA = "0xCF33E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xCF33EC", Offset = "0xCF33EC", VA = "0xCF33EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public MeshFilter ClearMeshFilter
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xCF33FC", Offset = "0xCF33FC", VA = "0xCF33FC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xCF3404", Offset = "0xCF3404", VA = "0xCF3404")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public MeshFilter CloudMeshFilter
	{
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xCF3414", Offset = "0xCF3414", VA = "0xCF3414")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xCF341C", Offset = "0xCF341C", VA = "0xCF341C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public MeshFilter[] BillboardMeshFilters
	{
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xCF342C", Offset = "0xCF342C", VA = "0xCF342C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xCF3434", Offset = "0xCF3434", VA = "0xCF3434")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public Material SpaceMaterial
	{
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xCF3444", Offset = "0xCF3444", VA = "0xCF3444")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xCF344C", Offset = "0xCF344C", VA = "0xCF344C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public Material StarMaterial
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xCF345C", Offset = "0xCF345C", VA = "0xCF345C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xCF3464", Offset = "0xCF3464", VA = "0xCF3464")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public Material SunMaterial
	{
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xCF3474", Offset = "0xCF3474", VA = "0xCF3474")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xCF347C", Offset = "0xCF347C", VA = "0xCF347C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public Material MoonMaterial
	{
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xCF348C", Offset = "0xCF348C", VA = "0xCF348C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xCF3494", Offset = "0xCF3494", VA = "0xCF3494")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public Material AtmosphereMaterial
	{
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xCF34A4", Offset = "0xCF34A4", VA = "0xCF34A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xCF34AC", Offset = "0xCF34AC", VA = "0xCF34AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public Material ClearMaterial
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xCF34BC", Offset = "0xCF34BC", VA = "0xCF34BC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xCF34C4", Offset = "0xCF34C4", VA = "0xCF34C4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public Material CloudMaterial
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xCF34D4", Offset = "0xCF34D4", VA = "0xCF34D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xCF34DC", Offset = "0xCF34DC", VA = "0xCF34DC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public Material[] BillboardMaterials
	{
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xCF34EC", Offset = "0xCF34EC", VA = "0xCF34EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xCF34F4", Offset = "0xCF34F4", VA = "0xCF34F4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public Light LightSource
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xCF3504", Offset = "0xCF3504", VA = "0xCF3504")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xCF350C", Offset = "0xCF350C", VA = "0xCF350C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public TOD_Sky Sky
	{
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xCF351C", Offset = "0xCF351C", VA = "0xCF351C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xCF3524", Offset = "0xCF3524", VA = "0xCF3524")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public TOD_Animation Animation
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xCF3534", Offset = "0xCF3534", VA = "0xCF3534")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xCF353C", Offset = "0xCF353C", VA = "0xCF353C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public TOD_Time Time
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xCF354C", Offset = "0xCF354C", VA = "0xCF354C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xCF3554", Offset = "0xCF3554", VA = "0xCF3554")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public TOD_Camera Camera
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xCF3564", Offset = "0xCF3564", VA = "0xCF3564")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xCF356C", Offset = "0xCF356C", VA = "0xCF356C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public TOD_Rays Rays
	{
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xCF357C", Offset = "0xCF357C", VA = "0xCF357C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xCF3584", Offset = "0xCF3584", VA = "0xCF3584")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public TOD_Scattering Scattering
	{
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xCF3594", Offset = "0xCF3594", VA = "0xCF3594")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xCF359C", Offset = "0xCF359C", VA = "0xCF359C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public TOD_Shadows Shadows
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xCF35AC", Offset = "0xCF35AC", VA = "0xCF35AC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xCF35B4", Offset = "0xCF35B4", VA = "0xCF35B4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xCF35C4", Offset = "0xCF35C4", VA = "0xCF35C4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xCF3DE8", Offset = "0xCF3DE8", VA = "0xCF3DE8")]
	public TOD_Components()
	{
	}
}
[Token(Token = "0x20002C6")]
public enum TOD_MoonPositionType
{
	[Token(Token = "0x400123A")]
	OppositeToSun,
	[Token(Token = "0x400123B")]
	Realistic
}
[Token(Token = "0x20002C7")]
public enum TOD_StarsPositionType
{
	[Token(Token = "0x400123D")]
	Static,
	[Token(Token = "0x400123E")]
	Rotating
}
[Token(Token = "0x20002C8")]
public enum TOD_FogType
{
	[Token(Token = "0x4001240")]
	None,
	[Token(Token = "0x4001241")]
	Atmosphere,
	[Token(Token = "0x4001242")]
	Directional,
	[Token(Token = "0x4001243")]
	Gradient
}
[Token(Token = "0x20002C9")]
public enum TOD_AmbientType
{
	[Token(Token = "0x4001245")]
	None,
	[Token(Token = "0x4001246")]
	Color,
	[Token(Token = "0x4001247")]
	Gradient,
	[Token(Token = "0x4001248")]
	Spherical
}
[Token(Token = "0x20002CA")]
public enum TOD_ReflectionType
{
	[Token(Token = "0x400124A")]
	None,
	[Token(Token = "0x400124B")]
	Cubemap
}
[Token(Token = "0x20002CB")]
public enum TOD_ColorSpaceType
{
	[Token(Token = "0x400124D")]
	Auto,
	[Token(Token = "0x400124E")]
	Linear,
	[Token(Token = "0x400124F")]
	Gamma
}
[Token(Token = "0x20002CC")]
public enum TOD_ColorRangeType
{
	[Token(Token = "0x4001251")]
	Auto,
	[Token(Token = "0x4001252")]
	HDR,
	[Token(Token = "0x4001253")]
	LDR
}
[Token(Token = "0x20002CD")]
public enum TOD_ColorOutputType
{
	[Token(Token = "0x4001255")]
	Raw,
	[Token(Token = "0x4001256")]
	Dithered
}
[Token(Token = "0x20002CE")]
public enum TOD_CloudQualityType
{
	[Token(Token = "0x4001258")]
	Low,
	[Token(Token = "0x4001259")]
	Medium,
	[Token(Token = "0x400125A")]
	High
}
[Token(Token = "0x20002CF")]
public enum TOD_MeshQualityType
{
	[Token(Token = "0x400125C")]
	Low,
	[Token(Token = "0x400125D")]
	Medium,
	[Token(Token = "0x400125E")]
	High
}
[Token(Token = "0x20002D0")]
public enum TOD_StarQualityType
{
	[Token(Token = "0x4001260")]
	Low,
	[Token(Token = "0x4001261")]
	Medium,
	[Token(Token = "0x4001262")]
	High
}
[Token(Token = "0x20002D1")]
public enum TOD_SkyQualityType
{
	[Token(Token = "0x4001264")]
	PerVertex,
	[Token(Token = "0x4001265")]
	PerPixel
}
[Token(Token = "0x20002D2")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
public abstract class TOD_ImageEffect : MonoBehaviour
{
	[Token(Token = "0x20002D3")]
	public enum ResolutionType
	{
		[Token(Token = "0x400126A")]
		Low,
		[Token(Token = "0x400126B")]
		Normal,
		[Token(Token = "0x400126C")]
		High
	}

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Camera cam;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] frustumCornersArray;

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xCF3DF0", Offset = "0xCF3DF0", VA = "0xCF3DF0")]
	protected Material CreateMaterial(Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xCF414C", Offset = "0xCF414C", VA = "0xCF414C")]
	private TOD_Sky FindSky(bool fallback = false)
	{
		return null;
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xCF42B4", Offset = "0xCF42B4", VA = "0xCF42B4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xCF439C", Offset = "0xCF439C", VA = "0xCF439C")]
	protected bool CheckSupport(bool needDepth = false, bool needHdr = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xCF464C", Offset = "0xCF464C", VA = "0xCF464C")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xCF49C4", Offset = "0xCF49C4", VA = "0xCF49C4")]
	protected Matrix4x4 FrustumCorners()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xCF4CE4", Offset = "0xCF4CE4", VA = "0xCF4CE4")]
	protected RenderTexture GetSkyMask(RenderTexture source, Material skyMaskMaterial, Material screenClearMaterial, ResolutionType resolution, Vector3 lightPos, int blurIterations, float blurRadius, float maxRadius)
	{
		return null;
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xCF50AC", Offset = "0xCF50AC", VA = "0xCF50AC")]
	protected TOD_ImageEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D4")]
public class TOD_Parameters
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_WorldParameters World;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TOD_DayParameters Day;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TOD_NightParameters Night;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TOD_LightParameters Light;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xCF5128", Offset = "0xCF5128", VA = "0xCF5128")]
	public TOD_Parameters()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xCF5130", Offset = "0xCF5130", VA = "0xCF5130")]
	public TOD_Parameters(TOD_Sky sky)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xCF5228", Offset = "0xCF5228", VA = "0xCF5228")]
	public void ToSky(TOD_Sky sky)
	{
	}
}
[Serializable]
[Token(Token = "0x20002D5")]
public class TOD_CycleParameters
{
	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Current hour of the day.")]
	public float Hour;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Current day of the month.")]
	public int Day;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Current month of the year.")]
	public int Month;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[TOD_Range(1f, 9999f)]
	[Tooltip("Current year.")]
	public int Year;

	[Token(Token = "0x170001D7")]
	public DateTime DateTime
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xCF5318", Offset = "0xCF5318", VA = "0xCF5318")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xCF53C8", Offset = "0xCF53C8", VA = "0xCF53C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public long Ticks
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xCF549C", Offset = "0xCF549C", VA = "0xCF549C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xCF54BC", Offset = "0xCF54BC", VA = "0xCF54BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xCF54F4", Offset = "0xCF54F4", VA = "0xCF54F4")]
	public TOD_CycleParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D6")]
public class TOD_WorldParameters
{
	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Range(-90f, 90f)]
	[Tooltip("Latitude of the current location in degrees.")]
	public float Latitude;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(-180f, 180f)]
	[Tooltip("Longitude of the current location in degrees.")]
	public float Longitude;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(-14f, 14f)]
	[Tooltip("UTC/GMT time zone of the current location in hours.")]
	public float UTC;

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xCF5518", Offset = "0xCF5518", VA = "0xCF5518")]
	public TOD_WorldParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D7")]
public class TOD_AtmosphereParameters
{
	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Intensity of the atmospheric Rayleigh scattering.")]
	[TOD_Min(0f)]
	public float RayleighMultiplier;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Min(0f)]
	[Tooltip("Intensity of the atmospheric Mie scattering.")]
	public float MieMultiplier;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Overall brightness of the atmosphere.")]
	[TOD_Min(0f)]
	public float Brightness;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Overall contrast of the atmosphere.")]
	[TOD_Min(0f)]
	public float Contrast;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Directionality factor that determines the size of the glow around the sun.")]
	[TOD_Range(0f, 1f)]
	public float Directionality;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Density of the fog covering the sky.")]
	[TOD_Range(0f, 1f)]
	public float Fogginess;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xCF5520", Offset = "0xCF5520", VA = "0xCF5520")]
	public TOD_AtmosphereParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D8")]
public class TOD_DayParameters
{
	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Color of the sun spot.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient SunColor;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Color of the light that hits the ground.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient LightColor;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of the god rays.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient RayColor;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Color of the light that hits the atmosphere.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient SkyColor;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Color of the clouds.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient CloudColor;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Color of the atmosphere fog.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient FogColor;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Color of the ambient light.\nLeft value: Sun at zenith.\nRight value: Sun at horizon.")]
	public Gradient AmbientColor;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 8f)]
	[Tooltip("Intensity of the light source.")]
	public float LightIntensity;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	[Tooltip("Opacity of the shadows dropped by the light source.")]
	public float ShadowStrength;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 8f)]
	[Tooltip("Brightness multiplier of the ambient light.")]
	public float AmbientMultiplier;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Brightness multiplier of the reflection probe.")]
	[Range(0f, 1f)]
	public float ReflectionMultiplier;

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xCF5540", Offset = "0xCF5540", VA = "0xCF5540")]
	public TOD_DayParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002D9")]
public class TOD_NightParameters
{
	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Color of the moon mesh.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient MoonColor;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Color of the light that hits the ground.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient LightColor;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Color of the god rays.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient RayColor;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Color of the light that hits the atmosphere.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient SkyColor;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Color of the clouds.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient CloudColor;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Color of the atmosphere fog.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient FogColor;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Color of the ambient light.\nLeft value: Sun at horizon.\nRight value: Sun opposite to zenith.")]
	public Gradient AmbientColor;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Intensity of the light source.")]
	[Range(0f, 8f)]
	public float LightIntensity;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Opacity of the shadows dropped by the light source.")]
	[Range(0f, 1f)]
	public float ShadowStrength;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Brightness multiplier of the ambient light.")]
	[Range(0f, 8f)]
	public float AmbientMultiplier;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 1f)]
	[Tooltip("Brightness multiplier of the reflection probe.")]
	public float ReflectionMultiplier;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xCF63DC", Offset = "0xCF63DC", VA = "0xCF63DC")]
	public TOD_NightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DA")]
public class TOD_SunParameters
{
	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[TOD_Min(0f)]
	[Tooltip("Diameter of the sun in degrees.\nThe diameter as seen from earth is 0.5 degrees.")]
	public float MeshSize;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Min(0f)]
	[Tooltip("Brightness of the sun.")]
	public float MeshBrightness;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TOD_Min(0f)]
	[Tooltip("Contrast of the sun.")]
	public float MeshContrast;

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xCF7260", Offset = "0xCF7260", VA = "0xCF7260")]
	public TOD_SunParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DB")]
public class TOD_MoonParameters
{
	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[TOD_Min(0f)]
	[Tooltip("Diameter of the moon in degrees.\nThe diameter as seen from earth is 0.5 degrees.")]
	public float MeshSize;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Min(0f)]
	[Tooltip("Brightness of the moon.")]
	public float MeshBrightness;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Contrast of the moon.")]
	[TOD_Min(0f)]
	public float MeshContrast;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Size of the moon halo.")]
	[TOD_Min(0f)]
	public float HaloSize;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Brightness of the moon halo.")]
	[TOD_Min(0f)]
	public float HaloBrightness;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Type of the moon position calculation.")]
	public TOD_MoonPositionType Position;

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xCF727C", Offset = "0xCF727C", VA = "0xCF727C")]
	public TOD_MoonParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DC")]
public class TOD_StarParameters
{
	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Size of the stars.")]
	[TOD_Min(0f)]
	public float Size;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Min(0f)]
	[Tooltip("Brightness of the stars.")]
	public float Brightness;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Type of the stars position calculation.")]
	public TOD_StarsPositionType Position;

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xCF729C", Offset = "0xCF729C", VA = "0xCF729C")]
	public TOD_StarParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DD")]
public class TOD_CloudParameters
{
	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[TOD_Min(1f)]
	[Tooltip("Size of the clouds.")]
	public float Size;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Range(0f, 1f)]
	[Tooltip("Opacity of the clouds.")]
	public float Opacity;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TOD_Range(0f, 1f)]
	[Tooltip("How much sky is covered by clouds.")]
	public float Coverage;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Sharpness of the cloud to sky transition.")]
	[TOD_Range(0f, 1f)]
	public float Sharpness;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TOD_Range(0f, 1f)]
	[Tooltip("Coloring of the clouds.")]
	public float Coloring;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[TOD_Range(0f, 1f)]
	[Tooltip("Amount of skylight that is blocked.")]
	public float Attenuation;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[TOD_Range(0f, 1f)]
	[Tooltip("Amount of sunlight that is blocked.\nOnly affects the highest cloud quality setting.")]
	public float Saturation;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Intensity of the cloud translucency glow.\nOnly affects the highest cloud quality setting.")]
	[TOD_Min(0f)]
	public float Scattering;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[TOD_Min(0f)]
	[Tooltip("Brightness of the clouds.")]
	public float Brightness;

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xCF72B4", Offset = "0xCF72B4", VA = "0xCF72B4")]
	public TOD_CloudParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DE")]
public class TOD_LightParameters
{
	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Refresh interval of the light source position in seconds.")]
	[TOD_Min(0f)]
	public float UpdateInterval;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Controls how low the light source is allowed to go.\n = -1 light source can go as low as it wants.\n = 0 light source will never go below the horizon.\n = +1 light source will never leave zenith.")]
	[TOD_Range(-1f, 1f)]
	public float MinimumHeight;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xCF72D8", Offset = "0xCF72D8", VA = "0xCF72D8")]
	public TOD_LightParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002DF")]
public class TOD_FogParameters
{
	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Fog color mode.")]
	public TOD_FogType Mode;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Fog color sampling height.\n = 0 fog is atmosphere color at horizon.\n = 1 fog is atmosphere color at zenith.")]
	[TOD_Range(0f, 1f)]
	public float HeightBias;

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xCF72E0", Offset = "0xCF72E0", VA = "0xCF72E0")]
	public TOD_FogParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E0")]
public class TOD_AmbientParameters
{
	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Ambient light mode.")]
	public TOD_AmbientType Mode;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[TOD_Min(0f)]
	[Tooltip("Saturation of the ambient light.")]
	public float Saturation;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Refresh interval of the ambient light probe in seconds.")]
	[TOD_Min(0f)]
	public float UpdateInterval;

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xCF72F0", Offset = "0xCF72F0", VA = "0xCF72F0")]
	public TOD_AmbientParameters()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E1")]
public class TOD_ReflectionParameters
{
	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("Reflection probe mode.")]
	public TOD_ReflectionType Mode;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Tooltip("Clear flags to use for the reflection.")]
	public ReflectionProbeClearFlags ClearFlags;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Layers to include in the reflection.")]
	public LayerMask CullingMask;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Time slicing behaviour to spread out rendering cost over multiple frames.")]
	public ReflectionProbeTimeSlicingMode TimeSlicing;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TOD_Range(16f, 2048f)]
	[Tooltip("Resolution of the reflection bake.")]
	public int Resolution;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Refresh interval of the reflection cubemap in seconds.")]
	[TOD_Min(0f)]
	public float UpdateInterval;

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xCF7308", Offset = "0xCF7308", VA = "0xCF7308")]
	public TOD_ReflectionParameters()
	{
	}
}
[Token(Token = "0x20002E2")]
[AddComponentMenu("Time of Day/Camera God Rays")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
public class TOD_Rays : TOD_ImageEffect
{
	[Token(Token = "0x20002E3")]
	public enum BlendModeType
	{
		[Token(Token = "0x40012CF")]
		Screen,
		[Token(Token = "0x40012D0")]
		Add
	}

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader GodRayShader;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader ScreenClearShader;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader SkyMaskShader;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Whether or not to use the depth buffer.")]
	public bool UseDepthTexture;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The god ray rendering blend mode.")]
	[Header("Rays")]
	public BlendModeType BlendMode;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The intensity of the god rays.")]
	[TOD_Min(0f)]
	public float Intensity;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Blur")]
	[Tooltip("The god ray rendering resolution.")]
	public ResolutionType Resolution;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[TOD_Range(0f, 4f)]
	[Tooltip("The number of blur iterations to be performed.")]
	public int BlurIterations;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[TOD_Min(0f)]
	[Tooltip("The radius to blur filter applied to the god rays.")]
	public float BlurRadius;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[TOD_Min(0f)]
	[Tooltip("The maximum radius of the god rays.")]
	public float MaxRadius;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material godRayMaterial;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material screenClearMaterial;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material skyMaskMaterial;

	[Token(Token = "0x40012CC")]
	private const int PASS_SCREEN = 0;

	[Token(Token = "0x40012CD")]
	private const int PASS_ADD = 1;

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xCF7344", Offset = "0xCF7344", VA = "0xCF7344")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xCF74F0", Offset = "0xCF74F0", VA = "0xCF74F0")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xCF7604", Offset = "0xCF7604", VA = "0xCF7604")]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xCF7804", Offset = "0xCF7804", VA = "0xCF7804")]
	public TOD_Rays()
	{
	}
}
[Token(Token = "0x20002E4")]
public class TOD_Resources : MonoBehaviour
{
	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Skybox;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh MoonLOD0;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh MoonLOD1;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh MoonLOD2;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh SkyLOD0;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh SkyLOD1;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh SkyLOD2;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh CloudsLOD0;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh CloudsLOD1;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mesh CloudsLOD2;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Mesh StarsLOD0;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Mesh StarsLOD1;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh StarsLOD2;

	[Token(Token = "0x170001D9")]
	public int ID_SunLightColor
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xCF7884", Offset = "0xCF7884", VA = "0xCF7884")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xCF788C", Offset = "0xCF788C", VA = "0xCF788C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public int ID_MoonLightColor
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xCF7894", Offset = "0xCF7894", VA = "0xCF7894")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xCF789C", Offset = "0xCF789C", VA = "0xCF789C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public int ID_SunSkyColor
	{
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xCF78A4", Offset = "0xCF78A4", VA = "0xCF78A4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCF78AC", Offset = "0xCF78AC", VA = "0xCF78AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public int ID_MoonSkyColor
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xCF78B4", Offset = "0xCF78B4", VA = "0xCF78B4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xCF78BC", Offset = "0xCF78BC", VA = "0xCF78BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public int ID_SunMeshColor
	{
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xCF78C4", Offset = "0xCF78C4", VA = "0xCF78C4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xCF78CC", Offset = "0xCF78CC", VA = "0xCF78CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public int ID_MoonMeshColor
	{
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xCF78D4", Offset = "0xCF78D4", VA = "0xCF78D4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xCF78DC", Offset = "0xCF78DC", VA = "0xCF78DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public int ID_SunCloudColor
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xCF78E4", Offset = "0xCF78E4", VA = "0xCF78E4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xCF78EC", Offset = "0xCF78EC", VA = "0xCF78EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public int ID_MoonCloudColor
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xCF78F4", Offset = "0xCF78F4", VA = "0xCF78F4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xCF78FC", Offset = "0xCF78FC", VA = "0xCF78FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public int ID_FogColor
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xCF7904", Offset = "0xCF7904", VA = "0xCF7904")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xCF790C", Offset = "0xCF790C", VA = "0xCF790C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public int ID_GroundColor
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xCF7914", Offset = "0xCF7914", VA = "0xCF7914")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xCF791C", Offset = "0xCF791C", VA = "0xCF791C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public int ID_AmbientColor
	{
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xCF7924", Offset = "0xCF7924", VA = "0xCF7924")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xCF792C", Offset = "0xCF792C", VA = "0xCF792C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public int ID_SunDirection
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCF7934", Offset = "0xCF7934", VA = "0xCF7934")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xCF793C", Offset = "0xCF793C", VA = "0xCF793C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public int ID_MoonDirection
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xCF7944", Offset = "0xCF7944", VA = "0xCF7944")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xCF794C", Offset = "0xCF794C", VA = "0xCF794C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public int ID_LightDirection
	{
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xCF7954", Offset = "0xCF7954", VA = "0xCF7954")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xCF795C", Offset = "0xCF795C", VA = "0xCF795C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public int ID_LocalSunDirection
	{
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xCF7964", Offset = "0xCF7964", VA = "0xCF7964")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xCF796C", Offset = "0xCF796C", VA = "0xCF796C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public int ID_LocalMoonDirection
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xCF7974", Offset = "0xCF7974", VA = "0xCF7974")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xCF797C", Offset = "0xCF797C", VA = "0xCF797C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public int ID_LocalLightDirection
	{
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xCF7984", Offset = "0xCF7984", VA = "0xCF7984")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xCF798C", Offset = "0xCF798C", VA = "0xCF798C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public int ID_Contrast
	{
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xCF7994", Offset = "0xCF7994", VA = "0xCF7994")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xCF799C", Offset = "0xCF799C", VA = "0xCF799C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public int ID_Brightness
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xCF79A4", Offset = "0xCF79A4", VA = "0xCF79A4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xCF79AC", Offset = "0xCF79AC", VA = "0xCF79AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public int ID_Fogginess
	{
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xCF79B4", Offset = "0xCF79B4", VA = "0xCF79B4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xCF79BC", Offset = "0xCF79BC", VA = "0xCF79BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public int ID_Directionality
	{
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xCF79C4", Offset = "0xCF79C4", VA = "0xCF79C4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xCF79CC", Offset = "0xCF79CC", VA = "0xCF79CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public int ID_MoonHaloPower
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCF79D4", Offset = "0xCF79D4", VA = "0xCF79D4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xCF79DC", Offset = "0xCF79DC", VA = "0xCF79DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public int ID_MoonHaloColor
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCF79E4", Offset = "0xCF79E4", VA = "0xCF79E4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCF79EC", Offset = "0xCF79EC", VA = "0xCF79EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public int ID_CloudSize
	{
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCF79F4", Offset = "0xCF79F4", VA = "0xCF79F4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCF79FC", Offset = "0xCF79FC", VA = "0xCF79FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public int ID_CloudOpacity
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCF7A04", Offset = "0xCF7A04", VA = "0xCF7A04")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCF7A0C", Offset = "0xCF7A0C", VA = "0xCF7A0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public int ID_CloudCoverage
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCF7A14", Offset = "0xCF7A14", VA = "0xCF7A14")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCF7A1C", Offset = "0xCF7A1C", VA = "0xCF7A1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public int ID_CloudSharpness
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCF7A24", Offset = "0xCF7A24", VA = "0xCF7A24")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCF7A2C", Offset = "0xCF7A2C", VA = "0xCF7A2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public int ID_CloudDensity
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCF7A34", Offset = "0xCF7A34", VA = "0xCF7A34")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xCF7A3C", Offset = "0xCF7A3C", VA = "0xCF7A3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public int ID_CloudColoring
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xCF7A44", Offset = "0xCF7A44", VA = "0xCF7A44")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xCF7A4C", Offset = "0xCF7A4C", VA = "0xCF7A4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public int ID_CloudAttenuation
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xCF7A54", Offset = "0xCF7A54", VA = "0xCF7A54")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCF7A5C", Offset = "0xCF7A5C", VA = "0xCF7A5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public int ID_CloudSaturation
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCF7A64", Offset = "0xCF7A64", VA = "0xCF7A64")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xCF7A6C", Offset = "0xCF7A6C", VA = "0xCF7A6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public int ID_CloudScattering
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCF7A74", Offset = "0xCF7A74", VA = "0xCF7A74")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCF7A7C", Offset = "0xCF7A7C", VA = "0xCF7A7C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public int ID_CloudBrightness
	{
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xCF7A84", Offset = "0xCF7A84", VA = "0xCF7A84")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCF7A8C", Offset = "0xCF7A8C", VA = "0xCF7A8C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public int ID_CloudMultiplier
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCF7A94", Offset = "0xCF7A94", VA = "0xCF7A94")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xCF7A9C", Offset = "0xCF7A9C", VA = "0xCF7A9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public int ID_CloudOffset
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCF7AA4", Offset = "0xCF7AA4", VA = "0xCF7AA4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCF7AAC", Offset = "0xCF7AAC", VA = "0xCF7AAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public int ID_CloudWind
	{
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xCF7AB4", Offset = "0xCF7AB4", VA = "0xCF7AB4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCF7ABC", Offset = "0xCF7ABC", VA = "0xCF7ABC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public int ID_StarSize
	{
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCF7AC4", Offset = "0xCF7AC4", VA = "0xCF7AC4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCF7ACC", Offset = "0xCF7ACC", VA = "0xCF7ACC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public int ID_StarBrightness
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xCF7AD4", Offset = "0xCF7AD4", VA = "0xCF7AD4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xCF7ADC", Offset = "0xCF7ADC", VA = "0xCF7ADC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public int ID_StarVisibility
	{
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xCF7AE4", Offset = "0xCF7AE4", VA = "0xCF7AE4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCF7AEC", Offset = "0xCF7AEC", VA = "0xCF7AEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public int ID_SunMeshContrast
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xCF7AF4", Offset = "0xCF7AF4", VA = "0xCF7AF4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xCF7AFC", Offset = "0xCF7AFC", VA = "0xCF7AFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public int ID_SunMeshBrightness
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xCF7B04", Offset = "0xCF7B04", VA = "0xCF7B04")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xCF7B0C", Offset = "0xCF7B0C", VA = "0xCF7B0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000202")]
	public int ID_MoonMeshContrast
	{
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xCF7B14", Offset = "0xCF7B14", VA = "0xCF7B14")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xCF7B1C", Offset = "0xCF7B1C", VA = "0xCF7B1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000203")]
	public int ID_MoonMeshBrightness
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xCF7B24", Offset = "0xCF7B24", VA = "0xCF7B24")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xCF7B2C", Offset = "0xCF7B2C", VA = "0xCF7B2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000204")]
	public int ID_kBetaMie
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xCF7B34", Offset = "0xCF7B34", VA = "0xCF7B34")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCF7B3C", Offset = "0xCF7B3C", VA = "0xCF7B3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000205")]
	public int ID_kSun
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xCF7B44", Offset = "0xCF7B44", VA = "0xCF7B44")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xCF7B4C", Offset = "0xCF7B4C", VA = "0xCF7B4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public int ID_k4PI
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xCF7B54", Offset = "0xCF7B54", VA = "0xCF7B54")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCF7B5C", Offset = "0xCF7B5C", VA = "0xCF7B5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public int ID_kRadius
	{
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xCF7B64", Offset = "0xCF7B64", VA = "0xCF7B64")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCF7B6C", Offset = "0xCF7B6C", VA = "0xCF7B6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public int ID_kScale
	{
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCF7B74", Offset = "0xCF7B74", VA = "0xCF7B74")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCF7B7C", Offset = "0xCF7B7C", VA = "0xCF7B7C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public int ID_World2Sky
	{
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCF7B84", Offset = "0xCF7B84", VA = "0xCF7B84")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xCF7B8C", Offset = "0xCF7B8C", VA = "0xCF7B8C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public int ID_Sky2World
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xCF7B94", Offset = "0xCF7B94", VA = "0xCF7B94")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xCF7B9C", Offset = "0xCF7B9C", VA = "0xCF7B9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xCF7BA4", Offset = "0xCF7BA4", VA = "0xCF7BA4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xCF82D4", Offset = "0xCF82D4", VA = "0xCF82D4")]
	public TOD_Resources()
	{
	}
}
[Token(Token = "0x20002E5")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Time of Day/Camera Atmospheric Scattering")]
[ExecuteInEditMode]
public class TOD_Scattering : TOD_ImageEffect
{
	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader ScatteringShader;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader ScreenClearShader;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader SkyMaskShader;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D DitheringTexture;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Whether to render atmosphere and fog in a single pass or two separate passes. Disable when using anti-aliasing in forward rendering or when your manual reflection scripts need the sky dome to be present before the image effects are rendered.")]
	public bool SinglePass;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Fog")]
	[Tooltip("How quickly the fog thickens with increasing distance.")]
	[Range(0f, 1f)]
	public float GlobalDensity;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("How quickly the fog falls off with increasing altitude.")]
	[Range(0f, 1f)]
	public float HeightFalloff;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("The height where fog reaches its maximum density.")]
	public float ZeroLevel;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("The scattering resolution.")]
	[Header("Blur")]
	public ResolutionType Resolution;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[TOD_Range(0f, 4f)]
	[Tooltip("The number of blur iterations to be performed.")]
	public int BlurIterations;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[TOD_Min(0f)]
	[Tooltip("The radius to blur filter applied to the directional scattering.")]
	public float BlurRadius;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[TOD_Min(0f)]
	[Tooltip("The maximum radius of the directional scattering.")]
	public float MaxRadius;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material scatteringMaterial;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material screenClearMaterial;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material skyMaskMaterial;

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xCF82DC", Offset = "0xCF82DC", VA = "0xCF82DC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xCF8488", Offset = "0xCF8488", VA = "0xCF8488")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xCF859C", Offset = "0xCF859C", VA = "0xCF859C")]
	protected void OnPreCull()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xCF8640", Offset = "0xCF8640", VA = "0xCF8640")]
	protected void OnPostRender()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xCF86E4", Offset = "0xCF86E4", VA = "0xCF86E4")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xCF8968", Offset = "0xCF8968", VA = "0xCF8968")]
	public TOD_Scattering()
	{
	}
}
[Token(Token = "0x20002E6")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Time of Day/Camera Cloud Shadows")]
public class TOD_Shadows : TOD_ImageEffect
{
	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader ShadowShader;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D CloudTexture;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Shadows")]
	[Range(0f, 1f)]
	public float Cutoff;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float Fade;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Intensity;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material shadowMaterial;

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xCF89EC", Offset = "0xCF89EC", VA = "0xCF89EC")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xCF8AA8", Offset = "0xCF8AA8", VA = "0xCF8AA8")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xCF8B34", Offset = "0xCF8B34", VA = "0xCF8B34")]
	[ImageEffectOpaque]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xCF8D68", Offset = "0xCF8D68", VA = "0xCF8D68")]
	public TOD_Shadows()
	{
	}
}
[Token(Token = "0x20002E7")]
[RequireComponent(typeof(TOD_Components))]
[RequireComponent(typeof(TOD_Resources))]
[ExecuteInEditMode]
public class TOD_Sky : MonoBehaviour
{
	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<TOD_Sky> instances;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int probeRenderID;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Auto: Use the player settings.\nLinear: Force linear color space.\nGamma: Force gamma color space.")]
	public TOD_ColorSpaceType ColorSpace;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Auto: Use the camera settings.\nHDR: Force high dynamic range.\nLDR: Force low dynamic range.")]
	public TOD_ColorRangeType ColorRange;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Raw: Write color without modifications.\nDithered: Add dithering to reduce banding.")]
	public TOD_ColorOutputType ColorOutput;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Per Vertex: Calculate sky color per vertex.\nPer Pixel: Calculate sky color per pixel.")]
	public TOD_SkyQualityType SkyQuality;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Low: Only recommended for very old mobile devices.\nMedium: Simplified cloud shading.\nHigh: Physically based cloud shading.")]
	public TOD_CloudQualityType CloudQuality;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Low: Only recommended for very old mobile devices.\nMedium: Simplified mesh geometry.\nHigh: Detailed mesh geometry.")]
	public TOD_MeshQualityType MeshQuality;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Low: Recommended for most mobile devices.\nMedium: Includes most visible stars.\nHigh: Includes all visible stars.")]
	public TOD_StarQualityType StarQuality;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TOD_CycleParameters Cycle;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TOD_WorldParameters World;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TOD_AtmosphereParameters Atmosphere;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TOD_DayParameters Day;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TOD_NightParameters Night;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TOD_SunParameters Sun;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TOD_MoonParameters Moon;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TOD_StarParameters Stars;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TOD_CloudParameters Clouds;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TOD_LightParameters Light;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TOD_FogParameters Fog;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TOD_AmbientParameters Ambient;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TOD_ReflectionParameters Reflection;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeSinceLightUpdate;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timeSinceAmbientUpdate;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float timeSinceReflectionUpdate;

	[Token(Token = "0x4001364")]
	private const int TOD_SAMPLES = 2;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Vector3 kBetaMie;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector4 kSun;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector4 k4PI;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Vector4 kRadius;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector4 kScale;

	[Token(Token = "0x400136A")]
	private const float pi = (float)Math.PI;

	[Token(Token = "0x400136B")]
	private const float tau = (float)Math.PI * 2f;

	[Token(Token = "0x1700020B")]
	public static List<TOD_Sky> Instances
	{
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xCF8DC8", Offset = "0xCF8DC8", VA = "0xCF8DC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020C")]
	public static TOD_Sky Instance
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xCF8E20", Offset = "0xCF8E20", VA = "0xCF8E20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020D")]
	public bool Initialized
	{
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xCF8EE4", Offset = "0xCF8EE4", VA = "0xCF8EE4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xCF8EEC", Offset = "0xCF8EEC", VA = "0xCF8EEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700020E")]
	public bool Headless
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCF8EF8", Offset = "0xCF8EF8", VA = "0xCF8EF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020F")]
	public TOD_Components Components
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCF8F14", Offset = "0xCF8F14", VA = "0xCF8F14")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCF8F1C", Offset = "0xCF8F1C", VA = "0xCF8F1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public TOD_Resources Resources
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCF8F24", Offset = "0xCF8F24", VA = "0xCF8F24")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xCF8F2C", Offset = "0xCF8F2C", VA = "0xCF8F2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public bool IsDay
	{
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xCF8F34", Offset = "0xCF8F34", VA = "0xCF8F34")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xCF8F3C", Offset = "0xCF8F3C", VA = "0xCF8F3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000212")]
	public bool IsNight
	{
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xCF8F48", Offset = "0xCF8F48", VA = "0xCF8F48")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCF8F50", Offset = "0xCF8F50", VA = "0xCF8F50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public float Radius
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCF8F5C", Offset = "0xCF8F5C", VA = "0xCF8F5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000214")]
	public float Diameter
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xCF8F88", Offset = "0xCF8F88", VA = "0xCF8F88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000215")]
	public float LerpValue
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCF8FB4", Offset = "0xCF8FB4", VA = "0xCF8FB4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xCF8FBC", Offset = "0xCF8FBC", VA = "0xCF8FBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public float SunZenith
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xCF8FC4", Offset = "0xCF8FC4", VA = "0xCF8FC4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xCF8FCC", Offset = "0xCF8FCC", VA = "0xCF8FCC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public float SunAltitude
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xCF8FD4", Offset = "0xCF8FD4", VA = "0xCF8FD4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xCF8FDC", Offset = "0xCF8FDC", VA = "0xCF8FDC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public float SunAzimuth
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xCF8FE4", Offset = "0xCF8FE4", VA = "0xCF8FE4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xCF8FEC", Offset = "0xCF8FEC", VA = "0xCF8FEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public float MoonZenith
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xCF8FF4", Offset = "0xCF8FF4", VA = "0xCF8FF4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xCF8FFC", Offset = "0xCF8FFC", VA = "0xCF8FFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public float MoonAltitude
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xCF9004", Offset = "0xCF9004", VA = "0xCF9004")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xCF900C", Offset = "0xCF900C", VA = "0xCF900C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public float MoonAzimuth
	{
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xCF9014", Offset = "0xCF9014", VA = "0xCF9014")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xCF901C", Offset = "0xCF901C", VA = "0xCF901C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public float SunsetTime
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xCF9024", Offset = "0xCF9024", VA = "0xCF9024")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xCF902C", Offset = "0xCF902C", VA = "0xCF902C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public float SunriseTime
	{
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCF9034", Offset = "0xCF9034", VA = "0xCF9034")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCF903C", Offset = "0xCF903C", VA = "0xCF903C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public float LocalSiderealTime
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCF9044", Offset = "0xCF9044", VA = "0xCF9044")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCF904C", Offset = "0xCF904C", VA = "0xCF904C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700021F")]
	public float LightZenith
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCF9054", Offset = "0xCF9054", VA = "0xCF9054")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000220")]
	public float LightIntensity
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCF9068", Offset = "0xCF9068", VA = "0xCF9068")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000221")]
	public float SunVisibility
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCF908C", Offset = "0xCF908C", VA = "0xCF908C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCF9094", Offset = "0xCF9094", VA = "0xCF9094")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000222")]
	public float MoonVisibility
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCF909C", Offset = "0xCF909C", VA = "0xCF909C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xCF90A4", Offset = "0xCF90A4", VA = "0xCF90A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000223")]
	public Vector3 SunDirection
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCF90AC", Offset = "0xCF90AC", VA = "0xCF90AC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCF90B8", Offset = "0xCF90B8", VA = "0xCF90B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000224")]
	public Vector3 MoonDirection
	{
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCF90C4", Offset = "0xCF90C4", VA = "0xCF90C4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xCF90D0", Offset = "0xCF90D0", VA = "0xCF90D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000225")]
	public Vector3 LightDirection
	{
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xCF90DC", Offset = "0xCF90DC", VA = "0xCF90DC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xCF90EC", Offset = "0xCF90EC", VA = "0xCF90EC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000226")]
	public Vector3 LocalSunDirection
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xCF90FC", Offset = "0xCF90FC", VA = "0xCF90FC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xCF910C", Offset = "0xCF910C", VA = "0xCF910C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000227")]
	public Vector3 LocalMoonDirection
	{
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xCF911C", Offset = "0xCF911C", VA = "0xCF911C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xCF912C", Offset = "0xCF912C", VA = "0xCF912C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public Vector3 LocalLightDirection
	{
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xCF913C", Offset = "0xCF913C", VA = "0xCF913C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xCF914C", Offset = "0xCF914C", VA = "0xCF914C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public Color SunLightColor
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xCF915C", Offset = "0xCF915C", VA = "0xCF915C")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xCF9170", Offset = "0xCF9170", VA = "0xCF9170")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public Color MoonLightColor
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xCF9184", Offset = "0xCF9184", VA = "0xCF9184")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCF9198", Offset = "0xCF9198", VA = "0xCF9198")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public Color LightColor
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCF91AC", Offset = "0xCF91AC", VA = "0xCF91AC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700022C")]
	public Color SunRayColor
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xCF91D0", Offset = "0xCF91D0", VA = "0xCF91D0")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCF91E4", Offset = "0xCF91E4", VA = "0xCF91E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public Color MoonRayColor
	{
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xCF91F8", Offset = "0xCF91F8", VA = "0xCF91F8")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCF920C", Offset = "0xCF920C", VA = "0xCF920C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public Color SunSkyColor
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xCF9220", Offset = "0xCF9220", VA = "0xCF9220")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xCF9234", Offset = "0xCF9234", VA = "0xCF9234")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public Color MoonSkyColor
	{
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCF9248", Offset = "0xCF9248", VA = "0xCF9248")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xCF925C", Offset = "0xCF925C", VA = "0xCF925C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public Color SunMeshColor
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xCF9270", Offset = "0xCF9270", VA = "0xCF9270")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xCF9284", Offset = "0xCF9284", VA = "0xCF9284")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public Color MoonMeshColor
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xCF9298", Offset = "0xCF9298", VA = "0xCF9298")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xCF92AC", Offset = "0xCF92AC", VA = "0xCF92AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public Color SunCloudColor
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCF92C0", Offset = "0xCF92C0", VA = "0xCF92C0")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCF92D4", Offset = "0xCF92D4", VA = "0xCF92D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public Color MoonCloudColor
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCF92E8", Offset = "0xCF92E8", VA = "0xCF92E8")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xCF92FC", Offset = "0xCF92FC", VA = "0xCF92FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public Color FogColor
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCF9310", Offset = "0xCF9310", VA = "0xCF9310")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xCF9324", Offset = "0xCF9324", VA = "0xCF9324")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public Color GroundColor
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xCF9338", Offset = "0xCF9338", VA = "0xCF9338")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xCF934C", Offset = "0xCF934C", VA = "0xCF934C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public Color AmbientColor
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xCF9360", Offset = "0xCF9360", VA = "0xCF9360")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCF9374", Offset = "0xCF9374", VA = "0xCF9374")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public Color MoonHaloColor
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCF9388", Offset = "0xCF9388", VA = "0xCF9388")]
		[CompilerGenerated]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCF939C", Offset = "0xCF939C", VA = "0xCF939C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public ReflectionProbe Probe
	{
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCF93B0", Offset = "0xCF93B0", VA = "0xCF93B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCF93B8", Offset = "0xCF93B8", VA = "0xCF93B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xCF93C8", Offset = "0xCF93C8", VA = "0xCF93C8")]
	public Vector3 OrbitalToUnity(float radius, float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xCF942C", Offset = "0xCF942C", VA = "0xCF942C")]
	public Vector3 OrbitalToLocal(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xCF9484", Offset = "0xCF9484", VA = "0xCF9484")]
	public Color SampleAtmosphere(Vector3 direction, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xCF9AF0", Offset = "0xCF9AF0", VA = "0xCF9AF0")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics()
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xCF9B6C", Offset = "0xCF9B6C", VA = "0xCF9B6C")]
	public SphericalHarmonicsL2 RenderToSphericalHarmonics(float intensity, float saturation)
	{
		return default(SphericalHarmonicsL2);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xCFA4CC", Offset = "0xCFA4CC", VA = "0xCFA4CC")]
	public void RenderToCubemap([Optional] RenderTexture targetTexture)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xCFA810", Offset = "0xCFA810", VA = "0xCFA810")]
	public Color SampleFogColor(bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xCFAA88", Offset = "0xCFAA88", VA = "0xCFAA88")]
	public Color SampleSkyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xCFAB74", Offset = "0xCFAB74", VA = "0xCFAB74")]
	public Color SampleEquatorColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xCFAC54", Offset = "0xCFAC54", VA = "0xCFAC54")]
	public void UpdateFog()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xCFACB8", Offset = "0xCFACB8", VA = "0xCFACB8")]
	public void UpdateAmbient()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xCFAF04", Offset = "0xCFAF04", VA = "0xCFAF04")]
	public void UpdateReflection()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xCFAFA8", Offset = "0xCFAFA8", VA = "0xCFAFA8")]
	public void LoadParameters(string xml)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xCFB11C", Offset = "0xCFB11C", VA = "0xCFB11C")]
	private void UpdateQualitySettings()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xCFB5B0", Offset = "0xCFB5B0", VA = "0xCFB5B0")]
	private void UpdateRenderSettings()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xCFB66C", Offset = "0xCFB66C", VA = "0xCFB66C")]
	private void UpdateShaderKeywords()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xCFB8C8", Offset = "0xCFB8C8", VA = "0xCFB8C8")]
	private void UpdateShaderProperties()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xCFC0BC", Offset = "0xCFC0BC", VA = "0xCFC0BC")]
	private float ShaderScale(float inCos)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xCFC120", Offset = "0xCFC120", VA = "0xCFC120")]
	private float ShaderMiePhase(float eyeCos, float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xCFC164", Offset = "0xCFC164", VA = "0xCFC164")]
	private float ShaderRayleighPhase(float eyeCos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xCFC174", Offset = "0xCFC174", VA = "0xCFC174")]
	private Color ShaderNightSkyColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xCFC1B0", Offset = "0xCFC1B0", VA = "0xCFC1B0")]
	private Color ShaderMoonHaloColor(Vector3 dir)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xCF9A64", Offset = "0xCF9A64", VA = "0xCF9A64")]
	private Color TOD_HDR2LDR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xCFC234", Offset = "0xCFC234", VA = "0xCFC234")]
	private Color TOD_GAMMA2LINEAR(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xCF9AE0", Offset = "0xCF9AE0", VA = "0xCF9AE0")]
	private Color TOD_LINEAR2GAMMA(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xCF94DC", Offset = "0xCF94DC", VA = "0xCF94DC")]
	private Color ShaderScatteringColor(Vector3 dir, bool directLight = true)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xCFC244", Offset = "0xCFC244", VA = "0xCFC244")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xCFC3A8", Offset = "0xCFC3A8", VA = "0xCFC3A8")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xCFC49C", Offset = "0xCFC49C", VA = "0xCFC49C")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xCFDB10", Offset = "0xCFDB10", VA = "0xCFDB10")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xCFC4DC", Offset = "0xCFC4DC", VA = "0xCFC4DC")]
	protected void LateUpdate()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xCFDB14", Offset = "0xCFDB14", VA = "0xCFDB14")]
	protected void OnValidate()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xCFC500", Offset = "0xCFC500", VA = "0xCFC500")]
	private void UpdateScattering()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xCFC5F4", Offset = "0xCFC5F4", VA = "0xCFC5F4")]
	private void UpdateCelestials()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xCFDB70", Offset = "0xCFDB70", VA = "0xCFDB70")]
	public TOD_Sky()
	{
	}
}
[Token(Token = "0x20002E8")]
public class TOD_Time : MonoBehaviour
{
	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Length of one day in minutes.")]
	[TOD_Min(0f)]
	public float DayLengthInMinutes;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Progress time at runtime.")]
	public bool ProgressTime;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Set the date to the current device date on start.")]
	public bool UseDeviceDate;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Set the time to the current device time on start.")]
	public bool UseDeviceTime;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Apply the time curve when progressing time.")]
	public bool UseTimeCurve;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Time progression curve.")]
	public AnimationCurve TimeCurve;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TOD_Sky sky;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve timeCurve;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationCurve timeCurveInverse;

	[Token(Token = "0x1400000C")]
	public event Action OnSecond
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xCFDC40", Offset = "0xCFDC40", VA = "0xCFDC40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xCFDCDC", Offset = "0xCFDCDC", VA = "0xCFDCDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnMinute
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xCFDD78", Offset = "0xCFDD78", VA = "0xCFDD78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xCFDE14", Offset = "0xCFDE14", VA = "0xCFDE14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action OnHour
	{
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xCFDEB0", Offset = "0xCFDEB0", VA = "0xCFDEB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xCFDF4C", Offset = "0xCFDF4C", VA = "0xCFDF4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action OnDay
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xCFDFE8", Offset = "0xCFDFE8", VA = "0xCFDFE8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xCFE084", Offset = "0xCFE084", VA = "0xCFE084")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnMonth
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xCFE120", Offset = "0xCFE120", VA = "0xCFE120")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xCFE1BC", Offset = "0xCFE1BC", VA = "0xCFE1BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnYear
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCFE258", Offset = "0xCFE258", VA = "0xCFE258")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCFE2F4", Offset = "0xCFE2F4", VA = "0xCFE2F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnSunrise
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xCFE390", Offset = "0xCFE390", VA = "0xCFE390")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xCFE42C", Offset = "0xCFE42C", VA = "0xCFE42C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnSunset
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xCFE4C8", Offset = "0xCFE4C8", VA = "0xCFE4C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xCFE564", Offset = "0xCFE564", VA = "0xCFE564")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xCFE600", Offset = "0xCFE600", VA = "0xCFE600")]
	public void RefreshTimeCurve()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xCFE8BC", Offset = "0xCFE8BC", VA = "0xCFE8BC")]
	public float ApplyTimeCurve(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xCFE9C0", Offset = "0xCFE9C0", VA = "0xCFE9C0")]
	public void AddHours(float hours, bool adjust = true)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xCFEC78", Offset = "0xCFEC78", VA = "0xCFEC78")]
	public void AddSeconds(float seconds, bool adjust = true)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xCFEC8C", Offset = "0xCFEC8C", VA = "0xCFEC8C")]
	private void CalculateLinearTangents(Keyframe[] keys)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xCFE6AC", Offset = "0xCFE6AC", VA = "0xCFE6AC")]
	private void ApproximateCurve(AnimationCurve source, out AnimationCurve approxCurve, out AnimationCurve approxInverse)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xCFEE54", Offset = "0xCFEE54", VA = "0xCFEE54")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xCFEFE0", Offset = "0xCFEFE0", VA = "0xCFEFE0")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xCFF044", Offset = "0xCFF044", VA = "0xCFF044")]
	public TOD_Time()
	{
	}
}
[Token(Token = "0x20002E9")]
public static class TOD_Util
{
	[Token(Token = "0x6001003")]
	[Address(RVA = "0xCFDB50", Offset = "0xCFDB50", VA = "0xCFDB50")]
	public static Color MulRGB(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xCFF094", Offset = "0xCFF094", VA = "0xCFF094")]
	public static Color MulRGBA(Color color, float multiplier)
	{
		return default(Color);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xCFF0B8", Offset = "0xCFF0B8", VA = "0xCFF0B8")]
	public static Color PowRGB(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xCFF13C", Offset = "0xCFF13C", VA = "0xCFF13C")]
	public static Color PowRGBA(Color color, float power)
	{
		return default(Color);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xCFF1D0", Offset = "0xCFF1D0", VA = "0xCFF1D0")]
	public static Color SatRGB(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xCFF224", Offset = "0xCFF224", VA = "0xCFF224")]
	public static Color SatRGBA(Color color, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xCFA45C", Offset = "0xCFA45C", VA = "0xCFA45C")]
	public static Color AdjustRGB(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xCFF284", Offset = "0xCFF284", VA = "0xCFF284")]
	public static Color AdjustRGBA(Color color, float intensity, float saturation)
	{
		return default(Color);
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xCFDB3C", Offset = "0xCFDB3C", VA = "0xCFDB3C")]
	public static Color ApplyAlpha(Color color)
	{
		return default(Color);
	}
}
[Token(Token = "0x20002EA")]
public abstract class TOD_Audio : MonoBehaviour
{
	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioComponent;

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xCFF2C0", Offset = "0xCFF2C0", VA = "0xCFF2C0")]
	protected float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xCFF344", Offset = "0xCFF344", VA = "0xCFF344")]
	protected void SetVolume(float value)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xCFF3F0", Offset = "0xCFF3F0", VA = "0xCFF3F0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xCFF448", Offset = "0xCFF448", VA = "0xCFF448")]
	protected TOD_Audio()
	{
	}
}
[Token(Token = "0x20002EB")]
public class TOD_AudioAtDay : TOD_Audio
{
	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxVolume;

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xCFF450", Offset = "0xCFF450", VA = "0xCFF450")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xCFF4D0", Offset = "0xCFF4D0", VA = "0xCFF4D0")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xCFF594", Offset = "0xCFF594", VA = "0xCFF594")]
	public TOD_AudioAtDay()
	{
	}
}
[Token(Token = "0x20002EC")]
public class TOD_AudioAtNight : TOD_Audio
{
	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxVolume;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xCFF5A4", Offset = "0xCFF5A4", VA = "0xCFF5A4")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xCFF624", Offset = "0xCFF624", VA = "0xCFF624")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xCFF6E8", Offset = "0xCFF6E8", VA = "0xCFF6E8")]
	public TOD_AudioAtNight()
	{
	}
}
[Token(Token = "0x20002ED")]
public class TOD_AudioAtTime : TOD_Audio
{
	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Volume;

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xCFF6F8", Offset = "0xCFF6F8", VA = "0xCFF6F8")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xCFF778", Offset = "0xCFF778", VA = "0xCFF778")]
	public TOD_AudioAtTime()
	{
	}
}
[Token(Token = "0x20002EE")]
public abstract class TOD_Light : MonoBehaviour
{
	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light lightComponent;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xCFF918", Offset = "0xCFF918", VA = "0xCFF918")]
	protected float GetIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xCFF99C", Offset = "0xCFF99C", VA = "0xCFF99C")]
	protected void SetIntensity(float value)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xCFFA48", Offset = "0xCFFA48", VA = "0xCFFA48")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xCFFAA0", Offset = "0xCFFAA0", VA = "0xCFFAA0")]
	protected TOD_Light()
	{
	}
}
[Token(Token = "0x20002EF")]
public class TOD_LightAtDay : TOD_Light
{
	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xCFFAA8", Offset = "0xCFFAA8", VA = "0xCFFAA8")]
	protected void Start()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xCFFB28", Offset = "0xCFFB28", VA = "0xCFFB28")]
	protected void Update()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xCFFBEC", Offset = "0xCFFBEC", VA = "0xCFFBEC")]
	public TOD_LightAtDay()
	{
	}
}
[Token(Token = "0x20002F0")]
public class TOD_LightAtNight : TOD_Light
{
	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xCFFBFC", Offset = "0xCFFBFC", VA = "0xCFFBFC")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xCFFC7C", Offset = "0xCFFC7C", VA = "0xCFFC7C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xCFFD40", Offset = "0xCFFD40", VA = "0xCFFD40")]
	public TOD_LightAtNight()
	{
	}
}
[Token(Token = "0x20002F1")]
public class TOD_LightAtTime : TOD_Light
{
	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Intensity;

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xCFFD50", Offset = "0xCFFD50", VA = "0xCFFD50")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xCFFDD0", Offset = "0xCFFDD0", VA = "0xCFFDD0")]
	public TOD_LightAtTime()
	{
	}
}
[Token(Token = "0x20002F2")]
public class TOD_LoadSkyFromFile : MonoBehaviour
{
	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TOD_Sky sky;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset textAsset;

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xCFFF70", Offset = "0xCFFF70", VA = "0xCFFF70")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD00070", Offset = "0xD00070", VA = "0xD00070")]
	public TOD_LoadSkyFromFile()
	{
	}
}
[Token(Token = "0x20002F3")]
public abstract class TOD_Particle : MonoBehaviour
{
	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particleComponent;

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xD00078", Offset = "0xD00078", VA = "0xD00078")]
	protected float GetEmission()
	{
		return default(float);
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xD00110", Offset = "0xD00110", VA = "0xD00110")]
	protected void SetEmission(float value)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD001AC", Offset = "0xD001AC", VA = "0xD001AC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD00204", Offset = "0xD00204", VA = "0xD00204")]
	protected TOD_Particle()
	{
	}
}
[Token(Token = "0x20002F4")]
public class TOD_ParticleAtDay : TOD_Particle
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxEmission;

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xD0020C", Offset = "0xD0020C", VA = "0xD0020C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xD0028C", Offset = "0xD0028C", VA = "0xD0028C")]
	protected void Update()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xD00350", Offset = "0xD00350", VA = "0xD00350")]
	public TOD_ParticleAtDay()
	{
	}
}
[Token(Token = "0x20002F5")]
public class TOD_ParticleAtNight : TOD_Particle
{
	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTime;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxEmission;

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xD00360", Offset = "0xD00360", VA = "0xD00360")]
	protected void Start()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xD003E0", Offset = "0xD003E0", VA = "0xD003E0")]
	protected void Update()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xD004A4", Offset = "0xD004A4", VA = "0xD004A4")]
	public TOD_ParticleAtNight()
	{
	}
}
[Token(Token = "0x20002F6")]
public class TOD_ParticleAtTime : TOD_Particle
{
	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Emission;

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xD004B4", Offset = "0xD004B4", VA = "0xD004B4")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xD00534", Offset = "0xD00534", VA = "0xD00534")]
	public TOD_ParticleAtTime()
	{
	}
}
[Token(Token = "0x20002F7")]
public abstract class TOD_Render : MonoBehaviour
{
	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rendererComponent;

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xD006D4", Offset = "0xD006D4", VA = "0xD006D4")]
	protected void SetState(bool value)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xD00768", Offset = "0xD00768", VA = "0xD00768")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xD007C0", Offset = "0xD007C0", VA = "0xD007C0")]
	protected TOD_Render()
	{
	}
}
[Token(Token = "0x20002F8")]
public class TOD_RenderAtDay : TOD_Render
{
	[Token(Token = "0x6001035")]
	[Address(RVA = "0xD007C8", Offset = "0xD007C8", VA = "0xD007C8")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xD0082C", Offset = "0xD0082C", VA = "0xD0082C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xD00890", Offset = "0xD00890", VA = "0xD00890")]
	public TOD_RenderAtDay()
	{
	}
}
[Token(Token = "0x20002F9")]
public class TOD_RenderAtNight : TOD_Render
{
	[Token(Token = "0x6001038")]
	[Address(RVA = "0xD00898", Offset = "0xD00898", VA = "0xD00898")]
	protected void Start()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xD008FC", Offset = "0xD008FC", VA = "0xD008FC")]
	protected void Update()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xD00960", Offset = "0xD00960", VA = "0xD00960")]
	public TOD_RenderAtNight()
	{
	}
}
[Token(Token = "0x20002FA")]
public class TOD_WeatherManager : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	public enum RainType
	{
		[Token(Token = "0x40013A8")]
		None,
		[Token(Token = "0x40013A9")]
		Light,
		[Token(Token = "0x40013AA")]
		Heavy
	}

	[Token(Token = "0x20002FC")]
	public enum CloudType
	{
		[Token(Token = "0x40013AC")]
		None,
		[Token(Token = "0x40013AD")]
		Few,
		[Token(Token = "0x40013AE")]
		Scattered,
		[Token(Token = "0x40013AF")]
		Broken,
		[Token(Token = "0x40013B0")]
		Overcast
	}

	[Token(Token = "0x20002FD")]
	public enum AtmosphereType
	{
		[Token(Token = "0x40013B2")]
		Clear,
		[Token(Token = "0x40013B3")]
		Storm,
		[Token(Token = "0x40013B4")]
		Dust,
		[Token(Token = "0x40013B5")]
		Fog
	}

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem RainParticleSystem;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeTime;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RainType Rain;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CloudType Clouds;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AtmosphereType Atmosphere;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cloudOpacityMax;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cloudBrightnessMax;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float atmosphereBrightnessMax;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rainEmissionMax;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cloudOpacity;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float cloudCoverage;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float cloudBrightness;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float atmosphereFog;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float atmosphereBrightness;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rainEmission;

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xD00968", Offset = "0xD00968", VA = "0xD00968")]
	private float GetRainEmission()
	{
		return default(float);
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xD00A00", Offset = "0xD00A00", VA = "0xD00A00")]
	private void SetRainEmission(float value)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xD00A9C", Offset = "0xD00A9C", VA = "0xD00A9C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xD00B4C", Offset = "0xD00B4C", VA = "0xD00B4C")]
	protected void Update()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xD00DAC", Offset = "0xD00DAC", VA = "0xD00DAC")]
	public TOD_WeatherManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FE")]
public class tutorialdrag : MonoBehaviour
{
	[Token(Token = "0x6001040")]
	[Address(RVA = "0xD00DBC", Offset = "0xD00DBC", VA = "0xD00DBC", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD00E68", Offset = "0xD00E68", VA = "0xD00E68")]
	public tutorialdrag()
	{
	}
}
[Token(Token = "0x20002FF")]
[AddComponentMenu("Camera-Control/CameraOrbit")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float targetHeight;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDistance;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float xSpeed;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ySpeed;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int yMinLimit;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int yMaxLimit;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int zoomRate;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotationDampening;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float zoomDampening;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float xDeg;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float yDeg;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currentDistance;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float desiredDistance;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float correctedDistance;

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xD00E70", Offset = "0xD00E70", VA = "0xD00E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xD00EA8", Offset = "0xD00EA8", VA = "0xD00EA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xD013D8", Offset = "0xD013D8", VA = "0xD013D8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xD01414", Offset = "0xD01414", VA = "0xD01414")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x2000300")]
[AddComponentMenu("Camera-Control/Mouse Look2")]
public class MouseLook2 : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	public enum RotationAxes
	{
		[Token(Token = "0x40013D0")]
		MouseXAndY,
		[Token(Token = "0x40013D1")]
		MouseX,
		[Token(Token = "0x40013D2")]
		MouseY
	}

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xD01454", Offset = "0xD01454", VA = "0xD01454")]
	private void Update()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xD016D8", Offset = "0xD016D8", VA = "0xD016D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xD01794", Offset = "0xD01794", VA = "0xD01794")]
	public MouseLook2()
	{
	}
}
[Token(Token = "0x2000302")]
[ExecuteInEditMode]
[AddComponentMenu("uSky/uFog Gradient (Stardard Fog)")]
public class uFogGradient : MonoBehaviour
{
	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient FogColor;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uSkyManager _uSM;

	[Token(Token = "0x17000239")]
	private uSkyManager uSM
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xD017B4", Offset = "0xD017B4", VA = "0xD017B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xD0186C", Offset = "0xD0186C", VA = "0xD0186C")]
	private void Start()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xD01924", Offset = "0xD01924", VA = "0xD01924")]
	private void Update()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD01880", Offset = "0xD01880", VA = "0xD01880")]
	private Color currentFogColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xD019D8", Offset = "0xD019D8", VA = "0xD019D8")]
	public uFogGradient()
	{
	}
}
[Token(Token = "0x2000303")]
[ExecuteInEditMode]
[AddComponentMenu("uSky/uSky Manager")]
public class uSkyManager : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum NightModes
	{
		[Token(Token = "0x40013F4")]
		Off = 1,
		[Token(Token = "0x40013F5")]
		Static,
		[Token(Token = "0x40013F6")]
		Rotation
	}

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Update of the sky calculations in each frame.")]
	public bool SkyUpdate;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("This value controls the light vertically. It represents sunrise/day and sunset/night time( Rotation X )")]
	[Range(0f, 24f)]
	public float Timeline;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-180f, 180f)]
	[Tooltip("This value controls the light horizionally.( Rotation Y )")]
	public float Longitude;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 5f)]
	[Tooltip("This value sets the brightness of the sky.(for day time only)")]
	[Space(10f)]
	public float Exposure;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Rayleigh scattering is caused by particles in the atmosphere (up to 8 km). It produces typical earth-like sky colors (reddish/yellowish colors at sun set, and the like).")]
	[Range(0f, 5f)]
	public float RayleighScattering;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 5f)]
	[Tooltip("Mie scattering is caused by aerosols in the lower atmosphere (up to 1.2 km). It is for haze and halos around the sun on foggy days.")]
	public float MieScattering;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 0.9995f)]
	[Tooltip("The anisotropy factor controls the sun's appearance in the sky.The closer this value gets to 1.0, the sharper and smaller the sun spot will be. Higher values cause more fuzzy and bigger sun spots.")]
	public float SunAnisotropyFactor;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.001f, 10f)]
	[Tooltip("Size of the sun spot in the sky")]
	public float SunSize;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("It is visible spectrum light waves. Tweaking these values will shift the colors of the resulting gradients and produce different kinds of atmospheres.")]
	public Vector3 Wavelengths;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("It is wavelength dependent. Tweaking these values will shift the colors of sky color.")]
	public Color SkyTint;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("It is the bottom half color of the skybox")]
	public Color m_GroundColor;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("It is a Directional Light from the scene, it represents Sun Ligthing")]
	public GameObject m_sunLight;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Space(10f)]
	public NightModes NightSky;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The zenith color of the night sky gradient. (Top of the night sky)")]
	public Gradient NightZenithColor;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("The horizon color of the night sky gradient.")]
	public Color NightHorizonColor;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("This controls the intensity of the Stars field in night sky.")]
	[Range(0f, 5f)]
	public float StarIntensity;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("This controls the intensity of the Outer Space Cubemap in night sky.")]
	[Range(0f, 2f)]
	public float OuterSpaceIntensity;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("The color of the moon's inner corona. This Alpha value controls the size and blurriness corona.")]
	public Color MoonInnerCorona;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("The color of the moon's outer corona. This Alpha value controls the size and blurriness corona.")]
	public Color MoonOuterCorona;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Range(0f, 1f)]
	[Tooltip("This controls the moon texture size in the night sky.")]
	public float MoonSize;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("It is additional Directional Light from the scene, it represents Moon Ligthing.")]
	public GameObject m_moonLight;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Tooltip("It is the uSkybox Material of the uSky.")]
	public Material SkyboxMaterial;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[Tooltip("It will automatically assign the current skybox material to Render Settings.")]
	private bool _AutoApplySkybox;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[HideInInspector]
	public bool LinearSpace;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	[Tooltip("Toggle it if the Main Camera is using HDR mode and Tonemapping image effect.")]
	public bool Tonemapping;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 euler;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Matrix4x4 moon_wtl;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Material m_starMaterial;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Mesh _starsMesh;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly Vector3 BetaM;

	[Token(Token = "0x1700023A")]
	private bool EnableNightSky
	{
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD01D9C", Offset = "0xD01D9C", VA = "0xD01D9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023B")]
	public bool AutoApplySkybox
	{
		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD01DAC", Offset = "0xD01DAC", VA = "0xD01DAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD01DB4", Offset = "0xD01DB4", VA = "0xD01DB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	protected Material starMaterial
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xD01E74", Offset = "0xD01E74", VA = "0xD01E74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	public Mesh starsMesh
	{
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD01F64", Offset = "0xD01F64", VA = "0xD01F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023E")]
	public float Timeline01
	{
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xD019C8", Offset = "0xD019C8", VA = "0xD019C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023F")]
	public Vector3 SunDir
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xD02D10", Offset = "0xD02D10", VA = "0xD02D10")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000240")]
	private Matrix4x4 getMoonMatrix
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD02DC0", Offset = "0xD02DC0", VA = "0xD02DC0")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000241")]
	private Vector3 variableRangeWavelengths
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD03378", Offset = "0xD03378", VA = "0xD03378")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000242")]
	public Vector3 BetaR
	{
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD033F4", Offset = "0xD033F4", VA = "0xD033F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000243")]
	private Vector3 betaR_RayleighOffset
	{
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD02FA4", Offset = "0xD02FA4", VA = "0xD02FA4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000244")]
	public float uMuS
	{
		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD034A4", Offset = "0xD034A4", VA = "0xD034A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000245")]
	public float DayTime
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD034E8", Offset = "0xD034E8", VA = "0xD034E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000246")]
	public float SunsetTime
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xD03540", Offset = "0xD03540", VA = "0xD03540")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000247")]
	public float NightTime
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xD035C8", Offset = "0xD035C8", VA = "0xD035C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000248")]
	public Vector3 miePhase_g
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xD03070", Offset = "0xD03070", VA = "0xD03070")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000249")]
	public Vector3 mieConst
	{
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xD03038", Offset = "0xD03038", VA = "0xD03038")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700024A")]
	public Vector3 skyMultiplier
	{
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xD02FD4", Offset = "0xD02FD4", VA = "0xD02FD4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700024B")]
	private Vector3 bottomTint
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD030B8", Offset = "0xD030B8", VA = "0xD030B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700024C")]
	public Vector2 ColorCorrection
	{
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xD032C0", Offset = "0xD032C0", VA = "0xD032C0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700024D")]
	public Color getNightHorizonColor
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xD03128", Offset = "0xD03128", VA = "0xD03128")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700024E")]
	public Color getNightZenithColor
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD03168", Offset = "0xD03168", VA = "0xD03168")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700024F")]
	private float moonCoronaFactor
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xD035E0", Offset = "0xD035E0", VA = "0xD035E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000250")]
	private Vector4 getMoonInnerCorona
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD031B0", Offset = "0xD031B0", VA = "0xD031B0")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000251")]
	private Vector4 getMoonOuterCorona
	{
		[Token(Token = "0x600106E")]
		[Address(RVA = "0xD03220", Offset = "0xD03220", VA = "0xD03220")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000252")]
	private float starBrightness
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD03334", Offset = "0xD03334", VA = "0xD03334")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xD02020", Offset = "0xD02020", VA = "0xD02020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xD02780", Offset = "0xD02780", VA = "0xD02780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xD02868", Offset = "0xD02868", VA = "0xD02868")]
	private void detectColorSpace()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xD028E8", Offset = "0xD028E8", VA = "0xD028E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xD02AB0", Offset = "0xD02AB0", VA = "0xD02AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xD02974", Offset = "0xD02974", VA = "0xD02974")]
	private void InitSun()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xD020CC", Offset = "0xD020CC", VA = "0xD020CC")]
	public void InitMaterial(Material mat)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xD02A3C", Offset = "0xD02A3C", VA = "0xD02A3C")]
	private void InitMoon()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xD03644", Offset = "0xD03644", VA = "0xD03644")]
	public uSkyManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000305")]
public class Video : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	[CompilerGenerated]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xD03B7C", Offset = "0xD03B7C", VA = "0xD03B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xD03BC4", Offset = "0xD03BC4", VA = "0xD03BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xD03A40", Offset = "0xD03A40", VA = "0xD03A40")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD03AB8", Offset = "0xD03AB8", VA = "0xD03AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD03ABC", Offset = "0xD03ABC", VA = "0xD03ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD03B84", Offset = "0xD03B84", VA = "0xD03B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD039E0", Offset = "0xD039E0", VA = "0xD039E0", Slot = "4")]
	[IteratorStateMachine(typeof(<Start>d__0))]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xD03A68", Offset = "0xD03A68", VA = "0xD03A68", Slot = "5")]
	public virtual void OnClick()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xD03AAC", Offset = "0xD03AAC", VA = "0xD03AAC", Slot = "6")]
	public virtual void CoroutinePlaymovie()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD03AB0", Offset = "0xD03AB0", VA = "0xD03AB0")]
	public Video()
	{
	}
}
[Token(Token = "0x2000307")]
public class Videocs : MonoBehaviour
{
	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer movie;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD03BCC", Offset = "0xD03BCC", VA = "0xD03BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD03C48", Offset = "0xD03C48", VA = "0xD03C48")]
	public Videocs()
	{
	}
}
[Token(Token = "0x2000308")]
public class HandAnimatorManager : MonoBehaviour
{
	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateModel[] stateModels;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator handAnimator;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentState;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastState;

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD03C50", Offset = "0xD03C50", VA = "0xD03C50")]
	private void Start()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD03CA8", Offset = "0xD03CA8", VA = "0xD03CA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xD03EBC", Offset = "0xD03EBC", VA = "0xD03EBC")]
	private void TurnOnState(int stateNumber)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xD03F78", Offset = "0xD03F78", VA = "0xD03F78")]
	public HandAnimatorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000309")]
public class StateModel
{
	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int stateNumber;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xD03F8C", Offset = "0xD03F8C", VA = "0xD03F8C")]
	public StateModel()
	{
	}
}
[Token(Token = "0x200030A")]
public class HandAnimatorManagerVR : MonoBehaviour
{
	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateModel[] stateModels;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator handAnimator;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentState;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastState;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool action;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool hold;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string changeKey;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string actionKey;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string holdKey;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numberOfAnimations;

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xD03F94", Offset = "0xD03F94", VA = "0xD03F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xD04078", Offset = "0xD04078", VA = "0xD04078")]
	private void Update()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xD04198", Offset = "0xD04198", VA = "0xD04198")]
	private void TurnOnState(int stateNumber)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xD04254", Offset = "0xD04254", VA = "0xD04254")]
	public HandAnimatorManagerVR()
	{
	}
}
[Token(Token = "0x200030B")]
public enum ColorValues
{
	[Token(Token = "0x400140C")]
	R,
	[Token(Token = "0x400140D")]
	G,
	[Token(Token = "0x400140E")]
	B,
	[Token(Token = "0x400140F")]
	A,
	[Token(Token = "0x4001410")]
	Hue,
	[Token(Token = "0x4001411")]
	Saturation,
	[Token(Token = "0x4001412")]
	Value
}
[Serializable]
[Token(Token = "0x200030C")]
public class ColorChangedEvent : UnityEvent<Color>
{
	[Token(Token = "0x6001086")]
	[Address(RVA = "0xD04310", Offset = "0xD04310", VA = "0xD04310")]
	public ColorChangedEvent()
	{
	}
}
[Token(Token = "0x200030D")]
public class HSVChangedEvent : UnityEvent<float, float, float>
{
	[Token(Token = "0x6001087")]
	[Address(RVA = "0xD04358", Offset = "0xD04358", VA = "0xD04358")]
	public HSVChangedEvent()
	{
	}
}
[Token(Token = "0x200030E")]
public class ColorPickerTester : MonoBehaviour
{
	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer renderer;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorPicker picker;

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xD043A0", Offset = "0xD043A0", VA = "0xD043A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xD04480", Offset = "0xD04480", VA = "0xD04480")]
	private void Update()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xD04484", Offset = "0xD04484", VA = "0xD04484")]
	public ColorPickerTester()
	{
	}
}
[Token(Token = "0x200030F")]
public class TiltWindow : MonoBehaviour
{
	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 range;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion mStart;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mRot;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xD044E4", Offset = "0xD044E4", VA = "0xD044E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD04534", Offset = "0xD04534", VA = "0xD04534")]
	private void Update()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD046A8", Offset = "0xD046A8", VA = "0xD046A8")]
	public TiltWindow()
	{
	}
}
[Token(Token = "0x2000310")]
[RequireComponent(typeof(Image))]
public class ColorImage : MonoBehaviour
{
	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker picker;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD0470C", Offset = "0xD0470C", VA = "0xD0470C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD047E8", Offset = "0xD047E8", VA = "0xD047E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD04890", Offset = "0xD04890", VA = "0xD04890")]
	private void ColorChanged(Color newColor)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xD048B4", Offset = "0xD048B4", VA = "0xD048B4")]
	public ColorImage()
	{
	}
}
[Token(Token = "0x2000311")]
[RequireComponent(typeof(Text))]
public class ColorLabel : MonoBehaviour
{
	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker picker;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorValues type;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string prefix;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minValue;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxValue;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int precision;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text label;

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xD048BC", Offset = "0xD048BC", VA = "0xD048BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xD04914", Offset = "0xD04914", VA = "0xD04914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xD04A8C", Offset = "0xD04A8C", VA = "0xD04A8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xD04BF8", Offset = "0xD04BF8", VA = "0xD04BF8")]
	private void ColorChanged(Color color)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xD04CF0", Offset = "0xD04CF0", VA = "0xD04CF0")]
	private void HSVChanged(float hue, float sateration, float value)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xD04BFC", Offset = "0xD04BFC", VA = "0xD04BFC")]
	private void UpdateValue()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xD04DA8", Offset = "0xD04DA8", VA = "0xD04DA8")]
	private string ConvertToDisplayString(float value)
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xD04EA8", Offset = "0xD04EA8", VA = "0xD04EA8")]
	public ColorLabel()
	{
	}
}
[Token(Token = "0x2000312")]
public class ColorPicker : MonoBehaviour
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _hue;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _saturation;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _brightness;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _red;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _green;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _blue;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _alpha;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ColorChangedEvent onValueChanged;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HSVChangedEvent onHSVChanged;

	[Token(Token = "0x17000255")]
	public Color CurrentColor
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xD04474", Offset = "0xD04474", VA = "0xD04474")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xD04F08", Offset = "0xD04F08", VA = "0xD04F08")]
		set
		{
		}
	}

	[Token(Token = "0x17000256")]
	public float H
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0xD05038", Offset = "0xD05038", VA = "0xD05038")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600109F")]
		[Address(RVA = "0xD05040", Offset = "0xD05040", VA = "0xD05040")]
		set
		{
		}
	}

	[Token(Token = "0x17000257")]
	public float S
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xD050B0", Offset = "0xD050B0", VA = "0xD050B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xD050B8", Offset = "0xD050B8", VA = "0xD050B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000258")]
	public float V
	{
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xD050E8", Offset = "0xD050E8", VA = "0xD050E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xD050F0", Offset = "0xD050F0", VA = "0xD050F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000259")]
	public float R
	{
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xD05120", Offset = "0xD05120", VA = "0xD05120")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xD05128", Offset = "0xD05128", VA = "0xD05128")]
		set
		{
		}
	}

	[Token(Token = "0x1700025A")]
	public float G
	{
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xD05158", Offset = "0xD05158", VA = "0xD05158")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xD05160", Offset = "0xD05160", VA = "0xD05160")]
		set
		{
		}
	}

	[Token(Token = "0x1700025B")]
	public float B
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xD05190", Offset = "0xD05190", VA = "0xD05190")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xD05198", Offset = "0xD05198", VA = "0xD05198")]
		set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	private float A
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xD051C8", Offset = "0xD051C8", VA = "0xD051C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xD051D0", Offset = "0xD051D0", VA = "0xD051D0")]
		set
		{
		}
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xD05034", Offset = "0xD05034", VA = "0xD05034")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD04F74", Offset = "0xD04F74", VA = "0xD04F74")]
	private void RGBChanged()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xD05070", Offset = "0xD05070", VA = "0xD05070")]
	private void HSVChanged()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD04FB0", Offset = "0xD04FB0", VA = "0xD04FB0")]
	private void SendChangedEvent()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xD05368", Offset = "0xD05368", VA = "0xD05368")]
	public void AssignColor(ColorValues type, float value)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD04CF4", Offset = "0xD04CF4", VA = "0xD04CF4")]
	public float GetValue(ColorValues type)
	{
		return default(float);
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD053BC", Offset = "0xD053BC", VA = "0xD053BC")]
	public ColorPicker()
	{
	}
}
[Token(Token = "0x2000313")]
public class ColorPresets : MonoBehaviour
{
	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker picker;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] presets;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image createPresetImage;

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xD0546C", Offset = "0xD0546C", VA = "0xD0546C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xD05514", Offset = "0xD05514", VA = "0xD05514")]
	public void CreatePresetButton()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xD05624", Offset = "0xD05624", VA = "0xD05624")]
	public void PresetSelect(Image sender)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xD0565C", Offset = "0xD0565C", VA = "0xD0565C")]
	private void ColorChanged(Color color)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xD05680", Offset = "0xD05680", VA = "0xD05680")]
	public ColorPresets()
	{
	}
}
[Token(Token = "0x2000314")]
[RequireComponent(typeof(Slider))]
public class ColorSlider : MonoBehaviour
{
	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker hsvpicker;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorValues type;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider slider;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool listen;

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xD05688", Offset = "0xD05688", VA = "0xD05688")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD05864", Offset = "0xD05864", VA = "0xD05864")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD05A04", Offset = "0xD05A04", VA = "0xD05A04")]
	private void ColorChanged(Color newColor)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xD05A80", Offset = "0xD05A80", VA = "0xD05A80")]
	private void HSVChanged(float hue, float saturation, float value)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD05AE4", Offset = "0xD05AE4", VA = "0xD05AE4")]
	private void SliderChanged(float newValue)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xD05B28", Offset = "0xD05B28", VA = "0xD05B28")]
	public ColorSlider()
	{
	}
}
[Token(Token = "0x2000315")]
[ExecuteInEditMode]
[RequireComponent(typeof(RawImage))]
public class ColorSliderImage : MonoBehaviour
{
	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker picker;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorValues type;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Slider.Direction direction;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage image;

	[Token(Token = "0x1700025D")]
	private RectTransform rectTransform
	{
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xD05B38", Offset = "0xD05B38", VA = "0xD05B38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xD05B98", Offset = "0xD05B98", VA = "0xD05B98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xD06BF8", Offset = "0xD06BF8", VA = "0xD06BF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xD06D70", Offset = "0xD06D70", VA = "0xD06D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xD06EDC", Offset = "0xD06EDC", VA = "0xD06EDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xD06F80", Offset = "0xD06F80", VA = "0xD06F80")]
	private void ColorChanged(Color newColor)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xD06FA8", Offset = "0xD06FA8", VA = "0xD06FA8")]
	private void HSVChanged(float hue, float saturation, float value)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xD05BF8", Offset = "0xD05BF8", VA = "0xD05BF8")]
	private void RegenerateTexture()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xD06FD0", Offset = "0xD06FD0", VA = "0xD06FD0")]
	public ColorSliderImage()
	{
	}
}
[Token(Token = "0x2000316")]
[RequireComponent(typeof(InputField))]
public class HexColorField : MonoBehaviour
{
	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker hsvpicker;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool displayAlpha;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputField hexInputField;

	[Token(Token = "0x4001439")]
	private const string hexRegex = "^#?(?:[0-9a-fA-F]{3,4}){1,2}$";

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xD06FD8", Offset = "0xD06FD8", VA = "0xD06FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xD07130", Offset = "0xD07130", VA = "0xD07130")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xD07254", Offset = "0xD07254", VA = "0xD07254")]
	private void UpdateHex(Color newColor)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xD0779C", Offset = "0xD0779C", VA = "0xD0779C")]
	private void UpdateColor(string newHex)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xD07544", Offset = "0xD07544", VA = "0xD07544")]
	private string ColorToHex(Color32 color)
	{
		return null;
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xD0787C", Offset = "0xD0787C", VA = "0xD0787C")]
	public static bool HexToColor(string hex, out Color32 color)
	{
		return default(bool);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xD07CAC", Offset = "0xD07CAC", VA = "0xD07CAC")]
	public HexColorField()
	{
	}
}
[Token(Token = "0x2000317")]
[ExecuteInEditMode]
[RequireComponent(typeof(BoxSlider), typeof(RawImage))]
public class SVBoxSlider : MonoBehaviour
{
	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker picker;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxSlider slider;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage image;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastH;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool listen;

	[Token(Token = "0x1700025E")]
	public RectTransform rectTransform
	{
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xD07CB4", Offset = "0xD07CB4", VA = "0xD07CB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xD07D14", Offset = "0xD07D14", VA = "0xD07D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xD08284", Offset = "0xD08284", VA = "0xD08284")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xD083FC", Offset = "0xD083FC", VA = "0xD083FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xD08568", Offset = "0xD08568", VA = "0xD08568")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xD0860C", Offset = "0xD0860C", VA = "0xD0860C")]
	private void SliderChanged(float saturation, float value)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xD08658", Offset = "0xD08658", VA = "0xD08658")]
	private void HSVChanged(float h, float s, float v)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xD07DAC", Offset = "0xD07DAC", VA = "0xD07DAC")]
	private void RegenerateSVTexture()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xD08954", Offset = "0xD08954", VA = "0xD08954")]
	public SVBoxSlider()
	{
	}
}
[Token(Token = "0x2000318")]
public static class HSVUtil
{
	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xD051E8", Offset = "0xD051E8", VA = "0xD051E8")]
	public static HsvColor ConvertRgbToHsv(Color color)
	{
		return default(HsvColor);
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xD0896C", Offset = "0xD0896C", VA = "0xD0896C")]
	public static HsvColor ConvertRgbToHsv(double r, double b, double g)
	{
		return default(HsvColor);
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xD05270", Offset = "0xD05270", VA = "0xD05270")]
	public static Color ConvertHsvToRgb(double h, double s, double v, float alpha)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000319")]
public struct HsvColor
{
	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public double H;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double S;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double V;

	[Token(Token = "0x1700025F")]
	public float normalizedH
	{
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xD05240", Offset = "0xD05240", VA = "0xD05240")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xD08AB4", Offset = "0xD08AB4", VA = "0xD08AB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000260")]
	public float normalizedS
	{
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xD05258", Offset = "0xD05258", VA = "0xD05258")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xD08ACC", Offset = "0xD08ACC", VA = "0xD08ACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000261")]
	public float normalizedV
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xD05264", Offset = "0xD05264", VA = "0xD05264")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xD08AD8", Offset = "0xD08AD8", VA = "0xD08AD8")]
		set
		{
		}
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xD08AE4", Offset = "0xD08AE4", VA = "0xD08AE4")]
	public HsvColor(double h, double s, double v)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xD08AF0", Offset = "0xD08AF0", VA = "0xD08AF0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
namespace MKToon
{
	[Token(Token = "0x200031A")]
	public class MKRotateObject : MonoBehaviour
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float speed;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider slider;

		[Token(Token = "0x17000262")]
		public float Speed
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xD08DAC", Offset = "0xD08DAC", VA = "0xD08DAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xD08DB4", Offset = "0xD08DB4", VA = "0xD08DB4")]
			set
			{
			}
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xD08DBC", Offset = "0xD08DBC", VA = "0xD08DBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xD08E10", Offset = "0xD08E10", VA = "0xD08E10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xD08E44", Offset = "0xD08E44", VA = "0xD08E44")]
		public void SetTextValue()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xD08F20", Offset = "0xD08F20", VA = "0xD08F20")]
		public MKRotateObject()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class MKToonUISliderValue : MonoBehaviour
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minValue;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxValue;

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xD08F28", Offset = "0xD08F28", VA = "0xD08F28")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xD0901C", Offset = "0xD0901C", VA = "0xD0901C")]
		public void ResetDefaultValue(float defaultValue)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xD0907C", Offset = "0xD0907C", VA = "0xD0907C")]
		public MKToonUISliderValue()
		{
		}
	}
}
namespace MKToon.MKTonn
{
	[Token(Token = "0x200031C")]
	public class MKToonDemoController : MonoBehaviour
	{
		[Token(Token = "0x200031D")]
		public enum LightMode
		{
			[Token(Token = "0x4001462")]
			DEFAULT,
			[Token(Token = "0x4001463")]
			TOON_TRESHOLD,
			[Token(Token = "0x4001464")]
			TOON_LEVELS
		}

		[Serializable]
		[Token(Token = "0x200031E")]
		public class DemoObject
		{
			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoObjectLightingVariant defaultL;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DemoObjectLightingVariant thresholdL;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoObjectLightingVariant levelsL;

			[Token(Token = "0x600110D")]
			[Address(RVA = "0xD0CA50", Offset = "0xD0CA50", VA = "0xD0CA50")]
			public DemoObject()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200031F")]
		public class DemoObjectLightingVariant
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material[] materials;

			[Token(Token = "0x600110E")]
			[Address(RVA = "0xD0CA58", Offset = "0xD0CA58", VA = "0xD0CA58")]
			public DemoObjectLightingVariant()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000320")]
		public class DemoObjectCollection
		{
			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject parentObject;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DemoObject[] demoObjects;

			[Token(Token = "0x600110F")]
			[Address(RVA = "0xD0CA60", Offset = "0xD0CA60", VA = "0xD0CA60")]
			public DemoObjectCollection()
			{
			}
		}

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] menuObjects;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] lightModeUIs;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lightModeText;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LightMode lightMode;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColorPicker[] colorPickers;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MKToonUISliderValue[] sliderValues;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentObject;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DemoObjectCollection[] demoObjectCollection;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DemoObjectCollection[] backgroundCollection;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Renderer> activeRenderers;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Renderer> backgroundRenderers;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float brightness;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lightLevelsDiffuse;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lightLevelsSpecular;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lLThreshold;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float shininess;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float toonyFy;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float rimSize;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float smoothness;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float outlineSize;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color mainColor;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Color specularColor;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Color rimColor;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Color outlineColor;

		[Token(Token = "0x17000263")]
		public float Brightness
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xD0AD80", Offset = "0xD0AD80", VA = "0xD0AD80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xD0AD88", Offset = "0xD0AD88", VA = "0xD0AD88")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float LightLevelsDiffuse
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xD0AEB4", Offset = "0xD0AEB4", VA = "0xD0AEB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xD0AEBC", Offset = "0xD0AEBC", VA = "0xD0AEBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float LightLevelsSpecular
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xD0B098", Offset = "0xD0B098", VA = "0xD0B098")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xD0B0A0", Offset = "0xD0B0A0", VA = "0xD0B0A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public float LThreshold
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xD0B1CC", Offset = "0xD0B1CC", VA = "0xD0B1CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xD0B1D4", Offset = "0xD0B1D4", VA = "0xD0B1D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public float Shininess
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xD0B3B0", Offset = "0xD0B3B0", VA = "0xD0B3B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xD0B3B8", Offset = "0xD0B3B8", VA = "0xD0B3B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float ToonyFy
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xD0B4E4", Offset = "0xD0B4E4", VA = "0xD0B4E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xD0B4EC", Offset = "0xD0B4EC", VA = "0xD0B4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public float RimSize
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xD0B6C8", Offset = "0xD0B6C8", VA = "0xD0B6C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xD0B6D0", Offset = "0xD0B6D0", VA = "0xD0B6D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float Smoothness
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xD0B7FC", Offset = "0xD0B7FC", VA = "0xD0B7FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xD0B804", Offset = "0xD0B804", VA = "0xD0B804")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float OutlineSize
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xD0B9E0", Offset = "0xD0B9E0", VA = "0xD0B9E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xD0B9E8", Offset = "0xD0B9E8", VA = "0xD0B9E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public Color MainColor
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xD0BB14", Offset = "0xD0BB14", VA = "0xD0BB14")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xD0BB20", Offset = "0xD0BB20", VA = "0xD0BB20")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public Color SpecularColor
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xD0BC68", Offset = "0xD0BC68", VA = "0xD0BC68")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001101")]
			[Address(RVA = "0xD0BC74", Offset = "0xD0BC74", VA = "0xD0BC74")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public Color RimColor
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xD0BDBC", Offset = "0xD0BDBC", VA = "0xD0BDBC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xD0BDC8", Offset = "0xD0BDC8", VA = "0xD0BDC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public Color OutlineColor
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xD0BF10", Offset = "0xD0BF10", VA = "0xD0BF10")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xD0BF1C", Offset = "0xD0BF1C", VA = "0xD0BF1C")]
			set
			{
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xD09084", Offset = "0xD09084", VA = "0xD09084")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xD09138", Offset = "0xD09138", VA = "0xD09138")]
		private void CreateActiveMaterials(int i)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD09D84", Offset = "0xD09D84", VA = "0xD09D84")]
		private void SetDefaultV()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xD0C114", Offset = "0xD0C114", VA = "0xD0C114")]
		private void Update()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD0C1B8", Offset = "0xD0C1B8", VA = "0xD0C1B8")]
		public void SwitchObject()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD0C064", Offset = "0xD0C064", VA = "0xD0C064")]
		private void DisableLightModeUI()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD0A6B0", Offset = "0xD0A6B0", VA = "0xD0A6B0")]
		private void ChangeLightmode(LightMode mode)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD0C2C8", Offset = "0xD0C2C8", VA = "0xD0C2C8")]
		public void ChangeLightmode()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD0C998", Offset = "0xD0C998", VA = "0xD0C998")]
		public MKToonDemoController()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000321")]
	[AddComponentMenu("UI/Raycast Filters/Ignore Raycast Filter")]
	public class UIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD0CA68", Offset = "0xD0CA68", VA = "0xD0CA68", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xD0CA70", Offset = "0xD0CA70", VA = "0xD0CA70")]
		public UIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[RequireComponent(typeof(RectTransform))]
	[AddComponentMenu("UI/BoxSlider", 35)]
	public class BoxSlider : Selectable, IDragHandler, IEventSystemHandler, IInitializePotentialDragHandler, ICanvasElement
	{
		[Token(Token = "0x2000323")]
		public enum Direction
		{
			[Token(Token = "0x4001478")]
			LeftToRight,
			[Token(Token = "0x4001479")]
			RightToLeft,
			[Token(Token = "0x400147A")]
			BottomToTop,
			[Token(Token = "0x400147B")]
			TopToBottom
		}

		[Serializable]
		[Token(Token = "0x2000324")]
		public class BoxSliderEvent : UnityEvent<float, float>
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0xD0D1A4", Offset = "0xD0D1A4", VA = "0xD0D1A4")]
			public BoxSliderEvent()
			{
			}
		}

		[Token(Token = "0x2000325")]
		private enum Axis
		{
			[Token(Token = "0x400147D")]
			Horizontal,
			[Token(Token = "0x400147E")]
			Vertical
		}

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private RectTransform m_HandleRect;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Space(6f)]
		[SerializeField]
		private float m_MinValue;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private float m_MaxValue;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private bool m_WholeNumbers;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_Value;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float m_ValueY;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[Space(6f)]
		private BoxSliderEvent m_OnValueChanged;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Transform m_HandleTransform;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RectTransform m_HandleContainerRect;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector2 m_Offset;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private DrivenRectTransformTracker m_Tracker;

		[Token(Token = "0x17000270")]
		public RectTransform handleRect
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0xD0CA78", Offset = "0xD0CA78", VA = "0xD0CA78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xD0CA80", Offset = "0xD0CA80", VA = "0xD0CA80")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public float minValue
		{
			[Token(Token = "0x6001114")]
			[Address(RVA = "0xD0CD4C", Offset = "0xD0CD4C", VA = "0xD0CD4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xD0CD54", Offset = "0xD0CD54", VA = "0xD0CD54")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float maxValue
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0xD0CDF8", Offset = "0xD0CDF8", VA = "0xD0CDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001117")]
			[Address(RVA = "0xD0CE00", Offset = "0xD0CE00", VA = "0xD0CE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public bool wholeNumbers
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0xD0CE94", Offset = "0xD0CE94", VA = "0xD0CE94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001119")]
			[Address(RVA = "0xD0CE9C", Offset = "0xD0CE9C", VA = "0xD0CE9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float value
		{
			[Token(Token = "0x600111A")]
			[Address(RVA = "0xD0CF30", Offset = "0xD0CF30", VA = "0xD0CF30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111B")]
			[Address(RVA = "0xD0CFD0", Offset = "0xD0CFD0", VA = "0xD0CFD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public float normalizedValue
		{
			[Token(Token = "0x600111C")]
			[Address(RVA = "0xD08744", Offset = "0xD08744", VA = "0xD08744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111D")]
			[Address(RVA = "0xD0881C", Offset = "0xD0881C", VA = "0xD0881C")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public float valueY
		{
			[Token(Token = "0x600111E")]
			[Address(RVA = "0xD0CFD8", Offset = "0xD0CFD8", VA = "0xD0CFD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600111F")]
			[Address(RVA = "0xD0D078", Offset = "0xD0D078", VA = "0xD0D078")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float normalizedValueY
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0xD0884C", Offset = "0xD0884C", VA = "0xD0884C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001121")]
			[Address(RVA = "0xD08924", Offset = "0xD08924", VA = "0xD08924")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public BoxSliderEvent onValueChanged
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xD0D080", Offset = "0xD0D080", VA = "0xD0D080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xD0D088", Offset = "0xD0D088", VA = "0xD0D088")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		private float stepSize
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xD0D098", Offset = "0xD0D098", VA = "0xD0D098")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xD0D0C4", Offset = "0xD0D0C4", VA = "0xD0D0C4")]
		protected BoxSlider()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xD0D1EC", Offset = "0xD0D1EC", VA = "0xD0D1EC", Slot = "46")]
		public virtual void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xD0D1F0", Offset = "0xD0D1F0", VA = "0xD0D1F0", Slot = "43")]
		public void LayoutComplete()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xD0D1F4", Offset = "0xD0D1F4", VA = "0xD0D1F4", Slot = "44")]
		public void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x6001129")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xD0D1F8", Offset = "0xD0D1F8", VA = "0xD0D1F8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xD0D4A0", Offset = "0xD0D4A0", VA = "0xD0D4A0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xD0CAFC", Offset = "0xD0CAFC", VA = "0xD0CAFC")]
		private void UpdateCachedReferences()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xD0CDE8", Offset = "0xD0CDE8", VA = "0xD0CDE8")]
		private void Set(float input)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xD0D23C", Offset = "0xD0D23C", VA = "0xD0D23C")]
		private void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xD0CDF0", Offset = "0xD0CDF0", VA = "0xD0CDF0")]
		private void SetY(float input)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xD0D370", Offset = "0xD0D370", VA = "0xD0D370")]
		private void SetY(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xD0D4C4", Offset = "0xD0D4C4", VA = "0xD0D4C4", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xD0CC1C", Offset = "0xD0CC1C", VA = "0xD0CC1C")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xD0D4E0", Offset = "0xD0D4E0", VA = "0xD0D4E0")]
		private void UpdateDrag(PointerEventData eventData, Camera cam)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xD0D6EC", Offset = "0xD0D6EC", VA = "0xD0D6EC")]
		private bool MayDrag(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xD0D750", Offset = "0xD0D750", VA = "0xD0D750", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xD0D92C", Offset = "0xD0D92C", VA = "0xD0D92C", Slot = "47")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xD0D97C", Offset = "0xD0D97C", VA = "0xD0D97C", Slot = "48")]
		public virtual void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[SpecialName]
		[Token(Token = "0x6001139")]
		[Address(RVA = "0xD0D994", Offset = "0xD0D994", VA = "0xD0D994", Slot = "42")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}
	}
}
namespace Wacki
{
	[Token(Token = "0x2000326")]
	public abstract class IUILaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float laserThickness;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float laserHitScale;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool laserAlwaysOn;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject hitPoint;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject pointer;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _distanceLimit;

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xD0D99C", Offset = "0xD0D99C", VA = "0xD0D99C")]
		private void Start()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xD0DE08", Offset = "0xD0DE08", VA = "0xD0DE08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xD0DF44", Offset = "0xD0DF44", VA = "0xD0DF44", Slot = "4")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xD0DF48", Offset = "0xD0DF48", VA = "0xD0DF48", Slot = "5")]
		public virtual void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xD0DF4C", Offset = "0xD0DF4C", VA = "0xD0DF4C", Slot = "6")]
		public virtual void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001140")]
		public abstract bool ButtonDown();

		[Token(Token = "0x6001141")]
		public abstract bool ButtonUp();

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xD0DF50", Offset = "0xD0DF50", VA = "0xD0DF50", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xD0E0FC", Offset = "0xD0E0FC", VA = "0xD0E0FC", Slot = "10")]
		public virtual void LimitLaserDistance(float distance)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xD0E120", Offset = "0xD0E120", VA = "0xD0E120")]
		protected IUILaserPointer()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class LaserPointerEventData : PointerEventData
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public GameObject current;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public IUILaserPointer controller;

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xD0E134", Offset = "0xD0E134", VA = "0xD0E134")]
		public LaserPointerEventData(EventSystem e)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xD0E13C", Offset = "0xD0E13C", VA = "0xD0E13C", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class LaserPointerInputModule : BaseInputModule
	{
		[Token(Token = "0x2000329")]
		private class ControllerData
		{
			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LaserPointerEventData pointerEvent;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject currentPoint;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject currentPressed;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject currentDragging;

			[Token(Token = "0x6001151")]
			[Address(RVA = "0xD0E42C", Offset = "0xD0E42C", VA = "0xD0E42C")]
			public ControllerData()
			{
			}
		}

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LaserPointerInputModule _instance;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LayerMask layerMask;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera UICamera;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PhysicsRaycaster raycaster;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HashSet<IUILaserPointer> _controllers;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<IUILaserPointer, ControllerData> _controllerData;

		[Token(Token = "0x1700027A")]
		public static LaserPointerInputModule instance
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xD0E174", Offset = "0xD0E174", VA = "0xD0E174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xD0E1BC", Offset = "0xD0E1BC", VA = "0xD0E1BC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xD0E268", Offset = "0xD0E268", VA = "0xD0E268", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xD0DD74", Offset = "0xD0DD74", VA = "0xD0DD74")]
		public void AddController(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xD0DEEC", Offset = "0xD0DEEC", VA = "0xD0DEEC")]
		public void RemoveController(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xD0E434", Offset = "0xD0E434", VA = "0xD0E434")]
		protected void UpdateCameraPosition(IUILaserPointer controller)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xD0E4CC", Offset = "0xD0E4CC", VA = "0xD0E4CC")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xD0E558", Offset = "0xD0E558", VA = "0xD0E558")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xD0E63C", Offset = "0xD0E63C", VA = "0xD0E63C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xD0F830", Offset = "0xD0F830", VA = "0xD0F830")]
		public LaserPointerInputModule()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class OVRUILaserPointer : IUILaserPointer
	{
		[Token(Token = "0x200032B")]
		[CompilerGenerated]
		private sealed class <Haptics>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool rightHand;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115B")]
				[Address(RVA = "0xD0FBAC", Offset = "0xD0FBAC", VA = "0xD0FBAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115D")]
				[Address(RVA = "0xD0FBF4", Offset = "0xD0FBF4", VA = "0xD0FBF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0xD0FAC0", Offset = "0xD0FAC0", VA = "0xD0FAC0")]
			[DebuggerHidden]
			public <Haptics>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0xD0FAFC", Offset = "0xD0FAFC", VA = "0xD0FAFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0xD0FB00", Offset = "0xD0FB00", VA = "0xD0FB00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115C")]
			[Address(RVA = "0xD0FBB4", Offset = "0xD0FBB4", VA = "0xD0FBB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputDevice controller;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool primaryIndexTriggerPressed;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool button1Pressed;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool button2Pressed;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 thumbstickY;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 thumbstick;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int manonum;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool LaserVibra;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xD0F8B8", Offset = "0xD0F8B8", VA = "0xD0F8B8", Slot = "7")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xD0F924", Offset = "0xD0F924", VA = "0xD0F924", Slot = "8")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xD0F9B0", Offset = "0xD0F9B0", VA = "0xD0F9B0", Slot = "5")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xD0F9FC", Offset = "0xD0F9FC", VA = "0xD0F9FC", Slot = "6")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xD0FA44", Offset = "0xD0FA44", VA = "0xD0FA44")]
		[IteratorStateMachine(typeof(<Haptics>d__12))]
		private IEnumerator Haptics(float frequency, float amplitude, float duration, bool rightHand)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xD0FAE8", Offset = "0xD0FAE8", VA = "0xD0FAE8")]
		public OVRUILaserPointer()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class ViveUILaserPointer : IUILaserPointer
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SteamVR_Action_Boolean Trigger;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SteamVR_TrackedObject _trackedObject;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _connected;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _index;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject Controller;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SteamVR_Input_Sources hand;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xD0FBFC", Offset = "0xD0FBFC", VA = "0xD0FBFC")]
		public void Awake()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xD0FC68", Offset = "0xD0FC68", VA = "0xD0FC68", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xD0FDC0", Offset = "0xD0FDC0", VA = "0xD0FDC0", Slot = "7")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xD0FE08", Offset = "0xD0FE08", VA = "0xD0FE08", Slot = "8")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xD0FE50", Offset = "0xD0FE50", VA = "0xD0FE50", Slot = "5")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xD0FEA0", Offset = "0xD0FEA0", VA = "0xD0FEA0", Slot = "6")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xD0FEF0", Offset = "0xD0FEF0", VA = "0xD0FEF0")]
		public ViveUILaserPointer()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class ViveUILaserPointerSx : IUILaserPointer
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SteamVR_Action_Boolean Trigger;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SteamVR_TrackedObject _trackedObject;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _connected;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _index;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject Controller;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SteamVR_Input_Sources hand;

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xD0FF04", Offset = "0xD0FF04", VA = "0xD0FF04")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xD10258", Offset = "0xD10258", VA = "0xD10258", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xD103B0", Offset = "0xD103B0", VA = "0xD103B0", Slot = "7")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xD103F8", Offset = "0xD103F8", VA = "0xD103F8", Slot = "8")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xD10440", Offset = "0xD10440", VA = "0xD10440", Slot = "5")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xD10490", Offset = "0xD10490", VA = "0xD10490", Slot = "6")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xD104E0", Offset = "0xD104E0", VA = "0xD104E0")]
		public ViveUILaserPointerSx()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class DemoLaserPointerTest : IUILaserPointer
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool buttonState;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _prevButtonState;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool _buttonChanged;

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xD104F4", Offset = "0xD104F4", VA = "0xD104F4", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xD105F0", Offset = "0xD105F0", VA = "0xD105F0", Slot = "7")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xD10610", Offset = "0xD10610", VA = "0xD10610", Slot = "8")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xD10630", Offset = "0xD10630", VA = "0xD10630", Slot = "5")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD106CC", Offset = "0xD106CC", VA = "0xD106CC", Slot = "6")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xD10768", Offset = "0xD10768", VA = "0xD10768")]
		public DemoLaserPointerTest()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class DemoMenu : MonoBehaviour
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform dirLight;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cubeSpawn;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD1077C", Offset = "0xD1077C", VA = "0xD1077C")]
		public void RotateLight(float amount)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xD107F4", Offset = "0xD107F4", VA = "0xD107F4")]
		public void SpawnCube()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xD108E0", Offset = "0xD108E0", VA = "0xD108E0")]
		public DemoMenu()
		{
		}
	}
}
namespace uSky
{
	[Token(Token = "0x2000330")]
	[AddComponentMenu("uSky/uSkymap Renderer")]
	public class uSkymapRenderer : MonoBehaviour
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture m_skyMap;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_skymapMaterial;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_oceanMaterial;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int SkymapResolution;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 2f)]
		public float SkyReflection;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 2f)]
		public float CloudReflection;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CloudTextureScale;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool DebugSkymap;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_frameCount;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uSkyManager m_uSM;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DistanceCloud m_DC;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_cloudCamera;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture m_cloudRT;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool RenderCloud;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera cam;

		[Token(Token = "0x1700027D")]
		protected uSkyManager uSM
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xD108E8", Offset = "0xD108E8", VA = "0xD108E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private DistanceCloud DC
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xD10A0C", Offset = "0xD10A0C", VA = "0xD10A0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xD10B30", Offset = "0xD10B30", VA = "0xD10B30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xD11540", Offset = "0xD11540", VA = "0xD11540")]
		private void Update()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xD11190", Offset = "0xD11190", VA = "0xD11190")]
		private void InitMaterial(Material mat)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xD11490", Offset = "0xD11490", VA = "0xD11490")]
		private void updateOceanMaterial(Material mat)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xD11684", Offset = "0xD11684", VA = "0xD11684")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xD11718", Offset = "0xD11718", VA = "0xD11718")]
		public uSkymapRenderer()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[RequireComponent(typeof(uSkyManager), typeof(uSkyLight))]
	[AddComponentMenu("uSky/Distance Cloud (beta)")]
	[ExecuteInEditMode]
	public class DistanceCloud : MonoBehaviour
	{
		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uSkyManager m_uSM;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uSkyLight m_uSL;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cloudLayer;

		[Token(Token = "0x40014C1")]
		private const float NightBrightness = 0.25f;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material CloudMaterial;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh skyDome;

		[Token(Token = "0x1700027F")]
		protected uSkyManager uSM
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0xD1173C", Offset = "0xD1173C", VA = "0xD1173C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		protected uSkyLight uSL
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0xD11860", Offset = "0xD11860", VA = "0xD11860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xD11984", Offset = "0xD11984", VA = "0xD11984")]
		protected Mesh InitSkyDomeMesh()
		{
			return null;
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xD11C88", Offset = "0xD11C88", VA = "0xD11C88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xD11D0C", Offset = "0xD11D0C", VA = "0xD11D0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xD11D98", Offset = "0xD11D98", VA = "0xD11D98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xD120A0", Offset = "0xD120A0", VA = "0xD120A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xD11E50", Offset = "0xD11E50", VA = "0xD11E50")]
		private void UpdateCloudMaterial()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xD1233C", Offset = "0xD1233C", VA = "0xD1233C")]
		public DistanceCloud()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AddComponentMenu("uSky/Play TOD")]
	[RequireComponent(typeof(uSkyManager))]
	public class PlayTOD : MonoBehaviour
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool PlayTimelapse;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PlaySpeed;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uSkyManager m_uSM;

		[Token(Token = "0x17000281")]
		private uSkyManager uSM
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xD1234C", Offset = "0xD1234C", VA = "0xD1234C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xD12470", Offset = "0xD12470", VA = "0xD12470")]
		private void Start()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xD12498", Offset = "0xD12498", VA = "0xD12498")]
		private void Update()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xD124F8", Offset = "0xD124F8", VA = "0xD124F8")]
		public PlayTOD()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class StarField
	{
		[Token(Token = "0x2000334")]
		private struct Star
		{
			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;
		}

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float starSizeScale;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<CombineInstance> starQuad;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xD12514", Offset = "0xD12514", VA = "0xD12514")]
		public Mesh InitializeStarfield()
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xD12E58", Offset = "0xD12E58", VA = "0xD12E58")]
		protected Mesh createQuad(float size)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xD1303C", Offset = "0xD1303C", VA = "0xD1303C")]
		private Matrix4x4 BillboardMatrix(Vector3 particlePosition)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xD1332C", Offset = "0xD1332C", VA = "0xD1332C")]
		public StarField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class uSkyAmbient
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Ambient lighting coming from above.")]
		public Gradient SkyColor;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Ambient lighting coming from side.")]
		public Gradient EquatorColor;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Ambient lighting coming from below.")]
		public Gradient GroundColor;

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xD133BC", Offset = "0xD133BC", VA = "0xD133BC")]
		public uSkyAmbient()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[ExecuteInEditMode]
	[AddComponentMenu("uSky/uSky Fog (Image Effects)")]
	public class uSkyFog : MonoBehaviour
	{
		[Token(Token = "0x2000337")]
		public enum FogModes
		{
			[Token(Token = "0x40014DA")]
			Linear = 1,
			[Token(Token = "0x40014DB")]
			Exponential,
			[Token(Token = "0x40014DC")]
			Exponential_Squared
		}

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FogModes fogMode;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useRadialDistance;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.0001f, 1f)]
		public float Density;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0.06f, 0.4f)]
		public float ColorDecay;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float Scattering;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 0.1f)]
		public float HorizonOffset;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float StartDistance;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float EndDistance;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material FogMaterial;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uSkyManager _uSM;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _skybox;

		[Token(Token = "0x17000282")]
		private uSkyManager uSM
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xD13CEC", Offset = "0xD13CEC", VA = "0xD13CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private Material skybox
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xD13DA4", Offset = "0xD13DA4", VA = "0xD13DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xD13E94", Offset = "0xD13E94", VA = "0xD13E94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xD1400C", Offset = "0xD1400C", VA = "0xD1400C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xD13EFC", Offset = "0xD13EFC", VA = "0xD13EFC")]
		private void updateFog(Material mat)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xD1416C", Offset = "0xD1416C", VA = "0xD1416C")]
		public void SetFogDensity(float value)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xD14174", Offset = "0xD14174", VA = "0xD14174")]
		public void SetFogColorDecay(float value)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xD1417C", Offset = "0xD1417C", VA = "0xD1417C")]
		public uSkyFog()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AddComponentMenu("uSky/uSky Fog Camera (Image Effects)")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class uSkyFogCamera : MonoBehaviour
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material fogMaterial;

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xD141A8", Offset = "0xD141A8", VA = "0xD141A8")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xD1425C", Offset = "0xD1425C", VA = "0xD1425C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xD149B0", Offset = "0xD149B0", VA = "0xD149B0")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xD14B10", Offset = "0xD14B10", VA = "0xD14B10")]
		public uSkyFogCamera()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[AddComponentMenu("uSky/uSkyGUI Helper")]
	public class uSkyGUI_Helper : MonoBehaviour
	{
		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uSkyManager m_uSkyManager;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text TimeDisplay;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider[] slider;

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xD14B18", Offset = "0xD14B18", VA = "0xD14B18")]
		public void SetTimeline(float value)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD14B98", Offset = "0xD14B98", VA = "0xD14B98")]
		public void SetLongitude(float value)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xD14C18", Offset = "0xD14C18", VA = "0xD14C18")]
		public void SetExposure(float value)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xD14C98", Offset = "0xD14C98", VA = "0xD14C98")]
		public void SetRayleigh(float value)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xD14D18", Offset = "0xD14D18", VA = "0xD14D18")]
		public void SetMie(float value)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xD14D98", Offset = "0xD14D98", VA = "0xD14D98")]
		public void SetSunAnisotropyFactor(float value)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xD14E18", Offset = "0xD14E18", VA = "0xD14E18")]
		public void SetSunSize(float value)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xD14E98", Offset = "0xD14E98", VA = "0xD14E98")]
		public void SetWavelength_X(float value)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xD14F18", Offset = "0xD14F18", VA = "0xD14F18")]
		public void SetWavelength_Y(float value)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xD14F98", Offset = "0xD14F98", VA = "0xD14F98")]
		public void SetWavelength_Z(float value)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xD15018", Offset = "0xD15018", VA = "0xD15018")]
		public void SetStarIntensity(float value)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xD15098", Offset = "0xD15098", VA = "0xD15098")]
		public void SetOuterSpaceIntensity(float value)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xD15118", Offset = "0xD15118", VA = "0xD15118")]
		public void SetMoonSize(float value)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xD15198", Offset = "0xD15198", VA = "0xD15198")]
		public void SetMoonInnerCoronaScale(float value)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xD15218", Offset = "0xD15218", VA = "0xD15218")]
		public void SetMoonOuterCoronaScale(float value)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xD15298", Offset = "0xD15298", VA = "0xD15298")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xD15310", Offset = "0xD15310", VA = "0xD15310")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xD1549C", Offset = "0xD1549C", VA = "0xD1549C")]
		public void Reset_uSky()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xD15730", Offset = "0xD15730", VA = "0xD15730")]
		public uSkyGUI_Helper()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[RequireComponent(typeof(uSkyManager))]
	[AddComponentMenu("uSky/uSky Light")]
	[ExecuteInEditMode]
	public class uSkyLight : MonoBehaviour
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Brightness of the Sun (directional light)")]
		[Range(0f, 4f)]
		public float SunIntensity;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The color of the both Sun and Moon light emitted")]
		public Gradient LightColor;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Toggle the Moon lighting during night time")]
		public bool EnableMoonLighting;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Brightness of the Moon (directional light)")]
		[Range(0f, 2f)]
		public float MoonIntensity;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Ambient light that shines into the scene.")]
		public uSkyAmbient Ambient;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private uSkyManager _uSM;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Light _sun_Light;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Light _moon_Light;

		[Token(Token = "0x17000284")]
		private float currentTime
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xD15738", Offset = "0xD15738", VA = "0xD15738")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000285")]
		private float dayTime
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xD15888", Offset = "0xD15888", VA = "0xD15888")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000286")]
		private float nightTime
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xD15920", Offset = "0xD15920", VA = "0xD15920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000287")]
		private float sunsetTime
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xD159B8", Offset = "0xD159B8", VA = "0xD159B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000288")]
		private uSkyManager uSM
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xD157D0", Offset = "0xD157D0", VA = "0xD157D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private GameObject sunLightObj
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xD15A50", Offset = "0xD15A50", VA = "0xD15A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private GameObject moonLightObj
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xD15B20", Offset = "0xD15B20", VA = "0xD15B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		private Light sun_Light
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xD15BF0", Offset = "0xD15BF0", VA = "0xD15BF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private Light moon_Light
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xD15CCC", Offset = "0xD15CCC", VA = "0xD15CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		private float exposure
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xD163D8", Offset = "0xD163D8", VA = "0xD163D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028E")]
		private float rayleighSlider
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xD16468", Offset = "0xD16468", VA = "0xD16468")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028F")]
		public Color CurrentLightColor
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xD122C4", Offset = "0xD122C4", VA = "0xD122C4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000290")]
		public Color CurrentSkyColor
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xD122E8", Offset = "0xD122E8", VA = "0xD122E8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000291")]
		public Color CurrentEquatorColor
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xD164F8", Offset = "0xD164F8", VA = "0xD164F8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000292")]
		public Color CurrentGroundColor
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xD1654C", Offset = "0xD1654C", VA = "0xD1654C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xD15DA8", Offset = "0xD15DA8", VA = "0xD15DA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xD15E68", Offset = "0xD15E68", VA = "0xD15E68")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xD15E2C", Offset = "0xD15E2C", VA = "0xD15E2C")]
		private void InitUpdate()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xD15F04", Offset = "0xD15F04", VA = "0xD15F04")]
		private void SunAndMoonLightUpdate()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xD16260", Offset = "0xD16260", VA = "0xD16260")]
		private void forceSunEnableAtNight()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xD16228", Offset = "0xD16228", VA = "0xD16228")]
		private void AmbientGradientUpdate()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xD1659C", Offset = "0xD1659C", VA = "0xD1659C")]
		private Color colorOffset(Color currentColor, float offsetRange, float rayleighOffsetRange, bool IsGround)
		{
			return default(Color);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD16894", Offset = "0xD16894", VA = "0xD16894")]
		public uSkyLight()
		{
		}
	}
}
namespace LunarCatsStudio.SuperCombiner
{
	[Token(Token = "0x200033B")]
	public class MeshCombiner
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int maxVerticesCount;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string sessionName;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, BlendShapeFrame> blendShapes;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int vertexOffset;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CombinedResult combinedResult;

		[Token(Token = "0x17000293")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xD16CDC", Offset = "0xD16CDC", VA = "0xD16CDC")]
			set
			{
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xD16CE4", Offset = "0xD16CE4", VA = "0xD16CE4")]
		public void SetParameters(int maxVertices_p, string sessionName_p)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD16CF4", Offset = "0xD16CF4", VA = "0xD16CF4")]
		public void Clear()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xD16D4C", Offset = "0xD16D4C", VA = "0xD16D4C")]
		public List<GameObject> CombineToMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xD189F8", Offset = "0xD189F8", VA = "0xD189F8")]
		public List<GameObject> CombineToSkinnedMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD1AC98", Offset = "0xD1AC98", VA = "0xD1AC98")]
		private void AssignParametersToSkinnedMesh(SkinnedMeshRenderer skin, List<Transform> bones, List<BoneWeight> boneWeights, List<Matrix4x4> bindposes)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xD1A25C", Offset = "0xD1A25C", VA = "0xD1A25C")]
		private void CopyAnimator(Animator anim, GameObject target)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xD1A184", Offset = "0xD1A184", VA = "0xD1A184")]
		private Transform FindTransformForAnimator(Transform[] children, Transform[] rootBones, Animator anim)
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xD19F8C", Offset = "0xD19F8C", VA = "0xD19F8C")]
		private void GetOrignialToNewBonesCorrespondancy(Transform rootBone, Transform newRootBone, Dictionary<int, Transform> originToNewBoneMap)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xD19990", Offset = "0xD19990", VA = "0xD19990")]
		private Transform[] FindRootBone(Dictionary<int, Transform> bones)
		{
			return null;
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xD19D80", Offset = "0xD19D80", VA = "0xD19D80")]
		private GameObject InstantiateCopy(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xD18398", Offset = "0xD18398", VA = "0xD18398")]
		private CombineInstanceID CreateCombinedInstances(Mesh mesh, Material[] sharedMaterials, int instanceID, string name, Matrix4x4 matrix, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xD1A444", Offset = "0xD1A444", VA = "0xD1A444")]
		private GameObject CreateCombinedSkinnedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xD17BF0", Offset = "0xD17BF0", VA = "0xD17BF0")]
		public GameObject CreateCombinedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xD1B128", Offset = "0xD1B128", VA = "0xD1B128")]
		public bool GenerateUV(Mesh targetMesh, int[] textureIndex, float[] scaleFactors, string objectName, int combinedIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xD176A0", Offset = "0xD176A0", VA = "0xD176A0")]
		public Mesh copyMesh(Mesh mesh, string id = "")
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xD1C474", Offset = "0xD1C474", VA = "0xD1C474")]
		private void CopyNewMeshesByCombine(Mesh original, Mesh destination)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xD1C604", Offset = "0xD1C604", VA = "0xD1C604")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class SuperCombiner : MonoBehaviour
	{
		[Token(Token = "0x200033D")]
		public enum CombineStatesList
		{
			[Token(Token = "0x400152C")]
			Uncombined,
			[Token(Token = "0x400152D")]
			Combining,
			[Token(Token = "0x400152E")]
			CombinedMaterials,
			[Token(Token = "0x400152F")]
			Combined
		}

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> TextureAtlasSizes;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> TextureAtlasSizesNames;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CombineStatesList combiningState;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TexturePacker> texturePackers;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _showInstructions;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool _showCombineSettings;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool _showMeshSettings;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool _showTextureSettings;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool _showAdditionalParameters;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool _showMeshResults;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool _showOriginalMaterials;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool _showCombinedAtlas;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool _showCombinedMaterials;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool _showCombinedMesh;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool _showSaveOptions;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool _showMultiMaterials;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string sessionName;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool combineAtRuntime;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int textureAtlasSize;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> customTextureProperies;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float tilingFactor;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int atlasPadding;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool combineMeshes;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int meshOutput;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int maxVerticesCount;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool combineMaterials;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject targetGameObject;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool multipleMaterialsMode;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Material> multiMaterials0;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Material> multiMaterials1;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Material> multiMaterials2;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Material> multiMaterials3;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Material> multiMaterials4;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Material> multiMaterials5;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Material> multiMaterials6;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<Material> multiMaterials7;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Material> multiMaterials8;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<Material> multiMaterials9;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<Material> multiMaterials10;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<Material> multiMaterialsAllOthers;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<List<Material>> multiMaterialsList;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int _multiMaterialsCount;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<List<MaterialToCombine>> materialsToCombine;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool savePrefabs;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool saveMeshObj;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool saveMeshFbx;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		public bool saveMaterials;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool saveTextures;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string folderDestination;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<MeshRenderer> meshList;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<SkinnedMeshRenderer> skinnedMeshList;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Dictionary<int, string> uniqueCombinedMeshId;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Dictionary<int, string> copyMeshId;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<GameObject> toSavePrefabList;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<MeshRenderer> toSaveObjectList;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<Mesh> toSaveMeshList;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<SkinnedMeshRenderer> toSaveSkinnedObjectList;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject targetParentForCombinedGameObjects;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private DateTime timeStart;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public CombinedResult combinedResult;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xD1C6C0", Offset = "0xD1C6C0", VA = "0xD1C6C0")]
		private SuperCombiner()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xD1D550", Offset = "0xD1D550", VA = "0xD1D550")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xD1D5D4", Offset = "0xD1D5D4", VA = "0xD1D5D4")]
		public void FindMeshesToCombine()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xD1D560", Offset = "0xD1D560", VA = "0xD1D560")]
		public void CombineChildren()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xD1DBC0", Offset = "0xD1DBC0", VA = "0xD1DBC0")]
		public bool CombineMaterials(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xD22658", Offset = "0xD22658", VA = "0xD22658")]
		public void SetTargetParentForCombinedGameObject()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD227B0", Offset = "0xD227B0", VA = "0xD227B0")]
		public void CombineMeshes(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine, Transform parent)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xD23BA0", Offset = "0xD23BA0", VA = "0xD23BA0")]
		private List<MeshRendererAndOriginalMaterials> GetMeshRenderersByCombineIndex(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xD1DA24", Offset = "0xD1DA24", VA = "0xD1DA24")]
		public void Combine(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xD1E788", Offset = "0xD1E788", VA = "0xD1E788")]
		private void InitializeMultipleMaterialElements()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD24F7C", Offset = "0xD24F7C", VA = "0xD24F7C")]
		private void CopyGameObjectsHierarchy(Transform parent)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD25C10", Offset = "0xD25C10", VA = "0xD25C10")]
		private void GenerateUVs(Mesh mesh, Material[] originalMaterials, string objectName, int combinedIndex)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD26E50", Offset = "0xD26E50", VA = "0xD26E50")]
		private void EnableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xD25D68", Offset = "0xD25D68", VA = "0xD25D68")]
		private void DisableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xD250E8", Offset = "0xD250E8", VA = "0xD250E8")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<MeshRenderer> originalMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xD25684", Offset = "0xD25684", VA = "0xD25684")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<SkinnedMeshRenderer> originalSkinnedMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xD26A00", Offset = "0xD26A00", VA = "0xD26A00")]
		private GameObject InstantiateCopy(GameObject original, bool deleteChidren = true)
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD272F8", Offset = "0xD272F8", VA = "0xD272F8")]
		private List<MeshCollider> FindEnabledMeshColliders(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD1D624", Offset = "0xD1D624", VA = "0xD1D624")]
		private List<MeshRenderer> FindEnabledMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xD1D850", Offset = "0xD1D850", VA = "0xD1D850")]
		private List<SkinnedMeshRenderer> FindEnabledSkinnedMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD1ED20", Offset = "0xD1ED20", VA = "0xD1ED20")]
		private List<MaterialToCombine> FindEnabledMaterials(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xD274A4", Offset = "0xD274A4", VA = "0xD274A4")]
		private Rect getUVBounds(Vector2[] uvs)
		{
			return default(Rect);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xD27654", Offset = "0xD27654", VA = "0xD27654")]
		private Rect getMaxRect(Rect uv1, Rect uv2)
		{
			return default(Rect);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xD235D0", Offset = "0xD235D0", VA = "0xD235D0")]
		public void UnCombine()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xD279A0", Offset = "0xD279A0", VA = "0xD279A0")]
		private List<Transform> GetFirstLevelChildren(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xD27AE4", Offset = "0xD27AE4", VA = "0xD27AE4")]
		public void Save()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class TexturePacker
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material copyedMaterials;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material copyedToSaveMaterials;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, List<Texture2D>> texturesForAtlas;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Texture2D> packedTextures;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int combinedIndex;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> TexturePropertyNames;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasEmission;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color _emissionColor;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<string> customProperties;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<int, TextureImportSettings> importedTextures;

		[Token(Token = "0x400153A")]
		private const int NO_TEXTURE_COLOR_SIZE = 256;

		[Token(Token = "0x400153B")]
		private const int MAX_TEXTURE_SIZE = 16384;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CombinedResult combinedResult;

		[Token(Token = "0x17000294")]
		public int CombinedIndex
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xD27AE8", Offset = "0xD27AE8", VA = "0xD27AE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xD27AF0", Offset = "0xD27AF0", VA = "0xD27AF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xD27AF8", Offset = "0xD27AF8", VA = "0xD27AF8")]
			set
			{
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xD1F5D8", Offset = "0xD1F5D8", VA = "0xD1F5D8")]
		public TexturePacker()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xD1FC08", Offset = "0xD1FC08", VA = "0xD1FC08")]
		public void SetCustomPropertyNames(List<string> list)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xD27B00", Offset = "0xD27B00", VA = "0xD27B00")]
		public Material GetCombinedMaterialToSave()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xD27B08", Offset = "0xD27B08", VA = "0xD27B08")]
		public void GenerateCopyedMaterialToSave()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xD27B78", Offset = "0xD27B78", VA = "0xD27B78")]
		public void SetCopyedMaterial(Material mat)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xD27B80", Offset = "0xD27B80", VA = "0xD27B80")]
		public void ClearTextures()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xD27F4C", Offset = "0xD27F4C", VA = "0xD27F4C")]
		private Vector3 GetTextureSizeInAtlas(Vector2 inputTextureSize, float scaleX, float scaleY, string materialName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xD282EC", Offset = "0xD282EC", VA = "0xD282EC")]
		private Texture2D CopyTexture(Texture2D texture, Rect materialUVBounds, Rect meshUVBounds, Material mat, Vector3 textureInAtlasSize, Vector2 targetTextureSize, bool isMainTexture)
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xD295D0", Offset = "0xD295D0", VA = "0xD295D0")]
		private Vector2 checkTexturesSize(Material mat, bool alignToSmallest)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xD20130", Offset = "0xD20130", VA = "0xD20130")]
		public void SetTextures(Material mat, bool combineMaterials, Rect materialUVBounds, Rect meshUVBounds, float tilingFactor)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xD294F8", Offset = "0xD294F8", VA = "0xD294F8")]
		private string GetStringTextureSize(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xD293F4", Offset = "0xD293F4", VA = "0xD293F4")]
		private Texture2D CreateColoredTexture2D(int width, int height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xD29340", Offset = "0xD29340", VA = "0xD29340")]
		private TextureImportSettings CheckTextureImportSettings(Texture2D texture)
		{
			return default(TextureImportSettings);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xD29D50", Offset = "0xD29D50", VA = "0xD29D50")]
		private void CheckTexturesConformity()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xD21E90", Offset = "0xD21E90", VA = "0xD21E90")]
		public void PackTextures(int textureAtlasSize, int atlasPadding, bool combineMaterials, string name)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xD2A514", Offset = "0xD2A514", VA = "0xD2A514")]
		public void SaveTextures(string folder, string name)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xD2A518", Offset = "0xD2A518", VA = "0xD2A518")]
		public string GetTextureFilePathName(string folder, string sessionName, string textureName, int displayedIndex)
		{
			return null;
		}
	}
	[Token(Token = "0x200033F")]
	public class BlendShapeFrame
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string shapeName;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frameWeight;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] deltaVertices;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] deltaNormals;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] deltaTangents;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vertexOffset;

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xD1C3DC", Offset = "0xD1C3DC", VA = "0xD1C3DC")]
		public BlendShapeFrame(string shapeName_p, float frameWeight_p, Vector3[] deltaVertices_p, Vector3[] deltaNormals_p, Vector3[] deltaTangents_p, int offset)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class CombinedMeshModification : MonoBehaviour
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Reference to the combinedResult file")]
		public CombinedResult combinedResult;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Reference to the MeshFilter in which the combined mesh is attached to")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CombinedResult currentCombinedResult;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xD2A7E0", Offset = "0xD2A7E0", VA = "0xD2A7E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xD2A860", Offset = "0xD2A860", VA = "0xD2A860")]
		public void RemoveFromCombined(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xD2A88C", Offset = "0xD2A88C", VA = "0xD2A88C")]
		public void RemoveFromCombined(int instanceID)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD2B3BC", Offset = "0xD2B3BC", VA = "0xD2B3BC")]
		public CombinedMeshModification()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class CombinedResult : ScriptableObject
	{
		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showCombinedMaterials;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showCombinedMeshes;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CombinedMaterial> combinedMaterials;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Dictionary<int, MaterialToCombine>> originalMaterialList;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<int, int> originalReferenceMaterial;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<List<GameObject>> combinedGameObjectFromMeshList;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<List<GameObject>> combinedGameObjectFromSkinnedMeshList;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshCombined> meshResults;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int materialCombinedCount;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int combinedMaterialCount;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int meshesCombinedCount;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int skinnedMeshesCombinedCount;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalVertexCount;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int subMeshCount;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeSpan duration;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xD277B0", Offset = "0xD277B0", VA = "0xD277B0")]
		public void Clear()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xD21D30", Offset = "0xD21D30", VA = "0xD21D30")]
		public void SetCombinedMaterial(Material mat, int combinedIndex, bool isOriginal)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xD1F504", Offset = "0xD1F504", VA = "0xD1F504")]
		public void AddNewCombinedMaterial()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xD1FEF0", Offset = "0xD1FEF0", VA = "0xD1FEF0")]
		public void AddMaterialToCombine(MaterialToCombine mat, int combinedIndex)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xD1BF3C", Offset = "0xD1BF3C", VA = "0xD1BF3C")]
		public void AddCombinedMesh(Mesh combinedMesh, CombineInstanceID combineInstanceID, int combinedIndex)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xD1AF58", Offset = "0xD1AF58", VA = "0xD1AF58")]
		public int FindCorrespondingMaterialIndex(Material matToFind, int combinedIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xD27170", Offset = "0xD27170", VA = "0xD27170")]
		public Material GetCombinedMaterial(Material sourceMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xD262B8", Offset = "0xD262B8", VA = "0xD262B8")]
		public int GetCombinedIndex(Material sourceMaterial)
		{
			return default(int);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xD24F34", Offset = "0xD24F34", VA = "0xD24F34")]
		public int GetCombinedIndexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xD2B628", Offset = "0xD2B628", VA = "0xD2B628")]
		public CombinedResult()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000342")]
	public class CombinedMaterial
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect[] uvs;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] uvs2;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> scaleFactors;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Rect> meshUVBounds;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOriginalMaterial;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int displayedIndex;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showCombinedMaterial;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showUVs;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showMeshUVBounds;

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xD2B3C4", Offset = "0xD2B3C4", VA = "0xD2B3C4")]
		public CombinedMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000343")]
	public class CombineInstanceIndexes
	{
		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstVertexIndex;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int vertexCount;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int firstTriangleIndex;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int triangleCount;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showCombinedInstanceIndex;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xD2B5C4", Offset = "0xD2B5C4", VA = "0xD2B5C4")]
		public CombineInstanceIndexes(Mesh mesh, int vertexIndex, int trianglesIndex)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xD2B820", Offset = "0xD2B820", VA = "0xD2B820")]
		public void MoveIndexes(int vertexOffset_p, int triangleOffset_p)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public class MeshCombined
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> names;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> instanceIds;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CombineInstanceIndexes> indexes;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showMeshCombined;

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xD2ABE4", Offset = "0xD2ABE4", VA = "0xD2ABE4")]
		public Mesh RemoveMesh(int instanceID, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xD2B49C", Offset = "0xD2B49C", VA = "0xD2B49C")]
		public MeshCombined()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class CombineInstanceID
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CombineInstance> combineInstances;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> instancesID;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> names;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xD1BCDC", Offset = "0xD1BCDC", VA = "0xD1BCDC")]
		public void AddCombineInstance(int subMeshIndex, Mesh mesh, Matrix4x4 matrix, int instanceID, string name)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xD18904", Offset = "0xD18904", VA = "0xD18904")]
		public void AddRange(CombineInstanceID instances)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xD182E8", Offset = "0xD182E8", VA = "0xD182E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xD189B0", Offset = "0xD189B0", VA = "0xD189B0")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xD17578", Offset = "0xD17578", VA = "0xD17578")]
		public CombineInstanceID()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class DefaultColoredTexture
	{
		[Token(Token = "0x600121E")]
		[Address(RVA = "0xD29BCC", Offset = "0xD29BCC", VA = "0xD29BCC")]
		public static Color GetDefaultTextureColor(string textureProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xD2B83C", Offset = "0xD2B83C", VA = "0xD2B83C")]
		public DefaultColoredTexture()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class MaterialToCombine
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect uvBounds;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int combinedIndex;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int index;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xD20044", Offset = "0xD20044", VA = "0xD20044")]
		public Rect GetScaledAndOffsetedUVBounds()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xD2764C", Offset = "0xD2764C", VA = "0xD2764C")]
		public MaterialToCombine()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public enum MeshOutput
	{
		[Token(Token = "0x4001570")]
		Mesh,
		[Token(Token = "0x4001571")]
		SkinnedMesh
	}
	[Token(Token = "0x2000349")]
	internal class MeshRendererAndOriginalMaterials
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> skinnedMeshRenderers;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material[]> originalMaterials;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Material[]> originalskinnedMeshMaterials;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> splittedGameObject;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xD26110", Offset = "0xD26110", VA = "0xD26110")]
		public MeshRendererAndOriginalMaterials()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ObjSaver
	{
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int StartIndex;

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD2B844", Offset = "0xD2B844", VA = "0xD2B844")]
		public static void SaveObjFile(GameObject obj, bool makeSubmeshes, string floderPath)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD2C028", Offset = "0xD2C028", VA = "0xD2C028")]
		private static void WriteToFile(string s, string filename)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xD2BD44", Offset = "0xD2BD44", VA = "0xD2BD44")]
		private static string processTransform(Transform t, bool makeSubmeshes)
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xD2C1C4", Offset = "0xD2C1C4", VA = "0xD2C1C4")]
		public static string MeshToString(Mesh m, Material[] mats, Transform t)
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xD2C878", Offset = "0xD2C878", VA = "0xD2C878")]
		public ObjSaver()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class Saver
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xD2C880", Offset = "0xD2C880", VA = "0xD2C880")]
		public Saver()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class SubmeshSplitter
	{
		[Token(Token = "0x6001229")]
		[Address(RVA = "0xD26410", Offset = "0xD26410", VA = "0xD26410")]
		public static MeshRenderer SplitSubmeshes(MeshFilter meshFilter, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xD26718", Offset = "0xD26718", VA = "0xD26718")]
		public static SkinnedMeshRenderer SplitSubmeshes(SkinnedMeshRenderer skinnedMesh, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xD2C888", Offset = "0xD2C888", VA = "0xD2C888")]
		private static Mesh CreateMeshFromSubmesh(Mesh mesh, int[] submehesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xD2CAE8", Offset = "0xD2CAE8", VA = "0xD2CAE8")]
		private static GameObject GenerateGameObject(Transform parent, bool skinnedMesh, string name_p, Mesh newMesh_p, Material[] mat)
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xD2CD04", Offset = "0xD2CD04", VA = "0xD2CD04")]
		public SubmeshSplitter()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public struct TextureImportSettings
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isReadable;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isNormal;
	}
	[Token(Token = "0x200034E")]
	public class TextureScale
	{
		[Token(Token = "0x200034F")]
		public class ThreadData
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int start;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int end;

			[Token(Token = "0x6001235")]
			[Address(RVA = "0xD2D164", Offset = "0xD2D164", VA = "0xD2D164")]
			public ThreadData(int s, int e)
			{
			}
		}

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] texColors;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] newColors;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int w;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float ratioX;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float ratioY;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int w2;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int finishCount;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mutex mutex;

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xD2CD0C", Offset = "0xD2CD0C", VA = "0xD2CD0C")]
		public static void Point(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xD294F0", Offset = "0xD294F0", VA = "0xD294F0")]
		public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xD2CD14", Offset = "0xD2CD14", VA = "0xD2CD14")]
		private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xD2D190", Offset = "0xD2D190", VA = "0xD2D190")]
		public static void BilinearScale(object obj)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xD2D3C8", Offset = "0xD2D3C8", VA = "0xD2D3C8")]
		public static void PointScale(object obj)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xD2D578", Offset = "0xD2D578", VA = "0xD2D578")]
		private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xD2D5B0", Offset = "0xD2D5B0", VA = "0xD2D5B0")]
		public TextureScale()
		{
		}
	}
}
namespace Htc.Viveport
{
	[Token(Token = "0x2000350")]
	public enum AudioMixerGroupBindings
	{
		[Token(Token = "0x4001585")]
		AllPreviewSceneSFX
	}
}
namespace Htc.Viveport.Store
{
	[Token(Token = "0x2000351")]
	public class PreviewAudioContext : MonoBehaviour
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerGroupBindings _mixerGroupKey;

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xD2D5B8", Offset = "0xD2D5B8", VA = "0xD2D5B8")]
		public void Bind(Func<AudioMixerGroupBindings, AudioMixerGroup> getMixer)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xD2D98C", Offset = "0xD2D98C", VA = "0xD2D98C")]
		private bool HasNoSubContext(AudioSource src)
		{
			return default(bool);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xD2DA50", Offset = "0xD2DA50", VA = "0xD2DA50")]
		public PreviewAudioContext()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000352")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float fps;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deltaTime;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string frameString;

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xD2DAF4", Offset = "0xD2DAF4", VA = "0xD2DAF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xD2DBD4", Offset = "0xD2DBD4", VA = "0xD2DBD4")]
		public FPSCounter()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000353")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xD2DBDC", Offset = "0xD2DBDC", VA = "0xD2DBDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xD2DE70", Offset = "0xD2DE70", VA = "0xD2DE70")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xD2DFF4", Offset = "0xD2DFF4", VA = "0xD2DFF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xD2E064", Offset = "0xD2E064", VA = "0xD2E064", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xD2E130", Offset = "0xD2E130", VA = "0xD2E130", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xD2E194", Offset = "0xD2E194", VA = "0xD2E194")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xD2E200", Offset = "0xD2E200", VA = "0xD2E200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xD2E204", Offset = "0xD2E204", VA = "0xD2E204")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xD2E2CC", Offset = "0xD2E2CC", VA = "0xD2E2CC")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xD2E394", Offset = "0xD2E394", VA = "0xD2E394")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xD2E45C", Offset = "0xD2E45C", VA = "0xD2E45C")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xD2E524", Offset = "0xD2E524", VA = "0xD2E524")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xD2E5EC", Offset = "0xD2E5EC", VA = "0xD2E5EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xD2E5F0", Offset = "0xD2E5F0", VA = "0xD2E5F0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000356")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4001595")]
			Hardware,
			[Token(Token = "0x4001596")]
			Touch
		}

		[Token(Token = "0x2000357")]
		public class VirtualAxis
		{
			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x17000297")]
			public string name
			{
				[Token(Token = "0x6001263")]
				[Address(RVA = "0xD2EE40", Offset = "0xD2EE40", VA = "0xD2EE40")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001264")]
				[Address(RVA = "0xD2EE48", Offset = "0xD2EE48", VA = "0xD2EE48")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000298")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001265")]
				[Address(RVA = "0xD2EE50", Offset = "0xD2EE50", VA = "0xD2EE50")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001266")]
				[Address(RVA = "0xD2EE58", Offset = "0xD2EE58", VA = "0xD2EE58")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000299")]
			public float GetValue
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0xD2EEAC", Offset = "0xD2EEAC", VA = "0xD2EEAC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700029A")]
			public float GetValueRaw
			{
				[Token(Token = "0x600126C")]
				[Address(RVA = "0xD2EEB4", Offset = "0xD2EEB4", VA = "0xD2EEB4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001267")]
			[Address(RVA = "0xD2DD5C", Offset = "0xD2DD5C", VA = "0xD2DD5C")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0xD2EE64", Offset = "0xD2EE64", VA = "0xD2EE64")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001269")]
			[Address(RVA = "0xD2E00C", Offset = "0xD2E00C", VA = "0xD2E00C")]
			public void Remove()
			{
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0xD2EEA4", Offset = "0xD2EEA4", VA = "0xD2EEA4")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000358")]
		public class VirtualButton
		{
			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x1700029B")]
			public string name
			{
				[Token(Token = "0x600126D")]
				[Address(RVA = "0xD2EEBC", Offset = "0xD2EEBC", VA = "0xD2EEBC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600126E")]
				[Address(RVA = "0xD2EEC4", Offset = "0xD2EEC4", VA = "0xD2EEC4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700029C")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600126F")]
				[Address(RVA = "0xD2EECC", Offset = "0xD2EECC", VA = "0xD2EECC")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001270")]
				[Address(RVA = "0xD2EED4", Offset = "0xD2EED4", VA = "0xD2EED4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700029D")]
			public bool GetButton
			{
				[Token(Token = "0x6001276")]
				[Address(RVA = "0xD2F010", Offset = "0xD2F010", VA = "0xD2F010")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700029E")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001277")]
				[Address(RVA = "0xD2F018", Offset = "0xD2F018", VA = "0xD2F018")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700029F")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001278")]
				[Address(RVA = "0xD2F03C", Offset = "0xD2F03C", VA = "0xD2F03C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001271")]
			[Address(RVA = "0xD2EEE0", Offset = "0xD2EEE0", VA = "0xD2EEE0")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0xD2EF24", Offset = "0xD2EF24", VA = "0xD2EF24")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0xD2EF6C", Offset = "0xD2EF6C", VA = "0xD2EF6C")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0xD2EF98", Offset = "0xD2EF98", VA = "0xD2EF98")]
			public void Released()
			{
			}

			[Token(Token = "0x6001275")]
			[Address(RVA = "0xD2EFB8", Offset = "0xD2EFB8", VA = "0xD2EFB8")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000296")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xD2EC78", Offset = "0xD2EC78", VA = "0xD2EC78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xD2E5F8", Offset = "0xD2E5F8", VA = "0xD2E5F8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xD2E6D0", Offset = "0xD2E6D0", VA = "0xD2E6D0")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xD2DCF0", Offset = "0xD2DCF0", VA = "0xD2DCF0")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xD2E774", Offset = "0xD2E774", VA = "0xD2E774")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xD2DD98", Offset = "0xD2DD98", VA = "0xD2DD98")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xD2E7E0", Offset = "0xD2E7E0", VA = "0xD2E7E0")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xD2E84C", Offset = "0xD2E84C", VA = "0xD2E84C")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xD2E908", Offset = "0xD2E908", VA = "0xD2E908")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xD2DE04", Offset = "0xD2DE04", VA = "0xD2DE04")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xD2E974", Offset = "0xD2E974", VA = "0xD2E974")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xD2EA4C", Offset = "0xD2EA4C", VA = "0xD2EA4C")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xD2E9CC", Offset = "0xD2E9CC", VA = "0xD2E9CC")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xD2EAA4", Offset = "0xD2EAA4", VA = "0xD2EAA4")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xD2EB14", Offset = "0xD2EB14", VA = "0xD2EB14")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xD2EB84", Offset = "0xD2EB84", VA = "0xD2EB84")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD2E25C", Offset = "0xD2E25C", VA = "0xD2E25C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD2E324", Offset = "0xD2E324", VA = "0xD2E324")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xD2E3EC", Offset = "0xD2E3EC", VA = "0xD2E3EC")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD2E57C", Offset = "0xD2E57C", VA = "0xD2E57C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xD2E4B4", Offset = "0xD2E4B4", VA = "0xD2E4B4")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD2EBF4", Offset = "0xD2EBF4", VA = "0xD2EBF4")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD2ECE4", Offset = "0xD2ECE4", VA = "0xD2ECE4")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xD2ED58", Offset = "0xD2ED58", VA = "0xD2ED58")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xD2EDCC", Offset = "0xD2EDCC", VA = "0xD2EDCC")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xD2F060", Offset = "0xD2F060", VA = "0xD2F060")]
		private void Update()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xD2F064", Offset = "0xD2F064", VA = "0xD2F064")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xD2F0D4", Offset = "0xD2F0D4", VA = "0xD2F0D4")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200035B")]
		public enum AxisOption
		{
			[Token(Token = "0x40015AA")]
			Both,
			[Token(Token = "0x40015AB")]
			OnlyHorizontal,
			[Token(Token = "0x40015AC")]
			OnlyVertical
		}

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xD2F0DC", Offset = "0xD2F0DC", VA = "0xD2F0DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xD2F240", Offset = "0xD2F240", VA = "0xD2F240")]
		private void Start()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xD2F270", Offset = "0xD2F270", VA = "0xD2F270")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xD2F0E0", Offset = "0xD2F0E0", VA = "0xD2F0E0")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD2F2D0", Offset = "0xD2F2D0", VA = "0xD2F2D0", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD2F41C", Offset = "0xD2F41C", VA = "0xD2F41C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD2F458", Offset = "0xD2F458", VA = "0xD2F458", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD2F45C", Offset = "0xD2F45C", VA = "0xD2F45C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD2F49C", Offset = "0xD2F49C", VA = "0xD2F49C")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD2F528", Offset = "0xD2F528", VA = "0xD2F528")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD2F538", Offset = "0xD2F538", VA = "0xD2F538")]
		private void Start()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD2F530", Offset = "0xD2F530", VA = "0xD2F530")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD2F640", Offset = "0xD2F640", VA = "0xD2F640")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xD2F9B8", Offset = "0xD2F9B8", VA = "0xD2F9B8")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200035D")]
	[RequireComponent(typeof(Image))]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x200035E")]
		public enum AxisOption
		{
			[Token(Token = "0x40015C0")]
			Both,
			[Token(Token = "0x40015C1")]
			OnlyHorizontal,
			[Token(Token = "0x40015C2")]
			OnlyVertical
		}

		[Token(Token = "0x200035F")]
		public enum ControlStyle
		{
			[Token(Token = "0x40015C4")]
			Absolute,
			[Token(Token = "0x40015C5")]
			Relative,
			[Token(Token = "0x40015C6")]
			Swipe
		}

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xD2F9C0", Offset = "0xD2F9C0", VA = "0xD2F9C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xD2FB24", Offset = "0xD2FB24", VA = "0xD2FB24")]
		private void Start()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xD2F9C4", Offset = "0xD2F9C4", VA = "0xD2F9C4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xD2FBAC", Offset = "0xD2FBAC", VA = "0xD2FBAC")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xD2FCAC", Offset = "0xD2FCAC", VA = "0xD2FCAC", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xD2FCE4", Offset = "0xD2FCE4", VA = "0xD2FCE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xD2FEBC", Offset = "0xD2FEBC", VA = "0xD2FEBC", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD2FF1C", Offset = "0xD2FF1C", VA = "0xD2FF1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD2FFDC", Offset = "0xD2FFDC", VA = "0xD2FFDC")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x170002A0")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xD31070", Offset = "0xD31070", VA = "0xD31070")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xD3107C", Offset = "0xD3107C", VA = "0xD3107C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD31088", Offset = "0xD31088", VA = "0xD31088")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD310E0", Offset = "0xD310E0", VA = "0xD310E0")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xD31138", Offset = "0xD31138", VA = "0xD31138")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD312D0", Offset = "0xD312D0", VA = "0xD312D0")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD31468", Offset = "0xD31468", VA = "0xD31468")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD314F8", Offset = "0xD314F8", VA = "0xD314F8")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xD31588", Offset = "0xD31588", VA = "0xD31588")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD3161C", Offset = "0xD3161C", VA = "0xD3161C")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD31624", Offset = "0xD31624", VA = "0xD31624")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD3162C", Offset = "0xD3162C", VA = "0xD3162C")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600129F")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x60012A0")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60012A1")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60012A2")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60012A3")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60012A4")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60012A5")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60012A6")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x60012A7")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x60012A8")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x60012A9")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD31634", Offset = "0xD31634", VA = "0xD31634")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000361")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD3175C", Offset = "0xD3175C", VA = "0xD3175C")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD317E8", Offset = "0xD317E8", VA = "0xD317E8")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD31874", Offset = "0xD31874", VA = "0xD31874", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD3190C", Offset = "0xD3190C", VA = "0xD3190C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD319A4", Offset = "0xD319A4", VA = "0xD319A4", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD31A3C", Offset = "0xD31A3C", VA = "0xD31A3C", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD31AD8", Offset = "0xD31AD8", VA = "0xD31AD8", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD31B74", Offset = "0xD31B74", VA = "0xD31B74", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD31C0C", Offset = "0xD31C0C", VA = "0xD31C0C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD31CB0", Offset = "0xD31CB0", VA = "0xD31CB0", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD31D48", Offset = "0xD31D48", VA = "0xD31D48", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xD31DE0", Offset = "0xD31DE0", VA = "0xD31DE0", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD31E78", Offset = "0xD31E78", VA = "0xD31E78", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xD31E84", Offset = "0xD31E84", VA = "0xD31E84")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xD31E88", Offset = "0xD31E88", VA = "0xD31E88", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD31E9C", Offset = "0xD31E9C", VA = "0xD31E9C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD31EA8", Offset = "0xD31EA8", VA = "0xD31EA8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xD31EB4", Offset = "0xD31EB4", VA = "0xD31EB4", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xD31EC0", Offset = "0xD31EC0", VA = "0xD31EC0", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD31F10", Offset = "0xD31F10", VA = "0xD31F10", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD31F60", Offset = "0xD31F60", VA = "0xD31F60", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD31FB0", Offset = "0xD31FB0", VA = "0xD31FB0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD32000", Offset = "0xD32000", VA = "0xD32000", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD32050", Offset = "0xD32050", VA = "0xD32050", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD320A0", Offset = "0xD320A0", VA = "0xD320A0", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD320A8", Offset = "0xD320A8", VA = "0xD320A8")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x2000363")]
	[RequireComponent(typeof(PhotonView))]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(Animator))]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD320AC", Offset = "0xD320AC", VA = "0xD320AC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD322B4", Offset = "0xD322B4", VA = "0xD322B4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD323D8", Offset = "0xD323D8", VA = "0xD323D8", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD32480", Offset = "0xD32480", VA = "0xD32480", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD32510", Offset = "0xD32510", VA = "0xD32510", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD325A0", Offset = "0xD325A0", VA = "0xD325A0", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD3264C", Offset = "0xD3264C", VA = "0xD3264C", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD326C4", Offset = "0xD326C4", VA = "0xD326C4", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD327C0", Offset = "0xD327C0", VA = "0xD327C0", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD32850", Offset = "0xD32850", VA = "0xD32850", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x60012CF")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD328E0", Offset = "0xD328E0", VA = "0xD328E0")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000364")]
	[DisallowMultipleComponent]
	[RequireComponent(typeof(Toggle))]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000365")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000014")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xD328F0", Offset = "0xD328F0", VA = "0xD328F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xD329A8", Offset = "0xD329A8", VA = "0xD329A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD32A60", Offset = "0xD32A60", VA = "0xD32A60")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD32B3C", Offset = "0xD32B3C", VA = "0xD32B3C")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD32BA8", Offset = "0xD32BA8", VA = "0xD32BA8")]
		public BetterToggle()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000367")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000015")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xD321FC", Offset = "0xD321FC", VA = "0xD321FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xD32320", Offset = "0xD32320", VA = "0xD32320")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD32D30", Offset = "0xD32D30", VA = "0xD32D30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xD32F74", Offset = "0xD32F74", VA = "0xD32F74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD330D4", Offset = "0xD330D4", VA = "0xD330D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD332F8", Offset = "0xD332F8", VA = "0xD332F8")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD33400", Offset = "0xD33400", VA = "0xD33400")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD33584", Offset = "0xD33584", VA = "0xD33584")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD3358C", Offset = "0xD3358C", VA = "0xD3358C")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD33408", Offset = "0xD33408", VA = "0xD33408")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD33594", Offset = "0xD33594", VA = "0xD33594")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD33638", Offset = "0xD33638", VA = "0xD33638", Slot = "4")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD3363C", Offset = "0xD3363C", VA = "0xD3363C", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD33640", Offset = "0xD33640", VA = "0xD33640", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD33644", Offset = "0xD33644", VA = "0xD33644", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD33648", Offset = "0xD33648", VA = "0xD33648", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD3364C", Offset = "0xD3364C", VA = "0xD3364C", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD33650", Offset = "0xD33650", VA = "0xD33650", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD33764", Offset = "0xD33764", VA = "0xD33764")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x2000369")]
		public enum SpawnSequence
		{
			[Token(Token = "0x40015EF")]
			Connection,
			[Token(Token = "0x40015F0")]
			Random,
			[Token(Token = "0x40015F1")]
			RoundRobin
		}

		[Token(Token = "0x200036A")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000016")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xD32EBC", Offset = "0xD32EBC", VA = "0xD32EBC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xD3301C", Offset = "0xD3301C", VA = "0xD3301C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD337AC", Offset = "0xD337AC", VA = "0xD337AC", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xD339C0", Offset = "0xD339C0", VA = "0xD339C0")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD33EEC", Offset = "0xD33EEC", VA = "0xD33EEC", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xD3424C", Offset = "0xD3424C", VA = "0xD3424C", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD34464", Offset = "0xD34464", VA = "0xD34464", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xD34584", Offset = "0xD34584", VA = "0xD34584")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x170002A1")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xD345EC", Offset = "0xD345EC", VA = "0xD345EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD34608", Offset = "0xD34608", VA = "0xD34608", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD3464C", Offset = "0xD3464C", VA = "0xD3464C", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD346D4", Offset = "0xD346D4", VA = "0xD346D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD346D8", Offset = "0xD346D8", VA = "0xD346D8")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xD34800", Offset = "0xD34800", VA = "0xD34800")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200036C")]
	[RequireComponent(typeof(Canvas))]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD3487C", Offset = "0xD3487C", VA = "0xD3487C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xD34ACC", Offset = "0xD34ACC", VA = "0xD34ACC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD34C48", Offset = "0xD34C48", VA = "0xD34C48")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xD34C54", Offset = "0xD34C54", VA = "0xD34C54")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD34C70", Offset = "0xD34C70", VA = "0xD34C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xD34DA0", Offset = "0xD34DA0", VA = "0xD34DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD34F00", Offset = "0xD34F00", VA = "0xD34F00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD35018", Offset = "0xD35018", VA = "0xD35018")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD35020", Offset = "0xD35020", VA = "0xD35020", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD35048", Offset = "0xD35048", VA = "0xD35048", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD350B8", Offset = "0xD350B8", VA = "0xD350B8", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xD3524C", Offset = "0xD3524C", VA = "0xD3524C")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xD35320", Offset = "0xD35320", VA = "0xD35320")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip JoinClip;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LeaveClip;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource source;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xD35354", Offset = "0xD35354", VA = "0xD35354", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xD35450", Offset = "0xD35450", VA = "0xD35450", Slot = "43")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xD3554C", Offset = "0xD3554C", VA = "0xD3554C")]
		public SoundsForJoinAndLeave()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xD350D0", Offset = "0xD350D0", VA = "0xD350D0", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xD3533C", Offset = "0xD3533C", VA = "0xD3533C")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x2000371")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x170002A2")]
		public bool DebugMode
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xD35554", Offset = "0xD35554", VA = "0xD35554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xD3555C", Offset = "0xD3555C", VA = "0xD3555C")]
			set
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xD34A14", Offset = "0xD34A14", VA = "0xD34A14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xD34B90", Offset = "0xD34B90", VA = "0xD34B90")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xD3568C", Offset = "0xD3568C", VA = "0xD3568C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xD356F0", Offset = "0xD356F0", VA = "0xD356F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xD358F4", Offset = "0xD358F4", VA = "0xD358F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xD35AF8", Offset = "0xD35AF8", VA = "0xD35AF8")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xD35BB8", Offset = "0xD35BB8", VA = "0xD35BB8")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xD35F38", Offset = "0xD35F38", VA = "0xD35F38")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xD3628C", Offset = "0xD3628C", VA = "0xD3628C")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xD362A8", Offset = "0xD362A8", VA = "0xD362A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xD36890", Offset = "0xD36890", VA = "0xD36890")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xD36960", Offset = "0xD36960", VA = "0xD36960")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xD369E0", Offset = "0xD369E0", VA = "0xD369E0")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xD36A7C", Offset = "0xD36A7C", VA = "0xD36A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xD36C8C", Offset = "0xD36C8C", VA = "0xD36C8C")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xD37254", Offset = "0xD37254", VA = "0xD37254")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xD36E20", Offset = "0xD36E20", VA = "0xD36E20")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xD3725C", Offset = "0xD3725C", VA = "0xD3725C")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Pun.Demo.Asteroids
{
	[Token(Token = "0x2000372")]
	public class LobbyMainPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000374")]
		[CompilerGenerated]
		private sealed class <ConnectNow>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyMainPanel <>4__this;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001354")]
				[Address(RVA = "0xD3E348", Offset = "0xD3E348", VA = "0xD3E348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001356")]
				[Address(RVA = "0xD3E390", Offset = "0xD3E390", VA = "0xD3E390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001351")]
			[Address(RVA = "0xD37AFC", Offset = "0xD37AFC", VA = "0xD37AFC")]
			[DebuggerHidden]
			public <ConnectNow>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001352")]
			[Address(RVA = "0xD3E1E8", Offset = "0xD3E1E8", VA = "0xD3E1E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001353")]
			[Address(RVA = "0xD3E1EC", Offset = "0xD3E1EC", VA = "0xD3E1EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001355")]
			[Address(RVA = "0xD3E350", Offset = "0xD3E350", VA = "0xD3E350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000375")]
		[CompilerGenerated]
		private sealed class <PrendiPing>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyMainPanel <>4__this;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600135A")]
				[Address(RVA = "0xD3E7C8", Offset = "0xD3E7C8", VA = "0xD3E7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600135C")]
				[Address(RVA = "0xD3E810", Offset = "0xD3E810", VA = "0xD3E810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001357")]
			[Address(RVA = "0xD3D72C", Offset = "0xD3D72C", VA = "0xD3D72C")]
			[DebuggerHidden]
			public <PrendiPing>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001358")]
			[Address(RVA = "0xD3E398", Offset = "0xD3E398", VA = "0xD3E398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001359")]
			[Address(RVA = "0xD3E39C", Offset = "0xD3E39C", VA = "0xD3E39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0xD3E7D0", Offset = "0xD3E7D0", VA = "0xD3E7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Login Panel")]
		public GameObject LoginPanel;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PlayerNameInput;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Selection Panel")]
		public GameObject SelectionPanel;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Create Room Panel")]
		public GameObject CreateRoomPanel;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField RoomNameInputField;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField MaxPlayersInputField;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Join Random Room Panel")]
		public GameObject JoinRandomRoomPanel;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Room List Panel")]
		public GameObject RoomListPanel;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject RoomListContent;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject RoomListEntryPrefab;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Inside Room Panel")]
		public GameObject InsideRoomPanel;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Button StartGameButton;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject PlayerListEntryPrefab;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject Roomnametext;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string[] roomnamearray;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string[] tradname;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string stadiumonline;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int stadium;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, RoomInfo> cachedRoomList;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<string, GameObject> roomListEntries;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<int, GameObject> playerListEntries;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string difficulty;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BoxCollider Acceptbutton;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BoxCollider Declinebutton;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Button Yes;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Button No;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Canvas Matchrequest;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Canvas Popup;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Canvas Popupauto;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Text Challenger;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string[] challengerarray;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject signal1;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject signal2;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject signal3;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject signal4;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public string roomName;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioSource bell;

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xD37318", Offset = "0xD37318", VA = "0xD37318")]
		public void Awake()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xD37A1C", Offset = "0xD37A1C", VA = "0xD37A1C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD37A88", Offset = "0xD37A88", VA = "0xD37A88")]
		[IteratorStateMachine(typeof(<ConnectNow>d__39))]
		private IEnumerator ConnectNow()
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD37B24", Offset = "0xD37B24", VA = "0xD37B24")]
		public void Update()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD37FE8", Offset = "0xD37FE8", VA = "0xD37FE8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xD38038", Offset = "0xD38038", VA = "0xD38038", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD397BC", Offset = "0xD397BC", VA = "0xD397BC", Slot = "40")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xD3A004", Offset = "0xD3A004", VA = "0xD3A004", Slot = "37")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD3A05C", Offset = "0xD3A05C", VA = "0xD3A05C", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD3A088", Offset = "0xD3A088", VA = "0xD3A088", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD3A0B4", Offset = "0xD3A0B4", VA = "0xD3A0B4", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xD3A1B8", Offset = "0xD3A1B8", VA = "0xD3A1B8", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD3B14C", Offset = "0xD3B14C", VA = "0xD3B14C", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xD3B33C", Offset = "0xD3B33C", VA = "0xD3B33C", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD3C580", Offset = "0xD3C580", VA = "0xD3C580", Slot = "43")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xD3C8E0", Offset = "0xD3C8E0", VA = "0xD3C8E0", Slot = "32")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xD3CA48", Offset = "0xD3CA48", VA = "0xD3CA48", Slot = "47")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xD3CCD8", Offset = "0xD3CCD8", VA = "0xD3CCD8")]
		public void OnBackButtonClicked()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xD381B8", Offset = "0xD381B8", VA = "0xD381B8")]
		public void OnCreateRoomButtonClicked()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xD3CD68", Offset = "0xD3CD68", VA = "0xD3CD68")]
		public void OnJoinRandomRoomButtonClicked()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xD3D0C0", Offset = "0xD3D0C0", VA = "0xD3D0C0")]
		public void OnLeaveGameButtonClicked()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xD3D2D8", Offset = "0xD3D2D8", VA = "0xD3D2D8")]
		public void OnLoginButtonClicked()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xD3D6B8", Offset = "0xD3D6B8", VA = "0xD3D6B8")]
		[IteratorStateMachine(typeof(<PrendiPing>d__59))]
		private IEnumerator PrendiPing()
		{
			return null;
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xD3D754", Offset = "0xD3D754", VA = "0xD3D754")]
		public void OnRoomListButtonClicked()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xD3BB74", Offset = "0xD3BB74", VA = "0xD3BB74")]
		public void OnStartGameButtonClicked()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xD3AFF0", Offset = "0xD3AFF0", VA = "0xD3AFF0")]
		private bool CheckPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xD397EC", Offset = "0xD397EC", VA = "0xD397EC")]
		private void ClearRoomListView()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xD3D980", Offset = "0xD3D980", VA = "0xD3D980")]
		public void LocalPlayerPropertiesUpdated()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xD39664", Offset = "0xD39664", VA = "0xD39664")]
		private void SetActivePanel(string activePanel)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xD399B0", Offset = "0xD399B0", VA = "0xD399B0")]
		private void UpdateCachedRoomList(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xD39C28", Offset = "0xD39C28", VA = "0xD39C28")]
		private void UpdateRoomListView()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xD3E10C", Offset = "0xD3E10C", VA = "0xD3E10C")]
		public LobbyMainPanel()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class LobbyTopPanel : MonoBehaviour
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string connectionStatusMessage;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI References")]
		public Text ConnectionStatusText;

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xD3E818", Offset = "0xD3E818", VA = "0xD3E818")]
		public void Update()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xD3E8DC", Offset = "0xD3E8DC", VA = "0xD3E8DC")]
		public LobbyTopPanel()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class PlayerListEntry : MonoBehaviour
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI References")]
		public Text PlayerNameText;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] playernamearray;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image PlayerColorImage;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button PlayerReadyButton;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image PlayerReadyImage;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button Acceptbutton;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button Declinebutton;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ownerId;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isPlayerReady;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ColorBlock colors;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject signal1;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject signal2;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject signal3;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject signal4;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xD3E934", Offset = "0xD3E934", VA = "0xD3E934")]
		public void Update()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xD3EBA8", Offset = "0xD3EBA8", VA = "0xD3EBA8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xD3A994", Offset = "0xD3A994", VA = "0xD3A994")]
		public void Initialize(int playerId, string playerName)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xD3ADE0", Offset = "0xD3ADE0", VA = "0xD3ADE0")]
		public void SetPlayerReady(bool playerReady)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xD3EEEC", Offset = "0xD3EEEC", VA = "0xD3EEEC")]
		public PlayerListEntry()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class RoomListEntry : MonoBehaviour
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text RoomNameText;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RoomPlayersText;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button JoinRoomButton;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string roomName;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] roomnamearray;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string tradname;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject signal1;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject signal2;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject signal3;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject signal4;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text JoinText;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xD3F3D8", Offset = "0xD3F3D8", VA = "0xD3F3D8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xD3DAB4", Offset = "0xD3DAB4", VA = "0xD3DAB4")]
		public void Initialize(string name, byte currentPlayers, byte maxPlayers)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xD3F46C", Offset = "0xD3F46C", VA = "0xD3F46C")]
		public RoomListEntry()
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos
{
	[Token(Token = "0x2000379")]
	public class BackgroundMusicController : MonoBehaviour
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text volumeText;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider volumeSlider;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float initialVolume;

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xD3F508", Offset = "0xD3F508", VA = "0xD3F508")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xD3F648", Offset = "0xD3F648", VA = "0xD3F648")]
		private void OnVolumeChanged(float newValue)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xD3F714", Offset = "0xD3F714", VA = "0xD3F714")]
		public BackgroundMusicController()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class SidebarToggle : MonoBehaviour
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button sidebarButton;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform panelsHolder;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sidebarWidth;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool sidebarOpen;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xD3F724", Offset = "0xD3F724", VA = "0xD3F724")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xD3F7F4", Offset = "0xD3F7F4", VA = "0xD3F7F4")]
		[ContextMenu("ToggleSidebar")]
		private void ToggleSidebar()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xD3F7DC", Offset = "0xD3F7DC", VA = "0xD3F7DC")]
		private void ToggleSidebar(bool open)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xD3F858", Offset = "0xD3F858", VA = "0xD3F858")]
		public SidebarToggle()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public static class UiExtensions
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0xD3F80C", Offset = "0xD3F80C", VA = "0xD3F80C")]
		public static void SetPosX(this RectTransform rectTransform, float x)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xD3F870", Offset = "0xD3F870", VA = "0xD3F870")]
		public static void SetHeight(this RectTransform rectTransform, float h)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xD3F888", Offset = "0xD3F888", VA = "0xD3F888")]
		public static void SetValue(this Toggle toggle, bool isOn)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xD3F8A0", Offset = "0xD3F8A0", VA = "0xD3F8A0")]
		public static void SetValue(this Slider slider, float v)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xD3F8C0", Offset = "0xD3F8C0", VA = "0xD3F8C0")]
		public static void SetValue(this InputField inputField, string v)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xD3F8D4", Offset = "0xD3F8D4", VA = "0xD3F8D4")]
		public static void DestroyChildren(this Transform transform)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xD3FA18", Offset = "0xD3FA18", VA = "0xD3FA18")]
		public static void Hide(this CanvasGroup canvasGroup, bool blockRaycasts = false, bool interactable = false)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xD3FA68", Offset = "0xD3FA68", VA = "0xD3FA68")]
		public static void Show(this CanvasGroup canvasGroup, bool blockRaycasts = true, bool interactable = true)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xD3FAB8", Offset = "0xD3FAB8", VA = "0xD3FAB8")]
		public static bool IsHidden(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xD3FADC", Offset = "0xD3FADC", VA = "0xD3FADC")]
		public static bool IsShown(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xD3FB00", Offset = "0xD3FB00", VA = "0xD3FB00")]
		public static void SetSingleOnClickCallback(this Button button, UnityAction action)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xD3FB44", Offset = "0xD3FB44", VA = "0xD3FB44")]
		public static void SetSingleOnValueChangedCallback(this Toggle toggle, UnityAction<bool> action)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xD3FBB0", Offset = "0xD3FBB0", VA = "0xD3FBB0")]
		public static void SetSingleOnValueChangedCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xD3FC1C", Offset = "0xD3FC1C", VA = "0xD3FC1C")]
		public static void SetSingleOnEndEditCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xD3FC88", Offset = "0xD3FC88", VA = "0xD3FC88")]
		public static void SetSingleOnValueChangedCallback(this Dropdown inputField, UnityAction<int> action)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xD3F5DC", Offset = "0xD3F5DC", VA = "0xD3F5DC")]
		public static void SetSingleOnValueChangedCallback(this Slider slider, UnityAction<float> action)
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos.DemoVoiceUI
{
	[Token(Token = "0x200037C")]
	public class CodecSettingsUI : MonoBehaviour
	{
		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dropdown frameDurationDropdown;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown samplingRateDropdown;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField bitrateInputField;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> frameDurationOptions;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> samplingRateOptions;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xD3FCF4", Offset = "0xD3FCF4", VA = "0xD3FCF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xD3FFF8", Offset = "0xD3FFF8", VA = "0xD3FFF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xD40018", Offset = "0xD40018", VA = "0xD40018")]
		private void OnBitrateChanged(string newBitrateString)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xD40080", Offset = "0xD40080", VA = "0xD40080")]
		private void OnFrameDurationChanged(int index)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xD400E0", Offset = "0xD400E0", VA = "0xD400E0")]
		private void OnSamplingRateChanged(int index)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xD3FEB4", Offset = "0xD3FEB4", VA = "0xD3FEB4")]
		private void InitFrameDuration()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xD3FF40", Offset = "0xD3FF40", VA = "0xD3FF40")]
		private void InitSamplingRate()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xD3FFA8", Offset = "0xD3FFA8", VA = "0xD3FFA8")]
		private void InitBitrate()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xD40140", Offset = "0xD40140", VA = "0xD40140")]
		public CodecSettingsUI()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[RequireComponent(typeof(VoiceConnection), typeof(ConnectAndJoin))]
	public class DemoVoiceUI : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text rttText;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text rttVariationText;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle encryptionToggle;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle aecHighPassToggle;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputField reverseStreamDelayInputField;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider agcCompressionGainSlider;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle audioToneToggle;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle highPassToggle;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool defaultTransmitEnabled;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int screenWidth;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int screenHeight;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool fullScreen;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private InputField roomNameInputField;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputField globalMinDelaySoftInputField;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputField globalMaxDelaySoftInputField;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputField globalMaxDelayHardInputField;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private int rttYellowThreshold;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int rttRedThreshold;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int rttVariationYellowThreshold;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private int rttVariationRedThreshold;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject compressionGainGameObject;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Text compressionGainText;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject aecOptionsGameObject;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ConnectAndJoin connectAndJoin;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly Color warningColor;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly Color okColor;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Color redColor;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Color defaultColor;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xD406F8", Offset = "0xD406F8", VA = "0xD406F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xD41430", Offset = "0xD41430", VA = "0xD41430", Slot = "16")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xD4145C", Offset = "0xD4145C", VA = "0xD4145C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xD414F8", Offset = "0xD414F8", VA = "0xD414F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xD41394", Offset = "0xD41394", VA = "0xD41394")]
		private void GetSavedNickname()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xD41594", Offset = "0xD41594", VA = "0xD41594", Slot = "17")]
		protected virtual void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xD416C4", Offset = "0xD416C4", VA = "0xD416C4")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xD41768", Offset = "0xD41768", VA = "0xD41768")]
		private void ToggleMute(bool isOn)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xD419B4", Offset = "0xD419B4", VA = "0xD419B4", Slot = "18")]
		protected virtual void ToggleIsRecording(bool isRecording)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xD419E4", Offset = "0xD419E4", VA = "0xD419E4")]
		private void ToggleDebugEcho(bool isOn)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xD41A14", Offset = "0xD41A14", VA = "0xD41A14")]
		private void ToggleReliable(bool isOn)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xD41A44", Offset = "0xD41A44", VA = "0xD41A44")]
		private void ToggleEncryption(bool isOn)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xD41A74", Offset = "0xD41A74", VA = "0xD41A74")]
		private void ToggleAEC(bool isOn)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xD41AB8", Offset = "0xD41AB8", VA = "0xD41AB8")]
		private void ToggleNoiseSuppression(bool isOn)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xD41AD8", Offset = "0xD41AD8", VA = "0xD41AD8")]
		private void ToggleAGC(bool isOn)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xD41B1C", Offset = "0xD41B1C", VA = "0xD41B1C")]
		private void ToggleVAD(bool isOn)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xD41B3C", Offset = "0xD41B3C", VA = "0xD41B3C")]
		private void ToggleHighPass(bool isOn)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xD41B5C", Offset = "0xD41B5C", VA = "0xD41B5C")]
		private void ToggleDsp(bool isOn)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xD41BBC", Offset = "0xD41BBC", VA = "0xD41BBC")]
		private void ToggleAudioClipStreaming(bool isOn)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xD41CB4", Offset = "0xD41CB4", VA = "0xD41CB4")]
		private void ToggleAudioToneFactory(bool isOn)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xD41EB8", Offset = "0xD41EB8", VA = "0xD41EB8")]
		private void TogglePhotonVAD(bool isOn)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xD41EE8", Offset = "0xD41EE8", VA = "0xD41EE8")]
		private void ToggleAecHighPass(bool isOn)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xD41F08", Offset = "0xD41F08", VA = "0xD41F08")]
		private void OnAgcCompressionGainChanged(float agcCompressionGain)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xD41FD8", Offset = "0xD41FD8", VA = "0xD41FD8")]
		private void OnGlobalPlaybackDelayMinSoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xD420A8", Offset = "0xD420A8", VA = "0xD420A8")]
		private void OnGlobalPlaybackDelayMaxSoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xD42174", Offset = "0xD42174", VA = "0xD42174")]
		private void OnGlobalPlaybackDelayMaxHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xD42240", Offset = "0xD42240", VA = "0xD42240")]
		private void OnReverseStreamDelayChanged(string newReverseStreamString)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xD422CC", Offset = "0xD422CC", VA = "0xD422CC")]
		private void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xD42374", Offset = "0xD42374", VA = "0xD42374")]
		private void JoinOrCreateRoom(string roomName)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xD424AC", Offset = "0xD424AC", VA = "0xD424AC", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xD42A38", Offset = "0xD42A38", VA = "0xD42A38")]
		private void SetTextColor(int textValue, Text text, int yellowThreshold, int redThreshold)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xD42A00", Offset = "0xD42A00", VA = "0xD42A00")]
		private void ResetTextColor(Text text)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xD408AC", Offset = "0xD408AC", VA = "0xD408AC")]
		private void InitUiCallbacks()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xD40EE0", Offset = "0xD40EE0", VA = "0xD40EE0")]
		private void InitUiValues()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xD42B80", Offset = "0xD42B80", VA = "0xD42B80")]
		private void SetRoomDebugText()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xD42E90", Offset = "0xD42E90", VA = "0xD42E90", Slot = "20")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xD42F04", Offset = "0xD42F04", VA = "0xD42F04", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xD42F08", Offset = "0xD42F08", VA = "0xD42F08", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xD42F0C", Offset = "0xD42F0C", VA = "0xD42F0C", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xD42F10", Offset = "0xD42F10", VA = "0xD42F10", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xD42F20", Offset = "0xD42F20", VA = "0xD42F20", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xD42F24", Offset = "0xD42F24", VA = "0xD42F24", Slot = "9")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xD42F28", Offset = "0xD42F28", VA = "0xD42F28", Slot = "10")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xD42F2C", Offset = "0xD42F2C", VA = "0xD42F2C", Slot = "11")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xD42F30", Offset = "0xD42F30", VA = "0xD42F30", Slot = "12")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xD42F34", Offset = "0xD42F34", VA = "0xD42F34", Slot = "13")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xD42F38", Offset = "0xD42F38", VA = "0xD42F38", Slot = "14")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xD42F3C", Offset = "0xD42F3C", VA = "0xD42F3C", Slot = "15")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xD42FB0", Offset = "0xD42FB0", VA = "0xD42FB0")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public static class PhotonDemoExtensions
	{
		[Token(Token = "0x400169F")]
		internal const string IS_MUTED_PROPERTY_KEY = "mute";

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xD417D0", Offset = "0xD417D0", VA = "0xD417D0")]
		public static bool Mute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xD418C4", Offset = "0xD418C4", VA = "0xD418C4")]
		public static bool Unmute(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xD42AB4", Offset = "0xD42AB4", VA = "0xD42AB4")]
		public static bool IsMuted(this Player player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000380")]
	[RequireComponent(typeof(Speaker))]
	public class RemoteSpeakerUI : MonoBehaviour, IInRoomCallbacks
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Image remoteIsMuting;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField minDelaySoftInputField;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField maxDelaySoftInputField;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField maxDelayHardInputField;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Speaker speaker;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected LoadBalancingClient loadBalancingClient;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xD43100", Offset = "0xD43100", VA = "0xD43100", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xD43420", Offset = "0xD43420", VA = "0xD43420")]
		private void OnMinDelaySoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xD434F0", Offset = "0xD434F0", VA = "0xD434F0")]
		private void OnMaxDelaySoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xD435BC", Offset = "0xD435BC", VA = "0xD435BC")]
		private void OnMaxDelayHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xD43688", Offset = "0xD43688", VA = "0xD43688")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xD43768", Offset = "0xD43768", VA = "0xD43768")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xD43308", Offset = "0xD43308", VA = "0xD43308")]
		private void SetNickname()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xD433EC", Offset = "0xD433EC", VA = "0xD433EC")]
		private void SetMutedState()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xD43780", Offset = "0xD43780", VA = "0xD43780", Slot = "10")]
		protected virtual void SetMutedState(bool isMuted)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xD437A0", Offset = "0xD437A0", VA = "0xD437A0", Slot = "11")]
		protected virtual void OnActorPropertiesChanged(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xD437EC", Offset = "0xD437EC", VA = "0xD437EC", Slot = "12")]
		public virtual void Init(VoiceConnection vC)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xD4384C", Offset = "0xD4384C", VA = "0xD4384C", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xD43850", Offset = "0xD43850", VA = "0xD43850", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xD43854", Offset = "0xD43854", VA = "0xD43854", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xD43858", Offset = "0xD43858", VA = "0xD43858", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xD43864", Offset = "0xD43864", VA = "0xD43864", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xD43868", Offset = "0xD43868", VA = "0xD43868")]
		public RemoteSpeakerUI()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public struct MicRef
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xD43870", Offset = "0xD43870", VA = "0xD43870")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xD438A0", Offset = "0xD438A0", VA = "0xD438A0")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xD438C4", Offset = "0xD438C4", VA = "0xD438C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000382")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MicRef> micOptions;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[FormerlySerializedAs("RefreshButton")]
		public Slider VolumeMic;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle mutetoggle;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xD43910", Offset = "0xD43910", VA = "0xD43910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xD43940", Offset = "0xD43940", VA = "0xD43940")]
		public void Start()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xD43AB8", Offset = "0xD43AB8", VA = "0xD43AB8")]
		public void VolumeChange()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD43B8C", Offset = "0xD43B8C", VA = "0xD43B8C")]
		public void mute()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD43C68", Offset = "0xD43C68", VA = "0xD43C68")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD43D00", Offset = "0xD43D00", VA = "0xD43D00")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xD44068", Offset = "0xD44068", VA = "0xD44068")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xD440E0", Offset = "0xD440E0", VA = "0xD440E0")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xD44358", Offset = "0xD44358", VA = "0xD44358")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xD43928", Offset = "0xD43928", VA = "0xD43928")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xD443D4", Offset = "0xD443D4", VA = "0xD443D4")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xD443EC", Offset = "0xD443EC", VA = "0xD443EC")]
		public MicrophoneDropdownFiller()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000383")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xD44480", Offset = "0xD44480", VA = "0xD44480")]
		public void Start()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xD4460C", Offset = "0xD4460C", VA = "0xD4460C")]
		public void Update()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xD44740", Offset = "0xD44740", VA = "0xD44740", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xD44744", Offset = "0xD44744", VA = "0xD44744", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xD447C8", Offset = "0xD447C8", VA = "0xD447C8", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xD448B4", Offset = "0xD448B4", VA = "0xD448B4", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xD448B8", Offset = "0xD448B8", VA = "0xD448B8", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xD448BC", Offset = "0xD448BC", VA = "0xD448BC", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xD44998", Offset = "0xD44998", VA = "0xD44998", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xD4499C", Offset = "0xD4499C", VA = "0xD4499C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xD449A0", Offset = "0xD449A0", VA = "0xD449A0", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xD449A4", Offset = "0xD449A4", VA = "0xD449A4", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xD449A8", Offset = "0xD449A8", VA = "0xD449A8", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xD449AC", Offset = "0xD449AC", VA = "0xD449AC", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xD449B0", Offset = "0xD449B0", VA = "0xD449B0", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xD449B4", Offset = "0xD449B4", VA = "0xD449B4", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xD44A1C", Offset = "0xD44A1C", VA = "0xD44A1C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xD44A20", Offset = "0xD44A20", VA = "0xD44A20", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xD44AD4", Offset = "0xD44AD4", VA = "0xD44AD4", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xD44AD8", Offset = "0xD44AD8", VA = "0xD44AD8")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD44BFC", Offset = "0xD44BFC", VA = "0xD44BFC")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.Demo
{
	[Token(Token = "0x2000384")]
	public static class AppSettingsExtensions
	{
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD44C70", Offset = "0xD44C70", VA = "0xD44C70")]
		public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x2000385")]
	public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Channel;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xD44D60", Offset = "0xD44D60", VA = "0xD44D60")]
		public void SetChannel(string channel)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xD44DE4", Offset = "0xD44DE4", VA = "0xD44DE4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xD45100", Offset = "0xD45100", VA = "0xD45100")]
		public ChannelSelector()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[ExecuteInEditMode]
	public class ChatAppIdCheckerUI : MonoBehaviour
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Description;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xD45108", Offset = "0xD45108", VA = "0xD45108")]
		public void Update()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xD45238", Offset = "0xD45238", VA = "0xD45238")]
		public ChatAppIdCheckerUI()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class ChatGui : MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string selectedChannelName;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChatClient chatClient;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal ChatAppSettings chatAppSettings;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform ChatPanel;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool ShowState;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Title;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text StateText;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text UserIdText;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HelpText;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TestLength;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private byte[] testBytes;

		[Token(Token = "0x170002A7")]
		public string UserName
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xD45240", Offset = "0xD45240", VA = "0xD45240")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xD45248", Offset = "0xD45248", VA = "0xD45248")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xD45250", Offset = "0xD45250", VA = "0xD45250")]
		public void Start()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xD45514", Offset = "0xD45514", VA = "0xD45514")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD456A8", Offset = "0xD456A8", VA = "0xD456A8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD456C0", Offset = "0xD456C0", VA = "0xD456C0")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD456D8", Offset = "0xD456D8", VA = "0xD456D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xD457A8", Offset = "0xD457A8", VA = "0xD457A8")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xD462A4", Offset = "0xD462A4", VA = "0xD462A4")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xD4583C", Offset = "0xD4583C", VA = "0xD4583C")]
		private void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xD46354", Offset = "0xD46354", VA = "0xD46354")]
		public void PostHelpToCurrentChannel()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xD463F8", Offset = "0xD463F8", VA = "0xD463F8", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xD464A0", Offset = "0xD464A0", VA = "0xD464A0", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xD467CC", Offset = "0xD467CC", VA = "0xD467CC", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xD467EC", Offset = "0xD467EC", VA = "0xD467EC", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xD46880", Offset = "0xD46880", VA = "0xD46880", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xD46BD0", Offset = "0xD46BD0", VA = "0xD46BD0")]
		public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD46A14", Offset = "0xD46A14", VA = "0xD46A14")]
		private void InstantiateChannelButton(string channelName)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD46684", Offset = "0xD46684", VA = "0xD46684")]
		private void InstantiateFriendButton(string friendId)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xD46D94", Offset = "0xD46D94", VA = "0xD46D94", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xD471D8", Offset = "0xD471D8", VA = "0xD471D8", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xD47218", Offset = "0xD47218", VA = "0xD47218", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xD4732C", Offset = "0xD4732C", VA = "0xD4732C", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xD474F0", Offset = "0xD474F0", VA = "0xD474F0", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xD4760C", Offset = "0xD4760C", VA = "0xD4760C", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xD47728", Offset = "0xD47728", VA = "0xD47728")]
		public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xD478B0", Offset = "0xD478B0", VA = "0xD478B0")]
		public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xD47A78", Offset = "0xD47A78", VA = "0xD47A78")]
		public void OnErrorInfo(string channel, string error, object data)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xD47BCC", Offset = "0xD47BCC", VA = "0xD47BCC")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xD44E5C", Offset = "0xD44E5C", VA = "0xD44E5C")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xD47CB8", Offset = "0xD47CB8", VA = "0xD47CB8")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xD47CFC", Offset = "0xD47CFC", VA = "0xD47CFC")]
		public ChatGui()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class FriendItem : MonoBehaviour
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text NameLabel;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text StatusLabel;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Health;

		[Token(Token = "0x170002A8")]
		[HideInInspector]
		public string FriendId
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xD48EA4", Offset = "0xD48EA4", VA = "0xD48EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xD48E80", Offset = "0xD48E80", VA = "0xD48E80")]
			set
			{
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD48EC8", Offset = "0xD48EC8", VA = "0xD48EC8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xD48F2C", Offset = "0xD48F2C", VA = "0xD48F2C")]
		public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xD490AC", Offset = "0xD490AC", VA = "0xD490AC")]
		public FriendItem()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6001426")]
		[Address(RVA = "0xD490B4", Offset = "0xD490B4", VA = "0xD490B4", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xD490D4", Offset = "0xD490D4", VA = "0xD490D4")]
		public IgnoreUiRaycastWhenInactive()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[RequireComponent(typeof(ChatGui))]
	public class NamePickGui : MonoBehaviour
	{
		[Token(Token = "0x40016D3")]
		private const string UserNamePlayerPref = "NamePickUserName";

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChatGui chatNewComponent;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField idInput;

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xD490DC", Offset = "0xD490DC", VA = "0xD490DC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xD491A8", Offset = "0xD491A8", VA = "0xD491A8")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xD491E4", Offset = "0xD491E4", VA = "0xD491E4")]
		public void StartChat()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xD492CC", Offset = "0xD492CC", VA = "0xD492CC")]
		public NamePickGui()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x200038B")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x600142C")]
		[Address(RVA = "0xD492D4", Offset = "0xD492D4", VA = "0xD492D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xD493DC", Offset = "0xD493DC", VA = "0xD493DC")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x600142E")]
		[Address(RVA = "0xD493E4", Offset = "0xD493E4", VA = "0xD493E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xD49450", Offset = "0xD49450", VA = "0xD49450")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xD49458", Offset = "0xD49458", VA = "0xD49458")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xD494B0", Offset = "0xD494B0", VA = "0xD494B0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xD494E0", Offset = "0xD494E0", VA = "0xD494E0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xD49510", Offset = "0xD49510", VA = "0xD49510", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xD495C0", Offset = "0xD495C0", VA = "0xD495C0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xD49670", Offset = "0xD49670", VA = "0xD49670")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xD4968C", Offset = "0xD4968C", VA = "0xD4968C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xD497E0", Offset = "0xD497E0", VA = "0xD497E0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xD4977C", Offset = "0xD4977C", VA = "0xD4977C")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xD49888", Offset = "0xD49888", VA = "0xD49888", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xD498FC", Offset = "0xD498FC", VA = "0xD498FC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xD4996C", Offset = "0xD4996C", VA = "0xD4996C")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace cakeslice
{
	[Token(Token = "0x200038F")]
	public class OutlineAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pingPong;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD49990", Offset = "0xD49990", VA = "0xD49990")]
		private void Start()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xD49994", Offset = "0xD49994", VA = "0xD49994")]
		private void Update()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xD49E50", Offset = "0xD49E50", VA = "0xD49E50")]
		public OutlineAnimation()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x40016E3")]
		private const float time = 1f;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xD49E58", Offset = "0xD49E58", VA = "0xD49E58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xD49E5C", Offset = "0xD49E5C", VA = "0xD49E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD49F18", Offset = "0xD49F18", VA = "0xD49F18")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class Toggle : MonoBehaviour
	{
		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD49F20", Offset = "0xD49F20", VA = "0xD49F20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xD49F24", Offset = "0xD49F24", VA = "0xD49F24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xD49FC0", Offset = "0xD49FC0", VA = "0xD49FC0")]
		public Toggle()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[RequireComponent(typeof(Renderer))]
	public class Outline : MonoBehaviour
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int color;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eraseRenderer;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int originalLayer;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Material[] originalMaterials;

		[Token(Token = "0x170002A9")]
		public Renderer Renderer
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xD49FC8", Offset = "0xD49FC8", VA = "0xD49FC8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xD49FD0", Offset = "0xD49FD0", VA = "0xD49FD0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xD49FD8", Offset = "0xD49FD8", VA = "0xD49FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xD4A030", Offset = "0xD4A030", VA = "0xD4A030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xD4A274", Offset = "0xD4A274", VA = "0xD4A274")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xD4A2EC", Offset = "0xD4A2EC", VA = "0xD4A2EC")]
		public Outline()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[RequireComponent(typeof(Camera))]
	[DisallowMultipleComponent]
	public class OutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OutlineEffect m_instance;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Outline> outlines;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 6f)]
		public float lineThickness;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 10f)]
		public float lineIntensity;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float fillAmount;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color lineColor0;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color lineColor1;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color lineColor2;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool additiveRendering;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[Header("These settings can affect performance!")]
		public bool cornerOutlines;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public bool addLinesBetweenColors;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[Header("Advanced settings")]
		public bool scaleWithScreenSize;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0.1f, 0.9f)]
		public float alphaCutoff;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool flipY;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Camera sourceCamera;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Camera outlineCamera;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material outline1Material;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material outline2Material;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material outline3Material;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material outlineEraseMaterial;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Shader outlineShader;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Shader outlineBufferShader;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material outlineShaderMaterial;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture renderTexture;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RenderTexture extraRenderTexture;

		[Token(Token = "0x170002AA")]
		public static OutlineEffect Instance
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xD4A050", Offset = "0xD4A050", VA = "0xD4A050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xD4A2F4", Offset = "0xD4A2F4", VA = "0xD4A2F4")]
		private OutlineEffect()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xD4A3BC", Offset = "0xD4A3BC", VA = "0xD4A3BC")]
		private Material GetMaterialFromID(int ID)
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xD4A3E4", Offset = "0xD4A3E4", VA = "0xD4A3E4")]
		private Material CreateMaterial(Color emissionColor)
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xD4A5AC", Offset = "0xD4A5AC", VA = "0xD4A5AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xD4A604", Offset = "0xD4A604", VA = "0xD4A604")]
		private void Start()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xD4ACCC", Offset = "0xD4ACCC", VA = "0xD4ACCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xD4AEA4", Offset = "0xD4AEA4", VA = "0xD4AEA4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xD4B76C", Offset = "0xD4B76C", VA = "0xD4B76C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xD4A8C8", Offset = "0xD4A8C8", VA = "0xD4A8C8")]
		private void CreateMaterialsIfNeeded()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xD4AD84", Offset = "0xD4AD84", VA = "0xD4AD84")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xD49AA4", Offset = "0xD49AA4", VA = "0xD49AA4")]
		public void UpdateMaterialsPublicProperties()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xD4ABD4", Offset = "0xD4ABD4", VA = "0xD4ABD4")]
		private void UpdateOutlineCameraFromSource()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xD4A18C", Offset = "0xD4A18C", VA = "0xD4A18C")]
		public void AddOutline(Outline outline)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xD4A294", Offset = "0xD4A294", VA = "0xD4A294")]
		public void RemoveOutline(Outline outline)
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x2000394")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossFade;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xD4B86C", Offset = "0xD4B86C", VA = "0xD4B86C")]
		private void Start()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xD4B964", Offset = "0xD4B964", VA = "0xD4B964")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xD4BAB0", Offset = "0xD4BAB0", VA = "0xD4BAB0")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool crossFade;

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xD4BAB8", Offset = "0xD4BAB8", VA = "0xD4BAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xD4BB10", Offset = "0xD4BB10", VA = "0xD4BB10")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xD4BB9C", Offset = "0xD4BB9C", VA = "0xD4BB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xD4BE80", Offset = "0xD4BE80", VA = "0xD4BE80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xD4C018", Offset = "0xD4C018", VA = "0xD4C018")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xD4CEF4", Offset = "0xD4CEF4", VA = "0xD4CEF4")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sizeOfCrowd;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxSize;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Stadium;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xD4CFD0", Offset = "0xD4CFD0", VA = "0xD4CFD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xD4D0D4", Offset = "0xD4D0D4", VA = "0xD4D0D4")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xD4D5CC", Offset = "0xD4D5CC", VA = "0xD4D5CC")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class SpectatorSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000398")]
		[CompilerGenerated]
		private sealed class <CheckSpectator>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectatorSpawner <>4__this;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146E")]
				[Address(RVA = "0xD4DF70", Offset = "0xD4DF70", VA = "0xD4DF70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001470")]
				[Address(RVA = "0xD4DFB8", Offset = "0xD4DFB8", VA = "0xD4DFB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0xD4DCE8", Offset = "0xD4DCE8", VA = "0xD4DCE8")]
			[DebuggerHidden]
			public <CheckSpectator>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0xD4DD98", Offset = "0xD4DD98", VA = "0xD4DD98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0xD4DD9C", Offset = "0xD4DD9C", VA = "0xD4DD9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xD4DF78", Offset = "0xD4DF78", VA = "0xD4DF78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int players;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] spectators;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int spectatorslenght;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Stadium;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xD4D660", Offset = "0xD4D660", VA = "0xD4D660")]
		private void Start()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xD4DBF8", Offset = "0xD4DBF8", VA = "0xD4DBF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xD4DC74", Offset = "0xD4DC74", VA = "0xD4DC74")]
		[IteratorStateMachine(typeof(<CheckSpectator>d__7))]
		private IEnumerator CheckSpectator()
		{
			return null;
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xD4D728", Offset = "0xD4D728", VA = "0xD4D728")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xD4DD10", Offset = "0xD4DD10", VA = "0xD4DD10")]
		public SpectatorSpawner()
		{
		}
	}
}
namespace MantisLOD
{
	[Token(Token = "0x2000399")]
	internal class Class0 : IComparable
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int int_0;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class1 class1_0;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int int_1;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Class2 class2_0;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Class0 class0_0;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float float_0;

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xD4DFC0", Offset = "0xD4DFC0", VA = "0xD4DFC0")]
		public Class0()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xD4DFE0", Offset = "0xD4DFE0", VA = "0xD4DFE0", Slot = "4")]
		public int CompareTo(object object_0)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200039A")]
	internal class Class1
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool bool_1;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool bool_2;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 vector3_0;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Class0> list_0;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xD4E064", Offset = "0xD4E064", VA = "0xD4E064")]
		public Class1()
		{
		}
	}
	[Token(Token = "0x200039B")]
	internal class Class2
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int int_0;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class0 class0_0;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 vector3_0;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xD4E0FC", Offset = "0xD4E0FC", VA = "0xD4E0FC")]
		public Class2()
		{
		}
	}
	[Token(Token = "0x200039C")]
	internal class Class3
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Class0 class0_0;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int int_0;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int int_1;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xD4E11C", Offset = "0xD4E11C", VA = "0xD4E11C")]
		public Class3()
		{
		}
	}
	[Token(Token = "0x200039D")]
	internal class Class4
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class1 class1_0;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Class1 class1_1;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Class2> list_0;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Class3> list_1;

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xD4E124", Offset = "0xD4E124", VA = "0xD4E124")]
		public Class4()
		{
		}
	}
	[Token(Token = "0x200039E")]
	internal abstract class Class5
	{
		[Token(Token = "0x4001732")]
		private const int int_0 = 1;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Class0> list_0;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xD4E208", Offset = "0xD4E208", VA = "0xD4E208")]
		public Class5()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xD4E344", Offset = "0xD4E344", VA = "0xD4E344")]
		public Class5(int int_1)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xD4E494", Offset = "0xD4E494", VA = "0xD4E494")]
		public void method_0(Class0 class0_0)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xD4E708", Offset = "0xD4E708", VA = "0xD4E708")]
		public Class0 method_1()
		{
			return null;
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xD4EA28", Offset = "0xD4EA28", VA = "0xD4EA28")]
		public bool method_2(int int_1)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xD4EB4C", Offset = "0xD4EB4C", VA = "0xD4EB4C")]
		public int method_3()
		{
			return default(int);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xD4EB98", Offset = "0xD4EB98", VA = "0xD4EB98")]
		public Class0 method_4()
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xD4E564", Offset = "0xD4E564", VA = "0xD4E564")]
		private int method_5()
		{
			return default(int);
		}

		[Token(Token = "0x600147F")]
		protected abstract bool vmethod_0(Class0 class0_0, Class0 class0_1);

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xD4E5B0", Offset = "0xD4E5B0", VA = "0xD4E5B0")]
		private void method_6(int int_1)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xD4E850", Offset = "0xD4E850", VA = "0xD4E850")]
		private void method_7(int int_1)
		{
		}
	}
	[Token(Token = "0x200039F")]
	internal class Class6 : Class5
	{
		[Token(Token = "0x6001482")]
		[Address(RVA = "0xD4EC08", Offset = "0xD4EC08", VA = "0xD4EC08")]
		public Class6()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xD4EC0C", Offset = "0xD4EC0C", VA = "0xD4EC0C")]
		public Class6(int int_1)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD4EC10", Offset = "0xD4EC10", VA = "0xD4EC10", Slot = "4")]
		protected override bool vmethod_0(Class0 class0_0, Class0 class0_1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A0")]
	internal class Class7 : IEqualityComparer<Vector3>
	{
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD4EC30", Offset = "0xD4EC30", VA = "0xD4EC30", Slot = "4")]
		public bool Equals(Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xD4EC88", Offset = "0xD4EC88", VA = "0xD4EC88", Slot = "5")]
		public int GetHashCode(Vector3 vector3_0)
		{
			return default(int);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD4ECEC", Offset = "0xD4ECEC", VA = "0xD4ECEC")]
		public Class7()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	internal class Class8
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Class1> list_0;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Class2> list_1;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Class0> list_2;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Class4> list_3;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Vector3> list_4;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector4> list_5;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector2> list_6;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int int_0;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Class6 class6_0;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 vector3_0;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 vector3_1;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float float_0;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int int_1;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int int_2;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool bool_0;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool bool_1;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool bool_2;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool bool_3;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool bool_4;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD4ECF4", Offset = "0xD4ECF4", VA = "0xD4ECF4")]
		public Class8()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD4EFA8", Offset = "0xD4EFA8", VA = "0xD4EFA8")]
		public int method_0()
		{
			return default(int);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD4EFF0", Offset = "0xD4EFF0", VA = "0xD4EFF0")]
		public void method_1(Vector3[] vector3_2, int int_3, int[] int_4, int int_5, Vector3[] vector3_3, int int_6, Color[] color_0, int int_7, Vector2[] vector2_0, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xD50324", Offset = "0xD50324", VA = "0xD50324")]
		public void method_2(int int_3, int[] int_4, ref int int_5)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xD4F160", Offset = "0xD4F160", VA = "0xD4F160")]
		private void method_3(Vector3[] vector3_2, int int_3, int[] int_4, int int_5, Vector3[] vector3_3, int int_6, Color[] color_0, int int_7, Vector2[] vector2_0, int int_8)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xD50A38", Offset = "0xD50A38", VA = "0xD50A38")]
		private void method_4(Class2 class2_0)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xD50BAC", Offset = "0xD50BAC", VA = "0xD50BAC")]
		private void method_5()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xD50CE8", Offset = "0xD50CE8", VA = "0xD50CE8")]
		private bool method_6(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xD50F5C", Offset = "0xD50F5C", VA = "0xD50F5C")]
		private void method_7()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD51100", Offset = "0xD51100", VA = "0xD51100")]
		private bool method_8(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD517E4", Offset = "0xD517E4", VA = "0xD517E4")]
		private void method_9()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD5197C", Offset = "0xD5197C", VA = "0xD5197C")]
		private float method_10(Class0 class0_0)
		{
			return default(float);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xD4FD8C", Offset = "0xD4FD8C", VA = "0xD4FD8C")]
		private void method_11()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xD53088", Offset = "0xD53088", VA = "0xD53088")]
		private bool method_12(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xD4FF0C", Offset = "0xD4FF0C", VA = "0xD4FF0C")]
		private void method_13()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xD4FF90", Offset = "0xD4FF90", VA = "0xD4FF90")]
		private int method_14(int int_3)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003A2")]
	public static class MantisLODSimpler
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Class8> list_0;

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xD54400", Offset = "0xD54400", VA = "0xD54400")]
		public static int get_triangle_list(int index, float goal, int[] triangle_array, ref int triangle_count)
		{
			return default(int);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD54570", Offset = "0xD54570", VA = "0xD54570")]
		public static int create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape)
		{
			return default(int);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD54840", Offset = "0xD54840", VA = "0xD54840")]
		public static int delete_progressive_mesh(int index)
		{
			return default(int);
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x20003A3")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD549EC", Offset = "0xD549EC", VA = "0xD549EC")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] uuids;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Lod_Mesh[]> lod_meshes;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD54A20", Offset = "0xD54A20", VA = "0xD54A20")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class Lod_Mesh
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle_count;

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD54A28", Offset = "0xD54A28", VA = "0xD54A28")]
		public Lod_Mesh()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int[] mesh_lod_range;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool never_cull;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int lod_strategy;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float cull_ratio;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float disappear_distance;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float updateInterval;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Component[] allFilters;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Component[] allRenderers;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] shared_meshes;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string[] mesh_uuids;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int current_lod;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float currentTimeToInterval;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool culled;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool working;

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD54A30", Offset = "0xD54A30", VA = "0xD54A30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD55560", Offset = "0xD55560", VA = "0xD55560")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD55564", Offset = "0xD55564", VA = "0xD55564")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD55958", Offset = "0xD55958", VA = "0xD55958")]
		private float ratio_of_distance(float distance0)
		{
			return default(float);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD55D1C", Offset = "0xD55D1C", VA = "0xD55D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD56830", Offset = "0xD56830", VA = "0xD56830")]
		public int get_triangles_count_from_progressive_mesh(int lod0, int mesh_count0)
		{
			return default(int);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD56928", Offset = "0xD56928", VA = "0xD56928")]
		private int[] get_triangles_from_progressive_mesh(int lod0, int mesh_count0, int mat0)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD56A9C", Offset = "0xD56A9C", VA = "0xD56A9C")]
		private void set_triangles(Mesh mesh, string uuid, int lod)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD56B74", Offset = "0xD56B74", VA = "0xD56B74")]
		private void shrink_mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD57B68", Offset = "0xD57B68", VA = "0xD57B68")]
		private string get_uuid_from_mesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD57DE8", Offset = "0xD57DE8", VA = "0xD57DE8")]
		private void create_default_mesh_lod_range()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD54A34", Offset = "0xD54A34", VA = "0xD54A34")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD57ED4", Offset = "0xD57ED4", VA = "0xD57ED4")]
		public void reset_all_parameters()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xD57F14", Offset = "0xD57F14", VA = "0xD57F14")]
		private void clean_all()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD58114", Offset = "0xD58114", VA = "0xD58114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD58118", Offset = "0xD58118", VA = "0xD58118")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD5811C", Offset = "0xD5811C", VA = "0xD5811C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD58120", Offset = "0xD58120", VA = "0xD58120")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003A7")]
	public static class Calibration
	{
		[Token(Token = "0x4001766")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170002AD")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xD58300", Offset = "0xD58300", VA = "0xD58300")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AE")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xD5835C", Offset = "0xD5835C", VA = "0xD5835C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000018")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xD58150", Offset = "0xD58150", VA = "0xD58150")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xD58228", Offset = "0xD58228", VA = "0xD58228")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD583D0", Offset = "0xD583D0", VA = "0xD583D0")]
		static Calibration()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD58DEC", Offset = "0xD58DEC", VA = "0xD58DEC")]
		private static void Reset()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xD58650", Offset = "0xD58650", VA = "0xD58650")]
		public static void Read()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD58E58", Offset = "0xD58E58", VA = "0xD58E58")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A9")]
	public static class Extensions
	{
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD58F94", Offset = "0xD58F94", VA = "0xD58F94")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xD58FBC", Offset = "0xD58FBC", VA = "0xD58FBC")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD590A0", Offset = "0xD590A0", VA = "0xD590A0")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003AA")]
	[AddComponentMenu("LIV/ExternalCamera")]
	public class ExternalCamera : MonoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170002AF")]
		public bool IsValid
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xD590AC", Offset = "0xD590AC", VA = "0xD590AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xD590BC", Offset = "0xD590BC", VA = "0xD590BC")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xD590C4", Offset = "0xD590C4", VA = "0xD590C4")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xD590CC", Offset = "0xD590CC", VA = "0xD590CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xD59148", Offset = "0xD59148", VA = "0xD59148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xD59194", Offset = "0xD59194", VA = "0xD59194")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD59204", Offset = "0xD59204", VA = "0xD59204")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD59198", Offset = "0xD59198", VA = "0xD59198")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD59208", Offset = "0xD59208", VA = "0xD59208")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD5926C", Offset = "0xD5926C", VA = "0xD5926C")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD59130", Offset = "0xD59130", VA = "0xD59130")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD59450", Offset = "0xD59450", VA = "0xD59450")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xD59A18", Offset = "0xD59A18", VA = "0xD59A18")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xD59B90", Offset = "0xD59B90", VA = "0xD59B90")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	[AttributeUsage(AttributeTargets.Field, Inherited = true)]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xD5A148", Offset = "0xD5A148", VA = "0xD5A148")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AddComponentMenu("LIV/LIV")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If unpopulated, we'll use the parent transform.")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		public Camera HMDCamera;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public bool DisableStandardAssets;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170002B1")]
		public Transform Origin
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xD5A178", Offset = "0xD5A178", VA = "0xD5A178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xD5A208", Offset = "0xD5A208", VA = "0xD5A208")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xD5A4F4", Offset = "0xD5A4F4", VA = "0xD5A4F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xD5A6CC", Offset = "0xD5A6CC", VA = "0xD5A6CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD5A714", Offset = "0xD5A714", VA = "0xD5A714")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD5A57C", Offset = "0xD5A57C", VA = "0xD5A57C")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD5A888", Offset = "0xD5A888", VA = "0xD5A888")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD5AD18", Offset = "0xD5AD18", VA = "0xD5AD18")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD5A8F0", Offset = "0xD5A8F0", VA = "0xD5A8F0")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xD5AE70", Offset = "0xD5AE70", VA = "0xD5AE70")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD5A9C4", Offset = "0xD5A9C4", VA = "0xD5A9C4")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD5ADB8", Offset = "0xD5ADB8", VA = "0xD5ADB8")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD5B10C", Offset = "0xD5B10C", VA = "0xD5B10C")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AddComponentMenu("LIV/MixedRealityRender")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x20003AF")]
		[CompilerGenerated]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F2")]
				[Address(RVA = "0xD5C2C4", Offset = "0xD5C2C4", VA = "0xD5C2C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F4")]
				[Address(RVA = "0xD5C30C", Offset = "0xD5C30C", VA = "0xD5C30C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xD5C188", Offset = "0xD5C188", VA = "0xD5C188")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xD5C1B8", Offset = "0xD5C1B8", VA = "0xD5C1B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xD5C1BC", Offset = "0xD5C1BC", VA = "0xD5C1BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xD5C2CC", Offset = "0xD5C2CC", VA = "0xD5C2CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD5AF28", Offset = "0xD5AF28", VA = "0xD5AF28")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD5B134", Offset = "0xD5B134", VA = "0xD5B134")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD5B338", Offset = "0xD5B338", VA = "0xD5B338")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD5B4D4", Offset = "0xD5B4D4", VA = "0xD5B4D4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD5B7E8", Offset = "0xD5B7E8", VA = "0xD5B7E8")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD5BAE8", Offset = "0xD5BAE8", VA = "0xD5BAE8")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD5BCA4", Offset = "0xD5BCA4", VA = "0xD5BCA4")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD5BF94", Offset = "0xD5BF94", VA = "0xD5BF94")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD5BFE0", Offset = "0xD5BFE0", VA = "0xD5BFE0")]
		private void Composite()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD5C0F4", Offset = "0xD5C0F4", VA = "0xD5C0F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD5C114", Offset = "0xD5C114", VA = "0xD5C114")]
		[IteratorStateMachine(typeof(<RenderLoop>d__20))]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD5C1B0", Offset = "0xD5C1B0", VA = "0xD5C1B0")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[AddComponentMenu("LIV/SharedTextureProtocol")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x20003B1")]
		[CompilerGenerated]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001505")]
				[Address(RVA = "0xD5C714", Offset = "0xD5C714", VA = "0xD5C714", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001507")]
				[Address(RVA = "0xD5C75C", Offset = "0xD5C75C", VA = "0xD5C75C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001502")]
			[Address(RVA = "0xD5C5CC", Offset = "0xD5C5CC", VA = "0xD5C5CC")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001503")]
			[Address(RVA = "0xD5C644", Offset = "0xD5C644", VA = "0xD5C644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001504")]
			[Address(RVA = "0xD5C648", Offset = "0xD5C648", VA = "0xD5C648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001506")]
			[Address(RVA = "0xD5C71C", Offset = "0xD5C71C", VA = "0xD5C71C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public static bool IsActive
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xD5A710", Offset = "0xD5A710", VA = "0xD5A710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B5")]
		public static int TextureWidth
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xD5B7E0", Offset = "0xD5B7E0", VA = "0xD5B7E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B6")]
		public static int TextureHeight
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xD5B7E4", Offset = "0xD5B7E4", VA = "0xD5B7E4")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD5C314", Offset = "0xD5C314", VA = "0xD5C314")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xD5C37C", Offset = "0xD5C37C", VA = "0xD5C37C")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xD5C3EC", Offset = "0xD5C3EC", VA = "0xD5C3EC")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xD5C454", Offset = "0xD5C454", VA = "0xD5C454")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xD5C4BC", Offset = "0xD5C4BC", VA = "0xD5C4BC")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xD5C0C0", Offset = "0xD5C0C0", VA = "0xD5C0C0")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xD5C538", Offset = "0xD5C538", VA = "0xD5C538")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD5C558", Offset = "0xD5C558", VA = "0xD5C558")]
		[IteratorStateMachine(typeof(<CallPluginAtEndOfFrames>d__13))]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD5C5F4", Offset = "0xD5C5F4", VA = "0xD5C5F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD5C63C", Offset = "0xD5C63C", VA = "0xD5C63C")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD5C764", Offset = "0xD5C764", VA = "0xD5C764")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD5C7B4", Offset = "0xD5C7B4", VA = "0xD5C7B4")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20003B3")]
	public struct IVRSystem
	{
		[Token(Token = "0x20003B4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20003B5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20003B6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20003B7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20003B8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20003B9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20003BA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20003BB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20003BC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20003BD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20003BE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20003BF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20003C0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20003C1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20003C2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20003C3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20003C4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20003C5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20003C6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20003C7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20003C8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20003C9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20003CA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003CB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003CC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003CD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003CE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003CF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003D0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20003D1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20003D2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20003D3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20003D4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20003D5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20003D6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20003D7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20003D8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20003D9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20003DA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20003DB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20003DC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20003DD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20003DE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20003DF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20003E0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20003E1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20003E2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20003E3")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20003E4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20003E5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20003E6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20003E7")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20003E8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20003E9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20003EA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20003EB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20003EC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20003ED")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20003EE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20003EF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20003F0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20003F1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20003F2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20003F3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20003F4")]
	public struct IVRApplications
	{
		[Token(Token = "0x20003F5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x20003F6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x20003F7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x20003F8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x20003F9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20003FA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20003FB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x20003FC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x20003FD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x20003FE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x20003FF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000400")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000401")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000402")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000403")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000404")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000405")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000406")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000407")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000408")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000409")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200040A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x200040B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x200040C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x200040D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200040E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200040F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000410")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000411")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000412")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000413")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000414")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000415")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000416")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000417")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000418")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000419")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x200041A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x200041B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x200041C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x200041D")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x200041E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200041F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000420")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000421")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000422")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000423")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000424")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000425")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000426")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000427")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000428")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000429")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200042A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x200042B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200042C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x200042D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200042E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200042F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000430")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000431")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000432")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000433")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000434")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000435")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000436")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000437")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000438")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000439")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x200043A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200043B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200043C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200043D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200043E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200043F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000440")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000441")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000442")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000443")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000444")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000445")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000446")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000447")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000448")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000449")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x200044A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200044B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200044C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200044D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x200044E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200044F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000450")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000451")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000452")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000453")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000454")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000455")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000456")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000457")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000458")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000459")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200045A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200045B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200045C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200045D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200045E")]
	public struct IVROverlay
	{
		[Token(Token = "0x200045F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000460")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000461")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000462")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000463")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000464")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000465")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000466")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000467")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000468")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000469")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x200046A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x200046B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x200046C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x200046D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x200046E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x200046F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000470")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000471")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000472")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000473")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000474")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000475")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000476")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000477")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000478")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000479")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x200047A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x200047B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200047C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200047D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x200047E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x200047F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000480")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000481")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000482")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000483")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000484")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000485")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000486")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000487")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000488")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000489")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200048A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x200048B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x200048C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200048D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x200048E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x200048F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000490")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000491")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x2000492")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000493")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x2000494")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x2000495")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000496")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x2000497")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000498")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000499")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x200049A")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x200049B")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x200049C")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x200049D")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x200049E")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x200049F")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20004A0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20004A1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20004A2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004A3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20004A4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20004A5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20004A6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20004A7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004A8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20004A9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20004AA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20004AB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20004AC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20004AD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20004AE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20004AF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20004B0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20004B1")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20004B2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20004B3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20004B4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20004B5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20004B6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20004B7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20004B8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20004B9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20004BA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20004BB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20004BC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20004BD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20004BE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20004BF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20004C0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20004C1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20004C2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20004C3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20004C4")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20004C5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20004C6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20004C7")]
	public struct IVRSettings
	{
		[Token(Token = "0x20004C8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20004C9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20004CA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20004CB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20004CC")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20004CD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20004CE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20004CF")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20004D0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20004D1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20004D2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20004D3")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20004D4")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20004D5")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20004D6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20004D7")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20004D8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20004D9")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20004DA")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20004DB")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20004DC")]
	public struct IVRResources
	{
		[Token(Token = "0x20004DD")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20004DE")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20004DF")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20004E0")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20004E1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004E2")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20004E3")]
	public class CVRSystem
	{
		[Token(Token = "0x20004E4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20004E5")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20004E6")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20004E7")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20004E8")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20004E9")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD7C250", Offset = "0xD7C250", VA = "0xD7C250")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD7C370", Offset = "0xD7C370", VA = "0xD7C370")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD7C39C", Offset = "0xD7C39C", VA = "0xD7C39C")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD7C3E4", Offset = "0xD7C3E4", VA = "0xD7C3E4")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD7C418", Offset = "0xD7C418", VA = "0xD7C418")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD7C43C", Offset = "0xD7C43C", VA = "0xD7C43C")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD7C484", Offset = "0xD7C484", VA = "0xD7C484")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD7C4B0", Offset = "0xD7C4B0", VA = "0xD7C4B0")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD7C4D4", Offset = "0xD7C4D4", VA = "0xD7C4D4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD7C4FC", Offset = "0xD7C4FC", VA = "0xD7C4FC")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD7C524", Offset = "0xD7C524", VA = "0xD7C524")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD7C548", Offset = "0xD7C548", VA = "0xD7C548")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD7C570", Offset = "0xD7C570", VA = "0xD7C570")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD7C59C", Offset = "0xD7C59C", VA = "0xD7C59C")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD7C5C0", Offset = "0xD7C5C0", VA = "0xD7C5C0")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD7C608", Offset = "0xD7C608", VA = "0xD7C608")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD7C650", Offset = "0xD7C650", VA = "0xD7C650")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD7C680", Offset = "0xD7C680", VA = "0xD7C680")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD7C6A4", Offset = "0xD7C6A4", VA = "0xD7C6A4")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD7C6C8", Offset = "0xD7C6C8", VA = "0xD7C6C8")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD7C6EC", Offset = "0xD7C6EC", VA = "0xD7C6EC")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD7C710", Offset = "0xD7C710", VA = "0xD7C710")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD7C734", Offset = "0xD7C734", VA = "0xD7C734")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD7C758", Offset = "0xD7C758", VA = "0xD7C758")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD7C77C", Offset = "0xD7C77C", VA = "0xD7C77C")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD7C7A0", Offset = "0xD7C7A0", VA = "0xD7C7A0")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD7C7C4", Offset = "0xD7C7C4", VA = "0xD7C7C4")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD7C7E8", Offset = "0xD7C7E8", VA = "0xD7C7E8")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD7C830", Offset = "0xD7C830", VA = "0xD7C830")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD7C854", Offset = "0xD7C854", VA = "0xD7C854")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD7C878", Offset = "0xD7C878", VA = "0xD7C878")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD7C8FC", Offset = "0xD7C8FC", VA = "0xD7C8FC")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD7CAB4", Offset = "0xD7CAB4", VA = "0xD7CAB4")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD7CAD8", Offset = "0xD7CAD8", VA = "0xD7CAD8")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD7CB5C", Offset = "0xD7CB5C", VA = "0xD7CB5C")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD7CB80", Offset = "0xD7CB80", VA = "0xD7CB80")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD7CDD8", Offset = "0xD7CDD8", VA = "0xD7CDD8")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD7CFD0", Offset = "0xD7CFD0", VA = "0xD7CFD0")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD7CFF4", Offset = "0xD7CFF4", VA = "0xD7CFF4")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD7D078", Offset = "0xD7D078", VA = "0xD7D078")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD7D0FC", Offset = "0xD7D0FC", VA = "0xD7D0FC")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD7D120", Offset = "0xD7D120", VA = "0xD7D120")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD7D144", Offset = "0xD7D144", VA = "0xD7D144")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD7D168", Offset = "0xD7D168", VA = "0xD7D168")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD7D18C", Offset = "0xD7D18C", VA = "0xD7D18C")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD7D1B0", Offset = "0xD7D1B0", VA = "0xD7D1B0")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD7D1D4", Offset = "0xD7D1D4", VA = "0xD7D1D4")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD7D1F8", Offset = "0xD7D1F8", VA = "0xD7D1F8")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD7D82C", Offset = "0xD7D82C", VA = "0xD7D82C")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD7D948", Offset = "0xD7D948", VA = "0xD7D948")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD7D97C", Offset = "0xD7D97C", VA = "0xD7D97C")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD7D9B0", Offset = "0xD7D9B0", VA = "0xD7D9B0")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD7D9DC", Offset = "0xD7D9DC", VA = "0xD7D9DC")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD7DAFC", Offset = "0xD7DAFC", VA = "0xD7DAFC")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD7DB80", Offset = "0xD7DB80", VA = "0xD7DB80")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD7DBA8", Offset = "0xD7DBA8", VA = "0xD7DBA8")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD7DBD8", Offset = "0xD7DBD8", VA = "0xD7DBD8")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD7DBFC", Offset = "0xD7DBFC", VA = "0xD7DBFC")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD7DC20", Offset = "0xD7DC20", VA = "0xD7DC20")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD7DC48", Offset = "0xD7DC48", VA = "0xD7DC48")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD7DC6C", Offset = "0xD7DC6C", VA = "0xD7DC6C")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD7DC90", Offset = "0xD7DC90", VA = "0xD7DC90")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD7DCBC", Offset = "0xD7DCBC", VA = "0xD7DCBC")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD7DCE0", Offset = "0xD7DCE0", VA = "0xD7DCE0")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD7DD08", Offset = "0xD7DD08", VA = "0xD7DD08")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20004EC")]
	public class CVRApplications
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD7DD2C", Offset = "0xD7DD2C", VA = "0xD7DD2C")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD7DE4C", Offset = "0xD7DE4C", VA = "0xD7DE4C")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD7DE74", Offset = "0xD7DE74", VA = "0xD7DE74")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD7DE98", Offset = "0xD7DE98", VA = "0xD7DE98")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD7DEBC", Offset = "0xD7DEBC", VA = "0xD7DEBC")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD7DEE0", Offset = "0xD7DEE0", VA = "0xD7DEE0")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD7DF04", Offset = "0xD7DF04", VA = "0xD7DF04")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD7DF28", Offset = "0xD7DF28", VA = "0xD7DF28")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD7DF4C", Offset = "0xD7DF4C", VA = "0xD7DF4C")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD7DF78", Offset = "0xD7DF78", VA = "0xD7DF78")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD7DF9C", Offset = "0xD7DF9C", VA = "0xD7DF9C")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD7DFC0", Offset = "0xD7DFC0", VA = "0xD7DFC0")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD7DFE4", Offset = "0xD7DFE4", VA = "0xD7DFE4")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xD7E008", Offset = "0xD7E008", VA = "0xD7E008")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD7E02C", Offset = "0xD7E02C", VA = "0xD7E02C")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD7E0B0", Offset = "0xD7E0B0", VA = "0xD7E0B0")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xD7E0D4", Offset = "0xD7E0D4", VA = "0xD7E0D4")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xD7E0F8", Offset = "0xD7E0F8", VA = "0xD7E0F8")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xD7E11C", Offset = "0xD7E11C", VA = "0xD7E11C")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xD7E144", Offset = "0xD7E144", VA = "0xD7E144")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD7E168", Offset = "0xD7E168", VA = "0xD7E168")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD7E18C", Offset = "0xD7E18C", VA = "0xD7E18C")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD7E1B0", Offset = "0xD7E1B0", VA = "0xD7E1B0")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD7E1D4", Offset = "0xD7E1D4", VA = "0xD7E1D4")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD7E1F8", Offset = "0xD7E1F8", VA = "0xD7E1F8")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD7E21C", Offset = "0xD7E21C", VA = "0xD7E21C")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD7E240", Offset = "0xD7E240", VA = "0xD7E240")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD7E264", Offset = "0xD7E264", VA = "0xD7E264")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD7E288", Offset = "0xD7E288", VA = "0xD7E288")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD7E30C", Offset = "0xD7E30C", VA = "0xD7E30C")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xD7E330", Offset = "0xD7E330", VA = "0xD7E330")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xD7E354", Offset = "0xD7E354", VA = "0xD7E354")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20004ED")]
	public class CVRChaperone
	{
		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xD7E378", Offset = "0xD7E378", VA = "0xD7E378")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xD7E498", Offset = "0xD7E498", VA = "0xD7E498")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xD7E4BC", Offset = "0xD7E4BC", VA = "0xD7E4BC")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xD7E4E8", Offset = "0xD7E4E8", VA = "0xD7E4E8")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xD7E50C", Offset = "0xD7E50C", VA = "0xD7E50C")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xD7E530", Offset = "0xD7E530", VA = "0xD7E530")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xD7E554", Offset = "0xD7E554", VA = "0xD7E554")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xD7E578", Offset = "0xD7E578", VA = "0xD7E578")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xD7E59C", Offset = "0xD7E59C", VA = "0xD7E59C")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xD7E5C4", Offset = "0xD7E5C4", VA = "0xD7E5C4")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xD7E6E4", Offset = "0xD7E6E4", VA = "0xD7E6E4")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xD7E708", Offset = "0xD7E708", VA = "0xD7E708")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD7E72C", Offset = "0xD7E72C", VA = "0xD7E72C")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD7E758", Offset = "0xD7E758", VA = "0xD7E758")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD7E77C", Offset = "0xD7E77C", VA = "0xD7E77C")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD7E830", Offset = "0xD7E830", VA = "0xD7E830")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD7E8E4", Offset = "0xD7E8E4", VA = "0xD7E8E4")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD7E908", Offset = "0xD7E908", VA = "0xD7E908")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD7E92C", Offset = "0xD7E92C", VA = "0xD7E92C")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD7E950", Offset = "0xD7E950", VA = "0xD7E950")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD7E97C", Offset = "0xD7E97C", VA = "0xD7E97C")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD7E9A0", Offset = "0xD7E9A0", VA = "0xD7E9A0")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xD7E9C4", Offset = "0xD7E9C4", VA = "0xD7E9C4")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xD7E9E8", Offset = "0xD7E9E8", VA = "0xD7E9E8")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD7EA0C", Offset = "0xD7EA0C", VA = "0xD7EA0C")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD7EA38", Offset = "0xD7EA38", VA = "0xD7EA38")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xD7EAEC", Offset = "0xD7EAEC", VA = "0xD7EAEC")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xD7EB18", Offset = "0xD7EB18", VA = "0xD7EB18")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD7EBCC", Offset = "0xD7EBCC", VA = "0xD7EBCC")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD7EBF4", Offset = "0xD7EBF4", VA = "0xD7EBF4")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004EF")]
	public class CVRCompositor
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD7EC18", Offset = "0xD7EC18", VA = "0xD7EC18")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD7ED38", Offset = "0xD7ED38", VA = "0xD7ED38")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD7ED5C", Offset = "0xD7ED5C", VA = "0xD7ED5C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD7ED80", Offset = "0xD7ED80", VA = "0xD7ED80")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD7EDB8", Offset = "0xD7EDB8", VA = "0xD7EDB8")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD7EDF0", Offset = "0xD7EDF0", VA = "0xD7EDF0")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD7EE14", Offset = "0xD7EE14", VA = "0xD7EE14")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xD7EE38", Offset = "0xD7EE38", VA = "0xD7EE38")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD7EE5C", Offset = "0xD7EE5C", VA = "0xD7EE5C")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD7EE80", Offset = "0xD7EE80", VA = "0xD7EE80")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD7EEA4", Offset = "0xD7EEA4", VA = "0xD7EEA4")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD7EEC8", Offset = "0xD7EEC8", VA = "0xD7EEC8")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD7EEEC", Offset = "0xD7EEEC", VA = "0xD7EEEC")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD7EF10", Offset = "0xD7EF10", VA = "0xD7EF10")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD7EF38", Offset = "0xD7EF38", VA = "0xD7EF38")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD7EF60", Offset = "0xD7EF60", VA = "0xD7EF60")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD7EF88", Offset = "0xD7EF88", VA = "0xD7EF88")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD7EFAC", Offset = "0xD7EFAC", VA = "0xD7EFAC")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD7EFD8", Offset = "0xD7EFD8", VA = "0xD7EFD8")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD7EFFC", Offset = "0xD7EFFC", VA = "0xD7EFFC")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD7F020", Offset = "0xD7F020", VA = "0xD7F020")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD7F044", Offset = "0xD7F044", VA = "0xD7F044")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD7F068", Offset = "0xD7F068", VA = "0xD7F068")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD7F08C", Offset = "0xD7F08C", VA = "0xD7F08C")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD7F0B0", Offset = "0xD7F0B0", VA = "0xD7F0B0")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD7F0D4", Offset = "0xD7F0D4", VA = "0xD7F0D4")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD7F0F8", Offset = "0xD7F0F8", VA = "0xD7F0F8")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD7F11C", Offset = "0xD7F11C", VA = "0xD7F11C")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD7F140", Offset = "0xD7F140", VA = "0xD7F140")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD7F164", Offset = "0xD7F164", VA = "0xD7F164")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD7F188", Offset = "0xD7F188", VA = "0xD7F188")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD7F1AC", Offset = "0xD7F1AC", VA = "0xD7F1AC")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD7F1D4", Offset = "0xD7F1D4", VA = "0xD7F1D4")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD7F1F8", Offset = "0xD7F1F8", VA = "0xD7F1F8")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD7F220", Offset = "0xD7F220", VA = "0xD7F220")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD7F244", Offset = "0xD7F244", VA = "0xD7F244")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD7F268", Offset = "0xD7F268", VA = "0xD7F268")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD7F290", Offset = "0xD7F290", VA = "0xD7F290")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD7F2B4", Offset = "0xD7F2B4", VA = "0xD7F2B4")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD7F2D8", Offset = "0xD7F2D8", VA = "0xD7F2D8")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD7F2FC", Offset = "0xD7F2FC", VA = "0xD7F2FC")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD7F320", Offset = "0xD7F320", VA = "0xD7F320")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD7F344", Offset = "0xD7F344", VA = "0xD7F344")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD7F368", Offset = "0xD7F368", VA = "0xD7F368")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20004F0")]
	public class CVROverlay
	{
		[Token(Token = "0x20004F1")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20004F2")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD7F38C", Offset = "0xD7F38C", VA = "0xD7F38C")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD7F4AC", Offset = "0xD7F4AC", VA = "0xD7F4AC")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD7F4D4", Offset = "0xD7F4D4", VA = "0xD7F4D4")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD7F4FC", Offset = "0xD7F4FC", VA = "0xD7F4FC")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD7F520", Offset = "0xD7F520", VA = "0xD7F520")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD7F544", Offset = "0xD7F544", VA = "0xD7F544")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD7F568", Offset = "0xD7F568", VA = "0xD7F568")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD7F58C", Offset = "0xD7F58C", VA = "0xD7F58C")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD7F5B0", Offset = "0xD7F5B0", VA = "0xD7F5B0")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD7F5D4", Offset = "0xD7F5D4", VA = "0xD7F5D4")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD7F600", Offset = "0xD7F600", VA = "0xD7F600")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD7F684", Offset = "0xD7F684", VA = "0xD7F684")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD7F6A8", Offset = "0xD7F6A8", VA = "0xD7F6A8")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xD7F6CC", Offset = "0xD7F6CC", VA = "0xD7F6CC")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD7F6F4", Offset = "0xD7F6F4", VA = "0xD7F6F4")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD7F71C", Offset = "0xD7F71C", VA = "0xD7F71C")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD7F740", Offset = "0xD7F740", VA = "0xD7F740")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD7F770", Offset = "0xD7F770", VA = "0xD7F770")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD7F794", Offset = "0xD7F794", VA = "0xD7F794")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD7F7BC", Offset = "0xD7F7BC", VA = "0xD7F7BC")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD7F7E0", Offset = "0xD7F7E0", VA = "0xD7F7E0")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD7F808", Offset = "0xD7F808", VA = "0xD7F808")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD7F82C", Offset = "0xD7F82C", VA = "0xD7F82C")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD7F854", Offset = "0xD7F854", VA = "0xD7F854")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD7F878", Offset = "0xD7F878", VA = "0xD7F878")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD7F8A0", Offset = "0xD7F8A0", VA = "0xD7F8A0")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD7F8C4", Offset = "0xD7F8C4", VA = "0xD7F8C4")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD7F8F0", Offset = "0xD7F8F0", VA = "0xD7F8F0")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD7F914", Offset = "0xD7F914", VA = "0xD7F914")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD7F938", Offset = "0xD7F938", VA = "0xD7F938")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD7F95C", Offset = "0xD7F95C", VA = "0xD7F95C")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xD7F980", Offset = "0xD7F980", VA = "0xD7F980")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xD7F9A4", Offset = "0xD7F9A4", VA = "0xD7F9A4")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD7F9C8", Offset = "0xD7F9C8", VA = "0xD7F9C8")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD7F9EC", Offset = "0xD7F9EC", VA = "0xD7F9EC")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xD7FA10", Offset = "0xD7FA10", VA = "0xD7FA10")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD7FA34", Offset = "0xD7FA34", VA = "0xD7FA34")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD7FA58", Offset = "0xD7FA58", VA = "0xD7FA58")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD7FA80", Offset = "0xD7FA80", VA = "0xD7FA80")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD7FAA4", Offset = "0xD7FAA4", VA = "0xD7FAA4")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xD7FACC", Offset = "0xD7FACC", VA = "0xD7FACC")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD7FAF4", Offset = "0xD7FAF4", VA = "0xD7FAF4")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xD7FB18", Offset = "0xD7FB18", VA = "0xD7FB18")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD7FB3C", Offset = "0xD7FB3C", VA = "0xD7FB3C")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD7FB60", Offset = "0xD7FB60", VA = "0xD7FB60")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD7FB84", Offset = "0xD7FB84", VA = "0xD7FB84")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD7FBA8", Offset = "0xD7FBA8", VA = "0xD7FBA8")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD7FD54", Offset = "0xD7FD54", VA = "0xD7FD54")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD7FD78", Offset = "0xD7FD78", VA = "0xD7FD78")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD7FD9C", Offset = "0xD7FD9C", VA = "0xD7FD9C")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD7FDC0", Offset = "0xD7FDC0", VA = "0xD7FDC0")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD7FDE4", Offset = "0xD7FDE4", VA = "0xD7FDE4")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD7FE08", Offset = "0xD7FE08", VA = "0xD7FE08")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xD7FE2C", Offset = "0xD7FE2C", VA = "0xD7FE2C")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xD7FE50", Offset = "0xD7FE50", VA = "0xD7FE50")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xD7FE74", Offset = "0xD7FE74", VA = "0xD7FE74")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD7FE98", Offset = "0xD7FE98", VA = "0xD7FE98")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD7FEBC", Offset = "0xD7FEBC", VA = "0xD7FEBC")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD7FEE0", Offset = "0xD7FEE0", VA = "0xD7FEE0")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD7FF08", Offset = "0xD7FF08", VA = "0xD7FF08")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD7FF2C", Offset = "0xD7FF2C", VA = "0xD7FF2C")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD7FF50", Offset = "0xD7FF50", VA = "0xD7FF50")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD7FF74", Offset = "0xD7FF74", VA = "0xD7FF74")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD7FF98", Offset = "0xD7FF98", VA = "0xD7FF98")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD7FFD4", Offset = "0xD7FFD4", VA = "0xD7FFD4")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD7FFF8", Offset = "0xD7FFF8", VA = "0xD7FFF8")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD80024", Offset = "0xD80024", VA = "0xD80024")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD80050", Offset = "0xD80050", VA = "0xD80050")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD80074", Offset = "0xD80074", VA = "0xD80074")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD80098", Offset = "0xD80098", VA = "0xD80098")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD800BC", Offset = "0xD800BC", VA = "0xD800BC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD800E4", Offset = "0xD800E4", VA = "0xD800E4")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD80108", Offset = "0xD80108", VA = "0xD80108")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD8012C", Offset = "0xD8012C", VA = "0xD8012C")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD80158", Offset = "0xD80158", VA = "0xD80158")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD80188", Offset = "0xD80188", VA = "0xD80188")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD801AC", Offset = "0xD801AC", VA = "0xD801AC")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD801D0", Offset = "0xD801D0", VA = "0xD801D0")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD801F4", Offset = "0xD801F4", VA = "0xD801F4")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD80218", Offset = "0xD80218", VA = "0xD80218")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD8023C", Offset = "0xD8023C", VA = "0xD8023C")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD80264", Offset = "0xD80264", VA = "0xD80264")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD80288", Offset = "0xD80288", VA = "0xD80288")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20004F4")]
		[UnmanagedFunctionPointer(CallingConvention.StdCall)]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20004F5")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD804A8", Offset = "0xD804A8", VA = "0xD804A8")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD805C8", Offset = "0xD805C8", VA = "0xD805C8")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD805EC", Offset = "0xD805EC", VA = "0xD805EC")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD80610", Offset = "0xD80610", VA = "0xD80610")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD80634", Offset = "0xD80634", VA = "0xD80634")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD80658", Offset = "0xD80658", VA = "0xD80658")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD8067C", Offset = "0xD8067C", VA = "0xD8067C")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD806A0", Offset = "0xD806A0", VA = "0xD806A0")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD806C4", Offset = "0xD806C4", VA = "0xD806C4")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD806E8", Offset = "0xD806E8", VA = "0xD806E8")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD8070C", Offset = "0xD8070C", VA = "0xD8070C")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD80730", Offset = "0xD80730", VA = "0xD80730")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD80754", Offset = "0xD80754", VA = "0xD80754")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD80778", Offset = "0xD80778", VA = "0xD80778")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD8079C", Offset = "0xD8079C", VA = "0xD8079C")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD808F4", Offset = "0xD808F4", VA = "0xD808F4")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD80918", Offset = "0xD80918", VA = "0xD80918")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD8093C", Offset = "0xD8093C", VA = "0xD8093C")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD80960", Offset = "0xD80960", VA = "0xD80960")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F6")]
	public class CVRNotifications
	{
		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xD80C14", Offset = "0xD80C14", VA = "0xD80C14")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xD80D28", Offset = "0xD80D28", VA = "0xD80D28")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xD80D54", Offset = "0xD80D54", VA = "0xD80D54")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20004F7")]
	public class CVRSettings
	{
		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xD80D78", Offset = "0xD80D78", VA = "0xD80D78")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xD80E98", Offset = "0xD80E98", VA = "0xD80E98")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xD80F1C", Offset = "0xD80F1C", VA = "0xD80F1C")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xD80F44", Offset = "0xD80F44", VA = "0xD80F44")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xD80F6C", Offset = "0xD80F6C", VA = "0xD80F6C")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xD80F90", Offset = "0xD80F90", VA = "0xD80F90")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xD80FB4", Offset = "0xD80FB4", VA = "0xD80FB4")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD80FD8", Offset = "0xD80FD8", VA = "0xD80FD8")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xD80FFC", Offset = "0xD80FFC", VA = "0xD80FFC")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xD81020", Offset = "0xD81020", VA = "0xD81020")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xD81044", Offset = "0xD81044", VA = "0xD81044")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD81068", Offset = "0xD81068", VA = "0xD81068")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD8108C", Offset = "0xD8108C", VA = "0xD8108C")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD810B0", Offset = "0xD810B0", VA = "0xD810B0")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD811D8", Offset = "0xD811D8", VA = "0xD811D8")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD81200", Offset = "0xD81200", VA = "0xD81200")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD8122C", Offset = "0xD8122C", VA = "0xD8122C")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD81250", Offset = "0xD81250", VA = "0xD81250")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD81274", Offset = "0xD81274", VA = "0xD81274")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD81298", Offset = "0xD81298", VA = "0xD81298")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xD812C0", Offset = "0xD812C0", VA = "0xD812C0")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20004F9")]
	public class CVRResources
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xD812E4", Offset = "0xD812E4", VA = "0xD812E4")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD813F8", Offset = "0xD813F8", VA = "0xD813F8")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD8141C", Offset = "0xD8141C", VA = "0xD8141C")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20004FA")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD81440", Offset = "0xD81440", VA = "0xD81440")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD8155C", Offset = "0xD8155C", VA = "0xD8155C")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD81580", Offset = "0xD81580", VA = "0xD81580")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD815A4", Offset = "0xD815A4", VA = "0xD815A4")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20004FB")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD815C8", Offset = "0xD815C8", VA = "0xD815C8")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD8164C", Offset = "0xD8164C", VA = "0xD8164C")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD816B0", Offset = "0xD816B0", VA = "0xD816B0")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD81720", Offset = "0xD81720", VA = "0xD81720")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD81790", Offset = "0xD81790", VA = "0xD81790")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xD8180C", Offset = "0xD8180C", VA = "0xD8180C")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xD818A8", Offset = "0xD818A8", VA = "0xD818A8")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD81940", Offset = "0xD81940", VA = "0xD81940")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD819A8", Offset = "0xD819A8", VA = "0xD819A8")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public enum EVREye
	{
		[Token(Token = "0x40018D9")]
		Eye_Left,
		[Token(Token = "0x40018DA")]
		Eye_Right
	}
	[Token(Token = "0x20004FD")]
	public enum ETextureType
	{
		[Token(Token = "0x40018DC")]
		DirectX,
		[Token(Token = "0x40018DD")]
		OpenGL,
		[Token(Token = "0x40018DE")]
		Vulkan,
		[Token(Token = "0x40018DF")]
		IOSurface,
		[Token(Token = "0x40018E0")]
		DirectX12,
		[Token(Token = "0x40018E1")]
		DXGISharedHandle
	}
	[Token(Token = "0x20004FE")]
	public enum EColorSpace
	{
		[Token(Token = "0x40018E3")]
		Auto,
		[Token(Token = "0x40018E4")]
		Gamma,
		[Token(Token = "0x40018E5")]
		Linear
	}
	[Token(Token = "0x20004FF")]
	public enum ETrackingResult
	{
		[Token(Token = "0x40018E7")]
		Uninitialized = 1,
		[Token(Token = "0x40018E8")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x40018E9")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x40018EA")]
		Running_OK = 200,
		[Token(Token = "0x40018EB")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000500")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x40018ED")]
		Invalid,
		[Token(Token = "0x40018EE")]
		HMD,
		[Token(Token = "0x40018EF")]
		Controller,
		[Token(Token = "0x40018F0")]
		GenericTracker,
		[Token(Token = "0x40018F1")]
		TrackingReference,
		[Token(Token = "0x40018F2")]
		DisplayRedirect
	}
	[Token(Token = "0x2000501")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x40018F4")]
		Invalid,
		[Token(Token = "0x40018F5")]
		LeftHand,
		[Token(Token = "0x40018F6")]
		RightHand,
		[Token(Token = "0x40018F7")]
		OptOut
	}
	[Token(Token = "0x2000502")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x40018F9")]
		TrackingUniverseSeated,
		[Token(Token = "0x40018FA")]
		TrackingUniverseStanding,
		[Token(Token = "0x40018FB")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000503")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x40018FD")]
		Prop_Invalid = 0,
		[Token(Token = "0x40018FE")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x40018FF")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001900")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001901")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001902")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001903")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001904")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001905")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001906")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001907")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001908")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001909")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x400190A")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x400190B")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x400190C")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x400190D")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400190E")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x400190F")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001910")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001911")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001912")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001913")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001914")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001915")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001916")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001917")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001918")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001919")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400191A")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x400191B")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x400191C")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x400191D")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x400191E")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x400191F")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001920")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001921")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001922")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001923")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001924")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001925")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001926")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001927")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001928")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001929")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x400192A")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x400192B")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400192C")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400192D")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400192E")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400192F")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001930")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001931")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001932")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001933")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001934")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001935")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001936")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001937")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001938")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001939")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x400193A")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x400193B")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400193C")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400193D")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400193E")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400193F")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001940")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001941")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001942")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001943")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001944")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001945")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001946")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001947")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001948")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001949")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x400194A")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x400194B")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400194C")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400194D")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400194E")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400194F")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001950")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001951")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001952")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001953")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001954")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001955")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001956")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001957")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001958")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001959")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x400195A")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x400195B")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x400195C")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x400195D")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x400195E")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x400195F")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001960")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001961")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001962")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001963")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001964")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001965")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001966")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001967")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001968")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001969")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x400196A")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x400196B")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x400196C")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x400196D")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x400196E")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x400196F")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001970")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001971")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001972")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001973")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001974")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001975")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001976")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001977")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001978")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001979")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x400197A")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x400197B")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x400197C")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x400197D")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x400197E")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400197F")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001980")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001981")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001982")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001983")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001984")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001985")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001986")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001987")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001988")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000504")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x400198A")]
		TrackedProp_Success,
		[Token(Token = "0x400198B")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x400198C")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x400198D")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400198E")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400198F")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001990")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001991")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001992")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001993")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001994")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001995")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001996")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000505")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001998")]
		Submit_Default = 0,
		[Token(Token = "0x4001999")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x400199A")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x400199B")]
		Submit_Reserved = 4,
		[Token(Token = "0x400199C")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x400199D")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000506")]
	public enum EVRState
	{
		[Token(Token = "0x400199F")]
		Undefined = -1,
		[Token(Token = "0x40019A0")]
		Off,
		[Token(Token = "0x40019A1")]
		Searching,
		[Token(Token = "0x40019A2")]
		Searching_Alert,
		[Token(Token = "0x40019A3")]
		Ready,
		[Token(Token = "0x40019A4")]
		Ready_Alert,
		[Token(Token = "0x40019A5")]
		NotReady,
		[Token(Token = "0x40019A6")]
		Standby,
		[Token(Token = "0x40019A7")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000507")]
	public enum EVREventType
	{
		[Token(Token = "0x40019A9")]
		VREvent_None = 0,
		[Token(Token = "0x40019AA")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x40019AB")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x40019AC")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x40019AD")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x40019AE")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x40019AF")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x40019B0")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x40019B1")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x40019B2")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x40019B3")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x40019B4")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x40019B5")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x40019B6")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x40019B7")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x40019B8")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x40019B9")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x40019BA")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x40019BB")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x40019BC")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x40019BD")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x40019BE")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x40019BF")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x40019C0")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x40019C1")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x40019C2")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x40019C3")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x40019C4")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x40019C5")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x40019C6")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x40019C7")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40019C8")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40019C9")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40019CA")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40019CB")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40019CC")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40019CD")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40019CE")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40019CF")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40019D0")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40019D1")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40019D2")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40019D3")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40019D4")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x40019D5")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40019D6")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40019D7")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40019D8")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40019D9")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40019DA")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40019DB")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x40019DC")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x40019DD")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x40019DE")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x40019DF")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x40019E0")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x40019E1")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x40019E2")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x40019E3")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x40019E4")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x40019E5")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x40019E6")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x40019E7")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x40019E8")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x40019E9")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x40019EA")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x40019EB")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x40019EC")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x40019ED")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x40019EE")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x40019EF")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x40019F0")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x40019F1")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x40019F2")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x40019F3")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x40019F4")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x40019F5")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x40019F6")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x40019F7")]
		VREvent_Quit = 700,
		[Token(Token = "0x40019F8")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x40019F9")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x40019FA")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x40019FB")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x40019FC")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x40019FD")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x40019FE")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x40019FF")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001A00")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001A01")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001A02")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001A03")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001A04")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001A05")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001A06")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001A07")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001A08")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001A09")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001A0A")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001A0B")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001A0C")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001A0D")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001A0E")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001A0F")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001A10")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001A11")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001A12")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001A13")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001A14")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001A15")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001A16")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001A17")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001A18")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001A19")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001A1A")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001A1B")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001A1C")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001A1D")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001A1E")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001A1F")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001A20")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001A21")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001A22")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001A23")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001A24")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001A25")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001A26")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001A27")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001A28")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001A29")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001A2A")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001A2B")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001A2C")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001A2D")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001A2E")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001A2F")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001A30")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001A31")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001A32")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000508")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001A34")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001A35")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001A36")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001A37")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001A38")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000509")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001A3A")]
		k_EButton_System = 0,
		[Token(Token = "0x4001A3B")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001A3C")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001A3D")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001A3E")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001A3F")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001A40")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001A41")]
		k_EButton_A = 7,
		[Token(Token = "0x4001A42")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001A43")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001A44")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001A45")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001A46")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001A47")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001A48")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001A49")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001A4A")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001A4B")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x200050A")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001A4D")]
		Left = 1,
		[Token(Token = "0x4001A4E")]
		Right = 2,
		[Token(Token = "0x4001A4F")]
		Middle = 4
	}
	[Token(Token = "0x200050B")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001A51")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001A52")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x200050C")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001A54")]
		None,
		[Token(Token = "0x4001A55")]
		NameNotFound,
		[Token(Token = "0x4001A56")]
		WrongType,
		[Token(Token = "0x4001A57")]
		InvalidHandle,
		[Token(Token = "0x4001A58")]
		InvalidParam,
		[Token(Token = "0x4001A59")]
		NoSteam,
		[Token(Token = "0x4001A5A")]
		MaxCapacityReached,
		[Token(Token = "0x4001A5B")]
		IPCError,
		[Token(Token = "0x4001A5C")]
		NoActiveActionSet,
		[Token(Token = "0x4001A5D")]
		InvalidDevice
	}
	[Token(Token = "0x200050D")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001A5F")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001A60")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001A61")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001A62")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x200050E")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001A64")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001A65")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001A66")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001A67")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x200050F")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001A69")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001A6A")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000510")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001A6C")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001A6D")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001A6E")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001A6F")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001A70")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001A71")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000511")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001A73")]
		None = 0,
		[Token(Token = "0x4001A74")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001A75")]
		InvalidHandle = 11,
		[Token(Token = "0x4001A76")]
		PermissionDenied = 12,
		[Token(Token = "0x4001A77")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001A78")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001A79")]
		KeyTooLong = 15,
		[Token(Token = "0x4001A7A")]
		NameTooLong = 16,
		[Token(Token = "0x4001A7B")]
		KeyInUse = 17,
		[Token(Token = "0x4001A7C")]
		WrongTransformType = 18,
		[Token(Token = "0x4001A7D")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001A7E")]
		InvalidParameter = 20,
		[Token(Token = "0x4001A7F")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001A80")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001A81")]
		RequestFailed = 23,
		[Token(Token = "0x4001A82")]
		InvalidTexture = 24,
		[Token(Token = "0x4001A83")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001A84")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001A85")]
		NoNeighbor = 27,
		[Token(Token = "0x4001A86")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001A87")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001A88")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001A89")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001A8A")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000512")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001A8C")]
		VRApplication_Other,
		[Token(Token = "0x4001A8D")]
		VRApplication_Scene,
		[Token(Token = "0x4001A8E")]
		VRApplication_Overlay,
		[Token(Token = "0x4001A8F")]
		VRApplication_Background,
		[Token(Token = "0x4001A90")]
		VRApplication_Utility,
		[Token(Token = "0x4001A91")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001A92")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001A93")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001A94")]
		VRApplication_Max
	}
	[Token(Token = "0x2000513")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001A96")]
		None,
		[Token(Token = "0x4001A97")]
		Success,
		[Token(Token = "0x4001A98")]
		Fail
	}
	[Token(Token = "0x2000514")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001A9A")]
		OK = 0,
		[Token(Token = "0x4001A9B")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001A9C")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001A9D")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001A9E")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000515")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001AA0")]
		None = 0,
		[Token(Token = "0x4001AA1")]
		Unknown = 1,
		[Token(Token = "0x4001AA2")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001AA3")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001AA4")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001AA5")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001AA6")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001AA7")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001AA8")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001AA9")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001AAA")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001AAB")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001AAC")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001AAD")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001AAE")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001AAF")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001AB0")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001AB1")]
		Init_Retry = 115,
		[Token(Token = "0x4001AB2")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001AB3")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001AB4")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001AB5")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001AB6")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001AB7")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001AB8")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001AB9")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001ABA")]
		Init_Internal = 124,
		[Token(Token = "0x4001ABB")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001ABC")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001ABD")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001ABE")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001ABF")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001AC0")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001AC1")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001AC2")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001AC3")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001AC4")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001AC5")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001AC6")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001AC7")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001AC8")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001AC9")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001ACA")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001ACB")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4001ACC")]
		Driver_Failed = 200,
		[Token(Token = "0x4001ACD")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001ACE")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001ACF")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001AD0")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001AD1")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001AD2")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001AD3")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001AD4")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001AD5")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001AD6")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001AD7")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001AD8")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001AD9")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001ADA")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001ADB")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001ADC")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001ADD")]
		IPC_Failed = 305,
		[Token(Token = "0x4001ADE")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001ADF")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001AE0")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001AE1")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001AE2")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001AE3")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001AE4")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001AE5")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001AE6")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001AE7")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001AE8")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001AE9")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001AEA")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001AEB")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001AEC")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001AED")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001AEE")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001AEF")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001AF0")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001AF1")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001AF2")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001AF3")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001AF4")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001AF5")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001AF6")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000516")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001AF8")]
		None,
		[Token(Token = "0x4001AF9")]
		Mono,
		[Token(Token = "0x4001AFA")]
		Stereo,
		[Token(Token = "0x4001AFB")]
		Cubemap,
		[Token(Token = "0x4001AFC")]
		MonoPanorama,
		[Token(Token = "0x4001AFD")]
		StereoPanorama
	}
	[Token(Token = "0x2000517")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001AFF")]
		Preview,
		[Token(Token = "0x4001B00")]
		VR
	}
	[Token(Token = "0x2000518")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001B02")]
		None = 0,
		[Token(Token = "0x4001B03")]
		OperationFailed = 100,
		[Token(Token = "0x4001B04")]
		InvalidHandle = 101,
		[Token(Token = "0x4001B05")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001B06")]
		OutOfHandles = 103,
		[Token(Token = "0x4001B07")]
		IPCFailure = 104,
		[Token(Token = "0x4001B08")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001B09")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001B0A")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001B0B")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001B0C")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001B0D")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001B0E")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001B0F")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001B10")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001B11")]
		InvalidArgument = 114,
		[Token(Token = "0x4001B12")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000519")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001B14")]
		Distorted,
		[Token(Token = "0x4001B15")]
		Undistorted,
		[Token(Token = "0x4001B16")]
		MaximumUndistorted,
		[Token(Token = "0x4001B17")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x200051A")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001B19")]
		None = 0,
		[Token(Token = "0x4001B1A")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001B1B")]
		NoManifest = 101,
		[Token(Token = "0x4001B1C")]
		NoApplication = 102,
		[Token(Token = "0x4001B1D")]
		InvalidIndex = 103,
		[Token(Token = "0x4001B1E")]
		UnknownApplication = 104,
		[Token(Token = "0x4001B1F")]
		IPCFailed = 105,
		[Token(Token = "0x4001B20")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001B21")]
		InvalidManifest = 107,
		[Token(Token = "0x4001B22")]
		InvalidApplication = 108,
		[Token(Token = "0x4001B23")]
		LaunchFailed = 109,
		[Token(Token = "0x4001B24")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001B25")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001B26")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001B27")]
		TransitionAborted = 113,
		[Token(Token = "0x4001B28")]
		IsTemplate = 114,
		[Token(Token = "0x4001B29")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001B2A")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001B2B")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001B2C")]
		UnknownProperty = 202,
		[Token(Token = "0x4001B2D")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200051B")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001B2F")]
		Name_String = 0,
		[Token(Token = "0x4001B30")]
		LaunchType_String = 11,
		[Token(Token = "0x4001B31")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001B32")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001B33")]
		Arguments_String = 14,
		[Token(Token = "0x4001B34")]
		URL_String = 15,
		[Token(Token = "0x4001B35")]
		Description_String = 50,
		[Token(Token = "0x4001B36")]
		NewsURL_String = 51,
		[Token(Token = "0x4001B37")]
		ImagePath_String = 52,
		[Token(Token = "0x4001B38")]
		Source_String = 53,
		[Token(Token = "0x4001B39")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001B3A")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001B3B")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001B3C")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001B3D")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001B3E")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001B3F")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x200051C")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001B41")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001B42")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001B43")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001B44")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x200051D")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001B46")]
		OK = 1,
		[Token(Token = "0x4001B47")]
		Warning = 100,
		[Token(Token = "0x4001B48")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001B49")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001B4A")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001B4B")]
		Error = 200,
		[Token(Token = "0x4001B4C")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001B4D")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001B4E")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001B4F")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200051E")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001B51")]
		Live = 1,
		[Token(Token = "0x4001B52")]
		Temp
	}
	[Token(Token = "0x200051F")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001B54")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x2000520")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001B56")]
		None = 0,
		[Token(Token = "0x4001B57")]
		RequestFailed = 1,
		[Token(Token = "0x4001B58")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001B59")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001B5A")]
		InvalidTexture = 102,
		[Token(Token = "0x4001B5B")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001B5C")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001B5D")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001B5E")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001B5F")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001B60")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001B61")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000521")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001B63")]
		Implicit,
		[Token(Token = "0x4001B64")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001B65")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000522")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001B67")]
		None,
		[Token(Token = "0x4001B68")]
		Mouse,
		[Token(Token = "0x4001B69")]
		DualAnalog
	}
	[Token(Token = "0x2000523")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001B6B")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001B6C")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001B6D")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001B6E")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000524")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001B70")]
		None,
		[Token(Token = "0x4001B71")]
		Curved,
		[Token(Token = "0x4001B72")]
		RGSS4X,
		[Token(Token = "0x4001B73")]
		NoDashboardTab,
		[Token(Token = "0x4001B74")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001B75")]
		ShowGamepadFocus,
		[Token(Token = "0x4001B76")]
		SendVRScrollEvents,
		[Token(Token = "0x4001B77")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001B78")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001B79")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001B7A")]
		SideBySide_Parallel,
		[Token(Token = "0x4001B7B")]
		SideBySide_Crossed,
		[Token(Token = "0x4001B7C")]
		Panorama,
		[Token(Token = "0x4001B7D")]
		StereoPanorama,
		[Token(Token = "0x4001B7E")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001B7F")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000525")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001B81")]
		ButtonPress_0,
		[Token(Token = "0x4001B82")]
		ButtonPress_1,
		[Token(Token = "0x4001B83")]
		ButtonPress_2,
		[Token(Token = "0x4001B84")]
		ButtonPress_3,
		[Token(Token = "0x4001B85")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001B86")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001B87")]
		ApplicationQuit
	}
	[Token(Token = "0x2000526")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001B89")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001B8A")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001B8B")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000527")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001B8D")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001B8E")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000528")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001B90")]
		Up,
		[Token(Token = "0x4001B91")]
		Down,
		[Token(Token = "0x4001B92")]
		Left,
		[Token(Token = "0x4001B93")]
		Right,
		[Token(Token = "0x4001B94")]
		Count
	}
	[Token(Token = "0x2000529")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001B96")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001B97")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x200052A")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001B99")]
		None = 0,
		[Token(Token = "0x4001B9A")]
		Loading = 100,
		[Token(Token = "0x4001B9B")]
		NotSupported = 200,
		[Token(Token = "0x4001B9C")]
		InvalidArg = 300,
		[Token(Token = "0x4001B9D")]
		InvalidModel = 301,
		[Token(Token = "0x4001B9E")]
		NoShapes = 302,
		[Token(Token = "0x4001B9F")]
		MultipleShapes = 303,
		[Token(Token = "0x4001BA0")]
		TooManyVertices = 304,
		[Token(Token = "0x4001BA1")]
		MultipleTextures = 305,
		[Token(Token = "0x4001BA2")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001BA3")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001BA4")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001BA5")]
		InvalidTexture = 400
	}
	[Token(Token = "0x200052B")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001BA7")]
		IsStatic = 1,
		[Token(Token = "0x4001BA8")]
		IsVisible = 2,
		[Token(Token = "0x4001BA9")]
		IsTouched = 4,
		[Token(Token = "0x4001BAA")]
		IsPressed = 8,
		[Token(Token = "0x4001BAB")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x200052C")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001BAD")]
		Transient,
		[Token(Token = "0x4001BAE")]
		Persistent,
		[Token(Token = "0x4001BAF")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x200052D")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001BB1")]
		None = 0,
		[Token(Token = "0x4001BB2")]
		Application = 100,
		[Token(Token = "0x4001BB3")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001BB4")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001BB5")]
		Contact_Active = 202
	}
	[Token(Token = "0x200052E")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001BB7")]
		None,
		[Token(Token = "0x4001BB8")]
		IPCFailed,
		[Token(Token = "0x4001BB9")]
		WriteFailed,
		[Token(Token = "0x4001BBA")]
		ReadFailed,
		[Token(Token = "0x4001BBB")]
		JsonParseFailed,
		[Token(Token = "0x4001BBC")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x200052F")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001BBE")]
		None = 0,
		[Token(Token = "0x4001BBF")]
		RequestFailed = 1,
		[Token(Token = "0x4001BC0")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001BC1")]
		NotFound = 101,
		[Token(Token = "0x4001BC2")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001BC3")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x2000530")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000531")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x2000532")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x2000533")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000534")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000535")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000536")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000537")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000538")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000539")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x200053A")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x200053B")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x200053C")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x200053D")]
	public struct Texture_t
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200053E")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200053F")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000540")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000541")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000542")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000543")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000544")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000545")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000546")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000547")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000548")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000549")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x200054A")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x200054B")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x200054C")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x200054D")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x200054E")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x200054F")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000550")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000551")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000552")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000553")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000554")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000555")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000556")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000557")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000558")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000559")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200055A")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x200055B")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x200055C")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x200055D")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD819B0", Offset = "0xD819B0", VA = "0xD819B0")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD7CA94", Offset = "0xD7CA94", VA = "0xD7CA94")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x200055E")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x200055F")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000560")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000561")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD7CD58", Offset = "0xD7CD58", VA = "0xD7CD58")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD7CD9C", Offset = "0xD7CD9C", VA = "0xD7CD9C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000562")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000563")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000564")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000565")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000566")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000567")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000568")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000569")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200056A")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x200056B")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x200056C")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200056D")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x200056E")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x200056F")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000570")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD819E8", Offset = "0xD819E8", VA = "0xD819E8")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD819FC", Offset = "0xD819FC", VA = "0xD819FC")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000571")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000572")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD81A18", Offset = "0xD81A18", VA = "0xD81A18")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xD81A44", Offset = "0xD81A44", VA = "0xD81A44")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000573")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000574")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000575")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000576")]
	public class OpenVR
	{
		[Token(Token = "0x2000577")]
		private class COpenVRContext
		{
			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xD81C24", Offset = "0xD81C24", VA = "0xD81C24")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xD82808", Offset = "0xD82808", VA = "0xD82808")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001B02")]
			[Address(RVA = "0xD828CC", Offset = "0xD828CC", VA = "0xD828CC")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xD81C58", Offset = "0xD81C58", VA = "0xD81C58")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xD81D58", Offset = "0xD81D58", VA = "0xD81D58")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xD81E58", Offset = "0xD81E58", VA = "0xD81E58")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xD81F58", Offset = "0xD81F58", VA = "0xD81F58")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xD82058", Offset = "0xD82058", VA = "0xD82058")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xD82158", Offset = "0xD82158", VA = "0xD82158")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xD82258", Offset = "0xD82258", VA = "0xD82258")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xD82358", Offset = "0xD82358", VA = "0xD82358")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xD82458", Offset = "0xD82458", VA = "0xD82458")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xD82558", Offset = "0xD82558", VA = "0xD82558")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xD82658", Offset = "0xD82658", VA = "0xD82658")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001D09")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001D0A")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001D0B")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001D0C")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001D0D")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001D0E")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001D0F")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001D10")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001D11")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001D12")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001D13")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001D14")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001D15")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001D16")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001D17")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001D18")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001D19")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001D1A")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001D1B")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001D1C")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001D1D")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001D1E")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001D1F")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001D20")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001D21")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001D22")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001D23")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001D24")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001D25")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001D26")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001D27")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001D28")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001D29")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001D2A")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001D2B")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001D2C")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001D2D")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001D2E")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001D2F")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001D30")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001D31")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001D32")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001D33")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001D34")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001D35")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001D36")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001D37")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001D38")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001D39")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001D3A")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001D3B")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001D3C")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001D3D")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001D3E")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001D3F")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001D40")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001D41")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001D42")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001D43")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001D44")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001D45")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001D46")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001D47")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001D48")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001D49")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001D4A")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001D4B")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001D4C")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001D4D")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001D4E")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001D4F")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001D50")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001D51")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001D52")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001D53")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001D54")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001D55")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001D56")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001D57")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001D58")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001D59")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001D5A")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001D5B")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001D5C")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001D5D")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001D5E")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001D5F")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001D60")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001D61")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001D62")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001D63")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001D64")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001D65")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001D66")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001D67")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001D68")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001D69")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001D6A")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4001D6B")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001D6C")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001D6D")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001D6E")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001D6F")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001D70")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001D71")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001D72")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001D73")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001D74")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001D75")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001D76")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001D77")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001D78")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4001D79")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001D7A")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001D7B")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001D7C")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4001D7D")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4001D7E")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4001D7F")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001D80")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001D81")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001D82")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001D83")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001D84")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001D85")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001D86")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001D87")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001D88")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001D89")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001D8A")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001D8B")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001D8C")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4001D8D")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4001D8E")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4001D8F")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001D90")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001D91")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001D92")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001D93")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001D94")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001D95")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001D96")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001D97")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001D98")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001D99")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001D9A")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4001D9B")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001D9C")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001D9D")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001D9E")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001D9F")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001DA0")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001DA1")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001DA2")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001DA3")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001DA4")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001DA5")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001DA6")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001DA7")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001DA8")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001DA9")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001DAA")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001DAB")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001DAC")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001DAD")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001DAE")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001DAF")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001DB0")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001DB1")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001DB2")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001DB3")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001DB4")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001DB5")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001DB6")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001DB7")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001DB8")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001DB9")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001DBA")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001DBB")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001DBC")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001DBD")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001DBE")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001DBF")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001DC0")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4001DC1")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001DC2")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001DC3")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4001DC4")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4001DC5")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001DC6")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001DC7")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001DC9")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170002B9")]
		private static uint VRToken
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xD81AEC", Offset = "0xD81AEC", VA = "0xD81AEC")]
			[CompilerGenerated]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xD81B34", Offset = "0xD81B34", VA = "0xD81B34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD81B80", Offset = "0xD81B80", VA = "0xD81B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xD81C40", Offset = "0xD81C40", VA = "0xD81C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xD81D40", Offset = "0xD81D40", VA = "0xD81D40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xD81E40", Offset = "0xD81E40", VA = "0xD81E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xD81F40", Offset = "0xD81F40", VA = "0xD81F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xD82040", Offset = "0xD82040", VA = "0xD82040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xD82140", Offset = "0xD82140", VA = "0xD82140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xD82240", Offset = "0xD82240", VA = "0xD82240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xD82340", Offset = "0xD82340", VA = "0xD82340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xD82440", Offset = "0xD82440", VA = "0xD82440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xD82540", Offset = "0xD82540", VA = "0xD82540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xD82640", Offset = "0xD82640", VA = "0xD82640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xD81A68", Offset = "0xD81A68", VA = "0xD81A68")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xD81A6C", Offset = "0xD81A6C", VA = "0xD81A6C")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xD81A70", Offset = "0xD81A70", VA = "0xD81A70")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xD81A74", Offset = "0xD81A74", VA = "0xD81A74")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xD81A78", Offset = "0xD81A78", VA = "0xD81A78")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xD81AE0", Offset = "0xD81AE0", VA = "0xD81AE0")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xD81AE4", Offset = "0xD81AE4", VA = "0xD81AE4")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xD81AE8", Offset = "0xD81AE8", VA = "0xD81AE8")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD82740", Offset = "0xD82740", VA = "0xD82740")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD828C0", Offset = "0xD828C0", VA = "0xD828C0")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD828C4", Offset = "0xD828C4", VA = "0xD828C4")]
		public OpenVR()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000578")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD82960", Offset = "0xD82960", VA = "0xD82960")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD82A80", Offset = "0xD82A80", VA = "0xD82A80")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD82A88", Offset = "0xD82A88", VA = "0xD82A88")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD82B58", Offset = "0xD82B58", VA = "0xD82B58")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD82B98", Offset = "0xD82B98", VA = "0xD82B98")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD82AC8", Offset = "0xD82AC8", VA = "0xD82AC8")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD82BD8", Offset = "0xD82BD8", VA = "0xD82BD8")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TermsPopup("")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD82BE0", Offset = "0xD82BE0", VA = "0xD82BE0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD82F10", Offset = "0xD82F10", VA = "0xD82F10")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD82F18", Offset = "0xD82F18", VA = "0xD82F18", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD82FD8", Offset = "0xD82FD8", VA = "0xD82FD8")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD82FE0", Offset = "0xD82FE0", VA = "0xD82FE0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xD83520", Offset = "0xD83520", VA = "0xD83520")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD837C8", Offset = "0xD837C8", VA = "0xD837C8")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD83854", Offset = "0xD83854", VA = "0xD83854")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD835F4", Offset = "0xD835F4", VA = "0xD835F4")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD83AC8", Offset = "0xD83AC8", VA = "0xD83AC8")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD83D40", Offset = "0xD83D40", VA = "0xD83D40")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD83D48", Offset = "0xD83D48", VA = "0xD83D48")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD83D50", Offset = "0xD83D50", VA = "0xD83D50")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD83D58", Offset = "0xD83D58", VA = "0xD83D58")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD83DE4", Offset = "0xD83DE4", VA = "0xD83DE4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD83EE0", Offset = "0xD83EE0", VA = "0xD83EE0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD83F40", Offset = "0xD83F40", VA = "0xD83F40", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD83F48", Offset = "0xD83F48", VA = "0xD83F48")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD83F50", Offset = "0xD83F50", VA = "0xD83F50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD83FA0", Offset = "0xD83FA0", VA = "0xD83FA0")]
		private void test()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD84064", Offset = "0xD84064", VA = "0xD84064")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public static class PersistentStorage
	{
		[Token(Token = "0x2000580")]
		public enum eFileType
		{
			[Token(Token = "0x4001DDE")]
			Raw,
			[Token(Token = "0x4001DDF")]
			Persistent,
			[Token(Token = "0x4001DE0")]
			Temporal,
			[Token(Token = "0x4001DE1")]
			Streaming
		}

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD8406C", Offset = "0xD8406C", VA = "0xD8406C")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD8413C", Offset = "0xD8413C", VA = "0xD8413C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD84204", Offset = "0xD84204", VA = "0xD84204")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD842BC", Offset = "0xD842BC", VA = "0xD842BC")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD84374", Offset = "0xD84374", VA = "0xD84374")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xD84424", Offset = "0xD84424", VA = "0xD84424")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xD844D4", Offset = "0xD844D4", VA = "0xD844D4")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD845B4", Offset = "0xD845B4", VA = "0xD845B4")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD84684", Offset = "0xD84684", VA = "0xD84684")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD84754", Offset = "0xD84754", VA = "0xD84754")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000581")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD84828", Offset = "0xD84828", VA = "0xD84828", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD84AC4", Offset = "0xD84AC4", VA = "0xD84AC4", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD84D00", Offset = "0xD84D00", VA = "0xD84D00", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD84F00", Offset = "0xD84F00", VA = "0xD84F00", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD84F08", Offset = "0xD84F08", VA = "0xD84F08", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD84F14", Offset = "0xD84F14", VA = "0xD84F14", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD84F1C", Offset = "0xD84F1C", VA = "0xD84F1C")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD84FB4", Offset = "0xD84FB4", VA = "0xD84FB4", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD85148", Offset = "0xD85148", VA = "0xD85148", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD852D0", Offset = "0xD852D0", VA = "0xD852D0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD8544C", Offset = "0xD8544C", VA = "0xD8544C", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD855C8", Offset = "0xD855C8", VA = "0xD855C8")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD84134", Offset = "0xD84134", VA = "0xD84134")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD855D0", Offset = "0xD855D0", VA = "0xD855D0", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD85BBC", Offset = "0xD85BBC", VA = "0xD85BBC", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD85C18", Offset = "0xD85C18", VA = "0xD85C18", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD85CC0", Offset = "0xD85CC0", VA = "0xD85CC0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD85CC8", Offset = "0xD85CC8", VA = "0xD85CC8")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD85CEC", Offset = "0xD85CEC", VA = "0xD85CEC")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xD85ED8", Offset = "0xD85ED8", VA = "0xD85ED8")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xD861F8", Offset = "0xD861F8", VA = "0xD861F8")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xD85FF8", Offset = "0xD85FF8", VA = "0xD85FF8")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xD86610", Offset = "0xD86610", VA = "0xD86610")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000585")]
	public class EventCallback
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xD868C4", Offset = "0xD868C4", VA = "0xD868C4")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD86928", Offset = "0xD86928", VA = "0xD86928")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD869AC", Offset = "0xD869AC", VA = "0xD869AC")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public enum ePluralType
	{
		[Token(Token = "0x4001DE8")]
		Zero,
		[Token(Token = "0x4001DE9")]
		One,
		[Token(Token = "0x4001DEA")]
		Two,
		[Token(Token = "0x4001DEB")]
		Few,
		[Token(Token = "0x4001DEC")]
		Many,
		[Token(Token = "0x4001DED")]
		Plural
	}
	[Token(Token = "0x2000587")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000588")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD86A0C", Offset = "0xD86A0C", VA = "0xD86A0C")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xD86E08", Offset = "0xD86E08", VA = "0xD86E08")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD86CC0", Offset = "0xD86CC0", VA = "0xD86CC0")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xD87394", Offset = "0xD87394", VA = "0xD87394")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xD874DC", Offset = "0xD874DC", VA = "0xD874DC")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xD875AC", Offset = "0xD875AC", VA = "0xD875AC")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xD87730", Offset = "0xD87730", VA = "0xD87730")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xD8792C", Offset = "0xD8792C", VA = "0xD8792C")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xD87C28", Offset = "0xD87C28", VA = "0xD87C28")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xD87E54", Offset = "0xD87E54", VA = "0xD87E54")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD88014", Offset = "0xD88014", VA = "0xD88014")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD881F4", Offset = "0xD881F4", VA = "0xD881F4")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD883A4", Offset = "0xD883A4", VA = "0xD883A4")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD88A44", Offset = "0xD88A44", VA = "0xD88A44")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD88A2C", Offset = "0xD88A2C", VA = "0xD88A2C")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000589")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x200058A")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x200058B")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x200058D")]
		[CompilerGenerated]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B88")]
				[Address(RVA = "0xDA4C98", Offset = "0xDA4C98", VA = "0xDA4C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B8A")]
				[Address(RVA = "0xDA4CE0", Offset = "0xDA4CE0", VA = "0xDA4CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xDA29F8", Offset = "0xDA29F8", VA = "0xDA29F8")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xDA4B04", Offset = "0xDA4B04", VA = "0xDA4B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xDA4B08", Offset = "0xDA4B08", VA = "0xDA4B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xDA4CA0", Offset = "0xDA4CA0", VA = "0xDA4CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xDA1214", Offset = "0xDA1214", VA = "0xDA1214")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xDA144C", Offset = "0xDA144C", VA = "0xDA144C")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xDA1BA4", Offset = "0xDA1BA4", VA = "0xDA1BA4")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xDA1B10", Offset = "0xDA1B10", VA = "0xDA1B10")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xDA22F0", Offset = "0xDA22F0", VA = "0xDA22F0")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xDA236C", Offset = "0xDA236C", VA = "0xDA236C")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xDA21D0", Offset = "0xDA21D0", VA = "0xDA21D0")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xDA2998", Offset = "0xDA2998", VA = "0xDA2998")]
		[IteratorStateMachine(typeof(<WaitForTranslations>d__11))]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xDA2A20", Offset = "0xDA2A20", VA = "0xDA2A20")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xDA318C", Offset = "0xDA318C", VA = "0xDA318C")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xDA3240", Offset = "0xDA3240", VA = "0xDA3240")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xDA17C0", Offset = "0xDA17C0", VA = "0xDA17C0")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xDA3448", Offset = "0xDA3448", VA = "0xDA3448")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xDA1CF8", Offset = "0xDA1CF8", VA = "0xDA1CF8")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xDA3EE8", Offset = "0xDA3EE8", VA = "0xDA3EE8")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xDA2F0C", Offset = "0xDA2F0C", VA = "0xDA2F0C")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xDA3698", Offset = "0xDA3698", VA = "0xDA3698")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xDA3854", Offset = "0xDA3854", VA = "0xDA3854")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xDA372C", Offset = "0xDA372C", VA = "0xDA372C")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xDA3FE8", Offset = "0xDA3FE8", VA = "0xDA3FE8")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xDA30DC", Offset = "0xDA30DC", VA = "0xDA30DC")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xDA3938", Offset = "0xDA3938", VA = "0xDA3938")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xDA20B8", Offset = "0xDA20B8", VA = "0xDA20B8")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xDA40AC", Offset = "0xDA40AC", VA = "0xDA40AC")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xDA4360", Offset = "0xDA4360", VA = "0xDA4360")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xDA46C8", Offset = "0xDA46C8", VA = "0xDA46C8")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xDA28E4", Offset = "0xDA28E4", VA = "0xDA28E4")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x200058E")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x200058F")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x2000590")]
		public enum eJobState
		{
			[Token(Token = "0x4001E03")]
			Running,
			[Token(Token = "0x4001E04")]
			Succeeded,
			[Token(Token = "0x4001E05")]
			Failed
		}

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xDA4CE8", Offset = "0xDA4CE8", VA = "0xDA4CE8", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xDA4CF0", Offset = "0xDA4CF0", VA = "0xDA4CF0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xDA4CF4", Offset = "0xDA4CF4", VA = "0xDA4CF4")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xDA4CFC", Offset = "0xDA4CFC", VA = "0xDA4CFC", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xDA4D28", Offset = "0xDA4D28", VA = "0xDA4D28")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xDA4D30", Offset = "0xDA4D30", VA = "0xDA4D30")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xDA4DE4", Offset = "0xDA4DE4", VA = "0xDA4DE4")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xDA4F1C", Offset = "0xDA4F1C", VA = "0xDA4F1C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xDA4FC8", Offset = "0xDA4FC8", VA = "0xDA4FC8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xDA2010", Offset = "0xDA2010", VA = "0xDA2010")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xDA528C", Offset = "0xDA528C", VA = "0xDA528C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xDA54A0", Offset = "0xDA54A0", VA = "0xDA54A0", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xDA50E0", Offset = "0xDA50E0", VA = "0xDA50E0")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xDA5500", Offset = "0xDA5500", VA = "0xDA5500", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xDA559C", Offset = "0xDA559C", VA = "0xDA559C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xDA5684", Offset = "0xDA5684", VA = "0xDA5684")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xDA56D8", Offset = "0xDA56D8", VA = "0xDA56D8")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xDA5ABC", Offset = "0xDA5ABC", VA = "0xDA5ABC")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xDA5E90", Offset = "0xDA5E90", VA = "0xDA5E90", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xDA5F3C", Offset = "0xDA5F3C", VA = "0xDA5F3C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xDA6070", Offset = "0xDA6070", VA = "0xDA6070")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x2000597")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4001E1F")]
		DISABLED = 1,
		[Token(Token = "0x4001E20")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4001E21")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000598")]
	public class LanguageData
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xDA675C", Offset = "0xDA675C", VA = "0xDA675C")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xDA676C", Offset = "0xDA676C", VA = "0xDA676C")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xDA6788", Offset = "0xDA6788", VA = "0xDA6788")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xDA6798", Offset = "0xDA6798", VA = "0xDA6798")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xDA67A8", Offset = "0xDA67A8", VA = "0xDA67A8")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xDA67C4", Offset = "0xDA67C4", VA = "0xDA67C4")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xDA67E0", Offset = "0xDA67E0", VA = "0xDA67E0")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000599")]
	[ExecuteInEditMode]
	[AddComponentMenu("I2/Localization/Source")]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x200059A")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x170002C8")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xDA67E8", Offset = "0xDA67E8", VA = "0xDA67E8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xDA67F0", Offset = "0xDA67F0", VA = "0xDA67F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xDA67F8", Offset = "0xDA67F8", VA = "0xDA67F8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xDA6894", Offset = "0xDA6894", VA = "0xDA6894")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xDA6930", Offset = "0xDA6930", VA = "0xDA6930")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xDA69D0", Offset = "0xDA69D0", VA = "0xDA69D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xDA6A44", Offset = "0xDA6A44", VA = "0xDA6A44")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xDA6B34", Offset = "0xDA6B34", VA = "0xDA6B34", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xDA6B40", Offset = "0xDA6B40", VA = "0xDA6B40", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xDA72C4", Offset = "0xDA72C4", VA = "0xDA72C4")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x200059B")]
	[CreateAssetMenu(fileName = "I2Languages", menuName = "I2 Localization/LanguageSource", order = 1)]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170002C9")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xDA7650", Offset = "0xDA7650", VA = "0xDA7650", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xDA7658", Offset = "0xDA7658", VA = "0xDA7658", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xDA7660", Offset = "0xDA7660", VA = "0xDA7660")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public interface ILanguageSource
	{
		[Token(Token = "0x170002CA")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6001BBD")]
			get;
			[Token(Token = "0x6001BBE")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200059D")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x200059E")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4001E58")]
			Empty,
			[Token(Token = "0x4001E59")]
			Fallback,
			[Token(Token = "0x4001E5A")]
			ShowWarning,
			[Token(Token = "0x4001E5B")]
			ShowTerm
		}

		[Token(Token = "0x200059F")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4001E5D")]
			Never,
			[Token(Token = "0x4001E5E")]
			OnlyInDevice,
			[Token(Token = "0x4001E5F")]
			EditorAndDevice
		}

		[Token(Token = "0x20005A0")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4001E61")]
			Always,
			[Token(Token = "0x4001E62")]
			Never,
			[Token(Token = "0x4001E63")]
			Daily,
			[Token(Token = "0x4001E64")]
			Weekly,
			[Token(Token = "0x4001E65")]
			Monthly,
			[Token(Token = "0x4001E66")]
			OnlyOnce,
			[Token(Token = "0x4001E67")]
			EveryOtherDay
		}

		[Token(Token = "0x20005A1")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4001E69")]
			Manual,
			[Token(Token = "0x4001E6A")]
			OnSceneLoaded,
			[Token(Token = "0x4001E6B")]
			AsSoonAsDownloaded
		}

		[Token(Token = "0x20005A3")]
		[CompilerGenerated]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C19")]
				[Address(RVA = "0xDB0144", Offset = "0xDB0144", VA = "0xDB0144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1B")]
				[Address(RVA = "0xDB018C", Offset = "0xDB018C", VA = "0xDB018C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xDAD748", Offset = "0xDAD748", VA = "0xDAD748")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xDAFE54", Offset = "0xDAFE54", VA = "0xDAFE54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xDAFE58", Offset = "0xDAFE58", VA = "0xDAFE58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xDB014C", Offset = "0xDB014C", VA = "0xDB014C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x170002CB")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xDA76D0", Offset = "0xDA76D0", VA = "0xDA76D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001A")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xDA7228", Offset = "0xDA7228", VA = "0xDA7228")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xDA774C", Offset = "0xDA774C", VA = "0xDA774C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xDA6960", Offset = "0xDA6960", VA = "0xDA6960")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xDA69F0", Offset = "0xDA69F0", VA = "0xDA69F0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xDA821C", Offset = "0xDA821C", VA = "0xDA821C")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xDA8784", Offset = "0xDA8784", VA = "0xDA8784")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xDA888C", Offset = "0xDA888C", VA = "0xDA888C")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xDA8970", Offset = "0xDA8970", VA = "0xDA8970")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xDA8978", Offset = "0xDA8978", VA = "0xDA8978")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xDA7D68", Offset = "0xDA7D68", VA = "0xDA7D68")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xDA897C", Offset = "0xDA897C", VA = "0xDA897C")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xDA8A50", Offset = "0xDA8A50", VA = "0xDA8A50")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xDA8AA8", Offset = "0xDA8AA8", VA = "0xDA8AA8")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xDA8B94", Offset = "0xDA8B94", VA = "0xDA8B94")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xDA92C0", Offset = "0xDA92C0", VA = "0xDA92C0")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xDA951C", Offset = "0xDA951C", VA = "0xDA951C")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xDA95E8", Offset = "0xDA95E8", VA = "0xDA95E8")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xDA9B20", Offset = "0xDA9B20", VA = "0xDA9B20")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xDAA46C", Offset = "0xDAA46C", VA = "0xDAA46C")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xDAA308", Offset = "0xDAA308", VA = "0xDAA308")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xDAA6CC", Offset = "0xDAA6CC", VA = "0xDAA6CC")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xDAA848", Offset = "0xDAA848", VA = "0xDAA848")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xDAAA0C", Offset = "0xDAAA0C", VA = "0xDAAA0C")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xDAAEE8", Offset = "0xDAAEE8", VA = "0xDAAEE8")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xDABD00", Offset = "0xDABD00", VA = "0xDABD00")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xDAB04C", Offset = "0xDAB04C", VA = "0xDAB04C")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xDABF84", Offset = "0xDABF84", VA = "0xDABF84")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xDAC32C", Offset = "0xDAC32C", VA = "0xDAC32C")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xDAC574", Offset = "0xDAC574", VA = "0xDAC574")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xDAC7A0", Offset = "0xDAC7A0", VA = "0xDAC7A0")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xDAC960", Offset = "0xDAC960", VA = "0xDAC960")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xDACD94", Offset = "0xDACD94", VA = "0xDACD94")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xDAD450", Offset = "0xDAD450", VA = "0xDAD450")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xDACBD4", Offset = "0xDACBD4", VA = "0xDACBD4")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xDAD6C0", Offset = "0xDAD6C0", VA = "0xDAD6C0")]
		[IteratorStateMachine(typeof(<Import_Google_Coroutine>d__65))]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xDAD770", Offset = "0xDAD770", VA = "0xDAD770")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xDAD81C", Offset = "0xDAD81C", VA = "0xDAD81C")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xDAD97C", Offset = "0xDAD97C", VA = "0xDAD97C")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xDADAF0", Offset = "0xDADAF0", VA = "0xDADAF0")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xDACE24", Offset = "0xDACE24", VA = "0xDACE24")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xDA837C", Offset = "0xDA837C", VA = "0xDA837C")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xDADD44", Offset = "0xDADD44", VA = "0xDADD44")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xDADDD4", Offset = "0xDADDD4", VA = "0xDADDD4")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xDAC014", Offset = "0xDAC014", VA = "0xDAC014")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xDADB88", Offset = "0xDADB88", VA = "0xDADB88")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xDADE78", Offset = "0xDADE78", VA = "0xDADE78")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xDADF04", Offset = "0xDADF04", VA = "0xDADF04")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xDADF9C", Offset = "0xDADF9C", VA = "0xDADF9C")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xDAE014", Offset = "0xDAE014", VA = "0xDAE014")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xDAE210", Offset = "0xDAE210", VA = "0xDAE210")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xDAE4E0", Offset = "0xDAE4E0", VA = "0xDAE4E0")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xDAE658", Offset = "0xDAE658", VA = "0xDAE658")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xDAE850", Offset = "0xDAE850", VA = "0xDAE850")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xDAE8DC", Offset = "0xDAE8DC", VA = "0xDAE8DC")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xDAE978", Offset = "0xDAE978", VA = "0xDAE978")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xDAE988", Offset = "0xDAE988", VA = "0xDAE988")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xDAEBD0", Offset = "0xDAEBD0", VA = "0xDAEBD0")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xDAEF9C", Offset = "0xDAEF9C", VA = "0xDAEF9C")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xDAED34", Offset = "0xDAED34", VA = "0xDAED34")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xDAC45C", Offset = "0xDAC45C", VA = "0xDAC45C")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xDAC3C4", Offset = "0xDAC3C4", VA = "0xDAC3C4")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xDAAC20", Offset = "0xDAAC20", VA = "0xDAAC20")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xDAF0E8", Offset = "0xDAF0E8", VA = "0xDAF0E8")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xDAF020", Offset = "0xDAF020", VA = "0xDAF020")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xDAF194", Offset = "0xDAF194", VA = "0xDAF194")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xDA7A60", Offset = "0xDA7A60", VA = "0xDA7A60")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xDAF2AC", Offset = "0xDAF2AC", VA = "0xDAF2AC")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xDAF350", Offset = "0xDAF350", VA = "0xDAF350")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xDA989C", Offset = "0xDA989C", VA = "0xDA989C")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xDAF5A8", Offset = "0xDAF5A8", VA = "0xDAF5A8")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xDA852C", Offset = "0xDA852C", VA = "0xDA852C")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xDAF804", Offset = "0xDAF804", VA = "0xDAF804")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xDAF820", Offset = "0xDAF820", VA = "0xDAF820")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xDAF5B4", Offset = "0xDAF5B4", VA = "0xDAF5B4")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xDAFA70", Offset = "0xDAFA70", VA = "0xDAFA70")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xDAC188", Offset = "0xDAC188", VA = "0xDAC188")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xDA6F88", Offset = "0xDA6F88", VA = "0xDA6F88")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001E79")]
		None,
		[Token(Token = "0x4001E7A")]
		Replace,
		[Token(Token = "0x4001E7B")]
		Merge,
		[Token(Token = "0x4001E7C")]
		AddNewTerms
	}
	[Token(Token = "0x20005A5")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xDB0194", Offset = "0xDB0194", VA = "0xDB0194")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xDB0400", Offset = "0xDB0400", VA = "0xDB0400")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xDB0888", Offset = "0xDB0888", VA = "0xDB0888")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xDAAF24", Offset = "0xDAAF24", VA = "0xDAAF24")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xDB0AA8", Offset = "0xDB0AA8", VA = "0xDB0AA8")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xDB0C94", Offset = "0xDB0C94", VA = "0xDB0C94")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xDABD38", Offset = "0xDABD38", VA = "0xDABD38")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xDB07E0", Offset = "0xDB07E0", VA = "0xDB07E0")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xDB0E20", Offset = "0xDB0E20", VA = "0xDB0E20")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xDB0738", Offset = "0xDB0738", VA = "0xDB0738")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xDB0F18", Offset = "0xDB0F18", VA = "0xDB0F18")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	[AddComponentMenu("I2/Localization/I2 Localize")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20005A7")]
		public enum TermModification
		{
			[Token(Token = "0x4001E9E")]
			DontModify,
			[Token(Token = "0x4001E9F")]
			ToUpper,
			[Token(Token = "0x4001EA0")]
			ToLower,
			[Token(Token = "0x4001EA1")]
			ToUpperFirst,
			[Token(Token = "0x4001EA2")]
			ToTitle
		}

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170002CE")]
		public string Term
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xDB0F20", Offset = "0xDB0F20", VA = "0xDB0F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xDB0F28", Offset = "0xDB0F28", VA = "0xDB0F28")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xDB0F80", Offset = "0xDB0F80", VA = "0xDB0F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xDB0F88", Offset = "0xDB0F88", VA = "0xDB0F88")]
			set
			{
			}
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xDB100C", Offset = "0xDB100C", VA = "0xDB100C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xDB2148", Offset = "0xDB2148", VA = "0xDB2148")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xDB2150", Offset = "0xDB2150", VA = "0xDB2150")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xDB1858", Offset = "0xDB1858", VA = "0xDB1858")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xDB13A8", Offset = "0xDB13A8", VA = "0xDB13A8")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xDB2198", Offset = "0xDB2198", VA = "0xDB2198")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xDB29B0", Offset = "0xDB29B0", VA = "0xDB29B0")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xDB2A78", Offset = "0xDB2A78", VA = "0xDB2A78")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xDB0F2C", Offset = "0xDB0F2C", VA = "0xDB0F2C")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xDB0F94", Offset = "0xDB0F94", VA = "0xDB0F94")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6001C35")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xDB1040", Offset = "0xDB1040", VA = "0xDB1040")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001C37")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C38")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xDB2AC8", Offset = "0xDB2AC8", VA = "0xDB2AC8")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001C3A")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xDB2BD8", Offset = "0xDB2BD8", VA = "0xDB2BD8")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xDB2C5C", Offset = "0xDB2C5C", VA = "0xDB2C5C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xDB2D48", Offset = "0xDB2D48", VA = "0xDB2D48")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xDB2E6C", Offset = "0xDB2E6C", VA = "0xDB2E6C")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	[AddComponentMenu("I2/Localization/Localize Dropdown")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xDB325C", Offset = "0xDB325C", VA = "0xDB325C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xDB3594", Offset = "0xDB3594", VA = "0xDB3594")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xDB370C", Offset = "0xDB370C", VA = "0xDB370C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xDB34A8", Offset = "0xDB34A8", VA = "0xDB34A8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xDB3764", Offset = "0xDB3764", VA = "0xDB3764")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xDB39C8", Offset = "0xDB39C8", VA = "0xDB39C8")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xDB3F44", Offset = "0xDB3F44", VA = "0xDB3F44")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xDB3CF8", Offset = "0xDB3CF8", VA = "0xDB3CF8")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xDB4268", Offset = "0xDB4268", VA = "0xDB4268")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20005AB")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20005AC")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20005B2")]
		[CompilerGenerated]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA9")]
				[Address(RVA = "0xDB9C5C", Offset = "0xDB9C5C", VA = "0xDB9C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAB")]
				[Address(RVA = "0xDB9CA4", Offset = "0xDB9CA4", VA = "0xDB9CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xDB784C", Offset = "0xDB784C", VA = "0xDB784C")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xDB9B98", Offset = "0xDB9B98", VA = "0xDB9B98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xDB9B9C", Offset = "0xDB9B9C", VA = "0xDB9B9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xDB9C64", Offset = "0xDB9C64", VA = "0xDB9C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[CompilerGenerated]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB1")]
				[Address(RVA = "0xDB9D9C", Offset = "0xDB9D9C", VA = "0xDB9D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB3")]
				[Address(RVA = "0xDB9DE4", Offset = "0xDB9DE4", VA = "0xDB9DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xDB8A48", Offset = "0xDB8A48", VA = "0xDB8A48")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xDB9CD4", Offset = "0xDB9CD4", VA = "0xDB9CD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xDB9CD8", Offset = "0xDB9CD8", VA = "0xDB9CD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xDB9DA4", Offset = "0xDB9DA4", VA = "0xDB9DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170002D0")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xDAC904", Offset = "0xDAC904", VA = "0xDAC904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xDB2D9C", Offset = "0xDB2D9C", VA = "0xDB2D9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xDB5078", Offset = "0xDB5078", VA = "0xDB5078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xDB50D4", Offset = "0xDB50D4", VA = "0xDB50D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xDB5364", Offset = "0xDB5364", VA = "0xDB5364")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xDB54D8", Offset = "0xDB54D8", VA = "0xDB54D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xDB5698", Offset = "0xDB5698", VA = "0xDB5698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xDB5768", Offset = "0xDB5768", VA = "0xDB5768")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xDB586C", Offset = "0xDB586C", VA = "0xDB586C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001B")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xDB33CC", Offset = "0xDB33CC", VA = "0xDB33CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xDB3630", Offset = "0xDB3630", VA = "0xDB3630")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xDA16FC", Offset = "0xDA16FC", VA = "0xDA16FC")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xDB4928", Offset = "0xDB4928", VA = "0xDB4928")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xDADB80", Offset = "0xDADB80", VA = "0xDADB80")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xDA12B8", Offset = "0xDA12B8", VA = "0xDA12B8")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xDB4E7C", Offset = "0xDB4E7C", VA = "0xDB4E7C")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xDB58C4", Offset = "0xDB58C4", VA = "0xDB58C4")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xDB5AB4", Offset = "0xDB5AB4", VA = "0xDB5AB4")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xDB59B8", Offset = "0xDB59B8", VA = "0xDB59B8")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xDB4554", Offset = "0xDB4554", VA = "0xDB4554")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xDB5BE4", Offset = "0xDB5BE4", VA = "0xDB5BE4")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xDB4968", Offset = "0xDB4968", VA = "0xDB4968")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xDB4CC4", Offset = "0xDB4CC4", VA = "0xDB4CC4")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xDB519C", Offset = "0xDB519C", VA = "0xDB519C")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xDB5D9C", Offset = "0xDB5D9C", VA = "0xDB5D9C")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xDB601C", Offset = "0xDB601C", VA = "0xDB601C")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xDB6270", Offset = "0xDB6270", VA = "0xDB6270")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xDB6364", Offset = "0xDB6364", VA = "0xDB6364")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xDB648C", Offset = "0xDB648C", VA = "0xDB648C")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xDB42F0", Offset = "0xDB42F0", VA = "0xDB42F0")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xDB6584", Offset = "0xDB6584", VA = "0xDB6584")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xDB23F8", Offset = "0xDB23F8", VA = "0xDB23F8")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xDB6B98", Offset = "0xDB6B98", VA = "0xDB6B98")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xDB6778", Offset = "0xDB6778", VA = "0xDB6778")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xDB6DE8", Offset = "0xDB6DE8", VA = "0xDB6DE8")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xDB7078", Offset = "0xDB7078", VA = "0xDB7078")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xDB2954", Offset = "0xDB2954", VA = "0xDB2954")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xDB24E8", Offset = "0xDB24E8", VA = "0xDB24E8")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xDB723C", Offset = "0xDB723C", VA = "0xDB723C")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xDB5A30", Offset = "0xDB5A30", VA = "0xDB5A30")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xDB44D0", Offset = "0xDB44D0", VA = "0xDB44D0")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xDB72D8", Offset = "0xDB72D8", VA = "0xDB72D8")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xDB7580", Offset = "0xDB7580", VA = "0xDB7580")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xDB73E0", Offset = "0xDB73E0", VA = "0xDB73E0")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xDB7714", Offset = "0xDB7714", VA = "0xDB7714")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xDA77E8", Offset = "0xDA77E8", VA = "0xDA77E8")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xDB77B4", Offset = "0xDB77B4", VA = "0xDB77B4")]
		[IteratorStateMachine(typeof(<Delayed_Import_Google>d__61))]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xDA819C", Offset = "0xDA819C", VA = "0xDA819C")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xDB7874", Offset = "0xDB7874", VA = "0xDB7874")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xDB78F8", Offset = "0xDB78F8", VA = "0xDB78F8")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xDB7A9C", Offset = "0xDB7A9C", VA = "0xDB7A9C")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xDB7BCC", Offset = "0xDB7BCC", VA = "0xDB7BCC")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xDB5B48", Offset = "0xDB5B48", VA = "0xDB5B48")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xDB7CA8", Offset = "0xDB7CA8", VA = "0xDB7CA8")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xDB8128", Offset = "0xDB8128", VA = "0xDB8128")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xDB2334", Offset = "0xDB2334", VA = "0xDB2334")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xDB85D4", Offset = "0xDB85D4", VA = "0xDB85D4")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xDB83E0", Offset = "0xDB83E0", VA = "0xDB83E0")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C88")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xDB8680", Offset = "0xDB8680", VA = "0xDB8680")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xDA80D0", Offset = "0xDA80D0", VA = "0xDA80D0")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xDB89E8", Offset = "0xDB89E8", VA = "0xDB89E8")]
		[IteratorStateMachine(typeof(<Coroutine_LocalizeAll>d__86))]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xDB8870", Offset = "0xDB8870", VA = "0xDB8870")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xDB8A70", Offset = "0xDB8A70", VA = "0xDB8A70")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xDB8B98", Offset = "0xDB8B98", VA = "0xDB8B98")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xDB8DDC", Offset = "0xDB8DDC", VA = "0xDB8DDC")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xDB6C90", Offset = "0xDB6C90", VA = "0xDB6C90")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B5")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6001CB4")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6001CB5")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6001CB6")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6001CB7")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6001CB8")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6001CB9")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6001CBA")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6001CBB")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xDB9DEC", Offset = "0xDB9DEC", VA = "0xDB9DEC")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6001CBD")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBE")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6001CBF")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6001CC0")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6001CC1")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xDB9DF4", Offset = "0xDB9DF4", VA = "0xDB9DF4")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6001CC3")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6001CC6")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC7")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xDB9DFC", Offset = "0xDB9DFC", VA = "0xDB9DFC")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xDB9E00", Offset = "0xDB9E00", VA = "0xDB9E00")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xDB9EC8", Offset = "0xDB9EC8", VA = "0xDB9EC8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xDB9ED0", Offset = "0xDB9ED0", VA = "0xDB9ED0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xDB9ED8", Offset = "0xDB9ED8", VA = "0xDB9ED8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xDB9EE0", Offset = "0xDB9EE0", VA = "0xDB9EE0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xDB9EE8", Offset = "0xDB9EE8", VA = "0xDB9EE8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xDB9EF0", Offset = "0xDB9EF0", VA = "0xDB9EF0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xDBA00C", Offset = "0xDBA00C", VA = "0xDBA00C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xDBA5A0", Offset = "0xDBA5A0", VA = "0xDBA5A0")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xDBA808", Offset = "0xDBA808", VA = "0xDBA808")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xDBA4C0", Offset = "0xDBA4C0", VA = "0xDBA4C0")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xDBA708", Offset = "0xDBA708", VA = "0xDBA708")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xDBAAAC", Offset = "0xDBAAAC", VA = "0xDBAAAC")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xDBAB08", Offset = "0xDBAB08", VA = "0xDBAB08")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xDBAB0C", Offset = "0xDBAB0C", VA = "0xDBAB0C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xDBABD4", Offset = "0xDBABD4", VA = "0xDBABD4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xDBABDC", Offset = "0xDBABDC", VA = "0xDBABDC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xDBABE4", Offset = "0xDBABE4", VA = "0xDBABE4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xDBABEC", Offset = "0xDBABEC", VA = "0xDBABEC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xDBABF4", Offset = "0xDBABF4", VA = "0xDBABF4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xDBABFC", Offset = "0xDBABFC", VA = "0xDBABFC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xDBAD18", Offset = "0xDBAD18", VA = "0xDBAD18", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xDBB1CC", Offset = "0xDBB1CC", VA = "0xDBB1CC")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xDBB228", Offset = "0xDBB228", VA = "0xDBB228")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xDBB22C", Offset = "0xDBB22C", VA = "0xDBB22C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xDBB2F4", Offset = "0xDBB2F4", VA = "0xDBB2F4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xDBB2FC", Offset = "0xDBB2FC", VA = "0xDBB2FC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xDBB304", Offset = "0xDBB304", VA = "0xDBB304", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xDBB30C", Offset = "0xDBB30C", VA = "0xDBB30C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xDBB314", Offset = "0xDBB314", VA = "0xDBB314", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xDBB31C", Offset = "0xDBB31C", VA = "0xDBB31C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xDBB404", Offset = "0xDBB404", VA = "0xDBB404", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xDBB574", Offset = "0xDBB574", VA = "0xDBB574")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xDBB5BC", Offset = "0xDBB5BC", VA = "0xDBB5BC", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xDBB5F0", Offset = "0xDBB5F0", VA = "0xDBB5F0")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xDBB638", Offset = "0xDBB638", VA = "0xDBB638")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xDBB63C", Offset = "0xDBB63C", VA = "0xDBB63C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xDBB6EC", Offset = "0xDBB6EC", VA = "0xDBB6EC", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xDBB720", Offset = "0xDBB720", VA = "0xDBB720", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xDBB728", Offset = "0xDBB728", VA = "0xDBB728", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xDBB730", Offset = "0xDBB730", VA = "0xDBB730", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xDBB738", Offset = "0xDBB738", VA = "0xDBB738", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xDBB740", Offset = "0xDBB740", VA = "0xDBB740", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xDBB748", Offset = "0xDBB748", VA = "0xDBB748", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xDBB794", Offset = "0xDBB794", VA = "0xDBB794", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xDBB8D4", Offset = "0xDBB8D4", VA = "0xDBB8D4")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class LocalizeTarget_UnityStandard_GUIText : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xDBB91C", Offset = "0xDBB91C", VA = "0xDBB91C")]
		static LocalizeTarget_UnityStandard_GUIText()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xDBB920", Offset = "0xDBB920", VA = "0xDBB920")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xDBB9E8", Offset = "0xDBB9E8", VA = "0xDBB9E8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xDBB9F0", Offset = "0xDBB9F0", VA = "0xDBB9F0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xDBB9F8", Offset = "0xDBB9F8", VA = "0xDBB9F8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xDBBA00", Offset = "0xDBBA00", VA = "0xDBBA00", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xDBBA08", Offset = "0xDBBA08", VA = "0xDBBA08", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xDBBA10", Offset = "0xDBBA10", VA = "0xDBBA10", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xDBBB3C", Offset = "0xDBBB3C", VA = "0xDBBB3C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xDBBD90", Offset = "0xDBBD90", VA = "0xDBBD90")]
		public LocalizeTarget_UnityStandard_GUIText()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public class LocalizeTarget_UnityStandard_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xDBBDEC", Offset = "0xDBBDEC", VA = "0xDBBDEC")]
		static LocalizeTarget_UnityStandard_Image()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xDBBDF0", Offset = "0xDBBDF0", VA = "0xDBBDF0")]
		[RuntimeInitializeOnLoadMethod]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xDBBEB8", Offset = "0xDBBEB8", VA = "0xDBBEB8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xDBBEC0", Offset = "0xDBBEC0", VA = "0xDBBEC0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xDBBEC8", Offset = "0xDBBEC8", VA = "0xDBBEC8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xDBBED0", Offset = "0xDBBED0", VA = "0xDBBED0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xDBBED8", Offset = "0xDBBED8", VA = "0xDBBED8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xDBBEE0", Offset = "0xDBBEE0", VA = "0xDBBEE0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xDBBFA8", Offset = "0xDBBFA8", VA = "0xDBBFA8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xDBC088", Offset = "0xDBC088", VA = "0xDBC088")]
		public LocalizeTarget_UnityStandard_Image()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xDBC0D0", Offset = "0xDBC0D0", VA = "0xDBC0D0")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xDBC0D4", Offset = "0xDBC0D4", VA = "0xDBC0D4")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xDBC19C", Offset = "0xDBC19C", VA = "0xDBC19C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xDBC1A4", Offset = "0xDBC1A4", VA = "0xDBC1A4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xDBC1AC", Offset = "0xDBC1AC", VA = "0xDBC1AC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xDBC1B4", Offset = "0xDBC1B4", VA = "0xDBC1B4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xDBC1BC", Offset = "0xDBC1BC", VA = "0xDBC1BC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xDBC1C4", Offset = "0xDBC1C4", VA = "0xDBC1C4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xDBC3BC", Offset = "0xDBC3BC", VA = "0xDBC3BC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xDBC588", Offset = "0xDBC588", VA = "0xDBC588")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xDBC5D0", Offset = "0xDBC5D0", VA = "0xDBC5D0", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xDBC5D8", Offset = "0xDBC5D8", VA = "0xDBC5D8")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xDBC620", Offset = "0xDBC620", VA = "0xDBC620")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xDBC624", Offset = "0xDBC624", VA = "0xDBC624")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xDBC6D4", Offset = "0xDBC6D4", VA = "0xDBC6D4", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xDBC6DC", Offset = "0xDBC6DC", VA = "0xDBC6DC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xDBC6E4", Offset = "0xDBC6E4", VA = "0xDBC6E4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xDBC6EC", Offset = "0xDBC6EC", VA = "0xDBC6EC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xDBC6F4", Offset = "0xDBC6F4", VA = "0xDBC6F4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xDBC6FC", Offset = "0xDBC6FC", VA = "0xDBC6FC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xDBC704", Offset = "0xDBC704", VA = "0xDBC704", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xDBC750", Offset = "0xDBC750", VA = "0xDBC750", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xDBC954", Offset = "0xDBC954", VA = "0xDBC954")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xDBCB08", Offset = "0xDBCB08", VA = "0xDBCB08")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xDBCB50", Offset = "0xDBCB50", VA = "0xDBCB50")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xDBCB54", Offset = "0xDBCB54", VA = "0xDBCB54")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xDBCC1C", Offset = "0xDBCC1C", VA = "0xDBCC1C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xDBCC24", Offset = "0xDBCC24", VA = "0xDBCC24", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xDBCC2C", Offset = "0xDBCC2C", VA = "0xDBCC2C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xDBCC34", Offset = "0xDBCC34", VA = "0xDBCC34", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xDBCC3C", Offset = "0xDBCC3C", VA = "0xDBCC3C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xDBCC44", Offset = "0xDBCC44", VA = "0xDBCC44", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xDBCD30", Offset = "0xDBCD30", VA = "0xDBCD30", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xDBCE2C", Offset = "0xDBCE2C", VA = "0xDBCE2C")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xDBCE74", Offset = "0xDBCE74", VA = "0xDBCE74")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xDBCE78", Offset = "0xDBCE78", VA = "0xDBCE78")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xDBCF40", Offset = "0xDBCF40", VA = "0xDBCF40", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xDBCF48", Offset = "0xDBCF48", VA = "0xDBCF48", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xDBCF50", Offset = "0xDBCF50", VA = "0xDBCF50", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xDBCF58", Offset = "0xDBCF58", VA = "0xDBCF58", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xDBCF60", Offset = "0xDBCF60", VA = "0xDBCF60", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xDBCF68", Offset = "0xDBCF68", VA = "0xDBCF68", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xDBD08C", Offset = "0xDBD08C", VA = "0xDBD08C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xDBD334", Offset = "0xDBD334", VA = "0xDBD334")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xDBD38C", Offset = "0xDBD38C", VA = "0xDBD38C")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xDBD390", Offset = "0xDBD390", VA = "0xDBD390")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xDBD458", Offset = "0xDBD458", VA = "0xDBD458", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xDBD460", Offset = "0xDBD460", VA = "0xDBD460", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xDBD468", Offset = "0xDBD468", VA = "0xDBD468", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xDBD470", Offset = "0xDBD470", VA = "0xDBD470", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xDBD478", Offset = "0xDBD478", VA = "0xDBD478", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xDBD480", Offset = "0xDBD480", VA = "0xDBD480", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xDBD56C", Offset = "0xDBD56C", VA = "0xDBD56C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xDBD668", Offset = "0xDBD668", VA = "0xDBD668")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xDBD6B0", Offset = "0xDBD6B0", VA = "0xDBD6B0")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xDBD6B4", Offset = "0xDBD6B4", VA = "0xDBD6B4")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xDBD77C", Offset = "0xDBD77C", VA = "0xDBD77C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xDBD784", Offset = "0xDBD784", VA = "0xDBD784", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xDBD78C", Offset = "0xDBD78C", VA = "0xDBD78C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xDBD794", Offset = "0xDBD794", VA = "0xDBD794", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xDBD814", Offset = "0xDBD814", VA = "0xDBD814", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xDBD81C", Offset = "0xDBD81C", VA = "0xDBD81C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xDBD9B8", Offset = "0xDBD9B8", VA = "0xDBD9B8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xDBDAA8", Offset = "0xDBDAA8", VA = "0xDBDAA8")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xDBDAF0", Offset = "0xDBDAF0", VA = "0xDBDAF0")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xDBDAF4", Offset = "0xDBDAF4", VA = "0xDBDAF4")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xDBDBBC", Offset = "0xDBDBBC", VA = "0xDBDBBC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xDBDBC4", Offset = "0xDBDBC4", VA = "0xDBDBC4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xDBDBCC", Offset = "0xDBDBCC", VA = "0xDBDBCC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xDBDBD4", Offset = "0xDBDBD4", VA = "0xDBDBD4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xDBDBDC", Offset = "0xDBDBDC", VA = "0xDBDBDC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xDBDBE4", Offset = "0xDBDBE4", VA = "0xDBDBE4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xDBDCD4", Offset = "0xDBDCD4", VA = "0xDBDCD4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xDBDDC4", Offset = "0xDBDDC4", VA = "0xDBDDC4")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xDBDE0C", Offset = "0xDBDE0C", VA = "0xDBDE0C")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xDBDE10", Offset = "0xDBDE10", VA = "0xDBDE10")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xDBDED8", Offset = "0xDBDED8", VA = "0xDBDED8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xDBDEE0", Offset = "0xDBDEE0", VA = "0xDBDEE0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xDBDEE8", Offset = "0xDBDEE8", VA = "0xDBDEE8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xDBDEF0", Offset = "0xDBDEF0", VA = "0xDBDEF0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xDBDEF8", Offset = "0xDBDEF8", VA = "0xDBDEF8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xDBDF00", Offset = "0xDBDF00", VA = "0xDBDF00", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xDBE02C", Offset = "0xDBE02C", VA = "0xDBE02C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xDBE2D4", Offset = "0xDBE2D4", VA = "0xDBE2D4")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xDBE38C", Offset = "0xDBE38C", VA = "0xDBE38C")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public enum eTermType
	{
		[Token(Token = "0x4001EE2")]
		Text,
		[Token(Token = "0x4001EE3")]
		Font,
		[Token(Token = "0x4001EE4")]
		Texture,
		[Token(Token = "0x4001EE5")]
		AudioClip,
		[Token(Token = "0x4001EE6")]
		GameObject,
		[Token(Token = "0x4001EE7")]
		Sprite,
		[Token(Token = "0x4001EE8")]
		Material,
		[Token(Token = "0x4001EE9")]
		Child,
		[Token(Token = "0x4001EEA")]
		Mesh,
		[Token(Token = "0x4001EEB")]
		TextMeshPFont,
		[Token(Token = "0x4001EEC")]
		Object,
		[Token(Token = "0x4001EED")]
		Video
	}
	[Token(Token = "0x20005CB")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001EEF")]
		Normal = 1,
		[Token(Token = "0x4001EF0")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20005CC")]
	public class TermData
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xDBE3E4", Offset = "0xDBE3E4", VA = "0xDBE3E4")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xDBE4F8", Offset = "0xDBE4F8", VA = "0xDBE4F8")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xDBE5DC", Offset = "0xDBE5DC", VA = "0xDBE5DC")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xDBE630", Offset = "0xDBE630", VA = "0xDBE630")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xDBE7D0", Offset = "0xDBE7D0", VA = "0xDBE7D0")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xDBE804", Offset = "0xDBE804", VA = "0xDBE804")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xDBEA00", Offset = "0xDBEA00", VA = "0xDBEA00")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xDBEA88", Offset = "0xDBEA88", VA = "0xDBEA88")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xDBEB50", Offset = "0xDBEB50", VA = "0xDBEB50")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xDBEC38", Offset = "0xDBEC38", VA = "0xDBEC38")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x170002D9")]
		public string Filter
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xDBED30", Offset = "0xDBED30", VA = "0xDBED30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xDBED38", Offset = "0xDBED38", VA = "0xDBED38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xDBED00", Offset = "0xDBED00", VA = "0xDBED00")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xDBED40", Offset = "0xDBED40", VA = "0xDBED40")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xDBED94", Offset = "0xDBED94", VA = "0xDBED94")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170002DA")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xDBED9C", Offset = "0xDBED9C", VA = "0xDBED9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xDBEEEC", Offset = "0xDBEEEC", VA = "0xDBEEEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xDBEF70", Offset = "0xDBEF70", VA = "0xDBEF70")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xDBEF94", Offset = "0xDBEF94", VA = "0xDBEF94")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[AddComponentMenu("I2/Localization/I2 Localize Callback")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xDBEF9C", Offset = "0xDBEF9C", VA = "0xDBEF9C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xDBF074", Offset = "0xDBF074", VA = "0xDBF074")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xDBF118", Offset = "0xDBF118", VA = "0xDBF118")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xDBF134", Offset = "0xDBF134", VA = "0xDBF134")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public class HindiFixer
	{
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xDBF1A8", Offset = "0xDBF1A8", VA = "0xDBF1A8")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xDBF5B4", Offset = "0xDBF5B4", VA = "0xDBF5B4")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public static class I2Utils
	{
		[Token(Token = "0x4001EFC")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4001EFD")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4001EFE")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xDBA9F0", Offset = "0xDBA9F0", VA = "0xDBA9F0")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xDBF640", Offset = "0xDBF640", VA = "0xDBF640")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xDBF868", Offset = "0xDBF868", VA = "0xDBF868")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xDBF910", Offset = "0xDBF910", VA = "0xDBF910")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xDBFBB4", Offset = "0xDBFBB4", VA = "0xDBFBB4")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xDBF888", Offset = "0xDBF888", VA = "0xDBF888")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xDBFD38", Offset = "0xDBFD38", VA = "0xDBFD38")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xDBFFCC", Offset = "0xDBFFCC", VA = "0xDBFFCC")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xDBFFD4", Offset = "0xDBFFD4", VA = "0xDBFFD4")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xDC00A4", Offset = "0xDC00A4", VA = "0xDC00A4")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xDC0104", Offset = "0xDC0104", VA = "0xDC0104")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xDC0240", Offset = "0xDC0240", VA = "0xDC0240")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xDC0364", Offset = "0xDC0364", VA = "0xDC0364")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xDC0410", Offset = "0xDC0410", VA = "0xDC0410")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6001D8F")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20005D6")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20005D7")]
		public struct ParamValue
		{
			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xDC04A8", Offset = "0xDC04A8", VA = "0xDC04A8", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xDC056C", Offset = "0xDC056C", VA = "0xDC056C")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xDC074C", Offset = "0xDC074C", VA = "0xDC074C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xDC0804", Offset = "0xDC0804", VA = "0xDC0804", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xDC0814", Offset = "0xDC0814", VA = "0xDC0814")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xDC0944", Offset = "0xDC0944", VA = "0xDC0944")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xDC09C4", Offset = "0xDC09C4", VA = "0xDC09C4")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D8")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xDC0A4C", Offset = "0xDC0A4C", VA = "0xDC0A4C")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xDC0B14", Offset = "0xDC0B14", VA = "0xDC0B14")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xDC0B50", Offset = "0xDC0B50", VA = "0xDC0B50")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xDC0A50", Offset = "0xDC0A50", VA = "0xDC0A50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D9")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xDC0BA4", Offset = "0xDC0BA4", VA = "0xDC0BA4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xDC0C44", Offset = "0xDC0C44", VA = "0xDC0C44")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xDC0CE4", Offset = "0xDC0CE4", VA = "0xDC0CE4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xDC0D40", Offset = "0xDC0D40", VA = "0xDC0D40", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xDC0D48", Offset = "0xDC0D48", VA = "0xDC0D48")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xDC0D50", Offset = "0xDC0D50", VA = "0xDC0D50", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xDC0E80", Offset = "0xDC0E80", VA = "0xDC0E80", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xDC0F00", Offset = "0xDC0F00", VA = "0xDC0F00", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xDC0F08", Offset = "0xDC0F08", VA = "0xDC0F08")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6001DA4")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20005DC")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170002DB")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xDC0F10", Offset = "0xDC0F10", VA = "0xDC0F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xDC12EC", Offset = "0xDC12EC", VA = "0xDC12EC")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001DA7")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xDC13A8", Offset = "0xDC13A8", VA = "0xDC13A8")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xDC14CC", Offset = "0xDC14CC", VA = "0xDC14CC")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAA")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xDC1344", Offset = "0xDC1344", VA = "0xDC1344")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xDC152C", Offset = "0xDC152C", VA = "0xDC152C")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class RTLFixer
	{
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xDC1668", Offset = "0xDC1668", VA = "0xDC1668")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xDC18F0", Offset = "0xDC18F0", VA = "0xDC18F0")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xDC1674", Offset = "0xDC1674", VA = "0xDC1674")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xDC2AF8", Offset = "0xDC2AF8", VA = "0xDC2AF8")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4001F0F")]
		Hamza = 65152,
		[Token(Token = "0x4001F10")]
		Alef = 65165,
		[Token(Token = "0x4001F11")]
		AlefHamza = 65155,
		[Token(Token = "0x4001F12")]
		WawHamza = 65157,
		[Token(Token = "0x4001F13")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4001F14")]
		AlefMaksora = 64508,
		[Token(Token = "0x4001F15")]
		HamzaNabera = 65161,
		[Token(Token = "0x4001F16")]
		Ba = 65167,
		[Token(Token = "0x4001F17")]
		Ta = 65173,
		[Token(Token = "0x4001F18")]
		Tha2 = 65177,
		[Token(Token = "0x4001F19")]
		Jeem = 65181,
		[Token(Token = "0x4001F1A")]
		H7aa = 65185,
		[Token(Token = "0x4001F1B")]
		Khaa2 = 65189,
		[Token(Token = "0x4001F1C")]
		Dal = 65193,
		[Token(Token = "0x4001F1D")]
		Thal = 65195,
		[Token(Token = "0x4001F1E")]
		Ra2 = 65197,
		[Token(Token = "0x4001F1F")]
		Zeen = 65199,
		[Token(Token = "0x4001F20")]
		Seen = 65201,
		[Token(Token = "0x4001F21")]
		Sheen = 65205,
		[Token(Token = "0x4001F22")]
		S9a = 65209,
		[Token(Token = "0x4001F23")]
		Dha = 65213,
		[Token(Token = "0x4001F24")]
		T6a = 65217,
		[Token(Token = "0x4001F25")]
		T6ha = 65221,
		[Token(Token = "0x4001F26")]
		Ain = 65225,
		[Token(Token = "0x4001F27")]
		Gain = 65229,
		[Token(Token = "0x4001F28")]
		Fa = 65233,
		[Token(Token = "0x4001F29")]
		Gaf = 65237,
		[Token(Token = "0x4001F2A")]
		Kaf = 65241,
		[Token(Token = "0x4001F2B")]
		Lam = 65245,
		[Token(Token = "0x4001F2C")]
		Meem = 65249,
		[Token(Token = "0x4001F2D")]
		Noon = 65253,
		[Token(Token = "0x4001F2E")]
		Ha = 65257,
		[Token(Token = "0x4001F2F")]
		Waw = 65261,
		[Token(Token = "0x4001F30")]
		Ya = 65265,
		[Token(Token = "0x4001F31")]
		AlefMad = 65153,
		[Token(Token = "0x4001F32")]
		TaMarboota = 65171,
		[Token(Token = "0x4001F33")]
		PersianPe = 64342,
		[Token(Token = "0x4001F34")]
		PersianChe = 64378,
		[Token(Token = "0x4001F35")]
		PersianZe = 64394,
		[Token(Token = "0x4001F36")]
		PersianGaf = 64402,
		[Token(Token = "0x4001F37")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20005DF")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4001F39")]
		Hamza = 1569,
		[Token(Token = "0x4001F3A")]
		Alef = 1575,
		[Token(Token = "0x4001F3B")]
		AlefHamza = 1571,
		[Token(Token = "0x4001F3C")]
		WawHamza = 1572,
		[Token(Token = "0x4001F3D")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4001F3E")]
		AlefMagsora = 1609,
		[Token(Token = "0x4001F3F")]
		HamzaNabera = 1574,
		[Token(Token = "0x4001F40")]
		Ba = 1576,
		[Token(Token = "0x4001F41")]
		Ta = 1578,
		[Token(Token = "0x4001F42")]
		Tha2 = 1579,
		[Token(Token = "0x4001F43")]
		Jeem = 1580,
		[Token(Token = "0x4001F44")]
		H7aa = 1581,
		[Token(Token = "0x4001F45")]
		Khaa2 = 1582,
		[Token(Token = "0x4001F46")]
		Dal = 1583,
		[Token(Token = "0x4001F47")]
		Thal = 1584,
		[Token(Token = "0x4001F48")]
		Ra2 = 1585,
		[Token(Token = "0x4001F49")]
		Zeen = 1586,
		[Token(Token = "0x4001F4A")]
		Seen = 1587,
		[Token(Token = "0x4001F4B")]
		Sheen = 1588,
		[Token(Token = "0x4001F4C")]
		S9a = 1589,
		[Token(Token = "0x4001F4D")]
		Dha = 1590,
		[Token(Token = "0x4001F4E")]
		T6a = 1591,
		[Token(Token = "0x4001F4F")]
		T6ha = 1592,
		[Token(Token = "0x4001F50")]
		Ain = 1593,
		[Token(Token = "0x4001F51")]
		Gain = 1594,
		[Token(Token = "0x4001F52")]
		Fa = 1601,
		[Token(Token = "0x4001F53")]
		Gaf = 1602,
		[Token(Token = "0x4001F54")]
		Kaf = 1603,
		[Token(Token = "0x4001F55")]
		Lam = 1604,
		[Token(Token = "0x4001F56")]
		Meem = 1605,
		[Token(Token = "0x4001F57")]
		Noon = 1606,
		[Token(Token = "0x4001F58")]
		Ha = 1607,
		[Token(Token = "0x4001F59")]
		Waw = 1608,
		[Token(Token = "0x4001F5A")]
		Ya = 1610,
		[Token(Token = "0x4001F5B")]
		AlefMad = 1570,
		[Token(Token = "0x4001F5C")]
		TaMarboota = 1577,
		[Token(Token = "0x4001F5D")]
		PersianPe = 1662,
		[Token(Token = "0x4001F5E")]
		PersianChe = 1670,
		[Token(Token = "0x4001F5F")]
		PersianZe = 1688,
		[Token(Token = "0x4001F60")]
		PersianGaf = 1711,
		[Token(Token = "0x4001F61")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20005E0")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xDC2B00", Offset = "0xDC2B00", VA = "0xDC2B00")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20005E1")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170002DC")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xDC43C0", Offset = "0xDC43C0", VA = "0xDC43C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xDC2B2C", Offset = "0xDC2B2C", VA = "0xDC2B2C")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xDC4444", Offset = "0xDC4444", VA = "0xDC4444")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005E2")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xDC45D8", Offset = "0xDC45D8", VA = "0xDC45D8")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20005E3")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xDC4608", Offset = "0xDC4608", VA = "0xDC4608")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xDC4B38", Offset = "0xDC4B38", VA = "0xDC4B38")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xDC1AF0", Offset = "0xDC1AF0", VA = "0xDC1AF0")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xDC4D60", Offset = "0xDC4D60", VA = "0xDC4D60")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xDC5330", Offset = "0xDC5330", VA = "0xDC5330")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xDC51EC", Offset = "0xDC51EC", VA = "0xDC51EC")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xDC4EBC", Offset = "0xDC4EBC", VA = "0xDC4EBC")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xDC561C", Offset = "0xDC561C", VA = "0xDC561C")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	[AddComponentMenu("I2/Localization/SetLanguage Button")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xDC5670", Offset = "0xDC5670", VA = "0xDC5670")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	[AddComponentMenu("I2/Localization/SetLanguage Dropdown")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xDC5678", Offset = "0xDC5678", VA = "0xDC5678")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xDC58D0", Offset = "0xDC58D0", VA = "0xDC58D0")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xDC59BC", Offset = "0xDC59BC", VA = "0xDC59BC")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class StringObfucator
	{
		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xDC59C4", Offset = "0xDC59C4", VA = "0xDC59C4")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xDC5CB8", Offset = "0xDC5CB8", VA = "0xDC5CB8")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xDC5C34", Offset = "0xDC5C34", VA = "0xDC5C34")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xDC5D90", Offset = "0xDC5D90", VA = "0xDC5D90")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xDC5A9C", Offset = "0xDC5A9C", VA = "0xDC5A9C")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xDC5E1C", Offset = "0xDC5E1C", VA = "0xDC5E1C")]
		public StringObfucator()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite[] flags;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image flag;

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xDC5EA0", Offset = "0xDC5EA0", VA = "0xDC5EA0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xDC620C", Offset = "0xDC620C", VA = "0xDC620C")]
		public void ApplyLanguage1()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xDC62D0", Offset = "0xDC62D0", VA = "0xDC62D0")]
		public void ApplyLanguage2()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xDC6394", Offset = "0xDC6394", VA = "0xDC6394")]
		public void ApplyLanguage3()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xDC6458", Offset = "0xDC6458", VA = "0xDC6458")]
		public void ApplyLanguage4()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xDC651C", Offset = "0xDC651C", VA = "0xDC651C")]
		public void ApplyLanguage5()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xDC65F4", Offset = "0xDC65F4", VA = "0xDC65F4")]
		public void ApplyLanguage6()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xDC66B8", Offset = "0xDC66B8", VA = "0xDC66B8")]
		public void ApplyLanguage7()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xDC677C", Offset = "0xDC677C", VA = "0xDC677C")]
		public void ApplyLanguage8()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xDC6840", Offset = "0xDC6840", VA = "0xDC6840")]
		public void ApplyLanguage9()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xDC6904", Offset = "0xDC6904", VA = "0xDC6904")]
		public void ApplyLanguage10()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xDC69C8", Offset = "0xDC69C8", VA = "0xDC69C8")]
		public ChangeLanguage()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20005E8")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001F6F")]
		Array = 1,
		[Token(Token = "0x4001F70")]
		Class,
		[Token(Token = "0x4001F71")]
		Value,
		[Token(Token = "0x4001F72")]
		IntValue,
		[Token(Token = "0x4001F73")]
		DoubleValue,
		[Token(Token = "0x4001F74")]
		BoolValue,
		[Token(Token = "0x4001F75")]
		FloatValue
	}
	[Token(Token = "0x20005E9")]
	public class JSONNode
	{
		[Token(Token = "0x20005EA")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170002E9")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E0B")]
				[Address(RVA = "0xDC8A8C", Offset = "0xDC8A8C", VA = "0xDC8A8C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0D")]
				[Address(RVA = "0xDC8AD4", Offset = "0xDC8AD4", VA = "0xDC8AD4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xDC6B20", Offset = "0xDC6B20", VA = "0xDC6B20")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xDC8A70", Offset = "0xDC8A70", VA = "0xDC8A70", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xDC8A74", Offset = "0xDC8A74", VA = "0xDC8A74", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xDC8A94", Offset = "0xDC8A94", VA = "0xDC8A94", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xDC8ADC", Offset = "0xDC8ADC", VA = "0xDC8ADC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xDC8B74", Offset = "0xDC8B74", VA = "0xDC8B74", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005EB")]
		[CompilerGenerated]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170002EB")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E15")]
				[Address(RVA = "0xDC91E0", Offset = "0xDC91E0", VA = "0xDC91E0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E17")]
				[Address(RVA = "0xDC9228", Offset = "0xDC9228", VA = "0xDC9228", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xDC6BD8", Offset = "0xDC6BD8", VA = "0xDC6BD8")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xDC8B78", Offset = "0xDC8B78", VA = "0xDC8B78", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xDC8C30", Offset = "0xDC8C30", VA = "0xDC8C30", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xDC9130", Offset = "0xDC9130", VA = "0xDC9130")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xDC9080", Offset = "0xDC9080", VA = "0xDC9080")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xDC91E8", Offset = "0xDC91E8", VA = "0xDC91E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xDC9230", Offset = "0xDC9230", VA = "0xDC9230", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xDC92DC", Offset = "0xDC92DC", VA = "0xDC92DC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public virtual JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xDC69D4", Offset = "0xDC69D4", VA = "0xDC69D4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xDC69DC", Offset = "0xDC69DC", VA = "0xDC69DC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public virtual JSONNode this[string aKey]
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0xDC69E0", Offset = "0xDC69E0", VA = "0xDC69E0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xDC69E8", Offset = "0xDC69E8", VA = "0xDC69E8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public virtual string Value
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xDC69EC", Offset = "0xDC69EC", VA = "0xDC69EC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xDC6A2C", Offset = "0xDC6A2C", VA = "0xDC6A2C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public virtual int Count
		{
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xDC6A30", Offset = "0xDC6A30", VA = "0xDC6A30", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E1")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xDC6AB0", Offset = "0xDC6AB0", VA = "0xDC6AB0", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xDC6B54", Offset = "0xDC6B54", VA = "0xDC6B54")]
			[IteratorStateMachine(typeof(<get_DeepChilds>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xDC6C8C", Offset = "0xDC6C8C", VA = "0xDC6C8C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xDC6CC0", Offset = "0xDC6CC0", VA = "0xDC6CC0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xDC6CFC", Offset = "0xDC6CFC", VA = "0xDC6CFC", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xDC6D34", Offset = "0xDC6D34", VA = "0xDC6D34", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xDC6D70", Offset = "0xDC6D70", VA = "0xDC6D70", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xDC6DA8", Offset = "0xDC6DA8", VA = "0xDC6DA8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xDC6DE4", Offset = "0xDC6DE4", VA = "0xDC6DE4", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xDC6E9C", Offset = "0xDC6E9C", VA = "0xDC6E9C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xDC6F14", Offset = "0xDC6F14", VA = "0xDC6F14", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xDC6F8C", Offset = "0xDC6F8C", VA = "0xDC6F8C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xDC69D0", Offset = "0xDC69D0", VA = "0xDC69D0", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xDC6A38", Offset = "0xDC6A38", VA = "0xDC6A38", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xDC6A98", Offset = "0xDC6A98", VA = "0xDC6A98", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xDC6AA0", Offset = "0xDC6AA0", VA = "0xDC6AA0", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xDC6AA8", Offset = "0xDC6AA8", VA = "0xDC6AA8", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xDC6C0C", Offset = "0xDC6C0C", VA = "0xDC6C0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xDC6C4C", Offset = "0xDC6C4C", VA = "0xDC6C4C", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xDC7004", Offset = "0xDC7004", VA = "0xDC7004")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xDC70A4", Offset = "0xDC70A4", VA = "0xDC70A4")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xDC70E0", Offset = "0xDC70E0", VA = "0xDC70E0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xDC7168", Offset = "0xDC7168", VA = "0xDC7168")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xDC7180", Offset = "0xDC7180", VA = "0xDC7180", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xDC718C", Offset = "0xDC718C", VA = "0xDC718C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xDC7194", Offset = "0xDC7194", VA = "0xDC7194")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xDC7360", Offset = "0xDC7360", VA = "0xDC7360")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xDC7BF8", Offset = "0xDC7BF8", VA = "0xDC7BF8", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xDC7BFC", Offset = "0xDC7BFC", VA = "0xDC7BFC")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xDC7C7C", Offset = "0xDC7C7C", VA = "0xDC7C7C")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xDC7CCC", Offset = "0xDC7CCC", VA = "0xDC7CCC")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xDC7D1C", Offset = "0xDC7D1C", VA = "0xDC7D1C")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xDC7D6C", Offset = "0xDC7D6C", VA = "0xDC7D6C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xDC7F3C", Offset = "0xDC7F3C", VA = "0xDC7F3C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xDC813C", Offset = "0xDC813C", VA = "0xDC813C")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xDC85B4", Offset = "0xDC85B4", VA = "0xDC85B4")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xDC8604", Offset = "0xDC8604", VA = "0xDC8604")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xDC8654", Offset = "0xDC8654", VA = "0xDC8654")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xDC86A4", Offset = "0xDC86A4", VA = "0xDC86A4")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xDC8838", Offset = "0xDC8838", VA = "0xDC8838")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xDC89B4", Offset = "0xDC89B4", VA = "0xDC89B4")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xDC8A68", Offset = "0xDC8A68", VA = "0xDC8A68")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x20005ED")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002F1")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E2C")]
				[Address(RVA = "0xDCA0D8", Offset = "0xDCA0D8", VA = "0xDCA0D8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2E")]
				[Address(RVA = "0xDCA120", Offset = "0xDCA120", VA = "0xDCA120", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xDC9880", Offset = "0xDC9880", VA = "0xDC9880")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xDC9EC4", Offset = "0xDC9EC4", VA = "0xDC9EC4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xDC9EE0", Offset = "0xDC9EE0", VA = "0xDC9EE0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xDCA088", Offset = "0xDCA088", VA = "0xDCA088")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xDCA0E0", Offset = "0xDCA0E0", VA = "0xDCA0E0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xDCA128", Offset = "0xDCA128", VA = "0xDCA128", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xDCA1D4", Offset = "0xDCA1D4", VA = "0xDCA1D4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005EE")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E35")]
				[Address(RVA = "0xDCA3EC", Offset = "0xDCA3EC", VA = "0xDCA3EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E37")]
				[Address(RVA = "0xDCA434", Offset = "0xDCA434", VA = "0xDCA434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xDC9928", Offset = "0xDC9928", VA = "0xDC9928")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xDCA1D8", Offset = "0xDCA1D8", VA = "0xDCA1D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xDCA1F4", Offset = "0xDCA1F4", VA = "0xDCA1F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xDCA39C", Offset = "0xDCA39C", VA = "0xDCA39C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xDCA3F4", Offset = "0xDCA3F4", VA = "0xDCA3F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170002ED")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xDC92E0", Offset = "0xDC92E0", VA = "0xDC92E0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xDC93D0", Offset = "0xDC93D0", VA = "0xDC93D0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xDC94E0", Offset = "0xDC94E0", VA = "0xDC94E0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xDC9540", Offset = "0xDC9540", VA = "0xDC9540", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public override int Count
		{
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xDC95F0", Offset = "0xDC95F0", VA = "0xDC95F0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F0")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xDC97FC", Offset = "0xDC97FC", VA = "0xDC97FC", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xDC9638", Offset = "0xDC9638", VA = "0xDC9638", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xDC96E8", Offset = "0xDC96E8", VA = "0xDC96E8", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xDC979C", Offset = "0xDC979C", VA = "0xDC979C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xDC98B4", Offset = "0xDC98B4", VA = "0xDC98B4", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__14))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xDC9950", Offset = "0xDC9950", VA = "0xDC9950", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xDC9B68", Offset = "0xDC9B68", VA = "0xDC9B68", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xDC9DE8", Offset = "0xDC9DE8", VA = "0xDC9DE8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xDC7B70", Offset = "0xDC7B70", VA = "0xDC7B70")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x20005F1")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002F9")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0xDCBB50", Offset = "0xDCBB50", VA = "0xDCBB50", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0xDCBB98", Offset = "0xDCBB98", VA = "0xDCBB98", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xDCACEC", Offset = "0xDCACEC", VA = "0xDCACEC")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xDCB928", Offset = "0xDCB928", VA = "0xDCB928", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xDCB944", Offset = "0xDCB944", VA = "0xDCB944", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xDCBB00", Offset = "0xDCBB00", VA = "0xDCBB00")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xDCBB58", Offset = "0xDCBB58", VA = "0xDCBB58", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xDCBBA0", Offset = "0xDCBBA0", VA = "0xDCBBA0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xDCBC4C", Offset = "0xDCBC4C", VA = "0xDCBC4C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005F2")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0xDCBEA0", Offset = "0xDCBEA0", VA = "0xDCBEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xDCBEE8", Offset = "0xDCBEE8", VA = "0xDCBEE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xDCAD94", Offset = "0xDCAD94", VA = "0xDCAD94")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xDCBC50", Offset = "0xDCBC50", VA = "0xDCBC50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xDCBC6C", Offset = "0xDCBC6C", VA = "0xDCBC6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xDCBE50", Offset = "0xDCBE50", VA = "0xDCBE50")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xDCBEA8", Offset = "0xDCBEA8", VA = "0xDCBEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170002F5")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xDCA43C", Offset = "0xDCA43C", VA = "0xDCA43C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xDCA544", Offset = "0xDCA544", VA = "0xDCA544", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xDCA610", Offset = "0xDCA610", VA = "0xDCA610", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xDCA6B0", Offset = "0xDCA6B0", VA = "0xDCA6B0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public override int Count
		{
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xDCA78C", Offset = "0xDCA78C", VA = "0xDCA78C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F8")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xDCAC68", Offset = "0xDCAC68", VA = "0xDCAC68", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__14))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xDCA7DC", Offset = "0xDCA7DC", VA = "0xDCA7DC", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xDCA8F0", Offset = "0xDCA8F0", VA = "0xDCA8F0", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xDCA9B4", Offset = "0xDCA9B4", VA = "0xDCA9B4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xDCAA90", Offset = "0xDCAA90", VA = "0xDCAA90", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xDCAD20", Offset = "0xDCAD20", VA = "0xDCAD20", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__15))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xDCADBC", Offset = "0xDCADBC", VA = "0xDCADBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xDCB200", Offset = "0xDCB200", VA = "0xDCB200", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xDCB6C4", Offset = "0xDCB6C4", VA = "0xDCB6C4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xDC7A7C", Offset = "0xDC7A7C", VA = "0xDC7A7C")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170002FD")]
		public override string Value
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xDCBEF0", Offset = "0xDCBEF0", VA = "0xDCBEF0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xDCBEF8", Offset = "0xDCBEF8", VA = "0xDCBEF8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xDC7074", Offset = "0xDC7074", VA = "0xDC7074")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xDC857C", Offset = "0xDC857C", VA = "0xDC857C")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xDC850C", Offset = "0xDC850C", VA = "0xDC850C")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xDC8544", Offset = "0xDC8544", VA = "0xDC8544")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xDC84D4", Offset = "0xDC84D4", VA = "0xDC84D4")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xDCBF00", Offset = "0xDCBF00", VA = "0xDCBF00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xDCBF58", Offset = "0xDCBF58", VA = "0xDCBF58", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xDCBFB0", Offset = "0xDCBFB0", VA = "0xDCBFB0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x20005F4")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170002FE")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xDCC2E0", Offset = "0xDCC2E0", VA = "0xDCC2E0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xDCC340", Offset = "0xDCC340", VA = "0xDCC340", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xDCC3C0", Offset = "0xDCC3C0", VA = "0xDCC3C0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xDCC430", Offset = "0xDCC430", VA = "0xDCC430", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public override int AsInt
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xDCC690", Offset = "0xDCC690", VA = "0xDCC690", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xDCC714", Offset = "0xDCC714", VA = "0xDCC714", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public override float AsFloat
		{
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xDCC79C", Offset = "0xDCC79C", VA = "0xDCC79C", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xDCC820", Offset = "0xDCC820", VA = "0xDCC820", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public override double AsDouble
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xDCC8A8", Offset = "0xDCC8A8", VA = "0xDCC8A8", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xDCC92C", Offset = "0xDCC92C", VA = "0xDCC92C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public override bool AsBool
		{
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xDCC9B4", Offset = "0xDCC9B4", VA = "0xDCC9B4", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xDCCA38", Offset = "0xDCCA38", VA = "0xDCCA38", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xDCCAC0", Offset = "0xDCCAC0", VA = "0xDCCAC0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xDCCB28", Offset = "0xDCCB28", VA = "0xDCCB28", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xDC9390", Offset = "0xDC9390", VA = "0xDC9390")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xDCA500", Offset = "0xDCA500", VA = "0xDCA500")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xDCC280", Offset = "0xDCC280", VA = "0xDCC280")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xDCC4B8", Offset = "0xDCC4B8", VA = "0xDCC4B8", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xDCC538", Offset = "0xDCC538", VA = "0xDCC538", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xDCC5C0", Offset = "0xDCC5C0", VA = "0xDCC5C0")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xDCC5D8", Offset = "0xDCC5D8", VA = "0xDCC5D8")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xDCC5F0", Offset = "0xDCC5F0", VA = "0xDCC5F0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xDCC608", Offset = "0xDCC608", VA = "0xDCC608", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xDCC610", Offset = "0xDCC610", VA = "0xDCC610", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xDCC650", Offset = "0xDCC650", VA = "0xDCC650", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F5")]
	public static class JSON
	{
		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xDCCB90", Offset = "0xDCCB90", VA = "0xDCCB90")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace EnviroSamples
{
	[Token(Token = "0x20005F6")]
	public class DemoUI : MonoBehaviour
	{
		[Token(Token = "0x20005F7")]
		[CompilerGenerated]
		private sealed class <setupDrodown>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoUI <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0xDCD5D0", Offset = "0xDCD5D0", VA = "0xDCD5D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E96")]
				[Address(RVA = "0xDCD618", Offset = "0xDCD618", VA = "0xDCD618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0xDCCD18", Offset = "0xDCCD18", VA = "0xDCCD18")]
			[DebuggerHidden]
			public <setupDrodown>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xDCD358", Offset = "0xDCD358", VA = "0xDCD358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xDCD35C", Offset = "0xDCD35C", VA = "0xDCD35C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xDCD5D8", Offset = "0xDCD5D8", VA = "0xDCD5D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider sliderTime;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Slider sliderQuality;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text timeText;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text weatherText;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text temperatureText;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dropdown weatherDropdown;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool started;

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xDCCB94", Offset = "0xDCCB94", VA = "0xDCCB94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xDCCCA4", Offset = "0xDCCCA4", VA = "0xDCCCA4")]
		[IteratorStateMachine(typeof(<setupDrodown>d__8))]
		private IEnumerator setupDrodown()
		{
			return null;
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xDCCD40", Offset = "0xDCCD40", VA = "0xDCCD40")]
		public void ChangeTimeSlider()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xDCCDCC", Offset = "0xDCCDCC", VA = "0xDCCDCC")]
		public void ChangeCloudQuality(int value)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xDCCDF4", Offset = "0xDCCDF4", VA = "0xDCCDF4")]
		public void ChangeAmbientVolume(float value)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xDCCE24", Offset = "0xDCCE24", VA = "0xDCCE24")]
		public void ChangeWeatherVolume(float value)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xDCCE54", Offset = "0xDCCE54", VA = "0xDCCE54")]
		public void SetWeatherID(int id)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xDCCE7C", Offset = "0xDCCE7C", VA = "0xDCCE7C")]
		public void SetVolumeClouds(bool b)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xDCCEA4", Offset = "0xDCCEA4", VA = "0xDCCEA4")]
		public void SetVolumeLighting(bool b)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xDCCECC", Offset = "0xDCCECC", VA = "0xDCCECC")]
		public void SetFlatClouds(bool b)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xDCCEF4", Offset = "0xDCCEF4", VA = "0xDCCEF4")]
		public void SetParticleClouds(bool b)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xDCCF1C", Offset = "0xDCCF1C", VA = "0xDCCF1C")]
		public void SetSunShafts(bool b)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xDCCF44", Offset = "0xDCCF44", VA = "0xDCCF44")]
		public void SetMoonShafts(bool b)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xDCCF6C", Offset = "0xDCCF6C", VA = "0xDCCF6C")]
		public void SetSeason(int id)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xDCCFF8", Offset = "0xDCCFF8", VA = "0xDCCFF8")]
		public void SetTimeProgress(int id)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xDCD060", Offset = "0xDCD060", VA = "0xDCD060")]
		private void UpdateWeatherSlider()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xDCD1A4", Offset = "0xDCD1A4", VA = "0xDCD1A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xDCD308", Offset = "0xDCD308", VA = "0xDCD308")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xDCD34C", Offset = "0xDCD34C", VA = "0xDCD34C")]
		public DemoUI()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class EventTest : MonoBehaviour
	{
		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xDCD620", Offset = "0xDCD620", VA = "0xDCD620")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xDCDA30", Offset = "0xDCDA30", VA = "0xDCDA30")]
		private void DoOnWeatherChange(EnviroWeatherPreset type)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xDCDA84", Offset = "0xDCDA84", VA = "0xDCDA84")]
		private void DoOnZoneChange(EnviroZone type)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xDCDAD8", Offset = "0xDCDAD8", VA = "0xDCDAD8")]
		public void TestEventsWWeather()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xDCDB1C", Offset = "0xDCDB1C", VA = "0xDCDB1C")]
		public void TestEventsNight()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xDCDB60", Offset = "0xDCDB60", VA = "0xDCDB60")]
		public void TestEventsDay()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xDCDBA4", Offset = "0xDCDBA4", VA = "0xDCDBA4")]
		public EventTest()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class FPSController : MonoBehaviour
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivity;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController player;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject eyes;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float moveFB;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float moveLR;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotX;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rotY;

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xDCDEEC", Offset = "0xDCDEEC", VA = "0xDCDEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xDCDF44", Offset = "0xDCDF44", VA = "0xDCDF44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xDCE150", Offset = "0xDCE150", VA = "0xDCE150")]
		public FPSController()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class SampleHUDFPS : MonoBehaviour
	{
		[Token(Token = "0x20005FC")]
		[CompilerGenerated]
		private sealed class <FPS>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SampleHUDFPS <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0xDCE7E4", Offset = "0xDCE7E4", VA = "0xDCE7E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB4")]
				[Address(RVA = "0xDCE82C", Offset = "0xDCE82C", VA = "0xDCE82C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xDCE23C", Offset = "0xDCE23C", VA = "0xDCE23C")]
			[DebuggerHidden]
			public <FPS>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xDCE650", Offset = "0xDCE650", VA = "0xDCE650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xDCE654", Offset = "0xDCE654", VA = "0xDCE654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xDCE7EC", Offset = "0xDCE7EC", VA = "0xDCE7EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect startRect;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool updateColor;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool allowDrag;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float frequency;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int nbDecimal;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float accum;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int frames;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color color;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string sFPS;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GUIStyle style;

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xDCE160", Offset = "0xDCE160", VA = "0xDCE160")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xDCE1F4", Offset = "0xDCE1F4", VA = "0xDCE1F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xDCE180", Offset = "0xDCE180", VA = "0xDCE180")]
		[IteratorStateMachine(typeof(<FPS>d__12))]
		private IEnumerator FPS()
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xDCE264", Offset = "0xDCE264", VA = "0xDCE264")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xDCE454", Offset = "0xDCE454", VA = "0xDCE454")]
		private void DoMyWindow(int windowID)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xDCE5A0", Offset = "0xDCE5A0", VA = "0xDCE5A0")]
		public SampleHUDFPS()
		{
		}
	}
}
namespace BeautifyEffect
{
	[Token(Token = "0x20005FD")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xDCE834", Offset = "0xDCE834", VA = "0xDCE834")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xDCE878", Offset = "0xDCE878", VA = "0xDCE878")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deltaTime;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool benchmarkEnabled;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect rect;

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xDCE880", Offset = "0xDCE880", VA = "0xDCE880")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xDCEB3C", Offset = "0xDCEB3C", VA = "0xDCEB3C")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xDCEC2C", Offset = "0xDCEC2C", VA = "0xDCEC2C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xDCEE50", Offset = "0xDCEE50", VA = "0xDCEE50")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int demoMode;

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xDCEE58", Offset = "0xDCEE58", VA = "0xDCEE58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xDCF254", Offset = "0xDCF254", VA = "0xDCF254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xDCEE5C", Offset = "0xDCEE5C", VA = "0xDCEE5C")]
		private void UpdateDemoMode()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xDCF688", Offset = "0xDCF688", VA = "0xDCF688")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x2000600")]
	public class Demo4 : MonoBehaviour
	{
		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xDCF690", Offset = "0xDCF690", VA = "0xDCF690")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xDCF7DC", Offset = "0xDCF7DC", VA = "0xDCF7DC")]
		public Demo4()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xDCF7E4", Offset = "0xDCF7E4", VA = "0xDCF7E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xDCF82C", Offset = "0xDCF82C", VA = "0xDCF82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xDD00B8", Offset = "0xDD00B8", VA = "0xDD00B8")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class SphereAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xDD00D4", Offset = "0xDD00D4", VA = "0xDD00D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xDD012C", Offset = "0xDD012C", VA = "0xDD012C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xDD0220", Offset = "0xDD0220", VA = "0xDD0220")]
		public SphereAnimator()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public delegate float OnBeforeFocusEvent(float currentFocusDistance);
	[Token(Token = "0x2000604")]
	public enum BEAUTIFY_QUALITY
	{
		[Token(Token = "0x4001FCA")]
		BestQuality,
		[Token(Token = "0x4001FCB")]
		BestPerformance,
		[Token(Token = "0x4001FCC")]
		Basic
	}
	[Token(Token = "0x2000605")]
	public enum BEAUTIFY_PRESET
	{
		[Token(Token = "0x4001FCE")]
		Soft = 10,
		[Token(Token = "0x4001FCF")]
		Medium = 20,
		[Token(Token = "0x4001FD0")]
		Strong = 30,
		[Token(Token = "0x4001FD1")]
		Exaggerated = 40,
		[Token(Token = "0x4001FD2")]
		Custom = 999
	}
	[Token(Token = "0x2000606")]
	public enum BEAUTIFY_TMO
	{
		[Token(Token = "0x4001FD4")]
		Linear = 0,
		[Token(Token = "0x4001FD5")]
		ACES = 10
	}
	[Token(Token = "0x2000607")]
	public enum BEAUTIFY_PRERENDER_EVENT
	{
		[Token(Token = "0x4001FD7")]
		OnPreCull,
		[Token(Token = "0x4001FD8")]
		OnPreRender
	}
	[Token(Token = "0x2000608")]
	[ImageEffectAllowedInSceneView]
	[HelpURL("http://kronnect.com/taptapgo")]
	[AddComponentMenu("Image Effects/Rendering/Beautify")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class Beautify : MonoBehaviour
	{
		[Token(Token = "0x2000609")]
		[CompilerGenerated]
		private sealed class <DoBlink>d__747 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Beautify <>4__this;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxValue;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <start>5__2;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForEndOfFrame <w>5__4;

			[Token(Token = "0x170003AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002036")]
				[Address(RVA = "0xDDBE9C", Offset = "0xDDBE9C", VA = "0xDDBE9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002038")]
				[Address(RVA = "0xDDBEE4", Offset = "0xDDBEE4", VA = "0xDDBEE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0xDDBCC4", Offset = "0xDDBCC4", VA = "0xDDBCC4")]
			[DebuggerHidden]
			public <DoBlink>d__747(int <>1__state)
			{
			}

			[Token(Token = "0x6002034")]
			[Address(RVA = "0xDDBCEC", Offset = "0xDDBCEC", VA = "0xDDBCEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002035")]
			[Address(RVA = "0xDDBCF0", Offset = "0xDDBCF0", VA = "0xDDBCF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0xDDBEA4", Offset = "0xDDBEA4", VA = "0xDDBEA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BEAUTIFY_PRESET _preset;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BEAUTIFY_QUALITY _quality;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BeautifyProfile _profile;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _syncWithProfile;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _compareMode;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Range(-(float)Math.PI, (float)Math.PI)]
		private float _compareLineAngle;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Range(0.0001f, 0.05f)]
		private float _compareLineWidth;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 0.2f)]
		[SerializeField]
		private float _dither;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _ditherDepth;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sharpenMinDepth;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Range(0f, 1.1f)]
		private float _sharpenMaxDepth;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(0f, 15f)]
		private float _sharpen;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0f, 0.05f)]
		[SerializeField]
		private float _sharpenDepthThreshold;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _tintColor;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 0.2f)]
		[SerializeField]
		private float _sharpenRelaxation;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sharpenClamp;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sharpenMotionSensibility;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[Range(-2f, 3f)]
		private float _saturate;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0.5f, 1.5f)]
		[SerializeField]
		private float _contrast;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _brightness;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Range(0f, 2f)]
		private float _daltonize;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private bool _vignetting;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color _vignettingColor;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _vignettingFade;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _vignettingCircularShape;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _vignettingAspectRatio;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _vignettingBlink;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D _vignettingMask;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _frame;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Color _frameColor;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D _frameMask;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _lut;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _lutIntensity;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Texture2D _lutTexture;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool _nightVision;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Color _nightVisionColor;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _outline;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _outlineColor;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool _thermalVision;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool _lensDirt;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _lensDirtThreshold;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _lensDirtIntensity;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture2D _lensDirtTexture;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool _bloom;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private LayerMask _bloomCullingMask;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[Range(1f, 4f)]
		private float _bloomLayerMaskDownsampling;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[Range(0f, 10f)]
		private float _bloomIntensity;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _bloomMaxBrightness;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Range(0f, 3f)]
		[SerializeField]
		private float _bloomBoost0;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[Range(0f, 3f)]
		private float _bloomBoost1;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[Range(0f, 3f)]
		private float _bloomBoost2;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[Range(0f, 3f)]
		private float _bloomBoost3;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[Range(0f, 3f)]
		[SerializeField]
		private float _bloomBoost4;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[Range(0f, 3f)]
		private float _bloomBoost5;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool _bloomAntiflicker;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[SerializeField]
		private bool _bloomUltra;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Range(1f, 10f)]
		[SerializeField]
		private int _bloomUltraResolution;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[Range(0f, 5f)]
		private float _bloomThreshold;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool _bloomCustomize;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		[SerializeField]
		private bool _bloomDebug;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _bloomWeight0;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _bloomWeight1;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _bloomWeight2;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _bloomWeight3;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _bloomWeight4;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _bloomWeight5;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private bool _bloomBlur;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		[SerializeField]
		private bool _bloomQuickerBlur;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _bloomDepthAtten;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float _bloomLayerZBias;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private BEAUTIFY_PRERENDER_EVENT _preRenderCameraEvent;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private bool _anamorphicFlares;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[Range(0f, 10f)]
		private float _anamorphicFlaresIntensity;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private bool _anamorphicFlaresAntiflicker;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		[SerializeField]
		private bool _anamorphicFlaresUltra;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[Range(1f, 10f)]
		private int _anamorphicUltraResolution;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		[Range(0f, 5f)]
		private float _anamorphicFlaresThreshold;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[Range(0.1f, 2f)]
		private float _anamorphicFlaresSpread;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private bool _anamorphicFlaresVertical;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Color _anamorphicFlaresTint;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private bool _anamorphicFlaresBlur;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		[SerializeField]
		private bool _depthOfField;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		[SerializeField]
		private bool _depthOfFieldTransparencySupport;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private LayerMask _depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Transform _depthOfFieldTargetFocus;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private bool _depthOfFieldDebug;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		[SerializeField]
		private bool _depthOfFieldAutofocus;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Vector2 _depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float _depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private float _depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private LayerMask _depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private LayerMask _depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[Range(1f, 4f)]
		[SerializeField]
		private float _depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[Range(1f, 4f)]
		[SerializeField]
		private float _depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[Range(0.9f, 1f)]
		[SerializeField]
		private float _depthOfFieldExclusionBias;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[Range(1f, 100f)]
		[SerializeField]
		private float _depthOfFieldDistance;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[Range(0.001f, 5f)]
		[SerializeField]
		private float _depthOfFieldFocusSpeed;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[Range(1f, 5f)]
		[SerializeField]
		private int _depthOfFieldDownsampling;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[Range(2f, 16f)]
		[SerializeField]
		private int _depthOfFieldMaxSamples;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[Range(0.005f, 0.5f)]
		[SerializeField]
		private float _depthOfFieldFocalLength;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _depthOfFieldAperture;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlur;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float _depthOfFieldForegroundDistance;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private bool _depthOfFieldBokeh;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[Range(0.5f, 3f)]
		private float _depthOfFieldBokehThreshold;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[Range(0f, 8f)]
		private float _depthOfFieldBokehIntensity;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float _depthOfFieldMaxBrightness;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _depthOfFieldMaxDistance;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private FilterMode _depthOfFieldFilterMode;

		[NonSerialized]
		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public OnBeforeFocusEvent OnBeforeFocus;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private bool _eyeAdaptation;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _eyeAdaptationMinExposure;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[Range(1f, 100f)]
		private float _eyeAdaptationMaxExposure;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _eyeAdaptationSpeedToLight;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _eyeAdaptationSpeedToDark;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _purkinje;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[Range(0f, 5f)]
		private float _purkinjeAmount;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _purkinjeLuminanceThreshold;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private BEAUTIFY_TMO _tonemap;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private bool _sunFlares;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Transform _sun;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private LayerMask _sunFlaresLayerMask;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresIntensity;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresSolarWindSpeed;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		private Color _sunFlaresTint;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		[Range(1f, 5f)]
		private int _sunFlaresDownsampling;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresSunIntensity;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresSunDiskSize;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[Range(0f, 10f)]
		private float _sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		[Range(0f, 0.2f)]
		private float _sunFlaresCoronaRays1Length;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		[Range(2f, 30f)]
		private int _sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[Range(0f, 0.1f)]
		private float _sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[Range(0f, (float)Math.PI * 2f)]
		[SerializeField]
		private float _sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[Range(0f, 0.2f)]
		[SerializeField]
		private float _sunFlaresCoronaRays2Length;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[Range(2f, 30f)]
		private int _sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[Range(0f, 0.1f)]
		[SerializeField]
		private float _sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		[Range(0f, (float)Math.PI * 2f)]
		private float _sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresGhosts1Size;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		[Range(-3f, 3f)]
		private float _sunFlaresGhosts1Offset;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _sunFlaresGhosts1Brightness;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _sunFlaresGhosts2Size;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[Range(-3f, 3f)]
		[SerializeField]
		private float _sunFlaresGhosts2Offset;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _sunFlaresGhosts2Brightness;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _sunFlaresGhosts3Size;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[Range(-3f, 3f)]
		[SerializeField]
		private float _sunFlaresGhosts3Brightness;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresGhosts3Offset;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresGhosts4Size;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		[Range(-3f, 3f)]
		private float _sunFlaresGhosts4Offset;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresGhosts4Brightness;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresHaloOffset;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[SerializeField]
		[Range(0f, 50f)]
		private float _sunFlaresHaloAmplitude;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunFlaresHaloIntensity;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private bool _sunFlaresRotationDeadZone;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
		[SerializeField]
		private bool _blur;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		[Range(0f, 4f)]
		private float _blurIntensity;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[SerializeField]
		[Range(1f, 8f)]
		private int _downscale;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[Range(1f, 256f)]
		[SerializeField]
		private int _pixelateAmount;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private bool _pixelateDownscale;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[Range(0f, 20f)]
		[SerializeField]
		private float _antialiasStrength;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[SerializeField]
		[Range(0f, 0.05f)]
		private float _antialiasDepthThreshold;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public bool isDirty;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Beautify _beautify;

		[Token(Token = "0x400207E")]
		public const string SKW_BLOOM = "BEAUTIFY_BLOOM";

		[Token(Token = "0x400207F")]
		public const string SKW_LUT = "BEAUTIFY_LUT";

		[Token(Token = "0x4002080")]
		public const string SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";

		[Token(Token = "0x4002081")]
		public const string SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";

		[Token(Token = "0x4002082")]
		public const string SKW_OUTLINE = "BEAUTIFY_OUTLINE";

		[Token(Token = "0x4002083")]
		public const string SKW_FRAME = "BEAUTIFY_FRAME";

		[Token(Token = "0x4002084")]
		public const string SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";

		[Token(Token = "0x4002085")]
		public const string SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";

		[Token(Token = "0x4002086")]
		public const string SKW_DIRT = "BEAUTIFY_DIRT";

		[Token(Token = "0x4002087")]
		public const string SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";

		[Token(Token = "0x4002088")]
		public const string SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";

		[Token(Token = "0x4002089")]
		public const string SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";

		[Token(Token = "0x400208A")]
		public const string SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";

		[Token(Token = "0x400208B")]
		public const string SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";

		[Token(Token = "0x400208C")]
		public const string SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";

		[Token(Token = "0x400208D")]
		public const string SKW_PURKINJE = "BEAUTIFY_PURKINJE";

		[Token(Token = "0x400208E")]
		public const string SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";

		[Token(Token = "0x400208F")]
		public const string SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material bMatDesktop;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material bMatMobile;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material bMatBasic;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private Material bMat;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Camera currentCamera;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Vector3 camPrevForward;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private Vector3 camPrevPos;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private float currSens;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private int renderPass;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private RenderTexture[] rt;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTexture[] rtAF;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private RenderTexture[] rtEA;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private RenderTexture rtEAacum;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private RenderTexture rtEAHist;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float dofPrevDistance;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private float dofLastAutofocusDistance;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private Vector4 dofLastBokehData;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Camera sceneCamera;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Camera depthCam;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private GameObject depthCamObj;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Shader depthShader;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private Shader dofExclusionShader;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x40020A9")]
		private const string BEAUTIFY_BUILD_HINT = "BeautifyBuildHint731RC1";

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private float sunFlareCurrentIntensity;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private Vector4 sunLastScrPos;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private float sunLastRot;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Texture2D flareNoise;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private RenderTexture dofDepthTexture;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderTexture dofExclusionTexture;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private RenderTexture bloomSourceTexture;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private RenderTexture bloomSourceDepthTexture;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private RenderTexture bloomSourceTextureRightEye;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture bloomSourceDepthTextureRightEye;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture pixelateTexture;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTextureDescriptor rtDescBase;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float sunFlareTime;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private int dofCurrentLayerMaskValue;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private int bloomCurrentLayerMaskValue;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private int eyeWidth;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		private int eyeHeight;

		[Token(Token = "0x1700030A")]
		public BEAUTIFY_PRESET preset
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xDD03BC", Offset = "0xDD03BC", VA = "0xDD03BC")]
			get
			{
				return default(BEAUTIFY_PRESET);
			}
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xDD03C4", Offset = "0xDD03C4", VA = "0xDD03C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public BEAUTIFY_QUALITY quality
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xDD0434", Offset = "0xDD0434", VA = "0xDD0434")]
			get
			{
				return default(BEAUTIFY_QUALITY);
			}
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xDD043C", Offset = "0xDD043C", VA = "0xDD043C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public BeautifyProfile profile
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xDD04EC", Offset = "0xDD04EC", VA = "0xDD04EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xDD04F4", Offset = "0xDD04F4", VA = "0xDD04F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public bool syncWithProfile
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xDD05C4", Offset = "0xDD05C4", VA = "0xDD05C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xDD05CC", Offset = "0xDD05CC", VA = "0xDD05CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public bool compareMode
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xDD05D8", Offset = "0xDD05D8", VA = "0xDD05D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xDD05E0", Offset = "0xDD05E0", VA = "0xDD05E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public float compareLineAngle
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xDD0624", Offset = "0xDD0624", VA = "0xDD0624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xDD062C", Offset = "0xDD062C", VA = "0xDD062C")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public float compareLineWidth
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xDD066C", Offset = "0xDD066C", VA = "0xDD066C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xDD0674", Offset = "0xDD0674", VA = "0xDD0674")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public float dither
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xDD06B4", Offset = "0xDD06B4", VA = "0xDD06B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xDD06BC", Offset = "0xDD06BC", VA = "0xDD06BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public float ditherDepth
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xDD0704", Offset = "0xDD0704", VA = "0xDD0704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xDD070C", Offset = "0xDD070C", VA = "0xDD070C")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public float sharpenMinDepth
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xDD0754", Offset = "0xDD0754", VA = "0xDD0754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xDD075C", Offset = "0xDD075C", VA = "0xDD075C")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public float sharpenMaxDepth
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xDD079C", Offset = "0xDD079C", VA = "0xDD079C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xDD07A4", Offset = "0xDD07A4", VA = "0xDD07A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public float sharpenMinMaxDepthFallOff
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xDD07E4", Offset = "0xDD07E4", VA = "0xDD07E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xDD07EC", Offset = "0xDD07EC", VA = "0xDD07EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public float sharpen
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xDD082C", Offset = "0xDD082C", VA = "0xDD082C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xDD0834", Offset = "0xDD0834", VA = "0xDD0834")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public float sharpenDepthThreshold
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xDD087C", Offset = "0xDD087C", VA = "0xDD087C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xDD0884", Offset = "0xDD0884", VA = "0xDD0884")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public Color tintColor
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xDD08CC", Offset = "0xDD08CC", VA = "0xDD08CC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xDD08D8", Offset = "0xDD08D8", VA = "0xDD08D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float sharpenRelaxation
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xDD0954", Offset = "0xDD0954", VA = "0xDD0954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xDD095C", Offset = "0xDD095C", VA = "0xDD095C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public float sharpenClamp
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xDD09A4", Offset = "0xDD09A4", VA = "0xDD09A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xDD09AC", Offset = "0xDD09AC", VA = "0xDD09AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public float sharpenMotionSensibility
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xDD09F4", Offset = "0xDD09F4", VA = "0xDD09F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xDD09FC", Offset = "0xDD09FC", VA = "0xDD09FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public float saturate
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xDD0A3C", Offset = "0xDD0A3C", VA = "0xDD0A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xDD0A44", Offset = "0xDD0A44", VA = "0xDD0A44")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public float contrast
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xDD0A8C", Offset = "0xDD0A8C", VA = "0xDD0A8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xDD0A94", Offset = "0xDD0A94", VA = "0xDD0A94")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public float brightness
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xDD0ADC", Offset = "0xDD0ADC", VA = "0xDD0ADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xDD0AE4", Offset = "0xDD0AE4", VA = "0xDD0AE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public float daltonize
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xDD0B2C", Offset = "0xDD0B2C", VA = "0xDD0B2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xDD0B34", Offset = "0xDD0B34", VA = "0xDD0B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public bool vignetting
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xDD0B7C", Offset = "0xDD0B7C", VA = "0xDD0B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xDCF488", Offset = "0xDCF488", VA = "0xDCF488")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public Color vignettingColor
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xDD0B84", Offset = "0xDD0B84", VA = "0xDD0B84")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xDCF554", Offset = "0xDCF554", VA = "0xDCF554")]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public float vignettingFade
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xDD0B90", Offset = "0xDD0B90", VA = "0xDD0B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xDD0B98", Offset = "0xDD0B98", VA = "0xDD0B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool vignettingCircularShape
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xDD0BD8", Offset = "0xDD0BD8", VA = "0xDD0BD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xDD0BE0", Offset = "0xDD0BE0", VA = "0xDD0BE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public float vignettingAspectRatio
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xDD0C24", Offset = "0xDD0C24", VA = "0xDD0C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xDD0C2C", Offset = "0xDD0C2C", VA = "0xDD0C2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public float vignettingBlink
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xDD0C6C", Offset = "0xDD0C6C", VA = "0xDD0C6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xDD0C74", Offset = "0xDD0C74", VA = "0xDD0C74")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Texture2D vignettingMask
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xDD0CB4", Offset = "0xDD0CB4", VA = "0xDD0CB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xDD0CBC", Offset = "0xDD0CBC", VA = "0xDD0CBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public bool frame
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xDD0D6C", Offset = "0xDD0D6C", VA = "0xDD0D6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xDCF4CC", Offset = "0xDCF4CC", VA = "0xDCF4CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public Color frameColor
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xDD0D74", Offset = "0xDD0D74", VA = "0xDD0D74")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xDD0D80", Offset = "0xDD0D80", VA = "0xDD0D80")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public Texture2D frameMask
		{
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xDD0DFC", Offset = "0xDD0DFC", VA = "0xDD0DFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xDD0E04", Offset = "0xDD0E04", VA = "0xDD0E04")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public bool lut
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xDD0EB4", Offset = "0xDD0EB4", VA = "0xDD0EB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xDCF2B4", Offset = "0xDCF2B4", VA = "0xDCF2B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public float lutIntensity
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xDD0EBC", Offset = "0xDD0EBC", VA = "0xDD0EBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xDD0EC4", Offset = "0xDD0EC4", VA = "0xDD0EC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public Texture2D lutTexture
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xDD0F04", Offset = "0xDD0F04", VA = "0xDD0F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xDD0F0C", Offset = "0xDD0F0C", VA = "0xDD0F0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public bool nightVision
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xDD0FBC", Offset = "0xDD0FBC", VA = "0xDD0FBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xDCF348", Offset = "0xDCF348", VA = "0xDCF348")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public Color nightVisionColor
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xDD0FC4", Offset = "0xDD0FC4", VA = "0xDD0FC4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xDD0FD0", Offset = "0xDD0FD0", VA = "0xDD0FD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public bool outline
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xDD104C", Offset = "0xDD104C", VA = "0xDD104C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xDCF304", Offset = "0xDCF304", VA = "0xDCF304")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public Color outlineColor
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xDD1054", Offset = "0xDD1054", VA = "0xDD1054")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xDD1060", Offset = "0xDD1060", VA = "0xDD1060")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public bool thermalVision
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xDD10DC", Offset = "0xDD10DC", VA = "0xDD10DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xDCF614", Offset = "0xDCF614", VA = "0xDCF614")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public bool lensDirt
		{
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xDD10E4", Offset = "0xDD10E4", VA = "0xDD10E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xDCF444", Offset = "0xDCF444", VA = "0xDCF444")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public float lensDirtThreshold
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xDD10EC", Offset = "0xDD10EC", VA = "0xDD10EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xDD10F4", Offset = "0xDD10F4", VA = "0xDD10F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public float lensDirtIntensity
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xDD1134", Offset = "0xDD1134", VA = "0xDD1134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xDD113C", Offset = "0xDD113C", VA = "0xDD113C")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public Texture2D lensDirtTexture
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xDD117C", Offset = "0xDD117C", VA = "0xDD117C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xDD1184", Offset = "0xDD1184", VA = "0xDD1184")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public bool bloom
		{
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xDD1230", Offset = "0xDD1230", VA = "0xDD1230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xDCF3BC", Offset = "0xDCF3BC", VA = "0xDCF3BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public LayerMask bloomCullingMask
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xDD1238", Offset = "0xDD1238", VA = "0xDD1238")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xDD1240", Offset = "0xDD1240", VA = "0xDD1240")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public float bloomLayerMaskDownsampling
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xDD12A8", Offset = "0xDD12A8", VA = "0xDD12A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xDD12B0", Offset = "0xDD12B0", VA = "0xDD12B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public float bloomIntensity
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0xDD12F8", Offset = "0xDD12F8", VA = "0xDD12F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xDCEAF8", Offset = "0xDCEAF8", VA = "0xDCEAF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public float bloomMaxBrightness
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xDD1300", Offset = "0xDD1300", VA = "0xDD1300")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xDD1308", Offset = "0xDD1308", VA = "0xDD1308")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public float bloomBoost0
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xDD134C", Offset = "0xDD134C", VA = "0xDD134C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xDD1354", Offset = "0xDD1354", VA = "0xDD1354")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public float bloomBoost1
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xDD1394", Offset = "0xDD1394", VA = "0xDD1394")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xDD139C", Offset = "0xDD139C", VA = "0xDD139C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public float bloomBoost2
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xDD13DC", Offset = "0xDD13DC", VA = "0xDD13DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xDD13E4", Offset = "0xDD13E4", VA = "0xDD13E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public float bloomBoost3
		{
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xDD1424", Offset = "0xDD1424", VA = "0xDD1424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xDD142C", Offset = "0xDD142C", VA = "0xDD142C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public float bloomBoost4
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xDD146C", Offset = "0xDD146C", VA = "0xDD146C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xDD1474", Offset = "0xDD1474", VA = "0xDD1474")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public float bloomBoost5
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xDD14B4", Offset = "0xDD14B4", VA = "0xDD14B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xDD14BC", Offset = "0xDD14BC", VA = "0xDD14BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public bool bloomAntiflicker
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xDD14FC", Offset = "0xDD14FC", VA = "0xDD14FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xDD1504", Offset = "0xDD1504", VA = "0xDD1504")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public bool bloomUltra
		{
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xDD1548", Offset = "0xDD1548", VA = "0xDD1548")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xDD1550", Offset = "0xDD1550", VA = "0xDD1550")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public int bloomUltraResolution
		{
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xDD1594", Offset = "0xDD1594", VA = "0xDD1594")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xDD159C", Offset = "0xDD159C", VA = "0xDD159C")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xDD15DC", Offset = "0xDD15DC", VA = "0xDD15DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xDD15E4", Offset = "0xDD15E4", VA = "0xDD15E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool bloomCustomize
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xDD1624", Offset = "0xDD1624", VA = "0xDD1624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xDD162C", Offset = "0xDD162C", VA = "0xDD162C")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public bool bloomDebug
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xDD1670", Offset = "0xDD1670", VA = "0xDD1670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xDD1678", Offset = "0xDD1678", VA = "0xDD1678")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public float bloomWeight0
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xDD16BC", Offset = "0xDD16BC", VA = "0xDD16BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xDD16C4", Offset = "0xDD16C4", VA = "0xDD16C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public float bloomWeight1
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xDD1704", Offset = "0xDD1704", VA = "0xDD1704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xDD170C", Offset = "0xDD170C", VA = "0xDD170C")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public float bloomWeight2
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xDD174C", Offset = "0xDD174C", VA = "0xDD174C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xDD1754", Offset = "0xDD1754", VA = "0xDD1754")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public float bloomWeight3
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xDD1794", Offset = "0xDD1794", VA = "0xDD1794")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xDD179C", Offset = "0xDD179C", VA = "0xDD179C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public float bloomWeight4
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xDD17DC", Offset = "0xDD17DC", VA = "0xDD17DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xDD17E4", Offset = "0xDD17E4", VA = "0xDD17E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public float bloomWeight5
		{
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0xDD1824", Offset = "0xDD1824", VA = "0xDD1824")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xDD182C", Offset = "0xDD182C", VA = "0xDD182C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public bool bloomBlur
		{
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xDD186C", Offset = "0xDD186C", VA = "0xDD186C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0xDD1874", Offset = "0xDD1874", VA = "0xDD1874")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public bool bloomQuickerBlur
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xDD18B8", Offset = "0xDD18B8", VA = "0xDD18B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xDD18C0", Offset = "0xDD18C0", VA = "0xDD18C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public float bloomDepthAtten
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xDD1904", Offset = "0xDD1904", VA = "0xDD1904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0xDD190C", Offset = "0xDD190C", VA = "0xDD190C")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public float bloomLayerZBias
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xDD194C", Offset = "0xDD194C", VA = "0xDD194C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xDD1954", Offset = "0xDD1954", VA = "0xDD1954")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public BEAUTIFY_PRERENDER_EVENT preRenderCameraEvent
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xDD19A8", Offset = "0xDD19A8", VA = "0xDD19A8")]
			get
			{
				return default(BEAUTIFY_PRERENDER_EVENT);
			}
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xDD19B0", Offset = "0xDD19B0", VA = "0xDD19B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public bool anamorphicFlares
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xDD19C4", Offset = "0xDD19C4", VA = "0xDD19C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xDCF400", Offset = "0xDCF400", VA = "0xDCF400")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public float anamorphicFlaresIntensity
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xDD19CC", Offset = "0xDD19CC", VA = "0xDD19CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xDD19D4", Offset = "0xDD19D4", VA = "0xDD19D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool anamorphicFlaresAntiflicker
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xDD1A18", Offset = "0xDD1A18", VA = "0xDD1A18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0xDD1A20", Offset = "0xDD1A20", VA = "0xDD1A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public bool anamorphicFlaresUltra
		{
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xDD1A64", Offset = "0xDD1A64", VA = "0xDD1A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0xDD1A6C", Offset = "0xDD1A6C", VA = "0xDD1A6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public int anamorphicUltraResolution
		{
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0xDD1AB0", Offset = "0xDD1AB0", VA = "0xDD1AB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0xDD1AB8", Offset = "0xDD1AB8", VA = "0xDD1AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public float anamorphicFlaresThreshold
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xDD1AF8", Offset = "0xDD1AF8", VA = "0xDD1AF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0xDD1B00", Offset = "0xDD1B00", VA = "0xDD1B00")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public float anamorphicFlaresSpread
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xDD1B40", Offset = "0xDD1B40", VA = "0xDD1B40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xDD1B48", Offset = "0xDD1B48", VA = "0xDD1B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public bool anamorphicFlaresVertical
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xDD1B88", Offset = "0xDD1B88", VA = "0xDD1B88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xDCF5D0", Offset = "0xDCF5D0", VA = "0xDCF5D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public Color anamorphicFlaresTint
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xDD1B90", Offset = "0xDD1B90", VA = "0xDD1B90")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xDD1BA4", Offset = "0xDD1BA4", VA = "0xDD1BA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public bool anamorphicFlaresBlur
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xDD1C30", Offset = "0xDD1C30", VA = "0xDD1C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xDD1C38", Offset = "0xDD1C38", VA = "0xDD1C38")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public bool depthOfField
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xDD1C7C", Offset = "0xDD1C7C", VA = "0xDD1C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xDD1C84", Offset = "0xDD1C84", VA = "0xDD1C84")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public bool depthOfFieldTransparencySupport
		{
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xDD1CC8", Offset = "0xDD1CC8", VA = "0xDD1CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xDCF798", Offset = "0xDCF798", VA = "0xDCF798")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public LayerMask depthOfFieldTransparencyLayerMask
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xDD1CD0", Offset = "0xDD1CD0", VA = "0xDD1CD0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xDD1CD8", Offset = "0xDD1CD8", VA = "0xDD1CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public Transform depthOfFieldTargetFocus
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xDD1D40", Offset = "0xDD1D40", VA = "0xDD1D40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xDD1D48", Offset = "0xDD1D48", VA = "0xDD1D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public bool depthOfFieldDebug
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xDD1DF4", Offset = "0xDD1DF4", VA = "0xDD1DF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xDD1DFC", Offset = "0xDD1DFC", VA = "0xDD1DFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public bool depthOfFieldAutofocus
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xDD1E40", Offset = "0xDD1E40", VA = "0xDD1E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xDD1E48", Offset = "0xDD1E48", VA = "0xDD1E48")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public Vector2 depthofFieldAutofocusViewportPoint
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xDD1E8C", Offset = "0xDD1E8C", VA = "0xDD1E8C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xDD1E98", Offset = "0xDD1E98", VA = "0xDD1E98")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public float depthOfFieldAutofocusMinDistance
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xDD1EFC", Offset = "0xDD1EFC", VA = "0xDD1EFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0xDD1F04", Offset = "0xDD1F04", VA = "0xDD1F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public float depthOfFieldAutofocusMaxDistance
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xDD1F44", Offset = "0xDD1F44", VA = "0xDD1F44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xDD1F4C", Offset = "0xDD1F4C", VA = "0xDD1F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public LayerMask depthOfFieldAutofocusLayerMask
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xDD1F8C", Offset = "0xDD1F8C", VA = "0xDD1F8C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xDD1F94", Offset = "0xDD1F94", VA = "0xDD1F94")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public LayerMask depthOfFieldExclusionLayerMask
		{
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xDD1FFC", Offset = "0xDD1FFC", VA = "0xDD1FFC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xDD2004", Offset = "0xDD2004", VA = "0xDD2004")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public float depthOfFieldExclusionLayerMaskDownsampling
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xDD206C", Offset = "0xDD206C", VA = "0xDD206C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xDD2074", Offset = "0xDD2074", VA = "0xDD2074")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public float depthOfFieldTransparencySupportDownsampling
		{
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xDD20BC", Offset = "0xDD20BC", VA = "0xDD20BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xDD20C4", Offset = "0xDD20C4", VA = "0xDD20C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public float depthOfFieldExclusionBias
		{
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xDD210C", Offset = "0xDD210C", VA = "0xDD210C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xDD2114", Offset = "0xDD2114", VA = "0xDD2114")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public float depthOfFieldDistance
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xDD2168", Offset = "0xDD2168", VA = "0xDD2168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xDD2170", Offset = "0xDD2170", VA = "0xDD2170")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public float depthOfFieldFocusSpeed
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xDD21B8", Offset = "0xDD21B8", VA = "0xDD21B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xDD21C0", Offset = "0xDD21C0", VA = "0xDD21C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public int depthOfFieldDownsampling
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xDD2218", Offset = "0xDD2218", VA = "0xDD2218")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xDD2220", Offset = "0xDD2220", VA = "0xDD2220")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public int depthOfFieldMaxSamples
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xDD2268", Offset = "0xDD2268", VA = "0xDD2268")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xDD2270", Offset = "0xDD2270", VA = "0xDD2270")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public float depthOfFieldFocalLength
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xDD22BC", Offset = "0xDD22BC", VA = "0xDD22BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xDD22C4", Offset = "0xDD22C4", VA = "0xDD22C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public float depthOfFieldAperture
		{
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xDD2308", Offset = "0xDD2308", VA = "0xDD2308")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xDD2310", Offset = "0xDD2310", VA = "0xDD2310")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public bool depthOfFieldForegroundBlur
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xDD2354", Offset = "0xDD2354", VA = "0xDD2354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0xDD235C", Offset = "0xDD235C", VA = "0xDD235C")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public bool depthOfFieldForegroundBlurHQ
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xDD23A0", Offset = "0xDD23A0", VA = "0xDD23A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xDD23A8", Offset = "0xDD23A8", VA = "0xDD23A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public float depthOfFieldForegroundDistance
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xDD23EC", Offset = "0xDD23EC", VA = "0xDD23EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xDD23F4", Offset = "0xDD23F4", VA = "0xDD23F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public bool depthOfFieldBokeh
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xDD2434", Offset = "0xDD2434", VA = "0xDD2434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xDD243C", Offset = "0xDD243C", VA = "0xDD243C")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public float depthOfFieldBokehThreshold
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xDD2480", Offset = "0xDD2480", VA = "0xDD2480")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xDD2488", Offset = "0xDD2488", VA = "0xDD2488")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public float depthOfFieldBokehIntensity
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xDD24D0", Offset = "0xDD24D0", VA = "0xDD24D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xDD24D8", Offset = "0xDD24D8", VA = "0xDD24D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public float depthOfFieldMaxBrightness
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xDD2520", Offset = "0xDD2520", VA = "0xDD2520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xDD2528", Offset = "0xDD2528", VA = "0xDD2528")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public float depthOfFieldMaxDistance
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xDD256C", Offset = "0xDD256C", VA = "0xDD256C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xDD2574", Offset = "0xDD2574", VA = "0xDD2574")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public FilterMode depthOfFieldFilterMode
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xDD25B8", Offset = "0xDD25B8", VA = "0xDD25B8")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xDD25C0", Offset = "0xDD25C0", VA = "0xDD25C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public bool eyeAdaptation
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xDD2600", Offset = "0xDD2600", VA = "0xDD2600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xDD2608", Offset = "0xDD2608", VA = "0xDD2608")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public float eyeAdaptationMinExposure
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xDD264C", Offset = "0xDD264C", VA = "0xDD264C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0xDD2654", Offset = "0xDD2654", VA = "0xDD2654")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public float eyeAdaptationMaxExposure
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0xDD26A8", Offset = "0xDD26A8", VA = "0xDD26A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xDD26B0", Offset = "0xDD26B0", VA = "0xDD26B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public float eyeAdaptationSpeedToLight
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xDD2708", Offset = "0xDD2708", VA = "0xDD2708")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xDD2710", Offset = "0xDD2710", VA = "0xDD2710")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public float eyeAdaptationSpeedToDark
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xDD2764", Offset = "0xDD2764", VA = "0xDD2764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0xDD276C", Offset = "0xDD276C", VA = "0xDD276C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public bool purkinje
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xDD27C0", Offset = "0xDD27C0", VA = "0xDD27C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xDD27C8", Offset = "0xDD27C8", VA = "0xDD27C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public float purkinjeAmount
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0xDD280C", Offset = "0xDD280C", VA = "0xDD280C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0xDD2814", Offset = "0xDD2814", VA = "0xDD2814")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public float purkinjeLuminanceThreshold
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xDD2868", Offset = "0xDD2868", VA = "0xDD2868")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0xDD2870", Offset = "0xDD2870", VA = "0xDD2870")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public BEAUTIFY_TMO tonemap
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xDD28C4", Offset = "0xDD28C4", VA = "0xDD28C4")]
			get
			{
				return default(BEAUTIFY_TMO);
			}
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xDD28CC", Offset = "0xDD28CC", VA = "0xDD28CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public bool sunFlares
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xDD2920", Offset = "0xDD2920", VA = "0xDD2920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xDCF510", Offset = "0xDCF510", VA = "0xDCF510")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public Transform sun
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xDD2928", Offset = "0xDD2928", VA = "0xDD2928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0xDD2930", Offset = "0xDD2930", VA = "0xDD2930")]
			set
			{
			}
		}

		[Token(Token = "0x17000384")]
		public LayerMask sunFlaresLayerMask
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0xDD29DC", Offset = "0xDD29DC", VA = "0xDD29DC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0xDD29E4", Offset = "0xDD29E4", VA = "0xDD29E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public float sunFlaresIntensity
		{
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xDD2A4C", Offset = "0xDD2A4C", VA = "0xDD2A4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xDD2A54", Offset = "0xDD2A54", VA = "0xDD2A54")]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public float sunFlaresSolarWindSpeed
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0xDD2A94", Offset = "0xDD2A94", VA = "0xDD2A94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0xDD2A9C", Offset = "0xDD2A9C", VA = "0xDD2A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public Color sunFlaresTint
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xDD2ADC", Offset = "0xDD2ADC", VA = "0xDD2ADC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xDD2AF0", Offset = "0xDD2AF0", VA = "0xDD2AF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public int sunFlaresDownsampling
		{
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xDD2B7C", Offset = "0xDD2B7C", VA = "0xDD2B7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xDD2B84", Offset = "0xDD2B84", VA = "0xDD2B84")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public float sunFlaresSunIntensity
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xDD2BCC", Offset = "0xDD2BCC", VA = "0xDD2BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xDD2BD4", Offset = "0xDD2BD4", VA = "0xDD2BD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public float sunFlaresSunDiskSize
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0xDD2C14", Offset = "0xDD2C14", VA = "0xDD2C14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xDD2C1C", Offset = "0xDD2C1C", VA = "0xDD2C1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public float sunFlaresSunRayDiffractionIntensity
		{
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xDD2C5C", Offset = "0xDD2C5C", VA = "0xDD2C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xDD2C64", Offset = "0xDD2C64", VA = "0xDD2C64")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public float sunFlaresSunRayDiffractionThreshold
		{
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xDD2CA4", Offset = "0xDD2CA4", VA = "0xDD2CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xDD2CAC", Offset = "0xDD2CAC", VA = "0xDD2CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public float sunFlaresCoronaRays1Length
		{
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0xDD2CEC", Offset = "0xDD2CEC", VA = "0xDD2CEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xDD2CF4", Offset = "0xDD2CF4", VA = "0xDD2CF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public int sunFlaresCoronaRays1Streaks
		{
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xDD2D34", Offset = "0xDD2D34", VA = "0xDD2D34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xDD2D3C", Offset = "0xDD2D3C", VA = "0xDD2D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public float sunFlaresCoronaRays1Spread
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0xDD2D7C", Offset = "0xDD2D7C", VA = "0xDD2D7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xDD2D84", Offset = "0xDD2D84", VA = "0xDD2D84")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public float sunFlaresCoronaRays1AngleOffset
		{
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xDD2DC4", Offset = "0xDD2DC4", VA = "0xDD2DC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xDD2DCC", Offset = "0xDD2DCC", VA = "0xDD2DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public float sunFlaresCoronaRays2Length
		{
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xDD2E0C", Offset = "0xDD2E0C", VA = "0xDD2E0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xDD2E14", Offset = "0xDD2E14", VA = "0xDD2E14")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public int sunFlaresCoronaRays2Streaks
		{
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xDD2E54", Offset = "0xDD2E54", VA = "0xDD2E54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xDD2E5C", Offset = "0xDD2E5C", VA = "0xDD2E5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public float sunFlaresCoronaRays2Spread
		{
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xDD2E9C", Offset = "0xDD2E9C", VA = "0xDD2E9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xDD2EA4", Offset = "0xDD2EA4", VA = "0xDD2EA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public float sunFlaresCoronaRays2AngleOffset
		{
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xDD2EE4", Offset = "0xDD2EE4", VA = "0xDD2EE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xDD2EEC", Offset = "0xDD2EEC", VA = "0xDD2EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public float sunFlaresGhosts1Size
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xDD2F2C", Offset = "0xDD2F2C", VA = "0xDD2F2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xDD2F34", Offset = "0xDD2F34", VA = "0xDD2F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public float sunFlaresGhosts1Offset
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xDD2F74", Offset = "0xDD2F74", VA = "0xDD2F74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xDD2F7C", Offset = "0xDD2F7C", VA = "0xDD2F7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public float sunFlaresGhosts1Brightness
		{
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xDD2FBC", Offset = "0xDD2FBC", VA = "0xDD2FBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xDD2FC4", Offset = "0xDD2FC4", VA = "0xDD2FC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public float sunFlaresGhosts2Size
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xDD3004", Offset = "0xDD3004", VA = "0xDD3004")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xDD300C", Offset = "0xDD300C", VA = "0xDD300C")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public float sunFlaresGhosts2Offset
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xDD304C", Offset = "0xDD304C", VA = "0xDD304C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xDD3054", Offset = "0xDD3054", VA = "0xDD3054")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public float sunFlaresGhosts2Brightness
		{
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xDD3094", Offset = "0xDD3094", VA = "0xDD3094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xDD309C", Offset = "0xDD309C", VA = "0xDD309C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public float sunFlaresGhosts3Size
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xDD30DC", Offset = "0xDD30DC", VA = "0xDD30DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xDD30E4", Offset = "0xDD30E4", VA = "0xDD30E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public float sunFlaresGhosts3Brightness
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xDD3124", Offset = "0xDD3124", VA = "0xDD3124")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xDD312C", Offset = "0xDD312C", VA = "0xDD312C")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public float sunFlaresGhosts3Offset
		{
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xDD316C", Offset = "0xDD316C", VA = "0xDD316C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xDD3174", Offset = "0xDD3174", VA = "0xDD3174")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public float sunFlaresGhosts4Size
		{
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0xDD31B4", Offset = "0xDD31B4", VA = "0xDD31B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xDD31BC", Offset = "0xDD31BC", VA = "0xDD31BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public float sunFlaresGhosts4Offset
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xDD31FC", Offset = "0xDD31FC", VA = "0xDD31FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xDD3204", Offset = "0xDD3204", VA = "0xDD3204")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public float sunFlaresGhosts4Brightness
		{
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xDD3244", Offset = "0xDD3244", VA = "0xDD3244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xDD324C", Offset = "0xDD324C", VA = "0xDD324C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public float sunFlaresHaloOffset
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xDD328C", Offset = "0xDD328C", VA = "0xDD328C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xDD3294", Offset = "0xDD3294", VA = "0xDD3294")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public float sunFlaresHaloAmplitude
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xDD32D4", Offset = "0xDD32D4", VA = "0xDD32D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xDD32DC", Offset = "0xDD32DC", VA = "0xDD32DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public float sunFlaresHaloIntensity
		{
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xDD331C", Offset = "0xDD331C", VA = "0xDD331C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xDD3324", Offset = "0xDD3324", VA = "0xDD3324")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public bool sunFlaresRotationDeadZone
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xDD3364", Offset = "0xDD3364", VA = "0xDD3364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002000")]
			[Address(RVA = "0xDD336C", Offset = "0xDD336C", VA = "0xDD336C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public bool blur
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0xDD33B0", Offset = "0xDD33B0", VA = "0xDD33B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xDD33B8", Offset = "0xDD33B8", VA = "0xDD33B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public float blurIntensity
		{
			[Token(Token = "0x6002003")]
			[Address(RVA = "0xDD33FC", Offset = "0xDD33FC", VA = "0xDD33FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002004")]
			[Address(RVA = "0xDD3404", Offset = "0xDD3404", VA = "0xDD3404")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public int downscale
		{
			[Token(Token = "0x6002005")]
			[Address(RVA = "0xDD3444", Offset = "0xDD3444", VA = "0xDD3444")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002006")]
			[Address(RVA = "0xDD344C", Offset = "0xDD344C", VA = "0xDD344C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public int pixelateAmount
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0xDD348C", Offset = "0xDD348C", VA = "0xDD348C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002008")]
			[Address(RVA = "0xDD3494", Offset = "0xDD3494", VA = "0xDD3494")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public bool pixelateDownscale
		{
			[Token(Token = "0x6002009")]
			[Address(RVA = "0xDD34D4", Offset = "0xDD34D4", VA = "0xDD34D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600200A")]
			[Address(RVA = "0xDD34DC", Offset = "0xDD34DC", VA = "0xDD34DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public float antialiasStrength
		{
			[Token(Token = "0x600200B")]
			[Address(RVA = "0xDD3520", Offset = "0xDD3520", VA = "0xDD3520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600200C")]
			[Address(RVA = "0xDD3528", Offset = "0xDD3528", VA = "0xDD3528")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public float antialiasDepthThreshold
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0xDD3568", Offset = "0xDD3568", VA = "0xDD3568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600200E")]
			[Address(RVA = "0xDD3570", Offset = "0xDD3570", VA = "0xDD3570")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public static Beautify instance
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0xDCE9A8", Offset = "0xDCE9A8", VA = "0xDCE9A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public Camera cameraEffect
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0xDD35B0", Offset = "0xDD35B0", VA = "0xDD35B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public float depthOfFieldCurrentFocalPointDistance
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xDDA9FC", Offset = "0xDDA9FC", VA = "0xDDA9FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xDD35B8", Offset = "0xDD35B8", VA = "0xDD35B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xDD50F0", Offset = "0xDD50F0", VA = "0xDD50F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xDD5570", Offset = "0xDD5570", VA = "0xDD5570")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xDD5574", Offset = "0xDD5574", VA = "0xDD5574")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xDD58F0", Offset = "0xDD58F0", VA = "0xDD58F0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xDD5900", Offset = "0xDD5900", VA = "0xDD5900")]
		private void DoOnPreRenderTasks()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xDD6850", Offset = "0xDD6850", VA = "0xDD6850")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xDD5330", Offset = "0xDD5330", VA = "0xDD5330")]
		private void CleanUpRT()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xDD5A84", Offset = "0xDD5A84", VA = "0xDD5A84")]
		private void CheckDoFTransparencySupport()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xDD5ED4", Offset = "0xDD5ED4", VA = "0xDD5ED4")]
		private void CheckDoFExclusionMask()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xDD6310", Offset = "0xDD6310", VA = "0xDD6310")]
		private void CheckBloomCullingLayer()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xDD6D00", Offset = "0xDD6D00", VA = "0xDD6D00")]
		private void RenderLeftEyeDepth()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xDD6EC4", Offset = "0xDD6EC4", VA = "0xDD6EC4")]
		private void RenderRightEyeDepth()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xDD7088", Offset = "0xDD7088", VA = "0xDD7088", Slot = "4")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xDDA698", Offset = "0xDDA698", VA = "0xDDA698")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xDDA1D8", Offset = "0xDDA1D8", VA = "0xDDA1D8")]
		private void BlurThis(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xDDA314", Offset = "0xDDA314", VA = "0xDDA314")]
		private void BlurThisDownscaling(RenderTexture rt, RenderTexture downscaled, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xDDA56C", Offset = "0xDDA56C", VA = "0xDDA56C")]
		private RenderTexture BlurThisOneDirection(RenderTexture rt, bool vertical, float blurScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xDD9F5C", Offset = "0xDD9F5C", VA = "0xDD9F5C")]
		private void BlurThisDoF(RenderTexture rt, int renderPass)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xDD9E20", Offset = "0xDD9E20", VA = "0xDD9E20")]
		private void BlurThisAlpha(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xDDA87C", Offset = "0xDDA87C", VA = "0xDDA87C")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xDD04B4", Offset = "0xDD04B4", VA = "0xDD04B4")]
		public void UpdateQualitySettings()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xDD0404", Offset = "0xDD0404", VA = "0xDD0404")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xDD36D0", Offset = "0xDD36D0", VA = "0xDD36D0")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xDDA138", Offset = "0xDDA138", VA = "0xDDA138")]
		private void UpdateMaterialBloomIntensityAndThreshold()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xDDA4D4", Offset = "0xDDA4D4", VA = "0xDDA4D4")]
		private void UpdateMaterialAnamorphicIntensityAndThreshold()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xDD5884", Offset = "0xDD5884", VA = "0xDD5884")]
		private void UpdateSharpenParams(float sharpen)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xDD9AF8", Offset = "0xDD9AF8", VA = "0xDD9AF8")]
		private void UpdateDepthOfFieldData()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xDDA7F0", Offset = "0xDDA7F0", VA = "0xDDA7F0")]
		private void UpdateDepthOfFieldBlurData(Vector2 blurDir)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xDDA888", Offset = "0xDDA888", VA = "0xDDA888")]
		private void UpdateDoFAutofocusDistance()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xDCEC00", Offset = "0xDCEC00", VA = "0xDCEC00")]
		public void Blink(float duration, float maxValue = 1f)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xDDA970", Offset = "0xDDA970", VA = "0xDDA970")]
		[IteratorStateMachine(typeof(<DoBlink>d__747))]
		private IEnumerator DoBlink(float duration, float maxValue)
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xDDAA04", Offset = "0xDDAA04", VA = "0xDDAA04")]
		public Beautify()
		{
		}
	}
	[Token(Token = "0x200060A")]
	[CreateAssetMenu(fileName = "BeautifyProfile", menuName = "Beautify Profile", order = 101)]
	public class BeautifyProfile : ScriptableObject
	{
		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 0.2f)]
		public float dither;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float ditherDepth;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float sharpenMinDepth;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1.1f)]
		public float sharpenMaxDepth;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 15f)]
		public float sharpen;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float sharpenMinMaxDepthFallOff;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 0.05f)]
		public float sharpenDepthThreshold;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color tintColor;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 0.2f)]
		public float sharpenRelaxation;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 1f)]
		public float sharpenClamp;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0f, 1f)]
		public float sharpenMotionSensibility;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 20f)]
		public float antialiasStrength;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 0.05f)]
		public float antialiasDepthThreshold;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(1f, 8f)]
		public int downscale;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(-2f, 3f)]
		public float saturate;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0.5f, 1.5f)]
		public float contrast;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(0f, 2f)]
		public float brightness;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0f, 2f)]
		public float daltonize;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool vignetting;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color vignettingColor;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float vignettingFade;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool vignettingCircularShape;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float vignettingAspectRatio;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(0f, 1f)]
		public float vignettingBlink;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D vignettingMask;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool frame;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color frameColor;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D frameMask;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool lut;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Range(0f, 1f)]
		public float lutIntensity;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture2D lutTexture;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool nightVision;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color nightVisionColor;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool outline;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color outlineColor;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool thermalVision;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool lensDirt;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[Range(0f, 1f)]
		public float lensDirtThreshold;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Range(0f, 1f)]
		public float lensDirtIntensity;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture2D lensDirtTexture;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool bloom;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public LayerMask bloomCullingMask;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Range(1f, 4f)]
		public float bloomLayerMaskDownsampling;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[Range(0f, 10f)]
		public float bloomIntensity;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float bloomMaxBrightness;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[Range(0f, 3f)]
		public float bloomBoost0;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Range(0f, 3f)]
		public float bloomBoost1;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[Range(0f, 3f)]
		public float bloomBoost2;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Range(0f, 3f)]
		public float bloomBoost3;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Range(0f, 3f)]
		public float bloomBoost4;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Range(0f, 3f)]
		public float bloomBoost5;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool bloomAntiflicker;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool bloomUltra;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Range(1f, 10f)]
		public int bloomUltraResolution;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[Range(0f, 5f)]
		public float bloomThreshold;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool bloomCustomize;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[Range(0f, 1f)]
		public float bloomWeight0;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Range(0f, 1f)]
		public float bloomWeight1;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[Range(0f, 1f)]
		public float bloomWeight2;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Range(0f, 1f)]
		public float bloomWeight3;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[Range(0f, 1f)]
		public float bloomWeight4;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Range(0f, 1f)]
		public float bloomWeight5;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool bloomBlur;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Range(0f, 1f)]
		public float bloomDepthAtten;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[Range(-1f, 1f)]
		public float bloomLayerZBias;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool anamorphicFlares;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[Range(0f, 10f)]
		public float anamorphicFlaresIntensity;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool anamorphicFlaresAntiflicker;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool anamorphicFlaresUltra;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[Range(1f, 10f)]
		public int anamorphicFlaresUltraResolution;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[Range(0f, 5f)]
		public float anamorphicFlaresThreshold;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[Range(0.1f, 2f)]
		public float anamorphicFlaresSpread;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool anamorphicFlaresVertical;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color anamorphicFlaresTint;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool anamorphicFlaresBlur;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool depthOfField;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		public bool depthOfFieldTransparencySupport;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform depthOfFieldTargetFocus;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool depthOfFieldAutofocus;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector2 depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public LayerMask depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public LayerMask depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[Range(1f, 4f)]
		public float depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[Range(1f, 4f)]
		public float depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[Range(0.9f, 1f)]
		public float depthOfFieldExclusionBias;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[Range(1f, 100f)]
		public float depthOfFieldDistance;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[Range(0.001f, 1f)]
		public float depthOfFieldFocusSpeed;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[Range(1f, 5f)]
		public int depthOfFieldDownsampling;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[Range(2f, 16f)]
		public int depthOfFieldMaxSamples;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[Range(0.005f, 0.5f)]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float depthOfFieldAperture;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool depthOfFieldForegroundBlur;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float depthOfFieldForegroundDistance;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool depthOfFieldBokeh;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[Range(0.5f, 3f)]
		public float depthOfFieldBokehThreshold;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[Range(0f, 8f)]
		public float depthOfFieldBokehIntensity;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float depthOfFieldMaxBrightness;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float depthOfFieldMaxDistance;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public FilterMode depthOfFieldFilterMode;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public LayerMask depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool eyeAdaptation;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[Range(0f, 1f)]
		public float eyeAdaptationMinExposure;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[Range(1f, 100f)]
		public float eyeAdaptationMaxExposure;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[Range(0f, 1f)]
		public float eyeAdaptationSpeedToLight;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[Range(0f, 1f)]
		public float eyeAdaptationSpeedToDark;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool purkinje;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[Range(0f, 5f)]
		public float purkinjeAmount;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[Range(0f, 1f)]
		public float purkinjeLuminanceThreshold;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public BEAUTIFY_TMO tonemap;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool sunFlares;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[Range(0f, 1f)]
		public float sunFlaresIntensity;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[Range(0f, 1f)]
		public float sunFlaresSolarWindSpeed;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public Color sunFlaresTint;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[Range(1f, 5f)]
		public int sunFlaresDownsampling;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[Range(0f, 1f)]
		public float sunFlaresSunIntensity;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[Range(0f, 1f)]
		public float sunFlaresSunDiskSize;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[Range(0f, 10f)]
		public float sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[Range(0f, 1f)]
		public float sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[Range(0f, 0.2f)]
		public float sunFlaresCoronaRays1Length;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[Range(2f, 30f)]
		public int sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[Range(0f, 0.1f)]
		public float sunFlaresCoronaRays1Spread;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[Range(0f, (float)Math.PI * 2f)]
		public float sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[Range(0f, 0.2f)]
		public float sunFlaresCoronaRays2Length;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[Range(2f, 30f)]
		public int sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[Range(0f, 0.1f)]
		public float sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[Range(0f, (float)Math.PI * 2f)]
		public float sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts1Size;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[Range(-3f, 3f)]
		public float sunFlaresGhosts1Offset;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts1Brightness;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts2Size;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[Range(-3f, 3f)]
		public float sunFlaresGhosts2Offset;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts2Brightness;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts3Size;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[Range(-3f, 3f)]
		public float sunFlaresGhosts3Brightness;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts3Offset;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts4Size;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[Range(-3f, 3f)]
		public float sunFlaresGhosts4Offset;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[Range(0f, 1f)]
		public float sunFlaresGhosts4Brightness;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[Range(0f, 1f)]
		public float sunFlaresHaloOffset;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[Range(0f, 50f)]
		public float sunFlaresHaloAmplitude;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[Range(0f, 1f)]
		public float sunFlaresHaloIntensity;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public bool sunFlaresRotationDeadZone;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B5")]
		public bool blur;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[Range(0f, 4f)]
		public float blurIntensity;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public int pixelateAmount;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public bool pixelateDownscale;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xDDBEEC", Offset = "0xDDBEEC", VA = "0xDDBEEC")]
		public void Load(Beautify b)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xDDC88C", Offset = "0xDDC88C", VA = "0xDDC88C")]
		public void Save(Beautify b)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xDDCC18", Offset = "0xDDCC18", VA = "0xDDCC18")]
		public BeautifyProfile()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x200060B")]
	public enum LODReplacement
	{
		[Token(Token = "0x4002159")]
		DoNothing,
		[Token(Token = "0x400215A")]
		ReplaceCulled,
		[Token(Token = "0x400215B")]
		ReplaceLast,
		[Token(Token = "0x400215C")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x400215D")]
		ReplaceSpecific,
		[Token(Token = "0x400215E")]
		ReplaceAfterSpecific,
		[Token(Token = "0x400215F")]
		InsertAfter
	}
	[Token(Token = "0x200060C")]
	public enum CutMode
	{
		[Token(Token = "0x4002161")]
		Automatic,
		[Token(Token = "0x4002162")]
		Manual
	}
	[Token(Token = "0x200060D")]
	public enum FolderMode
	{
		[Token(Token = "0x4002164")]
		RelativeToPrefab,
		[Token(Token = "0x4002165")]
		Global
	}
	[Token(Token = "0x200060E")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x4002167")]
		None = 0,
		[Token(Token = "0x4002168")]
		LW = 1,
		[Token(Token = "0x4002169")]
		HD = 2,
		[Token(Token = "0x400216A")]
		URP = 3,
		[Token(Token = "0x400216B")]
		Custom = 3
	}
	[Token(Token = "0x200060F")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x400216C")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x400216D")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x400216E")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x400216F")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x4002170")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x4002171")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x4002172")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x4002173")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x4002174")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x4002175")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x4002176")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x4002177")]
		private const string UPreset = "0403878495ffa3c4e9d4bcb3eac9b559";

		[Token(Token = "0x4002178")]
		private const string UShaderOctaGUID = "83dd8de9a5c14874884f9012def4fdcc";

		[Token(Token = "0x4002179")]
		private const string UShaderGUID = "da79d698f4bf0164e910ad798d07efdf";

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x4002185")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x4002186")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x4002187")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x4002193")]
		private const int BlockSize = 65536;

		[Token(Token = "0x170003B1")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xDDCEC4", Offset = "0xDDCEC4", VA = "0xDDCEC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xDDCECC", Offset = "0xDDCECC", VA = "0xDDCECC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public Transform RootTransform
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xDDCED4", Offset = "0xDDCED4", VA = "0xDDCED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203F")]
			[Address(RVA = "0xDDCEDC", Offset = "0xDDCEDC", VA = "0xDDCEDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xDDCEE4", Offset = "0xDDCEE4", VA = "0xDDCEE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xDDCEEC", Offset = "0xDDCEEC", VA = "0xDDCEEC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0xDDCEF4", Offset = "0xDDCEF4", VA = "0xDDCEF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xDDCEFC", Offset = "0xDDCEFC", VA = "0xDDCEFC")]
			set
			{
			}
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xDDCF04", Offset = "0xDDCF04", VA = "0xDDCF04")]
		private void GenerateTextures(List<TextureOutput> outputList, bool standardRendering)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xDDD4D4", Offset = "0xDDD4D4", VA = "0xDDD4D4")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xDDD6B0", Offset = "0xDDD6B0", VA = "0xDDD6B0")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xDDD72C", Offset = "0xDDD72C", VA = "0xDDD72C")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xDDD7A8", Offset = "0xDDD7A8", VA = "0xDDD7A8")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xDDF368", Offset = "0xDDF368", VA = "0xDDF368")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xDDF9D0", Offset = "0xDDF9D0", VA = "0xDDF9D0")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xDDF7CC", Offset = "0xDDF7CC", VA = "0xDDF7CC")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xDDF8E4", Offset = "0xDDF8E4", VA = "0xDDF8E4")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xDDFAE8", Offset = "0xDDFAE8", VA = "0xDDFAE8")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xDE0AE4", Offset = "0xDE0AE4", VA = "0xDE0AE4")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xDE12BC", Offset = "0xDE12BC", VA = "0xDE12BC")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public enum ImpostorType
	{
		[Token(Token = "0x4002195")]
		Spherical,
		[Token(Token = "0x4002196")]
		Octahedron,
		[Token(Token = "0x4002197")]
		HemiOctahedron
	}
	[Token(Token = "0x2000611")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x4002199")]
		AlbedoAlpha = 1,
		[Token(Token = "0x400219A")]
		SpecularSmoothness = 2,
		[Token(Token = "0x400219B")]
		NormalDepth = 4,
		[Token(Token = "0x400219C")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x2000612")]
	public enum RenderingMaps
	{
		[Token(Token = "0x400219E")]
		Standard,
		[Token(Token = "0x400219F")]
		Custom
	}
	[Token(Token = "0x2000613")]
	[CreateAssetMenu(fileName = "New Impostor", order = 85)]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		public int Version;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		public bool LockedSizes;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		public int SelectedSize;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Range(1f, 32f)]
		public int HorizontalFrames;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(1f, 33f)]
		public int VerticalFrames;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Range(0f, 64f)]
		public int PixelPadding;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(4f, 16f)]
		[SerializeField]
		public int MaxVertices;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Range(0f, 0.2f)]
		public float Tolerance;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Range(0f, 1f)]
		public float NormalScale;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xDE1410", Offset = "0xDE1410", VA = "0xDE1410")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public enum ImageFormat
	{
		[Token(Token = "0x40021B2")]
		PNG,
		[Token(Token = "0x40021B3")]
		TGA,
		[Token(Token = "0x40021B4")]
		EXR
	}
	[Token(Token = "0x2000615")]
	public enum TextureChannels
	{
		[Token(Token = "0x40021B6")]
		RGBA,
		[Token(Token = "0x40021B7")]
		RGB
	}
	[Token(Token = "0x2000616")]
	public enum TextureCompression
	{
		[Token(Token = "0x40021B9")]
		None,
		[Token(Token = "0x40021BA")]
		Normal,
		[Token(Token = "0x40021BB")]
		High,
		[Token(Token = "0x40021BC")]
		Low
	}
	[Token(Token = "0x2000617")]
	public enum TextureScale
	{
		[Token(Token = "0x40021BE")]
		Full = 1,
		[Token(Token = "0x40021BF")]
		Half = 2,
		[Token(Token = "0x40021C0")]
		Quarter = 4,
		[Token(Token = "0x40021C1")]
		Eighth = 8
	}
	[Token(Token = "0x2000618")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x40021C3")]
		OutputToggle = 1,
		[Token(Token = "0x40021C4")]
		NameSuffix = 2,
		[Token(Token = "0x40021C5")]
		RelativeScale = 4,
		[Token(Token = "0x40021C6")]
		ColorSpace = 8,
		[Token(Token = "0x40021C7")]
		QualityCompression = 0x10,
		[Token(Token = "0x40021C8")]
		FileFormat = 0x20
	}
	[Token(Token = "0x2000619")]
	public enum PresetPipeline
	{
		[Token(Token = "0x40021CA")]
		Legacy,
		[Token(Token = "0x40021CB")]
		Lightweight,
		[Token(Token = "0x40021CC")]
		HighDefinition
	}
	[Serializable]
	[Token(Token = "0x200061A")]
	public class TextureOutput
	{
		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xDE15A8", Offset = "0xDE15A8", VA = "0xDE15A8")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xDE1624", Offset = "0xDE1624", VA = "0xDE1624")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xDE1708", Offset = "0xDE1708", VA = "0xDE1708")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x200061B")]
	[CreateAssetMenu(fileName = "New Bake Preset", order = 86)]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PresetPipeline Pipeline;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xDE1788", Offset = "0xDE1788", VA = "0xDE1788")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class BakeHDRPTool
	{
		[Token(Token = "0x6002055")]
		[Address(RVA = "0xDDF7C8", Offset = "0xDDF7C8", VA = "0xDDF7C8")]
		public static void SetupShaderVariableGlobals(Matrix4x4 viewMat, Matrix4x4 projMatrix, CommandBuffer commandBuffer)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xDE1810", Offset = "0xDE1810", VA = "0xDE1810")]
		public BakeHDRPTool()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public static class BoundsEx
	{
		[Token(Token = "0x6002057")]
		[Address(RVA = "0xDDF674", Offset = "0xDDF674", VA = "0xDDF674")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x200061E")]
	public static class Texture2DEx
	{
		[Token(Token = "0x200061F")]
		public enum Compression
		{
			[Token(Token = "0x40021DD")]
			None,
			[Token(Token = "0x40021DE")]
			RLE
		}

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] Footer;

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xDE1818", Offset = "0xDE1818", VA = "0xDE1818")]
		public static byte[] EncodeToTGA(this Texture2D tex, Compression compression = Compression.RLE)
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xDE2354", Offset = "0xDE2354", VA = "0xDE2354")]
		private static bool Equals(Color32 first, Color32 second)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000620")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x170003B5")]
		public static Type Type
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xDE2404", Offset = "0xDE2404", VA = "0xDE2404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xDDFED8", Offset = "0xDDFED8", VA = "0xDDFED8")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x2000621")]
	public static class RenderTextureEx
	{
		[Token(Token = "0x600205D")]
		[Address(RVA = "0xDE251C", Offset = "0xDE251C", VA = "0xDE251C")]
		public static RenderTexture GetTemporary(RenderTexture renderTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x2000622")]
	public static class Vector2Ex
	{
		[Token(Token = "0x600205E")]
		[Address(RVA = "0xDE2598", Offset = "0xDE2598", VA = "0xDE2598")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xDE25B8", Offset = "0xDE25B8", VA = "0xDE25B8")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xDE25E0", Offset = "0xDE25E0", VA = "0xDE25E0")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xDE0240", Offset = "0xDE0240", VA = "0xDE0240")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xDE0804", Offset = "0xDE0804", VA = "0xDE0804")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xDE260C", Offset = "0xDE260C", VA = "0xDE260C")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xDE0574", Offset = "0xDE0574", VA = "0xDE0574")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xDE2920", Offset = "0xDE2920", VA = "0xDE2920")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xDE29F4", Offset = "0xDE29F4", VA = "0xDE29F4")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000625")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x2000626")]
	public class Triangulator
	{
		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x170003B6")]
		public List<Vector2> Points
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0xDE2F7C", Offset = "0xDE2F7C", VA = "0xDE2F7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xDE0E28", Offset = "0xDE0E28", VA = "0xDE0E28")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xDE2F84", Offset = "0xDE2F84", VA = "0xDE2F84")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xDE0F00", Offset = "0xDE0F00", VA = "0xDE0F00")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xDE3160", Offset = "0xDE3160", VA = "0xDE3160")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xDE3248", Offset = "0xDE3248", VA = "0xDE3248")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xDE3430", Offset = "0xDE3430", VA = "0xDE3430")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000627")]
	public class VersionInfo
	{
		[Token(Token = "0x40021FB")]
		public const byte Major = 0;

		[Token(Token = "0x40021FC")]
		public const byte Minor = 9;

		[Token(Token = "0x40021FD")]
		public const byte Release = 7;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x170003B7")]
		public static int FullNumber
		{
			[Token(Token = "0x6002075")]
			[Address(RVA = "0xDE3610", Offset = "0xDE3610", VA = "0xDE3610")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B8")]
		public static string FullLabel
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0xDE3670", Offset = "0xDE3670", VA = "0xDE3670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xDE34A4", Offset = "0xDE34A4", VA = "0xDE34A4")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xDE36FC", Offset = "0xDE36FC", VA = "0xDE36FC")]
		public VersionInfo()
		{
		}
	}
}
