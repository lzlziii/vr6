using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Xml;
using Analytics.Events;
using Halfbrick.FNVR.Achievments;
using Halfbrick.FNVR.SceneManagement;
using Halfbrick.FNVR.Stats;
using Halfbrick.FNVR.System.AssetManagement;
using Halfbrick.FNVR.System.Blades;
using Halfbrick.FNVR.System.Environment;
using Halfbrick.FNVR.System.Hands;
using Halfbrick.FNVR.System.Inventory;
using Halfbrick.FNVR.System.TimeSystem;
using Il2CppDummyDll;
using NetworkEffects.Analytics;
using NetworkEffects.Schema;
using Poly2Tri;
using TMPro;
using UltimateFracturing;
using UltimateGameTools.MeshSimplifier;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.AzureSky;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.UI;
using UnityEngine.XR;
using Viveport;
using Viveport.Internal;
using Xft;
using wvr;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FB2C", Offset = "0x26FB2C")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000001")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x782FFC", Offset = "0x782FFC", VA = "0x782FFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x7830C0", Offset = "0x7830C0", VA = "0x7830C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0x7831A0", Offset = "0x7831A0", VA = "0x7831A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x6000004")]
		[Address(RVA = "0x78337C", Offset = "0x78337C", VA = "0x78337C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x6000005")]
		[Address(RVA = "0x783440", Offset = "0x783440", VA = "0x783440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x783520", Offset = "0x783520", VA = "0x783520")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x783230", Offset = "0x783230", VA = "0x783230")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x7835F0", Offset = "0x7835F0", VA = "0x7835F0")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x783684", Offset = "0x783684", VA = "0x783684")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x7836C4", Offset = "0x7836C4", VA = "0x7836C4")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271258", Offset = "0x271258")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271258", Offset = "0x271258")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271258", Offset = "0x271258")]
	public float radius;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2712D4", Offset = "0x2712D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2712D4", Offset = "0x2712D4")]
	public float density;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271328", Offset = "0x271328")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271328", Offset = "0x271328")]
	public float exponent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271380", Offset = "0x271380")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271380", Offset = "0x271380")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2713D4", Offset = "0x2713D4")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271408", Offset = "0x271408")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271408", Offset = "0x271408")]
	public bool debugSphere;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB5DC68", Offset = "0xB5DC68", VA = "0xB5DC68")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB5DE44", Offset = "0xB5DE44", VA = "0xB5DE44")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB5DEBC", Offset = "0xB5DEBC", VA = "0xB5DEBC")]
	public VolumetricSphere()
	{
	}
}
[Serializable]
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x26FBC8", Offset = "0x26FBC8")]
public sealed class MosaicEffectPPSPPSSettings : PostProcessEffectSettings
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271468", Offset = "0x271468")]
	public FloatParameter _TileSize;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x27149C", Offset = "0x27149C")]
	public FloatParameter _RadiusTweak;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2714D0", Offset = "0x2714D0")]
	public ColorParameter _InBetweenColor;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7746D4", Offset = "0x7746D4", VA = "0x7746D4")]
	public MosaicEffectPPSPPSSettings()
	{
	}
}
[Token(Token = "0x2000005")]
public sealed class MosaicEffectPPSPPSRenderer : PostProcessEffectRenderer<MosaicEffectPPSPPSSettings>
{
	[Token(Token = "0x600000F")]
	[Address(RVA = "0x774334", Offset = "0x774334", VA = "0x774334", Slot = "8")]
	public override void Render(PostProcessRenderContext context)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x77467C", Offset = "0x77467C", VA = "0x77467C")]
	public MosaicEffectPPSPPSRenderer()
	{
	}
}
[Token(Token = "0x2000006")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform Prefab;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material InstancedMaterial;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7189F8", Offset = "0x7189F8", VA = "0x7189F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x718CB0", Offset = "0x718CB0", VA = "0x718CB0")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 m_previous;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_target;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Speed;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x718CB8", Offset = "0x718CB8", VA = "0x718CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x718D74", Offset = "0x718D74", VA = "0x718D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x718FE8", Offset = "0x718FE8", VA = "0x718FE8")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000008")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int FramesBufferSize;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Renderer Renderer;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000006")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xF998B0", Offset = "0xF998B0", VA = "0xF998B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000017")]
		[Address(RVA = "0xF998B8", Offset = "0xF998B8", VA = "0xF998B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF998C0", Offset = "0xF998C0", VA = "0xF998C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF998FC", Offset = "0xF998FC", VA = "0xF998FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF99B2C", Offset = "0xF99B2C", VA = "0xF99B2C")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material PostProcessMat;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x70AAEC", Offset = "0x70AAEC", VA = "0x70AAEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x70ABD0", Offset = "0x70ABD0", VA = "0x70ABD0")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x70AC5C", Offset = "0x70AC5C", VA = "0x70AC5C")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector4 m_uvs;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF9EAA0", Offset = "0xF9EAA0", VA = "0xF9EAA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF9EBC8", Offset = "0xF9EBC8", VA = "0xF9EBC8")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200000B")]
public enum AudioPlaybackType
{
	[Token(Token = "0x400001E")]
	First,
	[Token(Token = "0x400001F")]
	Random,
	[Token(Token = "0x4000020")]
	Sequence
}
[Token(Token = "0x200000C")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager m_instance;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_folderPath;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioMixer m_audioMixer;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioMixerGroup m_defaultMixGroup;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_debugLog;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sound[] m_allSounds;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AudioSourceObject> m_allAudioSources;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_disabled;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AudioFade> m_allAudioFades;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string m_currentSnapshot;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_objectParent;

	[Token(Token = "0x17000007")]
	public static AudioManager Instance
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x979658", Offset = "0x979658", VA = "0x979658")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x9830A0", Offset = "0x9830A0", VA = "0x9830A0")]
	public void DisablePlay()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x9830AC", Offset = "0x9830AC", VA = "0x9830AC")]
	public void EnablePlay()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9830B8", Offset = "0x9830B8", VA = "0x9830B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x983370", Offset = "0x983370", VA = "0x983370")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x9834EC", Offset = "0x9834EC", VA = "0x9834EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x9835F8", Offset = "0x9835F8", VA = "0x9835F8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x983704", Offset = "0x983704", VA = "0x983704")]
	public void ResetSoundSequence(AudioType soundType)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x983770", Offset = "0x983770", VA = "0x983770")]
	private AudioSourceObject CreateNewAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x9839C4", Offset = "0x9839C4", VA = "0x9839C4")]
	public void ReturnAudioSourceToList(AudioSourceObject audSource)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x983B18", Offset = "0x983B18", VA = "0x983B18")]
	public void CleanUpUnusedAudioSourceObjects()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x983C5C", Offset = "0x983C5C", VA = "0x983C5C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x273AE8", Offset = "0x273AE8")]
	public AudioSourceObject PlaySound(Transform location, string type, AudioPlaybackType playbackType = AudioPlaybackType.Random, float volumeModifier = 1f, float pitchModifier = 1f, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x979980", Offset = "0x979980", VA = "0x979980")]
	public AudioSourceObject PlaySound(Transform location, AudioSound sound, AudioPlaybackType playbackType = AudioPlaybackType.Random, float pitchModifier = 1f, float delay = 0f, [Optional] AudioPlayer player)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x9818F8", Offset = "0x9818F8", VA = "0x9818F8")]
	public AudioSourceObject PlaySound(Transform location, AudioType type, AudioPlaybackType playbackType = AudioPlaybackType.Random, float volumeModifier = 1f, float pitchModifier = 1f, float delay = 0f, [Optional] AudioPlayer player)
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x983730", Offset = "0x983730", VA = "0x983730")]
	public Sound GetSound(AudioType type)
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x98445C", Offset = "0x98445C", VA = "0x98445C")]
	public string GetCurrentSnapshot()
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x97F9D8", Offset = "0x97F9D8", VA = "0x97F9D8")]
	public void TransitioinToSnapshot(string name, float transitionTime)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x984464", Offset = "0x984464", VA = "0x984464")]
	public void FadeAudioClip(AudioSourceObject sourceObj, float toValue, float time, [Optional] Action<AudioSourceObject> fadeCompleteCallback)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x98462C", Offset = "0x98462C", VA = "0x98462C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x9833E0", Offset = "0x9833E0", VA = "0x9833E0")]
	public void MusicOn(bool on)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x984740", Offset = "0x984740", VA = "0x984740")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200000D")]
internal class AudioFade
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Action<AudioSourceObject> m_fadeCompleteCallback;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioSourceObject sourceObj;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float startValue;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float endValue;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float transitionTime;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x982CBC", Offset = "0x982CBC", VA = "0x982CBC")]
	public AudioFade(AudioSourceObject source, float end, float time, [Optional] Action<AudioSourceObject> fadeCompleteCallback)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x982E6C", Offset = "0x982E6C", VA = "0x982E6C")]
	public bool UpdateParam(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000E")]
public class AudioPlayer : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	public enum Type
	{
		[Token(Token = "0x4000043")]
		PlayOnAwake,
		[Token(Token = "0x4000044")]
		PlayViaCode,
		[Token(Token = "0x4000045")]
		PlayOnInterval
	}

	[Token(Token = "0x2000010")]
	private enum Shape
	{
		[Token(Token = "0x4000047")]
		None,
		[Token(Token = "0x4000048")]
		Sphere,
		[Token(Token = "0x4000049")]
		Cube
	}

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public string m_sound;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSound m_audioSound;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Type m_playbackTiming;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_playOnDelay;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271514", Offset = "0x271514")]
	public float m_volumeModifier;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_pitchModifier;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioPlaybackType m_playbackType;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform x_locObj;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AudioSourceObject m_source;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_intervalMinTime;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_intervalMaxTime;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Shape m_playInArea;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_isPaused;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m_gizmoMesh;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_timer;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_frameSkips;

	[Token(Token = "0x17000008")]
	private Transform m_locationObject
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x984840", Offset = "0x984840", VA = "0x984840")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x984A1C", Offset = "0x984A1C", VA = "0x984A1C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x984DA0", Offset = "0x984DA0", VA = "0x984DA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x984E0C", Offset = "0x984E0C", VA = "0x984E0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x984E20", Offset = "0x984E20", VA = "0x984E20")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x9850A8", Offset = "0x9850A8", VA = "0x9850A8", Slot = "4")]
	public virtual void PlaySound(float fadeInSeconds = 0f)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x9857E8", Offset = "0x9857E8", VA = "0x9857E8")]
	private Vector3 RandomInBox()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x98590C", Offset = "0x98590C", VA = "0x98590C")]
	public void PauseSound()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x985840", Offset = "0x985840", VA = "0x985840")]
	private void ResumeSound()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x985A00", Offset = "0x985A00", VA = "0x985A00", Slot = "5")]
	public virtual void StopSound(float fadeOutSeconds = 0f)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x985C08", Offset = "0x985C08", VA = "0x985C08", Slot = "6")]
	public virtual void StopSoundAndDeactivate(float fadeOutSeconds = 0f)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x985BF8", Offset = "0x985BF8", VA = "0x985BF8")]
	public void RemoveSound()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x985DE8", Offset = "0x985DE8", VA = "0x985DE8")]
	public AudioPlayer()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x985FC0", Offset = "0x985FC0", VA = "0x985FC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273B1C", Offset = "0x273B1C")]
	private void <StopSound>b__28_0(AudioSourceObject source)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x986010", Offset = "0x986010", VA = "0x986010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273B2C", Offset = "0x273B2C")]
	private void <StopSoundAndDeactivate>b__29_0(AudioSourceObject source)
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class AudioSound
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private string m_audioName;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private float m_volume;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x985EB8", Offset = "0x985EB8", VA = "0x985EB8")]
	public AudioSound()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x986070", Offset = "0x986070", VA = "0x986070")]
	public AudioSound(AudioType type)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x986174", Offset = "0x986174", VA = "0x986174")]
	public AudioSound(AudioType type, float volume)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x985708", Offset = "0x985708", VA = "0x985708")]
	public void SetSound(AudioType type)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x983FB0", Offset = "0x983FB0", VA = "0x983FB0")]
	public AudioType GetAudioType()
	{
		return default(AudioType);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x9857C0", Offset = "0x9857C0", VA = "0x9857C0")]
	public void SetVolume(float vol)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x986284", Offset = "0x986284", VA = "0x986284")]
	public float GetVolume()
	{
		return default(float);
	}
}
[Token(Token = "0x2000012")]
public class AudioSourceObject : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FC84", Offset = "0x26FC84")]
	private sealed class <StopAudioAfterSeconds>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float seconds;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioSourceObject <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x536560", Offset = "0x536560", VA = "0x536560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000064")]
			[Address(RVA = "0x5365B0", Offset = "0x5365B0", VA = "0x5365B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x53646C", Offset = "0x53646C", VA = "0x53646C")]
		[DebuggerHidden]
		public <StopAudioAfterSeconds>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x53648C", Offset = "0x53648C", VA = "0x53648C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0x536490", Offset = "0x536490", VA = "0x536490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x536568", Offset = "0x536568", VA = "0x536568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioPlayer m_player;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource m_source;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_isActive;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioType m_type;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_timer;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_delay;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_isDelay;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_location;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_resetLoop;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSourceObject m_endLoopTrack;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x98628C", Offset = "0x98628C", VA = "0x98628C")]
	public AudioType GetAudioType()
	{
		return default(AudioType);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x986294", Offset = "0x986294", VA = "0x986294")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x98629C", Offset = "0x98629C", VA = "0x98629C")]
	public AudioPlayer GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x982DC0", Offset = "0x982DC0", VA = "0x982DC0")]
	public float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x982FF0", Offset = "0x982FF0", VA = "0x982FF0")]
	public void SetVolume(float vol)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x985080", Offset = "0x985080", VA = "0x985080")]
	public bool IsLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x9862A4", Offset = "0x9862A4", VA = "0x9862A4")]
	public AudioSource GetAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9862AC", Offset = "0x9862AC", VA = "0x9862AC")]
	public void SetAudioSource(AudioSource s)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x984214", Offset = "0x984214", VA = "0x984214")]
	public void InitialiseAudio(AudioType type, float delay, Transform trans, float volumeModifier, float pitchModifier, AudioPlayer player)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x9862B4", Offset = "0x9862B4", VA = "0x9862B4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x985BD0", Offset = "0x985BD0", VA = "0x985BD0")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x9862E8", Offset = "0x9862E8", VA = "0x9862E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273B3C", Offset = "0x273B3C")]
	private IEnumerator StopAudioAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x97F890", Offset = "0x97F890", VA = "0x97F890")]
	public void StopAudioAfterFade(float seconds)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x98639C", Offset = "0x98639C", VA = "0x98639C")]
	public void StopAudioAtEndOfLoop(AudioType trackToPlayOnEnd = AudioType.None)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x98659C", Offset = "0x98659C", VA = "0x98659C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x98678C", Offset = "0x98678C", VA = "0x98678C")]
	private void RemoveSound()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x98692C", Offset = "0x98692C", VA = "0x98692C")]
	public AudioSourceObject()
	{
	}
}
[Token(Token = "0x2000014")]
public enum AudioType
{
	[Token(Token = "0x400005B")]
	background,
	[Token(Token = "0x400005C")]
	bombExplode,
	[Token(Token = "0x400005D")]
	bombThrow,
	[Token(Token = "0x400005E")]
	bombFuseLP,
	[Token(Token = "0x400005F")]
	gank,
	[Token(Token = "0x4000060")]
	Game_over,
	[Token(Token = "0x4000061")]
	Game_start,
	[Token(Token = "0x4000062")]
	fruitSplatter,
	[Token(Token = "0x4000063")]
	fruitStab,
	[Token(Token = "0x4000064")]
	fruitImpactApple,
	[Token(Token = "0x4000065")]
	fruitImpactPumpkin,
	[Token(Token = "0x4000066")]
	fruitImpactBigHollow,
	[Token(Token = "0x4000067")]
	fruitImpactBigWet,
	[Token(Token = "0x4000068")]
	fruitImpactMediumCrunchy,
	[Token(Token = "0x4000069")]
	fruitImpactMediumDry,
	[Token(Token = "0x400006A")]
	fruitImpactMediumWet,
	[Token(Token = "0x400006B")]
	fruitImpactSmallWet,
	[Token(Token = "0x400006C")]
	fruitWaterSplash,
	[Token(Token = "0x400006D")]
	fruitThrow,
	[Token(Token = "0x400006E")]
	ExtraLife,
	[Token(Token = "0x400006F")]
	ambCourtyardDayFL,
	[Token(Token = "0x4000070")]
	ambCourtyardDayFR,
	[Token(Token = "0x4000071")]
	ambCourtyardDayRR,
	[Token(Token = "0x4000072")]
	ambCourtyardDayRL,
	[Token(Token = "0x4000073")]
	ambCourtyardHalloweenFL,
	[Token(Token = "0x4000074")]
	ambCourtyardHalloweenFR,
	[Token(Token = "0x4000075")]
	ambCourtyardHalloweenRear,
	[Token(Token = "0x4000076")]
	ambOutlookFL,
	[Token(Token = "0x4000077")]
	ambOutlookFR,
	[Token(Token = "0x4000078")]
	ambOutlookRear,
	[Token(Token = "0x4000079")]
	ambOutlookBird,
	[Token(Token = "0x400007A")]
	Critical,
	[Token(Token = "0x400007B")]
	uiTimerTick,
	[Token(Token = "0x400007C")]
	uiTimerTock,
	[Token(Token = "0x400007D")]
	uiTimerRing,
	[Token(Token = "0x400007E")]
	fruitBounce,
	[Token(Token = "0x400007F")]
	bombBounce,
	[Token(Token = "0x4000080")]
	bombFizzle,
	[Token(Token = "0x4000081")]
	bombLand,
	[Token(Token = "0x4000082")]
	bonusPoints,
	[Token(Token = "0x4000083")]
	combo1,
	[Token(Token = "0x4000084")]
	combo2,
	[Token(Token = "0x4000085")]
	combo3,
	[Token(Token = "0x4000086")]
	combo4,
	[Token(Token = "0x4000087")]
	combo5,
	[Token(Token = "0x4000088")]
	combo6,
	[Token(Token = "0x4000089")]
	combo7,
	[Token(Token = "0x400008A")]
	combo8,
	[Token(Token = "0x400008B")]
	comboBlitz,
	[Token(Token = "0x400008C")]
	blitzLightLP,
	[Token(Token = "0x400008D")]
	blitzHeavyLP,
	[Token(Token = "0x400008E")]
	blitzEnd,
	[Token(Token = "0x400008F")]
	bladeRegularSlow,
	[Token(Token = "0x4000090")]
	bladeRegularFast,
	[Token(Token = "0x4000091")]
	bladeRegularLP,
	[Token(Token = "0x4000092")]
	musMenuMain,
	[Token(Token = "0x4000093")]
	musMenuHalloween,
	[Token(Token = "0x4000094")]
	musMenuChristmas,
	[Token(Token = "0x4000095")]
	uiResultsWhoosh,
	[Token(Token = "0x4000096")]
	uiResultsScrollOpen,
	[Token(Token = "0x4000097")]
	uiResultsScrollClose,
	[Token(Token = "0x4000098")]
	uiResultsBonus1,
	[Token(Token = "0x4000099")]
	uiResultsBonus2,
	[Token(Token = "0x400009A")]
	uiResultsBonus3,
	[Token(Token = "0x400009B")]
	uiResultsBonusTotal,
	[Token(Token = "0x400009C")]
	uiResultsFinalImpact,
	[Token(Token = "0x400009D")]
	uiResultsFinalIncrement,
	[Token(Token = "0x400009E")]
	uiResultsFinalLaunch,
	[Token(Token = "0x400009F")]
	uiResultsBestLaunch,
	[Token(Token = "0x40000A0")]
	uiResultsBestExplode,
	[Token(Token = "0x40000A1")]
	uiLeaderboardScore,
	[Token(Token = "0x40000A2")]
	uiBombExplode,
	[Token(Token = "0x40000A3")]
	uiPauseOpen,
	[Token(Token = "0x40000A4")]
	uiPauseScroll,
	[Token(Token = "0x40000A5")]
	uiPauseSelect,
	[Token(Token = "0x40000A6")]
	uiLetterScroll,
	[Token(Token = "0x40000A7")]
	uiSwordEquip,
	[Token(Token = "0x40000A8")]
	powerupThrow,
	[Token(Token = "0x40000A9")]
	powerupFreezeImpact,
	[Token(Token = "0x40000AA")]
	powerupFrenzyImpact,
	[Token(Token = "0x40000AB")]
	powerupX2Impact,
	[Token(Token = "0x40000AC")]
	powerupFreezeLP,
	[Token(Token = "0x40000AD")]
	powerupPeachThrow,
	[Token(Token = "0x40000AE")]
	powerupPeachImpact,
	[Token(Token = "0x40000AF")]
	heliFlyLP,
	[Token(Token = "0x40000B0")]
	heliSpawn,
	[Token(Token = "0x40000B1")]
	heliWindup,
	[Token(Token = "0x40000B2")]
	heliSmash,
	[Token(Token = "0x40000B3")]
	heliRelease,
	[Token(Token = "0x40000B4")]
	heliFlinch,
	[Token(Token = "0x40000B5")]
	heliCollision,
	[Token(Token = "0x40000B6")]
	halloweenGhost,
	[Token(Token = "0x40000B7")]
	heliSpawnHalloween,
	[Token(Token = "0x40000B8")]
	heliLaughHalloween,
	[Token(Token = "0x40000B9")]
	Game_start_halloween,
	[Token(Token = "0x40000BA")]
	ambCourtyardNightFL,
	[Token(Token = "0x40000BB")]
	ambCourtyardNightFR,
	[Token(Token = "0x40000BC")]
	ambCourtyardNightRL,
	[Token(Token = "0x40000BD")]
	ambCourtyardNightRR,
	[Token(Token = "0x40000BE")]
	ambCourtyardNightBat,
	[Token(Token = "0x40000BF")]
	ambCourtyardNightOwl,
	[Token(Token = "0x40000C0")]
	ambCourtyardNightWolf,
	[Token(Token = "0x40000C1")]
	bladeIceSwipe,
	[Token(Token = "0x40000C2")]
	bladeDragonFruitFlameSwipe,
	[Token(Token = "0x40000C3")]
	bladeButterflySwipe,
	[Token(Token = "0x40000C4")]
	bladeDiscoSwipe,
	[Token(Token = "0x40000C5")]
	bladeRockSwipe,
	[Token(Token = "0x40000C6")]
	bladeShadowSwipe,
	[Token(Token = "0x40000C7")]
	bladeSongSwordSwipe,
	[Token(Token = "0x40000C8")]
	bladeWindSwordSwipe,
	[Token(Token = "0x40000C9")]
	bladeHalloweenSwordSwipe,
	[Token(Token = "0x40000CA")]
	bladeChristmasSwordSwipe,
	[Token(Token = "0x40000CB")]
	testTone,
	[Token(Token = "0x40000CC")]
	AchievementScrolling,
	[Token(Token = "0x40000CD")]
	None
}
[Serializable]
[Token(Token = "0x2000015")]
public class Sound : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_fileName;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioMixerGroup m_audioMixerGroup;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_maxPlayingAtOnce;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_loop;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_3dSound;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_volume;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_dopplerLevel;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 m_minMaxPitch;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_minMaxDistance;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private List<AudioClip> m_allAudioClips;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_lastClipPlayed;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_numberPlayingInScene;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xF9A974", Offset = "0xF9A974", VA = "0xF9A974")]
	public void AddAudioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xF9A9E4", Offset = "0xF9A9E4", VA = "0xF9A9E4")]
	public int GetNumberOfClips()
	{
		return default(int);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xF9AA38", Offset = "0xF9AA38", VA = "0xF9AA38")]
	public void ClearAllAudioClips()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xF9AAA0", Offset = "0xF9AAA0", VA = "0xF9AAA0")]
	public bool ApplySoundInformation(AudioType type, AudioPlaybackType playbackType, ref AudioSourceObject sourceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xF9AED8", Offset = "0xF9AED8", VA = "0xF9AED8")]
	public void FinishedPlayingSound()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xF9AEE8", Offset = "0xF9AEE8", VA = "0xF9AEE8")]
	public void ResetSequence()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF9AF48", Offset = "0xF9AF48", VA = "0xF9AF48")]
	public Sound()
	{
	}
}
[Token(Token = "0x2000016")]
public class TestAudioFruit : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioPlayer player;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSourceObject soundObj;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB47E44", Offset = "0xB47E44", VA = "0xB47E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB47EC8", Offset = "0xB47EC8", VA = "0xB47EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB48088", Offset = "0xB48088", VA = "0xB48088")]
	public TestAudioFruit()
	{
	}
}
[Token(Token = "0x2000017")]
public class AzureUIController : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AzureSkyController skyController;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Slider slider;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Image transitionBar;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_scale;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD0A76C", Offset = "0xD0A76C", VA = "0xD0A76C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD0A8A0", Offset = "0xD0A8A0", VA = "0xD0A8A0")]
	public AzureUIController()
	{
	}
}
[Token(Token = "0x2000018")]
public class CameraRotation : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 v3;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 p3;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cameraZoon;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool zoom;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x885638", Offset = "0x885638", VA = "0x885638")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x885684", Offset = "0x885684", VA = "0x885684")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x88595C", Offset = "0x88595C", VA = "0x88595C")]
	private Vector3 clamp(Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x8859CC", Offset = "0x8859CC", VA = "0x8859CC")]
	public CameraRotation()
	{
	}
}
[Token(Token = "0x2000019")]
public class Fader : MonoBehaviour
{
	[Token(Token = "0x200001A")]
	public delegate void OnFadeComplete(State state);

	[Token(Token = "0x200001B")]
	public enum State
	{
		[Token(Token = "0x40000F0")]
		FadedIn,
		[Token(Token = "0x40000F1")]
		FadingIn,
		[Token(Token = "0x40000F2")]
		FadingOut,
		[Token(Token = "0x40000F3")]
		FadedOut
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool startFadedOut;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private State m_state;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color color1;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color color2;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float volume;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OnFadeComplete m_fadeCallback;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x4EB104", Offset = "0x4EB104", VA = "0x4EB104")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x4EB3B0", Offset = "0x4EB3B0", VA = "0x4EB3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x4EB69C", Offset = "0x4EB69C", VA = "0x4EB69C")]
	public void FadeOut(float delay = 0f, [Optional] OnFadeComplete callabck)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x4EB8AC", Offset = "0x4EB8AC", VA = "0x4EB8AC")]
	public void FadeIn(float delay = 0f, [Optional] OnFadeComplete callabck)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x4EBAA0", Offset = "0x4EBAA0", VA = "0x4EBAA0")]
	public State GetState()
	{
		return default(State);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x4EBAA8", Offset = "0x4EBAA8", VA = "0x4EBAA8")]
	public Fader()
	{
	}
}
[Token(Token = "0x200001C")]
public class FruitGutsLoader : MonoBehaviour
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0x84238C", Offset = "0x84238C", VA = "0x84238C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x8423C0", Offset = "0x8423C0", VA = "0x8423C0")]
	public FruitGutsLoader()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FC94", Offset = "0x26FC94")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float effectDuration;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float d;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x883748", Offset = "0x883748", VA = "0x883748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x883754", Offset = "0x883754", VA = "0x883754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x8838C4", Offset = "0x8838C4", VA = "0x8838C4")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200001E")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FD00", Offset = "0x26FD00")]
	private sealed class <>c
	{
		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x5389B4", Offset = "0x5389B4", VA = "0x5389B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x5389BC", Offset = "0x5389BC", VA = "0x5389BC")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FD10", Offset = "0x26FD10")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0x538C24", Offset = "0x538C24", VA = "0x538C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009A")]
			[Address(RVA = "0x538C74", Offset = "0x538C74", VA = "0x538C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x538A24", Offset = "0x538A24", VA = "0x538A24")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x538A44", Offset = "0x538A44", VA = "0x538A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x538A48", Offset = "0x538A48", VA = "0x538A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x538C2C", Offset = "0x538C2C", VA = "0x538C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Renderer groundRenderer;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Collider groundCollider;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27158C", Offset = "0x27158C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27158C", Offset = "0x27158C")]
	public Image slowMoBtn;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text slowMoLabel;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Image camRotBtn;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text camRotLabel;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Image groundBtn;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text groundLabel;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2715BC", Offset = "0x2715BC")]
	public Text EffectLabel;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int exampleIndex;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool slowMo;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x8838D8", Offset = "0x8838D8", VA = "0x8838D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x883E10", Offset = "0x883E10", VA = "0x883E10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x884738", Offset = "0x884738", VA = "0x884738")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x884870", Offset = "0x884870", VA = "0x884870")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8849C0", Offset = "0x8849C0", VA = "0x8849C0")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x884A9C", Offset = "0x884A9C", VA = "0x884A9C")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x884AA0", Offset = "0x884AA0", VA = "0x884AA0")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x883C98", Offset = "0x883C98", VA = "0x883C98")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x88444C", Offset = "0x88444C", VA = "0x88444C")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x884AA4", Offset = "0x884AA4", VA = "0x884AA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273BF8", Offset = "0x273BF8")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x884220", Offset = "0x884220", VA = "0x884220")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x884268", Offset = "0x884268", VA = "0x884268")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8842AC", Offset = "0x8842AC", VA = "0x8842AC")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x884B28", Offset = "0x884B28", VA = "0x884B28")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000021")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 min;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 max;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x884BC4", Offset = "0x884BC4", VA = "0x884BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x884C4C", Offset = "0x884C4C", VA = "0x884C4C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000022")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 baseDir;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool gravity;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 dir;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x884C74", Offset = "0x884C74", VA = "0x884C74")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x884D24", Offset = "0x884D24", VA = "0x884D24")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x884E38", Offset = "0x884E38", VA = "0x884E38")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x2000023")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform rotationCenter;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x884E98", Offset = "0x884E98", VA = "0x884E98")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x884FD0", Offset = "0x884FD0", VA = "0x884FD0")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000024")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 rotation;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool gravity;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 dir;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x88503C", Offset = "0x88503C", VA = "0x88503C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x88510C", Offset = "0x88510C", VA = "0x88510C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x8851A4", Offset = "0x8851A4", VA = "0x8851A4")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FD20", Offset = "0x26FD20")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FD8C", Offset = "0x26FD8C")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AC")]
			[Address(RVA = "0x5388EC", Offset = "0x5388EC", VA = "0x5388EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x53893C", Offset = "0x53893C", VA = "0x53893C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x538698", Offset = "0x538698", VA = "0x538698")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x5386B8", Offset = "0x5386B8", VA = "0x5386B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x5386BC", Offset = "0x5386BC", VA = "0x5386BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x5388F4", Offset = "0x5388F4", VA = "0x5388F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool OnlyDeactivate;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x8835C8", Offset = "0x8835C8", VA = "0x8835C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x883624", Offset = "0x883624", VA = "0x883624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273CB4", Offset = "0x273CB4")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8836A8", Offset = "0x8836A8", VA = "0x8836A8")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000027")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 rotation;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Space space;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8836B0", Offset = "0x8836B0", VA = "0x8836B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x883738", Offset = "0x883738", VA = "0x883738")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FD9C", Offset = "0x26FD9C")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool loop;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float smoothFactor;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float addIntensity;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minIntensity;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxIntensity;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float baseIntensity;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x885204", Offset = "0x885204", VA = "0x885204")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x88527C", Offset = "0x88527C", VA = "0x88527C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x885294", Offset = "0x885294", VA = "0x885294")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x885350", Offset = "0x885350", VA = "0x885350")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FE08", Offset = "0x26FE08")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float duration;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float delay;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float finalIntensity;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float baseIntensity;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool autodestruct;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float p_lifetime;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float p_delay;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x885364", Offset = "0x885364", VA = "0x885364")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x8853DC", Offset = "0x8853DC", VA = "0x8853DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x885470", Offset = "0x885470", VA = "0x885470")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x885628", Offset = "0x885628", VA = "0x885628")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x200002A")]
public class TCP2_Demo_Camera : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform Pivot;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2715CC", Offset = "0x2715CC")]
	public float OrbitStrg;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float OrbitClamp;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271600", Offset = "0x271600")]
	public float PanStrgMin;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PanStrgMax;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271634", Offset = "0x271634")]
	public float ZoomStrg;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ZoomClamp;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ZoomDistMin;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ZoomDistMax;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271668", Offset = "0x271668")]
	public float Decceleration;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public RectTransform ignoreMouseRect;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 mouseDelta;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 panAcceleration;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float zoomAcceleration;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float zoomDistance;

	[Token(Token = "0x400013F")]
	private const float XMax = 60f;

	[Token(Token = "0x4000140")]
	private const float XMin = 300f;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 mResetPivotPos;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 mResetPivotRot;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool leftMouseHeld;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool rightMouseHeld;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool middleMouseHeld;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xFA8668", Offset = "0xFA8668", VA = "0xFA8668")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFA8744", Offset = "0xFA8744", VA = "0xFA8744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFA8774", Offset = "0xFA8774", VA = "0xFA8774")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFA90A0", Offset = "0xFA90A0", VA = "0xFA90A0")]
	public void ResetView()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFA91F0", Offset = "0xFA91F0", VA = "0xFA91F0")]
	public TCP2_Demo_Camera()
	{
	}
}
[Token(Token = "0x200002B")]
public class TCP2_Demo_Cat : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002C")]
	public class Ambience
	{
		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject[] activate;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material skybox;

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x1545D34", Offset = "0x1545D34", VA = "0x1545D34")]
		public Ambience()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200002D")]
	public class ShaderStyle
	{
		[Serializable]
		[Token(Token = "0x200002E")]
		public class CharacterSettings
		{
			[Token(Token = "0x4000167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material material;

			[Token(Token = "0x4000168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Renderer[] renderers;

			[Token(Token = "0x60000D0")]
			[Address(RVA = "0x154D91C", Offset = "0x154D91C", VA = "0x154D91C")]
			public CharacterSettings()
			{
			}
		}

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public CharacterSettings[] settings;

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x1545D3C", Offset = "0x1545D3C", VA = "0x1545D3C")]
		public ShaderStyle()
		{
		}
	}

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Ambience[] ambiences;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int amb;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27169C", Offset = "0x27169C")]
	public ShaderStyle[] styles;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int style;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2716AC", Offset = "0x2716AC")]
	public GameObject shadedGroup;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject flatGroup;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2716BC", Offset = "0x2716BC")]
	public GameObject[] cats;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] unityChans;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject unityChanCopyright;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2716CC", Offset = "0x2716CC")]
	public AnimationClip[] catAnimations;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int catAnim;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip[] unityChanAnimations;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int uchanAnim;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2716DC", Offset = "0x2716DC")]
	private bool <animate>k__BackingField;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float animTime;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x2716EC", Offset = "0x2716EC")]
	public Light[] dirLights;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Light[] otherLights;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rotatingPointLights;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2716FC", Offset = "0x2716FC")]
	private bool <rotateLights>k__BackingField;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27170C", Offset = "0x27170C")]
	private bool <rotatePointLights>k__BackingField;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27171C", Offset = "0x27171C")]
	public Button[] ambiencesButtons;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Button[] stylesButtons;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button[] characterButtons;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Button[] textureButtons;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button[] animationButtons;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27172C", Offset = "0x27172C")]
	public Canvas canvas;

	[Token(Token = "0x1700000F")]
	public bool animate
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xFA9240", Offset = "0xFA9240", VA = "0xFA9240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273D70", Offset = "0x273D70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xFA9248", Offset = "0xFA9248", VA = "0xFA9248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273D80", Offset = "0x273D80")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public bool rotateLights
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xFA9250", Offset = "0xFA9250", VA = "0xFA9250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273D90", Offset = "0x273D90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xFA9258", Offset = "0xFA9258", VA = "0xFA9258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273DA0", Offset = "0x273DA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public bool rotatePointLights
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xFA9260", Offset = "0xFA9260", VA = "0xFA9260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273DB0", Offset = "0x273DB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xFA9268", Offset = "0xFA9268", VA = "0xFA9268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273DC0", Offset = "0x273DC0")]
		set
		{
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xFA9270", Offset = "0xFA9270", VA = "0xFA9270")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xFA9E98", Offset = "0xFA9E98", VA = "0xFA9E98")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xFAA13C", Offset = "0xFAA13C", VA = "0xFAA13C")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFA92CC", Offset = "0xFA92CC", VA = "0xFA92CC")]
	public void SetAmbience(int index)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFA95D0", Offset = "0xFA95D0", VA = "0xFA95D0")]
	public void SetStyle(int index)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFA9AE0", Offset = "0xFA9AE0", VA = "0xFA9AE0")]
	public void SetFlat(bool flat)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFA9868", Offset = "0xFA9868", VA = "0xFA9868")]
	public void SetCat(bool cat)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xFAA2D4", Offset = "0xFAA2D4", VA = "0xFAA2D4")]
	public void SetLightShadows(bool on)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFA9CB0", Offset = "0xFA9CB0", VA = "0xFA9CB0")]
	public void SetAnimation(int index)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFAA3B0", Offset = "0xFAA3B0", VA = "0xFAA3B0")]
	public TCP2_Demo_Cat()
	{
	}
}
[Token(Token = "0x200002F")]
[ExecuteInEditMode]
public class TCP2_Demo_GammaLinear : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000030")]
	public class LightSettings
	{
		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Light light;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float gammaIntensity;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float linearIntensity;

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x1545D44", Offset = "0x1545D44", VA = "0x1545D44")]
		public LightSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000031")]
	public class MaterialSettings
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color gammaColor;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color linearColor;

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x1545D4C", Offset = "0x1545D4C", VA = "0x1545D4C")]
		public MaterialSettings()
		{
		}
	}

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LightSettings[] lights;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MaterialSettings[] materials;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ColorSpace lastColorSpace;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xFAA3B8", Offset = "0xFAA3B8", VA = "0xFAA3B8")]
	public TCP2_Demo_GammaLinear()
	{
	}
}
[Token(Token = "0x2000032")]
public class TCP2_Demo : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material[] AffectedMaterials;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GUISkin GuiSkin;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light DirLight;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Robot;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Ethan;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mUnityShader;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool mShaderSpecular;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool mShaderBump;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	private bool mShaderReflection;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mShaderRim;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool mShaderRimOutline;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool mShaderOutline;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mRimMin;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mRimMax;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool mRampTextureFlag;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D mRampTexture;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mRampSmoothing;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mLightRotationX;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mLightRotationY;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mViewRobot;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool mRobotOutlineNormals;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private TCP2_Demo_View DemoView;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFA48FC", Offset = "0xFA48FC", VA = "0xFA48FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFA52A0", Offset = "0xFA52A0", VA = "0xFA52A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xFA5430", Offset = "0xFA5430", VA = "0xFA5430")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFA8480", Offset = "0xFA8480", VA = "0xFA8480")]
	private void UnityDiffuseShader()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFA49A4", Offset = "0xFA49A4", VA = "0xFA49A4")]
	private void UpdateShader()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFA81AC", Offset = "0xFA81AC", VA = "0xFA81AC")]
	private void RimOutlineColor()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFA52BC", Offset = "0xFA52BC", VA = "0xFA52BC")]
	private void RestoreRimColors()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFA85D0", Offset = "0xFA85D0", VA = "0xFA85D0")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFA8294", Offset = "0xFA8294", VA = "0xFA8294")]
	private void PrevRamp()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFA8380", Offset = "0xFA8380", VA = "0xFA8380")]
	private void NextRamp()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFA8614", Offset = "0xFA8614", VA = "0xFA8614")]
	public TCP2_Demo()
	{
	}
}
[Token(Token = "0x2000033")]
public class TCP2_Demo_PBS : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000034")]
	public class SkyboxSetting
	{
		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material SkyMaterial;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color lightColor;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 DirLightEuler;

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x1545D54", Offset = "0x1545D54", VA = "0x1545D54")]
		public SkyboxSetting()
		{
		}
	}

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Light DirLight;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject PointLights;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer Robot;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Canvas;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SkyboxSetting[] SkySettings;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool FlipLight;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider SmoothnessSlider;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Text SmoothnessValue;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider MetallicSlider;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Text MetallicValue;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BumpScaleValue;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Text ShaderText;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text SkyboxValue;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Text RampValue;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider RampThresholdSlider;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Text RampThresholdValue;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider RampSmoothSlider;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Text RampSmoothValue;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider RampSmoothAddSlider;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Text RampSmoothAddValue;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RawImage RampImage;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentSky;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentRamp;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Material robotMaterial;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool mUseOutline;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool mRotatePointLights;

	[Token(Token = "0x17000012")]
	public bool ShowPointLights
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xFAA3C0", Offset = "0xFAA3C0", VA = "0xFAA3C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public bool ShowDirLight
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xFAA3F0", Offset = "0xFAA3F0", VA = "0xFAA3F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool RotatePointLights
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xFAA420", Offset = "0xFAA420", VA = "0xFAA420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xFAA428", Offset = "0xFAA428", VA = "0xFAA428")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool UseOutline
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xFAA430", Offset = "0xFAA430", VA = "0xFAA430")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xFAA438", Offset = "0xFAA438", VA = "0xFAA438")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool UseRampTexture
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xFAA5F0", Offset = "0xFAA5F0", VA = "0xFAA5F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool UseStylizedFresnel
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xFAA6D4", Offset = "0xFAA6D4", VA = "0xFAA6D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool UseStylizedSpecular
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xFAA7B8", Offset = "0xFAA7B8", VA = "0xFAA7B8")]
		set
		{
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xFAA89C", Offset = "0xFAA89C", VA = "0xFAA89C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFAB020", Offset = "0xFAB020", VA = "0xFAB020")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xFAB1F8", Offset = "0xFAB1F8", VA = "0xFAB1F8")]
	public void ToggleShader()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xFAB16C", Offset = "0xFAB16C", VA = "0xFAB16C")]
	public void NextSky()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xFAB1B0", Offset = "0xFAB1B0", VA = "0xFAB1B0")]
	public void PrevSky()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xFAB3A8", Offset = "0xFAB3A8", VA = "0xFAB3A8")]
	public void NextRamp()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xFAB3EC", Offset = "0xFAB3EC", VA = "0xFAB3EC")]
	public void PrevRamp()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xFAB434", Offset = "0xFAB434", VA = "0xFAB434")]
	public void SetMetallic(float f)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xFAB50C", Offset = "0xFAB50C", VA = "0xFAB50C")]
	public void SetSmoothness(float f)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xFAB5E4", Offset = "0xFAB5E4", VA = "0xFAB5E4")]
	public void SetBumpScale(float f)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xFAB6BC", Offset = "0xFAB6BC", VA = "0xFAB6BC")]
	public void SetRampThreshold(float f)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xFAB794", Offset = "0xFAB794", VA = "0xFAB794")]
	public void SetRampSmooth(float f)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xFAB86C", Offset = "0xFAB86C", VA = "0xFAB86C")]
	public void SetRampSmoothAdd(float f)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xFAAE68", Offset = "0xFAAE68", VA = "0xFAAE68")]
	private void UpdateRamp()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xFAAB8C", Offset = "0xFAAB8C", VA = "0xFAAB8C")]
	private void UpdateSky()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xFAB32C", Offset = "0xFAB32C", VA = "0xFAB32C")]
	private void ShowUnityStandardShader()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xFAA4F8", Offset = "0xFAA4F8", VA = "0xFAA4F8")]
	public void ShowTCP2Shader()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xFAB944", Offset = "0xFAB944", VA = "0xFAB944")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xFAB988", Offset = "0xFAB988", VA = "0xFAB988")]
	public TCP2_Demo_PBS()
	{
	}
}
[Token(Token = "0x2000035")]
public class TCP2_Demo_PBS_View : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform Pivot;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x27173C", Offset = "0x27173C")]
	public float OrbitStrg;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float OrbitClamp;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271770", Offset = "0x271770")]
	public float PanStrg;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PanClamp;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yMin;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yMax;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2717A4", Offset = "0x2717A4")]
	public float ZoomStrg;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ZoomClamp;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ZoomDistMin;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ZoomDistMax;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2717D8", Offset = "0x2717D8")]
	public float Decceleration;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Rect ignoreMouseRect;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 mouseDelta;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 panAcceleration;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float zoomAcceleration;

	[Token(Token = "0x40001B9")]
	private const float XMax = 60f;

	[Token(Token = "0x40001BA")]
	private const float XMin = 300f;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 mResetPivotPos;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 mResetPivotRot;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool leftMouseHeld;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool rightMouseHeld;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool middleMouseHeld;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xFAB99C", Offset = "0xFAB99C", VA = "0xFAB99C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xFABA78", Offset = "0xFABA78", VA = "0xFABA78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xFABAA8", Offset = "0xFABAA8", VA = "0xFABAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xFAC3C0", Offset = "0xFAC3C0", VA = "0xFAC3C0")]
	public void ResetView()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xFAC510", Offset = "0xFAC510", VA = "0xFAC510")]
	public TCP2_Demo_PBS_View()
	{
	}
}
[Token(Token = "0x2000036")]
public class TCP2_Demo_View : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x27180C", Offset = "0x27180C")]
	public float OrbitStrg;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float OrbitClamp;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271840", Offset = "0x271840")]
	public float PanStrg;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PanClamp;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271874", Offset = "0x271874")]
	public float ZoomStrg;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ZoomClamp;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2718A8", Offset = "0x2718A8")]
	public float Decceleration;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform CharacterTransform;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 mouseDelta;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 panAcceleration;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float zoomAcceleration;

	[Token(Token = "0x40001CF")]
	private const float XMax = 60f;

	[Token(Token = "0x40001D0")]
	private const float XMin = 300f;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool mMouseDown;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xFAC560", Offset = "0xFAC560", VA = "0xFAC560")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xFAC618", Offset = "0xFAC618", VA = "0xFAC618")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xFAC648", Offset = "0xFAC648", VA = "0xFAC648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xFAD02C", Offset = "0xFAD02C", VA = "0xFAD02C")]
	public void ResetView()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xFAD0F8", Offset = "0xFAD0F8", VA = "0xFAD0F8")]
	public TCP2_Demo_View()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FE84", Offset = "0x26FE84")]
public class TCP2_CameraDepth : MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool RenderDepth;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xFA4838", Offset = "0xFA4838", VA = "0xFA4838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xFA48E8", Offset = "0xFA48E8", VA = "0xFA48E8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xFA483C", Offset = "0xFA483C", VA = "0xFA483C")]
	private void SetCameraDepth()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xFA48EC", Offset = "0xFA48EC", VA = "0xFA48EC")]
	public TCP2_CameraDepth()
	{
	}
}
[Token(Token = "0x2000038")]
public class TCP2_GetPosOnWater : MonoBehaviour
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material WaterMaterial;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2718DC", Offset = "0x2718DC")]
	public float heightScale;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x271910", Offset = "0x271910")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271910", Offset = "0x271910")]
	public bool followWaterHeight;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271958", Offset = "0x271958")]
	public float heightOffset;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x27198C", Offset = "0x27198C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x27198C", Offset = "0x27198C")]
	public bool followWaterNormal;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2719D4", Offset = "0x2719D4")]
	public Vector3 upAxis;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271A08", Offset = "0x271A08")]
	public Vector3 postRotation;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool isValid;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	private int sineCount;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] sinePosOffsetsX;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float[] sinePosOffsetsZ;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] sinePhsOffsetsX;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float[] sinePhsOffsetsZ;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xFAD140", Offset = "0xFAD140", VA = "0xFAD140")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xFAD304", Offset = "0xFAD304", VA = "0xFAD304")]
	public Vector3 GetPositionOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xFAE260", Offset = "0xFAE260", VA = "0xFAE260")]
	public Vector3 GetNormalOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xFAF6FC", Offset = "0xFAF6FC", VA = "0xFAF6FC")]
	public TCP2_GetPosOnWater()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public class TCP2_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_TextureSize;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xFAF8AC", Offset = "0xFAF8AC", VA = "0xFAF8AC")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xFB1398", Offset = "0xFB1398", VA = "0xFB1398")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xFB0A80", Offset = "0xFB0A80", VA = "0xFB0A80")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xFB0318", Offset = "0xFB0318", VA = "0xFB0318")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xFB1828", Offset = "0xFB1828", VA = "0xFB1828")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xFB1200", Offset = "0xFB1200", VA = "0xFB1200")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xFB0F30", Offset = "0xFB0F30", VA = "0xFB0F30")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xFB185C", Offset = "0xFB185C", VA = "0xFB185C")]
	public TCP2_PlanarReflection()
	{
	}
}
[Token(Token = "0x200003A")]
public static class TCP2_RuntimeUtils
{
	[Token(Token = "0x40001EA")]
	private const string BASE_SHADER_PATH = "Toony Colors Pro 2/";

	[Token(Token = "0x40001EB")]
	private const string VARIANT_SHADER_PATH = "Hidden/Toony Colors Pro 2/Variants/";

	[Token(Token = "0x40001EC")]
	private const string BASE_SHADER_NAME = "Desktop";

	[Token(Token = "0x40001ED")]
	private const string BASE_SHADER_NAME_MOB = "Mobile";

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string[]> ShaderVariants;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB46730", Offset = "0xB46730", VA = "0xB46730")]
	public static Shader GetShaderWithKeywords(Material material)
	{
		return null;
	}
}
[Token(Token = "0x200003B")]
public class TCP2_ShaderUpdateUnityTime : MonoBehaviour
{
	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB475B0", Offset = "0xB475B0", VA = "0xB475B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB47610", Offset = "0xB47610", VA = "0xB47610")]
	public TCP2_ShaderUpdateUnityTime()
	{
	}
}
[Token(Token = "0x200003C")]
public class RecenterManager : MonoSingleton<RecenterManager>
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public HUDMessage m_hudMessage;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image m_recenterProgImage;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 m_recenterDefaultRotation;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PicoSet m_picoSet;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x70D274", Offset = "0x70D274", VA = "0x70D274")]
	public void SetVisualActive(bool isActive)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x70D34C", Offset = "0x70D34C", VA = "0x70D34C")]
	public void UpdateProgressImage(float progress)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x70D37C", Offset = "0x70D37C", VA = "0x70D37C")]
	public void Recenter()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x70D648", Offset = "0x70D648", VA = "0x70D648")]
	public RecenterManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class DemoUI : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected SSAOPro m_SSAOPro;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x4E75A0", Offset = "0x4E75A0", VA = "0x4E75A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x4E7608", Offset = "0x4E7608", VA = "0x4E7608")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x4E7FF4", Offset = "0x4E7FF4", VA = "0x4E7FF4")]
	public DemoUI()
	{
	}
}
[Token(Token = "0x200003E")]
public class RotateAround : MonoBehaviour
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform Target;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Speed;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected Vector3 m_TargetPosition;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x70F1C8", Offset = "0x70F1C8", VA = "0x70F1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x70F20C", Offset = "0x70F20C", VA = "0x70F20C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x70F2B0", Offset = "0x70F2B0", VA = "0x70F2B0")]
	public RotateAround()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x26FF10", Offset = "0x26FF10")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x26FF10", Offset = "0x26FF10")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x26FF10", Offset = "0x26FF10")]
[ImageEffectAllowedInSceneView]
public class SSAOPro : MonoBehaviour
{
	[Token(Token = "0x2000040")]
	public enum BlurMode
	{
		[Token(Token = "0x400020C")]
		None,
		[Token(Token = "0x400020D")]
		Gaussian,
		[Token(Token = "0x400020E")]
		HighQualityBilateral
	}

	[Token(Token = "0x2000041")]
	public enum SampleCount
	{
		[Token(Token = "0x4000210")]
		VeryLow,
		[Token(Token = "0x4000211")]
		Low,
		[Token(Token = "0x4000212")]
		Medium,
		[Token(Token = "0x4000213")]
		High,
		[Token(Token = "0x4000214")]
		Ultra
	}

	[Token(Token = "0x2000042")]
	protected enum Pass
	{
		[Token(Token = "0x4000216")]
		Clear = 0,
		[Token(Token = "0x4000217")]
		GaussianBlur = 5,
		[Token(Token = "0x4000218")]
		HighQualityBilateralBlur = 6,
		[Token(Token = "0x4000219")]
		Composite = 7
	}

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseHighPrecisionDepthMap;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SampleCount Samples;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271A9C", Offset = "0x271A9C")]
	public int Downsampling;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271AB8", Offset = "0x271AB8")]
	public float Radius;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271AD8", Offset = "0x271AD8")]
	public float Intensity;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271AF4", Offset = "0x271AF4")]
	public float Distance;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271B10", Offset = "0x271B10")]
	public float Bias;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271B28", Offset = "0x271B28")]
	public float LumContribution;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x271B40", Offset = "0x271B40")]
	public Color OcclusionColor;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float CutoffDistance;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float CutoffFalloff;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlurMode Blur;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool BlurDownsampling;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271B54", Offset = "0x271B54")]
	public int BlurPasses;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271B70", Offset = "0x271B70")]
	public float BlurBilateralThreshold;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool DebugAO;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Shader m_ShaderSSAO;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Material m_Material;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Camera m_Camera;

	[Token(Token = "0x17000019")]
	public Material Material
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x70F888", Offset = "0x70F888", VA = "0x70F888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public Shader ShaderSSAO
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x70F984", Offset = "0x70F984", VA = "0x70F984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x70FA48", Offset = "0x70FA48", VA = "0x70FA48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x70FDAC", Offset = "0x70FDAC", VA = "0x70FDAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x70FE78", Offset = "0x70FE78", VA = "0x70FE78")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x710F08", Offset = "0x710F08", VA = "0x710F08")]
	public SSAOPro()
	{
	}
}
[Token(Token = "0x2000043")]
public class AchievementPanelSetUp : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271B8C", Offset = "0x271B8C")]
	[SerializeField]
	private TextMeshProUGUI m_nameText;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TextMeshProUGUI m_descriptionText;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private GameObject m_progressBar;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_sliderValue;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Image m_image;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_iconBorder;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Image m_mainBorder;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color32 m_unlockedBorderColour;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private GameObject m_unlockedObject;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x978CD4", Offset = "0x978CD4", VA = "0x978CD4")]
	public void UpdateAchievementStatus(AchievementsData.AchievementData achievementData)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x979024", Offset = "0x979024", VA = "0x979024")]
	private string SetUpTextForTranslation(string value)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x9790A0", Offset = "0x9790A0", VA = "0x9790A0")]
	public AchievementPanelSetUp()
	{
	}
}
[Token(Token = "0x2000044")]
public class AchievementScroll : MonoBehaviour
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271C54", Offset = "0x271C54")]
	public GameObject m_achievementCanvas;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject m_displayParent;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271C88", Offset = "0x271C88")]
	public Animator m_animScroll;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animParent;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271CBC", Offset = "0x271CBC")]
	public AudioSound m_soundDisplay;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioSound m_soundClose;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_activeDisplayObject;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject m_prefabToLoad;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_isDisplayed;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x9790A8", Offset = "0x9790A8", VA = "0x9790A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x9790B0", Offset = "0x9790B0", VA = "0x9790B0")]
	private void ShowInformation(GameObject displayPrefab)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x979650", Offset = "0x979650", VA = "0x979650")]
	public void CloseDisplay()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x979438", Offset = "0x979438", VA = "0x979438")]
	private void Display()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x979B5C", Offset = "0x979B5C", VA = "0x979B5C")]
	private void OpenScroll()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x979548", Offset = "0x979548", VA = "0x979548")]
	private void CloseScroll()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x979C64", Offset = "0x979C64", VA = "0x979C64")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x979D74", Offset = "0x979D74", VA = "0x979D74")]
	public void CallbackOpenScroll()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x979DE0", Offset = "0x979DE0", VA = "0x979DE0")]
	public void CallbackCloseScroll()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x979E4C", Offset = "0x979E4C", VA = "0x979E4C")]
	public void CallbackOpenIdle()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x979EBC", Offset = "0x979EBC", VA = "0x979EBC")]
	public void CallbackClosedIdle()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x979FF8", Offset = "0x979FF8", VA = "0x979FF8")]
	public AchievementScroll()
	{
	}
}
[Token(Token = "0x2000045")]
public class ArcadeGameMode : GameMode
{
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FFEC", Offset = "0x26FFEC")]
	private sealed class <Start>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeGameMode <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0x53631C", Offset = "0x53631C", VA = "0x53631C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000157")]
			[Address(RVA = "0x53636C", Offset = "0x53636C", VA = "0x53636C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x5360B0", Offset = "0x5360B0", VA = "0x5360B0")]
		[DebuggerHidden]
		public <Start>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x5360D0", Offset = "0x5360D0", VA = "0x5360D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x5360D4", Offset = "0x5360D4", VA = "0x5360D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x536324", Offset = "0x536324", VA = "0x536324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x26FFFC", Offset = "0x26FFFC")]
	private sealed class <ShowResults>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startDelay;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ArcadeGameMode <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015B")]
			[Address(RVA = "0x536058", Offset = "0x536058", VA = "0x536058", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015D")]
			[Address(RVA = "0x5360A8", Offset = "0x5360A8", VA = "0x5360A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x535E68", Offset = "0x535E68", VA = "0x535E68")]
		[DebuggerHidden]
		public <ShowResults>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x535E88", Offset = "0x535E88", VA = "0x535E88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x535E8C", Offset = "0x535E8C", VA = "0x535E8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x536060", Offset = "0x536060", VA = "0x536060", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public uint m_arcadeModeGameDurationInSeconds;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public AudioSound m_startSound;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Score m_scoreDisplay;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Score m_bestScoreDisplay;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Timer m_arcadeModeTimer;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private DoubleBananaBoard m_doubleBoard;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public WaveManager m_waveManager;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public FreezeEffect m_freezeEffect;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject m_bonusScreenPrefab;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float m_sliceBombTimePenalty;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float m_startDelay;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int m_maxBananasPerGame;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_minWaitForBanana;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_maxWaitForBanana;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_bananaChanceStart;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public BananaDisplay m_freezeSign;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public BananaDisplay m_frenzySign;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BananaDisplay m_doubleSign;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	protected bool m_isFreezeBananaActive;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	protected bool m_isFrenzyBananaActive;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	protected bool m_isDoubleBananaActive;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected int m_doubleScoreValue;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float m_timeToNextPowerBanana;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected List<string> m_availablePowerBananasToSpawn;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float m_powerBananaEffectLength;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float m_currentPowerBananaTimer;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject m_buttons;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject m_buttonsTwoWorlds;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected bool m_wavesActive;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSourceObject m_freezeBlitzLoop;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public List<ParticleSystem> m_frenzyEmitters;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x97E880", Offset = "0x97E880", VA = "0x97E880", Slot = "12")]
	public override bool IsFreeze()
	{
		return default(bool);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x97E888", Offset = "0x97E888", VA = "0x97E888", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x97EE94", Offset = "0x97EE94", VA = "0x97EE94")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x97EF38", Offset = "0x97EF38", VA = "0x97EF38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273DE0", Offset = "0x273DE0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x97EFBC", Offset = "0x97EFBC", VA = "0x97EFBC")]
	private float PickNextBananaTime()
	{
		return default(float);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x97F008", Offset = "0x97F008", VA = "0x97F008")]
	private void SpawnNewPowerBanana()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x97F2A4", Offset = "0x97F2A4", VA = "0x97F2A4")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x97F2B4", Offset = "0x97F2B4", VA = "0x97F2B4")]
	private void ResetPowerBananas()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x97FD64", Offset = "0x97FD64", VA = "0x97FD64", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x980008", Offset = "0x980008", VA = "0x980008")]
	private void OnArcadeModeTimerFinished()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x980018", Offset = "0x980018", VA = "0x980018", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x980218", Offset = "0x980218", VA = "0x980218", Slot = "13")]
	public override void UnloadMode()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x980238", Offset = "0x980238", VA = "0x980238")]
	private void OnArcadeModeTimerAboutToFinished()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x9802E8", Offset = "0x9802E8", VA = "0x9802E8")]
	private bool CanStopWaves()
	{
		return default(bool);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x980314", Offset = "0x980314", VA = "0x980314", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9805EC", Offset = "0x9805EC", VA = "0x9805EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273E4C", Offset = "0x273E4C")]
	private IEnumerator ShowResults(float startDelay)
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x9806A0", Offset = "0x9806A0", VA = "0x9806A0", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x980748", Offset = "0x980748", VA = "0x980748", Slot = "30")]
	public override void CancelBlitz()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x980770", Offset = "0x980770", VA = "0x980770", Slot = "32")]
	protected override void OnSuccessfulCombo(List<Vector3> positions)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x980AA4", Offset = "0x980AA4", VA = "0x980AA4", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x981B4C", Offset = "0x981B4C", VA = "0x981B4C", Slot = "24")]
	public override bool FruitSkewered(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x981D3C", Offset = "0x981D3C", VA = "0x981D3C", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x9820C0", Offset = "0x9820C0", VA = "0x9820C0", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x982268", Offset = "0x982268", VA = "0x982268", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x98239C", Offset = "0x98239C", VA = "0x98239C")]
	public ArcadeGameMode()
	{
	}
}
[Token(Token = "0x2000048")]
public class AutoSlicer : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEngine.Object TargetPrefab;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x98693C", Offset = "0x98693C", VA = "0x98693C")]
	private static Vector3 ArbitraryRightVector(Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x986A04", Offset = "0x986A04", VA = "0x986A04")]
	private static Vector3 Project(Plane p, Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x986AA0", Offset = "0x986AA0", VA = "0x986AA0")]
	private static void SliceFruit(Fruit f)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x986F50", Offset = "0x986F50", VA = "0x986F50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x987024", Offset = "0x987024", VA = "0x987024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x98723C", Offset = "0x98723C", VA = "0x98723C")]
	public void CreatePreslicedFruit(PreslicedFruitCache fruitCache)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9870C4", Offset = "0x9870C4", VA = "0x9870C4")]
	private void SliceAllFruit()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x9873BC", Offset = "0x9873BC", VA = "0x9873BC")]
	public AutoSlicer()
	{
	}
}
[Token(Token = "0x2000049")]
public class BananaDisplay : MonoBehaviour
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator m_anim;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isShown;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD0A8A8", Offset = "0xD0A8A8", VA = "0xD0A8A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xD0A92C", Offset = "0xD0A92C", VA = "0xD0A92C")]
	public void ShowBananaBoard()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xD0AA00", Offset = "0xD0AA00", VA = "0xD0AA00")]
	public void HideBananaBoard()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xD0AAD4", Offset = "0xD0AAD4", VA = "0xD0AAD4")]
	public BananaDisplay()
	{
	}
}
[Token(Token = "0x200004A")]
public class ADH
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m_angle;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_depth;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_height;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x978B78", Offset = "0x978B78", VA = "0x978B78")]
	public ADH()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x978BA0", Offset = "0x978BA0", VA = "0x978BA0")]
	public Vector3 ConvertToPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x978C40", Offset = "0x978C40", VA = "0x978C40")]
	public Vector3 ConvertToPosition(Vector3 basePos)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200004B")]
public class BasketEnemy : MonoBehaviour
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ADH m_anglePosition;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rigidbody m_baseBody;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody m_followBody;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonTip;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_acceleration;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_rotateSpeed;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_shotVelocity;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_explosionBonusPoints;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string m_explosionPFX;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_bonusPFX;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string m_shotFX;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_shotBombFX;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_maxSteamFX;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_maxSteamDelay;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AudioSound m_shotWindUp;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSound m_shotRelease;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AudioSound m_flinchSound;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSound m_collisionSound;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public AudioSound m_enemySpawnSound;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSound m_fruitDroppedSound;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject m_tempObject1;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_tempObject2;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected GameObject m_head;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected FlyingEnemyManager m_enemyManager;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Animator m_anim;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fruitScale;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_bonusDistance;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_timeTillMove;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_moveSpeed;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_moveSpeedShooting;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_actualVel;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_idleMovementTimer;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_evasionForce;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_isMoving;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool m_isShooting;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_maxWidthShot;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float m_timerBetweenShots;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_timerShotDelay;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_timerSafetyMode;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_afterShootingDelay;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_shotsLeftInBurst;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int m_wavesTillNextBomb;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 m_minMaxWavesTillNextBomb;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Vector2 m_minMaxFruitCount;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_isFirstShot;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_tagetFirstPos;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_tagetLastPos;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_targetShotUnitVec;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector2 m_minMaxShotsInBurst;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector2 m_minMaxShotDelay;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector2 m_minMaxSafetyMode;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_minShotDelayOnOverlap;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_overlapDistance;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int m_totalInBurst;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float m_firstShotExclusionPercentage;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MultipleParticlePlays[] m_allSteamFX;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int m_currentWaveID;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float m_shotSpreadWidth;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float m_randCurveOffset;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float m_collisionPlayDelay;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float m_collisionPlayDelayTimer;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float m_disruptTime;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float m_disrupt;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float m_xSpeed;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float m_ySpeed;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float m_zSpeed;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float m_shotRecoil;

	[Token(Token = "0x14000001")]
	public static event Action<BasketEnemy> OnBasketEnemyActivated
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xD0AC68", Offset = "0xD0AC68", VA = "0xD0AC68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273F58", Offset = "0x273F58")]
		add
		{
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0xD0AD38", Offset = "0xD0AD38", VA = "0xD0AD38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273F68", Offset = "0x273F68")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action<BasketEnemy> OnBasketEnemyDeactivated
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0xD0AE08", Offset = "0xD0AE08", VA = "0xD0AE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273F78", Offset = "0x273F78")]
		add
		{
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xD0AEDC", Offset = "0xD0AEDC", VA = "0xD0AEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273F88", Offset = "0x273F88")]
		remove
		{
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xD0AFB0", Offset = "0xD0AFB0", VA = "0xD0AFB0")]
	public void SetMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xD0AFC0", Offset = "0xD0AFC0", VA = "0xD0AFC0")]
	public void SetIdleTime(float time)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xD0AFC8", Offset = "0xD0AFC8", VA = "0xD0AFC8")]
	public void SetFruitWavesCount(float min, float max)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xD0AFD4", Offset = "0xD0AFD4", VA = "0xD0AFD4")]
	public void SetBombWavesDelay(float min, float max)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD0AFE0", Offset = "0xD0AFE0", VA = "0xD0AFE0")]
	public void SetSafetyModeDelay(float min, float max)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD0AFEC", Offset = "0xD0AFEC", VA = "0xD0AFEC")]
	public void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD0B0C4", Offset = "0xD0B0C4", VA = "0xD0B0C4")]
	public void Initialise(FlyingEnemyManager man)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD0B868", Offset = "0xD0B868", VA = "0xD0B868")]
	private bool IsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD0B8EC", Offset = "0xD0B8EC", VA = "0xD0B8EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD0B958", Offset = "0xD0B958", VA = "0xD0B958")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD0BA80", Offset = "0xD0BA80", VA = "0xD0BA80")]
	private float GetYDirectionAngleTo(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD0B64C", Offset = "0xD0B64C", VA = "0xD0B64C")]
	private void SnapToDestination()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD0BAC4", Offset = "0xD0BAC4", VA = "0xD0BAC4")]
	private void Move()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD0BEB0", Offset = "0xD0BEB0", VA = "0xD0BEB0")]
	private Vector3 GetEvasionOffset(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD0C1BC", Offset = "0xD0C1BC", VA = "0xD0C1BC")]
	private void Idle()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD0C550", Offset = "0xD0C550", VA = "0xD0C550")]
	public Vector3 GetShotVector(Vector3 from, Vector3 target, float v, float upThrust = 0f, bool local = false, bool useMin = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD0B5E8", Offset = "0xD0B5E8", VA = "0xD0B5E8")]
	private void SetNextBomsWave()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD0C7FC", Offset = "0xD0C7FC", VA = "0xD0C7FC")]
	public void WarmUpCannon()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD0C808", Offset = "0xD0C808", VA = "0xD0C808")]
	public void CoolDownCannon()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD0C814", Offset = "0xD0C814", VA = "0xD0C814")]
	private bool IsFriendlyInTheWayOfTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xD0CBFC", Offset = "0xD0CBFC", VA = "0xD0CBFC")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xD0D6D0", Offset = "0xD0D6D0", VA = "0xD0D6D0")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xD0D814", Offset = "0xD0D814", VA = "0xD0D814")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xD0E750", Offset = "0xD0E750", VA = "0xD0E750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xD0D650", Offset = "0xD0D650", VA = "0xD0D650")]
	private bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xD0E7E4", Offset = "0xD0E7E4", VA = "0xD0E7E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xD0EBB0", Offset = "0xD0EBB0", VA = "0xD0EBB0")]
	public void Explode(Vector3 position)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xD0F1A8", Offset = "0xD0F1A8", VA = "0xD0F1A8")]
	public void Disorientate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xD0F390", Offset = "0xD0F390", VA = "0xD0F390")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xD0F560", Offset = "0xD0F560", VA = "0xD0F560")]
	public BasketEnemy()
	{
	}
}
[Token(Token = "0x200004C")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform m_playerHead;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xD0F6FC", Offset = "0xD0F6FC", VA = "0xD0F6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xD0F8CC", Offset = "0xD0F8CC", VA = "0xD0F8CC")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x200004D")]
public class Blade : MonoBehaviour
{
	[Token(Token = "0x200004E")]
	public class SkeweredFruit
	{
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Fruit fruit;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 offset;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion rotationOffset;

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x537560", Offset = "0x537560", VA = "0x537560")]
		public SkeweredFruit()
		{
		}
	}

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_name;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public XWeaponTrail bladeTrail;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshRenderer m_meshRender;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_materialBase;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Material m_materialSelected;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_highlightedMesh;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minEdgeSliceSpeed;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minTopSliceSpeed;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minSideSliceSpeed;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minPokeSpeed;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minBombSliceSpeed;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minSkewerSliceSpeed;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float vibrateLength;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float oculusVibrateFreq;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float oculusVibrateAmp;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float viveVibrateFreq;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float viveVibrateAmp;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float bombBounceDelay;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float bounceDelay;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bombBounceSFXVelocity;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fruitBounceSFXVelocity;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float criticalDist;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject blitzEffect;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform m_controllerParent;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public List<BladeCollider> m_colliders;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_leftHandModel;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject m_rightHandModel;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_lockPrefab;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Hand m_hand;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public BladeCollider m_physicalCollider;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public float m_length;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float magnitude;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 velocity;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public List<Vector3> positions;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271D70", Offset = "0x271D70")]
	private bool <IsRightBlade>k__BackingField;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform m_center;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Transform m_tip;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform m_grip;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float m_directionAngle;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector3 m_direction;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 m_previousTipPos;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 m_tipCache;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_skewerSliceTimer;

	[Token(Token = "0x40002CB")]
	private const float skewerSpeed = 0.05f;

	[Token(Token = "0x40002CC")]
	private const int maxSkewered = 5;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 m_lastPos;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Quaternion m_lastRot;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271D80", Offset = "0x271D80")]
	public float m_dragFactor;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected List<SkeweredFruit> m_skeweredFruit;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private GameObject m_handModel;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271D9C", Offset = "0x271D9C")]
	private BladeConfig <Config>k__BackingField;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271DAC", Offset = "0x271DAC")]
	private GameObject <Prefab>k__BackingField;

	[Token(Token = "0x1700001F")]
	public float DirectionAngle
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xD0F8D4", Offset = "0xD0F8D4", VA = "0xD0F8D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000020")]
	public Vector3 Direction
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xD0F8DC", Offset = "0xD0F8DC", VA = "0xD0F8DC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000021")]
	public bool IsRightBlade
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xD0F8F0", Offset = "0xD0F8F0", VA = "0xD0F8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273F98", Offset = "0x273F98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xD0F8F8", Offset = "0xD0F8F8", VA = "0xD0F8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273FA8", Offset = "0x273FA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public BladeConfig Config
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xD0F900", Offset = "0xD0F900", VA = "0xD0F900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273FB8", Offset = "0x273FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xD0F908", Offset = "0xD0F908", VA = "0xD0F908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273FC8", Offset = "0x273FC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public GameObject Prefab
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xD0F910", Offset = "0xD0F910", VA = "0xD0F910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273FD8", Offset = "0x273FD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xD0F918", Offset = "0xD0F918", VA = "0xD0F918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273FE8", Offset = "0x273FE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xD0F920", Offset = "0xD0F920", VA = "0xD0F920")]
	public Blade Duplicate()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD0FA38", Offset = "0xD0FA38", VA = "0xD0FA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD101D0", Offset = "0xD101D0", VA = "0xD101D0")]
	public void ShowLockIfLocked()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD10414", Offset = "0xD10414", VA = "0xD10414")]
	public void SelectBlade()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD1055C", Offset = "0xD1055C", VA = "0xD1055C")]
	public void DeselectBlade()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD106A4", Offset = "0xD106A4", VA = "0xD106A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD1087C", Offset = "0xD1087C", VA = "0xD1087C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD10A54", Offset = "0xD10A54", VA = "0xD10A54")]
	public void TurnOffCollision(float time)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xD10BE0", Offset = "0xD10BE0", VA = "0xD10BE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xD10D58", Offset = "0xD10D58", VA = "0xD10D58")]
	public void ResetBlade()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xD10FA4", Offset = "0xD10FA4", VA = "0xD10FA4")]
	public void SetController(Hand _hand)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xD11F8C", Offset = "0xD11F8C", VA = "0xD11F8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xD11574", Offset = "0xD11574", VA = "0xD11574")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xD1298C", Offset = "0xD1298C", VA = "0xD1298C")]
	private bool CanSliceSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xD122B8", Offset = "0xD122B8", VA = "0xD122B8")]
	private void UpdateSkewered()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xD12D64", Offset = "0xD12D64", VA = "0xD12D64")]
	private void MoveSkewered()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xD1313C", Offset = "0xD1313C", VA = "0xD1313C")]
	public void Vibrate(SliceObject sliceObject, Collider col)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xD134FC", Offset = "0xD134FC", VA = "0xD134FC")]
	public void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xD12A50", Offset = "0xD12A50", VA = "0xD12A50")]
	public bool Slice(SliceObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xD13804", Offset = "0xD13804", VA = "0xD13804")]
	public void Skewer(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xD13F74", Offset = "0xD13F74", VA = "0xD13F74")]
	public void Bounce(SliceObject obj)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xD142B0", Offset = "0xD142B0", VA = "0xD142B0")]
	private void SpwanBombDeflectParticle(Vector3 bombPosition)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xD144BC", Offset = "0xD144BC", VA = "0xD144BC")]
	public void SetSliceDelay(SliceObject obj)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xD10120", Offset = "0xD10120", VA = "0xD10120")]
	public void SetBlitzMode(bool on)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xD14580", Offset = "0xD14580", VA = "0xD14580")]
	public Transform GetCenter()
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xD12270", Offset = "0xD12270", VA = "0xD12270")]
	public Vector3 GetTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xD14588", Offset = "0xD14588", VA = "0xD14588")]
	public Vector3 GetGrip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD145D0", Offset = "0xD145D0", VA = "0xD145D0")]
	public Vector3 GetPreviousTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD145E4", Offset = "0xD145E4", VA = "0xD145E4")]
	public void SetPreviousTip(Vector3 pos)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xD145F0", Offset = "0xD145F0", VA = "0xD145F0")]
	public Blade()
	{
	}
}
[Serializable]
[Token(Token = "0x200004F")]
public class BladeAudio
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioSound swipeAudioType;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve volumeCurve;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve pitchCurve;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minReplayInterval;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xD1481C", Offset = "0xD1481C", VA = "0xD1481C")]
	public BladeAudio()
	{
	}
}
[Token(Token = "0x2000050")]
public class BladeAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BladeAudio audio;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSourceObject currentSound;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Blade blade;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 lastSwingDir;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_replayDelay;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xD1482C", Offset = "0xD1482C", VA = "0xD1482C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xD14894", Offset = "0xD14894", VA = "0xD14894")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xD1489C", Offset = "0xD1489C", VA = "0xD1489C")]
	public void PlaySound(BladeAudio audio)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xD14F08", Offset = "0xD14F08", VA = "0xD14F08")]
	public BladeAudioPlayer()
	{
	}
}
[Token(Token = "0x2000051")]
public class BladeCollider : MonoBehaviour
{
	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27000C", Offset = "0x27000C")]
	private sealed class <VibrationTimer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BladeCollider <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CF")]
			[Address(RVA = "0x537668", Offset = "0x537668", VA = "0x537668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0x5376B8", Offset = "0x5376B8", VA = "0x5376B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x537568", Offset = "0x537568", VA = "0x537568")]
		[DebuggerHidden]
		public <VibrationTimer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x537588", Offset = "0x537588", VA = "0x537588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x53758C", Offset = "0x53758C", VA = "0x53758C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x537670", Offset = "0x537670", VA = "0x537670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Blade m_blade;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Collider m_collider;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody m_rigidbody;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector3 m_lastPos;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 m_lastForward;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_collisionEnableTimer;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_allowedToVibrate;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD14F4C", Offset = "0xD14F4C", VA = "0xD14F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD15068", Offset = "0xD15068", VA = "0xD15068")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD15164", Offset = "0xD15164", VA = "0xD15164")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xD158EC", Offset = "0xD158EC", VA = "0xD158EC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xD15A98", Offset = "0xD15A98", VA = "0xD15A98")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xD10BB0", Offset = "0xD10BB0", VA = "0xD10BB0")]
	public void TurnOffCollision(float time)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD151AC", Offset = "0xD151AC", VA = "0xD151AC")]
	private void EvalCollision(Collider col, bool stay = false, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD15AB8", Offset = "0xD15AB8", VA = "0xD15AB8")]
	private bool EvalSkewer(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD15D4C", Offset = "0xD15D4C", VA = "0xD15D4C")]
	private bool EvalSlice(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD16038", Offset = "0xD16038", VA = "0xD16038")]
	public Vector3 GetTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD15FDC", Offset = "0xD15FDC", VA = "0xD15FDC")]
	public Vector3 GetLastTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD160F8", Offset = "0xD160F8", VA = "0xD160F8")]
	private Vector3 Project(Vector3 point, Vector3 planeOrigin, Vector3 planeNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD10070", Offset = "0xD10070", VA = "0xD10070")]
	public bool IsPhysical()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD15A14", Offset = "0xD15A14", VA = "0xD15A14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x273FF8", Offset = "0x273FF8")]
	private IEnumerator VibrationTimer()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD161C0", Offset = "0xD161C0", VA = "0xD161C0")]
	public BladeCollider()
	{
	}
}
[Token(Token = "0x2000053")]
public class BladeManager : MonoSingleton<BladeManager>
{
	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27001C", Offset = "0x27001C")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BladeManager <>4__this;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isRight;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action onComplete;

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x537C88", Offset = "0x537C88", VA = "0x537C88")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x537C90", Offset = "0x537C90", VA = "0x537C90")]
		internal void <ResetBlade>b__0(Blade blade)
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x537D20", Offset = "0x537D20", VA = "0x537D20")]
		internal void <ResetBlade>b__1(Blade blade)
		{
		}
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSound m_bladeSwap;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSound m_bladeHighlight;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Hand m_leftHand;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hand m_rightHand;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Blade m_leftBlade;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Blade m_rightBlade;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Coroutine m_leftHandLoadProcess;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine m_rightHandLoadProcess;

	[Token(Token = "0x40002F2")]
	private const string STORE_KEY_LEFT_BLADE_ID = "BladeLeftID";

	[Token(Token = "0x40002F3")]
	private const string STORE_KEY_RIGHT_BLADE_ID = "BladeRightID";

	[Token(Token = "0x17000026")]
	public bool IsLoadingLeftHand
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xD16738", Offset = "0xD16738", VA = "0xD16738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public bool IsLoadingRightHand
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xD16748", Offset = "0xD16748", VA = "0xD16748")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public Blade Left
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xD135CC", Offset = "0xD135CC", VA = "0xD135CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public Blade Right
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xD136E8", Offset = "0xD136E8", VA = "0xD136E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD16758", Offset = "0xD16758", VA = "0xD16758")]
	public void InitialiseHand(Hand hand)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD16BB4", Offset = "0xD16BB4", VA = "0xD16BB4")]
	private BladeConfig GetStoredBladeConfig(bool isRight)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD16E98", Offset = "0xD16E98", VA = "0xD16E98")]
	public void StoreBladeConfig(bool isRight)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD16880", Offset = "0xD16880", VA = "0xD16880")]
	public void ResetBlade(bool isRight, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD16FFC", Offset = "0xD16FFC", VA = "0xD16FFC")]
	public void ChangeBlade(bool isRight, Blade blade, bool save)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD17634", Offset = "0xD17634", VA = "0xD17634")]
	public void UnloadBlade(Hand hand)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD17918", Offset = "0xD17918", VA = "0xD17918")]
	public void SetBladeBlitz(bool on)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD17A3C", Offset = "0xD17A3C", VA = "0xD17A3C")]
	public void ResetBlades()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD17B54", Offset = "0xD17B54", VA = "0xD17B54")]
	public BladeManager()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD17BE8", Offset = "0xD17BE8", VA = "0xD17BE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2740B4", Offset = "0x2740B4")]
	private void <InitialiseHand>b__18_0()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD17C0C", Offset = "0xD17C0C", VA = "0xD17C0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2740C4", Offset = "0x2740C4")]
	private void <InitialiseHand>b__18_1()
	{
	}
}
[Token(Token = "0x2000055")]
public class BladeMenu : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_newInventoryNotification;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_activated;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_newInventory;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD17C30", Offset = "0xD17C30", VA = "0xD17C30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD17E44", Offset = "0xD17E44", VA = "0xD17E44")]
	private void ActivateChildren(bool activate)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD17F18", Offset = "0xD17F18", VA = "0xD17F18")]
	public BladeMenu()
	{
	}
}
[Token(Token = "0x2000056")]
public class BladeMenuScroll : MonoBehaviour
{
	[Token(Token = "0x2000057")]
	public class BladeDetails
	{
		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_titleId;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string m_descId;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_unlockDescId;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_unlockProgress;

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x537DB0", Offset = "0x537DB0", VA = "0x537DB0")]
		public BladeDetails()
		{
		}
	}

	[Token(Token = "0x2000058")]
	private enum State
	{
		[Token(Token = "0x400030A")]
		Closed,
		[Token(Token = "0x400030B")]
		Opening,
		[Token(Token = "0x400030C")]
		Closing,
		[Token(Token = "0x400030D")]
		Open
	}

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator m_scrollAnimator;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI m_bladeTitleText;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI m_bladeDescText;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_bladeUnlockText;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI m_unlockTitleText;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_progresBarPrefab;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Image m_progressFillImage;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_lockIcon;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private State m_state;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BladeDetails m_currentBladeDetails;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private BladeDetails m_nextBladeDetails;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD17F28", Offset = "0xD17F28", VA = "0xD17F28")]
	public void ShowBladeDetails(BladeDetails details)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD17F30", Offset = "0xD17F30", VA = "0xD17F30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD17F34", Offset = "0xD17F34", VA = "0xD17F34")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD17F6C", Offset = "0xD17F6C", VA = "0xD17F6C")]
	private void UpdateClosed()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD182AC", Offset = "0xD182AC", VA = "0xD182AC")]
	private void UpdateOpening()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD18444", Offset = "0xD18444", VA = "0xD18444")]
	private void UpdateClosing()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD1853C", Offset = "0xD1853C", VA = "0xD1853C")]
	private void UpdateOpen()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD185E0", Offset = "0xD185E0", VA = "0xD185E0")]
	public BladeMenuScroll()
	{
	}
}
[Token(Token = "0x2000059")]
public class BladeStandSelection
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Hand m_hand;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private BladeStandPoint m_point;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD18BC4", Offset = "0xD18BC4", VA = "0xD18BC4")]
	public void TrySetSelection(Hand h, BladeStandPoint p, bool force = false)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD18858", Offset = "0xD18858", VA = "0xD18858")]
	public void TryRemoveSelection(Hand h, BladeStandPoint p)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD195E4", Offset = "0xD195E4", VA = "0xD195E4")]
	public Blade GetBlade()
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD18644", Offset = "0xD18644", VA = "0xD18644")]
	public bool IsCurrentPointSet(BladeStandPoint p)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD19560", Offset = "0xD19560", VA = "0xD19560")]
	public bool HandEquals(Hand h)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD18DB8", Offset = "0xD18DB8", VA = "0xD18DB8")]
	public void InternalUpdate(BladeStand stand, float time, float deltaTime)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD18FCC", Offset = "0xD18FCC", VA = "0xD18FCC")]
	public void ForceClear()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD1994C", Offset = "0xD1994C", VA = "0xD1994C")]
	public BladeStandSelection()
	{
	}
}
[Token(Token = "0x200005A")]
public class BladeStand : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27002C", Offset = "0x27002C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Blade blade;

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x537DB8", Offset = "0x537DB8", VA = "0x537DB8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x537DC0", Offset = "0x537DC0", VA = "0x537DC0")]
		internal void <Start>b__0(Blade result)
		{
		}
	}

	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27003C", Offset = "0x27003C")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BladeStand <>4__this;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <bladePointIndex>5__2;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private BladeConfig[] <>7__wrap2;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>7__wrap3;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private BladeStandPoint <bladePoint>5__5;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000206")]
			[Address(RVA = "0x538550", Offset = "0x538550", VA = "0x538550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0x5385A0", Offset = "0x5385A0", VA = "0x5385A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x537DC8", Offset = "0x537DC8", VA = "0x537DC8")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x537DE8", Offset = "0x537DE8", VA = "0x537DE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x537DEC", Offset = "0x537DEC", VA = "0x537DEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x538558", Offset = "0x538558", VA = "0x538558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BladeMenuScroll m_scroll;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<BladeStandPoint> m_bladePoints;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HandVibration m_vibrationSettings;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_scaleTime;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_scaleMax;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_scaleOffset;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BladeStandSelection m_left;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private BladeStandSelection m_right;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD185E8", Offset = "0xD185E8", VA = "0xD185E8")]
	public bool IsSelected(BladeStandPoint p)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD186C8", Offset = "0xD186C8", VA = "0xD186C8")]
	public void TryDeSelectBlade(Collider col, BladeStandPoint p)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD18950", Offset = "0xD18950", VA = "0xD18950")]
	public void TrySelectBlade(Collider col, BladeStandPoint p)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD18CA4", Offset = "0xD18CA4", VA = "0xD18CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2740D4", Offset = "0x2740D4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xD18D28", Offset = "0xD18D28", VA = "0xD18D28")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD18F58", Offset = "0xD18F58", VA = "0xD18F58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD18FFC", Offset = "0xD18FFC", VA = "0xD18FFC")]
	public void OnHandInput(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD19688", Offset = "0xD19688", VA = "0xD19688")]
	private BladeMenuScroll.BladeDetails GetBladeDetails(Blade blade)
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD19830", Offset = "0xD19830", VA = "0xD19830")]
	public BladeStand()
	{
	}
}
[Token(Token = "0x200005D")]
public class BladeStandPoint : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Blade m_blade;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BladeStand m_stand;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject m_lock;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_newSign;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_isSelected;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_nextStateCheckTimer;

	[Token(Token = "0x4000328")]
	private const float m_stateCheckDelay = 5f;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xD19954", Offset = "0xD19954", VA = "0xD19954")]
	private void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD199A4", Offset = "0xD199A4", VA = "0xD199A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xD19AF8", Offset = "0xD19AF8", VA = "0xD19AF8")]
	private void UpdateBladeState()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xD19CF0", Offset = "0xD19CF0", VA = "0xD19CF0")]
	public Blade GetBlade()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD19CF8", Offset = "0xD19CF8", VA = "0xD19CF8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD19E04", Offset = "0xD19E04", VA = "0xD19E04")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD19F10", Offset = "0xD19F10", VA = "0xD19F10")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD1A01C", Offset = "0xD1A01C", VA = "0xD1A01C")]
	public BladeStandPoint()
	{
	}
}
[Token(Token = "0x200005E")]
public class BlitzComboManager : MonoSingleton<BlitzComboManager>
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int m_comboCount;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_timer;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_blitzResetTime;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fullVolLevelLight;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int fullVolLevelHeavy;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameMode m_gameMode;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_fadeTime;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_comboEffectOffset;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float volLight;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volHeavy;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private AudioSourceObject m_lightSound;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSourceObject m_heavySound;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_fadingOut;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD1A024", Offset = "0xD1A024", VA = "0xD1A024")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD1A124", Offset = "0xD1A124", VA = "0xD1A124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD1A2B4", Offset = "0xD1A2B4", VA = "0xD1A2B4")]
	public void AddCombo()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD1A870", Offset = "0xD1A870", VA = "0xD1A870")]
	public void ResetBlitz()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD1A914", Offset = "0xD1A914", VA = "0xD1A914")]
	private void EnableBlitzMode()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xD1ABA8", Offset = "0xD1ABA8", VA = "0xD1ABA8")]
	private void DisableBlitzMode()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xD1AD78", Offset = "0xD1AD78", VA = "0xD1AD78")]
	public BlitzComboManager()
	{
	}
}
[Token(Token = "0x200005F")]
public class Bomb : SliceObject
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_ExplosionPrefabName;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int penaltyTime;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_maxFlickVelocity;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271DCC", Offset = "0x271DCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271DCC", Offset = "0x271DCC")]
	public AnimationCurve m_slicePlaneDistanceConfidenceCurve;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AnimationCurve m_collinearConfidenceCurve;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve m_contactSeparationConfidenceCurve;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AnimationCurve m_bladeVelocityConfidenceCurve;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve m_bladeAngularVelocityConfidenceCurve;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271E2C", Offset = "0x271E2C")]
	public float explosionForce;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float explosionRadius;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public GameObject m_fusePFX;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float m_explodeDistanceFromPlayer;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private SphereCollider[] m_sphereColliders;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_explodable;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_hasExploded;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float m_cleanupTimer;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int m_basketLayer;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool m_deflect;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD1AE38", Offset = "0xD1AE38", VA = "0xD1AE38", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xD1AF94", Offset = "0xD1AF94", VA = "0xD1AF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xD1B018", Offset = "0xD1B018", VA = "0xD1B018", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xD1B13C", Offset = "0xD1B13C", VA = "0xD1B13C", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD1B52C", Offset = "0xD1B52C", VA = "0xD1B52C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD1C34C", Offset = "0xD1C34C", VA = "0xD1C34C")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD1C958", Offset = "0xD1C958", VA = "0xD1C958")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD1C934", Offset = "0xD1C934", VA = "0xD1C934")]
	public bool CanExplode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD1C0F0", Offset = "0xD1C0F0", VA = "0xD1C0F0")]
	private void DisableFuse()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD1BD04", Offset = "0xD1BD04", VA = "0xD1BD04")]
	public bool Explode(ObjectPooler pool)
	{
		return default(bool);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD1CDA0", Offset = "0xD1CDA0", VA = "0xD1CDA0", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD1CF20", Offset = "0xD1CF20", VA = "0xD1CF20", Slot = "9")]
	public override void Recycle()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xD15FD0", Offset = "0xD15FD0", VA = "0xD15FD0")]
	public void Deflect()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xD1CF90", Offset = "0xD1CF90", VA = "0xD1CF90")]
	public Bomb()
	{
	}
}
[Token(Token = "0x2000060")]
public class BombRepel : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float bombRepelForce;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD1CFD8", Offset = "0xD1CFD8", VA = "0xD1CFD8")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xD1D240", Offset = "0xD1D240", VA = "0xD1D240")]
	public BombRepel()
	{
	}
}
[Token(Token = "0x2000061")]
public class Bonus : MonoBehaviour
{
	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD1D254", Offset = "0xD1D254", VA = "0xD1D254", Slot = "4")]
	public virtual void ResetData()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD1D258", Offset = "0xD1D258", VA = "0xD1D258", Slot = "5")]
	public virtual void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xD1D25C", Offset = "0xD1D25C", VA = "0xD1D25C", Slot = "6")]
	public virtual string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xD1D2A8", Offset = "0xD1D2A8", VA = "0xD1D2A8", Slot = "7")]
	public virtual int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD1D2B0", Offset = "0xD1D2B0", VA = "0xD1D2B0", Slot = "8")]
	public virtual Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xD1D2B8", Offset = "0xD1D2B8", VA = "0xD1D2B8")]
	public Bonus()
	{
	}
}
[Token(Token = "0x2000062")]
public class BonusDisplay : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image m_icon;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI m_titleText;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI m_pointsText;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD1D370", Offset = "0xD1D370", VA = "0xD1D370")]
	public void SetData(Bonus bonus)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD1D74C", Offset = "0xD1D74C", VA = "0xD1D74C")]
	public BonusDisplay()
	{
	}
}
[Token(Token = "0x2000063")]
public class BonusCallbackInt : UnityEvent<int>
{
	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD1D2C0", Offset = "0xD1D2C0", VA = "0xD1D2C0")]
	public BonusCallbackInt()
	{
	}
}
[Token(Token = "0x2000064")]
public class BonusCallbackString : UnityEvent<string>
{
	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD1D318", Offset = "0xD1D318", VA = "0xD1D318")]
	public BonusCallbackString()
	{
	}
}
[Token(Token = "0x2000065")]
public class BonusManager : MonoSingleton<BonusManager>
{
	[Serializable]
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27004C", Offset = "0x27004C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Comparison<Bonus> <>9__9_0;

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x538618", Offset = "0x538618", VA = "0x538618")]
		public <>c()
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x538620", Offset = "0x538620", VA = "0x538620")]
		internal int <GetTop3Bonuses>b__9_0(Bonus a, Bonus b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Bonus[] m_allBonuses;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_debugLog;

	[NonSerialized]
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BonusCallbackInt m_eventFinalScore;

	[NonSerialized]
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BonusCallbackInt m_eventComboComplete;

	[NonSerialized]
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public BonusCallbackString m_eventSlicedFruit;

	[NonSerialized]
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_eventFruitMissed;

	[NonSerialized]
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEvent m_eventSlicedBomb;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xD1D754", Offset = "0xD1D754", VA = "0xD1D754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD1D844", Offset = "0xD1D844", VA = "0xD1D844")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xD1DA34", Offset = "0xD1DA34", VA = "0xD1DA34")]
	public Bonus[] GetTop3Bonuses()
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xD1E0F4", Offset = "0xD1E0F4", VA = "0xD1E0F4")]
	public void FinalScore(int score)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD1E164", Offset = "0xD1E164", VA = "0xD1E164")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD1E1D4", Offset = "0xD1E1D4", VA = "0xD1E1D4")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD1E244", Offset = "0xD1E244", VA = "0xD1E244")]
	public void FruitMissed()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD1E26C", Offset = "0xD1E26C", VA = "0xD1E26C")]
	public void SlicedBomb()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD1D8C0", Offset = "0xD1D8C0", VA = "0xD1D8C0")]
	public void ShuffleBonuses()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD1E294", Offset = "0xD1E294", VA = "0xD1E294")]
	public int GetTop3BonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD1E36C", Offset = "0xD1E36C", VA = "0xD1E36C")]
	public BonusManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class Bonus_BananaFrenzy : Bonus
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconSingleSprite;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite m_iconMultipleSprite;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_frenzyCount;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_freezeCount;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_scoreX2Count;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x881E04", Offset = "0x881E04", VA = "0x881E04", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x881E18", Offset = "0x881E18", VA = "0x881E18", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x881F08", Offset = "0x881F08", VA = "0x881F08")]
	private void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x88201C", Offset = "0x88201C", VA = "0x88201C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x882180", Offset = "0x882180", VA = "0x882180", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x882214", Offset = "0x882214", VA = "0x882214", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x882248", Offset = "0x882248", VA = "0x882248")]
	public Bonus_BananaFrenzy()
	{
	}
}
[Token(Token = "0x2000068")]
public class Bonus_BestCombo : Bonus
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconCombo;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_highestCombo;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x882250", Offset = "0x882250", VA = "0x882250", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x88225C", Offset = "0x88225C", VA = "0x88225C", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x88234C", Offset = "0x88234C", VA = "0x88234C")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x88236C", Offset = "0x88236C", VA = "0x88236C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x88247C", Offset = "0x88247C", VA = "0x88247C", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x8824A8", Offset = "0x8824A8", VA = "0x8824A8", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x8824B0", Offset = "0x8824B0", VA = "0x8824B0")]
	public Bonus_BestCombo()
	{
	}
}
[Token(Token = "0x2000069")]
public class Bonus_BombsHit : Bonus
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconBomb;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_bombsHit;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x8824B8", Offset = "0x8824B8", VA = "0x8824B8", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x8824C4", Offset = "0x8824C4", VA = "0x8824C4", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x88257C", Offset = "0x88257C", VA = "0x88257C")]
	public void SlicedBomb()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x88258C", Offset = "0x88258C", VA = "0x88258C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x882628", Offset = "0x882628", VA = "0x882628", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x882648", Offset = "0x882648", VA = "0x882648", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x882650", Offset = "0x882650", VA = "0x882650")]
	public Bonus_BombsHit()
	{
	}
}
[Token(Token = "0x200006A")]
public class Bonus_ComboBonus : Bonus
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconCombo;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_numberOfCombos;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x882658", Offset = "0x882658", VA = "0x882658", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x882664", Offset = "0x882664", VA = "0x882664", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x882754", Offset = "0x882754", VA = "0x882754")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x882764", Offset = "0x882764", VA = "0x882764", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x88287C", Offset = "0x88287C", VA = "0x88287C", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x8828BC", Offset = "0x8828BC", VA = "0x8828BC", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x8828C4", Offset = "0x8828C4", VA = "0x8828C4")]
	public Bonus_ComboBonus()
	{
	}
}
[Token(Token = "0x200006B")]
public class Bonus_Default : Bonus
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_icon;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_title;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_points;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x8828CC", Offset = "0x8828CC", VA = "0x8828CC", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x8828D4", Offset = "0x8828D4", VA = "0x8828D4", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x8828DC", Offset = "0x8828DC", VA = "0x8828DC", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x8828E4", Offset = "0x8828E4", VA = "0x8828E4")]
	public Bonus_Default()
	{
	}
}
[Token(Token = "0x200006C")]
public class Bonus_FinalScore : Bonus
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_icon5;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite m_icon10;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sprite m_icon100;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_icon111;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_finalScore;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x8828EC", Offset = "0x8828EC", VA = "0x8828EC", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x8828F8", Offset = "0x8828F8", VA = "0x8828F8", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x8829E8", Offset = "0x8829E8", VA = "0x8829E8")]
	private void FinalScore(int amount)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x882A84", Offset = "0x882A84", VA = "0x882A84", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x882BF4", Offset = "0x882BF4", VA = "0x882BF4", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x882CB4", Offset = "0x882CB4", VA = "0x882CB4", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x882D60", Offset = "0x882D60", VA = "0x882D60")]
	public Bonus_FinalScore()
	{
	}
}
[Token(Token = "0x200006D")]
public class Bonus_FirstAndLast : Bonus
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconFirstLast;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_firstFruit;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string m_lastFruit;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x882D68", Offset = "0x882D68", VA = "0x882D68", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x882DD4", Offset = "0x882DD4", VA = "0x882DD4", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x882EC4", Offset = "0x882EC4", VA = "0x882EC4")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x882F4C", Offset = "0x882F4C", VA = "0x882F4C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x882FE8", Offset = "0x882FE8", VA = "0x882FE8", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x88301C", Offset = "0x88301C", VA = "0x88301C", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x883024", Offset = "0x883024", VA = "0x883024")]
	public Bonus_FirstAndLast()
	{
	}
}
[Token(Token = "0x200006E")]
public class Bonus_FruitDropped : Bonus
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconNoFruitDropped;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_fruitDropped;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x88309C", Offset = "0x88309C", VA = "0x88309C", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x8830A8", Offset = "0x8830A8", VA = "0x8830A8", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x883160", Offset = "0x883160", VA = "0x883160")]
	public void FruitMissed()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x88316C", Offset = "0x88316C", VA = "0x88316C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x8831E4", Offset = "0x8831E4", VA = "0x8831E4", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x8831F8", Offset = "0x8831F8", VA = "0x8831F8", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x883200", Offset = "0x883200", VA = "0x883200")]
	public Bonus_FruitDropped()
	{
	}
}
[Token(Token = "0x200006F")]
public class Bonus_OneTypeFruit : Bonus
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite m_iconFirstLast;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_firstFruit;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_onlyOne;

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x883208", Offset = "0x883208", VA = "0x883208", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x883264", Offset = "0x883264", VA = "0x883264", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x883354", Offset = "0x883354", VA = "0x883354")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x8833F0", Offset = "0x8833F0", VA = "0x8833F0", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x8834B8", Offset = "0x8834B8", VA = "0x8834B8", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x883550", Offset = "0x883550", VA = "0x883550", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x883558", Offset = "0x883558", VA = "0x883558")]
	public Bonus_OneTypeFruit()
	{
	}
}
[Token(Token = "0x2000070")]
public class BonusUI : MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator m_anim;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BonusDisplay m_bonus1;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BonusDisplay m_bonus2;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BonusDisplay m_bonus3;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI m_testTotalPoints;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_totalPoints;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x8818D8", Offset = "0x8818D8", VA = "0x8818D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x88195C", Offset = "0x88195C", VA = "0x88195C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x881C70", Offset = "0x881C70", VA = "0x881C70")]
	public void ScrollOpen()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x881CDC", Offset = "0x881CDC", VA = "0x881CDC")]
	public void ApplyTotalToScore()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x881DFC", Offset = "0x881DFC", VA = "0x881DFC")]
	public BonusUI()
	{
	}
}
[Token(Token = "0x2000071")]
public class CannonSpawnFX : MonoBehaviour
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 effectOffset;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x885A0C", Offset = "0x885A0C", VA = "0x885A0C")]
	public void SpawnFX(float delta, bool enableChild = false)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x886078", Offset = "0x886078", VA = "0x886078")]
	public CannonSpawnFX()
	{
	}
}
[Token(Token = "0x2000072")]
public class ClassicGameMode : GameMode
{
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27005C", Offset = "0x27005C")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ClassicGameMode <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0x538D6C", Offset = "0x538D6C", VA = "0x538D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0x538DBC", Offset = "0x538DBC", VA = "0x538DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x538C7C", Offset = "0x538C7C", VA = "0x538C7C")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x538C9C", Offset = "0x538C9C", VA = "0x538C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x538CA0", Offset = "0x538CA0", VA = "0x538CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x538D74", Offset = "0x538D74", VA = "0x538D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000378")]
	private const int LifeCount = 3;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int m_lives;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Life[] m_livesHud;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public WaveManager m_waveManager;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string droppedFruitPFX;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject m_buttons;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x8869E0", Offset = "0x8869E0", VA = "0x8869E0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x886DB0", Offset = "0x886DB0", VA = "0x886DB0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x886E54", Offset = "0x886E54", VA = "0x886E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274190", Offset = "0x274190")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x886ED8", Offset = "0x886ED8", VA = "0x886ED8")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x886EE8", Offset = "0x886EE8", VA = "0x886EE8", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x886F0C", Offset = "0x886F0C", VA = "0x886F0C", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x886F54", Offset = "0x886F54", VA = "0x886F54", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x887040", Offset = "0x887040", VA = "0x887040", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x8870E8", Offset = "0x8870E8", VA = "0x8870E8", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x887170", Offset = "0x887170", VA = "0x887170", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x8872F8", Offset = "0x8872F8", VA = "0x8872F8", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x887388", Offset = "0x887388", VA = "0x887388", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x887780", Offset = "0x887780", VA = "0x887780")]
	public ClassicGameMode()
	{
	}
}
[Token(Token = "0x2000074")]
public class DestroyAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float DestroyAfter;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x4E7FFC", Offset = "0x4E7FFC", VA = "0x4E7FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x4E8094", Offset = "0x4E8094", VA = "0x4E8094")]
	public DestroyAfterDelay()
	{
	}
}
[Token(Token = "0x2000075")]
public class DisableAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float DisableAfter;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x4E8188", Offset = "0x4E8188", VA = "0x4E8188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x4E8194", Offset = "0x4E8194", VA = "0x4E8194")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x4E8204", Offset = "0x4E8204", VA = "0x4E8204")]
	public DisableAfterDelay()
	{
	}
}
[Token(Token = "0x2000076")]
public class DisableForSeeThrough : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] m_objectsToDisable;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x4E8214", Offset = "0x4E8214", VA = "0x4E8214")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x4E8394", Offset = "0x4E8394", VA = "0x4E8394")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x4E82D0", Offset = "0x4E82D0", VA = "0x4E82D0")]
	private void SeeThroughChanged(bool isActive)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x4E8444", Offset = "0x4E8444", VA = "0x4E8444")]
	public DisableForSeeThrough()
	{
	}
}
[Token(Token = "0x2000077")]
public class DoubleBananaBoard : MonoBehaviour
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Score score;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator animator;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject particles;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float skyBoxExposure;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startExposure;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x4E844C", Offset = "0x4E844C", VA = "0x4E844C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x4E855C", Offset = "0x4E855C", VA = "0x4E855C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x4E8648", Offset = "0x4E8648", VA = "0x4E8648")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x4E8774", Offset = "0x4E8774", VA = "0x4E8774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x4E8860", Offset = "0x4E8860", VA = "0x4E8860")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x4E8B54", Offset = "0x4E8B54", VA = "0x4E8B54")]
	public void AddScore(int amt)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x4E8C0C", Offset = "0x4E8C0C", VA = "0x4E8C0C")]
	public void SetScore(int amt, bool snap = false)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x4E864C", Offset = "0x4E864C", VA = "0x4E864C")]
	public void Show()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x4E89E8", Offset = "0x4E89E8", VA = "0x4E89E8")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x4E8CD4", Offset = "0x4E8CD4", VA = "0x4E8CD4")]
	public DoubleBananaBoard()
	{
	}
}
[Token(Token = "0x2000078")]
public class EnableForSeeThrough : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] m_objectsToEnable;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x4E96C4", Offset = "0x4E96C4", VA = "0x4E96C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x4E9848", Offset = "0x4E9848", VA = "0x4E9848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x4E9780", Offset = "0x4E9780", VA = "0x4E9780")]
	private void SeeThroughChanged(bool isActive)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x4E98F8", Offset = "0x4E98F8", VA = "0x4E98F8")]
	public EnableForSeeThrough()
	{
	}
}
[Token(Token = "0x2000079")]
public class FestiveCounter : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int countBy;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x4EBB18", Offset = "0x4EBB18", VA = "0x4EBB18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x4EBD38", Offset = "0x4EBD38", VA = "0x4EBD38")]
	public FestiveCounter()
	{
	}
}
[Token(Token = "0x200007A")]
public class FestiveEvent : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string eventName;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject m_sceneDeco;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject m_menuPrefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_classicPrefab;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject m_arcadePrefab;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_zenPrefab;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject m_survivalPrefab;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_bladesMenuPrefab;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ObjectPooler m_fruitPooler;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_basketEnemyPrefab;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AudioType m_startSound;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StatsId m_eventStat;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public string m_achievementName;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_currentDeco;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public string m_sound;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_eventEndTime;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_timeOffset;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x4EBD48", Offset = "0x4EBD48", VA = "0x4EBD48")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x4EBF10", Offset = "0x4EBF10", VA = "0x4EBF10")]
	public void GiveAchievement()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x4EC008", Offset = "0x4EC008", VA = "0x4EC008")]
	public void OnLeaderboardRecieved(Leaderboard lBoard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x4EC298", Offset = "0x4EC298", VA = "0x4EC298")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x4EC2A0", Offset = "0x4EC2A0", VA = "0x4EC2A0")]
	private int GetCurrentTime()
	{
		return default(int);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x4EC3C4", Offset = "0x4EC3C4", VA = "0x4EC3C4")]
	public int GetDaysRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x4EC444", Offset = "0x4EC444", VA = "0x4EC444")]
	private void OnDRMTimeResponse(bool success, WWW request)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x4EC4DC", Offset = "0x4EC4DC", VA = "0x4EC4DC")]
	public string GetMenuMusic()
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x4EC414", Offset = "0x4EC414", VA = "0x4EC414")]
	public int GetEventTimeRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x4EC4E4", Offset = "0x4EC4E4", VA = "0x4EC4E4")]
	public string GetEventTimeRemainingString()
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x4EBC6C", Offset = "0x4EBC6C", VA = "0x4EBC6C")]
	public void Increment(int count)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x4EC7EC", Offset = "0x4EC7EC", VA = "0x4EC7EC")]
	public void SubmitEventScore()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x4EC9E4", Offset = "0x4EC9E4", VA = "0x4EC9E4", Slot = "4")]
	public virtual void OnScoreSubmitted(Leaderboard leaderboard, bool success)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x4EC9E8", Offset = "0x4EC9E8", VA = "0x4EC9E8")]
	public void SetupScene(SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x4ECCAC", Offset = "0x4ECCAC", VA = "0x4ECCAC")]
	public FestiveEvent()
	{
	}
}
[Token(Token = "0x200007B")]
public class FestiveEventTimer : MonoBehaviour
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string translation;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string translationDay;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string translationDays;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI m_text;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x4ECD50", Offset = "0x4ECD50", VA = "0x4ECD50")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x4ECDB8", Offset = "0x4ECDB8", VA = "0x4ECDB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x4ED354", Offset = "0x4ED354", VA = "0x4ED354")]
	public FestiveEventTimer()
	{
	}
}
[Token(Token = "0x200007C")]
public class FlyingEnemyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007D")]
	public class EnemyCount
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int startScore;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int enemyCount;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int enemyExtents;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int enemySpread;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 m_minMaxFruitCount;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_minMaxBombCount;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 m_minMaxShotSafetyTime;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_minMaxWaitTime;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x53AD78", Offset = "0x53AD78", VA = "0x53AD78")]
		public EnemyCount()
		{
		}
	}

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_enemyPrefab;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<BasketEnemy> m_allEnemies;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector2 m_minMaxAngle;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 m_minMaxDepth;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 m_minMaxHeight;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_minMaxMoveSpeed;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxEnemyArc;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_exclusionColParent;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BoxCollider[] m_allExclusionCols;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Queue<int> m_destroyedEnemyScores;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_currentEnemyIndex;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_rebirthScoreAmount;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_timeBetweenShots;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float m_timeSinceLastShot;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected int m_score;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<EnemyCount> m_enemyCount;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_medianAngle;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_medianAngleSpeed;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_medianAngleTimer;

	[Token(Token = "0x1700002E")]
	public int Score
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x4ED73C", Offset = "0x4ED73C", VA = "0x4ED73C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x4ED744", Offset = "0x4ED744", VA = "0x4ED744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x4EDAF0", Offset = "0x4EDAF0", VA = "0x4EDAF0")]
	public bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x4EDB0C", Offset = "0x4EDB0C", VA = "0x4EDB0C")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x4EDB18", Offset = "0x4EDB18", VA = "0x4EDB18")]
	private bool IsPointInExclusionZone(Vector3 pos, BasketEnemy enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x4EDEE0", Offset = "0x4EDEE0", VA = "0x4EDEE0")]
	public void SetNewRandomPosition(BasketEnemy curEnemy)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x4EE29C", Offset = "0x4EE29C", VA = "0x4EE29C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x4EE444", Offset = "0x4EE444", VA = "0x4EE444")]
	public void AddEnemy()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x4EE7C4", Offset = "0x4EE7C4", VA = "0x4EE7C4")]
	public void DestroyEnemy(BasketEnemy enemy)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x4EE964", Offset = "0x4EE964", VA = "0x4EE964")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x4EEB94", Offset = "0x4EEB94", VA = "0x4EEB94")]
	public void OnScoreChanged(int score)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x4ED890", Offset = "0x4ED890", VA = "0x4ED890")]
	public void SetEnemyCountData(EnemyCount en)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x4EED58", Offset = "0x4EED58", VA = "0x4EED58")]
	public void OnGameover()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x4EEFD0", Offset = "0x4EEFD0", VA = "0x4EEFD0")]
	public FlyingEnemyManager()
	{
	}
}
[Token(Token = "0x200007E")]
public class FoliageAnimation : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Mesh mesh;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3[] verts_ref;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3[] verts;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] verts_time;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float[] verts_speed;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time_offset;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 globalSway;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 vertSway;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float globalSwayTime;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vertSwayTime;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x4EF194", Offset = "0x4EF194", VA = "0x4EF194")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x4EF43C", Offset = "0x4EF43C", VA = "0x4EF43C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x4EF448", Offset = "0x4EF448", VA = "0x4EF448")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x4EF454", Offset = "0x4EF454", VA = "0x4EF454")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x4EF620", Offset = "0x4EF620", VA = "0x4EF620")]
	public FoliageAnimation()
	{
	}
}
[Token(Token = "0x200007F")]
public class FovIndicators : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	private enum IndicatorMode
	{
		[Token(Token = "0x40003DF")]
		Off,
		[Token(Token = "0x40003E0")]
		ShowOnlyBombs,
		[Token(Token = "0x40003E1")]
		ShowBombsAndFruits,
		[Token(Token = "0x40003E2")]
		ShowBombsAndPowerFruit,
		[Token(Token = "0x40003E3")]
		ShowOnlyEnemyBasket
	}

	[Token(Token = "0x2000081")]
	private enum TypeOfObjectBeingTracked
	{
		[Token(Token = "0x40003E5")]
		Bomb,
		[Token(Token = "0x40003E6")]
		Fruit,
		[Token(Token = "0x40003E7")]
		PowerFruit,
		[Token(Token = "0x40003E8")]
		BasketEnemy
	}

	[Token(Token = "0x2000082")]
	private enum PlayerIndicatorPreference
	{
		[Token(Token = "0x40003EA")]
		Default,
		[Token(Token = "0x40003EB")]
		ShowAll,
		[Token(Token = "0x40003EC")]
		Off
	}

	[Token(Token = "0x2000083")]
	private struct ObjectInfo
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_transform;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public TypeOfObjectBeingTracked m_objectType;

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x53AF30", Offset = "0x53AF30", VA = "0x53AF30")]
		public ObjectInfo(Transform transform, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
		{
		}
	}

	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27006C", Offset = "0x27006C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SliceObject sliceObject;

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x53ADE0", Offset = "0x53ADE0", VA = "0x53ADE0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x53ADE8", Offset = "0x53ADE8", VA = "0x53ADE8")]
		internal bool <RemoveSlicedObjectFromList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27007C", Offset = "0x27007C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BasketEnemy basketEnemy;

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x53AE88", Offset = "0x53AE88", VA = "0x53AE88")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x53AE90", Offset = "0x53AE90", VA = "0x53AE90")]
		internal bool <RemoveBasketEnemyToList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271E60", Offset = "0x271E60")]
	[SerializeField]
	private IndicatorMode m_indicatorMode;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271EA8", Offset = "0x271EA8")]
	private GameObject m_indicator;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271EF0", Offset = "0x271EF0")]
	private int m_amountOfIndicatorToCreate;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x271F38", Offset = "0x271F38")]
	private RectTransform m_parentOfIndicator;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AnimationCurve m_indicatorScaling;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x271F90", Offset = "0x271F90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x271F90", Offset = "0x271F90")]
	[SerializeField]
	private float m_indicatorPositionOnScreen;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool m_usingObjectDistanceFromPlayer;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272000", Offset = "0x272000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x272000", Offset = "0x272000")]
	private float m_percentageOfScreenViewsAsInside;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272060", Offset = "0x272060")]
	private float m_cutOffPointOfIndicatorsFromPlayer;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x27209C", Offset = "0x27209C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x27209C", Offset = "0x27209C")]
	private float m_cutOffPointOfIndicatorsForX;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272104", Offset = "0x272104")]
	[SerializeField]
	private float m_cutOffPointOfIndicatorsForY;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x272144", Offset = "0x272144")]
	[SerializeField]
	private Color m_colorForBombs;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color m_colorForFruit;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color m_colorForPowerFruit;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color m_colorForBasketEnemy;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2721BC", Offset = "0x2721BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2721BC", Offset = "0x2721BC")]
	private Camera m_camera;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27222C", Offset = "0x27222C")]
	private static FovIndicators <Instance>k__BackingField;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private PlayerIndicatorPreference m_playerIndicatorPreference;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Image[] m_indicators;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private List<ObjectInfo> m_activeObjectsToTrack;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_minimumForBeingInsideScreen;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector2 m_canvasSize;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Transform m_playerHead;

	[Token(Token = "0x1700002F")]
	public static FovIndicators Instance
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x4EFCF8", Offset = "0x4EFCF8", VA = "0x4EFCF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27424C", Offset = "0x27424C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x4EFD4C", Offset = "0x4EFD4C", VA = "0x4EFD4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27425C", Offset = "0x27425C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x4EFDAC", Offset = "0x4EFDAC", VA = "0x4EFDAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x4F062C", Offset = "0x4F062C", VA = "0x4F062C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x4F094C", Offset = "0x4F094C", VA = "0x4F094C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x4F0988", Offset = "0x4F0988", VA = "0x4F0988")]
	private void AddSlicedObjectToList(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x4F0D44", Offset = "0x4F0D44", VA = "0x4F0D44")]
	private void RemoveSlicedObjectFromList(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x4F0EC4", Offset = "0x4F0EC4", VA = "0x4F0EC4")]
	private void AddBasketEnemyToList(BasketEnemy basketEnemy)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x4F0F74", Offset = "0x4F0F74", VA = "0x4F0F74")]
	private void RemoveBasketEnemyToList(BasketEnemy basketEnemy)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x4F10F4", Offset = "0x4F10F4", VA = "0x4F10F4")]
	private void AdaptFovModeToSceneSelected(SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x4F1410", Offset = "0x4F1410", VA = "0x4F1410")]
	private void ClearAllObjects(GameMode gameMode)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x4F12C0", Offset = "0x4F12C0", VA = "0x4F12C0")]
	private void ChangeIndicatorMode(IndicatorMode indicatorMode)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x4F14D8", Offset = "0x4F14D8", VA = "0x4F14D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x4F1500", Offset = "0x4F1500", VA = "0x4F1500")]
	private void CreateIndicators()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x4F1B1C", Offset = "0x4F1B1C", VA = "0x4F1B1C")]
	private void SetUpOffScreenIndicator(Vector3 screenPos, Vector3 worldPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x4F2548", Offset = "0x4F2548", VA = "0x4F2548")]
	public void SetPlayerIndicatorPreference(int playerIndicatorPreference)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x4F202C", Offset = "0x4F202C", VA = "0x4F202C")]
	private void ScaleIndicatorBasedOnPlayerDistance(int i, Vector3 worldPosition, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x4F2260", Offset = "0x4F2260", VA = "0x4F2260")]
	private void ScaleIndicatorBasedOnScreenDistance(Vector3 screenPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x4F1A3C", Offset = "0x4F1A3C", VA = "0x4F1A3C")]
	private bool IsOnScreen(Vector3 screenPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x4F1878", Offset = "0x4F1878", VA = "0x4F1878")]
	private bool NeedToShowIndicatorForThisSliceObject(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x4F1EE8", Offset = "0x4F1EE8", VA = "0x4F1EE8")]
	private Color ChooseIndicatorColor(TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
		return default(Color);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x4F0B34", Offset = "0x4F0B34", VA = "0x4F0B34")]
	private bool IsPowerFruit(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x4F046C", Offset = "0x4F046C", VA = "0x4F046C")]
	private bool SettingUpInstanceSucceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x4F25B0", Offset = "0x4F25B0", VA = "0x4F25B0")]
	public FovIndicators()
	{
	}
}
[Token(Token = "0x2000086")]
public class FreezeEffect : MonoBehaviour
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MaterialLerp materialLerp;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeDuration;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float fadeTimer;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isFadingIn;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x83E914", Offset = "0x83E914", VA = "0x83E914")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x83E93C", Offset = "0x83E93C", VA = "0x83E93C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x83E950", Offset = "0x83E950", VA = "0x83E950")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x83E978", Offset = "0x83E978", VA = "0x83E978")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x83E9A0", Offset = "0x83E9A0", VA = "0x83E9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x83EADC", Offset = "0x83EADC", VA = "0x83EADC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x83EAE8", Offset = "0x83EAE8", VA = "0x83EAE8")]
	public bool IsFadingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x83EAF8", Offset = "0x83EAF8", VA = "0x83EAF8")]
	public FreezeEffect()
	{
	}
}
[Token(Token = "0x2000087")]
public interface ISlicableFruit
{
	[Token(Token = "0x17000030")]
	string GutsReferenceName
	{
		[Token(Token = "0x60002FA")]
		get;
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x27008C", Offset = "0x27008C")]
public class Fruit : SliceObject, ISlicableFruit
{
	[Token(Token = "0x2000089")]
	public struct SliceParams
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ObjectPooler pool;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 bladePos;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 bladeTip;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 previousTip;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isRightBlade;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BladeConfig bladeConfig;
	}

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string m_fruitHalvesPrefabName;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public string m_trailParticle;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject m_trail;

	[NonSerialized]
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool HasSpawnedHalves;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color[] m_particleColors;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_cleanupTimer;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public string slicedParticleName;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected HalvesParent m_halvesParent;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private List<Collider> m_activeColliders;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSound m_soundSkewer;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioSound m_soundImpact;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSound m_soundSplatter;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected Transform originalParent;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string FruitGutsReferenceName;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public GameObject FruitGutsReferenceObject;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_enableCollidersTimer;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool m_enableColliders;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	public bool m_overridePFXWithCritical;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int m_fruitActiveColLayer;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private SliceParams sliceParams;

	[Token(Token = "0x17000031")]
	public string GutsReferenceName
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x83ED24", Offset = "0x83ED24", VA = "0x83ED24", Slot = "20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action<SliceObject> OnFruitSkewered
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x83EB84", Offset = "0x83EB84", VA = "0x83EB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27426C", Offset = "0x27426C")]
		add
		{
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x83EC54", Offset = "0x83EC54", VA = "0x83EC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27427C", Offset = "0x27427C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x83ED2C", Offset = "0x83ED2C", VA = "0x83ED2C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x83EE98", Offset = "0x83EE98", VA = "0x83EE98")]
	public GameObject GetFruitGutsReferenceObject()
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x83F1B0", Offset = "0x83F1B0", VA = "0x83F1B0", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x83F3F0", Offset = "0x83F3F0", VA = "0x83F3F0")]
	private void CreateTrail()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x83F79C", Offset = "0x83F79C", VA = "0x83F79C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x83F860", Offset = "0x83F860", VA = "0x83F860", Slot = "6")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x83F7A0", Offset = "0x83F7A0", VA = "0x83F7A0")]
	private void DestroyTrail()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x83F88C", Offset = "0x83F88C", VA = "0x83F88C", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x840AF4", Offset = "0x840AF4", VA = "0x840AF4", Slot = "19")]
	public override void Dropped()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x840D64", Offset = "0x840D64", VA = "0x840D64")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x841068", Offset = "0x841068", VA = "0x841068")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x84123C", Offset = "0x84123C", VA = "0x84123C")]
	public void SetSkewered(bool value, Transform blade)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x841600", Offset = "0x841600", VA = "0x841600")]
	public bool HalvesHaveDropped()
	{
		return default(bool);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x8416AC", Offset = "0x8416AC", VA = "0x8416AC")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x83FF58", Offset = "0x83FF58", VA = "0x83FF58")]
	public void ProcessSliceLogic(SliceParams sliceParams)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x841B9C", Offset = "0x841B9C", VA = "0x841B9C")]
	private void SpawnSlicedEffect(string pfxName, float directionAngle)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x841FF0", Offset = "0x841FF0", VA = "0x841FF0", Slot = "21")]
	public virtual bool CanBeSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x841FF8", Offset = "0x841FF8", VA = "0x841FF8", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x842230", Offset = "0x842230", VA = "0x842230")]
	public Fruit()
	{
	}
}
[Token(Token = "0x200008A")]
public class FruitGutsRef : MonoBehaviour
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject fruitReference;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Position;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Rigidbody m_rigidBody;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshCollider m_col;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_enableCollider;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_cleanUpTimer;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x8423C8", Offset = "0x8423C8", VA = "0x8423C8")]
	public void CaptureDifference(GameObject obj)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x842584", Offset = "0x842584", VA = "0x842584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x842804", Offset = "0x842804", VA = "0x842804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x842B70", Offset = "0x842B70", VA = "0x842B70")]
	public FruitGutsRef()
	{
	}
}
[Token(Token = "0x200008B")]
public class FruitHalf : MonoBehaviour
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public HalvesParent halvesParent;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 initialPos;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 initialRotation;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialisedValues;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 explosiveForce;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float explosionRadius;

	[NonSerialized]
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_canBeUsed;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_enableCollider;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x842B88", Offset = "0x842B88", VA = "0x842B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x842C14", Offset = "0x842C14", VA = "0x842C14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x842FF4", Offset = "0x842FF4", VA = "0x842FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x843100", Offset = "0x843100", VA = "0x843100")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x843330", Offset = "0x843330", VA = "0x843330")]
	public FruitHalf()
	{
	}
}
[Token(Token = "0x200008C")]
public class FruitHalvesManager : MonoSingleton<FruitHalvesManager>
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected int m_fruitGutsCount;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<FruitGutsRef> m_fruitHalves;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x842788", Offset = "0x842788", VA = "0x842788")]
	public void AddFruitHalf(FruitGutsRef guts)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x842AF4", Offset = "0x842AF4", VA = "0x842AF4")]
	public void RemoveFruitHalf(FruitGutsRef guts)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x843358", Offset = "0x843358", VA = "0x843358")]
	public void Explode(float explosionForce, Vector3 explosionPosition, float explosionRadius)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x843524", Offset = "0x843524", VA = "0x843524")]
	public void CleanupFruit()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x8436D4", Offset = "0x8436D4", VA = "0x8436D4")]
	public FruitHalvesManager()
	{
	}
}
[Token(Token = "0x200008D")]
public class GameMode : MonoBehaviour
{
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2700F8", Offset = "0x2700F8")]
	private sealed class <SubmitAfterSeconds>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameMode <>4__this;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float seconds;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000353")]
			[Address(RVA = "0x53CE80", Offset = "0x53CE80", VA = "0x53CE80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000355")]
			[Address(RVA = "0x53CED0", Offset = "0x53CED0", VA = "0x53CED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x53CD60", Offset = "0x53CD60", VA = "0x53CD60")]
		[DebuggerHidden]
		public <SubmitAfterSeconds>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x53CD80", Offset = "0x53CD80", VA = "0x53CD80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x53CD84", Offset = "0x53CD84", VA = "0x53CD84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x53CE88", Offset = "0x53CE88", VA = "0x53CE88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270108", Offset = "0x270108")]
	private sealed class <CloseGameAfterSeconds>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float seconds;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000359")]
			[Address(RVA = "0x53CA6C", Offset = "0x53CA6C", VA = "0x53CA6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035B")]
			[Address(RVA = "0x53CABC", Offset = "0x53CABC", VA = "0x53CABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x53C98C", Offset = "0x53C98C", VA = "0x53C98C")]
		[DebuggerHidden]
		public <CloseGameAfterSeconds>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x53C9AC", Offset = "0x53C9AC", VA = "0x53C9AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x53C9B0", Offset = "0x53C9B0", VA = "0x53C9B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x53CA74", Offset = "0x53CA74", VA = "0x53CA74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270118", Offset = "0x270118")]
	private sealed class <ShowLeaderBoardAfterSeconds>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float seconds;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameMode <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035F")]
			[Address(RVA = "0x53CD08", Offset = "0x53CD08", VA = "0x53CD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000361")]
			[Address(RVA = "0x53CD58", Offset = "0x53CD58", VA = "0x53CD58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x53CAC4", Offset = "0x53CAC4", VA = "0x53CAC4")]
		[DebuggerHidden]
		public <ShowLeaderBoardAfterSeconds>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x53CAE4", Offset = "0x53CAE4", VA = "0x53CAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x53CAE8", Offset = "0x53CAE8", VA = "0x53CAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x53CD10", Offset = "0x53CD10", VA = "0x53CD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<string> m_combos;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_comboTimer;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected List<Vector3> ComboLocation;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_comboAverageLocation;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string m_criticalSlicedEffect;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_critical;

	[NonSerialized]
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_peachChancePercent;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_peachChanceIncAmount;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected SpawnPoint[] m_fruitSpawners;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_gameOverComponent;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject m_leaderBoard;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_isGameOver;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool m_hasGameStarted;

	[NonSerialized]
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ObjectPooler m_fruitHalvesPooler;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int m_score;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int m_bestScore;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int m_bestCombo;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected ScoreboardManager m_scoreBoardManager;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_hasBestChanged;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int m_fruitServed;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int m_fruitSliced;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int m_leftSliced;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected int m_rightSliced;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected int m_fruitSkewered;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected int m_bombsHit;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected int m_objectsJuggled;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int m_gameStartTime;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int m_bananaFrenzySpawn;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int m_bananaFrenzySlice;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int m_bananaDoubleSpawn;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int m_bananaDoubleSlice;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int m_bananaFreezeSpawn;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected int m_bananaFreezeSlice;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected int m_peachSpawn;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected int m_peachSlice;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected int m_bombsSpawned;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int m_bombsDeflected;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected int m_enemiesKilled;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected int m_enemiesHit;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int m_waitingForSubmit;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine m_leaderboardRoutine;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameMode m_currentGameMode;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool m_debug;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int m_waveID;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private GamePlay _mAnalyticsGamePlay;

	[Token(Token = "0x17000032")]
	public static GameMode CurrentGameMode
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x840BAC", Offset = "0x840BAC", VA = "0x840BAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x843AE4", Offset = "0x843AE4", VA = "0x843AE4")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action<GameMode> OnGameOver
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x843B64", Offset = "0x843B64", VA = "0x843B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27428C", Offset = "0x27428C")]
		add
		{
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x843C78", Offset = "0x843C78", VA = "0x843C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27429C", Offset = "0x27429C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x843D8C", Offset = "0x843D8C", VA = "0x843D8C")]
	public int GetNextWaveID()
	{
		return default(int);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x843DA0", Offset = "0x843DA0", VA = "0x843DA0")]
	public bool IsGameOver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x843DA8", Offset = "0x843DA8", VA = "0x843DA8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x8441F8", Offset = "0x8441F8", VA = "0x8441F8", Slot = "5")]
	public virtual void SubmitResults()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x844888", Offset = "0x844888", VA = "0x844888", Slot = "6")]
	public virtual void BombExploded(Bomb bomb)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x84488C", Offset = "0x84488C", VA = "0x84488C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2742AC", Offset = "0x2742AC")]
	private IEnumerator SubmitAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x844940", Offset = "0x844940", VA = "0x844940", Slot = "7")]
	public virtual void OnScoreSubmitted(Leaderboard leaderboard, bool success)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x844A0C", Offset = "0x844A0C", VA = "0x844A0C", Slot = "8")]
	public virtual void OnResultsEnd()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x844ECC", Offset = "0x844ECC", VA = "0x844ECC")]
	public void OnPeachSpawned()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x844EE4", Offset = "0x844EE4", VA = "0x844EE4")]
	public void CloseGame(float seconds)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x844F08", Offset = "0x844F08", VA = "0x844F08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274318", Offset = "0x274318")]
	public IEnumerator CloseGameAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x844E18", Offset = "0x844E18", VA = "0x844E18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274384", Offset = "0x274384")]
	private IEnumerator ShowLeaderBoardAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x844F8C", Offset = "0x844F8C", VA = "0x844F8C", Slot = "9")]
	public virtual void StartGame()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8453E4", Offset = "0x8453E4", VA = "0x8453E4", Slot = "10")]
	public virtual void GameOver()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x8458F4", Offset = "0x8458F4", VA = "0x8458F4", Slot = "11")]
	public virtual void Finish()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x8458F8", Offset = "0x8458F8", VA = "0x8458F8", Slot = "12")]
	public virtual bool IsFreeze()
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x845900", Offset = "0x845900", VA = "0x845900", Slot = "13")]
	public virtual void UnloadMode()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x845A48", Offset = "0x845A48", VA = "0x845A48")]
	public void QuitGame(string from)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x8455C8", Offset = "0x8455C8", VA = "0x8455C8")]
	public void SendGameEndEvent(string result)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x845AB4", Offset = "0x845AB4", VA = "0x845AB4", Slot = "14")]
	public virtual void OnTouchDown(Vector2 pos)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x845AB8", Offset = "0x845AB8", VA = "0x845AB8", Slot = "15")]
	public virtual void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x845BA0", Offset = "0x845BA0", VA = "0x845BA0")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x845BA8", Offset = "0x845BA8", VA = "0x845BA8", Slot = "16")]
	public virtual void BombSpawned()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x845BB8", Offset = "0x845BB8", VA = "0x845BB8", Slot = "17")]
	public virtual void BombDeflected()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x845BC8", Offset = "0x845BC8", VA = "0x845BC8", Slot = "18")]
	public virtual void EnemyKilled()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x845BD8", Offset = "0x845BD8", VA = "0x845BD8", Slot = "19")]
	public virtual void EnemyHit()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x845BE8", Offset = "0x845BE8", VA = "0x845BE8", Slot = "20")]
	public virtual void FruitSpawned()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x845BF8", Offset = "0x845BF8", VA = "0x845BF8", Slot = "21")]
	public virtual void ObjectsJuggled()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x845C08", Offset = "0x845C08", VA = "0x845C08", Slot = "22")]
	public virtual bool PropSliced(Blade blade, SliceableProp fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x845E3C", Offset = "0x845E3C", VA = "0x845E3C", Slot = "23")]
	public virtual bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x846398", Offset = "0x846398", VA = "0x846398", Slot = "24")]
	public virtual bool FruitSkewered(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x8463AC", Offset = "0x8463AC", VA = "0x8463AC", Slot = "25")]
	public virtual bool ObjectSliced(Blade blade, SliceObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x846510", Offset = "0x846510", VA = "0x846510", Slot = "26")]
	public virtual bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x846838", Offset = "0x846838", VA = "0x846838", Slot = "27")]
	public virtual bool MenuFruitSliced(Blade blade, MenuFruit menu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x846A58", Offset = "0x846A58", VA = "0x846A58", Slot = "28")]
	public virtual void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x846B8C", Offset = "0x846B8C", VA = "0x846B8C")]
	protected void SetSpawnersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x846C74", Offset = "0x846C74", VA = "0x846C74", Slot = "29")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x846C78", Offset = "0x846C78", VA = "0x846C78")]
	protected void UpdateCombos()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x846E60", Offset = "0x846E60", VA = "0x846E60", Slot = "30")]
	public virtual void CancelBlitz()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x846E64", Offset = "0x846E64", VA = "0x846E64", Slot = "31")]
	protected virtual void ComboFinish(Vector3 position)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x847320", Offset = "0x847320", VA = "0x847320")]
	public Vector3 GetPositionAlongCombo(List<Vector3> positions, float fractionAlongPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x847404", Offset = "0x847404", VA = "0x847404", Slot = "32")]
	protected virtual void OnSuccessfulCombo(List<Vector3> positions)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8417C0", Offset = "0x8417C0", VA = "0x8417C0")]
	public bool CriticalChance(Blade blade, Vector3 position, Plane splitPlane)
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x847408", Offset = "0x847408", VA = "0x847408")]
	public GameMode()
	{
	}
}
[Token(Token = "0x2000091")]
public class HUDMessage : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	public enum Type
	{
		[Token(Token = "0x4000464")]
		Top,
		[Token(Token = "0x4000465")]
		Center
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Type type;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 m_plusOffset;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform content;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_updatePositionWhileActive;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool m_hasStartBehaviour;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool m_hideOnStart;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 positionOffset;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_appliedOffset;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x8485FC", Offset = "0x8485FC", VA = "0x8485FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x848990", Offset = "0x848990", VA = "0x848990")]
	private void Update()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x848D9C", Offset = "0x848D9C", VA = "0x848D9C")]
	public void Set(string message, Type type)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x848618", Offset = "0x848618", VA = "0x848618")]
	public void Show(bool visible)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x848EC0", Offset = "0x848EC0", VA = "0x848EC0")]
	public void SetPositionOffset(Vector2 toOffset)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x848ECC", Offset = "0x848ECC", VA = "0x848ECC")]
	public HUDMessage()
	{
	}
}
[Token(Token = "0x2000093")]
public class HalvesParent : MonoBehaviour
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int halvesAlive;

	[NonSerialized]
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_canBeUsed;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x848EE4", Offset = "0x848EE4", VA = "0x848EE4")]
	private void EnableChildren(Transform t)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x848F88", Offset = "0x848F88", VA = "0x848F88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x843314", Offset = "0x843314", VA = "0x843314")]
	public void KillChild()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x849018", Offset = "0x849018", VA = "0x849018")]
	public HalvesParent()
	{
	}
}
[Token(Token = "0x2000094")]
public class HorizontalSelectButton : MonoBehaviour
{
	[Token(Token = "0x600036C")]
	[Address(RVA = "0x84ACF0", Offset = "0x84ACF0", VA = "0x84ACF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x84ACF4", Offset = "0x84ACF4", VA = "0x84ACF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x84ACF8", Offset = "0x84ACF8", VA = "0x84ACF8")]
	public HorizontalSelectButton()
	{
	}
}
[Token(Token = "0x2000095")]
public class HorizontalSelectMenu : MonoSingleton<HorizontalSelectMenu>
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_width;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_depth;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_swipeSpeed;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_allIcons;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_mouseDown;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_previousPos;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_currentPos;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_currentVel;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_moveSinceDown;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_decelerationSpeed;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxVel;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_iconGap;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_snapThreshold;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_snapSpeed;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x84AD00", Offset = "0x84AD00", VA = "0x84AD00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x84B1C0", Offset = "0x84B1C0", VA = "0x84B1C0")]
	public void OnTouchDown(float posX)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x84B278", Offset = "0x84B278", VA = "0x84B278")]
	public void OnTouch(float posX)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x84B338", Offset = "0x84B338", VA = "0x84B338")]
	public void OnTouchUp()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x84B3D4", Offset = "0x84B3D4", VA = "0x84B3D4")]
	public void OnTouchClick()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x84B3D8", Offset = "0x84B3D8", VA = "0x84B3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x84AD04", Offset = "0x84AD04", VA = "0x84AD04")]
	public void SetPositions()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x84B53C", Offset = "0x84B53C", VA = "0x84B53C")]
	private void ShiftLeft()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x84B550", Offset = "0x84B550", VA = "0x84B550")]
	private void ShiftRight()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x84B564", Offset = "0x84B564", VA = "0x84B564")]
	public HorizontalSelectMenu()
	{
	}
}
[Token(Token = "0x2000096")]
public class InfoBoardController : MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMesh m_startTimerText;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMesh m_endGameInfoText;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Timer m_timer;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x84EDAC", Offset = "0x84EDAC", VA = "0x84EDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x84F034", Offset = "0x84F034", VA = "0x84F034")]
	public void ShowStartTimer(UnityAction GameMode_OnStartTimerFinishedListener)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x84F290", Offset = "0x84F290", VA = "0x84F290")]
	public void ShowEndGameInfo(int score, UnityAction GameMode_OnEndGameInfoDisplayFinished)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x84F454", Offset = "0x84F454", VA = "0x84F454")]
	private void InfoBoard_OnStartTimerFinished()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x84F5DC", Offset = "0x84F5DC", VA = "0x84F5DC")]
	private void InfoBoard_OnEndGameDisplayInfoTimerFinished()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x84F764", Offset = "0x84F764", VA = "0x84F764")]
	private void Update()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x84F918", Offset = "0x84F918", VA = "0x84F918")]
	public InfoBoardController()
	{
	}
}
[Token(Token = "0x2000097")]
public class JointFollow : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform m_meshBone;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 m_offsetPosition;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_offsetRotation;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_setPosition;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_setRotation;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool m_lockX;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool m_lockY;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_lockZ;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x85038C", Offset = "0x85038C", VA = "0x85038C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x850428", Offset = "0x850428", VA = "0x850428")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8505DC", Offset = "0x8505DC", VA = "0x8505DC")]
	public JointFollow()
	{
	}
}
[Token(Token = "0x2000098")]
public class LanguageButton : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private LanguageManager.Language m_language;

	[Token(Token = "0x17000039")]
	public LanguageManager.Language Language
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x7C2ED8", Offset = "0x7C2ED8", VA = "0x7C2ED8")]
		get
		{
			return default(LanguageManager.Language);
		}
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x7C2EE0", Offset = "0x7C2EE0", VA = "0x7C2EE0")]
	public void SetLanguage()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x7C31AC", Offset = "0x7C31AC", VA = "0x7C31AC")]
	public LanguageButton()
	{
	}
}
[Token(Token = "0x2000099")]
public class IntRange
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int min;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int max;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x84F920", Offset = "0x84F920", VA = "0x84F920")]
	public IntRange()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x84F944", Offset = "0x84F944", VA = "0x84F944")]
	public IntRange(int _min, int _max)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x84F96C", Offset = "0x84F96C", VA = "0x84F96C")]
	public bool ExtendRange(int num)
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x84F9A8", Offset = "0x84F9A8", VA = "0x84F9A8")]
	public void Join(IntRange range)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x84FA04", Offset = "0x84FA04", VA = "0x84FA04")]
	public int Size()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class RingMaterial
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Material m_material;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture m_defaultTexture;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x70F1C0", Offset = "0x70F1C0", VA = "0x70F1C0")]
	public RingMaterial()
	{
	}
}
[Token(Token = "0x200009B")]
public class LanguageManager : MonoSingleton<LanguageManager>
{
	[Token(Token = "0x200009C")]
	public enum Language
	{
		[Token(Token = "0x400049E")]
		ENGLISH,
		[Token(Token = "0x400049F")]
		FRENCH,
		[Token(Token = "0x40004A0")]
		GERMAN,
		[Token(Token = "0x40004A1")]
		ITALIAN,
		[Token(Token = "0x40004A2")]
		SPANISH,
		[Token(Token = "0x40004A3")]
		SPANISH_TRAD,
		[Token(Token = "0x40004A4")]
		JAPANESE,
		[Token(Token = "0x40004A5")]
		CHINESE,
		[Token(Token = "0x40004A6")]
		CHINESE_TRAD,
		[Token(Token = "0x40004A7")]
		KOREAN,
		[Token(Token = "0x40004A8")]
		POLISH,
		[Token(Token = "0x40004A9")]
		PORTUGUESE_EU,
		[Token(Token = "0x40004AA")]
		RUSSIAN,
		[Token(Token = "0x40004AB")]
		ARABIC
	}

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Font m_font;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_size;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_padding;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int m_charCount;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string m_saveLocation;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_xmlStringTableFilePath;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[HideInInspector]
	private XmlDocument m_xmlStringTable;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Dictionary<string, string> m_stringLookup;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[HideInInspector]
	public string m_currentLanguage;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Language m_language;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_debug;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string translatedText;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int firstIndex;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string firstString;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lastIndex;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string lastString;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private string subStr;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string transKey;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private string[] m_allLanguages;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material[] m_allTextMeshMats;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RingMaterial[] m_menuRingMaterials;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_charOverrides;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_overrideIndex;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x7C31B4", Offset = "0x7C31B4", VA = "0x7C31B4")]
	public string[] GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x7C31BC", Offset = "0x7C31BC", VA = "0x7C31BC")]
	public Texture2D FindRingTexture(Texture2D[] textures, string name)
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x7C3244", Offset = "0x7C3244", VA = "0x7C3244")]
	public void SetMenuRingsTextures()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x7C3578", Offset = "0x7C3578", VA = "0x7C3578")]
	public void SetAllAtlas(Texture2D tex, int _width, int _height)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x7C37D8", Offset = "0x7C37D8", VA = "0x7C37D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x7C43EC", Offset = "0x7C43EC", VA = "0x7C43EC")]
	public void SetLanguage(string lang)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x7C2F90", Offset = "0x7C2F90", VA = "0x7C2F90")]
	public void SetLanguage(Language lang)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x7C46D8", Offset = "0x7C46D8", VA = "0x7C46D8")]
	private string TranslateText(string text)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x7C48A8", Offset = "0x7C48A8", VA = "0x7C48A8")]
	private void FindNextTranslation()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x7C4CE4", Offset = "0x7C4CE4", VA = "0x7C4CE4")]
	public string ParseText(string text)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x7C5470", Offset = "0x7C5470", VA = "0x7C5470")]
	public bool IsXmlNull()
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x7C5480", Offset = "0x7C5480", VA = "0x7C5480")]
	private void LoadXML()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x7C559C", Offset = "0x7C559C", VA = "0x7C559C")]
	public void GenerateStringTable()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x7C3990", Offset = "0x7C3990", VA = "0x7C3990")]
	public void GenerateStringTable(string langCode)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x7C55A4", Offset = "0x7C55A4", VA = "0x7C55A4")]
	public string GenerateFontAtlas()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x7C5E0C", Offset = "0x7C5E0C", VA = "0x7C5E0C")]
	public Language GetCurrentLanguage()
	{
		return default(Language);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x7C5E68", Offset = "0x7C5E68", VA = "0x7C5E68")]
	public LanguageManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200009D")]
public class LeaderboardEntry
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string m_playerName;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_playerId;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_rank;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_prevRank;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_score;

	[NonSerialized]
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture2D m_image;

	[NonSerialized]
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_imageHttp;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x7C8F14", Offset = "0x7C8F14", VA = "0x7C8F14", Slot = "4")]
	public virtual void LoadImage()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x7C8F18", Offset = "0x7C8F18", VA = "0x7C8F18")]
	public LeaderboardEntry()
	{
	}
}
[Token(Token = "0x200009E")]
public class Leaderboard
{
	[Token(Token = "0x200009F")]
	public enum RequestType
	{
		[Token(Token = "0x40004B7")]
		GLOBAL,
		[Token(Token = "0x40004B8")]
		GLOBAL_RELATIVE,
		[Token(Token = "0x40004B9")]
		FRIENDS
	}

	[Token(Token = "0x20000A0")]
	public delegate void SubmitCallback(Leaderboard leaderboard, bool success);

	[Token(Token = "0x20000A1")]
	public delegate void RequestEntriesCallback(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries);

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected string m_name;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected int m_rank;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected int m_score;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x7C67E4", Offset = "0x7C67E4", VA = "0x7C67E4", Slot = "4")]
	public virtual void SubmitScore(int score, [Optional] SubmitCallback callback)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x7C67E8", Offset = "0x7C67E8", VA = "0x7C67E8", Slot = "5")]
	public virtual void RequestEntries(int start, int end, RequestType type, RequestEntriesCallback callback)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x7C67EC", Offset = "0x7C67EC", VA = "0x7C67EC", Slot = "6")]
	public virtual bool IsLocal()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x7C67F4", Offset = "0x7C67F4", VA = "0x7C67F4", Slot = "7")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x7C67F8", Offset = "0x7C67F8", VA = "0x7C67F8")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x20000A2")]
public class LeaderboardDisplay : MonoBehaviour
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color m_playerColour;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject m_entries;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_entryTemplate;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject m_loading;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_loadingFailed;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshProUGUI m_ranking;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LeaderboardEntry> m_entrylist;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<GameObject> m_entryObjList;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardEntry m_first;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Leaderboard m_board;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_requestFirstEntry;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_requestTopLeaderboard;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_attempts;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_leaderboardName;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public string leaderboardOverride;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool forceOnline;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_maxEntries;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x7C6898", Offset = "0x7C6898", VA = "0x7C6898")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x7C6F10", Offset = "0x7C6F10", VA = "0x7C6F10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x7C6F14", Offset = "0x7C6F14", VA = "0x7C6F14")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x7C765C", Offset = "0x7C765C", VA = "0x7C765C")]
	private void GetLeaderboardBoard(string name)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x7C6B9C", Offset = "0x7C6B9C", VA = "0x7C6B9C")]
	public void DownloadLeaderboard(string name, bool userCentered)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x7C78B0", Offset = "0x7C78B0", VA = "0x7C78B0")]
	public void OnEntriesDownloaded(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x7C7E10", Offset = "0x7C7E10", VA = "0x7C7E10")]
	public void OnFirstEntryDownloaded(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x7C7EDC", Offset = "0x7C7EDC", VA = "0x7C7EDC")]
	private int GetMyPlayerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x7C79C8", Offset = "0x7C79C8", VA = "0x7C79C8")]
	private void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x7C80E8", Offset = "0x7C80E8", VA = "0x7C80E8")]
	private void SetupEntryGameObject(LeaderboardEntry entry)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x7C8A88", Offset = "0x7C8A88", VA = "0x7C8A88")]
	public string GetRankSuffix(int rank)
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x7C72E4", Offset = "0x7C72E4", VA = "0x7C72E4")]
	private void DisplayImage(LeaderboardEntry entry, GameObject entryObj)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x7C8BA0", Offset = "0x7C8BA0", VA = "0x7C8BA0")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x7C8DD4", Offset = "0x7C8DD4", VA = "0x7C8DD4")]
	public LeaderboardDisplay()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LocalLeaderboard : Leaderboard
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected List<LeaderboardEntry> m_leaderboard;

	[Token(Token = "0x40004CC")]
	private const int LOCAL_MAX = 6;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_pendingScore;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SubmitCallback m_pendingSubmitCallback;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_lastSubmittedRank;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x7CC238", Offset = "0x7CC238", VA = "0x7CC238")]
	public LocalLeaderboard(string name)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x7CC578", Offset = "0x7CC578", VA = "0x7CC578", Slot = "6")]
	public override bool IsLocal()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x7CC580", Offset = "0x7CC580", VA = "0x7CC580", Slot = "4")]
	public override void SubmitScore(int score, [Optional] SubmitCallback callback)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x7CC7F8", Offset = "0x7CC7F8", VA = "0x7CC7F8")]
	public void OnNameEntered(string name)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x7CCCD8", Offset = "0x7CCCD8", VA = "0x7CCCD8", Slot = "5")]
	public override void RequestEntries(int start, int end, RequestType type, RequestEntriesCallback callback)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x7CCDF8", Offset = "0x7CCDF8", VA = "0x7CCDF8")]
	private string GetPath()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x7CC2F4", Offset = "0x7CC2F4", VA = "0x7CC2F4")]
	private void Load()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x7CCAF0", Offset = "0x7CCAF0", VA = "0x7CCAF0")]
	private void Save()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x7CCE88", Offset = "0x7CCE88", VA = "0x7CCE88", Slot = "7")]
	public override void Clear()
	{
	}
}
[Token(Token = "0x20000A4")]
public class PicoLeaderboard : MonoBehaviour
{
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x782878", Offset = "0x782878", VA = "0x782878")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x78287C", Offset = "0x78287C", VA = "0x78287C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x782880", Offset = "0x782880", VA = "0x782880")]
	public PicoLeaderboard()
	{
	}
}
[Token(Token = "0x20000A5")]
public class Life : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isLifeLost;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x7CC184", Offset = "0x7CC184", VA = "0x7CC184")]
	public void SetIsLifeLost(bool lost)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x7CC228", Offset = "0x7CC228", VA = "0x7CC228")]
	public Life()
	{
	}
}
[Token(Token = "0x20000A6")]
public class LightningManger : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float[] m_defaulValues;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x7CC230", Offset = "0x7CC230", VA = "0x7CC230")]
	public LightningManger()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Location : MonoBehaviour
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ScoreboardManager m_scoreboardPrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform m_scorboardSpawnPoint;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public CannonSpawnFX m_cannonFX;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_scoreboard;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x7CD440", Offset = "0x7CD440", VA = "0x7CD440")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x7CD724", Offset = "0x7CD724", VA = "0x7CD724")]
	public Location()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LocationManager : MonoSingleton<LocationManager>
{
	[Token(Token = "0x20000A9")]
	public enum Locations
	{
		[Token(Token = "0x40004DB")]
		COURTYARD,
		[Token(Token = "0x40004DC")]
		DOJO,
		[Token(Token = "0x40004DD")]
		NONE
	}

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Location m_courtyard;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Location m_dojo;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Locations m_currentLocation;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Location m_currentLocationObject;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x7CD72C", Offset = "0x7CD72C", VA = "0x7CD72C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x7CDD0C", Offset = "0x7CDD0C", VA = "0x7CDD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x7CD9D8", Offset = "0x7CD9D8", VA = "0x7CD9D8")]
	public void ChangeLocation(Locations loc)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x7CDD5C", Offset = "0x7CDD5C", VA = "0x7CDD5C")]
	public LocationManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AA")]
public class MaterialLerp
{
	[Serializable]
	[Token(Token = "0x20000AB")]
	public class MaterialMod
	{
		[Serializable]
		[Token(Token = "0x20000AC")]
		public class ColorMod
		{
			[Token(Token = "0x40004E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string propertyName;

			[Token(Token = "0x40004E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;

			[Token(Token = "0x40004E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[HideInInspector]
			public Color defaultValue;

			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x154B698", Offset = "0x154B698", VA = "0x154B698")]
			public ColorMod()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000AD")]
		public class FloatMod
		{
			[Token(Token = "0x40004E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string propertyName;

			[Token(Token = "0x40004E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x27231C", Offset = "0x27231C")]
			public float value;

			[Token(Token = "0x40004E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public float defaultValue;

			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x154B740", Offset = "0x154B740", VA = "0x154B740")]
			public FloatMod()
			{
			}
		}

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ColorMod[] colorMods;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FloatMod[] floatMods;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool reverse;

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x54746C", Offset = "0x54746C", VA = "0x54746C")]
		public MaterialMod()
		{
		}
	}

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MaterialMod[] materialMods;

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x7CF9C0", Offset = "0x7CF9C0", VA = "0x7CF9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x7CFC24", Offset = "0x7CFC24", VA = "0x7CFC24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x7CFEAC", Offset = "0x7CFEAC", VA = "0x7CFEAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x7CF9C4", Offset = "0x7CF9C4", VA = "0x7CF9C4")]
	public void RefreshDefaults()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x7CFC28", Offset = "0x7CFC28", VA = "0x7CFC28")]
	public void ResetToDefaults()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x7CFEB0", Offset = "0x7CFEB0", VA = "0x7CFEB0")]
	public void Lerp(float t)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x7D01C0", Offset = "0x7D01C0", VA = "0x7D01C0")]
	public MaterialLerp()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MenuFruit : SliceObject, ISlicableFruit
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 m_rotateAxis;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float spinSpeed;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string m_fruitHalvesPrefabName;

	[NonSerialized]
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool HasSpawnedHalves;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public string slicedParticleName;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioSound m_soundImpact;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public AudioSound m_soundSplatter;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string FruitGutsReferenceName;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public GameObject FruitGutsReferenceObject;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_isBomb;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public SceneManager.Scene m_scene;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent m_OnSliceEvent;

	[Token(Token = "0x1700003A")]
	public string GutsReferenceName
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x7D058C", Offset = "0x7D058C", VA = "0x7D058C", Slot = "20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x7D0594", Offset = "0x7D0594", VA = "0x7D0594", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x7D0730", Offset = "0x7D0730", VA = "0x7D0730", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x7D07D8", Offset = "0x7D07D8", VA = "0x7D07D8", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x7D0850", Offset = "0x7D0850", VA = "0x7D0850")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x7D0964", Offset = "0x7D0964", VA = "0x7D0964", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 bladePreviousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x7D1570", Offset = "0x7D1570", VA = "0x7D1570")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x7D1600", Offset = "0x7D1600", VA = "0x7D1600")]
	public void QuitToMain()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x7D16B8", Offset = "0x7D16B8", VA = "0x7D16B8")]
	public void CloseApplication()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x7D16C0", Offset = "0x7D16C0", VA = "0x7D16C0")]
	public void Retry()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x7D1764", Offset = "0x7D1764", VA = "0x7D1764")]
	public void QuitBladeMenu()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x7D1608", Offset = "0x7D1608", VA = "0x7D1608")]
	public void LoadScene(SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x7D1B24", Offset = "0x7D1B24", VA = "0x7D1B24")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x7D1B2C", Offset = "0x7D1B2C", VA = "0x7D1B2C")]
	public MenuFruit()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MenuRingRotator : MonoBehaviour
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float spinSpeed;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 m_rotateAxis;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_rotation;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_transform;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x7D1C04", Offset = "0x7D1C04", VA = "0x7D1C04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x7D1C2C", Offset = "0x7D1C2C", VA = "0x7D1C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x7D2074", Offset = "0x7D2074", VA = "0x7D2074")]
	public MenuRingRotator()
	{
	}
}
[Token(Token = "0x20000B0")]
public class MeshSlicer : MonoSingleton<MeshSlicer>
{
	[Token(Token = "0x20000B1")]
	public class FruitSplitCache
	{
		[Token(Token = "0x20000B2")]
		public class Item
		{
			[Token(Token = "0x4000508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272388", Offset = "0x272388")]
			private Plane <LocalSplitPlane>k__BackingField;

			[Token(Token = "0x4000509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272398", Offset = "0x272398")]
			private IList<GameObject> <Cachelist>k__BackingField;

			[Token(Token = "0x17000042")]
			public Plane LocalSplitPlane
			{
				[Token(Token = "0x6000414")]
				[Address(RVA = "0x154B81C", Offset = "0x154B81C", VA = "0x154B81C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274560", Offset = "0x274560")]
				get
				{
					return default(Plane);
				}
				[Token(Token = "0x6000415")]
				[Address(RVA = "0x154B82C", Offset = "0x154B82C", VA = "0x154B82C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274570", Offset = "0x274570")]
				private set
				{
				}
			}

			[Token(Token = "0x17000043")]
			public IList<GameObject> Cachelist
			{
				[Token(Token = "0x6000416")]
				[Address(RVA = "0x154B83C", Offset = "0x154B83C", VA = "0x154B83C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274580", Offset = "0x274580")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000417")]
				[Address(RVA = "0x154B844", Offset = "0x154B844", VA = "0x154B844")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274590", Offset = "0x274590")]
				private set
				{
				}
			}

			[Token(Token = "0x6000418")]
			[Address(RVA = "0x154B84C", Offset = "0x154B84C", VA = "0x154B84C")]
			public Item(Plane localSplitPlane, List<GameObject> cachelist)
			{
			}
		}

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272348", Offset = "0x272348")]
		private string <CacheIdentifier>k__BackingField;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272358", Offset = "0x272358")]
		private float <MaxDistance>k__BackingField;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272368", Offset = "0x272368")]
		private int <DistanceIntervals>k__BackingField;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272378", Offset = "0x272378")]
		private int <AngleIntervals>k__BackingField;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Item[] m_Cache;

		[Token(Token = "0x1700003B")]
		public string CacheIdentifier
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x547F88", Offset = "0x547F88", VA = "0x547F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2744E0", Offset = "0x2744E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x547F90", Offset = "0x547F90", VA = "0x547F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2744F0", Offset = "0x2744F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public float MaxDistance
		{
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x547F98", Offset = "0x547F98", VA = "0x547F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274500", Offset = "0x274500")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x547FA0", Offset = "0x547FA0", VA = "0x547FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274510", Offset = "0x274510")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public int DistanceIntervals
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x547FA8", Offset = "0x547FA8", VA = "0x547FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274520", Offset = "0x274520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x547FB0", Offset = "0x547FB0", VA = "0x547FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274530", Offset = "0x274530")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public int AngleIntervals
		{
			[Token(Token = "0x6000400")]
			[Address(RVA = "0x547FB8", Offset = "0x547FB8", VA = "0x547FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274540", Offset = "0x274540")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x547FC0", Offset = "0x547FC0", VA = "0x547FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274550", Offset = "0x274550")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public int YawIntervals
		{
			[Token(Token = "0x6000402")]
			[Address(RVA = "0x547FC8", Offset = "0x547FC8", VA = "0x547FC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000040")]
		public int ZIntevals
		{
			[Token(Token = "0x6000403")]
			[Address(RVA = "0x547FD0", Offset = "0x547FD0", VA = "0x547FD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000041")]
		public int MaxIterations
		{
			[Token(Token = "0x6000404")]
			[Address(RVA = "0x547FE0", Offset = "0x547FE0", VA = "0x547FE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x547FFC", Offset = "0x547FFC", VA = "0x547FFC")]
		public FruitSplitCache(string cacheIdentifier, float maxDist = 0.55f, int distIntervals = 5, int angleIntervals = 6)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x5480B0", Offset = "0x5480B0", VA = "0x5480B0")]
		private static int QuantizeFloat(float value, float min, float max, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x548198", Offset = "0x548198", VA = "0x548198")]
		private static int QuantizeQuaterAngle(float value, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x5481CC", Offset = "0x5481CC", VA = "0x5481CC")]
		private static int QuantizeFullAngle(float value, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x548204", Offset = "0x548204", VA = "0x548204")]
		private static float DeQuantizeFloat(int value, float min, float max, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x548234", Offset = "0x548234", VA = "0x548234")]
		private static float DeQuantizeQuaterAngle(int value, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x548268", Offset = "0x548268", VA = "0x548268")]
		private static float DeQuantizeFullAngle(int value, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x54829C", Offset = "0x54829C", VA = "0x54829C")]
		public int Quantize(Plane plane)
		{
			return default(int);
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x5484A4", Offset = "0x5484A4", VA = "0x5484A4")]
		public Plane DeQuantize(int i)
		{
			return default(Plane);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x54865C", Offset = "0x54865C", VA = "0x54865C")]
		public bool HasCache(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x5486B8", Offset = "0x5486B8", VA = "0x5486B8")]
		public Item GetCache(Plane plane)
		{
			return null;
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x548714", Offset = "0x548714", VA = "0x548714")]
		public Item GetCache(int quantizedPlane)
		{
			return null;
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x548754", Offset = "0x548754", VA = "0x548754")]
		public void AddCache(Plane plane, Item objects)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x54878C", Offset = "0x54878C", VA = "0x54878C")]
		internal void AddCache(int quantizedPlane, Item objects)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x548804", Offset = "0x548804", VA = "0x548804")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<string, FruitSplitCache> s_SplitCache;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject sliceTarget;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject testSplitPlane;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fruitReference;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FracturedObject fractureObject;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float parentSpeedScale;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angularScale0;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angularScale1;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SliceQuantizerDebugger sliceDebugger;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x7DE2D4", Offset = "0x7DE2D4", VA = "0x7DE2D4")]
	public static void DestroyEditorSwitch(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x7DE34C", Offset = "0x7DE34C", VA = "0x7DE34C")]
	public FruitSplitCache GetTypeCache(string fruitGutsReferenceName, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x7DE488", Offset = "0x7DE488", VA = "0x7DE488")]
	public FruitSplitCache GetTypeCache(ISlicableFruit fruit, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x7DE568", Offset = "0x7DE568", VA = "0x7DE568")]
	public FruitSplitCache GetTypeCache(GameObject fruit, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x7DE680", Offset = "0x7DE680", VA = "0x7DE680")]
	public void TestMeshSliceGoGo()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x7DEAF4", Offset = "0x7DEAF4", VA = "0x7DEAF4")]
	public static Plane TransformPlane(Matrix4x4 mtx, Plane p)
	{
		return default(Plane);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x7DEC7C", Offset = "0x7DEC7C", VA = "0x7DEC7C")]
	public int CacheFruitSplit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference)
	{
		return default(int);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x7D1528", Offset = "0x7D1528", VA = "0x7D1528")]
	public void SplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x7DECD4", Offset = "0x7DECD4", VA = "0x7DECD4")]
	private int SplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects, bool createResults)
	{
		return default(int);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x7E11DC", Offset = "0x7E11DC", VA = "0x7E11DC")]
	private void CreateSplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects, out Plane actualSplitPlane)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x7E0954", Offset = "0x7E0954", VA = "0x7E0954")]
	private void ApplySplitVelocities(GameObject sliceTarget, Plane planeToSplitWith, IList<GameObject> splitObjects)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x7E35B8", Offset = "0x7E35B8", VA = "0x7E35B8")]
	public Matrix4x4 MatrixFromPlane(Plane plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x7E387C", Offset = "0x7E387C", VA = "0x7E387C")]
	public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x7E3910", Offset = "0x7E3910", VA = "0x7E3910")]
	public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x7E3954", Offset = "0x7E3954", VA = "0x7E3954")]
	public static Vector3 SetVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x7E39A4", Offset = "0x7E39A4", VA = "0x7E39A4")]
	public MeshSlicer()
	{
	}
}
[Token(Token = "0x20000B3")]
public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoSingleton<T>
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x17000044")]
	public static bool exists
	{
		[Token(Token = "0x6000419")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000045")]
	public static T Instance
	{
		[Token(Token = "0x600041A")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041B")]
		set
		{
		}
	}

	[Token(Token = "0x600041C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041D")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041E")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600041F")]
	protected MonoSingleton()
	{
	}
}
[Token(Token = "0x20000B4")]
public class MouseInput : MonoBehaviour
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ObjectPooler pooler;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 m_mouseRotatePos;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform m_cameraTransform;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationY;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x774834", Offset = "0x774834", VA = "0x774834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x7749C8", Offset = "0x7749C8", VA = "0x7749C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x774A28", Offset = "0x774A28", VA = "0x774A28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x775938", Offset = "0x775938", VA = "0x775938")]
	public MouseInput()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MultipleParticlePlays : MonoBehaviour
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ParticleSystem[] m_allsystems;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x775940", Offset = "0x775940", VA = "0x775940")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x7759A8", Offset = "0x7759A8", VA = "0x7759A8")]
	public void SetDelay(float delay)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x775A18", Offset = "0x775A18", VA = "0x775A18")]
	public void Play()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x775A80", Offset = "0x775A80", VA = "0x775A80")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x775AE8", Offset = "0x775AE8", VA = "0x775AE8")]
	public MultipleParticlePlays()
	{
	}
}
[Token(Token = "0x20000B6")]
public class NameEntry : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B7")]
	public class Roller
	{
		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_roller;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_firstIndex;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshProUGUI[] m_visuals;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private NameEntry m_parent;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_visualHeight;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_speed;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_moveTime;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_moveDist;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_moveTimer;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_yVelocity;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_decelSpeed;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 m_minMaxYVel;

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x54973C", Offset = "0x54973C", VA = "0x54973C")]
		public void Init(NameEntry parent)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x549B18", Offset = "0x549B18", VA = "0x549B18")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x549D28", Offset = "0x549D28", VA = "0x549D28")]
		public void Move(float amt)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x549E48", Offset = "0x549E48", VA = "0x549E48")]
		public void Step(int steps, float time)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x549E6C", Offset = "0x549E6C", VA = "0x549E6C")]
		public void Update()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x54A080", Offset = "0x54A080", VA = "0x54A080")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x54A0F0", Offset = "0x54A0F0", VA = "0x54A0F0")]
		public void Brake()
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x549834", Offset = "0x549834", VA = "0x549834")]
		public void Shift(int amt)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x54A0FC", Offset = "0x54A0FC", VA = "0x54A0FC")]
		public int GetSelectedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x54A28C", Offset = "0x54A28C", VA = "0x54A28C")]
		public Roller()
		{
		}
	}

	[Token(Token = "0x20000B8")]
	public delegate void NameEnteredCallback(string name);

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_characters;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Roller[] m_rollers;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_selectedIndex;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_move;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_moveTime;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_highlighter;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioSound m_stepSound;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSound m_changeRollerSound;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AudioSound m_displaySound;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NameEnteredCallback m_callback;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Sprite m_confirmOff;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite m_confirmOn;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Image m_confirmImage;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_finished;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Blade m_currentBlade;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 m_previousTouch;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 m_currentTouch;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 m_currentMoveTouch;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 m_swipeThreshold;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x775AF0", Offset = "0x775AF0", VA = "0x775AF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x775C20", Offset = "0x775C20", VA = "0x775C20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x775CF0", Offset = "0x775CF0", VA = "0x775CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x775F80", Offset = "0x775F80", VA = "0x775F80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x775FE8", Offset = "0x775FE8", VA = "0x775FE8")]
	public void Show(NameEnteredCallback callback, bool effects = true)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x776160", Offset = "0x776160", VA = "0x776160")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x776204", Offset = "0x776204", VA = "0x776204")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x776308", Offset = "0x776308", VA = "0x776308")]
	public void OnInputAction(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x7763A0", Offset = "0x7763A0", VA = "0x7763A0")]
	public void OnTouchPress(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x7767A4", Offset = "0x7767A4", VA = "0x7767A4")]
	public void OnTouchDown(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x7768AC", Offset = "0x7768AC", VA = "0x7768AC")]
	public void OnTouch(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x7769C0", Offset = "0x7769C0", VA = "0x7769C0")]
	public void OnTouchUp(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x776B48", Offset = "0x776B48", VA = "0x776B48")]
	public NameEntry()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ObjectPooler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class PooledObject
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_id;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject m_prefab;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_maxInstances;

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x54A35C", Offset = "0x54A35C", VA = "0x54A35C")]
		public PooledObject()
		{
		}
	}

	[Token(Token = "0x20000BB")]
	public class ObjectPool
	{
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<GameObject> m_instances;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_currentIndex;

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x54A2C0", Offset = "0x54A2C0", VA = "0x54A2C0")]
		public ObjectPool()
		{
		}
	}

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PooledObject[] m_pooledObjectsConfig;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, ObjectPool> m_objectPools;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform m_canvasParent;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform m_pooledObjectsParent;

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x776DBC", Offset = "0x776DBC", VA = "0x776DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x777784", Offset = "0x777784", VA = "0x777784")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x777B18", Offset = "0x777B18", VA = "0x777B18")]
	public bool AnyFruitAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x777FE8", Offset = "0x777FE8", VA = "0x777FE8")]
	public List<Fruit> GetAliveFruit()
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x7784DC", Offset = "0x7784DC", VA = "0x7784DC")]
	public List<Bomb> GetAliveBombs()
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x7789B8", Offset = "0x7789B8", VA = "0x7789B8")]
	public string GetRandomId()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x778A50", Offset = "0x778A50", VA = "0x778A50")]
	public static GameObject GetRandomInstanceFromPools(List<ObjectPooler> pools)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x77904C", Offset = "0x77904C", VA = "0x77904C")]
	public GameObject GetRandomInstance()
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x778D8C", Offset = "0x778D8C", VA = "0x778D8C")]
	public GameObject GetObjectInstance(string objectId)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x779160", Offset = "0x779160", VA = "0x779160")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x7795A8", Offset = "0x7795A8", VA = "0x7795A8")]
	public ObjectPooler()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ParticleSpawner : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool m_playOnEnable;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float m_delay;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string m_systemPrefabString;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_parent;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private ParticleSystem[] m_allSystems;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectPooler m_pooler;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_markForDisable;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x77ADC8", Offset = "0x77ADC8", VA = "0x77ADC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x77B334", Offset = "0x77B334", VA = "0x77B334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x77B59C", Offset = "0x77B59C", VA = "0x77B59C")]
	public void PlayParticle()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x77B614", Offset = "0x77B614", VA = "0x77B614")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x77B8A4", Offset = "0x77B8A4", VA = "0x77B8A4")]
	public ParticleSpawner()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PauseManager : MonoSingleton<PauseManager>
{
	[Token(Token = "0x20000BE")]
	public enum PauseReason
	{
		[Token(Token = "0x4000556")]
		UserAction,
		[Token(Token = "0x4000557")]
		AppBackgrounded,
		[Token(Token = "0x4000558")]
		NoControllers
	}

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSound m_soundScroll;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSound m_soundSelect;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSound m_soundClose;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color m_textSelectColour;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color m_textDeselectColour;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x2723B8", Offset = "0x2723B8")]
	private float m_playerDistanceFromPauseScreen;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_isPaused;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_pauseTimer;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_previousSnapshot;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_previousTimeScale;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PauseScreen m_pauseGame;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PauseScreen m_pauseMain;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HUDMessage m_hudMessage;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool m_debug;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PauseScreen m_currentScreen;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Blade m_currentBlade;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_previousPos;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 m_currentPos;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 m_dist;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_menuScrollThreshold;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_noControllerPauseTimer;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x77B914", Offset = "0x77B914", VA = "0x77B914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x77B9E4", Offset = "0x77B9E4", VA = "0x77B9E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x77BAB4", Offset = "0x77BAB4", VA = "0x77BAB4")]
	public float GetPauseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x77BABC", Offset = "0x77BABC", VA = "0x77BABC")]
	public void OnInputAction(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x77C3F4", Offset = "0x77C3F4", VA = "0x77C3F4")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x77C464", Offset = "0x77C464", VA = "0x77C464")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x77CA58", Offset = "0x77CA58", VA = "0x77CA58")]
	private void UpdatePauseHUDMessage()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x77BFB0", Offset = "0x77BFB0", VA = "0x77BFB0")]
	public void OnPauseButtonDown(Blade blade)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x77DA04", Offset = "0x77DA04", VA = "0x77DA04")]
	public void OnTriggerDown(Blade blade)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x77BD98", Offset = "0x77BD98", VA = "0x77BD98")]
	public void OnSelect(Blade blade)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x77DC18", Offset = "0x77DC18", VA = "0x77DC18")]
	public void OnTouchDown(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x77DD34", Offset = "0x77DD34", VA = "0x77DD34")]
	public void OnTouchUp(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x77DE74", Offset = "0x77DE74", VA = "0x77DE74")]
	public void OnTouch(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x77BB7C", Offset = "0x77BB7C", VA = "0x77BB7C")]
	public void ChangeSelection(int dir)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x77E22C", Offset = "0x77E22C", VA = "0x77E22C")]
	public void TransferMenu(Blade blade)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x77E2C8", Offset = "0x77E2C8", VA = "0x77E2C8")]
	public void ChangeScreen(PauseScreen screen)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x77CB68", Offset = "0x77CB68", VA = "0x77CB68")]
	public void Pause(PauseReason reason)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x77D1A8", Offset = "0x77D1A8", VA = "0x77D1A8")]
	public void Pause(Blade blade, PauseScreen screen, PauseReason reason, bool isCritical)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x77CE0C", Offset = "0x77CE0C", VA = "0x77CE0C")]
	public void Resume()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x77EF34", Offset = "0x77EF34", VA = "0x77EF34")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x77EFEC", Offset = "0x77EFEC", VA = "0x77EFEC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x77F0A4", Offset = "0x77F0A4", VA = "0x77F0A4")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PauseScreen : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	private enum TypeOfPauseScreen
	{
		[Token(Token = "0x4000564")]
		None = -1,
		[Token(Token = "0x4000565")]
		PauseSettings,
		[Token(Token = "0x4000566")]
		PauseMain,
		[Token(Token = "0x4000567")]
		PauseGame,
		[Token(Token = "0x4000568")]
		PauseQuality,
		[Token(Token = "0x4000569")]
		PauseLeaderboards,
		[Token(Token = "0x400056A")]
		PauseTimeOfDay,
		[Token(Token = "0x400056B")]
		PauseIndicator,
		[Token(Token = "0x400056C")]
		PauseMusic,
		[Token(Token = "0x400056D")]
		PauseLanguage
	}

	[Token(Token = "0x20000C1")]
	private enum DaySetting
	{
		[Token(Token = "0x400056F")]
		Day,
		[Token(Token = "0x4000570")]
		Night,
		[Token(Token = "0x4000571")]
		Alternate
	}

	[Serializable]
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270128", Offset = "0x270128")]
	private sealed class <>c
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Fader.OnFadeComplete <>9__23_0;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x54A43C", Offset = "0x54A43C", VA = "0x54A43C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x54A444", Offset = "0x54A444", VA = "0x54A444")]
		internal void <QuitGame>b__23_0(Fader.State OnFadeComplete)
		{
		}
	}

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private TypeOfPauseScreen m_typeOfPauseScreen;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Button[] m_allButtons;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LayoutElement[] m_allElements;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI[] m_allText;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_currentSelected;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_optionCurrentlyActive;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private PointerEventData m_pointerEventData;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PauseManager m_pauseMan;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private PicoSet m_picoSet;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272410", Offset = "0x272410")]
	private PauseScreen <PreviousScreen>k__BackingField;

	[Token(Token = "0x17000046")]
	public PauseScreen PreviousScreen
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0x77F154", Offset = "0x77F154", VA = "0x77F154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745A0", Offset = "0x2745A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x77F15C", Offset = "0x77F15C", VA = "0x77F15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745B0", Offset = "0x2745B0")]
		private set
		{
		}
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x77E43C", Offset = "0x77E43C", VA = "0x77E43C")]
	public void LoadScreen(PauseManager man)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x77F694", Offset = "0x77F694", VA = "0x77F694")]
	private void SelectButtonWithCurrentValue(string playerPrefName, int defaultValue, bool hasBackButton)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x77F7BC", Offset = "0x77F7BC", VA = "0x77F7BC")]
	private Button GetCurrentButton()
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x77E010", Offset = "0x77E010", VA = "0x77E010")]
	public bool ChangeSelection(int dir)
	{
		return default(bool);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x77F3FC", Offset = "0x77F3FC", VA = "0x77F3FC")]
	private void SelectCurrent()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x77F164", Offset = "0x77F164", VA = "0x77F164")]
	private void DeselectCurrent()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x77DAF8", Offset = "0x77DAF8", VA = "0x77DAF8")]
	public void ActivateSelectedButton()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x77F990", Offset = "0x77F990", VA = "0x77F990")]
	public void Retry()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x77FB98", Offset = "0x77FB98", VA = "0x77FB98")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x77FD4C", Offset = "0x77FD4C", VA = "0x77FD4C")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x77FB74", Offset = "0x77FB74", VA = "0x77FB74")]
	public void Resume()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x77FF14", Offset = "0x77FF14", VA = "0x77FF14")]
	public void ChangeScreen(PauseScreen screen)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x77FF60", Offset = "0x77FF60", VA = "0x77FF60")]
	public void ChangeQualitySettings(int val)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x78018C", Offset = "0x78018C", VA = "0x78018C")]
	public void ChangeLeaderboardSettings(int val)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x7801F0", Offset = "0x7801F0", VA = "0x7801F0")]
	public void ChangeLanguage(string lang)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x780584", Offset = "0x780584", VA = "0x780584")]
	public void ChangeTimeOfDay(int value)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x780870", Offset = "0x780870", VA = "0x780870")]
	public void ToggleSeeThrough()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x780990", Offset = "0x780990", VA = "0x780990")]
	public void SetIndicatorPreference(int value)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x780A04", Offset = "0x780A04", VA = "0x780A04")]
	public void ClearLeaderboards()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x780BE4", Offset = "0x780BE4", VA = "0x780BE4")]
	public void MusicOn(bool on)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x77FFB4", Offset = "0x77FFB4", VA = "0x77FFB4")]
	private void RestartGame()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x780C78", Offset = "0x780C78", VA = "0x780C78")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x20000C3")]
public class PicoInputTesting : MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI m_handText;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI m_boolText;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI m_floatText;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_vector2Text;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI m_restText;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDevice m_inputDevice;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_foundInputDevice;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x781F58", Offset = "0x781F58", VA = "0x781F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x782350", Offset = "0x782350", VA = "0x782350")]
	private void Update()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x782870", Offset = "0x782870", VA = "0x782870")]
	public PicoInputTesting()
	{
	}
}
[Token(Token = "0x20000C4")]
public class PicoMRCTesting : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PXR_MRC m_mrc;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LayerMask[] m_foregroundLayers;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LayerMask[] m_backgroundLayers;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_f;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_b;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x782888", Offset = "0x782888", VA = "0x782888")]
	public void ToggleForeground()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x78290C", Offset = "0x78290C", VA = "0x78290C")]
	public void ToggleBackground()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x782990", Offset = "0x782990", VA = "0x782990")]
	public void ToggleBack()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x7829C8", Offset = "0x7829C8", VA = "0x7829C8")]
	public PicoMRCTesting()
	{
	}
}
[Token(Token = "0x20000C5")]
public class LocalProvider : PlatformProvider
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<string, LocalLeaderboard> m_leaderboards;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x7CCEF8", Offset = "0x7CCEF8", VA = "0x7CCEF8", Slot = "7")]
	public override bool IsInitialised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x7CCF00", Offset = "0x7CCF00", VA = "0x7CCF00", Slot = "10")]
	public override void Save()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x7CCF08", Offset = "0x7CCF08", VA = "0x7CCF08")]
	private string EvalStatStorageKey(StatsId key)
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x7CD00C", Offset = "0x7CD00C", VA = "0x7CD00C")]
	private string EvalAchievementStorageKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x7CD0E4", Offset = "0x7CD0E4", VA = "0x7CD0E4", Slot = "11")]
	public override void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x7CD128", Offset = "0x7CD128", VA = "0x7CD128", Slot = "12")]
	public override void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x7CD180", Offset = "0x7CD180", VA = "0x7CD180", Slot = "13")]
	public override int GetStat(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x7CD1A0", Offset = "0x7CD1A0", VA = "0x7CD1A0", Slot = "15")]
	public override void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x7CD248", Offset = "0x7CD248", VA = "0x7CD248", Slot = "16")]
	public override bool IsAchievementUnlocked(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x7CD270", Offset = "0x7CD270", VA = "0x7CD270", Slot = "18")]
	public override string GetProfileName()
	{
		return null;
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x7CD278", Offset = "0x7CD278", VA = "0x7CD278", Slot = "19")]
	public override string GetProfileId()
	{
		return null;
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x7CD280", Offset = "0x7CD280", VA = "0x7CD280", Slot = "20")]
	public override Leaderboard GetLeaderboard(string name)
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x7CD3A4", Offset = "0x7CD3A4", VA = "0x7CD3A4")]
	public LocalProvider()
	{
	}
}
[Token(Token = "0x20000C6")]
public class PicoProvider : LocalProvider
{
	[Token(Token = "0x600049C")]
	[Address(RVA = "0x7829D0", Offset = "0x7829D0", VA = "0x7829D0", Slot = "7")]
	public override bool IsInitialised()
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x7829D8", Offset = "0x7829D8", VA = "0x7829D8", Slot = "10")]
	public override void Save()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x7829E0", Offset = "0x7829E0", VA = "0x7829E0", Slot = "11")]
	public override void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x7829E8", Offset = "0x7829E8", VA = "0x7829E8", Slot = "12")]
	public override void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x7829F0", Offset = "0x7829F0", VA = "0x7829F0", Slot = "13")]
	public override int GetStat(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x7829F8", Offset = "0x7829F8", VA = "0x7829F8", Slot = "16")]
	public override bool IsAchievementUnlocked(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x782A00", Offset = "0x782A00", VA = "0x782A00", Slot = "18")]
	public override string GetProfileName()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x782A08", Offset = "0x782A08", VA = "0x782A08", Slot = "19")]
	public override string GetProfileId()
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x782A10", Offset = "0x782A10", VA = "0x782A10", Slot = "20")]
	public override Leaderboard GetLeaderboard(string name)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x782A18", Offset = "0x782A18", VA = "0x782A18")]
	public PicoProvider()
	{
	}
}
[Token(Token = "0x20000C7")]
public abstract class PlatformProvider
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272420", Offset = "0x272420")]
	private AchievementsData <AchievementsData>k__BackingField;

	[Token(Token = "0x17000047")]
	public AchievementsData AchievementsData
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x7836CC", Offset = "0x7836CC", VA = "0x7836CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745C0", Offset = "0x2745C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x7836D4", Offset = "0x7836D4", VA = "0x7836D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745D0", Offset = "0x2745D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public virtual bool AllowPauseMenuInMainMenu
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x7836DC", Offset = "0x7836DC", VA = "0x7836DC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public virtual bool AllowPauseMenuInGame
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x7836E4", Offset = "0x7836E4", VA = "0x7836E4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x7836EC", Offset = "0x7836EC", VA = "0x7836EC", Slot = "6")]
	public virtual void Initialise(AchievementsData achievementsData)
	{
	}

	[Token(Token = "0x60004AB")]
	public abstract bool IsInitialised();

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x7836F4", Offset = "0x7836F4", VA = "0x7836F4", Slot = "8")]
	public virtual bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x7836FC", Offset = "0x7836FC", VA = "0x7836FC", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004AE")]
	public abstract void Save();

	[Token(Token = "0x60004AF")]
	public abstract void SetStat(StatsId key, int val);

	[Token(Token = "0x60004B0")]
	public abstract void IncrementStat(StatsId key, int val);

	[Token(Token = "0x60004B1")]
	public abstract int GetStat(StatsId key, int def = 0);

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x783700", Offset = "0x783700", VA = "0x783700", Slot = "14")]
	protected virtual void OnStatChanged(StatsId id, int newValue)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x7837D0", Offset = "0x7837D0", VA = "0x7837D0", Slot = "15")]
	public virtual void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x60004B4")]
	public abstract bool IsAchievementUnlocked(string name);

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x783888", Offset = "0x783888", VA = "0x783888", Slot = "17")]
	public virtual float GetAchievmentProgress(string name)
	{
		return default(float);
	}

	[Token(Token = "0x60004B6")]
	public abstract string GetProfileName();

	[Token(Token = "0x60004B7")]
	public abstract string GetProfileId();

	[Token(Token = "0x60004B8")]
	public abstract Leaderboard GetLeaderboard(string name);

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x783A34", Offset = "0x783A34", VA = "0x783A34", Slot = "21")]
	public virtual void Deinitialise()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x783A38", Offset = "0x783A38", VA = "0x783A38")]
	protected PlatformProvider()
	{
	}
}
[Token(Token = "0x20000C8")]
public class PlayParticles : MonoBehaviour
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_minTime;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_maxTime;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ParticleSystem[] m_particleSystems;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_timer;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x783A40", Offset = "0x783A40", VA = "0x783A40")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x783AF8", Offset = "0x783AF8", VA = "0x783AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x783AD4", Offset = "0x783AD4", VA = "0x783AD4")]
	private void SetTimer()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x783BA4", Offset = "0x783BA4", VA = "0x783BA4")]
	public PlayParticles()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PositionLock : MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 m_lockAxis;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_lockPosition;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_limitRange;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 m_limitRangeMin;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 m_limitRangeMax;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_moveParent;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_steamOffset;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 m_oculusOffset;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x70A5EC", Offset = "0x70A5EC", VA = "0x70A5EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x70AA38", Offset = "0x70AA38", VA = "0x70AA38")]
	public PositionLock()
	{
	}
}
[Token(Token = "0x20000CA")]
public class PreslicedFruitCache : MonoBehaviour, ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x20000CB")]
	public class CacheItem
	{
		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 planeNormal;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float planeDistance;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] fragments;

		[Token(Token = "0x1700004A")]
		public Plane plane
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0x54A890", Offset = "0x54A890", VA = "0x54A890")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x60004C7")]
			[Address(RVA = "0x54A8D0", Offset = "0x54A8D0", VA = "0x54A8D0")]
			set
			{
			}
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x54A928", Offset = "0x54A928", VA = "0x54A928")]
		internal MeshSlicer.FruitSplitCache.Item ToItem()
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x54AA10", Offset = "0x54AA10", VA = "0x54AA10")]
		public CacheItem()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	public class OptimizedSplitMesh
	{
		[Token(Token = "0x20000CD")]
		private struct MeshFeatures
		{
			[Token(Token = "0x400059B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool colors;

			[Token(Token = "0x400059C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool uv;

			[Token(Token = "0x400059D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool uv2;

			[Token(Token = "0x400059E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool uv3;

			[Token(Token = "0x400059F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool uv4;

			[Token(Token = "0x40005A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool tangents;

			[Token(Token = "0x40005A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool normals;

			[Token(Token = "0x40005A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool boneWeights;

			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x154BCB8", Offset = "0x154BCB8", VA = "0x154BCB8")]
			public void AddFeaturesFromMesh(Mesh mesh)
			{
			}
		}

		[Token(Token = "0x20000CE")]
		private class IndexBuffer
		{
			[Token(Token = "0x40005A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] indices;

			[Token(Token = "0x40005A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public MeshTopology topology;

			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x154BC84", Offset = "0x154BC84", VA = "0x154BC84")]
			public IndexBuffer(int[] newIndexBuffer, MeshTopology topology)
			{
			}
		}

		[Token(Token = "0x20000CF")]
		private struct Vertex
		{
			[Token(Token = "0x40005A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Color color;

			[Token(Token = "0x40005A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector3 position;

			[Token(Token = "0x40005A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly Vector2 uv;

			[Token(Token = "0x40005A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public readonly Vector2 uv2;

			[Token(Token = "0x40005A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public readonly Vector2 uv3;

			[Token(Token = "0x40005AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public readonly Vector2 uv4;

			[Token(Token = "0x40005AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public readonly Vector4 tangent;

			[Token(Token = "0x40005AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public readonly Vector3 normal;

			[Token(Token = "0x40005AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public readonly BoneWeight boneWeight;

			[Token(Token = "0x40005AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int hash;

			[Token(Token = "0x40005AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static float minVal;

			[Token(Token = "0x40005B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private static float maxVal;

			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x154BE2C", Offset = "0x154BE2C", VA = "0x154BE2C")]
			public Vertex(Color color, Vector3 position, Vector2 uv, Vector2 uv2, Vector2 uv3, Vector2 uv4, Vector4 tangent, Vector3 normal, BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x60004D5")]
			[Address(RVA = "0x154BF20", Offset = "0x154BF20", VA = "0x154BF20")]
			private static uint CombineHash(uint a, uint b)
			{
				return default(uint);
			}

			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x154BF34", Offset = "0x154BF34", VA = "0x154BF34")]
			private static uint CombineHash(uint a, uint b, uint c)
			{
				return default(uint);
			}

			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x154BF54", Offset = "0x154BF54", VA = "0x154BF54")]
			private static uint CombineHash(uint a, uint b, uint c, uint d)
			{
				return default(uint);
			}

			[Token(Token = "0x60004D8")]
			[Address(RVA = "0x154BF7C", Offset = "0x154BF7C", VA = "0x154BF7C")]
			private static uint CombineHash(uint a, uint b, uint c, uint d, uint e, uint f, uint g, uint h)
			{
				return default(uint);
			}

			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x154BFD8", Offset = "0x154BFD8", VA = "0x154BFD8")]
			private static uint CombineHash(uint a, uint b, uint c, uint d, uint e, uint f, uint g, uint h, uint i)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x154C040", Offset = "0x154C040", VA = "0x154C040")]
			private static uint GetHash(float f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x154C0C8", Offset = "0x154C0C8", VA = "0x154C0C8")]
			private static uint GetHash(Color f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x154C188", Offset = "0x154C188", VA = "0x154C188")]
			private static uint GetHash(Vector4 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x154C248", Offset = "0x154C248", VA = "0x154C248")]
			private static uint GetHash(Vector3 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x154C2F4", Offset = "0x154C2F4", VA = "0x154C2F4")]
			private static uint GetHash(Vector2 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x154C388", Offset = "0x154C388", VA = "0x154C388")]
			private static uint GetHash(BoneWeight f)
			{
				return default(uint);
			}

			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x154C4EC", Offset = "0x154C4EC", VA = "0x154C4EC")]
			private static uint GetHash(Vertex vert)
			{
				return default(uint);
			}

			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x154C798", Offset = "0x154C798", VA = "0x154C798", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x154C864", Offset = "0x154C864", VA = "0x154C864", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20000D0")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x270138", Offset = "0x270138")]
		private struct VertexExtractor
		{
			[Token(Token = "0x40005B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Color[] colors;

			[Token(Token = "0x40005B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly Vector3[] vertices;

			[Token(Token = "0x40005B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Vector2[] uv;

			[Token(Token = "0x40005B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public readonly Vector2[] uv2;

			[Token(Token = "0x40005B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector2[] uv3;

			[Token(Token = "0x40005B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public readonly Vector2[] uv4;

			[Token(Token = "0x40005B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Vector4[] tangents;

			[Token(Token = "0x40005B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly Vector3[] normals;

			[Token(Token = "0x40005B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly BoneWeight[] boneWeights;

			[Token(Token = "0x1700004C")]
			public Vertex Item
			{
				[Token(Token = "0x60004E9")]
				[Address(RVA = "0x154D8E8", Offset = "0x154D8E8", VA = "0x154D8E8")]
				get
				{
					return default(Vertex);
				}
			}

			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x154CA4C", Offset = "0x154CA4C", VA = "0x154CA4C")]
			public VertexExtractor(Mesh mesh, Matrix4x4 mtx)
			{
			}

			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x154D3FC", Offset = "0x154D3FC", VA = "0x154D3FC")]
			private static Vector3[] TransformVectors(Vector3[] normals, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x154D0B0", Offset = "0x154D0B0", VA = "0x154D0B0")]
			private static Vector3[] TransformPoints(Vector3[] vertices, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x154D244", Offset = "0x154D244", VA = "0x154D244")]
			private static Vector4[] TransformVectors(Vector4[] vertices, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x154D590", Offset = "0x154D590", VA = "0x154D590")]
			public Vertex Get(int idx)
			{
				return default(Vertex);
			}
		}

		[Serializable]
		[Token(Token = "0x20000D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27016C", Offset = "0x27016C")]
		private sealed class <>c
		{
			[Token(Token = "0x40005BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40005BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Vertex, Vector3> <>9__16_0;

			[Token(Token = "0x40005BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, BoneWeight> <>9__16_1;

			[Token(Token = "0x40005BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<Vertex, Vector3> <>9__16_2;

			[Token(Token = "0x40005BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, Vector4> <>9__16_3;

			[Token(Token = "0x40005BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Func<Vertex, Vector2> <>9__16_4;

			[Token(Token = "0x40005C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, Vector2> <>9__16_5;

			[Token(Token = "0x40005C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static Func<Vertex, Vector2> <>9__16_6;

			[Token(Token = "0x40005C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Vertex, Vector2> <>9__16_7;

			[Token(Token = "0x40005C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static Func<Vertex, Color> <>9__16_8;

			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x154B968", Offset = "0x154B968", VA = "0x154B968")]
			public <>c()
			{
			}

			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x154B970", Offset = "0x154B970", VA = "0x154B970")]
			internal Vector3 <UpdateMesh>b__16_0(Vertex v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x154B9BC", Offset = "0x154B9BC", VA = "0x154B9BC")]
			internal BoneWeight <UpdateMesh>b__16_1(Vertex v)
			{
				return default(BoneWeight);
			}

			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x154BA14", Offset = "0x154BA14", VA = "0x154BA14")]
			internal Vector3 <UpdateMesh>b__16_2(Vertex v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x154BA60", Offset = "0x154BA60", VA = "0x154BA60")]
			internal Vector4 <UpdateMesh>b__16_3(Vertex v)
			{
				return default(Vector4);
			}

			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x154BAAC", Offset = "0x154BAAC", VA = "0x154BAAC")]
			internal Vector2 <UpdateMesh>b__16_4(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x154BAC8", Offset = "0x154BAC8", VA = "0x154BAC8")]
			internal Vector2 <UpdateMesh>b__16_5(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x154BAE4", Offset = "0x154BAE4", VA = "0x154BAE4")]
			internal Vector2 <UpdateMesh>b__16_6(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x154BB00", Offset = "0x154BB00", VA = "0x154BB00")]
			internal Vector2 <UpdateMesh>b__16_7(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x154BB1C", Offset = "0x154BB1C", VA = "0x154BB1C")]
			internal Color <UpdateMesh>b__16_8(Vertex v)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x20000D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27017C", Offset = "0x27017C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40005C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<int, KeyValuePair<int, Matrix4x4>> submeshRemapping;

			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x154BB38", Offset = "0x154BB38", VA = "0x154BB38")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x154BB40", Offset = "0x154BB40", VA = "0x154BB40")]
			internal SubMeshRenderer.SubMeshPass <Duplicate>b__0(Material mat, int idx)
			{
				return default(SubMeshRenderer.SubMeshPass);
			}
		}

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272440", Offset = "0x272440")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public CacheItem[] splitInstances;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshFeatures features;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Vertex, int> vertLookup;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<Vertex> verts;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IndexBuffer> indexBuffers;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Bounds bounds;

		[Token(Token = "0x1700004B")]
		public Mesh mesh
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0x54AA18", Offset = "0x54AA18", VA = "0x54AA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745E0", Offset = "0x2745E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0x54AA20", Offset = "0x54AA20", VA = "0x54AA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2745F0", Offset = "0x2745F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x54AA28", Offset = "0x54AA28", VA = "0x54AA28")]
		private static bool NotEmpty(Array arr)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x54AA54", Offset = "0x54AA54", VA = "0x54AA54")]
		private Dictionary<int, KeyValuePair<int, Matrix4x4>> AppendMesh(MeshFilter applyTo)
		{
			return null;
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x54B920", Offset = "0x54B920", VA = "0x54B920")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x54B8F8", Offset = "0x54B8F8", VA = "0x54B8F8")]
		public void FinalizeMesh()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x54A4A4", Offset = "0x54A4A4", VA = "0x54A4A4")]
		internal GameObject Duplicate(Transform parent, GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x54C64C", Offset = "0x54C64C", VA = "0x54C64C")]
		public OptimizedSplitMesh()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000D3")]
	private struct SerializedCache
	{
		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public CacheItem[] slicedInstances;
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27018C", Offset = "0x27018C")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PreslicedFruitCache <>4__this;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public OptimizedSplitMesh cachedObjects;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Func<GameObject, GameObject> <>9__0;

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x54A44C", Offset = "0x54A44C", VA = "0x54A44C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x54A454", Offset = "0x54A454", VA = "0x54A454")]
		internal GameObject <AddFruitCache>b__0(GameObject obj)
		{
			return null;
		}
	}

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Dictionary<string, OptimizedSplitMesh> m_cachedFruit;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SerializedCache[] m_serializedCache;

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x70AC64", Offset = "0x70AC64", VA = "0x70AC64")]
	public void AddFruitCache(MeshSlicer.FruitSplitCache cache)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x70B0EC", Offset = "0x70B0EC", VA = "0x70B0EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x70B5B4", Offset = "0x70B5B4", VA = "0x70B5B4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x70B840", Offset = "0x70B840", VA = "0x70B840", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x70B9CC", Offset = "0x70B9CC", VA = "0x70B9CC")]
	public PreslicedFruitCache()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ProfileManager : MonoSingleton<ProfileManager>
{
	[Serializable]
	[Token(Token = "0x20000D6")]
	public struct BladeAchievement
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong itemID;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string achievementName;
	}

	[Token(Token = "0x20000D7")]
	public delegate void RequestResponse(bool success, WWW requestObject);

	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27019C", Offset = "0x27019C")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ProfileManager <>4__this;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<PlatformProvider>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x54CF30", Offset = "0x54CF30", VA = "0x54CF30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x54CF80", Offset = "0x54CF80", VA = "0x54CF80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x54CADC", Offset = "0x54CADC", VA = "0x54CADC")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x54CAFC", Offset = "0x54CAFC", VA = "0x54CAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x54CB74", Offset = "0x54CB74", VA = "0x54CB74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x54CB14", Offset = "0x54CB14", VA = "0x54CB14")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x54CF38", Offset = "0x54CF38", VA = "0x54CF38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701AC", Offset = "0x2701AC")]
	private sealed class <RequestRoutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RequestResponse responseCallback;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WWW <sendRequest>5__2;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0x54CA84", Offset = "0x54CA84", VA = "0x54CA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x54CAD4", Offset = "0x54CAD4", VA = "0x54CAD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x54C654", Offset = "0x54C654", VA = "0x54C654")]
		[DebuggerHidden]
		public <RequestRoutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x54C674", Offset = "0x54C674", VA = "0x54C674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x54C678", Offset = "0x54C678", VA = "0x54C678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x54CA8C", Offset = "0x54CA8C", VA = "0x54CA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<PlatformProvider> m_providers;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private PlatformProvider m_mainProvider;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlatformProvider m_localProvider;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x70BA68", Offset = "0x70BA68", VA = "0x70BA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274600", Offset = "0x274600")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x70BAEC", Offset = "0x70BAEC", VA = "0x70BAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x70BC4C", Offset = "0x70BC4C", VA = "0x70BC4C")]
	public int GetBuildId()
	{
		return default(int);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x70BC54", Offset = "0x70BC54", VA = "0x70BC54")]
	public void InitProviders()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x70BE38", Offset = "0x70BE38", VA = "0x70BE38")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x70BF98", Offset = "0x70BF98", VA = "0x70BF98")]
	public void Save()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x70C11C", Offset = "0x70C11C", VA = "0x70C11C")]
	public PlatformProvider GetMainProvider()
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x70C1C0", Offset = "0x70C1C0", VA = "0x70C1C0")]
	public bool HasMainProvider()
	{
		return default(bool);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x70C1D0", Offset = "0x70C1D0", VA = "0x70C1D0")]
	public PlatformProvider GetLocalProvider()
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x70C1D8", Offset = "0x70C1D8", VA = "0x70C1D8")]
	public void CheckForTimedUnlocks()
	{
	}

	[Token(Token = "0x6000503")]
	public Leaderboard GetLeaderboard<T>(string name)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x70C53C", Offset = "0x70C53C", VA = "0x70C53C")]
	public void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x70C6C8", Offset = "0x70C6C8", VA = "0x70C6C8")]
	public float GetAchievmentProgress(string name)
	{
		return default(float);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x70C74C", Offset = "0x70C74C", VA = "0x70C74C")]
	public bool IsAchievementUnlocked(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x70C3A8", Offset = "0x70C3A8", VA = "0x70C3A8")]
	public void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x70C7D0", Offset = "0x70C7D0", VA = "0x70C7D0")]
	public void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x70C964", Offset = "0x70C964", VA = "0x70C964")]
	public int GetStatInt(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x70C9F0", Offset = "0x70C9F0", VA = "0x70C9F0")]
	public string GetMainProfileName()
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x70CA20", Offset = "0x70CA20", VA = "0x70CA20")]
	public string GetMainProfileId()
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x70CA50", Offset = "0x70CA50", VA = "0x70CA50")]
	public void SendHTTPRequest(string url, RequestResponse responseCallback)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x70CA74", Offset = "0x70CA74", VA = "0x70CA74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x27466C", Offset = "0x27466C")]
	private IEnumerator RequestRoutine(string url, RequestResponse responseCallback)
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x70CB28", Offset = "0x70CB28", VA = "0x70CB28")]
	public ProfileManager()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ReflectionProbeControl : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private ReflectionProbe m_probe;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_rendered;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool m_doRender;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x70E794", Offset = "0x70E794", VA = "0x70E794")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x70E7FC", Offset = "0x70E7FC", VA = "0x70E7FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x70E8D0", Offset = "0x70E8D0", VA = "0x70E8D0")]
	public ReflectionProbeControl()
	{
	}
}
[Token(Token = "0x20000DB")]
public class RemoveFromDemo : MonoBehaviour
{
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x70EA08", Offset = "0x70EA08", VA = "0x70EA08")]
	public RemoveFromDemo()
	{
	}
}
[Token(Token = "0x20000DC")]
public class RemoveFromOculus : MonoBehaviour
{
	[Token(Token = "0x6000524")]
	[Address(RVA = "0x70EA10", Offset = "0x70EA10", VA = "0x70EA10")]
	public RemoveFromOculus()
	{
	}
}
[Token(Token = "0x20000DD")]
public class RemoveFromSteamWorks : MonoBehaviour
{
	[Token(Token = "0x6000525")]
	[Address(RVA = "0x70EA18", Offset = "0x70EA18", VA = "0x70EA18")]
	public RemoveFromSteamWorks()
	{
	}
}
[Token(Token = "0x20000DE")]
public class RemoveFromViveport : MonoBehaviour
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0x70EA20", Offset = "0x70EA20", VA = "0x70EA20")]
	public RemoveFromViveport()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ResultsScreenArcade : MonoBehaviour
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animation m_animation;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BonusDisplay m_bonus1;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BonusDisplay m_bonus2;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BonusDisplay m_bonus3;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI m_testTotalPoints;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameMode m_gameMode;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_totalPoints;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x70EA28", Offset = "0x70EA28", VA = "0x70EA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x70EAD8", Offset = "0x70EAD8", VA = "0x70EAD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x70EADC", Offset = "0x70EADC", VA = "0x70EADC")]
	public int ShowResultsScreen(GameMode mode)
	{
		return default(int);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x70EE64", Offset = "0x70EE64", VA = "0x70EE64")]
	public void CloseResultsScreen()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x70EE98", Offset = "0x70EE98", VA = "0x70EE98")]
	public void BonusFinishedAnimating(int number)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x70EF54", Offset = "0x70EF54", VA = "0x70EF54")]
	public void ApplyTotalToScore()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x70F1B8", Offset = "0x70F1B8", VA = "0x70F1B8")]
	public ResultsScreenArcade()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ScaleUp : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve scale;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float duration;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasFinished;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startScale;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x710FB0", Offset = "0x710FB0", VA = "0x710FB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x710FFC", Offset = "0x710FFC", VA = "0x710FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x7110B0", Offset = "0x7110B0", VA = "0x7110B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x7111AC", Offset = "0x7111AC", VA = "0x7111AC")]
	public ScaleUp()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	private enum States
	{
		[Token(Token = "0x40005F7")]
		Init,
		[Token(Token = "0x40005F8")]
		ConfigSetup,
		[Token(Token = "0x40005F9")]
		Warmup,
		[Token(Token = "0x40005FA")]
		FadeIn,
		[Token(Token = "0x40005FB")]
		StartLoad,
		[Token(Token = "0x40005FC")]
		WaitForLoad,
		[Token(Token = "0x40005FD")]
		Fadeout,
		[Token(Token = "0x40005FE")]
		ActivateScene
	}

	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701BC", Offset = "0x2701BC")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0x54E7D8", Offset = "0x54E7D8", VA = "0x54E7D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x54E828", Offset = "0x54E828", VA = "0x54E828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x54E514", Offset = "0x54E514", VA = "0x54E514")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x54E534", Offset = "0x54E534", VA = "0x54E534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x54E538", Offset = "0x54E538", VA = "0x54E538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x54E7E0", Offset = "0x54E7E0", VA = "0x54E7E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701CC", Offset = "0x2701CC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<Blade> <>9__24_0;

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x54E028", Offset = "0x54E028", VA = "0x54E028")]
		public <>c()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x54E030", Offset = "0x54E030", VA = "0x54E030")]
		internal void <LoadContent>b__24_0(Blade result)
		{
		}
	}

	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701DC", Offset = "0x2701DC")]
	private sealed class <LoadContent>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private InventoryService <inventory>5__2;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BladeConfig[] <>7__wrap2;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <>7__wrap3;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0x54E4BC", Offset = "0x54E4BC", VA = "0x54E4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x54E50C", Offset = "0x54E50C", VA = "0x54E50C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x54E0F0", Offset = "0x54E0F0", VA = "0x54E0F0")]
		[DebuggerHidden]
		public <LoadContent>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x54E110", Offset = "0x54E110", VA = "0x54E110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x54E114", Offset = "0x54E114", VA = "0x54E114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x54E4C4", Offset = "0x54E4C4", VA = "0x54E4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AssetVariationAddressable m_systemSet;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ShaderVariantCollection m_shaderVariantCollection;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ValueVariation[] m_sceneToLoad;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Fader[] m_faders;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ProfileManager m_profileManagerPrefab;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProfileManager m_profileManagerInstance;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AsyncOperation m_operation;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private States m_currentState;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_frameCounter;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string m_sceneNameToLoad;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_systemSetLoaded;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272460", Offset = "0x272460")]
	private VRSet <SystemSet>k__BackingField;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ApplicationLoad m_evtLoad;

	[Token(Token = "0x17000051")]
	public VRSet SystemSet
	{
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x7111F8", Offset = "0x7111F8", VA = "0x7111F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274778", Offset = "0x274778")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x711200", Offset = "0x711200", VA = "0x711200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274788", Offset = "0x274788")]
		private set
		{
		}
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x711208", Offset = "0x711208", VA = "0x711208")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x7112B0", Offset = "0x7112B0", VA = "0x7112B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274798", Offset = "0x274798")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x711334", Offset = "0x711334", VA = "0x711334")]
	private void OnUpdateInit()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x71134C", Offset = "0x71134C", VA = "0x71134C")]
	private void SetupConfig()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x711474", Offset = "0x711474", VA = "0x711474")]
	private void OnUpdateWarmup()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x711514", Offset = "0x711514", VA = "0x711514")]
	private void OnUpdateFadeIn()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x711870", Offset = "0x711870", VA = "0x711870")]
	private void OnUpdateStartLoad()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x7118B4", Offset = "0x7118B4", VA = "0x7118B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274804", Offset = "0x274804")]
	private IEnumerator LoadContent()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x711938", Offset = "0x711938", VA = "0x711938")]
	private void OnUpdateWaitForLoad()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x711B38", Offset = "0x711B38", VA = "0x711B38")]
	private void OnUpdateFadeOut()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x711D88", Offset = "0x711D88", VA = "0x711D88")]
	private void Update()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x711DEC", Offset = "0x711DEC", VA = "0x711DEC")]
	public SceneLoader()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x711DF4", Offset = "0x711DF4", VA = "0x711DF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274870", Offset = "0x274870")]
	private void <Start>b__18_0(GameObject result)
	{
	}
}
[Token(Token = "0x20000E6")]
public class SceneVisualsManager : MonoSingleton<SceneVisualsManager>
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool m_disableSceneOnSeeThrough;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject[] m_visualObjects;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x714060", Offset = "0x714060", VA = "0x714060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x7141EC", Offset = "0x7141EC", VA = "0x7141EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x71411C", Offset = "0x71411C", VA = "0x71411C")]
	private void UpdateSceneVisuals(bool isActive)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x71429C", Offset = "0x71429C", VA = "0x71429C")]
	public SceneVisualsManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Score : MonoBehaviour
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272490", Offset = "0x272490")]
	private int <CurrentScore>k__BackingField;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2724A0", Offset = "0x2724A0")]
	private float <DisplayedScore>k__BackingField;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_scoreTickSpeed;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public TextMesh m_textMesh;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public TextMeshProUGUI m_textMeshProUGUI;

	[Token(Token = "0x17000056")]
	public int CurrentScore
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x714338", Offset = "0x714338", VA = "0x714338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274920", Offset = "0x274920")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x714340", Offset = "0x714340", VA = "0x714340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274930", Offset = "0x274930")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float DisplayedScore
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x714348", Offset = "0x714348", VA = "0x714348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274940", Offset = "0x274940")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x714350", Offset = "0x714350", VA = "0x714350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274950", Offset = "0x274950")]
		set
		{
		}
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x714358", Offset = "0x714358", VA = "0x714358")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x71451C", Offset = "0x71451C", VA = "0x71451C")]
	private void Update()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x7146F0", Offset = "0x7146F0", VA = "0x7146F0")]
	public Score()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ScoreboardManager : MonoSingleton<ScoreboardManager>
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Score m_currentScore;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Score m_bestScore;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Timer m_timer;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DoubleBananaBoard m_double;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private GameObject m_ScoreBoard;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_TimerBoard;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject m_doubleBoard;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_newBestParticleLocation;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x714704", Offset = "0x714704", VA = "0x714704")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x714778", Offset = "0x714778", VA = "0x714778")]
	public Score GetScore()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x714868", Offset = "0x714868", VA = "0x714868")]
	public Score GetBestScore()
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x714958", Offset = "0x714958", VA = "0x714958")]
	public Timer GetTimer()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x714A48", Offset = "0x714A48", VA = "0x714A48")]
	public DoubleBananaBoard GetDoubleBoard()
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x714B38", Offset = "0x714B38", VA = "0x714B38")]
	public void ShowScoreAndTimer()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x714B88", Offset = "0x714B88", VA = "0x714B88")]
	public void ShowScoreOnly()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x714708", Offset = "0x714708", VA = "0x714708")]
	public void HideBoard()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x714BB4", Offset = "0x714BB4", VA = "0x714BB4")]
	public void SetBestScore(int score, bool snap = false)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x714C04", Offset = "0x714C04", VA = "0x714C04")]
	public void SetScore(int score, bool snap = false)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x70F0B4", Offset = "0x70F0B4", VA = "0x70F0B4")]
	public void AddScore(int val, bool snap = false)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x714CF0", Offset = "0x714CF0", VA = "0x714CF0")]
	public void FireNewBestFireworks()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x715004", Offset = "0x715004", VA = "0x715004")]
	public ScoreboardManager()
	{
	}
}
[Token(Token = "0x20000E9")]
public class ScrollManager : MonoSingleton<ScrollManager>
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_displayParent;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isDisplayed;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Animator m_animScroll;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animParent;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioSound m_soundDisplay;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioSound m_soundClose;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_nameEntry;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject m_activeDisplayObject;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_prefabeToLoad;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x715098", Offset = "0x715098", VA = "0x715098")]
	public GameObject ShowInformation(GameObject displayPrefab)
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x71564C", Offset = "0x71564C", VA = "0x71564C")]
	public void CloseDisplay()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x715424", Offset = "0x715424", VA = "0x715424")]
	private void Display()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x715654", Offset = "0x715654", VA = "0x715654")]
	private void OpenScroll()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x71553C", Offset = "0x71553C", VA = "0x71553C")]
	private void CloseScroll()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x715764", Offset = "0x715764", VA = "0x715764")]
	private void Hide()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x71587C", Offset = "0x71587C", VA = "0x71587C")]
	public void CallbackOpenScroll()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x7158E8", Offset = "0x7158E8", VA = "0x7158E8")]
	public void CallbackCloseScroll()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x715954", Offset = "0x715954", VA = "0x715954")]
	public void CallbackOpenIdle()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x7159C4", Offset = "0x7159C4", VA = "0x7159C4")]
	public void CallbackClosedIdle()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x715B00", Offset = "0x715B00", VA = "0x715B00")]
	public ScrollManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ScrollViewPageScroller : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701EC", Offset = "0x2701EC")]
	private sealed class <LerpToNewPosition>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScrollViewPageScroller <>4__this;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 positionToReach;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 <startPosition>5__3;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0x54F24C", Offset = "0x54F24C", VA = "0x54F24C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000584")]
			[Address(RVA = "0x54F29C", Offset = "0x54F29C", VA = "0x54F29C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x54EFE8", Offset = "0x54EFE8", VA = "0x54EFE8")]
		[DebuggerHidden]
		public <LerpToNewPosition>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x54F008", Offset = "0x54F008", VA = "0x54F008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x54F00C", Offset = "0x54F00C", VA = "0x54F00C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x54F254", Offset = "0x54F254", VA = "0x54F254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2701FC", Offset = "0x2701FC")]
	private sealed class <HighlightArrow>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ScrollViewPageScroller <>4__this;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <t>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000588")]
			[Address(RVA = "0x54EF90", Offset = "0x54EF90", VA = "0x54EF90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x54EFE0", Offset = "0x54EFE0", VA = "0x54EFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x54ED50", Offset = "0x54ED50", VA = "0x54ED50")]
		[DebuggerHidden]
		public <HighlightArrow>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x54ED70", Offset = "0x54ED70", VA = "0x54ED70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x54ED74", Offset = "0x54ED74", VA = "0x54ED74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x54EF98", Offset = "0x54EF98", VA = "0x54EF98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x272560", Offset = "0x272560")]
	private RectTransform m_contentRect;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Image m_rightArrow;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Image m_leftArrow;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSound m_scrollingSound;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2725D8", Offset = "0x2725D8")]
	private float m_highlightDuration;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_timeToScroll;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AnimationCurve m_scrollingLerpCurve;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color m_highlightingColor;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ScrollRect m_scrollRect;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_amountToScrollForReachingNextPage;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_initialised;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_contentEndingPosition;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator m_rightArrowAnimator;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Animator m_leftArrowAnimator;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_canScroll;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Disappear;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Appear;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x715B94", Offset = "0x715B94", VA = "0x715B94")]
	public void Initialise()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x716018", Offset = "0x716018", VA = "0x716018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x71601C", Offset = "0x71601C", VA = "0x71601C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x7160EC", Offset = "0x7160EC", VA = "0x7160EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x7161BC", Offset = "0x7161BC", VA = "0x7161BC")]
	private void PlayerInput(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x7162D0", Offset = "0x7162D0", VA = "0x7162D0")]
	private void Scroll(int direction)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x716540", Offset = "0x716540", VA = "0x716540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274960", Offset = "0x274960")]
	private IEnumerator LerpToNewPosition(Vector3 positionToReach)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x7165F8", Offset = "0x7165F8", VA = "0x7165F8")]
	public void SetHorizontalScrollingValue(float horizontalValue)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x71648C", Offset = "0x71648C", VA = "0x71648C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2749CC", Offset = "0x2749CC")]
	private IEnumerator HighlightArrow(Image image)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x715DD0", Offset = "0x715DD0", VA = "0x715DD0")]
	private void UpdateArrowVisibility(float xPosition)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x716638", Offset = "0x716638", VA = "0x716638")]
	public ScrollViewPageScroller()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SeeThroughMaterialSwapper : MonoBehaviour
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Renderer m_renderer;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystemRenderer m_particleSystem;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public XWeaponTrail m_trail;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_normalMaterial;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Material m_seeThroughMaterial;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_useRenderer;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_useParticleSystem;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool m_useTrail;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x716748", Offset = "0x716748", VA = "0x716748")]
	private void Start()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x7169BC", Offset = "0x7169BC", VA = "0x7169BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x716888", Offset = "0x716888", VA = "0x716888")]
	private void SeeThroughChanged(bool isActive)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x716A6C", Offset = "0x716A6C", VA = "0x716A6C")]
	public SeeThroughMaterialSwapper()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SeethroughPrompt : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27020C", Offset = "0x27020C")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SeethroughPrompt <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x54F594", Offset = "0x54F594", VA = "0x54F594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x54F5E4", Offset = "0x54F5E4", VA = "0x54F5E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x54F2A4", Offset = "0x54F2A4", VA = "0x54F2A4")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x54F2C4", Offset = "0x54F2C4", VA = "0x54F2C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x54F2C8", Offset = "0x54F2C8", VA = "0x54F2C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x54F59C", Offset = "0x54F59C", VA = "0x54F59C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_delayBeforePrompt;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HUDMessage m_hudMessage;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Button[] m_buttons;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayoutElement[] m_elements;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 m_offset;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Button m_currentSelectedButton;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_currentSelection;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private PointerEventData m_pointerEventData;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PicoSet m_picoSet;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PromptOpen;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x716A74", Offset = "0x716A74", VA = "0x716A74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274AD8", Offset = "0x274AD8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x716AF8", Offset = "0x716AF8", VA = "0x716AF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x716BC8", Offset = "0x716BC8", VA = "0x716BC8")]
	private void OnInputAction(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x716E44", Offset = "0x716E44", VA = "0x716E44")]
	private void ChangeSelectedButton(int newButtonIndex)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x716CD8", Offset = "0x716CD8", VA = "0x716CD8")]
	private void SelectCurrentButton()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x71726C", Offset = "0x71726C", VA = "0x71726C")]
	public void SeeThroughOn()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x717368", Offset = "0x717368", VA = "0x717368")]
	public void SeeThroughOff()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x716C44", Offset = "0x716C44", VA = "0x716C44")]
	public void ClosePrompt()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x717464", Offset = "0x717464", VA = "0x717464")]
	public SeethroughPrompt()
	{
	}
}
[Token(Token = "0x20000F0")]
public class SetUpAchievementBoard : MonoBehaviour
{
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27021C", Offset = "0x27021C")]
	private sealed class <SetScrollingToZero>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetUpAchievementBoard <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0x54F924", Offset = "0x54F924", VA = "0x54F924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x54F974", Offset = "0x54F974", VA = "0x54F974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x54F6AC", Offset = "0x54F6AC", VA = "0x54F6AC")]
		[DebuggerHidden]
		public <SetScrollingToZero>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x54F6CC", Offset = "0x54F6CC", VA = "0x54F6CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x54F6D0", Offset = "0x54F6D0", VA = "0x54F6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x54F92C", Offset = "0x54F92C", VA = "0x54F92C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AchievementsData m_achievementData;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject m_achievementPrefab;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Transform m_parentOfAchievements;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollViewPageScroller m_achievementMenuScrolling;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AchievementPanelSetUp[] m_achievementStatus;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x7180A8", Offset = "0x7180A8", VA = "0x7180A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x7180AC", Offset = "0x7180AC", VA = "0x7180AC")]
	private void SetUpAllAchievement()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x718198", Offset = "0x718198", VA = "0x718198")]
	private void CreateAllAchievements()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x71837C", Offset = "0x71837C", VA = "0x71837C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274B94", Offset = "0x274B94")]
	private IEnumerator SetScrollingToZero()
	{
		return null;
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x718400", Offset = "0x718400", VA = "0x718400")]
	public SetUpAchievementBoard()
	{
	}
}
[Token(Token = "0x20000F2")]
public class SliceObject : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float delayBeforeRightCanSlice;

	[NonSerialized]
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float delayBeforeLeftCanSlice;

	[NonSerialized]
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody m_rigidBody;

	[NonSerialized]
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bomb m_bomb;

	[NonSerialized]
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Fruit m_fruit;

	[NonSerialized]
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuFruit m_menu;

	[NonSerialized]
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SliceableProp m_prop;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider m_mainTrigger;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float upThrust;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float currentThrust;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Collider m_collider;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool m_skewered;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool m_sliced;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool m_beenDropped;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	protected bool m_canBeUsed;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_sliceQueued;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 m_lastVelocity;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector3 m_lastAngVelocity;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector3 m_lastPosition;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Quaternion m_lastRotation;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected ParticleSystem[] m_particles;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Collider[] m_colliders;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected bool isDelayedRight;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	protected bool isDelayedLeft;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected BasketEnemy m_enemyFired;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int m_waveID;

	[Token(Token = "0x14000005")]
	public static event Action<SliceObject> OnSliceObjectActivated
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x71E8A4", Offset = "0x71E8A4", VA = "0x71E8A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274C50", Offset = "0x274C50")]
		add
		{
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x71E974", Offset = "0x71E974", VA = "0x71E974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274C60", Offset = "0x274C60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action<SliceObject> OnSliceObjectDeactivated
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x71EA44", Offset = "0x71EA44", VA = "0x71EA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274C70", Offset = "0x274C70")]
		add
		{
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x71EB18", Offset = "0x71EB18", VA = "0x71EB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274C80", Offset = "0x274C80")]
		remove
		{
		}
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x71EBEC", Offset = "0x71EBEC", VA = "0x71EBEC")]
	public int GetWaveID()
	{
		return default(int);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x71EBF4", Offset = "0x71EBF4", VA = "0x71EBF4")]
	public BasketEnemy GetFiredEnemy()
	{
		return null;
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x71EBFC", Offset = "0x71EBFC", VA = "0x71EBFC")]
	public void SetWaveID(int id, [Optional] BasketEnemy enemy)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x71EC24", Offset = "0x71EC24", VA = "0x71EC24")]
	public float GetCurThrust()
	{
		return default(float);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x71EC2C", Offset = "0x71EC2C", VA = "0x71EC2C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x71EE64", Offset = "0x71EE64", VA = "0x71EE64", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x71F08C", Offset = "0x71F08C", VA = "0x71F08C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x71F194", Offset = "0x71F194", VA = "0x71F194", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x71F4A4", Offset = "0x71F4A4", VA = "0x71F4A4", Slot = "8")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x71F578", Offset = "0x71F578", VA = "0x71F578", Slot = "9")]
	public virtual void Recycle()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x71F604", Offset = "0x71F604", VA = "0x71F604")]
	public void SetSliceDelay(float delay, bool isRightBlade)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x71F618", Offset = "0x71F618", VA = "0x71F618")]
	public bool CanBeUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x71F620", Offset = "0x71F620", VA = "0x71F620")]
	public bool IsFruit()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x71F6A0", Offset = "0x71F6A0", VA = "0x71F6A0")]
	public bool IsBomb()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x71F720", Offset = "0x71F720", VA = "0x71F720")]
	public bool IsProp()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x71F7A0", Offset = "0x71F7A0", VA = "0x71F7A0")]
	public bool IsMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x71F820", Offset = "0x71F820", VA = "0x71F820")]
	public Plane GetBladeSlicePlane(Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, out Vector3 right)
	{
		return default(Plane);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x71F990", Offset = "0x71F990", VA = "0x71F990")]
	public bool IsDelayed(bool isRightBlade)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x71F5D4", Offset = "0x71F5D4", VA = "0x71F5D4")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x71F9CC", Offset = "0x71F9CC", VA = "0x71F9CC")]
	public void SetCollisions(bool enabled)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x71F9FC", Offset = "0x71F9FC", VA = "0x71F9FC", Slot = "10")]
	public virtual bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x71FA0C", Offset = "0x71FA0C", VA = "0x71FA0C", Slot = "11")]
	public virtual bool CanBeSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x71FA54", Offset = "0x71FA54", VA = "0x71FA54", Slot = "12")]
	public virtual bool IsSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x71FA5C", Offset = "0x71FA5C", VA = "0x71FA5C", Slot = "13")]
	public virtual bool HasBeenDropped()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x71FA64", Offset = "0x71FA64", VA = "0x71FA64", Slot = "14")]
	public virtual bool IsSliceQueued()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x71FA6C", Offset = "0x71FA6C", VA = "0x71FA6C", Slot = "15")]
	public virtual bool HasBeenSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x71FA74", Offset = "0x71FA74", VA = "0x71FA74", Slot = "16")]
	public virtual bool HasBeenDroppedOrSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x71FABC", Offset = "0x71FABC", VA = "0x71FABC", Slot = "17")]
	public virtual void IgnoreCollisions(Blade blade, bool ignore = true)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x71FBC0", Offset = "0x71FBC0", VA = "0x71FBC0", Slot = "18")]
	public virtual void IgnoreCollisions(Collider other, bool ignore = true)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x71FE28", Offset = "0x71FE28", VA = "0x71FE28", Slot = "19")]
	public virtual void Dropped()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x71FE2C", Offset = "0x71FE2C", VA = "0x71FE2C")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x71FF68", Offset = "0x71FF68", VA = "0x71FF68")]
	public Vector3 GetLastVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x71FF7C", Offset = "0x71FF7C", VA = "0x71FF7C")]
	public void SetLastVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x71FF88", Offset = "0x71FF88", VA = "0x71FF88")]
	protected void CallOnSliceObjectActivatedEvent()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x720014", Offset = "0x720014", VA = "0x720014")]
	protected void CallOnSliceObjectDeactivatedEvent()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x7200A0", Offset = "0x7200A0", VA = "0x7200A0")]
	public SliceObject()
	{
	}
}
[Token(Token = "0x20000F3")]
public class SpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float delayBetweenSpawn;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timer;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float arcRange;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float arcDistance;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float thurst;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forwardAngle;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 bombAngle;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angleRange;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dx;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ObjectPooler m_fruitPooler;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected ObjectPooler m_bombPooler;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ObjectPooler m_specialPooler;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected GameObject anchor;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_minThrustAdjust;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_maxThrustAdjust;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int spawnCount;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2726B0", Offset = "0x2726B0")]
	private bool <IsControlledByWaveManager>k__BackingField;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_useInitialPositionAsOffset;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_positionOffset;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool m_spawnFX;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CannonSpawnFX m_spawnFXContainer;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public TowerSpawnFX m_spawnTowerFXContainer;

	[Token(Token = "0x17000060")]
	public bool IsControlledByWaveManager
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xF9B024", Offset = "0xF9B024", VA = "0xF9B024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274C90", Offset = "0x274C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xF9B02C", Offset = "0xF9B02C", VA = "0xF9B02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274CA0", Offset = "0x274CA0")]
		set
		{
		}
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xF9B034", Offset = "0xF9B034", VA = "0xF9B034")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xF9B080", Offset = "0xF9B080", VA = "0xF9B080")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xF9B0A4", Offset = "0xF9B0A4", VA = "0xF9B0A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xF9B1D8", Offset = "0xF9B1D8", VA = "0xF9B1D8")]
	public GameObject SpawnEntity(float delta, string entityId, ObjectPooler pooler, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xF9BA90", Offset = "0xF9BA90", VA = "0xF9BA90")]
	public GameObject SpawnFruit(float delta, string fruitId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xF9C224", Offset = "0xF9C224", VA = "0xF9C224")]
	public GameObject SpawnPeach(float delta, string peachId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xF9C394", Offset = "0xF9C394", VA = "0xF9C394")]
	public GameObject SpawnBomb(float delta, string bombId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xF9C60C", Offset = "0xF9C60C", VA = "0xF9C60C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xF9C9C0", Offset = "0xF9C9C0", VA = "0xF9C9C0")]
	public SpawnPoint()
	{
	}
}
[Token(Token = "0x20000F4")]
[ExecuteInEditMode]
public class SubMeshRenderer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F5")]
	public struct SubMeshPass
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Material material;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Matrix4x4 matrix;
	}

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshFilter m_mesh;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SubMeshPass[] m_passes;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool m_recieveShadows;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool m_motionVectors;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode m_castShadows;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LightProbeUsage m_lightProbes;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbeUsage m_reflectionProbes;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform m_lightProbeAnchor;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xFA00B8", Offset = "0xFA00B8", VA = "0xFA00B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xFA0120", Offset = "0xFA0120", VA = "0xFA0120")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xFA0128", Offset = "0xFA0128", VA = "0xFA0128")]
	public void Draw(Camera cam)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xFA0660", Offset = "0xFA0660", VA = "0xFA0660")]
	public SubMeshRenderer()
	{
	}
}
[Token(Token = "0x20000F6")]
public class SurvivalGameMode : GameMode
{
	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27023C", Offset = "0x27023C")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SurvivalGameMode <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x1545CDC", Offset = "0x1545CDC", VA = "0x1545CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x1545D2C", Offset = "0x1545D2C", VA = "0x1545D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1545BEC", Offset = "0x1545BEC", VA = "0x1545BEC")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1545C0C", Offset = "0x1545C0C", VA = "0x1545C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1545C10", Offset = "0x1545C10", VA = "0x1545C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1545CE4", Offset = "0x1545CE4", VA = "0x1545CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_currentGlobalArc;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_globalArcSpeed;

	[Token(Token = "0x400069D")]
	private const int LifeCount = 3;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int m_lives;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Life[] m_livesHud;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public WaveManager m_waveManager;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string droppedFruitPFX;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject m_buttons;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_enemyPrefab;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private FlyingEnemyManager m_enemyManager;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<int> m_droppedFruitWaves;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xFA3194", Offset = "0xFA3194", VA = "0xFA3194")]
	public float GetGlobalArc()
	{
		return default(float);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xFA319C", Offset = "0xFA319C", VA = "0xFA319C", Slot = "6")]
	public override void BombExploded(Bomb bomb)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xFA3444", Offset = "0xFA3444", VA = "0xFA3444", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xFA386C", Offset = "0xFA386C", VA = "0xFA386C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xFA3910", Offset = "0xFA3910", VA = "0xFA3910")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274CB0", Offset = "0x274CB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xFA3994", Offset = "0xFA3994", VA = "0xFA3994")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xFA39A4", Offset = "0xFA39A4", VA = "0xFA39A4", Slot = "14")]
	public override void OnTouchDown(Vector2 pos)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xFA39A8", Offset = "0xFA39A8", VA = "0xFA39A8", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xFA3A40", Offset = "0xFA3A40", VA = "0xFA3A40", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xFA3B9C", Offset = "0xFA3B9C", VA = "0xFA3B9C", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xFA3C78", Offset = "0xFA3C78", VA = "0xFA3C78", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xFA3D20", Offset = "0xFA3D20", VA = "0xFA3D20", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xFA3DA8", Offset = "0xFA3DA8", VA = "0xFA3DA8", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xFA3FB4", Offset = "0xFA3FB4", VA = "0xFA3FB4", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xFA417C", Offset = "0xFA417C", VA = "0xFA417C", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xFA474C", Offset = "0xFA474C", VA = "0xFA474C")]
	public SurvivalGameMode()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TextMeshProUGUITranslator : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI m_textMeshObj;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string m_originalText;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_shouldTranslate;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB48090", Offset = "0xB48090", VA = "0xB48090")]
	public void Start()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB48160", Offset = "0xB48160", VA = "0xB48160")]
	public void ForceTranslate()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB4816C", Offset = "0xB4816C", VA = "0xB4816C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB483D4", Offset = "0xB483D4", VA = "0xB483D4")]
	public TextMeshProUGUITranslator()
	{
	}
}
[Token(Token = "0x20000F9")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool m_isRunning;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private UnityEvent OnTimerAboutToFinishedEvent;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private UnityEvent OnTimerFinishedEvent;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_hours;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_minutes;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_seconds;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_internalSeconds;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color warningColour;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color defaultColour;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string tickSFX;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public string tockSFX;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string outOfTimeSFX;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Color m_colour;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool tickTock;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	protected bool m_canPlayOutOfTime;

	[NonSerialized]
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool m_canTimerFinish;

	[Token(Token = "0x17000063")]
	public Color Colour
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xB486EC", Offset = "0xB486EC", VA = "0xB486EC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000064")]
	public int Hours
	{
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xB486FC", Offset = "0xB486FC", VA = "0xB486FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public int Minutes
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xB48798", Offset = "0xB48798", VA = "0xB48798")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public int Seconds
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xB487B0", Offset = "0xB487B0", VA = "0xB487B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000067")]
	public bool IsRunning
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xB487C8", Offset = "0xB487C8", VA = "0xB487C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB487D0", Offset = "0xB487D0", VA = "0xB487D0")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB48800", Offset = "0xB48800", VA = "0xB48800")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB48834", Offset = "0xB48834", VA = "0xB48834")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB48840", Offset = "0xB48840", VA = "0xB48840")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB48868", Offset = "0xB48868", VA = "0xB48868")]
	public void RegisterOnTimerFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB48898", Offset = "0xB48898", VA = "0xB48898")]
	public void DeregisterOnTimerFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB488C8", Offset = "0xB488C8", VA = "0xB488C8")]
	public void DeregisterAllOnTimerFinishedEvent()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xB488F0", Offset = "0xB488F0", VA = "0xB488F0")]
	public void RegisterOnTimerAboutToFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xB48920", Offset = "0xB48920", VA = "0xB48920")]
	public void DeregisterOnTimerAboutToFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xB48950", Offset = "0xB48950", VA = "0xB48950")]
	public void DeregisterAllOnTimerAboutToFinishedEvent()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xB48978", Offset = "0xB48978", VA = "0xB48978")]
	public void Set(int hours, int minutes, int seconds)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xB48D94", Offset = "0xB48D94", VA = "0xB48D94")]
	public void AddSeconds(int seconds)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xB48714", Offset = "0xB48714", VA = "0xB48714")]
	private void UpdateInternals()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xB48DC4", Offset = "0xB48DC4", VA = "0xB48DC4")]
	public void HackSetTimer(float timeSec)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xB48DEC", Offset = "0xB48DEC", VA = "0xB48DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xB489B8", Offset = "0xB489B8", VA = "0xB489B8")]
	private void UpdateTimer(bool force)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xB48DF4", Offset = "0xB48DF4", VA = "0xB48DF4")]
	public Timer()
	{
	}
}
[Token(Token = "0x20000FA")]
public class TowerSpawnFX : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject m_enableChildObject;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 effectOffset;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xB496C4", Offset = "0xB496C4", VA = "0xB496C4")]
	public void SpawnFX(bool enableChild = false)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xB49E18", Offset = "0xB49E18", VA = "0xB49E18")]
	public TowerSpawnFX()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FB")]
public struct HandVibration
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float length;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float freq;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float strength;
}
[Token(Token = "0x20000FC")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x20000FD")]
	public enum Type
	{
		[Token(Token = "0x40006C9")]
		Left,
		[Token(Token = "0x40006CA")]
		Right
	}

	[Token(Token = "0x20000FE")]
	public enum InputAction
	{
		[Token(Token = "0x40006CC")]
		STEP,
		[Token(Token = "0x40006CD")]
		OPTIONS,
		[Token(Token = "0x40006CE")]
		CONFIRM,
		[Token(Token = "0x40006CF")]
		BACK,
		[Token(Token = "0x40006D0")]
		GRAB
	}

	[Token(Token = "0x20000FF")]
	public delegate void InputCallback(Hand hand, InputAction action, Vector2 delta);

	[Token(Token = "0x2000100")]
	public interface FingerCurls
	{
		[Token(Token = "0x17000068")]
		float ThumbCurl
		{
			[Token(Token = "0x6000624")]
			get;
		}

		[Token(Token = "0x17000069")]
		float IndexCurl
		{
			[Token(Token = "0x6000625")]
			get;
		}

		[Token(Token = "0x1700006A")]
		float MiddleCurl
		{
			[Token(Token = "0x6000626")]
			get;
		}

		[Token(Token = "0x1700006B")]
		float RingCurl
		{
			[Token(Token = "0x6000627")]
			get;
		}

		[Token(Token = "0x1700006C")]
		float PinkyCurl
		{
			[Token(Token = "0x6000628")]
			get;
		}
	}

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool isInitialised;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type m_type;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 bladeLocalRotation;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 bladeLocalPosition;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<InputCallback> m_registeredCallbacks;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Blade blade;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x849030", Offset = "0x849030", VA = "0x849030")]
	public static void RegisterInputCallback(InputCallback callback)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x8490EC", Offset = "0x8490EC", VA = "0x8490EC")]
	public static void UnregisterInputCallback(InputCallback callback)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x84919C", Offset = "0x84919C", VA = "0x84919C")]
	public static void InvokeInputAction(Hand hand, InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x849364", Offset = "0x849364", VA = "0x849364", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x849560", Offset = "0x849560", VA = "0x849560", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x849564", Offset = "0x849564", VA = "0x849564", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x849574", Offset = "0x849574", VA = "0x849574", Slot = "7")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x849578", Offset = "0x849578", VA = "0x849578", Slot = "8")]
	public virtual void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x84957C", Offset = "0x84957C", VA = "0x84957C", Slot = "9")]
	public virtual bool IsControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x849584", Offset = "0x849584", VA = "0x849584", Slot = "10")]
	public virtual bool HasSkeletonSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x84958C", Offset = "0x84958C", VA = "0x84958C", Slot = "11")]
	public virtual FingerCurls GetFingerCurls()
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x849368", Offset = "0x849368", VA = "0x849368")]
	private void Initialise()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x849594", Offset = "0x849594", VA = "0x849594")]
	public Hand()
	{
	}
}
[Token(Token = "0x2000101")]
public class OVRHand : Hand
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2726C0", Offset = "0x2726C0")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 m_thumbstickInputPrevious;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_thumbstickInputCurrent;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_stepTimer;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_stepTime;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_stepDuration;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_stepAccel;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_stepMinSpeed;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_vibrateTimer;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x776BD4", Offset = "0x776BD4", VA = "0x776BD4")]
	public OVRHand()
	{
	}
}
[Token(Token = "0x2000102")]
public class OVRSet : VRSet
{
	[Token(Token = "0x600062A")]
	[Address(RVA = "0x776CB0", Offset = "0x776CB0", VA = "0x776CB0")]
	public OVRSet()
	{
	}
}
[Token(Token = "0x2000103")]
public class PSVRHand : Hand
{
	[Token(Token = "0x2000104")]
	public enum Buttons
	{
		[Token(Token = "0x40006E5")]
		None = 0,
		[Token(Token = "0x40006E6")]
		Trigger = 2,
		[Token(Token = "0x40006E7")]
		Move = 4,
		[Token(Token = "0x40006E8")]
		Start = 8,
		[Token(Token = "0x40006E9")]
		Triangle = 0x10,
		[Token(Token = "0x40006EA")]
		Circle = 0x20,
		[Token(Token = "0x40006EB")]
		Cross = 0x40,
		[Token(Token = "0x40006EC")]
		Square = 0x80
	}

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int moveIndex;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int activeButtons;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int previousActiveButtons;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private HandVibration currentSetting;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_vibrationTimer;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_vibrationFrames;

	[Token(Token = "0x40006E0")]
	private const int MINIMUM_FRAMES = 2;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_startHoldTime;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_triggeredHoldAction;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_triggerDownGyroPos;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x77ABC0", Offset = "0x77ABC0", VA = "0x77ABC0")]
	public PSVRHand()
	{
	}
}
[Token(Token = "0x2000105")]
public class PSVRSet : VRSet
{
	[Token(Token = "0x600062C")]
	[Address(RVA = "0x77AC58", Offset = "0x77AC58", VA = "0x77AC58")]
	public PSVRSet()
	{
	}
}
[Token(Token = "0x2000106")]
public class PicoHand : Hand
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2726D8", Offset = "0x2726D8")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public UnityEvent m_onPrimary;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_onSecondary;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputDevice m_inputDevice;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_foundInputDevice;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_supportsVibration;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private uint m_handID;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_prevPrimary;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_prevSecondary;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool m_prevTrigger;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool m_prevGrip;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_prevThumb;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool m_prevMenu;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 m_thumbstickInputPrevious;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_thumbstickInputCurrent;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_stepTimer;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_stepTime;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_stepDuration;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_stepAccel;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_stepMinSpeed;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_isProfiling;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x780D54", Offset = "0x780D54", VA = "0x780D54", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x780EA8", Offset = "0x780EA8", VA = "0x780EA8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x781D40", Offset = "0x781D40", VA = "0x781D40")]
	public void InputStep(Vector2 stepInput)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x781AB0", Offset = "0x781AB0", VA = "0x781AB0")]
	public void InputOptions()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x781B54", Offset = "0x781B54", VA = "0x781B54")]
	public void InputConfirm()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x781BF8", Offset = "0x781BF8", VA = "0x781BF8")]
	public void InputBack()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x781C9C", Offset = "0x781C9C", VA = "0x781C9C")]
	public void InputGrab()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x781E10", Offset = "0x781E10", VA = "0x781E10", Slot = "8")]
	public override void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x781E84", Offset = "0x781E84", VA = "0x781E84")]
	public PicoHand()
	{
	}
}
[Token(Token = "0x2000107")]
public class PicoSet : VRSet
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x2726F0", Offset = "0x2726F0")]
	public Camera m_mainCamera;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool m_enableSeeThroughByDefault;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] m_debugTransformHeights;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_seeThroughActive;

	[Token(Token = "0x14000007")]
	public static event Action<bool> OnSeeThroughChanged
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x782A20", Offset = "0x782A20", VA = "0x782A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274D6C", Offset = "0x274D6C")]
		add
		{
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x782AF0", Offset = "0x782AF0", VA = "0x782AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x274D7C", Offset = "0x274D7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x782BC0", Offset = "0x782BC0", VA = "0x782BC0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x780978", Offset = "0x780978", VA = "0x780978")]
	public void ToggleSeeThrough()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x782E3C", Offset = "0x782E3C", VA = "0x782E3C")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x782CCC", Offset = "0x782CCC", VA = "0x782CCC")]
	public void SetSeeThroughActive(bool isActive)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x782E8C", Offset = "0x782E8C", VA = "0x782E8C")]
	public static void SetProfilingActive(bool isActive)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x782FF4", Offset = "0x782FF4", VA = "0x782FF4")]
	public PicoSet()
	{
	}
}
[Token(Token = "0x2000108")]
public class SteamHand : Hand
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 m_dist;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272734", Offset = "0x272734")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_controllerPrevious;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_controllerCurrent;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_stepTimer;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_stepTime;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_stepDuration;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_stepAccel;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_stepMinSpeed;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xF9FFD4", Offset = "0xF9FFD4", VA = "0xF9FFD4")]
	public SteamHand()
	{
	}
}
[Token(Token = "0x2000109")]
public class SteamSet : VRSet
{
	[Token(Token = "0x600063F")]
	[Address(RVA = "0xFA00B0", Offset = "0xFA00B0", VA = "0xFA00B0")]
	public SteamSet()
	{
	}
}
[Token(Token = "0x200010A")]
public class VRSet : MonoBehaviour
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject head;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fader fader;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HandVibration sliceVibration;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandVibration bounceVibration;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public HandVibration sliceBetweenBladesVibration;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandVibration environmentBladeVibration;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public HandVibration sliceBombVibration;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xB50740", Offset = "0xB50740", VA = "0xB50740", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xB50744", Offset = "0xB50744", VA = "0xB50744", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB50748", Offset = "0xB50748", VA = "0xB50748", Slot = "6")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB5074C", Offset = "0xB5074C", VA = "0xB5074C")]
	public VRSet()
	{
	}
}
[Token(Token = "0x200010B")]
public class ViveWaveHand : Hand
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x27274C", Offset = "0x27274C")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 m_controllerPrevious;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 m_controllerCurrent;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_stepTimer;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_stepTime;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_stepDuration;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_stepAccel;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_stepMinSpeed;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WVR_DeviceType m_controllerType;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private IntPtr m_nativeRenderModelNameString;

	[Token(Token = "0x4000721")]
	private const int m_nativeRenderModelNameResultBufferLen = 64;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IntPtr m_nativeRenderModelNameResultBuffer;

	[Token(Token = "0x4000723")]
	private const string m_viveFocusProControllerModelName = "WVR_CONTROLLER_ASPEN_MI6";

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB5410C", Offset = "0xB5410C", VA = "0xB5410C")]
	public ViveWaveHand()
	{
	}
}
[Token(Token = "0x200010C")]
public class WaterSplash : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string m_prefabID;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_minSpeedForSplash;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float upthrust;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_waterForce;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB5DEF4", Offset = "0xB5DEF4", VA = "0xB5DEF4")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xB5E068", Offset = "0xB5E068", VA = "0xB5E068")]
	private void CreateSplash(Vector3 pos, float speed)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xB5E270", Offset = "0xB5E270", VA = "0xB5E270")]
	public WaterSplash()
	{
	}
}
[Token(Token = "0x200010D")]
[ExecuteInEditMode]
public class WaveManager : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	private class SpawnInfo
	{
		[Token(Token = "0x200010F")]
		public enum Placement
		{
			[Token(Token = "0x4000748")]
			Default,
			[Token(Token = "0x4000749")]
			Top,
			[Token(Token = "0x400074A")]
			Bottom,
			[Token(Token = "0x400074B")]
			Left,
			[Token(Token = "0x400074C")]
			Right
		}

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<string> fruitTypes;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int min;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int max;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minInc;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxInc;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayInc;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int cannonIdx;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Placement placement;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x154A978", Offset = "0x154A978", VA = "0x154A978")]
		public SpawnInfo()
		{
		}
	}

	[Token(Token = "0x2000110")]
	private class WaveInfo
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int waveNo;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int waveIdx;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string debugName;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public List<SpawnInfo> spawnInfoList;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waveDt;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waveDtInc;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayBeforeWave;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float delayAfterWave;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waveChance;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public List<string> fruitToChooseFrom;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool waitForEntities;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool disableThurstRandom;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x154AA1C", Offset = "0x154AA1C", VA = "0x154AA1C")]
		public WaveInfo()
		{
		}
	}

	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27025C", Offset = "0x27025C")]
	private sealed class <FruitWavesCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startDelay;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WaveManager <>4__this;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaveInfo <wave>5__2;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<Fruit> <waveFruit>5__3;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Bomb> <waveBombs>5__4;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <waitStartTime>5__5;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SpawnInfo>.Enumerator <>7__wrap5;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpawnInfo <spawnInfo>5__7;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <fruitCount>5__8;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <isSingleFruitTypeWave>5__9;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private string <fruitType>5__10;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__11;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x154A920", Offset = "0x154A920", VA = "0x154A920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x154A970", Offset = "0x154A970", VA = "0x154A970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1548E7C", Offset = "0x1548E7C", VA = "0x1548E7C")]
		[DebuggerHidden]
		public <FruitWavesCoroutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1548E9C", Offset = "0x1548E9C", VA = "0x1548E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1548F14", Offset = "0x1548F14", VA = "0x1548F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1548EB4", Offset = "0x1548EB4", VA = "0x1548EB4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x154A928", Offset = "0x154A928", VA = "0x154A928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset m_waveListFile;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SpawnPoint m_defaultSpawner;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SpawnPoint m_leftSpawner;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnPoint m_rightSpawner;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpawnPoint m_topSpawner;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnPoint m_bottomSpawner;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_globalDt;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_globalDtStart;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_globalDtInc;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_globalDtMax;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_desiredSpeed;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_speed;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_freezeModifier;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_speedOverrideActive;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_speedOverride;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WaveInfo> m_waveInfoList;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_clearCurrentWave;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool m_isUsingForcedWaveNo;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_forcedWaveNo;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<int> m_waveNoList;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_indexInWaveNoList;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Coroutine m_fruitwavesCoroutine;

	[Token(Token = "0x1700006D")]
	public bool IsUsingForcedWaveNo
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xB5E300", Offset = "0xB5E300", VA = "0xB5E300")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public int CurrentForcedWaveNo
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB5E308", Offset = "0xB5E308", VA = "0xB5E308")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xB5E310", Offset = "0xB5E310", VA = "0xB5E310")]
	public void SetForcedWaveNo(int waveNo)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xB5E320", Offset = "0xB5E320", VA = "0xB5E320")]
	public void StopUsingForcedWaveNo()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xB5E330", Offset = "0xB5E330", VA = "0xB5E330")]
	private string ReadXmlStringAttribute(XmlReader reader, string attribute, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xB5E3D0", Offset = "0xB5E3D0", VA = "0xB5E3D0")]
	private int ReadXmlIntAttribute(XmlReader reader, string attribute, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xB5E438", Offset = "0xB5E438", VA = "0xB5E438")]
	private float ReadXmlFloatAttribute(XmlReader reader, string attribute, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xB5E538", Offset = "0xB5E538", VA = "0xB5E538")]
	private bool ReadXmlBoolAttribute(XmlReader reader, string attribute, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xB5E60C", Offset = "0xB5E60C", VA = "0xB5E60C")]
	private List<string> SplitFruitList(string fruitListString)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xB5E7B0", Offset = "0xB5E7B0", VA = "0xB5E7B0")]
	public void AddSpeed(int val)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xB5E7F0", Offset = "0xB5E7F0", VA = "0xB5E7F0")]
	public void ResetSpeed()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xB5E7FC", Offset = "0xB5E7FC", VA = "0xB5E7FC")]
	public void ResetFreezeSpeed()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xB5E808", Offset = "0xB5E808", VA = "0xB5E808")]
	public void StartFreezeSpeed()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xB5E814", Offset = "0xB5E814", VA = "0xB5E814")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xB5F690", Offset = "0xB5F690", VA = "0xB5F690")]
	private WaveInfo PickWave(int waveNo)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xB5FAAC", Offset = "0xB5FAAC", VA = "0xB5FAAC")]
	public void StartFruitWaves(float startDelay = 0f)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xB5FB94", Offset = "0xB5FB94", VA = "0xB5FB94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xB5FC78", Offset = "0xB5FC78", VA = "0xB5FC78")]
	public void SetSpeedOverride(bool overrideActive, float speedOverride = 1f)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xB5FC84", Offset = "0xB5FC84", VA = "0xB5FC84")]
	public float GetWavedt()
	{
		return default(float);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xB5FAE0", Offset = "0xB5FAE0", VA = "0xB5FAE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274D8C", Offset = "0x274D8C")]
	private IEnumerator FruitWavesCoroutine(float startDelay)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xB5FCBC", Offset = "0xB5FCBC", VA = "0xB5FCBC")]
	public void StopFruitWaves()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xB5FCC8", Offset = "0xB5FCC8", VA = "0xB5FCC8")]
	public void ClearAllActiveFruitAndBombs()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xB5FF24", Offset = "0xB5FF24", VA = "0xB5FF24")]
	public WaveManager()
	{
	}
}
[Token(Token = "0x2000112")]
public class ZenGameMode : GameMode
{
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27026C", Offset = "0x27026C")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZenGameMode <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x154B220", Offset = "0x154B220", VA = "0x154B220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x154B270", Offset = "0x154B270", VA = "0x154B270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x154AFB8", Offset = "0x154AFB8", VA = "0x154AFB8")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x154AFD8", Offset = "0x154AFD8", VA = "0x154AFD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x154AFDC", Offset = "0x154AFDC", VA = "0x154AFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x154B228", Offset = "0x154B228", VA = "0x154B228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public uint ZenModeGameDurationInSeconds;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Score m_scoreDisplay;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Score m_bestScoreDisplay;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Timer m_zenModeTimer;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public WaveManager m_waveManager;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_buttons;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x533FB0", Offset = "0x533FB0", VA = "0x533FB0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x5342F0", Offset = "0x5342F0", VA = "0x5342F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x534394", Offset = "0x534394", VA = "0x534394")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274E48", Offset = "0x274E48")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x534418", Offset = "0x534418", VA = "0x534418")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x534428", Offset = "0x534428", VA = "0x534428", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x534494", Offset = "0x534494", VA = "0x534494")]
	private void OnZenModeTimerFinished()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x5344A4", Offset = "0x5344A4", VA = "0x5344A4", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x534508", Offset = "0x534508", VA = "0x534508")]
	private void OnZenModeTimerAboutToFinished()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x534558", Offset = "0x534558", VA = "0x534558", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x5346B4", Offset = "0x5346B4", VA = "0x5346B4", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x53475C", Offset = "0x53475C", VA = "0x53475C", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x534BFC", Offset = "0x534BFC", VA = "0x534BFC", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x534C04", Offset = "0x534C04", VA = "0x534C04", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x534C0C", Offset = "0x534C0C", VA = "0x534C0C", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x534C14", Offset = "0x534C14", VA = "0x534C14")]
	public ZenGameMode()
	{
	}
}
[Token(Token = "0x2000114")]
public class ZenModeTimerDisplayController : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Timer ZenModeTimer;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public TextMeshProUGUI m_textMeshProUGUI;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x534C8C", Offset = "0x534C8C", VA = "0x534C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x534D2C", Offset = "0x534D2C", VA = "0x534D2C")]
	private static string GenerateTimerString(Timer timer)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x534E84", Offset = "0x534E84", VA = "0x534E84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x5350B8", Offset = "0x5350B8", VA = "0x5350B8")]
	public ZenModeTimerDisplayController()
	{
	}
}
[Token(Token = "0x2000115")]
public class TargetConstraintAttribute : PropertyAttribute
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Type targetType;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xB47618", Offset = "0xB47618", VA = "0xB47618")]
	public TargetConstraintAttribute(Type targetType)
	{
	}
}
[Token(Token = "0x2000116")]
public class InvokableCallback<TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27027C", Offset = "0x27027C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<TReturn> <>9__3_0;

		[Token(Token = "0x6000686")]
		public <>c()
		{
		}

		[Token(Token = "0x6000687")]
		internal TReturn <.ctor>b__3_0()
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<TReturn> func;

	[Token(Token = "0x6000682")]
	public TReturn Invoke()
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000683")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000684")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000118")]
public class InvokableCallback<T0, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27028C", Offset = "0x27028C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, TReturn> <>9__3_0;

		[Token(Token = "0x600068C")]
		public <>c()
		{
		}

		[Token(Token = "0x600068D")]
		internal TReturn <.ctor>b__3_0(T0 x)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, TReturn> func;

	[Token(Token = "0x6000688")]
	public TReturn Invoke(T0 arg0)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000689")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x600068A")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x200011A")]
public class InvokableCallback<T0, T1, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27029C", Offset = "0x27029C")]
	private sealed class <>c
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, TReturn> <>9__3_0;

		[Token(Token = "0x6000692")]
		public <>c()
		{
		}

		[Token(Token = "0x6000693")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, TReturn> func;

	[Token(Token = "0x600068E")]
	public TReturn Invoke(T0 arg0, T1 arg1)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x600068F")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000690")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x200011C")]
public class InvokableCallback<T0, T1, T2, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702AC", Offset = "0x2702AC")]
	private sealed class <>c
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, T2, TReturn> <>9__3_0;

		[Token(Token = "0x6000698")]
		public <>c()
		{
		}

		[Token(Token = "0x6000699")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y, T2 z)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, T2, TReturn> func;

	[Token(Token = "0x6000694")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000695")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x6000696")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x200011E")]
public class InvokableCallback<T0, T1, T2, T3, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200011F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702BC", Offset = "0x2702BC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, T2, T3, TReturn> <>9__3_0;

		[Token(Token = "0x600069E")]
		public <>c()
		{
		}

		[Token(Token = "0x600069F")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y, T2 z, T3 w)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, T2, T3, TReturn> func;

	[Token(Token = "0x600069A")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x600069B")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x600069C")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000120")]
public abstract class InvokableCallbackBase<TReturn>
{
	[Token(Token = "0x60006A0")]
	public abstract TReturn Invoke(params object[] args);

	[Token(Token = "0x60006A1")]
	protected InvokableCallbackBase()
	{
	}
}
[Token(Token = "0x2000121")]
public class InvokableEvent : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702CC", Offset = "0x2702CC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action <>9__3_0;

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x544B84", Offset = "0x544B84", VA = "0x544B84")]
		public <>c()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x544B8C", Offset = "0x544B8C", VA = "0x544B8C")]
		internal void <.ctor>b__3_0()
		{
		}
	}

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Action action;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x850114", Offset = "0x850114", VA = "0x850114")]
	public void Invoke()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x85013C", Offset = "0x85013C", VA = "0x85013C", Slot = "4")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x850164", Offset = "0x850164", VA = "0x850164")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000123")]
public class InvokableEvent<T0> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702DC", Offset = "0x2702DC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0> <>9__3_0;

		[Token(Token = "0x60006AC")]
		public <>c()
		{
		}

		[Token(Token = "0x60006AD")]
		internal void <.ctor>b__3_0(T0 x)
		{
		}
	}

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0> action;

	[Token(Token = "0x60006A8")]
	public void Invoke(T0 arg0)
	{
	}

	[Token(Token = "0x60006A9")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60006AA")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000125")]
public class InvokableEvent<T0, T1> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702EC", Offset = "0x2702EC")]
	private sealed class <>c
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1> <>9__3_0;

		[Token(Token = "0x60006B2")]
		public <>c()
		{
		}

		[Token(Token = "0x60006B3")]
		internal void <.ctor>b__3_0(T0 x, T1 y)
		{
		}
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1> action;

	[Token(Token = "0x60006AE")]
	public void Invoke(T0 arg0, T1 arg1)
	{
	}

	[Token(Token = "0x60006AF")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60006B0")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000127")]
public class InvokableEvent<T0, T1, T2> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2702FC", Offset = "0x2702FC")]
	private sealed class <>c
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1, T2> <>9__3_0;

		[Token(Token = "0x60006B8")]
		public <>c()
		{
		}

		[Token(Token = "0x60006B9")]
		internal void <.ctor>b__3_0(T0 x, T1 y, T2 z)
		{
		}
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1, T2> action;

	[Token(Token = "0x60006B4")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
	}

	[Token(Token = "0x60006B5")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60006B6")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000129")]
public class InvokableEvent<T0, T1, T2, T3> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27030C", Offset = "0x27030C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1, T2, T3> <>9__3_0;

		[Token(Token = "0x60006BE")]
		public <>c()
		{
		}

		[Token(Token = "0x60006BF")]
		internal void <.ctor>b__3_0(T0 x, T1 y, T2 z, T3 w)
		{
		}
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1, T2, T3> action;

	[Token(Token = "0x60006BA")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
	}

	[Token(Token = "0x60006BB")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60006BC")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x200012B")]
public abstract class InvokableEventBase
{
	[Token(Token = "0x60006C0")]
	public abstract void Invoke(params object[] args);

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x850384", Offset = "0x850384", VA = "0x850384")]
	protected InvokableEventBase()
	{
	}
}
[Token(Token = "0x200012C")]
public abstract class SerializableCallback<TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60006C2")]
	public TReturn Invoke()
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60006C3")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006C4")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200012D")]
public abstract class SerializableCallback<T0, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60006C5")]
	public TReturn Invoke(T0 arg0)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60006C6")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006C7")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200012E")]
public abstract class SerializableCallback<T0, T1, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60006C8")]
	public TReturn Invoke(T0 arg0, T1 arg1)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60006C9")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006CA")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200012F")]
public abstract class SerializableCallback<T0, T1, T2, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60006CB")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60006CC")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006CD")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x2000130")]
public abstract class SerializableCallback<T0, T1, T2, T3, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60006CE")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60006CF")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006D0")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x2000131")]
public abstract class SerializableCallbackBase<TReturn> : SerializableCallbackBase
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InvokableCallbackBase<TReturn> func;

	[Token(Token = "0x60006D1")]
	public override void ClearCache()
	{
	}

	[Token(Token = "0x60006D2")]
	protected InvokableCallbackBase<TReturn> GetPersistentMethod()
	{
		return null;
	}

	[Token(Token = "0x60006D3")]
	protected SerializableCallbackBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000132")]
public abstract class SerializableCallbackBase : ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27031C", Offset = "0x27031C")]
	private sealed class <>c
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<Arg, object> <>9__7_0;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Arg, Type> <>9__10_0;

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x54F65C", Offset = "0x54F65C", VA = "0x54F65C")]
		public <>c()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x54F664", Offset = "0x54F664", VA = "0x54F664")]
		internal object <get_Args>b__7_0(Arg x)
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x54F6A0", Offset = "0x54F6A0", VA = "0x54F6A0")]
		internal Type <get_ArgTypes>b__10_0(Arg x)
		{
			return null;
		}
	}

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public object[] args;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Type[] argTypes;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	protected UnityEngine.Object _target;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	protected string _methodName;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Arg[] _args;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool _dynamic;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _typeName;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool dirty;

	[Token(Token = "0x17000073")]
	public UnityEngine.Object target
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x717538", Offset = "0x717538", VA = "0x717538")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x717540", Offset = "0x717540", VA = "0x717540")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public string methodName
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x71756C", Offset = "0x71756C", VA = "0x71756C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x717574", Offset = "0x717574", VA = "0x717574")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public object[] Args
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x7175A0", Offset = "0x7175A0", VA = "0x7175A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	public Type[] ArgTypes
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x71774C", Offset = "0x71774C", VA = "0x71774C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000077")]
	public bool dynamic
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x7178F8", Offset = "0x7178F8", VA = "0x7178F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x717900", Offset = "0x717900", VA = "0x717900")]
		set
		{
		}
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x717914", Offset = "0x717914", VA = "0x717914", Slot = "6")]
	public virtual void ClearCache()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x717944", Offset = "0x717944", VA = "0x717944")]
	public void SetMethod(UnityEngine.Object target, string methodName, bool dynamic, params Arg[] args)
	{
	}

	[Token(Token = "0x60006DE")]
	protected abstract void Cache();

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x71799C", Offset = "0x71799C", VA = "0x71799C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x7179A0", Offset = "0x7179A0", VA = "0x7179A0", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x7179A4", Offset = "0x7179A4", VA = "0x7179A4")]
	protected SerializableCallbackBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000134")]
public struct Arg
{
	[Token(Token = "0x2000135")]
	public enum ArgType
	{
		[Token(Token = "0x40007A6")]
		Unsupported,
		[Token(Token = "0x40007A7")]
		Bool,
		[Token(Token = "0x40007A8")]
		Int,
		[Token(Token = "0x40007A9")]
		Float,
		[Token(Token = "0x40007AA")]
		String,
		[Token(Token = "0x40007AB")]
		Object
	}

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool boolValue;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int intValue;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float floatValue;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string stringValue;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEngine.Object objectValue;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ArgType argType;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x982524", Offset = "0x982524", VA = "0x982524")]
	public object GetValue()
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x98252C", Offset = "0x98252C", VA = "0x98252C")]
	public object GetValue(ArgType type)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x982634", Offset = "0x982634", VA = "0x982634")]
	public static Type RealType(ArgType type)
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x9827C0", Offset = "0x9827C0", VA = "0x9827C0")]
	public static ArgType FromRealType(Type type)
	{
		return default(ArgType);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x982A20", Offset = "0x982A20", VA = "0x982A20")]
	public static bool IsSupported(Type type)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000136")]
public class SerializableEvent : SerializableEventBase
{
	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x7179AC", Offset = "0x7179AC", VA = "0x7179AC")]
	public void Invoke()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x717ADC", Offset = "0x717ADC", VA = "0x717ADC", Slot = "7")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x718050", Offset = "0x718050", VA = "0x718050")]
	public SerializableEvent()
	{
	}
}
[Token(Token = "0x2000137")]
public abstract class SerializableEvent<T0> : SerializableEventBase
{
	[Token(Token = "0x60006EE")]
	public void Invoke(T0 arg0)
	{
	}

	[Token(Token = "0x60006EF")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006F0")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000138")]
public abstract class SerializableEvent<T0, T1> : SerializableEventBase
{
	[Token(Token = "0x60006F1")]
	public void Invoke(T0 arg0, T1 arg1)
	{
	}

	[Token(Token = "0x60006F2")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006F3")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000139")]
public abstract class SerializableEvent<T0, T1, T2> : SerializableEventBase
{
	[Token(Token = "0x60006F4")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
	}

	[Token(Token = "0x60006F5")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006F6")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x200013A")]
public abstract class SerializableEvent<T0, T1, T2, T3> : SerializableEventBase
{
	[Token(Token = "0x60006F7")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
	}

	[Token(Token = "0x60006F8")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60006F9")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x200013B")]
public abstract class SerializableEventBase : SerializableCallbackBase
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InvokableEventBase invokable;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x718060", Offset = "0x718060", VA = "0x718060", Slot = "6")]
	public override void ClearCache()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x717C2C", Offset = "0x717C2C", VA = "0x717C2C")]
	protected InvokableEventBase GetPersistentMethod()
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x718058", Offset = "0x718058", VA = "0x718058")]
	protected SerializableEventBase()
	{
	}
}
[Token(Token = "0x200013C")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	private const int ITERATIONS = 100000;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float f;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string s;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Func<float, bool> RegularDelegate;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Func<float, bool> DynamicDelegate;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Condition condition;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableEvent ev;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB47644", Offset = "0xB47644", VA = "0xB47644")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB4780C", Offset = "0xB4780C", VA = "0xB4780C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB47DE0", Offset = "0xB47DE0", VA = "0xB47DE0")]
	public bool TestMethod(float f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB47DFC", Offset = "0xB47DFC", VA = "0xB47DFC")]
	public bool TestMethod(string a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB47E08", Offset = "0xB47E08", VA = "0xB47E08")]
	public bool TestMethod2(float f, string a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB47E2C", Offset = "0xB47E2C", VA = "0xB47E2C")]
	public void TestMethod2(string a)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB47E34", Offset = "0xB47E34", VA = "0xB47E34")]
	public Test()
	{
	}
}
[Serializable]
[Token(Token = "0x200013D")]
public class Condition : SerializableCallback<float, bool>
{
	[Token(Token = "0x6000704")]
	[Address(RVA = "0x88C874", Offset = "0x88C874", VA = "0x88C874")]
	public Condition()
	{
	}
}
[Token(Token = "0x200013E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x27032C", Offset = "0x27032C")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000705")]
	[Address(RVA = "0x4E9610", Offset = "0x4E9610", VA = "0x4E9610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x4E9614", Offset = "0x4E9614", VA = "0x4E9614")]
	private void Set()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x4E96BC", Offset = "0x4E96BC", VA = "0x4E96BC")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x270398", Offset = "0x270398")]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x2000140")]
	public enum Method
	{
		[Token(Token = "0x40007B8")]
		Simple,
		[Token(Token = "0x40007B9")]
		AngularDeviation
	}

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Method method;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool generateOnAwake;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool generateNow;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xF99BC8", Offset = "0xF99BC8", VA = "0xF99BC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xF99E48", Offset = "0xF99E48", VA = "0xF99E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xF99BE0", Offset = "0xF99BE0", VA = "0xF99BE0")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xF99E58", Offset = "0xF99E58", VA = "0xF99E58")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xF9A964", Offset = "0xF9A964", VA = "0xF9A964")]
	public SoftNormalsToVertexColor()
	{
	}
}
[Token(Token = "0x2000141")]
public class ShaderVariantsListGenerator : MonoBehaviour
{
	[Token(Token = "0x2000142")]
	private struct ShaderVariantDetails
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_shaderName;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public List<string> m_passNames;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_keywords;
	}

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<int, ShaderVariantDetails> m_variants;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShaderVariantsListGenerator m_instance;

	[Token(Token = "0x17000078")]
	public static ShaderVariantsListGenerator Instance
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x7184FC", Offset = "0x7184FC", VA = "0x7184FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x712B6C", Offset = "0x712B6C", VA = "0x712B6C")]
	public void LogAllVariants()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x718570", Offset = "0x718570", VA = "0x718570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x7185F0", Offset = "0x7185F0", VA = "0x7185F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x718958", Offset = "0x718958", VA = "0x718958")]
	public ShaderVariantsListGenerator()
	{
	}
}
[Token(Token = "0x2000143")]
[ExecuteInEditMode]
public class SliceQuantizerDebugger : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Plane debugSlicePlaneView;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2727E4", Offset = "0x2727E4")]
	public float debugYaw;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272804", Offset = "0x272804")]
	public float debugPitch;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x272824", Offset = "0x272824")]
	public float debugDist;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int quantizedValue;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 debugSlicePlanePos;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 debugSlicePlaneYawRollOldVal;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MeshRenderer m_SlicePlaneDisplay;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer m_SlicePlaneDisplay2;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private MeshSlicer.FruitSplitCache m_dummySplitCache;

	[Token(Token = "0x17000079")]
	public Vector3 debugSlicePlaneYawRollDist
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0xF989B8", Offset = "0xF989B8", VA = "0xF989B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000714")]
		[Address(RVA = "0xF989D0", Offset = "0xF989D0", VA = "0xF989D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF989DC", Offset = "0xF989DC", VA = "0xF989DC")]
	private static void SetPlaneDisplay(Component displayPlane, Plane plane, Vector3 position)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xF98D34", Offset = "0xF98D34", VA = "0xF98D34")]
	private static void SetPlaneDisplay(Component displayPlane, Plane plane, GameObject CenterOn)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xF98DBC", Offset = "0xF98DBC", VA = "0xF98DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xF98FC4", Offset = "0xF98FC4", VA = "0xF98FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xF98FC8", Offset = "0xF98FC8", VA = "0xF98FC8")]
	public SliceQuantizerDebugger()
	{
	}
}
[Token(Token = "0x2000144")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x270414", Offset = "0x270414")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x270414", Offset = "0x270414")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x270414", Offset = "0x270414")]
public class SliceableProp : SliceObject
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string PropGutsReferenceName;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private GameObject PropGutsReferenceObject;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_isDebris;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public GameObject m_hangingPoint;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xF990D8", Offset = "0xF990D8", VA = "0xF990D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xF990DC", Offset = "0xF990DC", VA = "0xF990DC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xF99110", Offset = "0xF99110", VA = "0xF99110", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xF99118", Offset = "0xF99118", VA = "0xF99118", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xF99848", Offset = "0xF99848", VA = "0xF99848")]
	public SliceableProp()
	{
	}
}
[Token(Token = "0x2000145")]
public class CheckDynamicCollision : MonoBehaviour
{
	[Token(Token = "0x600071F")]
	[Address(RVA = "0x886128", Offset = "0x886128", VA = "0x886128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x88658C", Offset = "0x88658C", VA = "0x88658C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8863EC", Offset = "0x8863EC", VA = "0x8863EC")]
	private void EnableObjectColliders(GameObject chunk, bool bEnable)
	{
	}

	[Token(Token = "0x6000722")]
	private static void SearchForAllComponentsInHierarchy<T>(GameObject current, ref List<T> listOut) where T : Component
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8869D8", Offset = "0x8869D8", VA = "0x8869D8")]
	public CheckDynamicCollision()
	{
	}
}
[Token(Token = "0x2000146")]
public class ExplosionSource : MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float InfluenceRadius;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Force;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool CheckStructureIntegrity;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool MoveManually;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 PosStart;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 PosEnd;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MoveDuration;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private FracturedObject[] m_aFracturedObjects;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_fStartTime;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x4EA310", Offset = "0x4EA310", VA = "0x4EA310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x4EA434", Offset = "0x4EA434", VA = "0x4EA434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x4EAC4C", Offset = "0x4EAC4C", VA = "0x4EAC4C")]
	public ExplosionSource()
	{
	}
}
[Serializable]
[Token(Token = "0x2000147")]
[ExecuteInEditMode]
public class FracturedChunk : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000148")]
	public class AdjacencyInfo
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FracturedChunk chunk;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fArea;

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x53AF50", Offset = "0x53AF50", VA = "0x53AF50")]
		public AdjacencyInfo(FracturedChunk chunk, float fArea)
		{
		}
	}

	[Token(Token = "0x2000149")]
	public class CollisionInfo
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FracturedChunk chunk;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 collisionPoint;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool bIsMain;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool bCancelCollisionEvent;

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x53AF84", Offset = "0x53AF84", VA = "0x53AF84")]
		public CollisionInfo(FracturedChunk chunk, Vector3 collisionPoint, bool bIsMain)
		{
		}
	}

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FracturedObject FracturedObjectSource;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int SplitSubMeshIndex;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool DontDeleteAfterBroken;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool IsSupportChunk;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool IsNonSupportedChunk;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool IsDetachedChunk;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RelativeVolume;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Volume;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HasConcaveCollider;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PreviewDecompositionValue;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color RandomMaterialColor;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Visited;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<AdjacencyInfo> ListAdjacentChunks;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 m_v3InitialLocalPosition;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Quaternion m_qInitialLocalRotation;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 m_v3InitialLocalScale;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_bInitialLocalRotScaleInitialized;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<AdjacencyInfo> ListAdjacentChunksCopy;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fInvisibleTimer;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bNonSupportedChunkStored;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x4F268C", Offset = "0x4F268C", VA = "0x4F268C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x4F2824", Offset = "0x4F2824", VA = "0x4F2824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x4F29A4", Offset = "0x4F29A4", VA = "0x4F29A4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x4F34AC", Offset = "0x4F34AC", VA = "0x4F34AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x4F2AFC", Offset = "0x4F2AFC", VA = "0x4F2AFC")]
	private void HandleCollision(Collider other, Vector3 v3CollisionPos, float relativeSpeed)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x4F36C0", Offset = "0x4F36C0", VA = "0x4F36C0")]
	public bool IsDestructibleChunk()
	{
		return default(bool);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x4F4234", Offset = "0x4F4234", VA = "0x4F4234")]
	public void ResetChunk(FracturedObject fracturedObjectSource)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x4F44A8", Offset = "0x4F44A8", VA = "0x4F44A8")]
	public void Impact(Vector3 v3Position, float fExplosionForce, float fRadius, bool bAlsoImpactFreeChunks)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x4F4F88", Offset = "0x4F4F88", VA = "0x4F4F88")]
	public void OnCreateFromFracturedObject(FracturedObject fracturedComponent, int nSplitSubMeshIndex)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x4F50CC", Offset = "0x4F50CC", VA = "0x4F50CC")]
	public void UpdatePreviewDecompositionPosition()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x4F5220", Offset = "0x4F5220", VA = "0x4F5220")]
	public void ConnectTo(FracturedChunk chunk, float fArea)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x4F5618", Offset = "0x4F5618", VA = "0x4F5618")]
	public void DisconnectFrom(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x4F5394", Offset = "0x4F5394", VA = "0x4F5394")]
	public bool IsConnectedTo(FracturedChunk chunk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x4F39A0", Offset = "0x4F39A0", VA = "0x4F39A0")]
	public void DetachFromObject(bool bCheckStructureIntegrity = true)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x4F5898", Offset = "0x4F5898", VA = "0x4F5898")]
	private void RemoveConnectionInfo()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x4F389C", Offset = "0x4F389C", VA = "0x4F389C")]
	public List<FracturedChunk> ComputeRandomConnectionBreaks()
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x4F6158", Offset = "0x4F6158", VA = "0x4F6158")]
	private static void ComputeRandomConnectionBreaksRecursive(FracturedChunk chunk, List<FracturedChunk> listBreaksOut, int nLevel)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x4F64AC", Offset = "0x4F64AC", VA = "0x4F64AC")]
	public static FracturedChunk ChunkRaycast(Vector3 v3Pos, Vector3 v3Forward, out RaycastHit hitInfo)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x4F66AC", Offset = "0x4F66AC", VA = "0x4F66AC")]
	public FracturedChunk()
	{
	}
}
[Token(Token = "0x200014A")]
[ExecuteInEditMode]
public class FracturedObject : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	public enum EFracturePattern
	{
		[Token(Token = "0x400084F")]
		BSP,
		[Token(Token = "0x4000850")]
		Voronoi
	}

	[Serializable]
	[Token(Token = "0x200014C")]
	public class PrefabInfo
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float MinLifeTime;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxLifeTime;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject GameObject;

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x53AFD8", Offset = "0x53AFD8", VA = "0x53AFD8")]
		public PrefabInfo()
		{
		}
	}

	[Token(Token = "0x200014D")]
	public enum ECCAlgorithm
	{
		[Token(Token = "0x4000855")]
		Fast,
		[Token(Token = "0x4000856")]
		Normal,
		[Token(Token = "0x4000857")]
		Legacy
	}

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool GUIExpandMain;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject SourceObject;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool GenerateIslands;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool GenerateChunkConnectionInfo;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool StartStatic;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ChunkConnectionMinArea;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ChunkConnectionStrength;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ChunkHorizontalRadiusSupportStrength;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SupportChunksAreIndestructible;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ChunkIslandConnectionMaxDistance;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TotalMass;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhysicMaterial ChunkPhysicMaterial;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinColliderVolumeForBox;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CapPrecisionFix;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool InvertCapNormals;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool GUIExpandSplits;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EFracturePattern FracturePattern;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool VoronoiVolumeOptimization;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool VoronoiProximityOptimization;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool VoronoiMultithreading;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VoronoiCellsXCount;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoronoiCellsYCount;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int VoronoiCellsZCount;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VoronoiCellsXSizeVariation;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float VoronoiCellsYSizeVariation;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VoronoiCellsZSizeVariation;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int GenerateNumChunks;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool SplitsWorldSpace;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool SplitRegularly;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float SplitXProbability;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float SplitYProbability;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float SplitZProbability;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float SplitSizeVariation;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float SplitXVariation;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float SplitYVariation;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float SplitZVariation;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Material SplitMaterial;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SplitMappingTileU;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float SplitMappingTileV;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool GUIExpandEvents;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float EventDetachMinMass;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float EventDetachMinVelocity;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float EventDetachExitForce;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float EventDetachUpwardsModifier;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioClip EventDetachSound;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PrefabInfo[] EventDetachPrefabsArray;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public string EventDetachCollisionCallMethod;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject EventDetachCollisionCallGameObject;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float EventDetachedMinLifeTime;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float EventDetachedMaxLifeTime;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float EventDetachedOffscreenLifeTime;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float EventDetachedMinMass;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float EventDetachedMinVelocity;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int EventDetachedMaxSounds;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public AudioClip[] EventDetachedSoundArray;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int EventDetachedMaxPrefabs;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public PrefabInfo[] EventDetachedPrefabsArray;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string EventDetachedCollisionCallMethod;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject EventDetachedCollisionCallGameObject;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip EventExplosionSound;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int EventExplosionPrefabsInstanceCount;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PrefabInfo[] EventExplosionPrefabsArray;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public AudioClip EventImpactSound;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PrefabInfo[] EventImpactPrefabsArray;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public string EventDetachedAnyCallMethod;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject EventDetachedAnyCallGameObject;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool GUIExpandSupportPlanes;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int RandomSeed;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float DecomposePreview;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool AlwaysComputeColliders;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool ShowChunkConnectionLines;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool ShowChunkColoredState;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	public bool ShowChunkColoredRandomly;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool SaveMeshDataToAsset;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string MeshAssetDataFile;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool Verbose;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool IntegrateWithConcaveCollider;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ECCAlgorithm ConcaveColliderAlgorithm;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int ConcaveColliderMaxHulls;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int ConcaveColliderMaxHullVertices;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int ConcaveColliderLegacySteps;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public List<SupportPlane> ListSupportPlanes;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	public List<FracturedChunk> ListFracturedChunks;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public GameObject SingleMeshObject;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public bool IsUsingSingleMeshObjectDraw;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public float DecomposeRadius;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color GizmoColorSupport;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color GizmoColorNonSupport;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool m_bCheckDetachNonSupportedChunkds;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool m_bExploded;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	private bool m_bDetached;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float[] m_afFreeChunkSoundTimers;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float[] m_afFreeChunkPrefabTimers;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Material m_GizmosMaterial;

	[Token(Token = "0x1700007A")]
	public Material GizmosMaterial
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x4F6784", Offset = "0x4F6784", VA = "0x4F6784")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x4F6880", Offset = "0x4F6880", VA = "0x4F6880")]
		set
		{
		}
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x4F6888", Offset = "0x4F6888", VA = "0x4F6888")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x4F688C", Offset = "0x4F688C", VA = "0x4F688C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x4F6E30", Offset = "0x4F6E30", VA = "0x4F6E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x4F7AFC", Offset = "0x4F7AFC", VA = "0x4F7AFC")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x4F7B00", Offset = "0x4F7B00", VA = "0x4F7B00")]
	public void OnCreateFracturedObject()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x4F6B78", Offset = "0x4F6B78", VA = "0x4F6B78")]
	public void SetSingleMeshVisibility(bool bEnabled)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x4F7BE4", Offset = "0x4F7BE4", VA = "0x4F7BE4")]
	public bool ResetChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x4F49CC", Offset = "0x4F49CC", VA = "0x4F49CC")]
	public List<FracturedChunk> GetDestructibleChunksInRadius(Vector3 v3Position, float fRadius, bool bAlsoIncludeFreeChunks)
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x4F7EF4", Offset = "0x4F7EF4", VA = "0x4F7EF4")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x4EA5F0", Offset = "0x4EA5F0", VA = "0x4EA5F0")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce, float fRadius, bool bPlayExplosionSound, bool bInstanceExplosionPrefabs, bool bAlsoExplodeFree, bool bCheckStructureIntegrityAfter)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x4F8538", Offset = "0x4F8538", VA = "0x4F8538")]
	public void DeleteChunks()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x4F87C4", Offset = "0x4F87C4", VA = "0x4F87C4")]
	public void CollapseChunks()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x4F89DC", Offset = "0x4F89DC", VA = "0x4F89DC")]
	public void ExplodeChunks(float fExplosionForce, Vector3 v3ExplosionPosition, float fUpwardsModifier)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x4F8C74", Offset = "0x4F8C74", VA = "0x4F8C74")]
	public void ComputeChunksRelativeVolume()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x4F9374", Offset = "0x4F9374", VA = "0x4F9374")]
	public void ComputeChunksMass(float fTotalMass)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x4F9610", Offset = "0x4F9610", VA = "0x4F9610")]
	public bool HasDetachedChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x4F5CAC", Offset = "0x4F5CAC", VA = "0x4F5CAC")]
	public void NotifyChunkDetach(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x4F3794", Offset = "0x4F3794", VA = "0x4F3794")]
	public void NotifyDetachChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x4F9618", Offset = "0x4F9618", VA = "0x4F9618")]
	public void NotifyDetachChunkCollision(Vector3 v3Position, bool bIsMain)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x4F3C74", Offset = "0x4F3C74", VA = "0x4F3C74")]
	public void NotifyFreeChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x4F4CF0", Offset = "0x4F4CF0", VA = "0x4F4CF0")]
	public void NotifyImpact(Vector3 v3Position)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x4F5FAC", Offset = "0x4F5FAC", VA = "0x4F5FAC")]
	public void ResetAllChunkVisitedFlags()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x4F5F94", Offset = "0x4F5F94", VA = "0x4F5F94")]
	public void CheckDetachNonSupportedChunks(bool bForceImmediate = false)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x4F98B4", Offset = "0x4F98B4", VA = "0x4F98B4")]
	public void MarkNonSupportedChunks()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x4F7080", Offset = "0x4F7080", VA = "0x4F7080")]
	private void CheckDetachNonSupportedChunksInternal(bool bOnlyMarkThem = false)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x4F9A6C", Offset = "0x4F9A6C", VA = "0x4F9A6C")]
	private static bool AreSupportedChunksRecursive(FracturedChunk chunk, List<FracturedChunk> listChunksVisited, List<FracturedChunk> listChunksSupport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x4F9DDC", Offset = "0x4F9DDC", VA = "0x4F9DDC")]
	public void AddSupportPlane()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x4F9EEC", Offset = "0x4F9EEC", VA = "0x4F9EEC")]
	public void ComputeSupportPlaneIntersections()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x4FA2B0", Offset = "0x4FA2B0", VA = "0x4FA2B0")]
	public FracturedObject()
	{
	}
}
[Token(Token = "0x200014E")]
public class CombinedMesh : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	public delegate void CombineProgressDelegate(string strMessage, float fT);

	[Serializable]
	[Token(Token = "0x2000150")]
	public class ObjectInfo
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material[] aMaterials;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Mesh mesh;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 v3LocalPosition;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion qLocalRotation;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 v3LocalScale;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Matrix4x4 mtxLocal;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Matrix4x4 mtxWorld;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3[] av3NormalsWorld;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector4[] av4TangentsWorld;

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x539304", Offset = "0x539304", VA = "0x539304")]
		public ObjectInfo(Material[] aMaterials, Mesh mesh, Transform transform, Matrix4x4 mtxLocal)
		{
		}
	}

	[Token(Token = "0x2000151")]
	private class MaterialMeshInfo
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform transform;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Mesh mesh;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nSubMesh;

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x5392BC", Offset = "0x5392BC", VA = "0x5392BC")]
		public MaterialMeshInfo(Transform transform, Mesh mesh, int nSubMesh)
		{
		}
	}

	[Token(Token = "0x2000152")]
	public enum EPivotMode
	{
		[Token(Token = "0x400086D")]
		Keep,
		[Token(Token = "0x400086E")]
		Center,
		[Token(Token = "0x400086F")]
		BottomCenter,
		[Token(Token = "0x4000870")]
		TopCenter,
		[Token(Token = "0x4000871")]
		Min,
		[Token(Token = "0x4000872")]
		Max
	}

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool SaveMeshAsset;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool KeepPosition;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EPivotMode PivotMode;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshFilter[] MeshObjects;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RootNode;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_bCancelled;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ObjectInfo> m_listObjectInfo;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Dictionary<Material, List<MaterialMeshInfo>> m_dicMeshEntries;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x88784C", Offset = "0x88784C", VA = "0x88784C")]
	public void CancelCombining()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x887858", Offset = "0x887858", VA = "0x887858")]
	public bool CombiningCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x887860", Offset = "0x887860", VA = "0x887860")]
	public void TransformObjInfoMeshVectorsToLocal(Transform newTransform)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x887D4C", Offset = "0x887D4C", VA = "0x887D4C")]
	public int GetObjectCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x887DA0", Offset = "0x887DA0", VA = "0x887DA0")]
	public ObjectInfo GetObjectInfo(int nIndex)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x887E14", Offset = "0x887E14", VA = "0x887E14")]
	public void Combine(CombineProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x88B498", Offset = "0x88B498", VA = "0x88B498")]
	public CombinedMesh()
	{
	}
}
[Token(Token = "0x2000153")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000154")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 m_position;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_angles;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_description;

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1545BB0", Offset = "0x1545BB0", VA = "0x1545BB0")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270518", Offset = "0x270518")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fAmount;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0x1545B58", Offset = "0x1545B58", VA = "0x1545B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x1545BA8", Offset = "0x1545BA8", VA = "0x1545BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1545120", Offset = "0x1545120", VA = "0x1545120")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1545140", Offset = "0x1545140", VA = "0x1545140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x15451B8", Offset = "0x15451B8", VA = "0x15451B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1545158", Offset = "0x1545158", VA = "0x1545158")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1545B60", Offset = "0x1545B60", VA = "0x1545B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material WireframeMaterial;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MouseSensitvity;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_nSelectedIndex;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bWireframe;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_fRotationSpeed;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_fLastMouseX;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Mesh m_newMesh;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string m_strLastTitle;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastMessage;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_fVertexAmount;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x71C5AC", Offset = "0x71C5AC", VA = "0x71C5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x71CA50", Offset = "0x71CA50", VA = "0x71CA50")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x71CAEC", Offset = "0x71CAEC", VA = "0x71CAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x71D0B4", Offset = "0x71D0B4", VA = "0x71D0B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x71C794", Offset = "0x71C794", VA = "0x71C794")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x71E574", Offset = "0x71E574", VA = "0x71E574")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x71CDB8", Offset = "0x71CDB8", VA = "0x71CDB8")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x71E4C0", Offset = "0x71E4C0", VA = "0x71E4C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274F04", Offset = "0x274F04")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x71E7EC", Offset = "0x71E7EC", VA = "0x71E7EC")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x2000156")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[HideInInspector]
	[SerializeField]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	[HideInInspector]
	[SerializeField]
	private bool m_bUseCurvature;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[HideInInspector]
	[SerializeField]
	private bool m_bDataDirty;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x1700007D")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x7DA9B0", Offset = "0x7DA9B0", VA = "0x7DA9B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x7DA9B8", Offset = "0x7DA9B8", VA = "0x7DA9B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x7DA9C0", Offset = "0x7DA9C0", VA = "0x7DA9C0")]
		set
		{
		}
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x7DA9C8", Offset = "0x7DA9C8", VA = "0x7DA9C8")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x7DAAF4", Offset = "0x7DAAF4", VA = "0x7DAAF4")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x7DAC98", Offset = "0x7DAC98", VA = "0x7DAC98")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x7DACA0", Offset = "0x7DACA0", VA = "0x7DACA0")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x7DAD04", Offset = "0x7DAD04", VA = "0x7DAD04")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x7DAD0C", Offset = "0x7DAD0C", VA = "0x7DAD0C")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x7DAD18", Offset = "0x7DAD18", VA = "0x7DAD18")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x7DAD40", Offset = "0x7DAD40", VA = "0x7DAD40")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x7DAEDC", Offset = "0x7DAEDC", VA = "0x7DAEDC")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x7DB0E4", Offset = "0x7DB0E4", VA = "0x7DB0E4")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x7DB0EC", Offset = "0x7DB0EC", VA = "0x7DB0EC")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x7DB128", Offset = "0x7DB128", VA = "0x7DB128")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x7DBF08", Offset = "0x7DBF08", VA = "0x7DBF08")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x7DC000", Offset = "0x7DC000", VA = "0x7DC000")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x7DC0B8", Offset = "0x7DC0B8", VA = "0x7DC0B8")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x7DC0F4", Offset = "0x7DC0F4", VA = "0x7DC0F4")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x7DC808", Offset = "0x7DC808", VA = "0x7DC808")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x7DC834", Offset = "0x7DC834", VA = "0x7DC834")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x7DCB1C", Offset = "0x7DCB1C", VA = "0x7DCB1C")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x7DCB58", Offset = "0x7DCB58", VA = "0x7DCB58")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x7DCEA4", Offset = "0x7DCEA4", VA = "0x7DCEA4")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x7DCED0", Offset = "0x7DCED0", VA = "0x7DCED0")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x7DD20C", Offset = "0x7DD20C", VA = "0x7DD20C")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x7DD238", Offset = "0x7DD238", VA = "0x7DD238")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x7DD450", Offset = "0x7DD450", VA = "0x7DD450")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x7DD498", Offset = "0x7DD498", VA = "0x7DD498")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x7DD6A4", Offset = "0x7DD6A4", VA = "0x7DD6A4")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x7DD6EC", Offset = "0x7DD6EC", VA = "0x7DD6EC")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x7DD91C", Offset = "0x7DD91C", VA = "0x7DD91C")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x7DD964", Offset = "0x7DD964", VA = "0x7DD964")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x7DDB70", Offset = "0x7DDB70", VA = "0x7DDB70")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x7DDBB8", Offset = "0x7DDBB8", VA = "0x7DDBB8")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x7DDDE8", Offset = "0x7DDDE8", VA = "0x7DDDE8")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x7DBEDC", Offset = "0x7DBEDC", VA = "0x7DBEDC")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x7DDEEC", Offset = "0x7DDEEC", VA = "0x7DDEEC")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x7DC6D4", Offset = "0x7DC6D4", VA = "0x7DC6D4")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x7DE214", Offset = "0x7DE214", VA = "0x7DE214")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x270528", Offset = "0x270528")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270594", Offset = "0x270594")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fAmount;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x54DF60", Offset = "0x54DF60", VA = "0x54DF60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x54DFB0", Offset = "0x54DFB0", VA = "0x54DFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x54D038", Offset = "0x54D038", VA = "0x54D038")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x54D058", Offset = "0x54D058", VA = "0x54D058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x54D0E0", Offset = "0x54D0E0", VA = "0x54D0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x54D080", Offset = "0x54D080", VA = "0x54D080")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x54DF68", Offset = "0x54DF68", VA = "0x54DF68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_bFinished;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh m_newMesh;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_nLastProgress;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_strLastTitle;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string m_strLastMessage;

	[Token(Token = "0x1700007F")]
	public string ProgressTitle
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x70F2C0", Offset = "0x70F2C0", VA = "0x70F2C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public string ProgressMessage
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x70F2C8", Offset = "0x70F2C8", VA = "0x70F2C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public int ProgressPercent
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x70F2D0", Offset = "0x70F2D0", VA = "0x70F2D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000082")]
	public bool Finished
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x70F2D8", Offset = "0x70F2D8", VA = "0x70F2D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x70F2E0", Offset = "0x70F2E0", VA = "0x70F2E0")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x70F3E8", Offset = "0x70F3E8", VA = "0x70F3E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x70F4E4", Offset = "0x70F4E4", VA = "0x70F4E4")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x70F76C", Offset = "0x70F76C", VA = "0x70F76C")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x70F334", Offset = "0x70F334", VA = "0x70F334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x274FC0", Offset = "0x274FC0")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x70F808", Offset = "0x70F808", VA = "0x70F808")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x2000159")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1545F2C", Offset = "0x1545F2C", VA = "0x1545F2C", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x15460C4", Offset = "0x15460C4", VA = "0x15460C4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x15461B8", Offset = "0x15461B8", VA = "0x15461B8")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nInitValue;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nResult;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nWidth;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nHeight;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nXStart;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nYStart;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string stringToEdit;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string StatsCount;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string achivToEdit;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string leaderboardToEdit;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string leaderboardUserName;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string leaderboardScore;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static string APP_ID;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_KEY;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB54204", Offset = "0xB54204", VA = "0xB54204")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xB54304", Offset = "0xB54304", VA = "0xB54304")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xB54420", Offset = "0xB54420", VA = "0xB54420")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xB54424", Offset = "0xB54424", VA = "0xB54424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xB584F0", Offset = "0xB584F0", VA = "0xB584F0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xB586A8", Offset = "0xB586A8", VA = "0xB586A8")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xB58854", Offset = "0xB58854", VA = "0xB58854")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xB589F0", Offset = "0xB589F0", VA = "0xB589F0")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xB58B14", Offset = "0xB58B14", VA = "0xB58B14")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB58C9C", Offset = "0xB58C9C", VA = "0xB58C9C")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB58DD0", Offset = "0xB58DD0", VA = "0xB58DD0")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB58F7C", Offset = "0xB58F7C", VA = "0xB58F7C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB590F8", Offset = "0xB590F8", VA = "0xB590F8")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xB5921C", Offset = "0xB5921C", VA = "0xB5921C")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xB59340", Offset = "0xB59340", VA = "0xB59340")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xB59464", Offset = "0xB59464", VA = "0xB59464")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xB59588", Offset = "0xB59588", VA = "0xB59588")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200015B")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xB59804", Offset = "0xB59804", VA = "0xB59804")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB59924", Offset = "0xB59924", VA = "0xB59924")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB59928", Offset = "0xB59928", VA = "0xB59928")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB59A78", Offset = "0xB59A78", VA = "0xB59A78")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x200015C")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bInit;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB59B18", Offset = "0xB59B18", VA = "0xB59B18")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB59C34", Offset = "0xB59C34", VA = "0xB59C34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB5A26C", Offset = "0xB5A26C", VA = "0xB5A26C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB5A270", Offset = "0xB5A270", VA = "0xB5A270")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB5A274", Offset = "0xB5A274", VA = "0xB5A274")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB5A278", Offset = "0xB5A278", VA = "0xB5A278")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x200015D")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200015F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705A4", Offset = "0x2705A4")]
		private sealed class <>c
		{
			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x154DB80", Offset = "0x154DB80", VA = "0x154DB80")]
			public <>c()
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x154DB88", Offset = "0x154DB88", VA = "0x154DB88")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705B4", Offset = "0x2705B4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x1546758", Offset = "0x1546758", VA = "0x1546758")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x154DC18", Offset = "0x154DC18", VA = "0x154DC18")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1546494", Offset = "0x1546494", VA = "0x1546494", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1546608", Offset = "0x1546608", VA = "0x1546608", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1546760", Offset = "0x1546760", VA = "0x1546760")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000161")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000162")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705C4", Offset = "0x2705C4")]
		private sealed class <>c
		{
			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x60007EB")]
			[Address(RVA = "0x154DD6C", Offset = "0x154DD6C", VA = "0x154DD6C")]
			public <>c()
			{
			}

			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x154DD74", Offset = "0x154DD74", VA = "0x154DD74")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000163")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705D4", Offset = "0x2705D4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x1546A2C", Offset = "0x1546A2C", VA = "0x1546A2C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60007EE")]
			[Address(RVA = "0x154DE04", Offset = "0x154DE04", VA = "0x154DE04")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1546768", Offset = "0x1546768", VA = "0x1546768", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x15468DC", Offset = "0x15468DC", VA = "0x15468DC", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1546A34", Offset = "0x1546A34", VA = "0x1546A34")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000164")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000165")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705E4", Offset = "0x2705E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x154D994", Offset = "0x154D994", VA = "0x154D994")]
			public <>c()
			{
			}

			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x154D99C", Offset = "0x154D99C", VA = "0x154D99C")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000166")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2705F4", Offset = "0x2705F4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x1546484", Offset = "0x1546484", VA = "0x1546484")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x154DA2C", Offset = "0x154DA2C", VA = "0x154DA2C")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x15461C0", Offset = "0x15461C0", VA = "0x15461C0", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1546334", Offset = "0x1546334", VA = "0x1546334", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x154648C", Offset = "0x154648C", VA = "0x154648C")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string LaunchData;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string LaunchBranchName;

	[Token(Token = "0x40008D9")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInitComplete;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xB5A328", Offset = "0xB5A328", VA = "0xB5A328")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xB5A474", Offset = "0xB5A474", VA = "0xB5A474")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xB5A544", Offset = "0xB5A544", VA = "0xB5A544")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xB5A660", Offset = "0xB5A660", VA = "0xB5A660")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xB5A72C", Offset = "0xB5A72C", VA = "0xB5A72C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xB5A87C", Offset = "0xB5A87C", VA = "0xB5A87C")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xB5A9B4", Offset = "0xB5A9B4", VA = "0xB5A9B4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xB5A9B8", Offset = "0xB5A9B8", VA = "0xB5A9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xB5AD04", Offset = "0xB5AD04", VA = "0xB5AD04")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000167")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	public class Item
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string ticket;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] items;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string subscription_ticket;

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1546A3C", Offset = "0x1546A3C", VA = "0x1546A3C")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000169")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Item mItem;

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1546AD0", Offset = "0x1546AD0", VA = "0x1546AD0", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1546BC4", Offset = "0x1546BC4", VA = "0x1546BC4", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1546CD0", Offset = "0x1546CD0", VA = "0x1546CD0", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1546DF0", Offset = "0x1546DF0", VA = "0x1546DF0", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1546EE8", Offset = "0x1546EE8", VA = "0x1546EE8", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x154784C", Offset = "0x154784C", VA = "0x154784C", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x15478F4", Offset = "0x15478F4", VA = "0x15478F4", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1547A00", Offset = "0x1547A00", VA = "0x1547A00", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1547B0C", Offset = "0x1547B0C", VA = "0x1547B0C", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1547C2C", Offset = "0x1547C2C", VA = "0x1547C2C", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1548290", Offset = "0x1548290", VA = "0x1548290", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x15488F4", Offset = "0x15488F4", VA = "0x15488F4", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x15489B0", Offset = "0x15489B0", VA = "0x15489B0", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1548A98", Offset = "0x1548A98", VA = "0x1548A98")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Result mListener;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool bInit_Done;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text winText;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB5AE8C", Offset = "0xB5AE8C", VA = "0xB5AE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB5B110", Offset = "0xB5B110", VA = "0xB5B110")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB5B114", Offset = "0xB5B114", VA = "0xB5B114")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB5C4B0", Offset = "0xB5C4B0", VA = "0xB5C4B0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB5C5C4", Offset = "0xB5C5C4", VA = "0xB5C5C4")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB5C6E0", Offset = "0xB5C6E0", VA = "0xB5C6E0")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x200016A")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1548B10", Offset = "0x1548B10", VA = "0x1548B10", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1548BDC", Offset = "0x1548BDC", VA = "0x1548BDC")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x200016C")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200016D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270604", Offset = "0x270604")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string pchCurrencyName;

			[Token(Token = "0x6000815")]
			[Address(RVA = "0x1548D1C", Offset = "0x1548D1C", VA = "0x1548D1C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000816")]
			[Address(RVA = "0x154DEE8", Offset = "0x154DEE8", VA = "0x154DEE8")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1548BE4", Offset = "0x1548BE4", VA = "0x1548BE4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1548D24", Offset = "0x1548D24", VA = "0x1548D24")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x200016E")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200016F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270614", Offset = "0x270614")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x17000085")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600081D")]
				[Address(RVA = "0x154E0CC", Offset = "0x154E0CC", VA = "0x154E0CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000086")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600081F")]
				[Address(RVA = "0x154E11C", Offset = "0x154E11C", VA = "0x154E11C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600081A")]
			[Address(RVA = "0x1548E54", Offset = "0x1548E54", VA = "0x1548E54")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600081B")]
			[Address(RVA = "0x154DFB4", Offset = "0x154DFB4", VA = "0x154DFB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600081C")]
			[Address(RVA = "0x154DFB8", Offset = "0x154DFB8", VA = "0x154DFB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600081E")]
			[Address(RVA = "0x154E0D4", Offset = "0x154E0D4", VA = "0x154E0D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1548D2C", Offset = "0x1548D2C", VA = "0x1548D2C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1548DCC", Offset = "0x1548DCC", VA = "0x1548DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x27507C", Offset = "0x27507C")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1548E74", Offset = "0x1548E74", VA = "0x1548E74")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text uiText;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly string appId;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string apiKey;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB5C7D8", Offset = "0xB5C7D8", VA = "0xB5C7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB5C90C", Offset = "0xB5C90C", VA = "0xB5C90C")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB5C9C8", Offset = "0xB5C9C8", VA = "0xB5C9C8")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000170")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string APP_ID;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB5CA78", Offset = "0xB5CA78", VA = "0xB5CA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB5CB94", Offset = "0xB5CB94", VA = "0xB5CB94")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB5D860", Offset = "0xB5D860", VA = "0xB5D860")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB5DA08", Offset = "0xB5DA08", VA = "0xB5DA08")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB5DA0C", Offset = "0xB5DA0C", VA = "0xB5DA0C")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB5DBA8", Offset = "0xB5DBA8", VA = "0xB5DBA8")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x2000171")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_TextureSize;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x771598", Offset = "0x771598", VA = "0x771598")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x773DC4", Offset = "0x773DC4", VA = "0x773DC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x773154", Offset = "0x773154", VA = "0x773154")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x7729EC", Offset = "0x7729EC", VA = "0x7729EC")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x774254", Offset = "0x774254", VA = "0x774254")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x7738D4", Offset = "0x7738D4", VA = "0x7738D4")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x773A6C", Offset = "0x773A6C", VA = "0x773A6C")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x773604", Offset = "0x773604", VA = "0x773604")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x774288", Offset = "0x774288", VA = "0x774288")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000172")]
public class XWeaponTrailDemo : MonoBehaviour
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animation SwordAnimation;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public XWeaponTrail ProTrailDistort;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public XWeaponTrail ProTrailShort;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XWeaponTrail ProTraillong;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public XWeaponTrail SimpleTrail;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB62C7C", Offset = "0xB62C7C", VA = "0xB62C7C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB62CEC", Offset = "0xB62CEC", VA = "0xB62CEC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB63244", Offset = "0xB63244", VA = "0xB63244")]
	public XWeaponTrailDemo()
	{
	}
}
namespace Xft
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x270634", Offset = "0x270634")]
	public class Spline
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<SplineControlPoint> mControlPoints;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<SplineControlPoint> mSegments;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Granularity;

		[Token(Token = "0x17000087")]
		public SplineControlPoint Item
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0xF9CA38", Offset = "0xF9CA38", VA = "0xF9CA38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public List<SplineControlPoint> Segments
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0xF9CAE8", Offset = "0xF9CAE8", VA = "0xF9CAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		public List<SplineControlPoint> ControlPoints
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0xF9CAF0", Offset = "0xF9CAF0", VA = "0xF9CAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xF9CAF8", Offset = "0xF9CAF8", VA = "0xF9CAF8")]
		public SplineControlPoint NextControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xF9CBD0", Offset = "0xF9CBD0", VA = "0xF9CBD0")]
		public SplineControlPoint PreviousControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xF9CC94", Offset = "0xF9CC94", VA = "0xF9CC94")]
		public Vector3 NextPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xF9CCE4", Offset = "0xF9CCE4", VA = "0xF9CCE4")]
		public Vector3 PreviousPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xF9CD34", Offset = "0xF9CD34", VA = "0xF9CD34")]
		public Vector3 PreviousNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xF9CD84", Offset = "0xF9CD84", VA = "0xF9CD84")]
		public Vector3 NextNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xF9CDD4", Offset = "0xF9CDD4", VA = "0xF9CDD4")]
		public SplineControlPoint LenToSegment(float t, out float localF)
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xF9CFE8", Offset = "0xF9CFE8", VA = "0xF9CFE8")]
		public static Vector3 CatmulRom(Vector3 T0, Vector3 P0, Vector3 P1, Vector3 T1, float f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xF9D124", Offset = "0xF9D124", VA = "0xF9D124")]
		public Vector3 InterpolateByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xF9D254", Offset = "0xF9D254", VA = "0xF9D254")]
		public Vector3 InterpolateNormalByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xF9D384", Offset = "0xF9D384", VA = "0xF9D384")]
		public SplineControlPoint AddControlPoint(Vector3 pos, Vector3 up)
		{
			return null;
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xF9D51C", Offset = "0xF9D51C", VA = "0xF9D51C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xF9D584", Offset = "0xF9D584", VA = "0xF9D584")]
		private void RefreshDistance()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xF9D7D8", Offset = "0xF9D7D8", VA = "0xF9D7D8")]
		public void RefreshSpline()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xF9D9B0", Offset = "0xF9D9B0", VA = "0xF9D9B0")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class SplineControlPoint
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Position;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 Normal;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ControlPointIndex;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int SegmentIndex;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Dist;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Spline mSpline;

		[Token(Token = "0x1700008A")]
		public SplineControlPoint NextControlPoint
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0xF9DA74", Offset = "0xF9DA74", VA = "0xF9DA74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		public SplineControlPoint PreviousControlPoint
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xF9DAA0", Offset = "0xF9DAA0", VA = "0xF9DAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public Vector3 NextPosition
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0xF9DACC", Offset = "0xF9DACC", VA = "0xF9DACC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008D")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xF9DB18", Offset = "0xF9DB18", VA = "0xF9DB18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008E")]
		public Vector3 NextNormal
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xF9DB64", Offset = "0xF9DB64", VA = "0xF9DB64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700008F")]
		public Vector3 PreviousNormal
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0xF9DBB0", Offset = "0xF9DBB0", VA = "0xF9DBB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000090")]
		public bool IsValid
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xF9D998", Offset = "0xF9D998", VA = "0xF9D998")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xF9DBFC", Offset = "0xF9DBFC", VA = "0xF9DBFC")]
		private Vector3 GetNext2Position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xF9DC50", Offset = "0xF9DC50", VA = "0xF9DC50")]
		private Vector3 GetNext2Normal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xF9D194", Offset = "0xF9D194", VA = "0xF9D194")]
		public Vector3 Interpolate(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xF9D2C4", Offset = "0xF9D2C4", VA = "0xF9D2C4")]
		public Vector3 InterpolateNormal(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xF9D4F8", Offset = "0xF9D4F8", VA = "0xF9D4F8")]
		public void Init(Spline owner)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xF9D4E4", Offset = "0xF9D4E4", VA = "0xF9D4E4")]
		public SplineControlPoint()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class VertexPool
	{
		[Token(Token = "0x2000176")]
		public class VertexSegment
		{
			[Token(Token = "0x4000932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int VertStart;

			[Token(Token = "0x4000933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int IndexStart;

			[Token(Token = "0x4000934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int VertCount;

			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int IndexCount;

			[Token(Token = "0x4000936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VertexPool Pool;

			[Token(Token = "0x600085C")]
			[Address(RVA = "0x1545E64", Offset = "0x1545E64", VA = "0x1545E64")]
			public VertexSegment(int start, int count, int istart, int icount, VertexPool pool)
			{
			}

			[Token(Token = "0x600085D")]
			[Address(RVA = "0x1545EAC", Offset = "0x1545EAC", VA = "0x1545EAC")]
			public void ClearIndices()
			{
			}
		}

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] Vertices;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int[] Indices;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] UVs;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color[] Colors;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IndiceChanged;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ColorChanged;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool UVChanged;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool VertChanged;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool UV2Changed;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int VertexTotal;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int VertexUsed;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int IndexTotal;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int IndexUsed;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool FirstUpdate;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected bool VertCountChanged;

		[Token(Token = "0x400092B")]
		public const int BlockSize = 108;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float BoundsScheduleTime;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ElapsedTime;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected XWeaponTrail _owner;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected MeshFilter _meshFilter;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Mesh _mesh2d;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material _material;

		[Token(Token = "0x17000091")]
		public Mesh MyMesh
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0xB53080", Offset = "0xB53080", VA = "0xB53080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xB531AC", Offset = "0xB531AC", VA = "0xB531AC")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xB531D8", Offset = "0xB531D8", VA = "0xB531D8")]
		private void CreateMeshObj(XWeaponTrail owner, Material material)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xB53720", Offset = "0xB53720", VA = "0xB53720")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xB53814", Offset = "0xB53814", VA = "0xB53814")]
		public VertexPool(Material material, XWeaponTrail owner)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xB53A40", Offset = "0xB53A40", VA = "0xB53A40")]
		public VertexSegment GetVertices(int vcount, int icount)
		{
			return null;
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xB53920", Offset = "0xB53920", VA = "0xB53920")]
		protected void InitArrays()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xB53B80", Offset = "0xB53B80", VA = "0xB53B80")]
		public void EnlargeArrays(int count, int icount)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xB53DA0", Offset = "0xB53DA0", VA = "0xB53DA0")]
		public void LateUpdate()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class XWeaponTrail : MonoBehaviour
	{
		[Token(Token = "0x2000178")]
		public class Element
		{
			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 PointStart;

			[Token(Token = "0x4000951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 PointEnd;

			[Token(Token = "0x17000095")]
			public Vector3 Pos
			{
				[Token(Token = "0x6000877")]
				[Address(RVA = "0x154AB5C", Offset = "0x154AB5C", VA = "0x154AB5C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000878")]
			[Address(RVA = "0x154ABA0", Offset = "0x154ABA0", VA = "0x154ABA0")]
			public Element(Vector3 start, Vector3 end)
			{
			}

			[Token(Token = "0x6000879")]
			[Address(RVA = "0x154ABE8", Offset = "0x154ABE8", VA = "0x154ABE8")]
			public Element()
			{
			}
		}

		[Token(Token = "0x2000179")]
		public class ElementPool
		{
			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly Stack<Element> _stack;

			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B0C", Offset = "0x272B0C")]
			private int <CountAll>k__BackingField;

			[Token(Token = "0x17000096")]
			public int CountAll
			{
				[Token(Token = "0x600087A")]
				[Address(RVA = "0x154ABF0", Offset = "0x154ABF0", VA = "0x154ABF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275138", Offset = "0x275138")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600087B")]
				[Address(RVA = "0x154ABF8", Offset = "0x154ABF8", VA = "0x154ABF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275148", Offset = "0x275148")]
				private set
				{
				}
			}

			[Token(Token = "0x17000097")]
			public int CountActive
			{
				[Token(Token = "0x600087C")]
				[Address(RVA = "0x154AC00", Offset = "0x154AC00", VA = "0x154AC00")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000098")]
			public int CountInactive
			{
				[Token(Token = "0x600087D")]
				[Address(RVA = "0x154AC18", Offset = "0x154AC18", VA = "0x154AC18")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600087E")]
			[Address(RVA = "0x154AC6C", Offset = "0x154AC6C", VA = "0x154AC6C")]
			public ElementPool(int preCount)
			{
			}

			[Token(Token = "0x600087F")]
			[Address(RVA = "0x154ADA0", Offset = "0x154ADA0", VA = "0x154ADA0")]
			public Element Get()
			{
				return null;
			}

			[Token(Token = "0x6000880")]
			[Address(RVA = "0x154AE78", Offset = "0x154AE78", VA = "0x154AE78")]
			public void Release(Element element)
			{
			}
		}

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Version;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool UseWith2D;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SortingLayerName;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SortingOrder;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PointStart;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform PointEnd;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxFrame;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Granularity;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Fps;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color MyColor;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Material MyMaterial;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float mTrailWidth;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Element mHeadElem;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<Element> mSnapshotList;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected ElementPool mElemPool;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Spline mSpline;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float mFadeT;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool mIsFading;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float mFadeTime;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float mElapsedTime;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float mFadeElapsedime;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject mMeshObj;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected VertexPool mVertexPool;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VertexPool.VertexSegment mVertexSegment;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool mInited;

		[Token(Token = "0x17000092")]
		public float UpdateInterval
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xB60F78", Offset = "0xB60F78", VA = "0xB60F78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000093")]
		public Vector3 CurHeadPos
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xB60F8C", Offset = "0xB60F8C", VA = "0xB60F8C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000094")]
		public float TrailWidth
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xB61030", Offset = "0xB61030", VA = "0xB61030")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xB61038", Offset = "0xB61038", VA = "0xB61038")]
		public void Init()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xB615B0", Offset = "0xB615B0", VA = "0xB615B0")]
		public void ReInit()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xB615F4", Offset = "0xB615F4", VA = "0xB615F4")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xB61FF8", Offset = "0xB61FF8", VA = "0xB61FF8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xB6202C", Offset = "0xB6202C", VA = "0xB6202C")]
		public void StopSmoothly(float fadeTime)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xB6203C", Offset = "0xB6203C", VA = "0xB6203C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB6244C", Offset = "0xB6244C", VA = "0xB6244C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB6247C", Offset = "0xB6247C", VA = "0xB6247C")]
		private void OnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xB62488", Offset = "0xB62488", VA = "0xB62488")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xB624A0", Offset = "0xB624A0", VA = "0xB624A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xB624AC", Offset = "0xB624AC", VA = "0xB624AC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xB6145C", Offset = "0xB6145C", VA = "0xB6145C")]
		private void InitSpline()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xB61954", Offset = "0xB61954", VA = "0xB61954")]
		private void RefreshSpline()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xB61B88", Offset = "0xB61B88", VA = "0xB61B88")]
		private void UpdateVertex()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xB626FC", Offset = "0xB626FC", VA = "0xB626FC")]
		private void UpdateIndices()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xB620C8", Offset = "0xB620C8", VA = "0xB620C8")]
		private void UpdateHeadElem()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xB623E0", Offset = "0xB623E0", VA = "0xB623E0")]
		private void UpdateFade()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xB621E0", Offset = "0xB621E0", VA = "0xB621E0")]
		private void RecordCurElem()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xB61234", Offset = "0xB61234", VA = "0xB61234")]
		private void InitOriginalElements()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xB6117C", Offset = "0xB6117C", VA = "0xB6117C")]
		private void InitMeshObj()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB62A98", Offset = "0xB62A98", VA = "0xB62A98")]
		public XWeaponTrail()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x200017A")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x77A2B4", Offset = "0x77A2B4", VA = "0x77A2B4")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x77A36C", Offset = "0x77A36C", VA = "0x77A36C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x77A9BC", Offset = "0x77A9BC", VA = "0x77A9BC")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x77AB04", Offset = "0x77AB04", VA = "0x77AB04")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200017B")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x200017C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270668", Offset = "0x270668")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public IEnumerator action;

			[Token(Token = "0x6000897")]
			[Address(RVA = "0x547344", Offset = "0x547344", VA = "0x547344")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000898")]
			[Address(RVA = "0x54734C", Offset = "0x54734C", VA = "0x54734C")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x200017D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270678", Offset = "0x270678")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x17000099")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600089C")]
				[Address(RVA = "0x547414", Offset = "0x547414", VA = "0x547414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600089E")]
				[Address(RVA = "0x547464", Offset = "0x547464", VA = "0x547464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000899")]
			[Address(RVA = "0x54737C", Offset = "0x54737C", VA = "0x54737C")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600089A")]
			[Address(RVA = "0x54739C", Offset = "0x54739C", VA = "0x54739C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600089B")]
			[Address(RVA = "0x5473A0", Offset = "0x5473A0", VA = "0x5473A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600089D")]
			[Address(RVA = "0x54741C", Offset = "0x54741C", VA = "0x54741C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200017E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270688", Offset = "0x270688")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400095C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700009B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008A2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008A4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600089F")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60008A0")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008A1")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008A3")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200017F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270698", Offset = "0x270698")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700009D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008A8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008AA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008A5")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60008A6")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008A7")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008A9")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2706A8", Offset = "0x2706A8")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700009F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008AE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008B0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008AB")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60008AC")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008AD")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008AF")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000181")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2706B8", Offset = "0x2706B8")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170000A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008B4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008B6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008B1")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60008B2")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008B3")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008B5")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x7CF0E4", Offset = "0x7CF0E4", VA = "0x7CF0E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x7CF228", Offset = "0x7CF228", VA = "0x7CF228")]
		public void Update()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x7CF424", Offset = "0x7CF424", VA = "0x7CF424")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x7CF574", Offset = "0x7CF574", VA = "0x7CF574")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x7CF5F4", Offset = "0x7CF5F4", VA = "0x7CF5F4")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x7CF850", Offset = "0x7CF850", VA = "0x7CF850")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x600088C")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x600088D")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x600088E")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x600088F")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x7CF870", Offset = "0x7CF870", VA = "0x7CF870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x275158", Offset = "0x275158")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2751C4", Offset = "0x2751C4")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x275230", Offset = "0x275230")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x27529C", Offset = "0x27529C")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x275308", Offset = "0x275308")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x7CF8F4", Offset = "0x7CF8F4", VA = "0x7CF8F4")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public enum Locale
	{
		[Token(Token = "0x4000973")]
		US,
		[Token(Token = "0x4000974")]
		DE,
		[Token(Token = "0x4000975")]
		JP,
		[Token(Token = "0x4000976")]
		KR,
		[Token(Token = "0x4000977")]
		RU,
		[Token(Token = "0x4000978")]
		CN,
		[Token(Token = "0x4000979")]
		TW,
		[Token(Token = "0x400097A")]
		FR
	}
	[Token(Token = "0x2000183")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000184")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000185")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000186")]
	public class Leaderboard
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B1C", Offset = "0x272B1C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B2C", Offset = "0x272B2C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B3C", Offset = "0x272B3C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x170000A3")]
		public int Rank
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x7C6860", Offset = "0x7C6860", VA = "0x7C6860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275504", Offset = "0x275504")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x7C6868", Offset = "0x7C6868", VA = "0x7C6868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275514", Offset = "0x275514")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public int Score
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x7C6870", Offset = "0x7C6870", VA = "0x7C6870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275524", Offset = "0x275524")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x7C6878", Offset = "0x7C6878", VA = "0x7C6878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275534", Offset = "0x275534")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public string UserName
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x7C6880", Offset = "0x7C6880", VA = "0x7C6880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275544", Offset = "0x275544")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x7C6888", Offset = "0x7C6888", VA = "0x7C6888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275554", Offset = "0x275554")]
			set
			{
			}
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x7C6890", Offset = "0x7C6890", VA = "0x7C6890")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000188")]
		public enum Platform
		{
			[Token(Token = "0x4000981")]
			Windows,
			[Token(Token = "0x4000982")]
			Android
		}

		[Token(Token = "0x2000189")]
		public enum TransactionType
		{
			[Token(Token = "0x4000984")]
			Unknown,
			[Token(Token = "0x4000985")]
			Paid,
			[Token(Token = "0x4000986")]
			Redeem,
			[Token(Token = "0x4000987")]
			FreeTrial
		}

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B4C", Offset = "0x272B4C")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B5C", Offset = "0x272B5C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x170000A6")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xFA11F8", Offset = "0xFA11F8", VA = "0xFA11F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275564", Offset = "0x275564")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xFA1200", Offset = "0xFA1200", VA = "0xFA1200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275574", Offset = "0x275574")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public TransactionType Type
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0xFA1208", Offset = "0xFA1208", VA = "0xFA1208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275584", Offset = "0x275584")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0xFA1210", Offset = "0xFA1210", VA = "0xFA1210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275594", Offset = "0x275594")]
			set
			{
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xFA0C68", Offset = "0xFA0C68", VA = "0xFA0C68")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class Api
	{
		[Token(Token = "0x200018B")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x60008D7")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x60008D8")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x535B5C", Offset = "0x535B5C", VA = "0x535B5C")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string VERSION;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static string _appId;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string _appKey;

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x97D8D0", Offset = "0x97D8D0", VA = "0x97D8D0")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x97D7A8", Offset = "0x97D7A8", VA = "0x97D7A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2755A4", Offset = "0x2755A4")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x97DC4C", Offset = "0x97DC4C", VA = "0x97DC4C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x97D83C", Offset = "0x97D83C", VA = "0x97D83C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275610", Offset = "0x275610")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x97E040", Offset = "0x97E040", VA = "0x97E040")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x97E364", Offset = "0x97E364", VA = "0x97E364")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x97E58C", Offset = "0x97E58C", VA = "0x97E58C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class User
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB4CF44", Offset = "0xB4CF44", VA = "0xB4CF44")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x27567C", Offset = "0x27567C")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB4CFB8", Offset = "0xB4CFB8", VA = "0xB4CFB8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB4D360", Offset = "0xB4D360", VA = "0xB4D360")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB4D4BC", Offset = "0xB4D4BC", VA = "0xB4D4BC")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB4D618", Offset = "0xB4D618", VA = "0xB4D618")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xB4D774", Offset = "0xB4D774", VA = "0xB4D774")]
		public User()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class UserStats
	{
		[Token(Token = "0x200018E")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x400099A")]
			GlobalData,
			[Token(Token = "0x400099B")]
			GlobalDataAroundUser,
			[Token(Token = "0x400099C")]
			LocalData,
			[Token(Token = "0x400099D")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200018F")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x400099F")]
			AllTime,
			[Token(Token = "0x40009A0")]
			Daily,
			[Token(Token = "0x40009A1")]
			Weekly,
			[Token(Token = "0x40009A2")]
			Monthly
		}

		[Token(Token = "0x2000190")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x40009A4")]
			None,
			[Token(Token = "0x40009A5")]
			Ascending,
			[Token(Token = "0x40009A6")]
			Descending
		}

		[Token(Token = "0x2000191")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x40009A8")]
			None,
			[Token(Token = "0x40009A9")]
			Numeric,
			[Token(Token = "0x40009AA")]
			TimeSeconds,
			[Token(Token = "0x40009AB")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000192")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x40009AD")]
			None,
			[Token(Token = "0x40009AE")]
			KeepBest,
			[Token(Token = "0x40009AF")]
			ForceUpdate
		}

		[Token(Token = "0x2000193")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x40009B1")]
			Name,
			[Token(Token = "0x40009B2")]
			Desc,
			[Token(Token = "0x40009B3")]
			Hidden
		}

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB4D784", Offset = "0xB4D784", VA = "0xB4D784")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2756E8", Offset = "0x2756E8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB4D9C8", Offset = "0xB4D9C8", VA = "0xB4D9C8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB4D7F8", Offset = "0xB4D7F8", VA = "0xB4D7F8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275754", Offset = "0x275754")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xB4DD70", Offset = "0xB4DD70", VA = "0xB4DD70")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xB4E118", Offset = "0xB4E118", VA = "0xB4E118")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xB4E2CC", Offset = "0xB4E2CC", VA = "0xB4E2CC")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xB4E48C", Offset = "0xB4E48C", VA = "0xB4E48C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xB4E640", Offset = "0xB4E640", VA = "0xB4E640")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xB4D86C", Offset = "0xB4D86C", VA = "0xB4D86C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2757C0", Offset = "0x2757C0")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xB4E800", Offset = "0xB4E800", VA = "0xB4E800")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xB4EBA8", Offset = "0xB4EBA8", VA = "0xB4EBA8")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xB4ECCC", Offset = "0xB4ECCC", VA = "0xB4ECCC")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xB4EDF0", Offset = "0xB4EDF0", VA = "0xB4EDF0")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xB4EF14", Offset = "0xB4EF14", VA = "0xB4EF14")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xB4F0C8", Offset = "0xB4F0C8", VA = "0xB4F0C8")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xB4F2E8", Offset = "0xB4F2E8", VA = "0xB4F2E8")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xB4F40C", Offset = "0xB4F40C", VA = "0xB4F40C")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xB4D8E0", Offset = "0xB4D8E0", VA = "0xB4D8E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x27582C", Offset = "0x27582C")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xB4F530", Offset = "0xB4F530", VA = "0xB4F530")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xB4D954", Offset = "0xB4D954", VA = "0xB4D954")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275898", Offset = "0x275898")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xB4FB34", Offset = "0xB4FB34", VA = "0xB4FB34")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xB4FFD4", Offset = "0xB4FFD4", VA = "0xB4FFD4")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xB5034C", Offset = "0xB5034C", VA = "0xB5034C")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xB50498", Offset = "0xB50498", VA = "0xB50498")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xB505E4", Offset = "0xB505E4", VA = "0xB505E4")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xB50730", Offset = "0xB50730", VA = "0xB50730")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x98251C", Offset = "0x98251C", VA = "0x98251C")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class IAPurchase
	{
		[Token(Token = "0x2000196")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6000916")]
			[Address(RVA = "0x53D6B0", Offset = "0x53D6B0", VA = "0x53D6B0")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6000917")]
			[Address(RVA = "0x53D720", Offset = "0x53D720", VA = "0x53D720")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6000918")]
			[Address(RVA = "0x53D7A0", Offset = "0x53D7A0", VA = "0x53D7A0", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000919")]
			[Address(RVA = "0x53DDF0", Offset = "0x53DDF0", VA = "0x53DDF0")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x600091A")]
			[Address(RVA = "0x53DE70", Offset = "0x53DE70", VA = "0x53DE70", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0x53E4C0", Offset = "0x53E4C0", VA = "0x53E4C0")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x600091C")]
			[Address(RVA = "0x53E540", Offset = "0x53E540", VA = "0x53E540", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x600091D")]
			[Address(RVA = "0x53EC4C", Offset = "0x53EC4C", VA = "0x53EC4C")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600091E")]
			[Address(RVA = "0x53ECCC", Offset = "0x53ECCC", VA = "0x53ECCC", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x600091F")]
			[Address(RVA = "0x53FBB4", Offset = "0x53FBB4", VA = "0x53FBB4")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6000920")]
			[Address(RVA = "0x53FC34", Offset = "0x53FC34", VA = "0x53FC34", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000921")]
			[Address(RVA = "0x5411FC", Offset = "0x5411FC", VA = "0x5411FC")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6000922")]
			[Address(RVA = "0x54127C", Offset = "0x54127C", VA = "0x54127C", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000923")]
			[Address(RVA = "0x541980", Offset = "0x541980", VA = "0x541980")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000924")]
			[Address(RVA = "0x541A00", Offset = "0x541A00", VA = "0x541A00", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000925")]
			[Address(RVA = "0x542040", Offset = "0x542040", VA = "0x542040")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6000926")]
			[Address(RVA = "0x5420C0", Offset = "0x5420C0", VA = "0x5420C0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0x542700", Offset = "0x542700", VA = "0x542700")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6000928")]
			[Address(RVA = "0x542780", Offset = "0x542780", VA = "0x542780", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000929")]
			[Address(RVA = "0x543118", Offset = "0x543118", VA = "0x543118")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600092A")]
			[Address(RVA = "0x543198", Offset = "0x543198", VA = "0x543198", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600092B")]
			[Address(RVA = "0x54381C", Offset = "0x54381C", VA = "0x54381C")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x600092C")]
			[Address(RVA = "0x54389C", Offset = "0x54389C", VA = "0x54389C", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600092D")]
			[Address(RVA = "0x543F20", Offset = "0x543F20", VA = "0x543F20")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600092E")]
			[Address(RVA = "0x543FA0", Offset = "0x543FA0", VA = "0x543FA0", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000197")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x600092F")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6000930")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6000931")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6000932")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6000933")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6000934")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6000935")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6000936")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6000937")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6000938")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6000939")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x600093A")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x600093B")]
			[Address(RVA = "0x53D6A8", Offset = "0x53D6A8", VA = "0x53D6A8")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000198")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x54444C", Offset = "0x54444C", VA = "0x54444C", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x600093D")]
			[Address(RVA = "0x544450", Offset = "0x544450", VA = "0x544450", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600093E")]
			[Address(RVA = "0x544454", Offset = "0x544454", VA = "0x544454", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600093F")]
			[Address(RVA = "0x544458", Offset = "0x544458", VA = "0x544458", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6000940")]
			[Address(RVA = "0x54445C", Offset = "0x54445C", VA = "0x54445C", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6000941")]
			[Address(RVA = "0x544460", Offset = "0x544460", VA = "0x544460", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6000942")]
			[Address(RVA = "0x544464", Offset = "0x544464", VA = "0x544464", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6000943")]
			[Address(RVA = "0x544468", Offset = "0x544468", VA = "0x544468", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0x54446C", Offset = "0x54446C", VA = "0x54446C", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0x544470", Offset = "0x544470", VA = "0x544470", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0x544474", Offset = "0x544474", VA = "0x544474", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0x544478", Offset = "0x544478", VA = "0x544478", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0x54447C", Offset = "0x54447C", VA = "0x54447C", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0x544480", Offset = "0x544480", VA = "0x544480")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000199")]
		public class QueryResponse
		{
			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B6C", Offset = "0x272B6C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B7C", Offset = "0x272B7C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B8C", Offset = "0x272B8C")]
			private string <status>k__BackingField;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272B9C", Offset = "0x272B9C")]
			private string <price>k__BackingField;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BAC", Offset = "0x272BAC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BBC", Offset = "0x272BBC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170000A8")]
			public string order_id
			{
				[Token(Token = "0x600094A")]
				[Address(RVA = "0x5444B8", Offset = "0x5444B8", VA = "0x5444B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275E80", Offset = "0x275E80")]
				get
				{
					return null;
				}
				[Token(Token = "0x600094B")]
				[Address(RVA = "0x5444C0", Offset = "0x5444C0", VA = "0x5444C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275E90", Offset = "0x275E90")]
				set
				{
				}
			}

			[Token(Token = "0x170000A9")]
			public string purchase_id
			{
				[Token(Token = "0x600094C")]
				[Address(RVA = "0x5444C8", Offset = "0x5444C8", VA = "0x5444C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275EA0", Offset = "0x275EA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600094D")]
				[Address(RVA = "0x5444D0", Offset = "0x5444D0", VA = "0x5444D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275EB0", Offset = "0x275EB0")]
				set
				{
				}
			}

			[Token(Token = "0x170000AA")]
			public string status
			{
				[Token(Token = "0x600094E")]
				[Address(RVA = "0x5444D8", Offset = "0x5444D8", VA = "0x5444D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275EC0", Offset = "0x275EC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600094F")]
				[Address(RVA = "0x5444E0", Offset = "0x5444E0", VA = "0x5444E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275ED0", Offset = "0x275ED0")]
				set
				{
				}
			}

			[Token(Token = "0x170000AB")]
			public string price
			{
				[Token(Token = "0x6000950")]
				[Address(RVA = "0x5444E8", Offset = "0x5444E8", VA = "0x5444E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275EE0", Offset = "0x275EE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000951")]
				[Address(RVA = "0x5444F0", Offset = "0x5444F0", VA = "0x5444F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275EF0", Offset = "0x275EF0")]
				set
				{
				}
			}

			[Token(Token = "0x170000AC")]
			public string currency
			{
				[Token(Token = "0x6000952")]
				[Address(RVA = "0x5444F8", Offset = "0x5444F8", VA = "0x5444F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F00", Offset = "0x275F00")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000953")]
				[Address(RVA = "0x544500", Offset = "0x544500", VA = "0x544500")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F10", Offset = "0x275F10")]
				set
				{
				}
			}

			[Token(Token = "0x170000AD")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000954")]
				[Address(RVA = "0x544508", Offset = "0x544508", VA = "0x544508")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F20", Offset = "0x275F20")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000955")]
				[Address(RVA = "0x544510", Offset = "0x544510", VA = "0x544510")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F30", Offset = "0x275F30")]
				set
				{
				}
			}

			[Token(Token = "0x6000956")]
			[Address(RVA = "0x53FBAC", Offset = "0x53FBAC", VA = "0x53FBAC")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200019A")]
		public class QueryResponse2
		{
			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BCC", Offset = "0x272BCC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BDC", Offset = "0x272BDC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BEC", Offset = "0x272BEC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272BFC", Offset = "0x272BFC")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C0C", Offset = "0x272C0C")]
			private string <price>k__BackingField;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C1C", Offset = "0x272C1C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C2C", Offset = "0x272C2C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170000AE")]
			public string order_id
			{
				[Token(Token = "0x6000957")]
				[Address(RVA = "0x544520", Offset = "0x544520", VA = "0x544520")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F40", Offset = "0x275F40")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000958")]
				[Address(RVA = "0x544528", Offset = "0x544528", VA = "0x544528")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F50", Offset = "0x275F50")]
				set
				{
				}
			}

			[Token(Token = "0x170000AF")]
			public string app_id
			{
				[Token(Token = "0x6000959")]
				[Address(RVA = "0x544530", Offset = "0x544530", VA = "0x544530")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F60", Offset = "0x275F60")]
				get
				{
					return null;
				}
				[Token(Token = "0x600095A")]
				[Address(RVA = "0x544538", Offset = "0x544538", VA = "0x544538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F70", Offset = "0x275F70")]
				set
				{
				}
			}

			[Token(Token = "0x170000B0")]
			public string purchase_id
			{
				[Token(Token = "0x600095B")]
				[Address(RVA = "0x544540", Offset = "0x544540", VA = "0x544540")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F80", Offset = "0x275F80")]
				get
				{
					return null;
				}
				[Token(Token = "0x600095C")]
				[Address(RVA = "0x544548", Offset = "0x544548", VA = "0x544548")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275F90", Offset = "0x275F90")]
				set
				{
				}
			}

			[Token(Token = "0x170000B1")]
			public string user_data
			{
				[Token(Token = "0x600095D")]
				[Address(RVA = "0x544550", Offset = "0x544550", VA = "0x544550")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FA0", Offset = "0x275FA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600095E")]
				[Address(RVA = "0x544558", Offset = "0x544558", VA = "0x544558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FB0", Offset = "0x275FB0")]
				set
				{
				}
			}

			[Token(Token = "0x170000B2")]
			public string price
			{
				[Token(Token = "0x600095F")]
				[Address(RVA = "0x544560", Offset = "0x544560", VA = "0x544560")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FC0", Offset = "0x275FC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000960")]
				[Address(RVA = "0x544568", Offset = "0x544568", VA = "0x544568")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FD0", Offset = "0x275FD0")]
				set
				{
				}
			}

			[Token(Token = "0x170000B3")]
			public string currency
			{
				[Token(Token = "0x6000961")]
				[Address(RVA = "0x544570", Offset = "0x544570", VA = "0x544570")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FE0", Offset = "0x275FE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000962")]
				[Address(RVA = "0x544578", Offset = "0x544578", VA = "0x544578")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x275FF0", Offset = "0x275FF0")]
				set
				{
				}
			}

			[Token(Token = "0x170000B4")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000963")]
				[Address(RVA = "0x544580", Offset = "0x544580", VA = "0x544580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276000", Offset = "0x276000")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000964")]
				[Address(RVA = "0x544588", Offset = "0x544588", VA = "0x544588")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276010", Offset = "0x276010")]
				set
				{
				}
			}

			[Token(Token = "0x6000965")]
			[Address(RVA = "0x5411EC", Offset = "0x5411EC", VA = "0x5411EC")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x200019B")]
		public class QueryListResponse
		{
			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C3C", Offset = "0x272C3C")]
			private int <total>k__BackingField;

			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C4C", Offset = "0x272C4C")]
			private int <from>k__BackingField;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C5C", Offset = "0x272C5C")]
			private int <to>k__BackingField;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x170000B5")]
			public int total
			{
				[Token(Token = "0x6000966")]
				[Address(RVA = "0x544488", Offset = "0x544488", VA = "0x544488")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276020", Offset = "0x276020")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000967")]
				[Address(RVA = "0x544490", Offset = "0x544490", VA = "0x544490")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276030", Offset = "0x276030")]
				set
				{
				}
			}

			[Token(Token = "0x170000B6")]
			public int from
			{
				[Token(Token = "0x6000968")]
				[Address(RVA = "0x544498", Offset = "0x544498", VA = "0x544498")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276040", Offset = "0x276040")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000969")]
				[Address(RVA = "0x5444A0", Offset = "0x5444A0", VA = "0x5444A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276050", Offset = "0x276050")]
				set
				{
				}
			}

			[Token(Token = "0x170000B7")]
			public int to
			{
				[Token(Token = "0x600096A")]
				[Address(RVA = "0x5444A8", Offset = "0x5444A8", VA = "0x5444A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276060", Offset = "0x276060")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600096B")]
				[Address(RVA = "0x5444B0", Offset = "0x5444B0", VA = "0x5444B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276070", Offset = "0x276070")]
				set
				{
				}
			}

			[Token(Token = "0x600096C")]
			[Address(RVA = "0x5411F4", Offset = "0x5411F4", VA = "0x5411F4")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x200019C")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C6C", Offset = "0x272C6C")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C7C", Offset = "0x272C7C")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C8C", Offset = "0x272C8C")]
			private string <status>k__BackingField;

			[Token(Token = "0x170000B8")]
			public long create_time
			{
				[Token(Token = "0x600096D")]
				[Address(RVA = "0x544610", Offset = "0x544610", VA = "0x544610")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276080", Offset = "0x276080")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600096E")]
				[Address(RVA = "0x544618", Offset = "0x544618", VA = "0x544618")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276090", Offset = "0x276090")]
				set
				{
				}
			}

			[Token(Token = "0x170000B9")]
			public string payment_method
			{
				[Token(Token = "0x600096F")]
				[Address(RVA = "0x544628", Offset = "0x544628", VA = "0x544628")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760A0", Offset = "0x2760A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000970")]
				[Address(RVA = "0x544630", Offset = "0x544630", VA = "0x544630")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760B0", Offset = "0x2760B0")]
				set
				{
				}
			}

			[Token(Token = "0x170000BA")]
			public string status
			{
				[Token(Token = "0x6000971")]
				[Address(RVA = "0x544638", Offset = "0x544638", VA = "0x544638")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760C0", Offset = "0x2760C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000972")]
				[Address(RVA = "0x544640", Offset = "0x544640", VA = "0x544640")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760D0", Offset = "0x2760D0")]
				set
				{
				}
			}

			[Token(Token = "0x6000973")]
			[Address(RVA = "0x544648", Offset = "0x544648", VA = "0x544648")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x200019D")]
		public class StatusDetail
		{
			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272C9C", Offset = "0x272C9C")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CAC", Offset = "0x272CAC")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CBC", Offset = "0x272CBC")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x170000BB")]
			public long date_next_charge
			{
				[Token(Token = "0x6000974")]
				[Address(RVA = "0x5445D0", Offset = "0x5445D0", VA = "0x5445D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760E0", Offset = "0x2760E0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000975")]
				[Address(RVA = "0x5445D8", Offset = "0x5445D8", VA = "0x5445D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2760F0", Offset = "0x2760F0")]
				set
				{
				}
			}

			[Token(Token = "0x170000BC")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6000976")]
				[Address(RVA = "0x5445E8", Offset = "0x5445E8", VA = "0x5445E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276100", Offset = "0x276100")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000977")]
				[Address(RVA = "0x5445F0", Offset = "0x5445F0", VA = "0x5445F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276110", Offset = "0x276110")]
				set
				{
				}
			}

			[Token(Token = "0x170000BD")]
			public string cancel_reason
			{
				[Token(Token = "0x6000978")]
				[Address(RVA = "0x5445F8", Offset = "0x5445F8", VA = "0x5445F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276120", Offset = "0x276120")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000979")]
				[Address(RVA = "0x544600", Offset = "0x544600", VA = "0x544600")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276130", Offset = "0x276130")]
				set
				{
				}
			}

			[Token(Token = "0x600097A")]
			[Address(RVA = "0x544608", Offset = "0x544608", VA = "0x544608")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x200019E")]
		public class TimePeriod
		{
			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CCC", Offset = "0x272CCC")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CDC", Offset = "0x272CDC")]
			private int <value>k__BackingField;

			[Token(Token = "0x170000BE")]
			public string time_type
			{
				[Token(Token = "0x600097B")]
				[Address(RVA = "0x544730", Offset = "0x544730", VA = "0x544730")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276140", Offset = "0x276140")]
				get
				{
					return null;
				}
				[Token(Token = "0x600097C")]
				[Address(RVA = "0x544738", Offset = "0x544738", VA = "0x544738")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276150", Offset = "0x276150")]
				set
				{
				}
			}

			[Token(Token = "0x170000BF")]
			public int value
			{
				[Token(Token = "0x600097D")]
				[Address(RVA = "0x544740", Offset = "0x544740", VA = "0x544740")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276160", Offset = "0x276160")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600097E")]
				[Address(RVA = "0x544748", Offset = "0x544748", VA = "0x544748")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276170", Offset = "0x276170")]
				set
				{
				}
			}

			[Token(Token = "0x600097F")]
			[Address(RVA = "0x544750", Offset = "0x544750", VA = "0x544750")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x200019F")]
		public class Subscription
		{
			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CEC", Offset = "0x272CEC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272CFC", Offset = "0x272CFC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D0C", Offset = "0x272D0C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D1C", Offset = "0x272D1C")]
			private string <price>k__BackingField;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D2C", Offset = "0x272D2C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D3C", Offset = "0x272D3C")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D4C", Offset = "0x272D4C")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D5C", Offset = "0x272D5C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D6C", Offset = "0x272D6C")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D7C", Offset = "0x272D7C")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D8C", Offset = "0x272D8C")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272D9C", Offset = "0x272D9C")]
			private string <status>k__BackingField;

			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272DAC", Offset = "0x272DAC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x170000C0")]
			public string app_id
			{
				[Token(Token = "0x6000980")]
				[Address(RVA = "0x544650", Offset = "0x544650", VA = "0x544650")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276180", Offset = "0x276180")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000981")]
				[Address(RVA = "0x544658", Offset = "0x544658", VA = "0x544658")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276190", Offset = "0x276190")]
				set
				{
				}
			}

			[Token(Token = "0x170000C1")]
			public string order_id
			{
				[Token(Token = "0x6000982")]
				[Address(RVA = "0x544660", Offset = "0x544660", VA = "0x544660")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761A0", Offset = "0x2761A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000983")]
				[Address(RVA = "0x544668", Offset = "0x544668", VA = "0x544668")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761B0", Offset = "0x2761B0")]
				set
				{
				}
			}

			[Token(Token = "0x170000C2")]
			public string subscription_id
			{
				[Token(Token = "0x6000984")]
				[Address(RVA = "0x544670", Offset = "0x544670", VA = "0x544670")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761C0", Offset = "0x2761C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000985")]
				[Address(RVA = "0x544678", Offset = "0x544678", VA = "0x544678")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761D0", Offset = "0x2761D0")]
				set
				{
				}
			}

			[Token(Token = "0x170000C3")]
			public string price
			{
				[Token(Token = "0x6000986")]
				[Address(RVA = "0x544680", Offset = "0x544680", VA = "0x544680")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761E0", Offset = "0x2761E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000987")]
				[Address(RVA = "0x544688", Offset = "0x544688", VA = "0x544688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2761F0", Offset = "0x2761F0")]
				set
				{
				}
			}

			[Token(Token = "0x170000C4")]
			public string currency
			{
				[Token(Token = "0x6000988")]
				[Address(RVA = "0x544690", Offset = "0x544690", VA = "0x544690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276200", Offset = "0x276200")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000989")]
				[Address(RVA = "0x544698", Offset = "0x544698", VA = "0x544698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276210", Offset = "0x276210")]
				set
				{
				}
			}

			[Token(Token = "0x170000C5")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x600098A")]
				[Address(RVA = "0x5446A0", Offset = "0x5446A0", VA = "0x5446A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276220", Offset = "0x276220")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600098B")]
				[Address(RVA = "0x5446A8", Offset = "0x5446A8", VA = "0x5446A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276230", Offset = "0x276230")]
				set
				{
				}
			}

			[Token(Token = "0x170000C6")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x600098C")]
				[Address(RVA = "0x5446B8", Offset = "0x5446B8", VA = "0x5446B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276240", Offset = "0x276240")]
				get
				{
					return null;
				}
				[Token(Token = "0x600098D")]
				[Address(RVA = "0x5446C0", Offset = "0x5446C0", VA = "0x5446C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276250", Offset = "0x276250")]
				set
				{
				}
			}

			[Token(Token = "0x170000C7")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x600098E")]
				[Address(RVA = "0x5446C8", Offset = "0x5446C8", VA = "0x5446C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276260", Offset = "0x276260")]
				get
				{
					return null;
				}
				[Token(Token = "0x600098F")]
				[Address(RVA = "0x5446D0", Offset = "0x5446D0", VA = "0x5446D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276270", Offset = "0x276270")]
				set
				{
				}
			}

			[Token(Token = "0x170000C8")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6000990")]
				[Address(RVA = "0x5446D8", Offset = "0x5446D8", VA = "0x5446D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276280", Offset = "0x276280")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000991")]
				[Address(RVA = "0x5446E0", Offset = "0x5446E0", VA = "0x5446E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276290", Offset = "0x276290")]
				set
				{
				}
			}

			[Token(Token = "0x170000C9")]
			public string plan_id
			{
				[Token(Token = "0x6000992")]
				[Address(RVA = "0x5446E8", Offset = "0x5446E8", VA = "0x5446E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762A0", Offset = "0x2762A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000993")]
				[Address(RVA = "0x5446F0", Offset = "0x5446F0", VA = "0x5446F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762B0", Offset = "0x2762B0")]
				set
				{
				}
			}

			[Token(Token = "0x170000CA")]
			public string plan_name
			{
				[Token(Token = "0x6000994")]
				[Address(RVA = "0x5446F8", Offset = "0x5446F8", VA = "0x5446F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762C0", Offset = "0x2762C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000995")]
				[Address(RVA = "0x544700", Offset = "0x544700", VA = "0x544700")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762D0", Offset = "0x2762D0")]
				set
				{
				}
			}

			[Token(Token = "0x170000CB")]
			public string status
			{
				[Token(Token = "0x6000996")]
				[Address(RVA = "0x544708", Offset = "0x544708", VA = "0x544708")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762E0", Offset = "0x2762E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000997")]
				[Address(RVA = "0x544710", Offset = "0x544710", VA = "0x544710")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2762F0", Offset = "0x2762F0")]
				set
				{
				}
			}

			[Token(Token = "0x170000CC")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6000998")]
				[Address(RVA = "0x544718", Offset = "0x544718", VA = "0x544718")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276300", Offset = "0x276300")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000999")]
				[Address(RVA = "0x544720", Offset = "0x544720", VA = "0x544720")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276310", Offset = "0x276310")]
				set
				{
				}
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x544728", Offset = "0x544728", VA = "0x544728")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20001A0")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272DBC", Offset = "0x272DBC")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272DCC", Offset = "0x272DCC")]
			private string <message>k__BackingField;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272DDC", Offset = "0x272DDC")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170000CD")]
			public int statusCode
			{
				[Token(Token = "0x600099B")]
				[Address(RVA = "0x544598", Offset = "0x544598", VA = "0x544598")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276320", Offset = "0x276320")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600099C")]
				[Address(RVA = "0x5445A0", Offset = "0x5445A0", VA = "0x5445A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276330", Offset = "0x276330")]
				set
				{
				}
			}

			[Token(Token = "0x170000CE")]
			public string message
			{
				[Token(Token = "0x600099D")]
				[Address(RVA = "0x5445A8", Offset = "0x5445A8", VA = "0x5445A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276340", Offset = "0x276340")]
				get
				{
					return null;
				}
				[Token(Token = "0x600099E")]
				[Address(RVA = "0x5445B0", Offset = "0x5445B0", VA = "0x5445B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276350", Offset = "0x276350")]
				set
				{
				}
			}

			[Token(Token = "0x170000CF")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600099F")]
				[Address(RVA = "0x5445B8", Offset = "0x5445B8", VA = "0x5445B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276360", Offset = "0x276360")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009A0")]
				[Address(RVA = "0x5445C0", Offset = "0x5445C0", VA = "0x5445C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276370", Offset = "0x276370")]
				set
				{
				}
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x5445C8", Offset = "0x5445C8", VA = "0x5445C8")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x84B640", Offset = "0x84B640", VA = "0x84B640")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275904", Offset = "0x275904")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x84BEBC", Offset = "0x84BEBC", VA = "0x84BEBC")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x84B6B8", Offset = "0x84B6B8", VA = "0x84B6B8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275970", Offset = "0x275970")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x84C1E4", Offset = "0x84C1E4", VA = "0x84C1E4")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x84B730", Offset = "0x84B730", VA = "0x84B730")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2759DC", Offset = "0x2759DC")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x84C4F8", Offset = "0x84C4F8", VA = "0x84C4F8")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x84B7A8", Offset = "0x84B7A8", VA = "0x84B7A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275A48", Offset = "0x275A48")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x84C86C", Offset = "0x84C86C", VA = "0x84C86C")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x84B820", Offset = "0x84B820", VA = "0x84B820")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275AB4", Offset = "0x275AB4")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x84CB80", Offset = "0x84CB80", VA = "0x84CB80")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x84B898", Offset = "0x84B898", VA = "0x84B898")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275B20", Offset = "0x275B20")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x84CE94", Offset = "0x84CE94", VA = "0x84CE94")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x84B910", Offset = "0x84B910", VA = "0x84B910")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275B8C", Offset = "0x275B8C")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x84D148", Offset = "0x84D148", VA = "0x84D148")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x84B988", Offset = "0x84B988", VA = "0x84B988")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275BF8", Offset = "0x275BF8")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x84D3FC", Offset = "0x84D3FC", VA = "0x84D3FC")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x84BA00", Offset = "0x84BA00", VA = "0x84BA00")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275C64", Offset = "0x275C64")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x84D9B8", Offset = "0x84D9B8", VA = "0x84D9B8")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x84BA78", Offset = "0x84BA78", VA = "0x84BA78")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275CD0", Offset = "0x275CD0")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x84DCCC", Offset = "0x84DCCC", VA = "0x84DCCC")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x84BAF0", Offset = "0x84BAF0", VA = "0x84BAF0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275D3C", Offset = "0x275D3C")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x84DFE0", Offset = "0x84DFE0", VA = "0x84DFE0")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x84BB68", Offset = "0x84BB68", VA = "0x84BB68")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275DA8", Offset = "0x275DA8")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x84E2F4", Offset = "0x84E2F4", VA = "0x84E2F4")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x84BBE0", Offset = "0x84BBE0", VA = "0x84BBE0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x275E14", Offset = "0x275E14")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x84E5A8", Offset = "0x84E5A8", VA = "0x84E5A8")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x84E8BC", Offset = "0x84E8BC", VA = "0x84E8BC")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class DLC
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x89287C", Offset = "0x89287C", VA = "0x89287C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class Subscription
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xFA06E8", Offset = "0xFA06E8", VA = "0xFA06E8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x276380", Offset = "0x276380")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xFA0760", Offset = "0xFA0760", VA = "0xFA0760")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xFA0B20", Offset = "0xFA0B20", VA = "0xFA0B20")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xFA11E8", Offset = "0xFA11E8", VA = "0xFA11E8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class Deeplink
	{
		[Token(Token = "0x20001A4")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60009AF")]
			public abstract void OnSuccess();

			[Token(Token = "0x60009B0")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x53A4AC", Offset = "0x53A4AC", VA = "0x53A4AC")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x40009EC")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x89B638", Offset = "0x89B638", VA = "0x89B638")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2763EC", Offset = "0x2763EC")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x89B6AC", Offset = "0x89B6AC", VA = "0x89B6AC")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x89B9D8", Offset = "0x89B9D8", VA = "0x89B9D8")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x89BCBC", Offset = "0x89BCBC", VA = "0x89BCBC")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x89BD58", Offset = "0x89BD58", VA = "0x89BD58")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x89BFB4", Offset = "0x89BFB4", VA = "0x89BFB4")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x89C298", Offset = "0x89C298", VA = "0x89C298")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x89C3C4", Offset = "0x89C3C4", VA = "0x89C3C4")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	internal class Token
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xB48EA4", Offset = "0xB48EA4", VA = "0xB48EA4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x276458", Offset = "0x276458")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xB48F94", Offset = "0xB48F94", VA = "0xB48F94")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xB48F18", Offset = "0xB48F18", VA = "0xB48F18")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x2764C4", Offset = "0x2764C4")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xB49324", Offset = "0xB49324", VA = "0xB49324")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xB496B4", Offset = "0xB496B4", VA = "0xB496B4")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2706C8", Offset = "0x2706C8")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2706DC", Offset = "0x2706DC")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x2706F0", Offset = "0x2706F0")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x270704", Offset = "0x270704")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20001AA")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x40009F5")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x40009F6")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x40009F7")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x40009F8")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20001AB")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x40009FA")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x40009FB")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x40009FC")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x40009FD")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20001AC")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x40009FF")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000A00")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000A01")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20001AD")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000A03")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000A04")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000A05")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000A06")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20001AE")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000A08")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000A09")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000A0A")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20001AF")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000A0C")]
		UNKNOWN,
		[Token(Token = "0x4000A0D")]
		PAID,
		[Token(Token = "0x4000A0E")]
		REDEEM,
		[Token(Token = "0x4000A0F")]
		FREEE_TRIAL
	}
	[Token(Token = "0x20001B0")]
	internal enum ELocale
	{
		[Token(Token = "0x4000A11")]
		k_ELocaleUS,
		[Token(Token = "0x4000A12")]
		k_ELocaleDE,
		[Token(Token = "0x4000A13")]
		k_ELocaleJP,
		[Token(Token = "0x4000A14")]
		k_ELocaleKR,
		[Token(Token = "0x4000A15")]
		k_ELocaleRU,
		[Token(Token = "0x4000A16")]
		k_ELocaleCN,
		[Token(Token = "0x4000A17")]
		k_ELocaleTW,
		[Token(Token = "0x4000A18")]
		k_ELocaleFR
	}
	[Token(Token = "0x20001B1")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000A1A")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000A1B")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000A1C")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x20001B2")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x270718", Offset = "0x270718")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x20001B4")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x20001B5")]
	internal class Api
	{
		[Token(Token = "0x20001B6")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x535B64", Offset = "0x535B64", VA = "0x535B64")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x535C10", Offset = "0x535C10", VA = "0x535C10")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x535D58", Offset = "0x535D58", VA = "0x535D58")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x97DE40", Offset = "0x97DE40", VA = "0x97DE40")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x97E218", Offset = "0x97E218", VA = "0x97E218")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x97E448", Offset = "0x97E448", VA = "0x97E448")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x97DA0C", Offset = "0x97DA0C", VA = "0x97DA0C")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x97E844", Offset = "0x97E844", VA = "0x97E844")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	internal class User
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xB4D1AC", Offset = "0xB4D1AC", VA = "0xB4D1AC")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xB4D394", Offset = "0xB4D394", VA = "0xB4D394")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xB4D4F0", Offset = "0xB4D4F0", VA = "0xB4D4F0")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xB4D64C", Offset = "0xB4D64C", VA = "0xB4D64C")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xB4D77C", Offset = "0xB4D77C", VA = "0xB4D77C")]
		public User()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	internal class UserStats
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB4DBBC", Offset = "0xB4DBBC", VA = "0xB4DBBC")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xB4DF64", Offset = "0xB4DF64", VA = "0xB4DF64")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xB4E9F4", Offset = "0xB4E9F4", VA = "0xB4E9F4")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xB4E490", Offset = "0xB4E490", VA = "0xB4E490")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB4E644", Offset = "0xB4E644", VA = "0xB4E644")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB4E11C", Offset = "0xB4E11C", VA = "0xB4E11C")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xB4E2D0", Offset = "0xB4E2D0", VA = "0xB4E2D0")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xB4EBAC", Offset = "0xB4EBAC", VA = "0xB4EBAC")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xB4ECD0", Offset = "0xB4ECD0", VA = "0xB4ECD0")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xB4F2EC", Offset = "0xB4F2EC", VA = "0xB4F2EC")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xB4F410", Offset = "0xB4F410", VA = "0xB4F410")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xB4EF18", Offset = "0xB4EF18", VA = "0xB4EF18")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xB4F0CC", Offset = "0xB4F0CC", VA = "0xB4F0CC")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xB4EDF4", Offset = "0xB4EDF4", VA = "0xB4EDF4")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xB4F754", Offset = "0xB4F754", VA = "0xB4F754")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xB4FD38", Offset = "0xB4FD38", VA = "0xB4FD38")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xB4FFD8", Offset = "0xB4FFD8", VA = "0xB4FFD8")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xB50350", Offset = "0xB50350", VA = "0xB50350")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB5049C", Offset = "0xB5049C", VA = "0xB5049C")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB505E8", Offset = "0xB505E8", VA = "0xB505E8")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB50738", Offset = "0xB50738", VA = "0xB50738")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	internal class Deeplink
	{
		[Token(Token = "0x20001BA")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x53A4B4", Offset = "0x53A4B4", VA = "0x53A4B4")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x53A560", Offset = "0x53A560", VA = "0x53A560")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x53A614", Offset = "0x53A614", VA = "0x53A614")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x89B8A0", Offset = "0x89B8A0", VA = "0x89B8A0")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x89BA74", Offset = "0x89BA74", VA = "0x89BA74")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x89BDC4", Offset = "0x89BDC4", VA = "0x89BDC4")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x89C050", Offset = "0x89C050", VA = "0x89C050")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x89C29C", Offset = "0x89C29C", VA = "0x89C29C")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x89C3CC", Offset = "0x89C3CC", VA = "0x89C3CC")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	internal class IAPurchase
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x84BFF4", Offset = "0x84BFF4", VA = "0x84BFF4")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x84C308", Offset = "0x84C308", VA = "0x84C308")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x84C624", Offset = "0x84C624", VA = "0x84C624")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x84C990", Offset = "0x84C990", VA = "0x84C990")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x84CCA4", Offset = "0x84CCA4", VA = "0x84CCA4")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x84CFB0", Offset = "0x84CFB0", VA = "0x84CFB0")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x84D264", Offset = "0x84D264", VA = "0x84D264")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x84D558", Offset = "0x84D558", VA = "0x84D558")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x84DADC", Offset = "0x84DADC", VA = "0x84DADC")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x84DDF0", Offset = "0x84DDF0", VA = "0x84DDF0")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x84E104", Offset = "0x84E104", VA = "0x84E104")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x84E410", Offset = "0x84E410", VA = "0x84E410")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x84E6CC", Offset = "0x84E6CC", VA = "0x84E6CC")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x84E8C4", Offset = "0x84E8C4", VA = "0x84E8C4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	internal class Subscription
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xFA0984", Offset = "0xFA0984", VA = "0xFA0984")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xFA0D0C", Offset = "0xFA0D0C", VA = "0xFA0D0C")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xFA0E54", Offset = "0xFA0E54", VA = "0xFA0E54")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xFA0F9C", Offset = "0xFA0F9C", VA = "0xFA0F9C")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xFA11F0", Offset = "0xFA11F0", VA = "0xFA11F0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	internal class Token
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xB49188", Offset = "0xB49188", VA = "0xB49188")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xB49518", Offset = "0xB49518", VA = "0xB49518")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xB496BC", Offset = "0xB496BC", VA = "0xB496BC")]
		public Token()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	internal class Android
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x170000D0")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x97D304", Offset = "0x97D304", VA = "0x97D304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x97D3D4", Offset = "0x97D3D4", VA = "0x97D3D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x97D45C", Offset = "0x97D45C", VA = "0x97D45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x97C814", Offset = "0x97C814", VA = "0x97C814")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x97C9A4", Offset = "0x97C9A4", VA = "0x97C9A4")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x97CB34", Offset = "0x97CB34", VA = "0x97CB34")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x97CCC4", Offset = "0x97CCC4", VA = "0x97CCC4")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x97CE54", Offset = "0x97CE54", VA = "0x97CE54")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x97CFE4", Offset = "0x97CFE4", VA = "0x97CFE4")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x97D174", Offset = "0x97D174", VA = "0x97D174")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x97D460", Offset = "0x97D460", VA = "0x97D460")]
		public Android()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x97D468", Offset = "0x97D468", VA = "0x97D468")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x97D514", Offset = "0x97D514", VA = "0x97D514")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x97D5C0", Offset = "0x97D5C0", VA = "0x97D5C0")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x97D66C", Offset = "0x97D66C", VA = "0x97D66C")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x20001C0")]
	internal class Session
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x7180A0", Offset = "0x7180A0", VA = "0x7180A0")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x20001C1")]
	public class Logger
	{
		[Token(Token = "0x4000A2F")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Type _unityLogType;

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x7CDDF8", Offset = "0x7CDDF8", VA = "0x7CDDF8")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x7CE364", Offset = "0x7CE364", VA = "0x7CE364")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x7CDEF4", Offset = "0x7CDEF4", VA = "0x7CDEF4")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x7CE428", Offset = "0x7CE428", VA = "0x7CE428")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x7CE5C4", Offset = "0x7CE5C4", VA = "0x7CE5C4")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x20001C2")]
	public enum JsonType
	{
		[Token(Token = "0x4000A34")]
		None,
		[Token(Token = "0x4000A35")]
		Object,
		[Token(Token = "0x4000A36")]
		Array,
		[Token(Token = "0x4000A37")]
		String,
		[Token(Token = "0x4000A38")]
		Int,
		[Token(Token = "0x4000A39")]
		Long,
		[Token(Token = "0x4000A3A")]
		Double,
		[Token(Token = "0x4000A3B")]
		Boolean
	}
	[Token(Token = "0x20001C3")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170000D3")]
		bool IsArray
		{
			[Token(Token = "0x6000A22")]
			get;
		}

		[Token(Token = "0x170000D4")]
		bool IsBoolean
		{
			[Token(Token = "0x6000A23")]
			get;
		}

		[Token(Token = "0x170000D5")]
		bool IsDouble
		{
			[Token(Token = "0x6000A24")]
			get;
		}

		[Token(Token = "0x170000D6")]
		bool IsInt
		{
			[Token(Token = "0x6000A25")]
			get;
		}

		[Token(Token = "0x170000D7")]
		bool IsLong
		{
			[Token(Token = "0x6000A26")]
			get;
		}

		[Token(Token = "0x170000D8")]
		bool IsObject
		{
			[Token(Token = "0x6000A27")]
			get;
		}

		[Token(Token = "0x170000D9")]
		bool IsString
		{
			[Token(Token = "0x6000A28")]
			get;
		}

		[Token(Token = "0x6000A29")]
		bool GetBoolean();

		[Token(Token = "0x6000A2A")]
		double GetDouble();

		[Token(Token = "0x6000A2B")]
		int GetInt();

		[Token(Token = "0x6000A2C")]
		JsonType GetJsonType();

		[Token(Token = "0x6000A2D")]
		long GetLong();

		[Token(Token = "0x6000A2E")]
		string GetString();

		[Token(Token = "0x6000A2F")]
		void SetBoolean(bool val);

		[Token(Token = "0x6000A30")]
		void SetDouble(double val);

		[Token(Token = "0x6000A31")]
		void SetInt(int val);

		[Token(Token = "0x6000A32")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6000A33")]
		void SetLong(long val);

		[Token(Token = "0x6000A34")]
		void SetString(string val);

		[Token(Token = "0x6000A35")]
		string ToJson();

		[Token(Token = "0x6000A36")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x27072C", Offset = "0x27072C")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inst_boolean;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double inst_double;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int inst_int;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long inst_long;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string inst_string;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string json;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private JsonType type;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170000DA")]
		public int Count
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x8505EC", Offset = "0x8505EC", VA = "0x8505EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DB")]
		public bool IsArray
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x8507B4", Offset = "0x8507B4", VA = "0x8507B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x8507C8", Offset = "0x8507C8", VA = "0x8507C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DD")]
		public bool IsDouble
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x8507DC", Offset = "0x8507DC", VA = "0x8507DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		public bool IsInt
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x8507F0", Offset = "0x8507F0", VA = "0x8507F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public bool IsLong
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x850804", Offset = "0x850804", VA = "0x850804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public bool IsObject
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x850818", Offset = "0x850818", VA = "0x850818")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public bool IsString
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x85082C", Offset = "0x85082C", VA = "0x85082C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E2")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x850840", Offset = "0x850840", VA = "0x850840", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E3")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x850844", Offset = "0x850844", VA = "0x850844", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x850914", Offset = "0x850914", VA = "0x850914", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x8509E4", Offset = "0x8509E4", VA = "0x8509E4", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x850C6C", Offset = "0x850C6C", VA = "0x850C6C", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E7")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x850D3C", Offset = "0x850D3C", VA = "0x850D3C", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x8511A8", Offset = "0x8511A8", VA = "0x8511A8", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x851614", Offset = "0x851614", VA = "0x851614", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x851628", Offset = "0x851628", VA = "0x851628", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x85163C", Offset = "0x85163C", VA = "0x85163C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x851650", Offset = "0x851650", VA = "0x851650", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x851664", Offset = "0x851664", VA = "0x851664", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EE")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x851678", Offset = "0x851678", VA = "0x851678", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x85168C", Offset = "0x85168C", VA = "0x85168C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x8516A0", Offset = "0x8516A0", VA = "0x8516A0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x8518C8", Offset = "0x8518C8", VA = "0x8518C8", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x851998", Offset = "0x851998", VA = "0x851998", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x851A70", Offset = "0x851A70", VA = "0x851A70", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x852094", Offset = "0x852094", VA = "0x852094", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x85218C", Offset = "0x85218C", VA = "0x85218C", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x852414", Offset = "0x852414", VA = "0x852414", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x8524EC", Offset = "0x8524EC", VA = "0x8524EC", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public JsonData Item
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x852860", Offset = "0x852860", VA = "0x852860")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x851C10", Offset = "0x851C10", VA = "0x851C10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public JsonData Item
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x852938", Offset = "0x852938", VA = "0x852938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x852520", Offset = "0x852520", VA = "0x852520")]
			set
			{
			}
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x852AE0", Offset = "0x852AE0", VA = "0x852AE0")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x852AE8", Offset = "0x852AE8", VA = "0x852AE8")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x852B10", Offset = "0x852B10", VA = "0x852B10")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x852B40", Offset = "0x852B40", VA = "0x852B40")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x852B68", Offset = "0x852B68", VA = "0x852B68")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x852B98", Offset = "0x852B98", VA = "0x852B98")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x852E08", Offset = "0x852E08", VA = "0x852E08")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x852E3C", Offset = "0x852E3C", VA = "0x852E3C")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x852EAC", Offset = "0x852EAC", VA = "0x852EAC")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x852F24", Offset = "0x852F24", VA = "0x852F24")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x852F94", Offset = "0x852F94", VA = "0x852F94")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x85300C", Offset = "0x85300C", VA = "0x85300C")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x853088", Offset = "0x853088", VA = "0x853088")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x853108", Offset = "0x853108", VA = "0x853108")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x85318C", Offset = "0x85318C", VA = "0x85318C")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x85320C", Offset = "0x85320C", VA = "0x85320C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x85328C", Offset = "0x85328C", VA = "0x85328C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x85330C", Offset = "0x85330C", VA = "0x85330C", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x8533EC", Offset = "0x8533EC", VA = "0x8533EC", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x85361C", Offset = "0x85361C", VA = "0x85361C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x853798", Offset = "0x853798", VA = "0x853798", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x853870", Offset = "0x853870", VA = "0x853870", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x853928", Offset = "0x853928", VA = "0x853928", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x853C6C", Offset = "0x853C6C", VA = "0x853C6C", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x853D3C", Offset = "0x853D3C", VA = "0x853D3C", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x853DAC", Offset = "0x853DAC", VA = "0x853DAC", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x853E20", Offset = "0x853E20", VA = "0x853E20", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x853E90", Offset = "0x853E90", VA = "0x853E90", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x853F00", Offset = "0x853F00", VA = "0x853F00", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x853F70", Offset = "0x853F70", VA = "0x853F70", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x853F8C", Offset = "0x853F8C", VA = "0x853F8C", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x853FB0", Offset = "0x853FB0", VA = "0x853FB0", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x853FCC", Offset = "0x853FCC", VA = "0x853FCC", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x853FF0", Offset = "0x853FF0", VA = "0x853FF0", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x854028", Offset = "0x854028", VA = "0x854028", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x854124", Offset = "0x854124", VA = "0x854124", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x854188", Offset = "0x854188", VA = "0x854188", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x854284", Offset = "0x854284", VA = "0x854284", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x854368", Offset = "0x854368", VA = "0x854368", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x854440", Offset = "0x854440", VA = "0x854440", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x854518", Offset = "0x854518", VA = "0x854518", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x854614", Offset = "0x854614", VA = "0x854614", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x854700", Offset = "0x854700", VA = "0x854700", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8547EC", Offset = "0x8547EC", VA = "0x8547EC", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8548F8", Offset = "0x8548F8", VA = "0x8548F8", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x854A88", Offset = "0x854A88", VA = "0x854A88", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8506BC", Offset = "0x8506BC", VA = "0x8506BC")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x850AB4", Offset = "0x850AB4", VA = "0x850AB4")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x851770", Offset = "0x851770", VA = "0x851770")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x851B6C", Offset = "0x851B6C", VA = "0x851B6C")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x854CA8", Offset = "0x854CA8", VA = "0x854CA8")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x85418C", Offset = "0x85418C", VA = "0x85418C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x85661C", Offset = "0x85661C", VA = "0x85661C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x856764", Offset = "0x856764", VA = "0x856764", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8568A8", Offset = "0x8568A8", VA = "0x8568A8", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8568B0", Offset = "0x8568B0", VA = "0x8568B0", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x85402C", Offset = "0x85402C", VA = "0x85402C")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x854128", Offset = "0x854128", VA = "0x854128")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x856B28", Offset = "0x856B28", VA = "0x856B28", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001C5")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170000F7")]
		public object Current
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x779644", Offset = "0x779644", VA = "0x779644", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x7796B8", Offset = "0x7796B8", VA = "0x7796B8", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170000F9")]
		public object Key
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x7797CC", Offset = "0x7797CC", VA = "0x7797CC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public object Value
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x7798B4", Offset = "0x7798B4", VA = "0x7798B4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x77999C", Offset = "0x77999C", VA = "0x77999C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x7799C8", Offset = "0x7799C8", VA = "0x7799C8", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x779A90", Offset = "0x779A90", VA = "0x779A90", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x856C38", Offset = "0x856C38", VA = "0x856C38")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x856C40", Offset = "0x856C40", VA = "0x856C40")]
		internal JsonException(LitJson.ParserToken token)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x856CE4", Offset = "0x856CE4", VA = "0x856CE4")]
		internal JsonException(LitJson.ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x856D90", Offset = "0x856D90", VA = "0x856D90")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x856E34", Offset = "0x856E34", VA = "0x856E34")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x856EE0", Offset = "0x856EE0", VA = "0x856EE0")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x856EE8", Offset = "0x856EE8", VA = "0x856EE8")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x20001C7")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsField;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type Type;
	}
	[Token(Token = "0x20001C8")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_array;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private bool is_list;

		[Token(Token = "0x170000FB")]
		public Type ElementType
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x982A38", Offset = "0x982A38", VA = "0x982A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x982B14", Offset = "0x982B14", VA = "0x982B14")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public bool IsArray
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x982B1C", Offset = "0x982B1C", VA = "0x982B1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x982B24", Offset = "0x982B24", VA = "0x982B24")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public bool IsList
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x982B2C", Offset = "0x982B2C", VA = "0x982B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x982B34", Offset = "0x982B34", VA = "0x982B34")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001C9")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_dictionary;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IDictionary<string, LitJson.PropertyMetadata> properties;

		[Token(Token = "0x170000FE")]
		public Type ElementType
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x776CB8", Offset = "0x776CB8", VA = "0x776CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x776D94", Offset = "0x776D94", VA = "0x776D94")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public bool IsDictionary
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x776D9C", Offset = "0x776D9C", VA = "0x776D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x776DA4", Offset = "0x776DA4", VA = "0x776DA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public IDictionary<string, LitJson.PropertyMetadata> Properties
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x776DAC", Offset = "0x776DAC", VA = "0x776DAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x776DB4", Offset = "0x776DB4", VA = "0x776DB4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001CA")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20001CB")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20001CC")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20001CD")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20001CE")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20001CF")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20001D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270760", Offset = "0x270760")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static LitJson.ExporterFunc <>9__23_0;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static LitJson.ExporterFunc <>9__23_1;

			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static LitJson.ExporterFunc <>9__23_2;

			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static LitJson.ExporterFunc <>9__23_3;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static LitJson.ExporterFunc <>9__23_4;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static LitJson.ExporterFunc <>9__23_5;

			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static LitJson.ExporterFunc <>9__23_6;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static LitJson.ExporterFunc <>9__23_7;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static LitJson.ExporterFunc <>9__23_8;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static LitJson.ExporterFunc <>9__23_9;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static LitJson.ImporterFunc <>9__24_0;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static LitJson.ImporterFunc <>9__24_1;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static LitJson.ImporterFunc <>9__24_2;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static LitJson.ImporterFunc <>9__24_3;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static LitJson.ImporterFunc <>9__24_4;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static LitJson.ImporterFunc <>9__24_5;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static LitJson.ImporterFunc <>9__24_6;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static LitJson.ImporterFunc <>9__24_7;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static LitJson.ImporterFunc <>9__24_8;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static LitJson.ImporterFunc <>9__24_9;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static LitJson.ImporterFunc <>9__24_10;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static LitJson.ImporterFunc <>9__24_11;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static LitJson.ImporterFunc <>9__24_12;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x544C00", Offset = "0x544C00", VA = "0x544C00")]
			public <>c()
			{
			}

			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x544C08", Offset = "0x544C08", VA = "0x544C08")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x544CF8", Offset = "0x544CF8", VA = "0x544CF8")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x544DE8", Offset = "0x544DE8", VA = "0x544DE8")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x544F28", Offset = "0x544F28", VA = "0x544F28")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x544FDC", Offset = "0x544FDC", VA = "0x544FDC")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x5450CC", Offset = "0x5450CC", VA = "0x5450CC")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x5451BC", Offset = "0x5451BC", VA = "0x5451BC")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x5452AC", Offset = "0x5452AC", VA = "0x5452AC")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x5453B0", Offset = "0x5453B0", VA = "0x5453B0")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x545460", Offset = "0x545460", VA = "0x545460")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x545518", Offset = "0x545518", VA = "0x545518")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x54561C", Offset = "0x54561C", VA = "0x54561C")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x545720", Offset = "0x545720", VA = "0x545720")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x545824", Offset = "0x545824", VA = "0x545824")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x545928", Offset = "0x545928", VA = "0x545928")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x545A2C", Offset = "0x545A2C", VA = "0x545A2C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x545B30", Offset = "0x545B30", VA = "0x545B30")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x545C34", Offset = "0x545C34", VA = "0x545C34")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x545D40", Offset = "0x545D40", VA = "0x545D40")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x545E44", Offset = "0x545E44", VA = "0x545E44")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x545F64", Offset = "0x545F64", VA = "0x545F64")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x546068", Offset = "0x546068", VA = "0x546068")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x546160", Offset = "0x546160", VA = "0x546160")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x5462AC", Offset = "0x5462AC", VA = "0x5462AC")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x54630C", Offset = "0x54630C", VA = "0x54630C")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x54636C", Offset = "0x54636C", VA = "0x54636C")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20001D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270770", Offset = "0x270770")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6000AF8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6000AF9")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20001D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270780", Offset = "0x270780")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6000AFA")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6000AFB")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<Type, LitJson.ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IDictionary<Type, LitJson.ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, LitJson.ArrayMetadata> array_metadata;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, LitJson.ObjectMetadata> object_metadata;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, IList<LitJson.PropertyMetadata>> type_properties;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x856EF0", Offset = "0x856EF0", VA = "0x856EF0")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x859A7C", Offset = "0x859A7C", VA = "0x859A7C")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x85A040", Offset = "0x85A040", VA = "0x85A040")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x85A990", Offset = "0x85A990", VA = "0x85A990")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x85B050", Offset = "0x85B050", VA = "0x85B050")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x85BB84", Offset = "0x85BB84", VA = "0x85BB84")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x85D67C", Offset = "0x85D67C", VA = "0x85D67C")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x857438", Offset = "0x857438", VA = "0x857438")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x858760", Offset = "0x858760", VA = "0x858760")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x85DF44", Offset = "0x85DF44", VA = "0x85DF44")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, LitJson.ImporterFunc>> table, Type json_type, Type value_type, LitJson.ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x85E21C", Offset = "0x85E21C", VA = "0x85E21C")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x85FF80", Offset = "0x85FF80", VA = "0x85FF80")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x860260", Offset = "0x860260", VA = "0x860260")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8602EC", Offset = "0x8602EC", VA = "0x8602EC")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x860528", Offset = "0x860528", VA = "0x860528")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x860724", Offset = "0x860724", VA = "0x860724")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000AD3")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000AD4")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8604AC", Offset = "0x8604AC", VA = "0x8604AC")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8608E4", Offset = "0x8608E4", VA = "0x8608E4")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000AD8")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x860A08", Offset = "0x860A08", VA = "0x860A08")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x860B10", Offset = "0x860B10", VA = "0x860B10")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x860C18", Offset = "0x860C18", VA = "0x860C18")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public enum JsonToken
	{
		[Token(Token = "0x4000A7E")]
		None,
		[Token(Token = "0x4000A7F")]
		ObjectStart,
		[Token(Token = "0x4000A80")]
		PropertyName,
		[Token(Token = "0x4000A81")]
		ObjectEnd,
		[Token(Token = "0x4000A82")]
		ArrayStart,
		[Token(Token = "0x4000A83")]
		ArrayEnd,
		[Token(Token = "0x4000A84")]
		Int,
		[Token(Token = "0x4000A85")]
		Long,
		[Token(Token = "0x4000A86")]
		Double,
		[Token(Token = "0x4000A87")]
		String,
		[Token(Token = "0x4000A88")]
		Boolean,
		[Token(Token = "0x4000A89")]
		Null
	}
	[Token(Token = "0x20001D4")]
	public class JsonReader
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int current_input;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int current_symbol;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool end_of_json;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool end_of_input;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LitJson.Lexer lexer;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool parser_in_string;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool parser_return;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool read_started;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextReader reader;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool reader_is_owned;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object token_value;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private JsonToken token;

		[Token(Token = "0x17000101")]
		public bool AllowComments
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x860C20", Offset = "0x860C20", VA = "0x860C20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x860C40", Offset = "0x860C40", VA = "0x860C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x860C64", Offset = "0x860C64", VA = "0x860C64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x860C84", Offset = "0x860C84", VA = "0x860C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x860CA8", Offset = "0x860CA8", VA = "0x860CA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x860CB0", Offset = "0x860CB0", VA = "0x860CB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public JsonToken Token
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x860CB8", Offset = "0x860CB8", VA = "0x860CB8")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000106")]
		public object Value
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x860CC0", Offset = "0x860CC0", VA = "0x860CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x860CC8", Offset = "0x860CC8", VA = "0x860CC8")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x860990", Offset = "0x860990", VA = "0x860990")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x86071C", Offset = "0x86071C", VA = "0x86071C")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x8615A0", Offset = "0x8615A0", VA = "0x8615A0")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x860CCC", Offset = "0x860CCC", VA = "0x860CCC")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x8618E4", Offset = "0x8618E4", VA = "0x8618E4")]
		private static void TableAddCol(LitJson.ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x861780", Offset = "0x861780", VA = "0x861780")]
		private static void TableAddRow(LitJson.ParserToken rule)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x861AA4", Offset = "0x861AA4", VA = "0x861AA4")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x861CA0", Offset = "0x861CA0", VA = "0x861CA0")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x861EB0", Offset = "0x861EB0", VA = "0x861EB0")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x861F34", Offset = "0x861F34", VA = "0x861F34")]
		public void Close()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x85D0D0", Offset = "0x85D0D0", VA = "0x85D0D0")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D5")]
	internal enum Condition
	{
		[Token(Token = "0x4000A99")]
		InArray,
		[Token(Token = "0x4000A9A")]
		InObject,
		[Token(Token = "0x4000A9B")]
		NotAProperty,
		[Token(Token = "0x4000A9C")]
		Property,
		[Token(Token = "0x4000A9D")]
		Value
	}
	[Token(Token = "0x20001D6")]
	internal class WriterContext
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool InArray;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool InObject;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool ExpectingValue;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Padding;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xB60F70", Offset = "0xB60F70", VA = "0xB60F70")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class JsonWriter
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private LitJson.WriterContext context;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Stack<LitJson.WriterContext> ctx_stack;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool has_reached_end;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private char[] hex_seq;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int indentation;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int indent_value;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool pretty_print;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool validate;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextWriter writer;

		[Token(Token = "0x17000107")]
		public int IndentValue
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x861F9C", Offset = "0x861F9C", VA = "0x861F9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x861FA4", Offset = "0x861FA4", VA = "0x861FA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x861FD0", Offset = "0x861FD0", VA = "0x861FD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x861FD8", Offset = "0x861FD8", VA = "0x861FD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x861FE0", Offset = "0x861FE0", VA = "0x861FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public bool Validate
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x861FE8", Offset = "0x861FE8", VA = "0x861FE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x861FF0", Offset = "0x861FF0", VA = "0x861FF0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x861FF8", Offset = "0x861FF8", VA = "0x861FF8")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x85736C", Offset = "0x85736C", VA = "0x85736C")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x8621C0", Offset = "0x8621C0", VA = "0x8621C0")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x856A94", Offset = "0x856A94", VA = "0x856A94")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x862234", Offset = "0x862234", VA = "0x862234")]
		private void DoValidation(LitJson.Condition cond)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x86205C", Offset = "0x86205C", VA = "0x86205C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x862504", Offset = "0x862504", VA = "0x862504")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x862574", Offset = "0x862574", VA = "0x862574")]
		private void Indent()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x862590", Offset = "0x862590", VA = "0x862590")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x86263C", Offset = "0x86263C", VA = "0x86263C")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x862644", Offset = "0x862644", VA = "0x862644")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x862710", Offset = "0x862710", VA = "0x862710")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x862AF0", Offset = "0x862AF0", VA = "0x862AF0")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x862B0C", Offset = "0x862B0C", VA = "0x862B0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x860140", Offset = "0x860140", VA = "0x860140")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x855B30", Offset = "0x855B30", VA = "0x855B30")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x862B84", Offset = "0x862B84", VA = "0x862B84")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x855BF0", Offset = "0x855BF0", VA = "0x855BF0")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x855D90", Offset = "0x855D90", VA = "0x855D90")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x855E98", Offset = "0x855E98", VA = "0x855E98")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x855A8C", Offset = "0x855A8C", VA = "0x855A8C")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x85FE70", Offset = "0x85FE70", VA = "0x85FE70")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x8560C8", Offset = "0x8560C8", VA = "0x8560C8")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x855FA8", Offset = "0x855FA8", VA = "0x855FA8")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x8564C0", Offset = "0x8564C0", VA = "0x8564C0")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x856224", Offset = "0x856224", VA = "0x856224")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x856344", Offset = "0x856344", VA = "0x856344")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	internal class FsmContext
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Return;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int NextState;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LitJson.Lexer L;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StateStack;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x8437C8", Offset = "0x8437C8", VA = "0x8437C8")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	internal class Lexer
	{
		[Token(Token = "0x20001DA")]
		private delegate bool StateHandler(LitJson.FsmContext ctx);

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool allow_comments;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool end_of_input;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private LitJson.FsmContext fsm_context;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int input_buffer;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int input_char;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextReader reader;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int state;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string string_value;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int token;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int unichar;

		[Token(Token = "0x1700010B")]
		public bool AllowComments
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x7C8FC4", Offset = "0x7C8FC4", VA = "0x7C8FC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x7C8FCC", Offset = "0x7C8FCC", VA = "0x7C8FCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x7C8FD4", Offset = "0x7C8FD4", VA = "0x7C8FD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x7C8FDC", Offset = "0x7C8FDC", VA = "0x7C8FDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x7C8FE4", Offset = "0x7C8FE4", VA = "0x7C8FE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public int Token
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x7C8FEC", Offset = "0x7C8FEC", VA = "0x7C8FEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010F")]
		public string StringValue
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x7C8FF4", Offset = "0x7C8FF4", VA = "0x7C8FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x7C8FFC", Offset = "0x7C8FFC", VA = "0x7C8FFC")]
		static Lexer()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x7CA100", Offset = "0x7CA100", VA = "0x7CA100")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x7CA214", Offset = "0x7CA214", VA = "0x7CA214")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x7C9000", Offset = "0x7C9000", VA = "0x7C9000")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x7CA2B0", Offset = "0x7CA2B0", VA = "0x7CA2B0")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x7CA3AC", Offset = "0x7CA3AC", VA = "0x7CA3AC")]
		private static bool State1(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x7CA6FC", Offset = "0x7CA6FC", VA = "0x7CA6FC")]
		private static bool State2(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x7CA838", Offset = "0x7CA838", VA = "0x7CA838")]
		private static bool State3(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x7CAA84", Offset = "0x7CAA84", VA = "0x7CAA84")]
		private static bool State4(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x7CAC3C", Offset = "0x7CAC3C", VA = "0x7CAC3C")]
		private static bool State5(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x7CAD14", Offset = "0x7CAD14", VA = "0x7CAD14")]
		private static bool State6(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x7CAF00", Offset = "0x7CAF00", VA = "0x7CAF00")]
		private static bool State7(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x7CAFF8", Offset = "0x7CAFF8", VA = "0x7CAFF8")]
		private static bool State8(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x7CB170", Offset = "0x7CB170", VA = "0x7CB170")]
		private static bool State9(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x7CB1DC", Offset = "0x7CB1DC", VA = "0x7CB1DC")]
		private static bool State10(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x7CB248", Offset = "0x7CB248", VA = "0x7CB248")]
		private static bool State11(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x7CB2B4", Offset = "0x7CB2B4", VA = "0x7CB2B4")]
		private static bool State12(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x7CB320", Offset = "0x7CB320", VA = "0x7CB320")]
		private static bool State13(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x7CB38C", Offset = "0x7CB38C", VA = "0x7CB38C")]
		private static bool State14(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x7CB3F8", Offset = "0x7CB3F8", VA = "0x7CB3F8")]
		private static bool State15(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x7CB464", Offset = "0x7CB464", VA = "0x7CB464")]
		private static bool State16(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x7CB4D0", Offset = "0x7CB4D0", VA = "0x7CB4D0")]
		private static bool State17(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x7CB53C", Offset = "0x7CB53C", VA = "0x7CB53C")]
		private static bool State18(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x7CB5A8", Offset = "0x7CB5A8", VA = "0x7CB5A8")]
		private static bool State19(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x7CB6A4", Offset = "0x7CB6A4", VA = "0x7CB6A4")]
		private static bool State20(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x7CB710", Offset = "0x7CB710", VA = "0x7CB710")]
		private static bool State21(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x7CB8BC", Offset = "0x7CB8BC", VA = "0x7CB8BC")]
		private static bool State22(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x7CBB28", Offset = "0x7CBB28", VA = "0x7CBB28")]
		private static bool State23(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x7CBC24", Offset = "0x7CBC24", VA = "0x7CBC24")]
		private static bool State24(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x7CBCAC", Offset = "0x7CBCAC", VA = "0x7CBCAC")]
		private static bool State25(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x7CBD2C", Offset = "0x7CBD2C", VA = "0x7CBD2C")]
		private static bool State26(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x7CBDA0", Offset = "0x7CBDA0", VA = "0x7CBDA0")]
		private static bool State27(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x7CBE14", Offset = "0x7CBE14", VA = "0x7CBE14")]
		private static bool State28(LitJson.FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x7CA6CC", Offset = "0x7CA6CC", VA = "0x7CA6CC")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x7CBEA4", Offset = "0x7CBEA4", VA = "0x7CBEA4")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x7CBEEC", Offset = "0x7CBEEC", VA = "0x7CBEEC")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x7CAA78", Offset = "0x7CAA78", VA = "0x7CAA78")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000AC1")]
		None = 65536,
		[Token(Token = "0x4000AC2")]
		Number,
		[Token(Token = "0x4000AC3")]
		True,
		[Token(Token = "0x4000AC4")]
		False,
		[Token(Token = "0x4000AC5")]
		Null,
		[Token(Token = "0x4000AC6")]
		CharSeq,
		[Token(Token = "0x4000AC7")]
		Char,
		[Token(Token = "0x4000AC8")]
		Text,
		[Token(Token = "0x4000AC9")]
		Object,
		[Token(Token = "0x4000ACA")]
		ObjectPrime,
		[Token(Token = "0x4000ACB")]
		Pair,
		[Token(Token = "0x4000ACC")]
		PairRest,
		[Token(Token = "0x4000ACD")]
		Array,
		[Token(Token = "0x4000ACE")]
		ArrayPrime,
		[Token(Token = "0x4000ACF")]
		Value,
		[Token(Token = "0x4000AD0")]
		ValueRest,
		[Token(Token = "0x4000AD1")]
		String,
		[Token(Token = "0x4000AD2")]
		End,
		[Token(Token = "0x4000AD3")]
		Epsilon
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20001DD")]
		public class ListIndices
		{
			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<int> m_listIndices;

			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x548BF0", Offset = "0x548BF0", VA = "0x548BF0")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DE")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int _boneIndex0;

			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int _boneIndex1;

			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex2;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex3;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float _boneWeight0;

			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float _boneWeight1;

			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight2;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight3;

			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x548E20", Offset = "0x548E20", VA = "0x548E20")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x548EE0", Offset = "0x548EE0", VA = "0x548EE0")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20001DF")]
		public class UniqueVertex
		{
			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int m_nFixedX;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int m_nFixedY;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedZ;

			[Token(Token = "0x4000AE4")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x548FA0", Offset = "0x548FA0", VA = "0x548FA0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x549064", Offset = "0x549064", VA = "0x549064", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x54907C", Offset = "0x54907C", VA = "0x54907C")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x549190", Offset = "0x549190", VA = "0x549190")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x549240", Offset = "0x549240", VA = "0x549240")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x549278", Offset = "0x549278", VA = "0x549278")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x5490BC", Offset = "0x5490BC", VA = "0x5490BC")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x5492B4", Offset = "0x5492B4", VA = "0x5492B4")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x549210", Offset = "0x549210", VA = "0x549210")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20001E0")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int _nFaceIndex;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x17000114")]
			public int FaceIndex
			{
				[Token(Token = "0x6000B76")]
				[Address(RVA = "0x548C8C", Offset = "0x548C8C", VA = "0x548C8C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000115")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6000B77")]
				[Address(RVA = "0x548C94", Offset = "0x548C94", VA = "0x548C94")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x548C9C", Offset = "0x548C9C", VA = "0x548C9C")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20001E1")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x17000116")]
			public int UniqueIndex
			{
				[Token(Token = "0x6000B79")]
				[Address(RVA = "0x548CC4", Offset = "0x548CC4", VA = "0x548CC4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x548CCC", Offset = "0x548CCC", VA = "0x548CCC")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x548DB0", Offset = "0x548DB0", VA = "0x548DB0")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000110")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x770C00", Offset = "0x770C00", VA = "0x770C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x770C08", Offset = "0x770C08", VA = "0x770C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x770C10", Offset = "0x770C10", VA = "0x770C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x770C18", Offset = "0x770C18", VA = "0x770C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x770C20", Offset = "0x770C20", VA = "0x770C20")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x771590", Offset = "0x771590", VA = "0x771590")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_bExpanded;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_fRelevance;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x70E8D8", Offset = "0x70E8D8", VA = "0x70E8D8")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x70E910", Offset = "0x70E910", VA = "0x70E910")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20001E4")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20001E5")]
		private class Triangle
		{
			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private bool m_bUVData;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int[] m_aUV;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int[] m_aIndices;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int m_nSubMesh;

			[Token(Token = "0x1700011E")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6000BA6")]
				[Address(RVA = "0x1543424", Offset = "0x1543424", VA = "0x1543424")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			public bool HasUVData
			{
				[Token(Token = "0x6000BA7")]
				[Address(RVA = "0x154342C", Offset = "0x154342C", VA = "0x154342C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000120")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6000BA8")]
				[Address(RVA = "0x1543434", Offset = "0x1543434", VA = "0x1543434")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			public Vector3 Normal
			{
				[Token(Token = "0x6000BA9")]
				[Address(RVA = "0x154343C", Offset = "0x154343C", VA = "0x154343C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000122")]
			public int[] Indices
			{
				[Token(Token = "0x6000BAA")]
				[Address(RVA = "0x1543450", Offset = "0x1543450", VA = "0x1543450")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x1543458", Offset = "0x1543458", VA = "0x1543458")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x1543BA4", Offset = "0x1543BA4", VA = "0x1543BA4")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x1543FC8", Offset = "0x1543FC8", VA = "0x1543FC8")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x1543A28", Offset = "0x1543A28", VA = "0x1543A28")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x1544084", Offset = "0x1544084", VA = "0x1544084")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x154419C", Offset = "0x154419C", VA = "0x154419C")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x15441DC", Offset = "0x15441DC", VA = "0x15441DC")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x15442F0", Offset = "0x15442F0", VA = "0x15442F0")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x1544334", Offset = "0x1544334", VA = "0x1544334")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20001E6")]
		private class TriangleList
		{
			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1543274", Offset = "0x1543274", VA = "0x1543274")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20001E7")]
		private class Vertex
		{
			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int m_nID;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float m_fObjDist;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vertex m_collapse;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int m_nHeapSpot;

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1544760", Offset = "0x1544760", VA = "0x1544760")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x1544988", Offset = "0x1544988", VA = "0x1544988")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x1543E7C", Offset = "0x1543E7C", VA = "0x1543E7C")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x1544B00", Offset = "0x1544B00", VA = "0x1544B00")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001E8")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1544FD8", Offset = "0x1544FD8", VA = "0x1544FD8", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x15450E8", Offset = "0x15450E8", VA = "0x15450E8", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1545118", Offset = "0x1545118", VA = "0x1545118")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20001E9")]
		private class VertexDataHash
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color32 _color;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000123")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6000BBC")]
				[Address(RVA = "0x1544C50", Offset = "0x1544C50", VA = "0x1544C50")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000124")]
			public Vector3 Normal
			{
				[Token(Token = "0x6000BBD")]
				[Address(RVA = "0x1544C64", Offset = "0x1544C64", VA = "0x1544C64")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000125")]
			public Vector2 UV1
			{
				[Token(Token = "0x6000BBE")]
				[Address(RVA = "0x1544C78", Offset = "0x1544C78", VA = "0x1544C78")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000126")]
			public Vector2 UV2
			{
				[Token(Token = "0x6000BBF")]
				[Address(RVA = "0x1544C8C", Offset = "0x1544C8C", VA = "0x1544C8C")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000127")]
			public Color32 Color
			{
				[Token(Token = "0x6000BC0")]
				[Address(RVA = "0x1544CA0", Offset = "0x1544CA0", VA = "0x1544CA0")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x1544CA8", Offset = "0x1544CA8", VA = "0x1544CA8")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x1544DCC", Offset = "0x1544DCC", VA = "0x1544DCC", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1544F34", Offset = "0x1544F34", VA = "0x1544F34", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1544F64", Offset = "0x1544F64", VA = "0x1544F64")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x1544F9C", Offset = "0x1544F9C", VA = "0x1544F9C")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270790", Offset = "0x270790")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Simplifier <>4__this;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Mesh sourceMesh;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ProgressDelegate progress;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <nVertices>5__2;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BC9")]
				[Address(RVA = "0x1543310", Offset = "0x1543310", VA = "0x1543310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BCB")]
				[Address(RVA = "0x1543360", Offset = "0x1543360", VA = "0x1543360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x1541EB0", Offset = "0x1541EB0", VA = "0x1541EB0")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x1541ED0", Offset = "0x1541ED0", VA = "0x1541ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x1541ED4", Offset = "0x1541ED4", VA = "0x1541ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x1543318", Offset = "0x1543318", VA = "0x1543318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2707A0", Offset = "0x2707A0")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Simplifier <>4__this;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int nVertices;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh meshOut;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public GameObject gameObject;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BCF")]
				[Address(RVA = "0x551044", Offset = "0x551044", VA = "0x551044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD1")]
				[Address(RVA = "0x551094", Offset = "0x551094", VA = "0x551094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x54FEAC", Offset = "0x54FEAC", VA = "0x54FEAC")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x54FECC", Offset = "0x54FECC", VA = "0x54FECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x54FED0", Offset = "0x54FED0", VA = "0x54FED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x55104C", Offset = "0x55104C", VA = "0x55104C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2707B0", Offset = "0x2707B0")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh meshIn;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ProgressDelegate progress;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshOut;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GameObject gameObject;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private string <strMesh>5__23;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <i>5__24;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD5")]
				[Address(RVA = "0x552C34", Offset = "0x552C34", VA = "0x552C34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD7")]
				[Address(RVA = "0x552C84", Offset = "0x552C84", VA = "0x552C84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x55109C", Offset = "0x55109C", VA = "0x55109C")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x5510BC", Offset = "0x5510BC", VA = "0x5510BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x5510C0", Offset = "0x5510C0", VA = "0x5510C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x552C3C", Offset = "0x552C3C", VA = "0x552C3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2707C0", Offset = "0x2707C0")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ProgressDelegate progress;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Simplifier <>4__this;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Transform transform;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <i>5__2;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDB")]
				[Address(RVA = "0x54FE54", Offset = "0x54FE54", VA = "0x54FE54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BDD")]
				[Address(RVA = "0x54FEA4", Offset = "0x54FEA4", VA = "0x54FEA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x54F97C", Offset = "0x54F97C", VA = "0x54F97C")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x54F99C", Offset = "0x54F99C", VA = "0x54F99C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x54F9A0", Offset = "0x54F9A0", VA = "0x54F9A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x54FE5C", Offset = "0x54FE5C", VA = "0x54FE5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272E2C", Offset = "0x272E2C")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x272E3C", Offset = "0x272E3C")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4000AF1")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		[SerializeField]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000117")]
		public static bool Cancelled
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x719010", Offset = "0x719010", VA = "0x719010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276530", Offset = "0x276530")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x719084", Offset = "0x719084", VA = "0x719084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276540", Offset = "0x276540")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x7190FC", Offset = "0x7190FC", VA = "0x7190FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x719170", Offset = "0x719170", VA = "0x719170")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0x7191E8", Offset = "0x7191E8", VA = "0x7191E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276550", Offset = "0x276550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x7191F0", Offset = "0x7191F0", VA = "0x7191F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276560", Offset = "0x276560")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x7191F8", Offset = "0x7191F8", VA = "0x7191F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x719200", Offset = "0x719200", VA = "0x719200")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool UseCurvature
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x719208", Offset = "0x719208", VA = "0x719208")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x719210", Offset = "0x719210", VA = "0x719210")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x719218", Offset = "0x719218", VA = "0x719218")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x719220", Offset = "0x719220", VA = "0x719220")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool LockBorder
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x719228", Offset = "0x719228", VA = "0x719228")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x719230", Offset = "0x719230", VA = "0x719230")]
			set
			{
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x719238", Offset = "0x719238", VA = "0x719238")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276570", Offset = "0x276570")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x7193A4", Offset = "0x7193A4", VA = "0x7193A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2765DC", Offset = "0x2765DC")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x7194F8", Offset = "0x7194F8", VA = "0x7194F8")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x719500", Offset = "0x719500", VA = "0x719500")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x71954C", Offset = "0x71954C", VA = "0x71954C")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x71A244", Offset = "0x71A244", VA = "0x71A244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276648", Offset = "0x276648")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x71A3B0", Offset = "0x71A3B0", VA = "0x71A3B0")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x71A444", Offset = "0x71A444", VA = "0x71A444")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x71A9CC", Offset = "0x71A9CC", VA = "0x71A9CC")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x71AE04", Offset = "0x71AE04", VA = "0x71AE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2766B4", Offset = "0x2766B4")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x71AF3C", Offset = "0x71AF3C", VA = "0x71AF3C")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x71BABC", Offset = "0x71BABC", VA = "0x71BABC")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x71BD68", Offset = "0x71BD68", VA = "0x71BD68")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x71C030", Offset = "0x71C030", VA = "0x71C030")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x71C2F0", Offset = "0x71C2F0", VA = "0x71C2F0")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x71C3C4", Offset = "0x71C3C4", VA = "0x71C3C4")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x71B690", Offset = "0x71B690", VA = "0x71B690")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x71B884", Offset = "0x71B884", VA = "0x71B884")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x71C4C8", Offset = "0x71C4C8", VA = "0x71C4C8")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x71C2F4", Offset = "0x71C2F4", VA = "0x71C2F4")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x71C584", Offset = "0x71C584", VA = "0x71C584")]
		public Simplifier()
		{
		}
	}
}
namespace UltimateFracturing
{
	[Token(Token = "0x20001EE")]
	public static class ConcaveColliderInterface
	{
		[Token(Token = "0x20001EF")]
		private struct SConvexDecompositionInfoInOut
		{
			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint uMaxHullVertices;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint uMaxHulls;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float fPrecision;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float fBackFaceDistanceFactor;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint uLegacyDepth;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public uint uNormalizeInputMesh;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint uUseFastVersion;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public uint uTriangleCount;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint uVertexCount;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int nHullsOut;
		}

		[Token(Token = "0x20001F0")]
		private struct SConvexDecompositionHullInfo
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nVertexCount;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nTriangleCount;
		}

		[Token(Token = "0x20001F1")]
		public delegate void LogDelegate(string message);

		[PreserveSig]
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x88B5A0", Offset = "0x88B5A0", VA = "0x88B5A0")]
		private static extern void DllInit(bool bUseMultithreading);

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x88B640", Offset = "0x88B640", VA = "0x88B640")]
		private static extern void DllClose();

		[PreserveSig]
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x88B6D8", Offset = "0x88B6D8", VA = "0x88B6D8")]
		private static extern void SetLogFunctionPointer(IntPtr pfnUnity3DLog);

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x88B778", Offset = "0x88B778", VA = "0x88B778")]
		private static extern void SetProgressFunctionPointer(IntPtr pfnUnity3DProgress);

		[PreserveSig]
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x88B818", Offset = "0x88B818", VA = "0x88B818")]
		private static extern void CancelConvexDecomposition();

		[PreserveSig]
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x88B8B0", Offset = "0x88B8B0", VA = "0x88B8B0")]
		private static extern bool DoConvexDecomposition(ref SConvexDecompositionInfoInOut infoInOut, Vector3[] pfVertices, int[] puIndices);

		[PreserveSig]
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x88B978", Offset = "0x88B978", VA = "0x88B978")]
		private static extern bool GetHullInfo(uint uHullIndex, ref SConvexDecompositionHullInfo infoOut);

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x88BA28", Offset = "0x88BA28", VA = "0x88BA28")]
		private static extern bool FillHullMeshData(uint uHullIndex, ref float pfVolumeOut, int[] pnIndicesOut, Vector3[] pfVerticesOut);

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x88BAF8", Offset = "0x88BAF8", VA = "0x88BAF8")]
		public static int ComputeHull(GameObject gameObject, FracturedObject fracturedObject)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x88BD70", Offset = "0x88BD70", VA = "0x88BD70")]
		private static bool ComputeHull(GameObject gameObject, FracturedObject.ECCAlgorithm eAlgorithm, int nMaxHulls, int nMaxHullVertices, int nLegacySteps, bool bVerbose, out int nTotalTrianglesOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x88C7FC", Offset = "0x88C7FC", VA = "0x88C7FC")]
		private static void Log(string message)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public static class Fracturer
	{
		[Token(Token = "0x20001F3")]
		private class FracturingStats
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int nChunkCount;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int nTotalChunks;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nSplitCount;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool bCancelFracturing;

			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x53B01C", Offset = "0x53B01C", VA = "0x53B01C")]
			public FracturingStats()
			{
			}
		}

		[Token(Token = "0x20001F4")]
		private class VoronoiCell
		{
			[Token(Token = "0x20001F5")]
			public class Face
			{
				[Token(Token = "0x4000B6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public Plane plane;

				[Token(Token = "0x4000B6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Matrix4x4 mtxPlane;

				[Token(Token = "0x4000B6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				public int nAdjacentCell;

				[Token(Token = "0x6000C0C")]
				[Address(RVA = "0x154B504", Offset = "0x154B504", VA = "0x154B504")]
				public Face(Plane plane, Matrix4x4 mtxPlane, int nAdjacentCell)
				{
				}
			}

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int nIndex;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int x;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int y;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int z;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 v3Center;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 v3Min;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 v3Max;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public List<Face> listCellFaces;

			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x53C470", Offset = "0x53C470", VA = "0x53C470")]
			public VoronoiCell(int nIndex, int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x20001F6")]
		private class VoronoiPointDistance
		{
			[Token(Token = "0x20001F7")]
			public class IncreasingDistanceComparer : IComparer<VoronoiPointDistance>
			{
				[Token(Token = "0x6000C0E")]
				[Address(RVA = "0x154B640", Offset = "0x154B640", VA = "0x154B640", Slot = "4")]
				public int Compare(VoronoiPointDistance a, VoronoiPointDistance b)
				{
					return default(int);
				}

				[Token(Token = "0x6000C0F")]
				[Address(RVA = "0x154B690", Offset = "0x154B690", VA = "0x154B690")]
				public IncreasingDistanceComparer()
				{
				}
			}

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int nIndex;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float fDistanceSqr;

			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x53C554", Offset = "0x53C554", VA = "0x53C554")]
			public VoronoiPointDistance(int nIndex, float fDistanceSqr)
			{
			}
		}

		[Token(Token = "0x20001F8")]
		public struct VoronoiCellKey
		{
			[Token(Token = "0x20001F9")]
			public class EqualityComparer : IEqualityComparer<VoronoiCellKey>
			{
				[Token(Token = "0x6000C11")]
				[Address(RVA = "0x154B5BC", Offset = "0x154B5BC", VA = "0x154B5BC", Slot = "4")]
				public bool Equals(VoronoiCellKey x, VoronoiCellKey y)
				{
					return default(bool);
				}

				[Token(Token = "0x6000C12")]
				[Address(RVA = "0x154B5EC", Offset = "0x154B5EC", VA = "0x154B5EC", Slot = "5")]
				public int GetHashCode(VoronoiCellKey x)
				{
					return default(int);
				}

				[Token(Token = "0x6000C13")]
				[Address(RVA = "0x154B638", Offset = "0x154B638", VA = "0x154B638")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x53C54C", Offset = "0x53C54C", VA = "0x53C54C")]
			public VoronoiCellKey(int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x20001FA")]
		private class VoronoiThreadData
		{
			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<VoronoiCell> listVoronoiCells;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public MeshData meshDataCube;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<MeshData> listMeshDatasObject;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public List<MeshData> listMeshDatasChunks;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpaceTreeNode spaceTree;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FracturedObject fracturedComponent;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int nCurrentCell;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int nTotalCells;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nCellsProcessed;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public ProgressDelegate progress;

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x53C57C", Offset = "0x53C57C", VA = "0x53C57C")]
			public VoronoiThreadData()
			{
			}
		}

		[Token(Token = "0x20001FB")]
		public delegate void ProgressDelegate(string strTitle, string message, float fT);

		[Token(Token = "0x20001FC")]
		private class SpaceTreeNode
		{
			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private SpaceTreeNode nodeOneSide;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private SpaceTreeNode nodeOtherSide;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nLevel;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int nSplitsX;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int nSplitsY;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int nSplitsZ;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 v3Min;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 v3Max;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MeshData> listMeshDatasSpace;

			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x53B534", Offset = "0x53B534", VA = "0x53B534")]
			public SpaceTreeNode()
			{
			}

			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x53B600", Offset = "0x53B600", VA = "0x53B600")]
			public bool ContainsCompletely(Vector3 v3Min, Vector3 v3Max)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x53B6C0", Offset = "0x53B6C0", VA = "0x53B6C0")]
			public static List<MeshData> GetSmallestPossibleMeshData(SpaceTreeNode root, Vector3 v3Min, Vector3 v3Max)
			{
				return null;
			}

			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x53B7B0", Offset = "0x53B7B0", VA = "0x53B7B0")]
			public static SpaceTreeNode BuildSpaceTree(MeshData meshDataIn, int nSubdivisionLevels, FracturedObject fracturedComponent, [Optional] ProgressDelegate progress)
			{
				return null;
			}
		}

		[Token(Token = "0x20001FD")]
		public class SplitOptions
		{
			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static SplitOptions Default;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool bForceNoProgressInfo;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool bForceNoIslandGeneration;

			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool bForceNoChunkConnectionInfo;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			public bool bForceNoIslandConnectionInfo;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool bForceNoCap;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool bForceCapVertexSoup;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool bIgnoreNegativeSide;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool bVerticesAreLocal;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nForceMeshConnectivityHash;

			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x53C3C0", Offset = "0x53C3C0", VA = "0x53C3C0")]
			public SplitOptions()
			{
			}
		}

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FracturingStats s_FracturingStats;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static VoronoiThreadData s_VoronoiThreadData;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x4FA604", Offset = "0x4FA604", VA = "0x4FA604")]
		public static void CancelFracturing()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x4FA75C", Offset = "0x4FA75C", VA = "0x4FA75C")]
		public static bool IsFracturingCancelled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x4FA8C4", Offset = "0x4FA8C4", VA = "0x4FA8C4")]
		public static bool FractureToChunks(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x4FB280", Offset = "0x4FB280", VA = "0x4FB280")]
		private static Mesh CopyMesh(MeshFilter meshfIn)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x4FB890", Offset = "0x4FB890", VA = "0x4FB890")]
		private static bool FractureToChunksBSP(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x4FE0FC", Offset = "0x4FE0FC", VA = "0x4FE0FC")]
		private static bool FractureToChunksVoronoi(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x5112E8", Offset = "0x5112E8", VA = "0x5112E8")]
		public static void ThreadVoronoiComputePlaneDependencies()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x512754", Offset = "0x512754", VA = "0x512754")]
		public static void ThreadVoronoiComputeCells()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x502110", Offset = "0x502110", VA = "0x502110")]
		public static List<MeshData> ComputeMeshDataIslands(MeshData meshDataIn, bool bVerticesAreLocal, FracturedObject fracturedComponent, ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x510540", Offset = "0x510540", VA = "0x510540")]
		public static void ComputeChunkColliders(FracturedObject fracturedComponent, ProgressDelegate progress)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x514224", Offset = "0x514224", VA = "0x514224")]
		public static void DeleteChunkColliders(FracturedObject fracturedComponent)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x503E7C", Offset = "0x503E7C", VA = "0x503E7C")]
		private static Matrix4x4 GetRandomPlaneSplitMatrix(MeshData meshDataIn, FracturedObject fracturedComponent, out int nSplitAxisPerformed)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x50FA48", Offset = "0x50FA48", VA = "0x50FA48")]
		private static GameObject CreateNewSplitGameObject(GameObject gameObjectIn, FracturedObject fracturedComponent, string strName, bool bTransformVerticesBackToLocal, MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x513D48", Offset = "0x513D48", VA = "0x513D48")]
		private static int CreateMeshConnectivityVoronoiHash(int nCell1, int nCell2)
		{
			return default(int);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x510134", Offset = "0x510134", VA = "0x510134")]
		private static void ComputeChunkConnections(FracturedObject fracturedObject, List<GameObject> listGameObjects, List<MeshData> listMeshDatas, [Optional] ProgressDelegate progress)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x513D84", Offset = "0x513D84", VA = "0x513D84")]
		private static void RemoveEmptySubmeshes(FracturedChunk fracturedChunk)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x514608", Offset = "0x514608", VA = "0x514608")]
		public static bool SplitMeshUsingPlane(GameObject gameObjectIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Plane splitPlane, Vector3 rightVec, out List<GameObject> listGameObjectsPosOut, out List<GameObject> listGameObjectsNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x5154C4", Offset = "0x5154C4", VA = "0x5154C4")]
		private static GameObject CreateNewSplitGameObjectHalfbrick(GameObject gameObjectIn, FracturedObject fracturedComponent, string strName, bool bTransformVerticesBackToLocal, MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x504740", Offset = "0x504740", VA = "0x504740")]
		private static bool SplitMeshUsingPlane(MeshData meshDataIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Vector3 v3PlaneNormal, Vector3 v3PlaneRight, Vector3 v3PlanePoint, out List<MeshData> listMeshDatasPosOut, out List<MeshData> listMeshDatasNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x502BA0", Offset = "0x502BA0", VA = "0x502BA0")]
		private static bool ComputeIslandsMeshDataConnectivity(FracturedObject fracturedComponent, bool bVerticesAreLocal, MeshData meshData1, MeshData meshData2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x519FF4", Offset = "0x519FF4", VA = "0x519FF4")]
		public static bool IntersectEdges2D(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x51A1AC", Offset = "0x51A1AC", VA = "0x51A1AC")]
		private static float CrossProduct2D(Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x516E94", Offset = "0x516E94", VA = "0x516E94")]
		private static void TriangulateConstrainedDelaunay(List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bForceVertexSoup, FracturedObject fracturedComponent, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x51A1CC", Offset = "0x51A1CC", VA = "0x51A1CC")]
		private static void CreateIndexedMesh(IList<DelaunayTriangle> listTriangles, List<Vector3> listVerticesOut, List<int> listIndicesOut, Matrix4x4 mtxTransform, bool bTransform)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x51AAE4", Offset = "0x51AAE4", VA = "0x51AAE4")]
		private static void Triangulate(List<Vector3> listVertices, List<int> listIndices, FracturedObject fracturedComponent, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x51C094", Offset = "0x51C094", VA = "0x51C094")]
		private static int ComputeVertexHash(Vector3 v3Vertex, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay)
		{
			return default(int);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x515C2C", Offset = "0x515C2C", VA = "0x515C2C")]
		private static bool AddCapEdge(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, int nVertexHash1, int nVertexHash2, Vector3 v3Vertex1, Vector3 v3Vertex2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x515DBC", Offset = "0x515DBC", VA = "0x515DBC")]
		private static bool ResolveCap(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, List<List<Vector3>> listlistResolvedCapVertices, List<List<int>> listlistResolvedCapHashValues, FracturedObject fracturedComponent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FE")]
	public class DieTimer : MonoBehaviour
	{
		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float SecondsToDie;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float OffscreenLifeTime;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_fTimer;

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x4E80A4", Offset = "0x4E80A4", VA = "0x4E80A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x4E80B0", Offset = "0x4E80B0", VA = "0x4E80B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x4E8170", Offset = "0x4E8170", VA = "0x4E8170")]
		public DieTimer()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public static class Parameters
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float EPSILONDISTANCEPLANE;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float EPSILONDISTANCEVERTEX;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float EPSILONCAPPRECISIONMIN;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float EPSILONCROSSPRODUCT;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float EPSILONINSIDETRIANGLE;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int VERTICESSPACESUBDIVISION;
	}
	[Token(Token = "0x2000200")]
	public class VertexData
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nVertexHash;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 v3Vertex;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 v3Normal;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector4 v4Tangent;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color32 color32;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 v2Mapping1;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 v2Mapping2;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool bHasNormal;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool bHasTangent;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool bHasColor32;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool bHasMapping1;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bHasMapping2;

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xB50BA0", Offset = "0xB50BA0", VA = "0xB50BA0")]
		public VertexData(int nVertexHash)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xB50C58", Offset = "0xB50C58", VA = "0xB50C58")]
		public VertexData(int nVertexHash, Vector3 v3Vertex, Vector3 v3Normal, Vector3 v4Tangent, Color32 color32, Vector2 v2Mapping1, Vector2 v2Mapping2, bool bHasNormal, bool bHasTangent, bool bHasColor32, bool bHasMapping1, bool bHasMapping2)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xB50D20", Offset = "0xB50D20", VA = "0xB50D20")]
		public VertexData Copy()
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xB50EA0", Offset = "0xB50EA0", VA = "0xB50EA0")]
		public static VertexData Lerp(int nVertexHash, VertexData vd1, VertexData vd2, float fT)
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xB5120C", Offset = "0xB5120C", VA = "0xB5120C")]
		public static bool ClipAgainstPlane(VertexData[] aVertexDataInput, int nIndexA, int nIndexB, Vector3 v3A, Vector3 v3B, Plane planeSplit, ref VertexData clippedVertexDataOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xB514CC", Offset = "0xB514CC", VA = "0xB514CC")]
		public static VertexData[] BuildVertexDataArray(Mesh mesh, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld)
		{
			return null;
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xB51FB8", Offset = "0xB51FB8", VA = "0xB51FB8")]
		public static void SetMeshDataFromVertexDataArraySimple(MeshFilter meshFilter, MeshData meshData, bool bTransformVertexToLocal, int maxFaces, int[] faces, out int[] newFaces)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xB52724", Offset = "0xB52724", VA = "0xB52724")]
		public static void SetMeshDataFromVertexDataArray(MeshFilter meshFilter, MeshData meshData, bool bTransformVertexToLocal)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public struct EdgeKeyByIndex
	{
		[Token(Token = "0x2000202")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByIndex>
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x53A794", Offset = "0x53A794", VA = "0x53A794", Slot = "4")]
			public bool Equals(EdgeKeyByIndex x, EdgeKeyByIndex y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x53A7C4", Offset = "0x53A7C4", VA = "0x53A7C4", Slot = "5")]
			public int GetHashCode(EdgeKeyByIndex x)
			{
				return default(int);
			}

			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x53A7FC", Offset = "0x53A7FC", VA = "0x53A7FC")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nIndexA;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nIndexB;

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x4E95B0", Offset = "0x4E95B0", VA = "0x4E95B0")]
		public EdgeKeyByIndex(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x4E95B8", Offset = "0x4E95B8", VA = "0x4E95B8")]
		public void Set(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x4E95C0", Offset = "0x4E95C0", VA = "0x4E95C0")]
		public bool CompareTo(int nIndexA, int nIndexB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000203")]
	public struct EdgeKeyByHash
	{
		[Token(Token = "0x2000204")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByHash>
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x53A724", Offset = "0x53A724", VA = "0x53A724", Slot = "4")]
			public bool Equals(EdgeKeyByHash x, EdgeKeyByHash y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x53A754", Offset = "0x53A754", VA = "0x53A754", Slot = "5")]
			public int GetHashCode(EdgeKeyByHash x)
			{
				return default(int);
			}

			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x53A78C", Offset = "0x53A78C", VA = "0x53A78C")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nHashA;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nHashB;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x4E9550", Offset = "0x4E9550", VA = "0x4E9550")]
		public EdgeKeyByHash(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x4E9558", Offset = "0x4E9558", VA = "0x4E9558")]
		public void Set(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x4E9560", Offset = "0x4E9560", VA = "0x4E9560")]
		public bool CompareTo(int nHashA, int nHashB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000205")]
	public struct ClippedEdge
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nOldIndexA;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nOldIndexB;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nNewIndexA;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int nNewIndexB;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nClippedIndex;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x887800", Offset = "0x887800", VA = "0x887800")]
		public ClippedEdge(int nOldIndexA, int nOldIndexB, int nNewIndexA, int nNewIndexB, int nClippedIndex)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x88781C", Offset = "0x88781C", VA = "0x88781C")]
		public int GetFirstIndex(int nOldIndexA)
		{
			return default(int);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x887834", Offset = "0x887834", VA = "0x887834")]
		public int GetSecondIndex(int nOldIndexB)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000206")]
	public struct CapEdge
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 v1;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 v2;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nHash1;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nHash2;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fLength;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x886094", Offset = "0x886094", VA = "0x886094")]
		public CapEdge(int nHash1, int nHash2, Vector3 v1, Vector3 v2, float fLength)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x8860D0", Offset = "0x8860D0", VA = "0x8860D0")]
		public int SharesVertex1Of(CapEdge edge)
		{
			return default(int);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x8860FC", Offset = "0x8860FC", VA = "0x8860FC")]
		public int SharesVertex2Of(CapEdge edge)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000207")]
	public class MeshFaceConnectivity
	{
		[Token(Token = "0x2000208")]
		public struct EdgeData
		{
			[Token(Token = "0x2000209")]
			public struct SideData
			{
				[Token(Token = "0x4000BBE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int nFace;

				[Token(Token = "0x4000BBF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public int nSubMesh;

				[Token(Token = "0x4000BC0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public int nSubMeshFace;

				[Token(Token = "0x4000BC1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public int nEdgePos;

				[Token(Token = "0x4000BC2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int nVertexDataV1;

				[Token(Token = "0x4000BC3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int nVertexDataV2;

				[Token(Token = "0x6000C45")]
				[Address(RVA = "0x154B804", Offset = "0x154B804", VA = "0x154B804")]
				public SideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
				{
				}
			}

			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nEdgeIndex;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int nVertex1Hash;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int nVertex2Hash;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 v1;

			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 v2;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public List<SideData> listSides;

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x54796C", Offset = "0x54796C", VA = "0x54796C")]
			public EdgeData(int nEdgeIndex, int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x547B0C", Offset = "0x547B0C", VA = "0x547B0C")]
			public bool Compare(int nVertex1Hash, int nVertex2Hash)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x547B5C", Offset = "0x547B5C", VA = "0x547B5C")]
			public void AddSideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x547CB0", Offset = "0x547CB0", VA = "0x547CB0")]
			public bool HasMoreThanOneSide()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200020A")]
		public class TriangleData
		{
			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int nSubMesh;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int nTriangle;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] anEdges;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public List<int>[] alistNeighborSubMeshes;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int>[] alistNeighborTriangles;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool bVisited;

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x547D14", Offset = "0x547D14", VA = "0x547D14")]
			public TriangleData(int nSubMesh, int nTriangle)
			{
			}
		}

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<TriangleData> listTriangles;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<EdgeData> listEdges;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int> listEdgeIndices;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Dictionary<EdgeKeyByHash, EdgeData> dicEdges;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int nEdgeCount;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Dictionary<int, int> dicSubMeshTriangleCount;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x7D9378", Offset = "0x7D9378", VA = "0x7D9378")]
		public MeshFaceConnectivity()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x7D95D0", Offset = "0x7D95D0", VA = "0x7D95D0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x7D9720", Offset = "0x7D9720", VA = "0x7D9720")]
		public void ResetVisited()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x7D97DC", Offset = "0x7D97DC", VA = "0x7D97DC")]
		public void AddEdge(int nSubMesh, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataIndex1, int nVertexDataIndex2)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class MeshDataConnectivity
	{
		[Token(Token = "0x200020C")]
		public struct Face
		{
			[Token(Token = "0x200020D")]
			public class EqualityComparer : IEqualityComparer<Face>
			{
				[Token(Token = "0x6000C4F")]
				[Address(RVA = "0x154B7A8", Offset = "0x154B7A8", VA = "0x154B7A8", Slot = "4")]
				public bool Equals(Face x, Face y)
				{
					return default(bool);
				}

				[Token(Token = "0x6000C50")]
				[Address(RVA = "0x154B7C4", Offset = "0x154B7C4", VA = "0x154B7C4", Slot = "5")]
				public int GetHashCode(Face x)
				{
					return default(int);
				}

				[Token(Token = "0x6000C51")]
				[Address(RVA = "0x154B7FC", Offset = "0x154B7FC", VA = "0x154B7FC")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nSubMesh;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nFaceIndex;

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x547964", Offset = "0x547964", VA = "0x547964")]
			public Face(int nSubMesh, int nFaceIndex)
			{
			}
		}

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int s_CurrentSharedFaceHash;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Dictionary<int, List<Face>> dicHash2FaceList;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Dictionary<Face, List<int>> dicFace2HashList;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<Face, bool> dicFace2IsClipped;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x7D2170", Offset = "0x7D2170", VA = "0x7D2170")]
		public MeshDataConnectivity()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x7D4288", Offset = "0x7D4288", VA = "0x7D4288")]
		public MeshDataConnectivity GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x7D8884", Offset = "0x7D8884", VA = "0x7D8884")]
		public void NotifyNewClippedFace(MeshData meshDataSource, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x7D8EB4", Offset = "0x7D8EB4", VA = "0x7D8EB4")]
		public static int GetNewHash()
		{
			return default(int);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x7D9044", Offset = "0x7D9044", VA = "0x7D9044")]
		public void NotifyNewCapFace(int nHash, int nSubMesh, int nFaceIndex)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x7D822C", Offset = "0x7D822C", VA = "0x7D822C")]
		public void NotifyRemappedFace(MeshDataConnectivity source, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class MeshData
	{
		[Token(Token = "0x200020F")]
		public class IncreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int nSplitAxis;

			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x5476EC", Offset = "0x5476EC", VA = "0x5476EC")]
			public IncreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x54770C", Offset = "0x54770C", VA = "0x54770C", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000210")]
		public class DecreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int nSplitAxis;

			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x547474", Offset = "0x547474", VA = "0x547474")]
			public DecreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x547494", Offset = "0x547494", VA = "0x547494", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nSubMeshCount;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int[][] aaIndices;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nSplitCloseSubMesh;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VertexData[] aVertexData;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 v3Position;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion qRotation;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 v3Scale;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 v3Min;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 v3Max;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int nCurrentVertexHash;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Material[] aMaterials;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshDataConnectivity meshDataConnectivity;

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x7D2084", Offset = "0x7D2084", VA = "0x7D2084")]
		private MeshData()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x7D2318", Offset = "0x7D2318", VA = "0x7D2318")]
		public MeshData(Material[] aMaterials, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Matrix4x4 mtxTransformVertices, bool bUseTransform, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x7D34D4", Offset = "0x7D34D4", VA = "0x7D34D4")]
		public MeshData(Transform transform, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x7D3644", Offset = "0x7D3644", VA = "0x7D3644")]
		public MeshData(Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x7D39A8", Offset = "0x7D39A8", VA = "0x7D39A8")]
		public static MeshData CreateBoxMeshData(Vector3 v3Pos, Quaternion qRot, Vector3 v3Scale, Vector3 v3Min, Vector3 v3Max)
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x7D3EE4", Offset = "0x7D3EE4", VA = "0x7D3EE4")]
		public MeshData GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x7D4D20", Offset = "0x7D4D20", VA = "0x7D4D20")]
		public bool FillMeshFilter(MeshFilter meshFilter, bool bTransformVerticesToLocal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x7D4F80", Offset = "0x7D4F80", VA = "0x7D4F80")]
		public bool FillMeshFilterForConvexHull(MeshFilter meshFilter, bool bTransformVerticesToLocal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x7D27B8", Offset = "0x7D27B8", VA = "0x7D27B8")]
		public static void ComputeMinMax(IEnumerable<VertexData> VertexData, ref Vector3 v3Min, ref Vector3 v3Max)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x7D2B80", Offset = "0x7D2B80", VA = "0x7D2B80")]
		private void BuildVertexHashData()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x7D55F4", Offset = "0x7D55F4", VA = "0x7D55F4")]
		public bool GetSharedFacesArea(FracturedObject fracturedComponent, MeshData meshData2, out float fSharedArea)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x7D623C", Offset = "0x7D623C", VA = "0x7D623C")]
		private static bool Face2InsideFace1(FracturedObject fracturedComponent, MeshData meshData1, MeshData meshData2, MeshDataConnectivity.Face face1, MeshDataConnectivity.Face face2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x7D6F8C", Offset = "0x7D6F8C", VA = "0x7D6F8C")]
		public static List<MeshData> PostProcessConnectivity(MeshData meshDataSource, MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, int nCurrentVertexHash, bool bTransformToLocal)
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x7D818C", Offset = "0x7D818C", VA = "0x7D818C")]
		private static bool StillHasFacesToProcess(List<int>[] alistFacesRemaining)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x7D79FC", Offset = "0x7D79FC", VA = "0x7D79FC")]
		private static void LookForClosedObjectRecursive(MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, int nSubMeshStart, int nFaceSubMeshStart, List<int>[] alistIndicesIn, List<VertexData> listVertexDataIn, List<int>[] alistFacesRemainingInOut, int[] aLinearFaceIndexStart, List<int>[] alistIndicesOut, List<VertexData> listVertexDataOut, Dictionary<int, int> dicVertexRemap, MeshDataConnectivity meshConnectivityOut)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public class SupportPlane
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool GUIExpanded;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string GUIName;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool GUIShowInScene;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 v3PlanePosition;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion qPlaneRotation;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 v3PlaneScale;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Mesh planeMesh;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FracturedObject fracturedObject;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xFA1218", Offset = "0xFA1218", VA = "0xFA1218")]
		public SupportPlane(FracturedObject fracturedObject)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xFA1B24", Offset = "0xFA1B24", VA = "0xFA1B24")]
		public Matrix4x4 GetLocalMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xFA1B9C", Offset = "0xFA1B9C", VA = "0xFA1B9C")]
		public Vector3[] GetBoundingBoxSegments(Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xFA204C", Offset = "0xFA204C", VA = "0xFA204C")]
		public bool IntersectsWith(GameObject otherGameObject, bool bBelowIsAlsoValid = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xFA2E68", Offset = "0xFA2E68", VA = "0xFA2E68")]
		private static bool TestSegmentVsPlane(Vector3 v1, Vector3 v2, Plane plane, Matrix4x4 mtxToPlaneLocal, float fLimitRight, float fLimitUp, float fLimitForward)
		{
			return default(bool);
		}
	}
}
namespace Poly2Tri
{
	[Token(Token = "0x2000212")]
	public static class P2T
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TriangulationAlgorithm _defaultAlgorithm;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x779C08", Offset = "0x779C08", VA = "0x779C08")]
		public static void Triangulate(PolygonSet ps)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x779F6C", Offset = "0x779F6C", VA = "0x779F6C")]
		public static void Triangulate(Polygon p)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x77A08C", Offset = "0x77A08C", VA = "0x77A08C")]
		public static void Triangulate(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x77A10C", Offset = "0x77A10C", VA = "0x77A10C")]
		public static void Triangulate(PointSet ps)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x77A18C", Offset = "0x77A18C", VA = "0x77A18C")]
		public static TriangulationContext CreateContext(TriangulationAlgorithm algorithm)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x779FEC", Offset = "0x779FEC", VA = "0x779FEC")]
		public static void Triangulate(TriangulationAlgorithm algorithm, ITriangulatable t)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x77A1EC", Offset = "0x77A1EC", VA = "0x77A1EC")]
		public static void Triangulate(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x77A2AC", Offset = "0x77A2AC", VA = "0x77A2AC")]
		public static void Warmup()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class DelaunayTriangle
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FixedArray3<TriangulationPoint> Points;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FixedArray3<DelaunayTriangle> Neighbors;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FixedBitArray3 mEdgeIsConstrained;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public FixedBitArray3 EdgeIsDelaunay;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27302C", Offset = "0x27302C")]
		private bool <IsInterior>k__BackingField;

		[Token(Token = "0x17000130")]
		public FixedBitArray3 EdgeIsConstrained
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x89C3D4", Offset = "0x89C3D4", VA = "0x89C3D4")]
			get
			{
				return default(FixedBitArray3);
			}
		}

		[Token(Token = "0x17000131")]
		public bool IsInterior
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x89C3E4", Offset = "0x89C3E4", VA = "0x89C3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276860", Offset = "0x276860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x89C3EC", Offset = "0x89C3EC", VA = "0x89C3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276870", Offset = "0x276870")]
			set
			{
			}
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x8955B0", Offset = "0x8955B0", VA = "0x8955B0")]
		public DelaunayTriangle(TriangulationPoint p1, TriangulationPoint p2, TriangulationPoint p3)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x898490", Offset = "0x898490", VA = "0x898490")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x89C3F4", Offset = "0x89C3F4", VA = "0x89C3F4")]
		public int IndexCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x89C420", Offset = "0x89C420", VA = "0x89C420")]
		public int IndexCCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x89417C", Offset = "0x89417C", VA = "0x89417C")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x89C44C", Offset = "0x89C44C", VA = "0x89C44C")]
		private void MarkNeighbor(TriangulationPoint p1, TriangulationPoint p2, DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x895654", Offset = "0x895654", VA = "0x895654")]
		public void MarkNeighbor(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x89C528", Offset = "0x89C528", VA = "0x89C528")]
		public void ClearNeighbors()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x89C5B4", Offset = "0x89C5B4", VA = "0x89C5B4")]
		public void ClearNeighbor(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x894BA4", Offset = "0x894BA4", VA = "0x894BA4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x894268", Offset = "0x894268", VA = "0x894268")]
		public TriangulationPoint OppositePoint(DelaunayTriangle t, TriangulationPoint p)
		{
			return null;
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x894D08", Offset = "0x894D08", VA = "0x894D08")]
		public DelaunayTriangle NeighborCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x894B00", Offset = "0x894B00", VA = "0x894B00")]
		public DelaunayTriangle NeighborCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x8941DC", Offset = "0x8941DC", VA = "0x8941DC")]
		public DelaunayTriangle NeighborAcrossFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x894A7C", Offset = "0x894A7C", VA = "0x894A7C")]
		public TriangulationPoint PointCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x894C84", Offset = "0x894C84", VA = "0x894C84")]
		public TriangulationPoint PointCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x89C6A8", Offset = "0x89C6A8", VA = "0x89C6A8")]
		private void RotateCW()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x8985F0", Offset = "0x8985F0", VA = "0x8985F0")]
		public void Legalize(TriangulationPoint oPoint, TriangulationPoint nPoint)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x89C784", Offset = "0x89C784", VA = "0x89C784", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x89CA88", Offset = "0x89CA88", VA = "0x89CA88")]
		public void MarkNeighborEdges()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x89CBFC", Offset = "0x89CBFC", VA = "0x89CBFC")]
		public void MarkEdge(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x89CD2C", Offset = "0x89CD2C", VA = "0x89CD2C")]
		public void MarkEdge(List<DelaunayTriangle> tList)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x894020", Offset = "0x894020", VA = "0x894020")]
		public void MarkConstrainedEdge(int index)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x89CF44", Offset = "0x89CF44", VA = "0x89CF44")]
		public void MarkConstrainedEdge(DTSweepConstraint edge)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x896DE8", Offset = "0x896DE8", VA = "0x896DE8")]
		public void MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint q)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x89CFAC", Offset = "0x89CFAC", VA = "0x89CFAC")]
		public double Area()
		{
			return default(double);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x89D168", Offset = "0x89D168", VA = "0x89D168")]
		public TriangulationPoint Centroid()
		{
			return null;
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x896CDC", Offset = "0x896CDC", VA = "0x896CDC")]
		public int EdgeIndex(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x893F90", Offset = "0x893F90", VA = "0x893F90")]
		public bool GetConstrainedEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x895004", Offset = "0x895004", VA = "0x895004")]
		public bool GetConstrainedEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x89D3C4", Offset = "0x89D3C4", VA = "0x89D3C4")]
		public bool GetConstrainedEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x89D3FC", Offset = "0x89D3FC", VA = "0x89D3FC")]
		protected void SetConstrainedEdge(int idx, bool ce)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x89870C", Offset = "0x89870C", VA = "0x89870C")]
		public void SetConstrainedEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x898750", Offset = "0x898750", VA = "0x898750")]
		public void SetConstrainedEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x89854C", Offset = "0x89854C", VA = "0x89854C")]
		public void SetConstrainedEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x898578", Offset = "0x898578", VA = "0x898578")]
		public bool GetDelaunayEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8985B4", Offset = "0x8985B4", VA = "0x8985B4")]
		public bool GetDelaunayEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x89D408", Offset = "0x89D408", VA = "0x89D408")]
		public bool GetDelaunayEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x898684", Offset = "0x898684", VA = "0x898684")]
		public void SetDelaunayEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x8986C8", Offset = "0x8986C8", VA = "0x8986C8")]
		public void SetDelaunayEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x89D42C", Offset = "0x89D42C", VA = "0x89D42C")]
		public void SetDelaunayEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x89D458", Offset = "0x89D458", VA = "0x89D458")]
		public bool GetEdge(int idx, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x893FE0", Offset = "0x893FE0", VA = "0x893FE0")]
		public bool GetEdgeCCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x89D570", Offset = "0x89D570", VA = "0x89D570")]
		public bool GetEdgeCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x89D5B0", Offset = "0x89D5B0", VA = "0x89D5B0")]
		public bool GetEdgeAcross(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000214")]
	public class AdvancingFront
	{
		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AdvancingFrontNode Head;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AdvancingFrontNode Tail;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AdvancingFrontNode Search;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x97A14C", Offset = "0x97A14C", VA = "0x97A14C")]
		public AdvancingFront(AdvancingFrontNode head, AdvancingFrontNode tail)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x97A19C", Offset = "0x97A19C", VA = "0x97A19C")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x97A1A0", Offset = "0x97A1A0", VA = "0x97A1A0")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x97A1A4", Offset = "0x97A1A4", VA = "0x97A1A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x97A354", Offset = "0x97A354", VA = "0x97A354")]
		private AdvancingFrontNode FindSearchNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x97A35C", Offset = "0x97A35C", VA = "0x97A35C")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x97A3A8", Offset = "0x97A3A8", VA = "0x97A3A8")]
		private AdvancingFrontNode LocateNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x97A450", Offset = "0x97A450", VA = "0x97A450")]
		public AdvancingFrontNode LocatePoint(TriangulationPoint point)
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	public class AdvancingFrontNode
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AdvancingFrontNode Next;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AdvancingFrontNode Prev;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double Value;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriangulationPoint Point;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DelaunayTriangle Triangle;

		[Token(Token = "0x17000132")]
		public bool HasNext
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x97A634", Offset = "0x97A634", VA = "0x97A634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public bool HasPrev
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x97A644", Offset = "0x97A644", VA = "0x97A644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x97A5E4", Offset = "0x97A5E4", VA = "0x97A5E4")]
		public AdvancingFrontNode(TriangulationPoint point)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public static class DTSweep
	{
		[Token(Token = "0x4000BF4")]
		private const double PI_div2 = Math.PI / 2.0;

		[Token(Token = "0x4000BF5")]
		private const double PI_3div4 = Math.PI * 3.0 / 4.0;

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x892884", Offset = "0x892884", VA = "0x892884")]
		public static void Triangulate(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x892C2C", Offset = "0x892C2C", VA = "0x892C2C")]
		private static void Sweep(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x892F24", Offset = "0x892F24", VA = "0x892F24")]
		private static void FixupConstrainedEdges(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x8932F8", Offset = "0x8932F8", VA = "0x8932F8")]
		private static void FinalizationConvexHull(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x894030", Offset = "0x894030", VA = "0x894030")]
		private static void TurnAdvancingFrontConvex(DTSweepContext tcx, AdvancingFrontNode b, AdvancingFrontNode c)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x8931DC", Offset = "0x8931DC", VA = "0x8931DC")]
		private static void FinalizationPolygon(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x895058", Offset = "0x895058", VA = "0x895058")]
		private static void FinalizationConstraints(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x893A28", Offset = "0x893A28", VA = "0x893A28")]
		private static AdvancingFrontNode PointEvent(DTSweepContext tcx, TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x895184", Offset = "0x895184", VA = "0x895184")]
		private static AdvancingFrontNode NewFrontTriangle(DTSweepContext tcx, TriangulationPoint point, AdvancingFrontNode node)
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x893C5C", Offset = "0x893C5C", VA = "0x893C5C")]
		private static void EdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x895D40", Offset = "0x895D40", VA = "0x895D40")]
		private static void FillEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x8964EC", Offset = "0x8964EC", VA = "0x8964EC")]
		private static void FillRightConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x896620", Offset = "0x896620", VA = "0x896620")]
		private static void FillRightConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x896768", Offset = "0x896768", VA = "0x896768")]
		private static void FillRightBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x8961EC", Offset = "0x8961EC", VA = "0x8961EC")]
		private static void FillRightAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x8968E4", Offset = "0x8968E4", VA = "0x8968E4")]
		private static void FillLeftConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x896A2C", Offset = "0x896A2C", VA = "0x896A2C")]
		private static void FillLeftConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x896B60", Offset = "0x896B60", VA = "0x896B60")]
		private static void FillLeftBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x89636C", Offset = "0x89636C", VA = "0x89636C")]
		private static void FillLeftAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x895C58", Offset = "0x895C58", VA = "0x895C58")]
		private static bool IsEdgeSideOfTriangle(DelaunayTriangle triangle, TriangulationPoint ep, TriangulationPoint eq)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x895DA4", Offset = "0x895DA4", VA = "0x895DA4")]
		private static void EdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle triangle, TriangulationPoint point)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x896E1C", Offset = "0x896E1C", VA = "0x896E1C")]
		private static void FlipEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8974D4", Offset = "0x8974D4", VA = "0x8974D4")]
		private static bool NextFlipPoint(TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle ot, TriangulationPoint op, out TriangulationPoint newP)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x8973B0", Offset = "0x8973B0", VA = "0x8973B0")]
		private static DelaunayTriangle NextFlipTriangle(DTSweepContext tcx, Orientation o, DelaunayTriangle t, DelaunayTriangle ot, TriangulationPoint p, TriangulationPoint op)
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x8975D8", Offset = "0x8975D8", VA = "0x8975D8")]
		private static void FlipScanEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle flipTriangle, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x895400", Offset = "0x895400", VA = "0x895400")]
		private static void FillAdvancingFront(DTSweepContext tcx, AdvancingFrontNode n)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x897C18", Offset = "0x897C18", VA = "0x897C18")]
		private static void FillBasin(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x898138", Offset = "0x898138", VA = "0x898138")]
		private static void FillBasinReq(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x898358", Offset = "0x898358", VA = "0x898358")]
		private static bool IsShallow(DTSweepContext tcx, AdvancingFrontNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x89785C", Offset = "0x89785C", VA = "0x89785C")]
		private static double HoleAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x897A80", Offset = "0x897A80", VA = "0x897A80")]
		private static double BasinAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x894E2C", Offset = "0x894E2C", VA = "0x894E2C")]
		private static void Fill(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x8958A4", Offset = "0x8958A4", VA = "0x8958A4")]
		private static bool Legalize(DTSweepContext tcx, DelaunayTriangle t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x8942A4", Offset = "0x8942A4", VA = "0x8942A4")]
		private static void RotateTrianglePair(DelaunayTriangle t, TriangulationPoint p, DelaunayTriangle ot, TriangulationPoint op)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class DTSweepBasin
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AdvancingFrontNode leftNode;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AdvancingFrontNode bottomNode;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode rightNode;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double width;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHighest;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x898794", Offset = "0x898794", VA = "0x898794")]
		public DTSweepBasin()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class DTSweepConstraint : TriangulationConstraint
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x89879C", Offset = "0x89879C", VA = "0x89879C")]
		public DTSweepConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class DTSweepContext : TriangulationContext
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float ALPHA;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AdvancingFront Front;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27303C", Offset = "0x27303C")]
		private TriangulationPoint <Head>k__BackingField;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27304C", Offset = "0x27304C")]
		private TriangulationPoint <Tail>k__BackingField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DTSweepBasin Basin;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DTSweepEdgeEvent EdgeEvent;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private DTSweepPointComparator _comparator;

		[Token(Token = "0x17000134")]
		public TriangulationPoint Head
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x8987E0", Offset = "0x8987E0", VA = "0x8987E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276880", Offset = "0x276880")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x8987E8", Offset = "0x8987E8", VA = "0x8987E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276890", Offset = "0x276890")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public TriangulationPoint Tail
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x8987F0", Offset = "0x8987F0", VA = "0x8987F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768A0", Offset = "0x2768A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x8987F8", Offset = "0x8987F8", VA = "0x8987F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768B0", Offset = "0x2768B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public override TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x898800", Offset = "0x898800", VA = "0x898800", Slot = "4")]
			get
			{
				return default(TriangulationAlgorithm);
			}
		}

		[Token(Token = "0x17000137")]
		public override bool IsDebugEnabled
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x898934", Offset = "0x898934", VA = "0x898934", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x89893C", Offset = "0x89893C", VA = "0x89893C", Slot = "9")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x898808", Offset = "0x898808", VA = "0x898808")]
		public DTSweepContext()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x894A0C", Offset = "0x894A0C", VA = "0x894A0C")]
		public void RemoveFromList(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x895054", Offset = "0x895054", VA = "0x895054")]
		public void MeshClean(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x8989D8", Offset = "0x8989D8", VA = "0x8989D8")]
		private void MeshCleanReq(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x898B54", Offset = "0x898B54", VA = "0x898B54", Slot = "7")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x8953D0", Offset = "0x8953D0", VA = "0x8953D0")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x898460", Offset = "0x898460", VA = "0x898460")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x895154", Offset = "0x895154", VA = "0x895154")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x89290C", Offset = "0x89290C", VA = "0x89290C")]
		public void CreateAdvancingFront()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x8948CC", Offset = "0x8948CC", VA = "0x8948CC")]
		public void MapTriangleToNodes(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x898BC8", Offset = "0x898BC8", VA = "0x898BC8", Slot = "5")]
		public override void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x893920", Offset = "0x893920", VA = "0x893920")]
		public void FinalizeTriangulation()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x898FF4", Offset = "0x898FF4", VA = "0x898FF4", Slot = "6")]
		public override TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public class DTSweepDebugContext : TriangulationDebugContext
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private DelaunayTriangle _primaryTriangle;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DelaunayTriangle _secondaryTriangle;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TriangulationPoint _activePoint;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AdvancingFrontNode _activeNode;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private DTSweepConstraint _activeConstraint;

		[Token(Token = "0x17000138")]
		public DelaunayTriangle PrimaryTriangle
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x899060", Offset = "0x899060", VA = "0x899060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x895BD8", Offset = "0x895BD8", VA = "0x895BD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public DelaunayTriangle SecondaryTriangle
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x899068", Offset = "0x899068", VA = "0x899068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x897330", Offset = "0x897330", VA = "0x897330")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public TriangulationPoint ActivePoint
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x899070", Offset = "0x899070", VA = "0x899070")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x899078", Offset = "0x899078", VA = "0x899078")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public AdvancingFrontNode ActiveNode
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x8990F8", Offset = "0x8990F8", VA = "0x8990F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x894DAC", Offset = "0x894DAC", VA = "0x894DAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public DTSweepConstraint ActiveConstraint
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x899100", Offset = "0x899100", VA = "0x899100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x893BDC", Offset = "0x893BDC", VA = "0x893BDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public bool IsDebugContext
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x899108", Offset = "0x899108", VA = "0x899108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x8989D0", Offset = "0x8989D0", VA = "0x8989D0")]
		public DTSweepDebugContext(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x899110", Offset = "0x899110", VA = "0x899110", Slot = "4")]
		public override void Clear()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class DTSweepEdgeEvent
	{
		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DTSweepConstraint ConstrainedEdge;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Right;

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x898924", Offset = "0x898924", VA = "0x898924")]
		public DTSweepEdgeEvent()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class DTSweepPointComparator : IComparer<TriangulationPoint>
	{
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x899158", Offset = "0x899158", VA = "0x899158", Slot = "4")]
		public int Compare(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x89892C", Offset = "0x89892C", VA = "0x89892C")]
		public DTSweepPointComparator()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class PointOnEdgeException : NotImplementedException
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly TriangulationPoint A;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly TriangulationPoint B;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public readonly TriangulationPoint C;

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x78AEEC", Offset = "0x78AEEC", VA = "0x78AEEC")]
		public PointOnEdgeException(string message, TriangulationPoint a, TriangulationPoint b, TriangulationPoint c)
		{
		}
	}
	[Token(Token = "0x200021E")]
	public interface ITriangulatable
	{
		[Token(Token = "0x1700013E")]
		IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000CF7")]
			get;
		}

		[Token(Token = "0x1700013F")]
		TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000CF8")]
			get;
		}

		[Token(Token = "0x17000140")]
		string FileName
		{
			[Token(Token = "0x6000CF9")]
			get;
			[Token(Token = "0x6000CFA")]
			set;
		}

		[Token(Token = "0x17000141")]
		bool DisplayFlipX
		{
			[Token(Token = "0x6000CFB")]
			get;
			[Token(Token = "0x6000CFC")]
			set;
		}

		[Token(Token = "0x17000142")]
		bool DisplayFlipY
		{
			[Token(Token = "0x6000CFD")]
			get;
			[Token(Token = "0x6000CFE")]
			set;
		}

		[Token(Token = "0x17000143")]
		float DisplayRotate
		{
			[Token(Token = "0x6000CFF")]
			get;
			[Token(Token = "0x6000D00")]
			set;
		}

		[Token(Token = "0x17000144")]
		double Precision
		{
			[Token(Token = "0x6000D01")]
			get;
			[Token(Token = "0x6000D02")]
			set;
		}

		[Token(Token = "0x17000145")]
		double MinX
		{
			[Token(Token = "0x6000D03")]
			get;
		}

		[Token(Token = "0x17000146")]
		double MaxX
		{
			[Token(Token = "0x6000D04")]
			get;
		}

		[Token(Token = "0x17000147")]
		double MinY
		{
			[Token(Token = "0x6000D05")]
			get;
		}

		[Token(Token = "0x17000148")]
		double MaxY
		{
			[Token(Token = "0x6000D06")]
			get;
		}

		[Token(Token = "0x17000149")]
		Rect2D Bounds
		{
			[Token(Token = "0x6000D07")]
			get;
		}

		[Token(Token = "0x6000D08")]
		void Prepare(TriangulationContext tcx);

		[Token(Token = "0x6000D09")]
		void AddTriangle(DelaunayTriangle t);

		[Token(Token = "0x6000D0A")]
		void AddTriangles(IEnumerable<DelaunayTriangle> list);

		[Token(Token = "0x6000D0B")]
		void ClearTriangles();
	}
	[Token(Token = "0x200021F")]
	public enum Orientation
	{
		[Token(Token = "0x4000C0D")]
		CW,
		[Token(Token = "0x4000C0E")]
		CCW,
		[Token(Token = "0x4000C0F")]
		Collinear
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2707D0", Offset = "0x2707D0")]
	public class Contour : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Contour> mHoles;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private ITriangulatable mParent;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string mName;

		[Token(Token = "0x1700014A")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x88E4A4", Offset = "0x88E4A4", VA = "0x88E4A4", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x890A20", Offset = "0x890A20", VA = "0x890A20", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public string Name
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x890A98", Offset = "0x890A98", VA = "0x890A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x890AA0", Offset = "0x890AA0", VA = "0x890AA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x890AA8", Offset = "0x890AA8", VA = "0x890AA8", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x890B08", Offset = "0x890B08", VA = "0x890B08")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x890B0C", Offset = "0x890B0C", VA = "0x890B0C", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x1700014E")]
		public string FileName
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x890BD4", Offset = "0x890BD4", VA = "0x890BD4", Slot = "29")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x890C9C", Offset = "0x890C9C", VA = "0x890C9C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x890CA0", Offset = "0x890CA0", VA = "0x890CA0", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x890D68", Offset = "0x890D68", VA = "0x890D68", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x890D6C", Offset = "0x890D6C", VA = "0x890D6C", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x890E34", Offset = "0x890E34", VA = "0x890E34", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x890E38", Offset = "0x890E38", VA = "0x890E38", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x890F00", Offset = "0x890F00", VA = "0x890F00", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public double Precision
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x890F04", Offset = "0x890F04", VA = "0x890F04", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x890FCC", Offset = "0x890FCC", VA = "0x890FCC", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public double MinX
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x890FD0", Offset = "0x890FD0", VA = "0x890FD0", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000154")]
		public double MaxX
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x890FF4", Offset = "0x890FF4", VA = "0x890FF4", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000155")]
		public double MinY
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x891018", Offset = "0x891018", VA = "0x891018", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000156")]
		public double MaxY
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x89103C", Offset = "0x89103C", VA = "0x89103C", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000157")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x891060", Offset = "0x891060", VA = "0x891060", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x88E570", Offset = "0x88E570", VA = "0x88E570")]
		public Contour(ITriangulatable parent)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x88E370", Offset = "0x88E370", VA = "0x88E370")]
		public Contour(ITriangulatable parent, IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x89138C", Offset = "0x89138C", VA = "0x89138C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x8913FC", Offset = "0x8913FC", VA = "0x8913FC", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x891468", Offset = "0x891468", VA = "0x891468", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x8914D8", Offset = "0x8914D8", VA = "0x8914D8", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x891508", Offset = "0x891508", VA = "0x891508", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x8916F0", Offset = "0x8916F0", VA = "0x8916F0", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x891068", Offset = "0x891068", VA = "0x891068")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x891CD8", Offset = "0x891CD8", VA = "0x891CD8", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x891D10", Offset = "0x891D10", VA = "0x891D10", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x891D20", Offset = "0x891D20", VA = "0x891D20", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x891D90", Offset = "0x891D90", VA = "0x891D90", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x891F80", Offset = "0x891F80", VA = "0x891F80")]
		protected void AddHole(Contour c)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x88E960", Offset = "0x88E960", VA = "0x88E960")]
		public int GetNumHoles(bool parentIsHole)
		{
			return default(int);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x89200C", Offset = "0x89200C", VA = "0x89200C")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x892060", Offset = "0x892060", VA = "0x892060")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x88ED64", Offset = "0x88ED64", VA = "0x88ED64")]
		public void GetActualHoles(bool parentIsHole, ref List<Contour> holes)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x892110", Offset = "0x892110", VA = "0x892110")]
		public List<Contour>.Enumerator GetHoleEnumerator()
		{
			return default(List<Contour>.Enumerator);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x890628", Offset = "0x890628", VA = "0x890628")]
		public void InitializeHoles(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x88F078", Offset = "0x88F078", VA = "0x88F078")]
		public static void InitializeHoles(List<Contour> holes, ITriangulatable parent, ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x892194", Offset = "0x892194", VA = "0x892194", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x8921F4", Offset = "0x8921F4", VA = "0x8921F4", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x892254", Offset = "0x892254", VA = "0x892254", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x8922B4", Offset = "0x8922B4", VA = "0x8922B4", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x892314", Offset = "0x892314", VA = "0x892314")]
		public Point2D FindPointInContour()
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x8924E0", Offset = "0x8924E0", VA = "0x8924E0")]
		public bool IsPointInsideContour(Point2D p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x270804", Offset = "0x270804")]
	public class Polygon : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected List<DelaunayTriangle> mTriangles;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27305C", Offset = "0x27305C")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27306C", Offset = "0x27306C")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27307C", Offset = "0x27307C")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27308C", Offset = "0x27308C")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double mPrecision;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<Polygon> mHoles;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected List<TriangulationPoint> mSteinerPoints;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected PolygonPoint _last;

		[Token(Token = "0x17000158")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x78CCA4", Offset = "0x78CCA4", VA = "0x78CCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x78CCA8", Offset = "0x78CCA8", VA = "0x78CCA8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x78CCB0", Offset = "0x78CCB0", VA = "0x78CCB0", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x1700015B")]
		public string FileName
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x78CCB8", Offset = "0x78CCB8", VA = "0x78CCB8", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768C0", Offset = "0x2768C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x78CCC0", Offset = "0x78CCC0", VA = "0x78CCC0", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768D0", Offset = "0x2768D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x78CCC8", Offset = "0x78CCC8", VA = "0x78CCC8", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768E0", Offset = "0x2768E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x78CCD0", Offset = "0x78CCD0", VA = "0x78CCD0", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2768F0", Offset = "0x2768F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x78CCD8", Offset = "0x78CCD8", VA = "0x78CCD8", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276900", Offset = "0x276900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x78CCE0", Offset = "0x78CCE0", VA = "0x78CCE0", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276910", Offset = "0x276910")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x78CCE8", Offset = "0x78CCE8", VA = "0x78CCE8", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276920", Offset = "0x276920")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x78CCF0", Offset = "0x78CCF0", VA = "0x78CCF0", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276930", Offset = "0x276930")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public double Precision
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x78CCF8", Offset = "0x78CCF8", VA = "0x78CCF8", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x78CD04", Offset = "0x78CD04", VA = "0x78CD04", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public double MinX
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x78CD14", Offset = "0x78CD14", VA = "0x78CD14", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000161")]
		public double MaxX
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x78CD38", Offset = "0x78CD38", VA = "0x78CD38", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000162")]
		public double MinY
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x78CD5C", Offset = "0x78CD5C", VA = "0x78CD5C", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000163")]
		public double MaxY
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x78CD80", Offset = "0x78CD80", VA = "0x78CD80", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000164")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x78CDA4", Offset = "0x78CDA4", VA = "0x78CDA4", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x78CDAC", Offset = "0x78CDAC", VA = "0x78CDAC", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x78CE78", Offset = "0x78CE78", VA = "0x78CE78", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public IList<Polygon> Holes
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x78CEF0", Offset = "0x78CEF0", VA = "0x78CEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x78CEF8", Offset = "0x78CEF8", VA = "0x78CEF8")]
		public Polygon(IList<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x78D468", Offset = "0x78D468", VA = "0x78D468")]
		public Polygon(IEnumerable<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x78D514", Offset = "0x78D514", VA = "0x78D514")]
		public Polygon(params PolygonPoint[] points)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x78D518", Offset = "0x78D518", VA = "0x78D518", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x78D584", Offset = "0x78D584", VA = "0x78D584", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x78D5F4", Offset = "0x78D5F4", VA = "0x78D5F4", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x78D624", Offset = "0x78D624", VA = "0x78D624", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x78D654", Offset = "0x78D654", VA = "0x78D654")]
		public void Add(PolygonPoint p)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x78D684", Offset = "0x78D684", VA = "0x78D684", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x78D138", Offset = "0x78D138", VA = "0x78D138")]
		public void AddRange(IList<PolygonPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x78D88C", Offset = "0x78D88C", VA = "0x78D88C")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x78DBBC", Offset = "0x78DBBC", VA = "0x78DBBC", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x78DBF4", Offset = "0x78DBF4", VA = "0x78DBF4", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x78DBF8", Offset = "0x78DBF8", VA = "0x78DBF8")]
		public void RemovePoint(PolygonPoint p)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x78DE74", Offset = "0x78DE74", VA = "0x78DE74", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x78DEE4", Offset = "0x78DEE4", VA = "0x78DEE4", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x78E0D0", Offset = "0x78E0D0", VA = "0x78E0D0")]
		public void AddSteinerPoint(TriangulationPoint point)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x78E1AC", Offset = "0x78E1AC", VA = "0x78E1AC")]
		public void AddSteinerPoints(List<TriangulationPoint> points)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x78E288", Offset = "0x78E288", VA = "0x78E288")]
		public void ClearSteinerPoints()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x78E2EC", Offset = "0x78E2EC", VA = "0x78E2EC")]
		public void AddHole(Polygon poly)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x78E3C8", Offset = "0x78E3C8", VA = "0x78E3C8", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x78E438", Offset = "0x78E438", VA = "0x78E438", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x78E4A8", Offset = "0x78E4A8", VA = "0x78E4A8", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x78E50C", Offset = "0x78E50C", VA = "0x78E50C")]
		public bool IsPointInside(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x78E514", Offset = "0x78E514", VA = "0x78E514", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class PolygonPoint : TriangulationPoint
	{
		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27309C", Offset = "0x27309C")]
		private PolygonPoint <Next>k__BackingField;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730AC", Offset = "0x2730AC")]
		private PolygonPoint <Previous>k__BackingField;

		[Token(Token = "0x17000167")]
		public PolygonPoint Next
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x704444", Offset = "0x704444", VA = "0x704444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276940", Offset = "0x276940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x70444C", Offset = "0x70444C", VA = "0x70444C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276950", Offset = "0x276950")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public PolygonPoint Previous
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x704454", Offset = "0x704454", VA = "0x704454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276960", Offset = "0x276960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x70445C", Offset = "0x70445C", VA = "0x70445C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276970", Offset = "0x276970")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x7043A0", Offset = "0x7043A0", VA = "0x7043A0")]
		public PolygonPoint(double x, double y)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x704464", Offset = "0x704464", VA = "0x704464")]
		public static Point2D ToBasePoint(PolygonPoint p)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x704468", Offset = "0x704468", VA = "0x704468")]
		public static TriangulationPoint ToTriangulationPoint(PolygonPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000223")]
	public class PolygonSet
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected List<Polygon> _polygons;

		[Token(Token = "0x17000169")]
		public IEnumerable<Polygon> Polygons
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0x704658", Offset = "0x704658", VA = "0x704658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x70446C", Offset = "0x70446C", VA = "0x70446C")]
		public PolygonSet()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x704508", Offset = "0x704508", VA = "0x704508")]
		public PolygonSet(Polygon poly)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x7045E8", Offset = "0x7045E8", VA = "0x7045E8")]
		public void Add(Polygon p)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class PolygonUtil
	{
		[Token(Token = "0x2000225")]
		public enum PolyUnionError
		{
			[Token(Token = "0x4000C21")]
			None,
			[Token(Token = "0x4000C22")]
			NoIntersections,
			[Token(Token = "0x4000C23")]
			Poly1InsidePoly2,
			[Token(Token = "0x4000C24")]
			InfiniteLoop
		}

		[Token(Token = "0x2000226")]
		[Flags]
		public enum PolyOperation : uint
		{
			[Token(Token = "0x4000C26")]
			None = 0u,
			[Token(Token = "0x4000C27")]
			Union = 1u,
			[Token(Token = "0x4000C28")]
			Intersect = 2u,
			[Token(Token = "0x4000C29")]
			Subtract = 4u
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x704660", Offset = "0x704660", VA = "0x704660")]
		public static Point2DList.WindingOrderType CalculateWindingOrder(IList<Point2D> l)
		{
			return default(Point2DList.WindingOrderType);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x704B00", Offset = "0x704B00", VA = "0x704B00")]
		public static bool PolygonsAreSame2D(IList<Point2D> poly1, IList<Point2D> poly2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x7050C0", Offset = "0x7050C0", VA = "0x7050C0")]
		public static bool PointInPolygon2D(IList<Point2D> polygon, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x7055A8", Offset = "0x7055A8", VA = "0x7055A8")]
		public static bool PolygonsIntersect2D(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x705CAC", Offset = "0x705CAC", VA = "0x705CAC")]
		public bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x705CE0", Offset = "0x705CE0", VA = "0x705CE0")]
		public static bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2, bool runIntersectionTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x705FFC", Offset = "0x705FFC", VA = "0x705FFC")]
		public static void ClipPolygonToEdge2D(Point2D edgeBegin, Point2D edgeEnd, IList<Point2D> poly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x706EF4", Offset = "0x706EF4", VA = "0x706EF4")]
		public static void ClipPolygonToPolygon(IList<Point2D> poly, IList<Point2D> clipPoly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x707300", Offset = "0x707300", VA = "0x707300")]
		public static PolyUnionError PolygonUnion(Point2DList polygon1, Point2DList polygon2, out Point2DList union)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x7073F4", Offset = "0x7073F4", VA = "0x7073F4")]
		protected static void PolygonUnionInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x707AE0", Offset = "0x707AE0", VA = "0x707AE0")]
		public static PolyUnionError PolygonIntersect(Point2DList polygon1, Point2DList polygon2, out Point2DList intersectOut)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x707BD4", Offset = "0x707BD4", VA = "0x707BD4")]
		protected static void PolygonIntersectInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x708368", Offset = "0x708368", VA = "0x708368")]
		public static PolyUnionError PolygonSubtract(Point2DList polygon1, Point2DList polygon2, out Point2DList subtract)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x70845C", Offset = "0x70845C", VA = "0x70845C")]
		public static void PolygonSubtractInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x708C50", Offset = "0x708C50", VA = "0x708C50")]
		public static PolyUnionError PolygonOperation(PolyOperation operations, Point2DList polygon1, Point2DList polygon2, out Dictionary<uint, Point2DList> results)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x708D24", Offset = "0x708D24", VA = "0x708D24")]
		public static PolyUnionError PolygonOperation(PolygonOperationContext ctx)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x708D80", Offset = "0x708D80", VA = "0x708D80")]
		public static List<Point2DList> SplitComplexPolygon(Point2DList verts, double epsilon)
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x70A1E8", Offset = "0x70A1E8", VA = "0x70A1E8")]
		private static List<Point2DList> SplitComplexPolygonCleanup(IList<Point2D> orig)
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x70A5E4", Offset = "0x70A5E4", VA = "0x70A5E4")]
		public PolygonUtil()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class EdgeIntersectInfo
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730BC", Offset = "0x2730BC")]
		private Edge <EdgeOne>k__BackingField;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730CC", Offset = "0x2730CC")]
		private Edge <EdgeTwo>k__BackingField;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730DC", Offset = "0x2730DC")]
		private Point2D <IntersectionPoint>k__BackingField;

		[Token(Token = "0x1700016A")]
		public Edge EdgeOne
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x4E9520", Offset = "0x4E9520", VA = "0x4E9520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276980", Offset = "0x276980")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x4E9528", Offset = "0x4E9528", VA = "0x4E9528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276990", Offset = "0x276990")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public Edge EdgeTwo
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x4E9530", Offset = "0x4E9530", VA = "0x4E9530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769A0", Offset = "0x2769A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x4E9538", Offset = "0x4E9538", VA = "0x4E9538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769B0", Offset = "0x2769B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public Point2D IntersectionPoint
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x4E9540", Offset = "0x4E9540", VA = "0x4E9540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769C0", Offset = "0x2769C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x4E9548", Offset = "0x4E9548", VA = "0x4E9548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769D0", Offset = "0x2769D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x4E94CC", Offset = "0x4E94CC", VA = "0x4E94CC")]
		public EdgeIntersectInfo(Edge edgeOne, Edge edgeTwo, Point2D intersectionPoint)
		{
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x270848", Offset = "0x270848")]
	public class SplitComplexPolygonNode
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<SplitComplexPolygonNode> mConnected;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Point2D mPosition;

		[Token(Token = "0x1700016D")]
		public int NumConnected
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xF9DCA4", Offset = "0xF9DCA4", VA = "0xF9DCA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016E")]
		public Point2D Position
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xF9DCF8", Offset = "0xF9DCF8", VA = "0xF9DCF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xF9DD00", Offset = "0xF9DD00", VA = "0xF9DD00")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public SplitComplexPolygonNode Item
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xF9DD08", Offset = "0xF9DD08", VA = "0xF9DD08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xF9DD7C", Offset = "0xF9DD7C", VA = "0xF9DD7C")]
		public SplitComplexPolygonNode()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xF9DE18", Offset = "0xF9DE18", VA = "0xF9DE18")]
		public SplitComplexPolygonNode(Point2D pos)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xF9DEC8", Offset = "0xF9DEC8", VA = "0xF9DEC8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xF9DFCC", Offset = "0xF9DFCC", VA = "0xF9DFCC")]
		public bool Equals(SplitComplexPolygonNode pn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xF9DFF8", Offset = "0xF9DFF8", VA = "0xF9DFF8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xF9DF84", Offset = "0xF9DF84", VA = "0xF9DF84")]
		public static bool operator ==(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xF9E000", Offset = "0xF9E000", VA = "0xF9E000")]
		public static bool operator !=(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xF9E060", Offset = "0xF9E060", VA = "0xF9E060", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xF9E264", Offset = "0xF9E264", VA = "0xF9E264")]
		private bool IsRighter(double sinA, double cosA, double sinB, double cosB)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xF9E2C4", Offset = "0xF9E2C4", VA = "0xF9E2C4")]
		private int remainder(int x, int modulus)
		{
			return default(int);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xF9E2F0", Offset = "0xF9E2F0", VA = "0xF9E2F0")]
		public void AddConnection(SplitComplexPolygonNode toMe)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xF9E3BC", Offset = "0xF9E3BC", VA = "0xF9E3BC")]
		public void RemoveConnection(SplitComplexPolygonNode fromMe)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xF9E42C", Offset = "0xF9E42C", VA = "0xF9E42C")]
		private void RemoveConnectionByIndex(int index)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xF9E4D4", Offset = "0xF9E4D4", VA = "0xF9E4D4")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xF9E53C", Offset = "0xF9E53C", VA = "0xF9E53C")]
		private bool IsConnectedTo(SplitComplexPolygonNode me)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xF9E5AC", Offset = "0xF9E5AC", VA = "0xF9E5AC")]
		public SplitComplexPolygonNode GetRightestConnection(SplitComplexPolygonNode incoming)
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xF9EA1C", Offset = "0xF9EA1C", VA = "0xF9EA1C")]
		public SplitComplexPolygonNode GetRightestConnection(Point2D incomingDir)
		{
			return null;
		}
	}
	[Token(Token = "0x2000229")]
	public class PolygonOperationContext
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PolygonUtil.PolyOperation mOperations;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Point2DList mOriginalPolygon1;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Point2DList mOriginalPolygon2;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Point2DList mPoly1;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point2DList mPoly2;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public List<EdgeIntersectInfo> mIntersections;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int mStartingIndex;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PolygonUtil.PolyUnionError mError;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> mPoly1VectorAngles;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public List<int> mPoly2VectorAngles;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<uint, Point2DList> mOutput;

		[Token(Token = "0x17000170")]
		public Point2DList Union
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x78F120", Offset = "0x78F120", VA = "0x78F120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public Point2DList Intersect
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x78F21C", Offset = "0x78F21C", VA = "0x78F21C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public Point2DList Subtract
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x78F318", Offset = "0x78F318", VA = "0x78F318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x78F414", Offset = "0x78F414", VA = "0x78F414")]
		public PolygonOperationContext()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x78F4B0", Offset = "0x78F4B0", VA = "0x78F4B0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x78F5C4", Offset = "0x78F5C4", VA = "0x78F5C4")]
		public bool Init(PolygonUtil.PolyOperation operations, Point2DList polygon1, Point2DList polygon2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x790088", Offset = "0x790088", VA = "0x790088")]
		private bool VerticesIntersect(Point2DList polygon1, Point2DList polygon2, out List<EdgeIntersectInfo> intersections)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x790488", Offset = "0x790488", VA = "0x790488")]
		public bool PointInPolygonAngle(Point2D point, Point2DList polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x7905D0", Offset = "0x7905D0", VA = "0x7905D0")]
		public double VectorAngle(Point2D p1, Point2D p2)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200022A")]
	public class ConstrainedPointSet : PointSet
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<uint, TriangulationConstraint> mConstraintMap;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected List<Contour> mHoles;

		[Token(Token = "0x17000173")]
		public override TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x88C8CC", Offset = "0x88C8CC", VA = "0x88C8CC", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x88C8D4", Offset = "0x88C8D4", VA = "0x88C8D4")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x88CDE4", Offset = "0x88CDE4", VA = "0x88CDE4")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, List<TriangulationConstraint> constraints)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x88D198", Offset = "0x88D198", VA = "0x88D198")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, int[] indices)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x88C9E0", Offset = "0x88C9E0", VA = "0x88C9E0")]
		protected void AddBoundaryConstraints()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x88D6D8", Offset = "0x88D6D8", VA = "0x88D6D8", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x88D788", Offset = "0x88D788", VA = "0x88D788", Slot = "62")]
		public override void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x88D7B0", Offset = "0x88D7B0", VA = "0x88D7B0", Slot = "63")]
		public override bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x88D914", Offset = "0x88D914", VA = "0x88D914")]
		public bool AddHole(List<TriangulationPoint> points, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x88CF00", Offset = "0x88CF00", VA = "0x88CF00")]
		public bool AddConstraints(List<TriangulationConstraint> constraints)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x88D43C", Offset = "0x88D43C", VA = "0x88D43C")]
		public bool AddConstraint(TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x88E68C", Offset = "0x88E68C", VA = "0x88E68C")]
		public bool TryGetConstraint(uint constraintCode, out TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x88E704", Offset = "0x88E704", VA = "0x88E704")]
		public int GetNumConstraints()
		{
			return default(int);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x88E76C", Offset = "0x88E76C", VA = "0x88E76C")]
		public Dictionary<uint, TriangulationConstraint>.Enumerator GetConstraintEnumerator()
		{
			return default(Dictionary<uint, TriangulationConstraint>.Enumerator);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x88E7F8", Offset = "0x88E7F8", VA = "0x88E7F8")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x88EAD0", Offset = "0x88EAD0", VA = "0x88EAD0")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x88EB80", Offset = "0x88EB80", VA = "0x88EB80")]
		public int GetActualHoles(out List<Contour> holes)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x88EF10", Offset = "0x88EF10", VA = "0x88EF10")]
		protected void InitializeHoles()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x890794", Offset = "0x890794", VA = "0x890794", Slot = "65")]
		public override bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x8907B4", Offset = "0x8907B4", VA = "0x8907B4", Slot = "66")]
		public override void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x890950", Offset = "0x890950", VA = "0x890950", Slot = "64")]
		public override void AddTriangle(DelaunayTriangle t)
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x27087C", Offset = "0x27087C")]
	public class PointSet : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730EC", Offset = "0x2730EC")]
		private IList<DelaunayTriangle> <Triangles>k__BackingField;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2730FC", Offset = "0x2730FC")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27310C", Offset = "0x27310C")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27311C", Offset = "0x27311C")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27312C", Offset = "0x27312C")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected double mPrecision;

		[Token(Token = "0x17000174")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x78AF3C", Offset = "0x78AF3C", VA = "0x78AF3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x78AF40", Offset = "0x78AF40", VA = "0x78AF40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x78AF44", Offset = "0x78AF44", VA = "0x78AF44", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769E0", Offset = "0x2769E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x78AF4C", Offset = "0x78AF4C", VA = "0x78AF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2769F0", Offset = "0x2769F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public string FileName
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x78AF54", Offset = "0x78AF54", VA = "0x78AF54", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A00", Offset = "0x276A00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x78AF5C", Offset = "0x78AF5C", VA = "0x78AF5C", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A10", Offset = "0x276A10")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x78AF64", Offset = "0x78AF64", VA = "0x78AF64", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A20", Offset = "0x276A20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x78AF6C", Offset = "0x78AF6C", VA = "0x78AF6C", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A30", Offset = "0x276A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x78AF74", Offset = "0x78AF74", VA = "0x78AF74", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A40", Offset = "0x276A40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x78AF7C", Offset = "0x78AF7C", VA = "0x78AF7C", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A50", Offset = "0x276A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x78AF84", Offset = "0x78AF84", VA = "0x78AF84", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A60", Offset = "0x276A60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x78AF8C", Offset = "0x78AF8C", VA = "0x78AF8C", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A70", Offset = "0x276A70")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public double Precision
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x78AF94", Offset = "0x78AF94", VA = "0x78AF94", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x78AFA0", Offset = "0x78AFA0", VA = "0x78AFA0", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public double MinX
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x78AFB0", Offset = "0x78AFB0", VA = "0x78AFB0", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700017C")]
		public double MaxX
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x78AFD4", Offset = "0x78AFD4", VA = "0x78AFD4", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700017D")]
		public double MinY
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x78AFF8", Offset = "0x78AFF8", VA = "0x78AFF8", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700017E")]
		public double MaxY
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x78B01C", Offset = "0x78B01C", VA = "0x78B01C", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700017F")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x78B040", Offset = "0x78B040", VA = "0x78B040", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public virtual TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x78B048", Offset = "0x78B048", VA = "0x78B048", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x17000181")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x78B050", Offset = "0x78B050", VA = "0x78B050", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x78B11C", Offset = "0x78B11C", VA = "0x78B11C", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x78B194", Offset = "0x78B194", VA = "0x78B194")]
		public PointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x78B59C", Offset = "0x78B59C", VA = "0x78B59C", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x78B608", Offset = "0x78B608", VA = "0x78B608", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x78B678", Offset = "0x78B678", VA = "0x78B678", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x78B71C", Offset = "0x78B71C", VA = "0x78B71C", Slot = "62")]
		public virtual void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x78B73C", Offset = "0x78B73C", VA = "0x78B73C", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool constrainToBounds)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x78B430", Offset = "0x78B430", VA = "0x78B430")]
		protected bool Add(TriangulationPoint p, int idx, bool constrainToBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x78BAA4", Offset = "0x78BAA4", VA = "0x78BAA4", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x78BC88", Offset = "0x78BC88", VA = "0x78BC88", Slot = "63")]
		public virtual bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x78BDE4", Offset = "0x78BDE4", VA = "0x78BDE4")]
		public bool TryGetPoint(double x, double y, out TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x78BED4", Offset = "0x78BED4", VA = "0x78BED4", Slot = "52")]
		public void Insert(int idx, TriangulationPoint item)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x78BF4C", Offset = "0x78BF4C", VA = "0x78BF4C", Slot = "24")]
		public override bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x78BFBC", Offset = "0x78BFBC", VA = "0x78BFBC", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x78C02C", Offset = "0x78C02C", VA = "0x78C02C", Slot = "25")]
		public override void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x78C0B8", Offset = "0x78C0B8", VA = "0x78C0B8", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x78C128", Offset = "0x78C128", VA = "0x78C128", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x78C314", Offset = "0x78C314", VA = "0x78C314")]
		protected bool ConstrainPointToBounds(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x78B7E8", Offset = "0x78B7E8", VA = "0x78B7E8")]
		protected bool ConstrainPointToBounds(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x78C5D0", Offset = "0x78C5D0", VA = "0x78C5D0", Slot = "64")]
		public virtual void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x78C6A0", Offset = "0x78C6A0", VA = "0x78C6A0", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x78C9CC", Offset = "0x78C9CC", VA = "0x78C9CC", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x78CA94", Offset = "0x78CA94", VA = "0x78CA94", Slot = "65")]
		public virtual bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x78CA9C", Offset = "0x78CA9C", VA = "0x78CA9C", Slot = "66")]
		public virtual void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum TriangulationAlgorithm
	{
		[Token(Token = "0x4000C44")]
		DTSweep
	}
	[Token(Token = "0x200022D")]
	public class Edge
	{
		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected Point2D mP;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected Point2D mQ;

		[Token(Token = "0x17000182")]
		public Point2D EdgeStart
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x4E9430", Offset = "0x4E9430", VA = "0x4E9430")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x4E9438", Offset = "0x4E9438", VA = "0x4E9438")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public Point2D EdgeEnd
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x4E9440", Offset = "0x4E9440", VA = "0x4E9440")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x4E9448", Offset = "0x4E9448", VA = "0x4E9448")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x4E9450", Offset = "0x4E9450", VA = "0x4E9450")]
		public Edge()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x4E948C", Offset = "0x4E948C", VA = "0x4E948C")]
		public Edge(Point2D edgeStart, Point2D edgeEnd)
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TriangulationConstraint : Edge
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint mContraintCode;

		[Token(Token = "0x17000184")]
		public TriangulationPoint P
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xB49E34", Offset = "0xB49E34", VA = "0xB49E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xB49EC0", Offset = "0xB49EC0", VA = "0xB49EC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public TriangulationPoint Q
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xB49F20", Offset = "0xB49F20", VA = "0xB49F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xB49FAC", Offset = "0xB49FAC", VA = "0xB49FAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public uint ConstraintCode
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xB49FDC", Offset = "0xB49FDC", VA = "0xB49FDC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xB49FE4", Offset = "0xB49FE4", VA = "0xB49FE4")]
		public TriangulationConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xB4A16C", Offset = "0xB4A16C", VA = "0xB4A16C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xB49EF0", Offset = "0xB49EF0", VA = "0xB49EF0")]
		public void CalculateContraintCode()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xB4A51C", Offset = "0xB4A51C", VA = "0xB4A51C")]
		public static uint CalculateContraintCode(TriangulationPoint p, TriangulationPoint q)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200022F")]
	public abstract class TriangulationContext
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27313C", Offset = "0x27313C")]
		private TriangulationDebugContext <DebugContext>k__BackingField;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly List<DelaunayTriangle> Triangles;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly List<TriangulationPoint> Points;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27314C", Offset = "0x27314C")]
		private TriangulationMode <TriangulationMode>k__BackingField;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27315C", Offset = "0x27315C")]
		private ITriangulatable <Triangulatable>k__BackingField;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27316C", Offset = "0x27316C")]
		private int <StepCount>k__BackingField;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27317C", Offset = "0x27317C")]
		private bool <IsDebugEnabled>k__BackingField;

		[Token(Token = "0x17000187")]
		public TriangulationDebugContext DebugContext
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xB4A65C", Offset = "0xB4A65C", VA = "0xB4A65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A80", Offset = "0x276A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xB4A664", Offset = "0xB4A664", VA = "0xB4A664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276A90", Offset = "0x276A90")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xB4A66C", Offset = "0xB4A66C", VA = "0xB4A66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AA0", Offset = "0x276AA0")]
			get
			{
				return default(TriangulationMode);
			}
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xB4A674", Offset = "0xB4A674", VA = "0xB4A674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AB0", Offset = "0x276AB0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public ITriangulatable Triangulatable
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xB4A67C", Offset = "0xB4A67C", VA = "0xB4A67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AC0", Offset = "0x276AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xB4A684", Offset = "0xB4A684", VA = "0xB4A684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AD0", Offset = "0x276AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public int StepCount
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xB4A68C", Offset = "0xB4A68C", VA = "0xB4A68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AE0", Offset = "0x276AE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xB4A694", Offset = "0xB4A694", VA = "0xB4A694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276AF0", Offset = "0x276AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public abstract TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6000E08")]
			get;
		}

		[Token(Token = "0x1700018C")]
		public virtual bool IsDebugEnabled
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xB4A894", Offset = "0xB4A894", VA = "0xB4A894", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276B00", Offset = "0x276B00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xB4A89C", Offset = "0xB4A89C", VA = "0xB4A89C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276B10", Offset = "0x276B10")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public DTSweepDebugContext DTDebugContext
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xB4A8A4", Offset = "0xB4A8A4", VA = "0xB4A8A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xB4A69C", Offset = "0xB4A69C", VA = "0xB4A69C")]
		public void Done()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xB4A6AC", Offset = "0xB4A6AC", VA = "0xB4A6AC", Slot = "5")]
		public virtual void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6000E0A")]
		public abstract TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b);

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xB4A804", Offset = "0xB4A804", VA = "0xB4A804")]
		public void Update(string message)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xB4A808", Offset = "0xB4A808", VA = "0xB4A808", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xB4A930", Offset = "0xB4A930", VA = "0xB4A930")]
		protected TriangulationContext()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public abstract class TriangulationDebugContext
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected TriangulationContext _tcx;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xB4AA30", Offset = "0xB4AA30", VA = "0xB4AA30")]
		public TriangulationDebugContext(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000E12")]
		public abstract void Clear();
	}
	[Token(Token = "0x2000231")]
	public enum TriangulationMode
	{
		[Token(Token = "0x4000C51")]
		Unconstrained,
		[Token(Token = "0x4000C52")]
		Constrained,
		[Token(Token = "0x4000C53")]
		Polygon
	}
	[Token(Token = "0x2000232")]
	public class TriangulationPoint : Point2D
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly double kVertexCodeDefaultPrecision;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint mVertexCode;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27318C", Offset = "0x27318C")]
		private List<DTSweepConstraint> <Edges>k__BackingField;

		[Token(Token = "0x1700018E")]
		public override double X
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xB4AA5C", Offset = "0xB4AA5C", VA = "0xB4AA5C", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xB4AA68", Offset = "0xB4AA68", VA = "0xB4AA68", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public override double Y
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xB4AC80", Offset = "0xB4AC80", VA = "0xB4AC80", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xB4AC8C", Offset = "0xB4AC8C", VA = "0xB4AC8C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public uint VertexCode
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xB4AD54", Offset = "0xB4AD54", VA = "0xB4AD54")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000191")]
		public List<DTSweepConstraint> Edges
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xB4AD5C", Offset = "0xB4AD5C", VA = "0xB4AD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276B20", Offset = "0x276B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xB4AD64", Offset = "0xB4AD64", VA = "0xB4AD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276B30", Offset = "0x276B30")]
			private set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public bool HasEdges
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xB4AD6C", Offset = "0xB4AD6C", VA = "0xB4AD6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xB4AD7C", Offset = "0xB4AD7C", VA = "0xB4AD7C")]
		public TriangulationPoint(double x, double y)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xB4AE28", Offset = "0xB4AE28", VA = "0xB4AE28")]
		public TriangulationPoint(double x, double y, double precision)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xB4AEE8", Offset = "0xB4AEE8", VA = "0xB4AEE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xB4AF90", Offset = "0xB4AF90", VA = "0xB4AF90", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xB4AF98", Offset = "0xB4AF98", VA = "0xB4AF98", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xB4B044", Offset = "0xB4B044", VA = "0xB4B044", Slot = "9")]
		public override void Set(double x, double y)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xB4AB2C", Offset = "0xB4AB2C", VA = "0xB4AB2C")]
		public static uint CreateVertexCode(double x, double y, double precision)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xB4B11C", Offset = "0xB4B11C", VA = "0xB4B11C")]
		public void AddEdge(DTSweepConstraint e)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xB4B1F8", Offset = "0xB4B1F8", VA = "0xB4B1F8")]
		public bool HasEdge(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xB4B21C", Offset = "0xB4B21C", VA = "0xB4B21C")]
		public bool GetEdge(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xB4B530", Offset = "0xB4B530", VA = "0xB4B530")]
		public static Point2D ToPoint2D(TriangulationPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000233")]
	public class TriangulationPointEnumerator : IEnumerator<TriangulationPoint>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected int position;

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xB4B6C4", Offset = "0xB4B6C4", VA = "0xB4B6C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public TriangulationPoint Current
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xB4B6C8", Offset = "0xB4B6C8", VA = "0xB4B6C8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xB4B598", Offset = "0xB4B598", VA = "0xB4B598")]
		public TriangulationPointEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xB4B5D0", Offset = "0xB4B5D0", VA = "0xB4B5D0", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xB4B6B4", Offset = "0xB4B6B4", VA = "0xB4B6B4", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xB4B6C0", Offset = "0xB4B6C0", VA = "0xB4B6C0", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class TriangulationPointList : Point2DList
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xB4B8A8", Offset = "0xB4B8A8", VA = "0xB4B8A8")]
		public TriangulationPointList()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class PointGenerator
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x78AAF0", Offset = "0x78AAF0", VA = "0x78AAF0")]
		public static List<TriangulationPoint> UniformDistribution(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x78ACD8", Offset = "0x78ACD8", VA = "0x78ACD8")]
		public static List<TriangulationPoint> UniformGrid(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x78AE58", Offset = "0x78AE58", VA = "0x78AE58")]
		public PointGenerator()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class PolygonGenerator
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static double PI_2;

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x78E990", Offset = "0x78E990", VA = "0x78E990")]
		public static Polygon RandomCircleSweep(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x78ED7C", Offset = "0x78ED7C", VA = "0x78ED7C")]
		public static Polygon RandomCircleSweep2(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x78F06C", Offset = "0x78F06C", VA = "0x78F06C")]
		public PolygonGenerator()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class TriangulationUtil
	{
		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xB4B920", Offset = "0xB4B920", VA = "0xB4B920")]
		public static bool SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xB4BB1C", Offset = "0xB4BB1C", VA = "0xB4BB1C")]
		public static bool InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xB4BCDC", Offset = "0xB4BCDC", VA = "0xB4BCDC")]
		public static Orientation Orient2d(Point2D pa, Point2D pb, Point2D pc)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xB4BEF8", Offset = "0xB4BEF8", VA = "0xB4BEF8")]
		public static bool PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xB4BFD0", Offset = "0xB4BFD0", VA = "0xB4BFD0")]
		public static bool PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd, Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xB4C114", Offset = "0xB4C114", VA = "0xB4C114")]
		public static bool PointOnLineSegment2D(double x1, double y1, double x2, double y2, double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xB4C2CC", Offset = "0xB4C2CC", VA = "0xB4C2CC")]
		public static bool RectsIntersect(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xB4C358", Offset = "0xB4C358", VA = "0xB4C358")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, bool firstIsSegment, bool secondIsSegment, bool coincidentEndPointCollisions, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xB4CA10", Offset = "0xB4CA10", VA = "0xB4CA10")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xB4CA48", Offset = "0xB4CA48", VA = "0xB4CA48")]
		public static double LI2DDotProduct(Point2D v0, Point2D v1)
		{
			return default(double);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xB4CB00", Offset = "0xB4CB00", VA = "0xB4CB00")]
		public static bool RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0, Point2D ptRayOrigin1, Point2D ptRayVector1, ref Point2D ptIntersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xB4CF3C", Offset = "0xB4CF3C", VA = "0xB4CF3C")]
		public TriangulationUtil()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2708B0", Offset = "0x2708B0")]
	public struct FixedArray3<T> : IEnumerable<T>, IEnumerable where T : class
	{
		[Token(Token = "0x2000239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2708E4", Offset = "0x2708E4")]
		private sealed class <Enumerate>d__10 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>4__this;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>3__<>4__this;

			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000196")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6000E4E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000197")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E50")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E4B")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4F")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000E51")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000E52")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _0;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _1;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _2;

		[Token(Token = "0x17000195")]
		public T Item
		{
			[Token(Token = "0x6000E42")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E43")]
			set
			{
			}
		}

		[Token(Token = "0x6000E44")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E45")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x6000E46")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E47")]
		public void Clear(T value)
		{
		}

		[Token(Token = "0x6000E48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276B40", Offset = "0x276B40")]
		private IEnumerable<T> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x2708F4", Offset = "0x2708F4")]
	public struct FixedBitArray3 : IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x200023B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270928", Offset = "0x270928")]
		private sealed class <Enumerate>d__10 : IEnumerable<bool>, IEnumerable, IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private bool <>2__current;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FixedBitArray3 <>4__this;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public FixedBitArray3 <>3__<>4__this;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int <i>5__2;

			[Token(Token = "0x17000199")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000E5F")]
				[Address(RVA = "0x53ABF8", Offset = "0x53ABF8", VA = "0x53ABF8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E61")]
				[Address(RVA = "0x53AC48", Offset = "0x53AC48", VA = "0x53AC48", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x53AB54", Offset = "0x53AB54", VA = "0x53AB54")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x53AB80", Offset = "0x53AB80", VA = "0x53AB80", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x53AB84", Offset = "0x53AB84", VA = "0x53AB84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x53AC00", Offset = "0x53AC00", VA = "0x53AC00", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x53ACB0", Offset = "0x53ACB0", VA = "0x53ACB0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<bool> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x53AD74", Offset = "0x53AD74", VA = "0x53AD74", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _0;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool _1;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool _2;

		[Token(Token = "0x17000198")]
		public bool Item
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x4ED414", Offset = "0x4ED414", VA = "0x4ED414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x4ED488", Offset = "0x4ED488", VA = "0x4ED488")]
			set
			{
			}
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x4ED4F4", Offset = "0x4ED4F4", VA = "0x4ED4F4")]
		public bool Contains(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x4ED53C", Offset = "0x4ED53C", VA = "0x4ED53C")]
		public int IndexOf(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x4ED584", Offset = "0x4ED584", VA = "0x4ED584")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x4ED594", Offset = "0x4ED594", VA = "0x4ED594")]
		public void Clear(bool value)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x4ED5DC", Offset = "0x4ED5DC", VA = "0x4ED5DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276C1C", Offset = "0x276C1C")]
		private IEnumerable<bool> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x4ED668", Offset = "0x4ED668", VA = "0x4ED668", Slot = "4")]
		public IEnumerator<bool> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x4ED738", Offset = "0x4ED738", VA = "0x4ED738", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200023C")]
	public class MathUtil
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static double EPSILON;

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x7D01C8", Offset = "0x7D01C8", VA = "0x7D01C8")]
		public static bool AreValuesEqual(double val1, double val2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x7D0288", Offset = "0x7D0288", VA = "0x7D0288")]
		public static bool AreValuesEqual(double val1, double val2, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x7D02C4", Offset = "0x7D02C4", VA = "0x7D02C4")]
		public static bool IsValueBetween(double val, double min, double max, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x7D0320", Offset = "0x7D0320", VA = "0x7D0320")]
		public static double RoundWithPrecision(double f, double precision)
		{
			return default(double);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x7D03F4", Offset = "0x7D03F4", VA = "0x7D03F4")]
		public static double Clamp(double a, double low, double high)
		{
			return default(double);
		}

		[Token(Token = "0x6000E69")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x7D04B0", Offset = "0x7D04B0", VA = "0x7D04B0")]
		public static uint Jenkins32Hash(byte[] data, uint nInitialValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x7D051C", Offset = "0x7D051C", VA = "0x7D051C")]
		public MathUtil()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class Point2D : IComparable<Point2D>
	{
		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected double mX;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double mY;

		[Token(Token = "0x1700019B")]
		public virtual double X
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x783BC0", Offset = "0x783BC0", VA = "0x783BC0", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x783BCC", Offset = "0x783BCC", VA = "0x783BCC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public virtual double Y
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x783BDC", Offset = "0x783BDC", VA = "0x783BDC", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x783BE8", Offset = "0x783BE8", VA = "0x783BE8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public float Xf
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x783BF8", Offset = "0x783BF8", VA = "0x783BF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019E")]
		public float Yf
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x783C20", Offset = "0x783C20", VA = "0x783C20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x783C48", Offset = "0x783C48", VA = "0x783C48")]
		public Point2D()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x783C6C", Offset = "0x783C6C", VA = "0x783C6C")]
		public Point2D(double x, double y)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x783C9C", Offset = "0x783C9C", VA = "0x783C9C")]
		public Point2D(Point2D p)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x783D00", Offset = "0x783D00", VA = "0x783D00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x783FDC", Offset = "0x783FDC", VA = "0x783FDC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x783FE4", Offset = "0x783FE4", VA = "0x783FE4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x78409C", Offset = "0x78409C", VA = "0x78409C")]
		public bool Equals(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x7840BC", Offset = "0x7840BC", VA = "0x7840BC")]
		public bool Equals(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x78423C", Offset = "0x78423C", VA = "0x78423C", Slot = "4")]
		public int CompareTo(Point2D other)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x78437C", Offset = "0x78437C", VA = "0x78437C", Slot = "9")]
		public virtual void Set(double x, double y)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x7843CC", Offset = "0x7843CC", VA = "0x7843CC", Slot = "10")]
		public virtual void Set(Point2D p)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x784468", Offset = "0x784468", VA = "0x784468")]
		public void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x784544", Offset = "0x784544", VA = "0x784544")]
		public void Add(double scalar)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x7845D8", Offset = "0x7845D8", VA = "0x7845D8")]
		public void Subtract(Point2D p)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x7846B4", Offset = "0x7846B4", VA = "0x7846B4")]
		public void Subtract(double scalar)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x784748", Offset = "0x784748", VA = "0x784748")]
		public void Multiply(Point2D p)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x784824", Offset = "0x784824", VA = "0x784824")]
		public void Multiply(double scalar)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x7848B8", Offset = "0x7848B8", VA = "0x7848B8")]
		public void Divide(Point2D p)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x784994", Offset = "0x784994", VA = "0x784994")]
		public void Divide(double scalar)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x784A28", Offset = "0x784A28", VA = "0x784A28")]
		public void Negate()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x784AA8", Offset = "0x784AA8", VA = "0x784AA8")]
		public double Magnitude()
		{
			return default(double);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x784BD0", Offset = "0x784BD0", VA = "0x784BD0")]
		public double MagnitudeSquared()
		{
			return default(double);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x784C68", Offset = "0x784C68", VA = "0x784C68")]
		public double MagnitudeReciprocal()
		{
			return default(double);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x784C88", Offset = "0x784C88", VA = "0x784C88")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x784CBC", Offset = "0x784CBC", VA = "0x784CBC")]
		public double Dot(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x784D68", Offset = "0x784D68", VA = "0x784D68")]
		public double Cross(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x784E14", Offset = "0x784E14", VA = "0x784E14")]
		public void Clamp(Point2D low, Point2D high)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x784FF4", Offset = "0x784FF4", VA = "0x784FF4")]
		public void Abs()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x7850E4", Offset = "0x7850E4", VA = "0x7850E4")]
		public void Reciprocal()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x7851C0", Offset = "0x7851C0", VA = "0x7851C0")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x7851C4", Offset = "0x7851C4", VA = "0x7851C4")]
		public void Translate(double x, double y)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x78525C", Offset = "0x78525C", VA = "0x78525C")]
		public void Scale(Point2D vector)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x785260", Offset = "0x785260", VA = "0x785260")]
		public void Scale(double scalar)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x785278", Offset = "0x785278", VA = "0x785278")]
		public void Scale(double x, double y)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x785310", Offset = "0x785310", VA = "0x785310")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x785450", Offset = "0x785450", VA = "0x785450")]
		public void RotateDegrees(double degrees)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x785490", Offset = "0x785490", VA = "0x785490")]
		public static double Dot(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x785548", Offset = "0x785548", VA = "0x785548")]
		public static double Cross(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x785600", Offset = "0x785600", VA = "0x785600")]
		public static Point2D Clamp(Point2D a, Point2D low, Point2D high)
		{
			return null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x785688", Offset = "0x785688", VA = "0x785688")]
		public static Point2D Min(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x785860", Offset = "0x785860", VA = "0x785860")]
		public static Point2D Max(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x785A38", Offset = "0x785A38", VA = "0x785A38")]
		public static Point2D Abs(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x785B38", Offset = "0x785B38", VA = "0x785B38")]
		public static Point2D Reciprocal(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x785C08", Offset = "0x785C08", VA = "0x785C08")]
		public static Point2D Perpendicular(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x785CE0", Offset = "0x785CE0", VA = "0x785CE0")]
		public static Point2D Perpendicular(double scalar, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x785DB8", Offset = "0x785DB8", VA = "0x785DB8")]
		public static Point2D operator +(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x785E38", Offset = "0x785E38", VA = "0x785E38")]
		public static Point2D operator +(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x785EC8", Offset = "0x785EC8", VA = "0x785EC8")]
		public static Point2D operator -(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x785F48", Offset = "0x785F48", VA = "0x785F48")]
		public static Point2D operator -(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x785FD8", Offset = "0x785FD8", VA = "0x785FD8")]
		public static Point2D operator *(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x786058", Offset = "0x786058", VA = "0x786058")]
		public static Point2D operator *(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x7860E8", Offset = "0x7860E8", VA = "0x7860E8")]
		public static Point2D operator *(double scalar, Point2D lhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x786178", Offset = "0x786178", VA = "0x786178")]
		public static Point2D operator /(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x7861F8", Offset = "0x7861F8", VA = "0x7861F8")]
		public static Point2D operator /(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x786288", Offset = "0x786288", VA = "0x786288")]
		public static Point2D operator -(Point2D p)
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x786300", Offset = "0x786300", VA = "0x786300")]
		public static bool operator <(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x786338", Offset = "0x786338", VA = "0x786338")]
		public static bool operator >(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x786370", Offset = "0x786370", VA = "0x786370")]
		public static bool operator <=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x7863AC", Offset = "0x7863AC", VA = "0x7863AC")]
		public static bool operator >=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023E")]
	public class Point2DEnumerator : IEnumerator<Point2D>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected int position;

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x78650C", Offset = "0x78650C", VA = "0x78650C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public Point2D Current
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x786510", Offset = "0x786510", VA = "0x786510", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x7863E0", Offset = "0x7863E0", VA = "0x7863E0")]
		public Point2DEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x786418", Offset = "0x786418", VA = "0x786418", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x7864FC", Offset = "0x7864FC", VA = "0x7864FC", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x786508", Offset = "0x786508", VA = "0x786508", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x270938", Offset = "0x270938")]
	public class Point2DList : IEnumerable<Point2D>, IEnumerable, IList<Point2D>, ICollection<Point2D>
	{
		[Token(Token = "0x2000240")]
		public enum WindingOrderType
		{
			[Token(Token = "0x4000C7B")]
			CW = 0,
			[Token(Token = "0x4000C7C")]
			CCW = 1,
			[Token(Token = "0x4000C7D")]
			Unknown = 2,
			[Token(Token = "0x4000C7E")]
			Default = 1
		}

		[Token(Token = "0x2000241")]
		[Flags]
		public enum PolygonError : uint
		{
			[Token(Token = "0x4000C80")]
			None = 0u,
			[Token(Token = "0x4000C81")]
			NotEnoughVertices = 1u,
			[Token(Token = "0x4000C82")]
			NotConvex = 2u,
			[Token(Token = "0x4000C83")]
			NotSimple = 4u,
			[Token(Token = "0x4000C84")]
			AreaTooSmall = 8u,
			[Token(Token = "0x4000C85")]
			SidesTooCloseToParallel = 0x10u,
			[Token(Token = "0x4000C86")]
			TooThin = 0x20u,
			[Token(Token = "0x4000C87")]
			Degenerate = 0x40u,
			[Token(Token = "0x4000C88")]
			Unknown = 0x40000000u
		}

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int kMaxPolygonVertices;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly double kLinearSlop;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly double kAngularSlop;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected List<Point2D> mPoints;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected Rect2D mBoundingBox;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected WindingOrderType mWindingOrder;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double mEpsilon;

		[Token(Token = "0x170001A1")]
		public Rect2D BoundingBox
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x786694", Offset = "0x786694", VA = "0x786694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public WindingOrderType WindingOrder
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x78669C", Offset = "0x78669C", VA = "0x78669C")]
			get
			{
				return default(WindingOrderType);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x7866A4", Offset = "0x7866A4", VA = "0x7866A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public double Epsilon
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x786778", Offset = "0x786778", VA = "0x786778")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001A4")]
		public Point2D Item
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x786784", Offset = "0x786784", VA = "0x786784", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x7867F8", Offset = "0x7867F8", VA = "0x7867F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public int Count
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x786870", Offset = "0x786870", VA = "0x786870", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A6")]
		public virtual bool IsReadOnly
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x7868C4", Offset = "0x7868C4", VA = "0x7868C4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x7868CC", Offset = "0x7868CC", VA = "0x7868CC")]
		public Point2DList()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x786A00", Offset = "0x786A00", VA = "0x786A00")]
		public Point2DList(int capacity)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x786B74", Offset = "0x786B74", VA = "0x786B74")]
		public Point2DList(IList<Point2D> l)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x786D5C", Offset = "0x786D5C", VA = "0x786D5C")]
		public Point2DList(Point2DList l)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x786F74", Offset = "0x786F74", VA = "0x786F74", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x7870B8", Offset = "0x7870B8", VA = "0x7870B8", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x787160", Offset = "0x787160", VA = "0x787160", Slot = "4")]
		private IEnumerator<Point2D> System.Collections.Generic.IEnumerable<Poly2Tri.Point2D>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x7871E4", Offset = "0x7871E4", VA = "0x7871E4", Slot = "14")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x7872BC", Offset = "0x7872BC", VA = "0x7872BC", Slot = "8")]
		public int IndexOf(Point2D p)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x78732C", Offset = "0x78732C", VA = "0x78732C", Slot = "19")]
		public virtual void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x78735C", Offset = "0x78735C", VA = "0x78735C", Slot = "20")]
		protected virtual void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x7875CC", Offset = "0x7875CC", VA = "0x7875CC", Slot = "21")]
		public virtual void AddRange(Point2DList l)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x7876A0", Offset = "0x7876A0", VA = "0x7876A0", Slot = "22")]
		public virtual void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x787A44", Offset = "0x787A44", VA = "0x787A44", Slot = "23")]
		public virtual void Insert(int idx, Point2D item)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x787A7C", Offset = "0x787A7C", VA = "0x787A7C", Slot = "24")]
		public virtual bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x787C90", Offset = "0x787C90", VA = "0x787C90", Slot = "25")]
		public virtual void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x787D2C", Offset = "0x787D2C", VA = "0x787D2C", Slot = "26")]
		public virtual void RemoveRange(int idxStart, int count)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x787DD8", Offset = "0x787DD8", VA = "0x787DD8", Slot = "15")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x787E48", Offset = "0x787E48", VA = "0x787E48", Slot = "16")]
		public void CopyTo(Point2D[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x787B14", Offset = "0x787B14", VA = "0x787B14")]
		public void CalculateBounds()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x787478", Offset = "0x787478", VA = "0x787478")]
		public double CalculateEpsilon()
		{
			return default(double);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x78674C", Offset = "0x78674C", VA = "0x78674C")]
		public WindingOrderType CalculateWindingOrder()
		{
			return default(WindingOrderType);
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x788124", Offset = "0x788124", VA = "0x788124")]
		public int NextIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x788144", Offset = "0x788144", VA = "0x788144")]
		public int PreviousIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x787FB8", Offset = "0x787FB8", VA = "0x787FB8")]
		public double GetSignedArea()
		{
			return default(double);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x788168", Offset = "0x788168", VA = "0x788168")]
		public double GetArea()
		{
			return default(double);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x7882E8", Offset = "0x7882E8", VA = "0x7882E8")]
		public Point2D GetCentroid()
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x788474", Offset = "0x788474", VA = "0x788474")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x7884D0", Offset = "0x7884D0", VA = "0x7884D0")]
		public void Scale(Point2D value)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x78852C", Offset = "0x78852C", VA = "0x78852C")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x7887A0", Offset = "0x7887A0", VA = "0x7887A0")]
		public bool IsDegenerate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x7889A8", Offset = "0x7889A8", VA = "0x7889A8")]
		public bool IsConvex()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x788C84", Offset = "0x788C84", VA = "0x788C84")]
		public bool IsSimple()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x788E6C", Offset = "0x788E6C", VA = "0x788E6C")]
		public PolygonError CheckPolygon()
		{
			return default(PolygonError);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x789568", Offset = "0x789568", VA = "0x789568")]
		public static string GetErrorString(PolygonError error)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x789E10", Offset = "0x789E10", VA = "0x789E10")]
		public void RemoveDuplicateNeighborPoints()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x789FE0", Offset = "0x789FE0", VA = "0x789FE0")]
		public void Simplify()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x78A000", Offset = "0x78A000", VA = "0x78A000")]
		public void Simplify(double bias)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x78A164", Offset = "0x78A164", VA = "0x78A164")]
		public void MergeParallelEdges(double tolerance)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x78A9B0", Offset = "0x78A9B0", VA = "0x78A9B0")]
		public void ProjectToAxis(Point2D axis, out double min, out double max)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class Rect2D
	{
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private double mMinX;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mMaxX;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double mMinY;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double mMaxY;

		[Token(Token = "0x170001A7")]
		public double MinX
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x70D6DC", Offset = "0x70D6DC", VA = "0x70D6DC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x70D6E8", Offset = "0x70D6E8", VA = "0x70D6E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public double MaxX
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x70D6F8", Offset = "0x70D6F8", VA = "0x70D6F8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x70D704", Offset = "0x70D704", VA = "0x70D704")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public double MinY
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x70D714", Offset = "0x70D714", VA = "0x70D714")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x70D720", Offset = "0x70D720", VA = "0x70D720")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public double MaxY
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x70D730", Offset = "0x70D730", VA = "0x70D730")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x70D73C", Offset = "0x70D73C", VA = "0x70D73C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public double Left
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x70D74C", Offset = "0x70D74C", VA = "0x70D74C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x70D758", Offset = "0x70D758", VA = "0x70D758")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public double Right
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x70D768", Offset = "0x70D768", VA = "0x70D768")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x70D774", Offset = "0x70D774", VA = "0x70D774")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public double Top
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x70D784", Offset = "0x70D784", VA = "0x70D784")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x70D790", Offset = "0x70D790", VA = "0x70D790")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public double Bottom
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x70D7A0", Offset = "0x70D7A0", VA = "0x70D7A0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x70D7AC", Offset = "0x70D7AC", VA = "0x70D7AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public double Width
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x705C98", Offset = "0x705C98", VA = "0x705C98")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001B0")]
		public double Height
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x70D7BC", Offset = "0x70D7BC", VA = "0x70D7BC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool Empty
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x70D7D0", Offset = "0x70D7D0", VA = "0x70D7D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x70D804", Offset = "0x70D804", VA = "0x70D804")]
		public Rect2D()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x70D870", Offset = "0x70D870", VA = "0x70D870", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x70D878", Offset = "0x70D878", VA = "0x70D878", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x70D91C", Offset = "0x70D91C", VA = "0x70D91C")]
		public bool Equals(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x70D9B0", Offset = "0x70D9B0", VA = "0x70D9B0")]
		public bool Equals(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x70D844", Offset = "0x70D844", VA = "0x70D844")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x70DB44", Offset = "0x70DB44", VA = "0x70DB44")]
		public void Set(double xmin, double xmax, double ymin, double ymax)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x70DC88", Offset = "0x70DC88", VA = "0x70DC88")]
		public void Set(Rect2D b)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x70DCFC", Offset = "0x70DCFC", VA = "0x70DCFC")]
		public void SetSize(double w, double h)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x70DD20", Offset = "0x70DD20", VA = "0x70DD20")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x70DD78", Offset = "0x70DD78", VA = "0x70DD78")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x70DE28", Offset = "0x70DE28", VA = "0x70DE28")]
		public bool Contains(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x70DEA8", Offset = "0x70DEA8", VA = "0x70DEA8")]
		public bool ContainsInclusive(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x70DF00", Offset = "0x70DF00", VA = "0x70DF00")]
		public bool ContainsInclusive(double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x70DF6C", Offset = "0x70DF6C", VA = "0x70DF6C")]
		public bool ContainsInclusive(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x70E01C", Offset = "0x70E01C", VA = "0x70E01C")]
		public bool ContainsInclusive(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x70E0E8", Offset = "0x70E0E8", VA = "0x70E0E8")]
		public bool ContainsInclusive(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x70E168", Offset = "0x70E168", VA = "0x70E168")]
		public bool ContainsInclusive(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x705C18", Offset = "0x705C18", VA = "0x705C18")]
		public bool Intersects(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x70E1FC", Offset = "0x70E1FC", VA = "0x70E1FC")]
		public Point2D GetCenter()
		{
			return null;
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x70E2A4", Offset = "0x70E2A4", VA = "0x70E2A4")]
		public bool IsNormalized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x70DB6C", Offset = "0x70DB6C", VA = "0x70DB6C")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x70E2DC", Offset = "0x70E2DC", VA = "0x70E2DC")]
		public void AddPoint(Point2D p)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x70E434", Offset = "0x70E434", VA = "0x70E434")]
		public void Inflate(double w, double h)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x70E460", Offset = "0x70E460", VA = "0x70E460")]
		public void Inflate(double left, double top, double right, double bottom)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x70E498", Offset = "0x70E498", VA = "0x70E498")]
		public void Offset(double w, double h)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x70E4C4", Offset = "0x70E4C4", VA = "0x70E4C4")]
		public void SetPosition(double x, double y)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x70E4F8", Offset = "0x70E4F8", VA = "0x70E4F8")]
		public bool Intersection(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x70E604", Offset = "0x70E604", VA = "0x70E604")]
		public void Union(Rect2D r1, Rect2D r2)
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x2000243")]
	public class AnalyticsQueueFlusher : MonoBehaviour
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x27319C", Offset = "0x27319C")]
		public float m_flushTimeout;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_flushTimer;

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x97A654", Offset = "0x97A654", VA = "0x97A654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x97A80C", Offset = "0x97A80C", VA = "0x97A80C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x97A96C", Offset = "0x97A96C", VA = "0x97A96C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x97A9E0", Offset = "0x97A9E0", VA = "0x97A9E0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x97AA14", Offset = "0x97AA14", VA = "0x97AA14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x97AA80", Offset = "0x97AA80", VA = "0x97AA80")]
		private void OnAnalyticEventEmitted()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x97A9AC", Offset = "0x97A9AC", VA = "0x97A9AC")]
		private void FlushNow()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x97AAB4", Offset = "0x97AAB4", VA = "0x97AAB4")]
		public AnalyticsQueueFlusher()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class AnalyticsService
	{
		[Token(Token = "0x2000245")]
		protected struct PlatformInformation
		{
			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string vrHeadsetMake;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string vrHeadsetModel;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string graphicsDeviceName;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string graphicsDeviceVendor;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string graphicsDeviceVersion;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public string graphicsDeviceType;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int graphicsMemorySize;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public string processorType;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int processorCount;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int processorFrequency;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int memorySize;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public string osVersion;

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x53546C", Offset = "0x53546C", VA = "0x53546C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_hasCachedPlatformInfo;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private PlatformInformation m_cachedPlatformInfo;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_hasCachedPlatformUserID;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_cachedPlatformUserID;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2731D0", Offset = "0x2731D0")]
		private string <SessionID>k__BackingField;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AnalyticsService s_instance;

		[Token(Token = "0x170001B2")]
		protected PlatformInformation PlatformInfo
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x97AAC8", Offset = "0x97AAC8", VA = "0x97AAC8")]
			get
			{
				return default(PlatformInformation);
			}
		}

		[Token(Token = "0x170001B3")]
		protected string UserID
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x97ACC8", Offset = "0x97ACC8", VA = "0x97ACC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		protected string PlatformUserID
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x97ACD0", Offset = "0x97ACD0", VA = "0x97ACD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		protected string SessionID
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x97AE5C", Offset = "0x97AE5C", VA = "0x97AE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276CF8", Offset = "0x276CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x97AE64", Offset = "0x97AE64", VA = "0x97AE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276D08", Offset = "0x276D08")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		protected string GameVersion
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x97AE6C", Offset = "0x97AE6C", VA = "0x97AE6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000008")]
		public static event Action OnEventEmitted
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x97A73C", Offset = "0x97A73C", VA = "0x97A73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276D18", Offset = "0x276D18")]
			add
			{
			}
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x97A89C", Offset = "0x97A89C", VA = "0x97A89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276D28", Offset = "0x276D28")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x97AE74", Offset = "0x97AE74", VA = "0x97AE74")]
		private static AnalyticsService GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		public static T BeginTimedEvent<T>() where T : ITimedEvent, new()
		{
			return (T)null;
		}

		[Token(Token = "0x6000F27")]
		public static void EndTimedEvent<T>(T timedEvent) where T : ITimedEvent, new()
		{
		}

		[Token(Token = "0x6000F28")]
		public static void EmitEvent<T>() where T : GenericBase, new()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x97AF4C", Offset = "0x97AF4C", VA = "0x97AF4C")]
		public static void EmitEvent(object evt)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x97AA8C", Offset = "0x97AA8C", VA = "0x97AA8C")]
		public static void FlushQueue()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x97AFD8", Offset = "0x97AFD8", VA = "0x97AFD8")]
		public static void GenerateNewSessionID()
		{
		}

		[Token(Token = "0x6000F2C")]
		protected abstract void EmitEventInternal(object evt);

		[Token(Token = "0x6000F2D")]
		protected abstract void FlushQueueInternal();

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x97B000", Offset = "0x97B000", VA = "0x97B000", Slot = "6")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x97B018", Offset = "0x97B018", VA = "0x97B018", Slot = "7")]
		protected virtual void GenerateNewSessionIDInternal()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x97B144", Offset = "0x97B144", VA = "0x97B144")]
		protected AnalyticsService()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class AnalyticsServiceNetworkEffects : AnalyticsService
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkEffects.Analytics.AnalyticsService m_nfxAnalyticsService;

		[Token(Token = "0x170001B7")]
		private string FirebaseAppId
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x97B1B4", Offset = "0x97B1B4", VA = "0x97B1B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x97B200", Offset = "0x97B200", VA = "0x97B200", Slot = "6")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x97B398", Offset = "0x97B398", VA = "0x97B398")]
		private static void AddParamString(string key, string value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x97B510", Offset = "0x97B510", VA = "0x97B510")]
		private static void AddParamInt(string key, int value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x97B688", Offset = "0x97B688", VA = "0x97B688")]
		private static void ReflectEventParams(object evt, ICollection<EventParamElement> eventParams)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x97C10C", Offset = "0x97C10C", VA = "0x97C10C")]
		private void AddGenericParamsToEventParams(ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x97C3A0", Offset = "0x97C3A0", VA = "0x97C3A0", Slot = "4")]
		protected override void EmitEventInternal(object evt)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x97C7F8", Offset = "0x97C7F8", VA = "0x97C7F8", Slot = "5")]
		protected override void FlushQueueInternal()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x97AF48", Offset = "0x97AF48", VA = "0x97AF48")]
		public AnalyticsServiceNetworkEffects()
		{
		}
	}
}
namespace Analytics.Events
{
	[Token(Token = "0x2000247")]
	public interface ITimedEvent
	{
		[Token(Token = "0x6000F3B")]
		void Start(float time);

		[Token(Token = "0x6000F3C")]
		void End(float time);
	}
	[Serializable]
	[Token(Token = "0x2000248")]
	public class BaseData
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x2731F0", Offset = "0x2731F0")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x2731F0", Offset = "0x2731F0")]
		public string sku;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273224", Offset = "0x273224")]
		public string quality;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273234", Offset = "0x273234")]
		public string theme;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273244", Offset = "0x273244")]
		public int total_games_played;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xD0AADC", Offset = "0xD0AADC", VA = "0xD0AADC", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xD0AC00", Offset = "0xD0AC00", VA = "0xD0AC00")]
		public BaseData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000249")]
	public class GenericBase : BaseData
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273254", Offset = "0x273254")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273254", Offset = "0x273254")]
		public string game_scene;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x847E18", Offset = "0x847E18", VA = "0x847E18", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x847F5C", Offset = "0x847F5C", VA = "0x847F5C")]
		public GenericBase()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class GenericTimed : GenericBase, ITimedEvent
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float m_startTime;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x847F64", Offset = "0x847F64", VA = "0x847F64", Slot = "5")]
		public void Start(float time)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x847F6C", Offset = "0x847F6C", VA = "0x847F6C", Slot = "6")]
		public void End(float time)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x847F80", Offset = "0x847F80", VA = "0x847F80")]
		public GenericTimed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x27097C", Offset = "0x27097C")]
	public class BladeChange : GenericBase
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273288", Offset = "0x273288")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273288", Offset = "0x273288")]
		public string blade_name;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x2732BC", Offset = "0x2732BC")]
		public bool is_left_hand;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xD14F44", Offset = "0xD14F44", VA = "0xD14F44")]
		public BladeChange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x2709B4", Offset = "0x2709B4")]
	public class ApplicatonFocusLost : GenericBase
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x97E870", Offset = "0x97E870", VA = "0x97E870")]
		public ApplicatonFocusLost()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x2709EC", Offset = "0x2709EC")]
	public class ApplicatonFocusGained : GenericBase
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x97E868", Offset = "0x97E868", VA = "0x97E868")]
		public ApplicatonFocusGained()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270A24", Offset = "0x270A24")]
	public class ApplicationPaused : GenericBase
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x97E858", Offset = "0x97E858", VA = "0x97E858")]
		public ApplicationPaused()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270A5C", Offset = "0x270A5C")]
	public class ApplicatonResumed : GenericBase
	{
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x97E878", Offset = "0x97E878", VA = "0x97E878")]
		public ApplicatonResumed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270A94", Offset = "0x270A94")]
	public class ApplicationLoad : GenericTimed
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x2732CC", Offset = "0x2732CC")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x2732CC", Offset = "0x2732CC")]
		public string loaded_scene;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x97E84C", Offset = "0x97E84C", VA = "0x97E84C")]
		public new void Init()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x97E850", Offset = "0x97E850", VA = "0x97E850")]
		public ApplicationLoad()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270ACC", Offset = "0x270ACC")]
	public class ApplicationQuit : GenericBase
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x97E860", Offset = "0x97E860", VA = "0x97E860")]
		public ApplicationQuit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270B04", Offset = "0x270B04")]
	public class SceneChange : GenericBase
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273300", Offset = "0x273300")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273300", Offset = "0x273300")]
		public string previous_scene;

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x7111F0", Offset = "0x7111F0", VA = "0x7111F0")]
		public SceneChange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000253")]
	public class GamePlayBase : BaseData
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273334", Offset = "0x273334")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273334", Offset = "0x273334")]
		public string scene;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273368", Offset = "0x273368")]
		public string blade_name_left;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x27337C", Offset = "0x27337C")]
		public string blade_name_right;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool is_first;

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x847538", Offset = "0x847538", VA = "0x847538", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x847520", Offset = "0x847520", VA = "0x847520")]
		public GamePlayBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000254")]
	public class GamePlayBaseTimed : GamePlayBase, ITimedEvent
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal float m_startTime;

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x847928", Offset = "0x847928", VA = "0x847928", Slot = "5")]
		public void Start(float time)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x847930", Offset = "0x847930", VA = "0x847930", Slot = "6")]
		public void End(float time)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x847530", Offset = "0x847530", VA = "0x847530")]
		public GamePlayBaseTimed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270B3C", Offset = "0x270B3C")]
	public class GamePlay : GamePlayBaseTimed
	{
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fruits_served;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int fruits_sliced;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int fruits_sliced_left;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int fruits_sliced_right;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int fruits_skewered;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int bomb_hit;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int objects_juggled;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int banana_frenzy_spawned;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int banana_frenzy_sliced;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int banana_freeze_spawned;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int banana_freeze_sliced;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int banana_double_spawned;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int banana_double_sliced;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int peach_spawned;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int peach_sliced;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int bombs_spawned;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int bombs_deflected;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int enemies_killed;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int enemies_hit;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int score;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x273390", Offset = "0x273390")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x273390", Offset = "0x273390")]
		public string result;

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x847528", Offset = "0x847528", VA = "0x847528")]
		public GamePlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270B74", Offset = "0x270B74")]
	public class GamePause : GamePlayBase
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x2733C4", Offset = "0x2733C4")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x2733C4", Offset = "0x2733C4")]
		public string reason;

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x847518", Offset = "0x847518", VA = "0x847518")]
		public GamePause()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270BAC", Offset = "0x270BAC")]
	public class GameResume : GamePlayBase
	{
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x847944", Offset = "0x847944", VA = "0x847944")]
		public GameResume()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x270BE4", Offset = "0x270BE4")]
	public class AchievementUnlock : GamePlayBase
	{
		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string achievement;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x97A000", Offset = "0x97A000", VA = "0x97A000")]
		public AchievementUnlock()
		{
		}
	}
}
namespace Halfbrick.FNVR.Stats
{
	[Token(Token = "0x2000259")]
	public enum StatsId
	{
		[Token(Token = "0x4000CCC")]
		None,
		[Token(Token = "0x4000CCD")]
		BestCombo,
		[Token(Token = "0x4000CCE")]
		BestModeClassic,
		[Token(Token = "0x4000CCF")]
		BestModeArcade,
		[Token(Token = "0x4000CD0")]
		BestModeZen,
		[Token(Token = "0x4000CD1")]
		BestModeSurvival,
		[Token(Token = "0x4000CD2")]
		SlicedBomb,
		[Token(Token = "0x4000CD3")]
		SlicedFruit,
		[Token(Token = "0x4000CD4")]
		SlicedFruitFreezeMode,
		[Token(Token = "0x4000CD5")]
		SlicedFruitPineapple,
		[Token(Token = "0x4000CD6")]
		SlicedFruitWatermelonWithSongWord,
		[Token(Token = "0x4000CD7")]
		SlicedFruitStrawberryWithButterFlyBlade,
		[Token(Token = "0x4000CD8")]
		SkewerdFruit,
		[Token(Token = "0x4000CD9")]
		DroppedFruit,
		[Token(Token = "0x4000CDA")]
		DestroyedEnemeyBasket,
		[Token(Token = "0x4000CDB")]
		PlayedChristmas,
		[Token(Token = "0x4000CDC")]
		PlayedHalloween
	}
	[Token(Token = "0x200025A")]
	public static class StatsUtility
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<StatsId, string> m_statIdNameLookup;

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xF9EC38", Offset = "0xF9EC38", VA = "0xF9EC38")]
		public static StatsId GetBestGameModeStatId(SceneManager.Scene gameMode)
		{
			return default(StatsId);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xF9EC5C", Offset = "0xF9EC5C", VA = "0xF9EC5C")]
		public static string GetStatName(StatsId id)
		{
			return null;
		}
	}
}
namespace Halfbrick.FNVR.System
{
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270C1C", Offset = "0x270C1C")]
	public class GameConfig : ScriptableObject
	{
		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270C84", Offset = "0x270C84")]
		private sealed class <GetGameConfigAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<GameConfig> callback;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private AsyncOperationHandle<GameConfig> <asyncOp>5__2;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F66")]
				[Address(RVA = "0x53C934", Offset = "0x53C934", VA = "0x53C934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F68")]
				[Address(RVA = "0x53C984", Offset = "0x53C984", VA = "0x53C984", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x53C678", Offset = "0x53C678", VA = "0x53C678")]
			[DebuggerHidden]
			public <GetGameConfigAsync>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x53C698", Offset = "0x53C698", VA = "0x53C698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x53C69C", Offset = "0x53C69C", VA = "0x53C69C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x53C93C", Offset = "0x53C93C", VA = "0x53C93C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x2733F8", Offset = "0x2733F8")]
		[SerializeField]
		private string m_sku;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string[] m_shaderDisabledFeatures;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_maxShaderLOD;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameConfig m_config;

		[Token(Token = "0x170001B8")]
		public string SKU
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x8437D0", Offset = "0x8437D0", VA = "0x8437D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x8437D8", Offset = "0x8437D8", VA = "0x8437D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public string[] ShaderDisabledFeatures
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x8437E0", Offset = "0x8437E0", VA = "0x8437E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x8437E8", Offset = "0x8437E8", VA = "0x8437E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public int MaxShaderLOD
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x8437F0", Offset = "0x8437F0", VA = "0x8437F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x8437F8", Offset = "0x8437F8", VA = "0x8437F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public static string GameConfigLocation
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x843800", Offset = "0x843800", VA = "0x843800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x84384C", Offset = "0x84384C", VA = "0x84384C")]
		public void SetupShaderFeatures()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x843A58", Offset = "0x843A58", VA = "0x843A58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276D38", Offset = "0x276D38")]
		public static IEnumerator GetGameConfigAsync(Action<GameConfig> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x843ADC", Offset = "0x843ADC", VA = "0x843ADC")]
		public GameConfig()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class GameService : MonoBehaviour
	{
		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270C94", Offset = "0x270C94")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameService <>4__this;

			[Token(Token = "0x170001C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7B")]
				[Address(RVA = "0x53D10C", Offset = "0x53D10C", VA = "0x53D10C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7D")]
				[Address(RVA = "0x53D15C", Offset = "0x53D15C", VA = "0x53D15C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x53CED8", Offset = "0x53CED8", VA = "0x53CED8")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x53CEF8", Offset = "0x53CEF8", VA = "0x53CEF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x53CEFC", Offset = "0x53CEFC", VA = "0x53CEFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x53D114", Offset = "0x53D114", VA = "0x53D114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CE6")]
		private const string GameObjectName = "GameService";

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273460", Offset = "0x273460")]
		private bool <IsInitialised>k__BackingField;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273470", Offset = "0x273470")]
		private GameConfig <GameConfig>k__BackingField;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273480", Offset = "0x273480")]
		private InventoryService <InventoryService>k__BackingField;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273490", Offset = "0x273490")]
		private TimeService <TimeService>k__BackingField;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameService s_instance;

		[Token(Token = "0x170001BE")]
		public bool IsInitialised
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x84794C", Offset = "0x84794C", VA = "0x84794C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276DF4", Offset = "0x276DF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x847954", Offset = "0x847954", VA = "0x847954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E04", Offset = "0x276E04")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public GameConfig GameConfig
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x84795C", Offset = "0x84795C", VA = "0x84795C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E14", Offset = "0x276E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x847964", Offset = "0x847964", VA = "0x847964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E24", Offset = "0x276E24")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public InventoryService InventoryService
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x84796C", Offset = "0x84796C", VA = "0x84796C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E34", Offset = "0x276E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x847974", Offset = "0x847974", VA = "0x847974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E44", Offset = "0x276E44")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public TimeService TimeService
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x84797C", Offset = "0x84797C", VA = "0x84797C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E54", Offset = "0x276E54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x847984", Offset = "0x847984", VA = "0x847984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276E64", Offset = "0x276E64")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public static GameService Instance
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x84798C", Offset = "0x84798C", VA = "0x84798C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x847B70", Offset = "0x847B70", VA = "0x847B70")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x847BF0", Offset = "0x847BF0", VA = "0x847BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x847D80", Offset = "0x847D80", VA = "0x847D80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276E74", Offset = "0x276E74")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x847E04", Offset = "0x847E04", VA = "0x847E04")]
		public GameService()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x847E10", Offset = "0x847E10", VA = "0x847E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276EE0", Offset = "0x276EE0")]
		private void <Start>b__22_0(GameConfig config)
		{
		}
	}
}
namespace Halfbrick.FNVR.System.TimeSystem
{
	[Token(Token = "0x200025F")]
	public class TimeService : MonoBehaviour
	{
		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CA4", Offset = "0x270CA4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityWebRequest www;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public TimeService <>4__this;

			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x1545D5C", Offset = "0x1545D5C", VA = "0x1545D5C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x1545D64", Offset = "0x1545D64", VA = "0x1545D64")]
			internal void <RequestServerTimeUpdate>b__0(AsyncOperation ops)
			{
			}
		}

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float m_lastServerTimeUpdateRequest;

		[Token(Token = "0x4000CF0")]
		private const float m_serverTimeUpdateFrequency = 5f;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_lastServerTimeUpdate;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2734A0", Offset = "0x2734A0")]
		private bool <HasValidServerTime>k__BackingField;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2734B0", Offset = "0x2734B0")]
		private long <ServerTimeStampUTC>k__BackingField;

		[Token(Token = "0x170001C5")]
		public bool HasValidServerTime
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xB483DC", Offset = "0xB483DC", VA = "0xB483DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276F40", Offset = "0x276F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xB483E4", Offset = "0xB483E4", VA = "0xB483E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276F50", Offset = "0x276F50")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public long ServerTimeStampUTC
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xB483EC", Offset = "0xB483EC", VA = "0xB483EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276F60", Offset = "0x276F60")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xB483F4", Offset = "0xB483F4", VA = "0xB483F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x276F70", Offset = "0x276F70")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public DateTime ServerDateTimeUTC
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xB48404", Offset = "0xB48404", VA = "0xB48404")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xB484D4", Offset = "0xB484D4", VA = "0xB484D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xB484E0", Offset = "0xB484E0", VA = "0xB484E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xB486C0", Offset = "0xB486C0", VA = "0xB486C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xB484E4", Offset = "0xB484E4", VA = "0xB484E4")]
		private void RequestServerTimeUpdate()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xB486C4", Offset = "0xB486C4", VA = "0xB486C4")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xB486D4", Offset = "0xB486D4", VA = "0xB486D4")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xB486E4", Offset = "0xB486E4", VA = "0xB486E4")]
		public TimeService()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Threading
{
	[Token(Token = "0x2000261")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CB4", Offset = "0x270CB4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public IEnumerator action;

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x54721C", Offset = "0x54721C", VA = "0x54721C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x547224", Offset = "0x547224", VA = "0x547224")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000263")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CC4", Offset = "0x270CC4")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA2")]
				[Address(RVA = "0x5472EC", Offset = "0x5472EC", VA = "0x5472EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0x54733C", Offset = "0x54733C", VA = "0x54733C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x547254", Offset = "0x547254", VA = "0x547254")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x547274", Offset = "0x547274", VA = "0x547274", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x547278", Offset = "0x547278", VA = "0x547278", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x5472F4", Offset = "0x5472F4", VA = "0x5472F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CD4", Offset = "0x270CD4")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170001CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FAA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA5")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA6")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA7")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA9")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CE4", Offset = "0x270CE4")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170001CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAB")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAC")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FAD")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAF")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000266")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270CF4", Offset = "0x270CF4")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170001CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB1")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB2")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB3")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB5")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270D04", Offset = "0x270D04")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FBA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FBC")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB7")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB8")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB9")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBB")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> m_actions;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static MainThreadDispatcher m_instance;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x7CE624", Offset = "0x7CE624", VA = "0x7CE624")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x7CE780", Offset = "0x7CE780", VA = "0x7CE780")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x7CEB48", Offset = "0x7CEB48", VA = "0x7CEB48")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x7CEC98", Offset = "0x7CEC98", VA = "0x7CEC98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x7CED18", Offset = "0x7CED18", VA = "0x7CED18")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x7CEF74", Offset = "0x7CEF74", VA = "0x7CEF74")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6000F92")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6000F93")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6000F94")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6000F95")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x7CEF94", Offset = "0x7CEF94", VA = "0x7CEF94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276F80", Offset = "0x276F80")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6000F97")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x276FEC", Offset = "0x276FEC")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x277058", Offset = "0x277058")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6000F99")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2770C4", Offset = "0x2770C4")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x277130", Offset = "0x277130")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x7CF018", Offset = "0x7CF018", VA = "0x7CF018")]
		public MainThreadDispatcher()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Inventory
{
	[Token(Token = "0x2000268")]
	public class InventoryService : MonoBehaviour
	{
		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270D14", Offset = "0x270D14")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InventoryService <>4__this;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private AsyncOperationHandle<IList<BladeConfig>> <asyncOperation>5__2;

			[Token(Token = "0x170001D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCC")]
				[Address(RVA = "0x544ABC", Offset = "0x544ABC", VA = "0x544ABC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCE")]
				[Address(RVA = "0x544B0C", Offset = "0x544B0C", VA = "0x544B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x544758", Offset = "0x544758", VA = "0x544758")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x544778", Offset = "0x544778", VA = "0x544778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x54477C", Offset = "0x54477C", VA = "0x54477C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x544AC4", Offset = "0x544AC4", VA = "0x544AC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2734C0", Offset = "0x2734C0")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2734D0", Offset = "0x2734D0")]
		private BladeConfig[] <BladeConfigs>k__BackingField;

		[Token(Token = "0x170001D2")]
		public bool IsReady
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x84FA18", Offset = "0x84FA18", VA = "0x84FA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27732C", Offset = "0x27732C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x84FA20", Offset = "0x84FA20", VA = "0x84FA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27733C", Offset = "0x27733C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public BladeConfig[] BladeConfigs
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x84FA28", Offset = "0x84FA28", VA = "0x84FA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27734C", Offset = "0x27734C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x84FA30", Offset = "0x84FA30", VA = "0x84FA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27735C", Offset = "0x27735C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x84FA38", Offset = "0x84FA38", VA = "0x84FA38")]
		public BladeConfig FindBladeConfig(ulong id)
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x84FAB8", Offset = "0x84FAB8", VA = "0x84FAB8")]
		public bool IsBladeAvailable(BladeConfig blade)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x84FAE0", Offset = "0x84FAE0", VA = "0x84FAE0")]
		public bool HasBladeBeenSeen(BladeConfig blade)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x84FBE8", Offset = "0x84FBE8", VA = "0x84FBE8")]
		public void SetBladeAsSeen(BladeConfig blade)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x84FC8C", Offset = "0x84FC8C", VA = "0x84FC8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x84FC98", Offset = "0x84FC98", VA = "0x84FC98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x27736C", Offset = "0x27736C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x84FD1C", Offset = "0x84FD1C", VA = "0x84FD1C")]
		public InventoryService()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x84FD24", Offset = "0x84FD24", VA = "0x84FD24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2773D8", Offset = "0x2773D8")]
		private void <Start>b__13_0(AsyncOperationHandle<IList<BladeConfig>> result)
		{
		}
	}
}
namespace Halfbrick.FNVR.System.VR
{
	[Token(Token = "0x200026A")]
	[ExecuteAlways]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x200026B")]
		public enum BlendMode
		{
			[Token(Token = "0x4000D28")]
			StaticClenched,
			[Token(Token = "0x4000D29")]
			StaticRelaxed,
			[Token(Token = "0x4000D2A")]
			Auto,
			[Token(Token = "0x4000D2B")]
			Manual
		}

		[Token(Token = "0x200026C")]
		public struct TransformReference
		{
			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273530", Offset = "0x273530")]
			private HandPose.BoneType <Type>k__BackingField;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273540", Offset = "0x273540")]
			private Transform <Transform>k__BackingField;

			[Token(Token = "0x170001D8")]
			public HandPose.BoneType Type
			{
				[Token(Token = "0x6000FDC")]
				[Address(RVA = "0x53D688", Offset = "0x53D688", VA = "0x53D688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277478", Offset = "0x277478")]
				readonly get
				{
					return default(HandPose.BoneType);
				}
				[Token(Token = "0x6000FDD")]
				[Address(RVA = "0x53D690", Offset = "0x53D690", VA = "0x53D690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2774A8", Offset = "0x2774A8")]
				set
				{
				}
			}

			[Token(Token = "0x170001D9")]
			public Transform Transform
			{
				[Token(Token = "0x6000FDE")]
				[Address(RVA = "0x53D698", Offset = "0x53D698", VA = "0x53D698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2774B8", Offset = "0x2774B8")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6000FDF")]
				[Address(RVA = "0x53D6A0", Offset = "0x53D6A0", VA = "0x53D6A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2774E8", Offset = "0x2774E8")]
				set
				{
				}
			}
		}

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HandPose m_clenchedPose;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HandPose m_relaxedPose;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BlendMode m_thumbBlend;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendMode m_indexBlend;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BlendMode m_middleBlend;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlendMode m_ringBlend;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BlendMode m_pinkyBlend;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2734E0", Offset = "0x2734E0")]
		public float m_wristBlendFactor;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2734F8", Offset = "0x2734F8")]
		public float m_manualBlendFactor;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Hand.Type m_handType;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Transform m_rootBone;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float[] m_handBlendFactors;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273510", Offset = "0x273510")]
		private bool <IsVRHandActive>k__BackingField;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273520", Offset = "0x273520")]
		private TransformReference[] <BoneTransforms>k__BackingField;

		[Token(Token = "0x170001D6")]
		public bool IsVRHandActive
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x84969C", Offset = "0x84969C", VA = "0x84969C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277438", Offset = "0x277438")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x8496A4", Offset = "0x8496A4", VA = "0x8496A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277448", Offset = "0x277448")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public TransformReference[] BoneTransforms
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x8496AC", Offset = "0x8496AC", VA = "0x8496AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277458", Offset = "0x277458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x8496B4", Offset = "0x8496B4", VA = "0x8496B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277468", Offset = "0x277468")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x8496BC", Offset = "0x8496BC", VA = "0x8496BC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8497D4", Offset = "0x8497D4", VA = "0x8497D4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x84A824", Offset = "0x84A824", VA = "0x84A824")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x849D58", Offset = "0x849D58", VA = "0x849D58")]
		private Hand.FingerCurls GetFingerCurls()
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x849F90", Offset = "0x849F90", VA = "0x849F90")]
		private void BlendPoses()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x8496C8", Offset = "0x8496C8", VA = "0x8496C8")]
		private void GenerateTransforms()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x84A828", Offset = "0x84A828", VA = "0x84A828")]
		private int CountBones(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x84A8B8", Offset = "0x84A8B8", VA = "0x84A8B8")]
		private void AssignBones(Transform bone, TransformReference[] boneTransforms, ref int currentIndex)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x84ABA4", Offset = "0x84ABA4", VA = "0x84ABA4")]
		public HandSkeleton()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Hands
{
	[Token(Token = "0x200026D")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x200026E")]
		public enum BoneType
		{
			[Token(Token = "0x4000D30")]
			Wrist,
			[Token(Token = "0x4000D31")]
			Thumb,
			[Token(Token = "0x4000D32")]
			Index,
			[Token(Token = "0x4000D33")]
			Middle,
			[Token(Token = "0x4000D34")]
			Ring,
			[Token(Token = "0x4000D35")]
			Pinky
		}

		[Serializable]
		[Token(Token = "0x200026F")]
		public struct BoneTransform
		{
			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoneType m_type;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 m_positions;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion m_rotations;
		}

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BoneTransform[] m_boneTransforms;

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x849694", Offset = "0x849694", VA = "0x849694")]
		public HandPose()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.FX
{
	[Token(Token = "0x2000270")]
	public class EnvironmentAwareParticleEmitterControl : ParticleEmitterControl
	{
		[Token(Token = "0x2000271")]
		public enum DayNightFilter
		{
			[Token(Token = "0x4000D3D")]
			Any,
			[Token(Token = "0x4000D3E")]
			Day,
			[Token(Token = "0x4000D3F")]
			Night
		}

		[Token(Token = "0x2000272")]
		public enum WeatherFilter
		{
			[Token(Token = "0x4000D41")]
			Any,
			[Token(Token = "0x4000D42")]
			Active,
			[Token(Token = "0x4000D43")]
			Deactive
		}

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x273550", Offset = "0x273550")]
		public DayNightFilter m_dayNight;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WeatherFilter m_snow;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeatherFilter m_rain;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x4E9900", Offset = "0x4E9900", VA = "0x4E9900", Slot = "4")]
		public override void StartEmission()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x4E9BD8", Offset = "0x4E9BD8", VA = "0x4E9BD8")]
		public EnvironmentAwareParticleEmitterControl()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class EnvironmentAwareSoundControl : MonoBehaviour
	{
		[Token(Token = "0x2000274")]
		public enum DayNightFilter
		{
			[Token(Token = "0x4000D49")]
			Any,
			[Token(Token = "0x4000D4A")]
			Day,
			[Token(Token = "0x4000D4B")]
			Night
		}

		[Token(Token = "0x2000275")]
		public enum WeatherFilter
		{
			[Token(Token = "0x4000D4D")]
			Any,
			[Token(Token = "0x4000D4E")]
			Active,
			[Token(Token = "0x4000D4F")]
			Deactive
		}

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x273584", Offset = "0x273584")]
		public DayNightFilter m_dayNight;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeatherFilter m_snow;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WeatherFilter m_rain;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioPlayer m_audioPlayer;

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x4E9BE0", Offset = "0x4E9BE0", VA = "0x4E9BE0")]
		public void PlaySound(float fadeInSeconds = 0f)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x4E9ED8", Offset = "0x4E9ED8", VA = "0x4E9ED8")]
		public void StopSound(float fadeOutSeconds = 0f)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x4E9F10", Offset = "0x4E9F10", VA = "0x4E9F10", Slot = "4")]
		public virtual void StopSoundAndDeactivate(float fadeOutSeconds = 0f)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x4E9F48", Offset = "0x4E9F48", VA = "0x4E9F48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x4E9FB0", Offset = "0x4E9FB0", VA = "0x4E9FB0")]
		public EnvironmentAwareSoundControl()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class ParticleEmitterControl : MonoBehaviour
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private ParticleSystem m_system;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x77ACFC", Offset = "0x77ACFC", VA = "0x77ACFC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x77AD64", Offset = "0x77AD64", VA = "0x77AD64", Slot = "4")]
		public virtual void StartEmission()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x77AD90", Offset = "0x77AD90", VA = "0x77AD90", Slot = "5")]
		public virtual void StopEmission()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x77ADC0", Offset = "0x77ADC0", VA = "0x77ADC0")]
		public ParticleEmitterControl()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Environment
{
	[Token(Token = "0x2000277")]
	[ExecuteAlways]
	public class DynamicEnvironmentManager : EnvironmentManager
	{
		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AzureSkyController m_skyController;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private AzureSkyProfile m_snowWeatherProfile;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WeatherBlender m_weatherBlender;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_snowMeltSpeed;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2735F8", Offset = "0x2735F8")]
		[SerializeField]
		private float m_drySpeed;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_currentSnowOverrideFactor;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_snowAmount;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_wetness;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isDay;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Animator m_weatherAnimator;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x273634", Offset = "0x273634")]
		[SerializeField]
		private float[] m_startupTimes;

		[Token(Token = "0x170001DA")]
		public override bool IsDay
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x4E8CF0", Offset = "0x4E8CF0", VA = "0x4E8CF0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DB")]
		public override bool IsSnowing
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x4E8CF8", Offset = "0x4E8CF8", VA = "0x4E8CF8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DC")]
		public override bool IsRaining
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x4E8D28", Offset = "0x4E8D28", VA = "0x4E8D28", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public override float Wetness
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x4E8D58", Offset = "0x4E8D58", VA = "0x4E8D58", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public override float SnowAmount
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x4E8D60", Offset = "0x4E8D60", VA = "0x4E8D60", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x4E8D68", Offset = "0x4E8D68", VA = "0x4E8D68")]
		internal void ForceWeather(string weatherState)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x4E8DAC", Offset = "0x4E8DAC", VA = "0x4E8DAC")]
		internal void SeyDayNightMode(bool day)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x4E8DF8", Offset = "0x4E8DF8", VA = "0x4E8DF8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x4E9074", Offset = "0x4E9074", VA = "0x4E9074", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x4E93C4", Offset = "0x4E93C4", VA = "0x4E93C4")]
		public DynamicEnvironmentManager()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class EnvironmentChangeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private UnityEvent m_onDayActivated;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private UnityEvent m_onNightActivated;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_previousDayNightState;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent m_onSnowActivated;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private UnityEvent m_onSnowDeactivated;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_previousSnowState;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UnityEvent m_onRainActivated;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onRainDeactivated;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_previousRainState;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x4E9FB8", Offset = "0x4E9FB8", VA = "0x4E9FB8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x4EA21C", Offset = "0x4EA21C", VA = "0x4EA21C")]
		public EnvironmentChangeTrigger()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public abstract class EnvironmentManager : MonoBehaviour
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x2736D0", Offset = "0x2736D0")]
		protected float m_snowOverrideFactor;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x273708", Offset = "0x273708")]
		private float m_maxWetnessSpecular;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_currentSnowAmount;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_currentWetness;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_currentDayNightState;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273740", Offset = "0x273740")]
		private static EnvironmentManager <Instance>k__BackingField;

		[Token(Token = "0x170001DF")]
		public static EnvironmentManager Instance
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x4EA234", Offset = "0x4EA234", VA = "0x4EA234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2774F8", Offset = "0x2774F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x4EA288", Offset = "0x4EA288", VA = "0x4EA288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277508", Offset = "0x277508")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public float SnowOverrideFactor
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x4EA2E8", Offset = "0x4EA2E8", VA = "0x4EA2E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x4EA2F0", Offset = "0x4EA2F0", VA = "0x4EA2F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public abstract bool IsDay
		{
			[Token(Token = "0x6000FFC")]
			get;
		}

		[Token(Token = "0x170001E2")]
		public abstract bool IsSnowing
		{
			[Token(Token = "0x6000FFD")]
			get;
		}

		[Token(Token = "0x170001E3")]
		public abstract bool IsRaining
		{
			[Token(Token = "0x6000FFE")]
			get;
		}

		[Token(Token = "0x170001E4")]
		public abstract float Wetness
		{
			[Token(Token = "0x6000FFF")]
			get;
		}

		[Token(Token = "0x170001E5")]
		public abstract float SnowAmount
		{
			[Token(Token = "0x6001000")]
			get;
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x4E8EFC", Offset = "0x4E8EFC", VA = "0x4E8EFC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x4E923C", Offset = "0x4E923C", VA = "0x4E923C", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x4E9404", Offset = "0x4E9404", VA = "0x4E9404")]
		protected EnvironmentManager()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[ExecuteAlways]
	public class StaticEnvironmentManager : EnvironmentManager
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_isDay;

		[Token(Token = "0x170001E6")]
		public override bool IsDay
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xF9EBD0", Offset = "0xF9EBD0", VA = "0xF9EBD0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public override bool IsSnowing
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xF9EBD8", Offset = "0xF9EBD8", VA = "0xF9EBD8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E8")]
		public override bool IsRaining
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xF9EC08", Offset = "0xF9EC08", VA = "0xF9EC08", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E9")]
		public override float Wetness
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xF9EC10", Offset = "0xF9EC10", VA = "0xF9EC10", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EA")]
		public override float SnowAmount
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xF9EC18", Offset = "0xF9EC18", VA = "0xF9EC18", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xF9EC20", Offset = "0xF9EC20", VA = "0xF9EC20", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xF9EC28", Offset = "0xF9EC28", VA = "0xF9EC28", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xF9EC30", Offset = "0xF9EC30", VA = "0xF9EC30")]
		public StaticEnvironmentManager()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class WeatherBlender : MonoBehaviour
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private AzureSkyController m_skyController;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator m_weatherStates;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AzureSkyProfile m_overridingProfile;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_overridingProfileFactor;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private WeightedDayProfile[] m_singleProfileBlend;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WeightedDayProfile[] m_dualProfileBlend;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private WeightedDayProfile[] m_trippleProfileBlend;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273770", Offset = "0x273770")]
		private AzureSkyProfile <PrevProfile>k__BackingField;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273780", Offset = "0x273780")]
		private AzureSkyProfile <CurrentProfile>k__BackingField;

		[Token(Token = "0x170001EB")]
		public AzureSkyProfile PrevProfile
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xB60038", Offset = "0xB60038", VA = "0xB60038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277518", Offset = "0x277518")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xB60040", Offset = "0xB60040", VA = "0xB60040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277528", Offset = "0x277528")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public AzureSkyProfile CurrentProfile
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xB60048", Offset = "0xB60048", VA = "0xB60048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277538", Offset = "0x277538")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xB60050", Offset = "0xB60050", VA = "0xB60050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277548", Offset = "0x277548")]
			private set
			{
			}
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xB60058", Offset = "0xB60058", VA = "0xB60058")]
		public void Override(AzureSkyProfile overridingProfile, float lerpFactor)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xB60088", Offset = "0xB60088", VA = "0xB60088")]
		public void SwitchProfile(AzureSkyProfile profile)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xB600BC", Offset = "0xB600BC", VA = "0xB600BC")]
		public void PlayThunderEffect()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xB600E4", Offset = "0xB600E4", VA = "0xB600E4")]
		private void BlendProfiles(AzureSkyProfile fromProfile, AzureSkyProfile toProfile, float lerpFactor)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xB60544", Offset = "0xB60544", VA = "0xB60544")]
		private void UseProfile(AzureSkyProfile profile)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xB6074C", Offset = "0xB6074C", VA = "0xB6074C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xB607B4", Offset = "0xB607B4", VA = "0xB607B4")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xB608F4", Offset = "0xB608F4", VA = "0xB608F4")]
		public WeatherBlender()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class WeatherState : StateMachineBehaviour
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AzureSkyProfile m_profile;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_minDuration;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_maxDuration;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x273790", Offset = "0x273790")]
		public float m_lightningChance;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_lightningDelay;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_lightningTimer;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_duration;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isExiting;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private WeatherBlender m_blender;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xB609A0", Offset = "0xB609A0", VA = "0xB609A0", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xB60B20", Offset = "0xB60B20", VA = "0xB60B20", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xB60CB0", Offset = "0xB60CB0", VA = "0xB60CB0", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xB60CB4", Offset = "0xB60CB4", VA = "0xB60CB4")]
		public WeatherState()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Blades
{
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270D54", Offset = "0x270D54")]
	public class BladeConfig : AssetVariation<AssetReference, Blade>
	{
		[Serializable]
		[Token(Token = "0x200027E")]
		public class UnlockProcessor : SerializableCallback<bool>
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x537C28", Offset = "0x537C28", VA = "0x537C28")]
			public UnlockProcessor()
			{
			}
		}

		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270DBC", Offset = "0x270DBC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject prefab;

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x5376C0", Offset = "0x5376C0", VA = "0x5376C0")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x5376C8", Offset = "0x5376C8", VA = "0x5376C8")]
			internal void <LoadAssetAsyncInternal>b__0(GameObject result)
			{
			}
		}

		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270DCC", Offset = "0x270DCC")]
		private sealed class <LoadAssetAsyncInternal>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetReference assetOverride;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Action<Blade> callback;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x170001EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102D")]
				[Address(RVA = "0x537BD0", Offset = "0x537BD0", VA = "0x537BD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102F")]
				[Address(RVA = "0x537C20", Offset = "0x537C20", VA = "0x537C20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x5379C4", Offset = "0x5379C4", VA = "0x5379C4")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x5379E4", Offset = "0x5379E4", VA = "0x5379E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x5379E8", Offset = "0x5379E8", VA = "0x5379E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x537BD8", Offset = "0x537BD8", VA = "0x537BD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270DDC", Offset = "0x270DDC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Blade bladePrefab;

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x5376D0", Offset = "0x5376D0", VA = "0x5376D0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x5376D8", Offset = "0x5376D8", VA = "0x5376D8")]
			internal void <LoadAndInstantiateAssetAsync>b__0(Blade result)
			{
			}
		}

		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270DEC", Offset = "0x270DEC")]
		private sealed class <LoadAndInstantiateAssetAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BladeConfig <>4__this;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MonoBehaviour owner;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Action<Blade> callback;

			[Token(Token = "0x170001F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001035")]
				[Address(RVA = "0x53796C", Offset = "0x53796C", VA = "0x53796C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001037")]
				[Address(RVA = "0x5379BC", Offset = "0x5379BC", VA = "0x5379BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x5376E0", Offset = "0x5376E0", VA = "0x5376E0")]
			[DebuggerHidden]
			public <LoadAndInstantiateAssetAsync>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x537700", Offset = "0x537700", VA = "0x537700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x537704", Offset = "0x537704", VA = "0x537704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x537974", Offset = "0x537974", VA = "0x537974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected OverrideAddressable[] m_overrides;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x2737B8", Offset = "0x2737B8")]
		private string m_name;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BladeId m_itemId;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string m_unlockAchievement;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_titleStringId;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string m_descriptionStringId;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong DEFAULT_BLADE_ID;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273810", Offset = "0x273810")]
		private ulong <Id>k__BackingField;

		[Token(Token = "0x170001ED")]
		public string Name
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xD16224", Offset = "0xD16224", VA = "0xD16224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public ulong Id
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xD1622C", Offset = "0xD1622C", VA = "0xD1622C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277558", Offset = "0x277558")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xD16234", Offset = "0xD16234", VA = "0xD16234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277568", Offset = "0x277568")]
			private set
			{
			}
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xD1621C", Offset = "0xD1621C", VA = "0xD1621C", Slot = "4")]
		protected override Override<AssetReference>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xD16244", Offset = "0xD16244", VA = "0xD16244")]
		public void Init(GameConfig config)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xD10344", Offset = "0xD10344", VA = "0xD10344")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xD16424", Offset = "0xD16424", VA = "0xD16424", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x277578", Offset = "0x277578")]
		protected override IEnumerator LoadAssetAsyncInternal(AssetReference assetOverride, Action<Blade> callback)
		{
			return null;
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xD164D8", Offset = "0xD164D8", VA = "0xD164D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2775E4", Offset = "0x2775E4")]
		public IEnumerator LoadAndInstantiateAssetAsync(MonoBehaviour owner, Action<Blade> callback)
		{
			return null;
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xD165B8", Offset = "0xD165B8", VA = "0xD165B8")]
		private void Instantiate(Blade bladePrefab, Action<Blade> callback)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xD166D4", Offset = "0xD166D4", VA = "0xD166D4")]
		public BladeConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public class BladeId
	{
		[Serializable]
		[Token(Token = "0x2000284")]
		private class Override
		{
			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x273840", Offset = "0x273840")]
			public string m_sku;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong m_value;

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x537C80", Offset = "0x537C80", VA = "0x537C80")]
			public Override()
			{
			}
		}

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ulong m_value;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Override[] m_overrides;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xD16278", Offset = "0xD16278", VA = "0xD16278")]
		public ulong ResolveId(GameConfig gameConfig)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xD16730", Offset = "0xD16730", VA = "0xD16730")]
		public BladeId()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.AssetManagement
{
	[Token(Token = "0x2000285")]
	public static class AddressableUtils
	{
		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270DFC", Offset = "0x270DFC")]
		private sealed class <LoadAddressablePrefab>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetReference addressableAsset;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Action<GameObject> callback;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AsyncOperationHandle<GameObject> <asyncOperation>5__2;

			[Token(Token = "0x170001F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600103F")]
				[Address(RVA = "0x535414", Offset = "0x535414", VA = "0x535414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001041")]
				[Address(RVA = "0x535464", Offset = "0x535464", VA = "0x535464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x5351F8", Offset = "0x5351F8", VA = "0x5351F8")]
			[DebuggerHidden]
			public <LoadAddressablePrefab>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x535218", Offset = "0x535218", VA = "0x535218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600103E")]
			[Address(RVA = "0x53521C", Offset = "0x53521C", VA = "0x53521C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x53541C", Offset = "0x53541C", VA = "0x53541C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x97A098", Offset = "0x97A098", VA = "0x97A098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2776F0", Offset = "0x2776F0")]
		public static IEnumerator LoadAddressablePrefab(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	public class Override<T> where T : class
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x273874", Offset = "0x273874")]
		public T m_assetVariant;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x2738A8", Offset = "0x2738A8")]
		public string m_sku;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x2738DC", Offset = "0x2738DC")]
		public string m_theme;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x273910", Offset = "0x273910")]
		public string m_quality;

		[Token(Token = "0x6001042")]
		public Override()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000288")]
	public class OverrideAddressable : Override<AssetReference>
	{
		[Token(Token = "0x6001043")]
		[Address(RVA = "0x779B58", Offset = "0x779B58", VA = "0x779B58")]
		public OverrideAddressable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000289")]
	public class OverridePrefab : Override<GameObject>
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0x779BB0", Offset = "0x779BB0", VA = "0x779BB0")]
		public OverridePrefab()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class AssetVariation<AssetType, LoadedAssetType> : ScriptableObject where AssetType : class where LoadedAssetType : class
	{
		[Token(Token = "0x200028B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270E0C", Offset = "0x270E0C")]
		private sealed class <LoadAssetAsync>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour owner;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetVariation<AssetType, LoadedAssetType> <>4__this;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<LoadedAssetType> callback;

			[Token(Token = "0x170001F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600104D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600104F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600104A")]
			[DebuggerHidden]
			public <LoadAssetAsync>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600104B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600104C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600104E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x273944", Offset = "0x273944")]
		[SerializeField]
		private AssetType m_defaultAsset;

		[Token(Token = "0x6001045")]
		protected abstract Override<AssetType>[] GetOverrides();

		[Token(Token = "0x6001046")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2777AC", Offset = "0x2777AC")]
		public virtual IEnumerator LoadAssetAsync(MonoBehaviour owner, Action<LoadedAssetType> callback)
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		protected abstract IEnumerator LoadAssetAsyncInternal(AssetType assetOverride, Action<LoadedAssetType> callback);

		[Token(Token = "0x6001048")]
		private AssetType GetMatchedOverride()
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		protected AssetVariation()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270E1C", Offset = "0x270E1C")]
	public class AssetVariationAddressable : AssetVariation<AssetReference, GameObject>
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected OverrideAddressable[] m_overrides;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x982B3C", Offset = "0x982B3C", VA = "0x982B3C", Slot = "4")]
		protected override Override<AssetReference>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x982B44", Offset = "0x982B44", VA = "0x982B44", Slot = "6")]
		protected override IEnumerator LoadAssetAsyncInternal(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x982B50", Offset = "0x982B50", VA = "0x982B50")]
		public AssetVariationAddressable()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270E84", Offset = "0x270E84")]
	public class AssetVariationPrefab : AssetVariation<GameObject, GameObject>
	{
		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270EEC", Offset = "0x270EEC")]
		private sealed class <LoadAssetAsyncInternal>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<GameObject> callback;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GameObject prefab;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001059")]
				[Address(RVA = "0x536414", Offset = "0x536414", VA = "0x536414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105B")]
				[Address(RVA = "0x536464", Offset = "0x536464", VA = "0x536464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x536374", Offset = "0x536374", VA = "0x536374")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x536394", Offset = "0x536394", VA = "0x536394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x536398", Offset = "0x536398", VA = "0x536398", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x53641C", Offset = "0x53641C", VA = "0x53641C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected OverridePrefab[] m_overrides;

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x982BA8", Offset = "0x982BA8", VA = "0x982BA8", Slot = "4")]
		protected override Override<GameObject>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x982BB0", Offset = "0x982BB0", VA = "0x982BB0", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x277868", Offset = "0x277868")]
		protected override IEnumerator LoadAssetAsyncInternal(GameObject prefab, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x982C64", Offset = "0x982C64", VA = "0x982C64")]
		public AssetVariationPrefab()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270EFC", Offset = "0x270EFC")]
	public class ValueVariation : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000290")]
		private class Override
		{
			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_value;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x2739CC", Offset = "0x2739CC")]
			public string m_sku;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x273A00", Offset = "0x273A00")]
			public string m_theme;

			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x273A34", Offset = "0x273A34")]
			public string m_quality;

			[Token(Token = "0x600105E")]
			[Address(RVA = "0x1545E5C", Offset = "0x1545E5C", VA = "0x1545E5C")]
			public Override()
			{
			}
		}

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string m_value;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Override[] m_overrides;

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xB50754", Offset = "0xB50754", VA = "0xB50754")]
		public string GetValue()
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xB50AEC", Offset = "0xB50AEC", VA = "0xB50AEC")]
		public ValueVariation()
		{
		}
	}
}
namespace Halfbrick.FNVR.Achievments
{
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270F64", Offset = "0x270F64")]
	public class AchievementsData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000292")]
		public class AchievementData
		{
			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_achievementId;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string m_titleId;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_DescriptionId;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public StatsId m_statId;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_statMinValue;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int m_statMaxValue;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite m_lockedImgae;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Sprite m_unlockedImgae;

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x5351F0", Offset = "0x5351F0", VA = "0x5351F0")]
			public AchievementData()
			{
			}
		}

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private AchievementData[] m_achievements;

		[Token(Token = "0x170001F9")]
		public AchievementData[] Achievements
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x97A008", Offset = "0x97A008", VA = "0x97A008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x97A010", Offset = "0x97A010", VA = "0x97A010")]
		public AchievementData GetAchievementById(string id)
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x97A090", Offset = "0x97A090", VA = "0x97A090")]
		public AchievementsData()
		{
		}
	}
}
namespace Halfbrick.FNVR.SceneManagement
{
	[Token(Token = "0x2000293")]
	public class SceneManager : MonoSingleton<SceneManager>
	{
		[Token(Token = "0x2000294")]
		public enum Scene
		{
			[Token(Token = "0x4000DDD")]
			MAIN_MENU,
			[Token(Token = "0x4000DDE")]
			CLASSIC_MODE,
			[Token(Token = "0x4000DDF")]
			ZEN_MODE,
			[Token(Token = "0x4000DE0")]
			ARCADE_MODE,
			[Token(Token = "0x4000DE1")]
			SURVIVAL_MODE,
			[Token(Token = "0x4000DE2")]
			BLADES_MENU,
			[Token(Token = "0x4000DE3")]
			ACHIEVEMENT_MENU
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x270FCC", Offset = "0x270FCC")]
		private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneManager <>4__this;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001086")]
				[Address(RVA = "0x54ECF8", Offset = "0x54ECF8", VA = "0x54ECF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001088")]
				[Address(RVA = "0x54ED48", Offset = "0x54ED48", VA = "0x54ED48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0x54E830", Offset = "0x54E830", VA = "0x54E830")]
			[DebuggerHidden]
			public <Start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0x54E850", Offset = "0x54E850", VA = "0x54E850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001085")]
			[Address(RVA = "0x54E854", Offset = "0x54E854", VA = "0x54E854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0x54ED00", Offset = "0x54ED00", VA = "0x54ED00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AssetVariationAddressable m_systemSet;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetVariationPrefab m_mainMenu;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject m_classicMode;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_survivalMode;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject m_zenMode;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetVariationPrefab m_arcadeMode;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameObject m_bladesMenu;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_achievementMenu;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AssetVariationPrefab m_settingSign;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GameObject m_currentScene;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameObject m_fruitGuts;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectPooler m_fruitPooler;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ObjectPooler m_bombPooler;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectPooler m_specialPooler;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ObjectPooler m_fruitHalvesPooler;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectPooler m_effectsPooler;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ObjectPooler m_powerupBananaPooler;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ProfileManager m_profileManagerPrefab;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public CannonSpawnFX m_cannonFX;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_minHeight;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_maxHeight;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_transitioning;

		[NonSerialized]
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_headHeight;

		[NonSerialized]
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_frame;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public FestiveEvent m_eventPrefab;

		[NonSerialized]
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FestiveEvent m_event;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_fpsFrameCount;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_fpsNextUpdate;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_fpsUpdateRate;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273A88", Offset = "0x273A88")]
		private float <FPS>k__BackingField;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273A98", Offset = "0x273A98")]
		private Scene <CurrentScene>k__BackingField;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273AA8", Offset = "0x273AA8")]
		private VRSet <SystemSet>k__BackingField;

		[Token(Token = "0x170001FA")]
		public float FPS
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x712194", Offset = "0x712194", VA = "0x712194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277944", Offset = "0x277944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x71219C", Offset = "0x71219C", VA = "0x71219C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277954", Offset = "0x277954")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public Scene CurrentScene
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x7121A4", Offset = "0x7121A4", VA = "0x7121A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277964", Offset = "0x277964")]
			get
			{
				return default(Scene);
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x7121AC", Offset = "0x7121AC", VA = "0x7121AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277974", Offset = "0x277974")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public GameObject SpawnAnchor
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x7121B4", Offset = "0x7121B4", VA = "0x7121B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public VRSet SystemSet
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x7121BC", Offset = "0x7121BC", VA = "0x7121BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277984", Offset = "0x277984")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x7121C4", Offset = "0x7121C4", VA = "0x7121C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277994", Offset = "0x277994")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public GameObject Head
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x7121CC", Offset = "0x7121CC", VA = "0x7121CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000009")]
		public static event Action<Scene> OnSetupScene
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x711FF4", Offset = "0x711FF4", VA = "0x711FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277924", Offset = "0x277924")]
			add
			{
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x7120C4", Offset = "0x7120C4", VA = "0x7120C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277934", Offset = "0x277934")]
			remove
			{
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x7121EC", Offset = "0x7121EC", VA = "0x7121EC")]
		public bool AttemptToGenerateSlicesThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x7121F4", Offset = "0x7121F4", VA = "0x7121F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x712200", Offset = "0x712200", VA = "0x712200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x2779A4", Offset = "0x2779A4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x712284", Offset = "0x712284", VA = "0x712284")]
		public bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x71228C", Offset = "0x71228C", VA = "0x71228C")]
		private void SetupHeadHeight()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x71238C", Offset = "0x71238C", VA = "0x71238C")]
		private void SendFirstAppOpen()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x712390", Offset = "0x712390", VA = "0x712390")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x7124F0", Offset = "0x7124F0", VA = "0x7124F0")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x712650", Offset = "0x712650", VA = "0x712650")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x7126A0", Offset = "0x7126A0", VA = "0x7126A0")]
		public void SpawnCannonFX(float delta)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x7126D4", Offset = "0x7126D4", VA = "0x7126D4")]
		public void LoadScene(Scene scene)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x712FFC", Offset = "0x712FFC", VA = "0x712FFC")]
		private void InstantiateScene(GameObject scene, string audio)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x7131A0", Offset = "0x7131A0", VA = "0x7131A0")]
		private void SetupScene()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x712F90", Offset = "0x712F90", VA = "0x712F90")]
		private void OnFadeOutComplete(Fader.State state)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x713A34", Offset = "0x713A34", VA = "0x713A34")]
		private void Update()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x713AC0", Offset = "0x713AC0", VA = "0x713AC0")]
		private void UpdateFrameRateDetails()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x7135B8", Offset = "0x7135B8", VA = "0x7135B8")]
		public void CleanupTheDead()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x713B30", Offset = "0x713B30", VA = "0x713B30")]
		public SceneManager()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x713BEC", Offset = "0x713BEC", VA = "0x713BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277A10", Offset = "0x277A10")]
		private void <Start>b__51_0(GameObject result)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x713CE0", Offset = "0x713CE0", VA = "0x713CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277A20", Offset = "0x277A20")]
		private void <SetupScene>b__61_0(GameObject prefab)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x713DF0", Offset = "0x713DF0", VA = "0x713DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277A30", Offset = "0x277A30")]
		private void <SetupScene>b__61_2(GameObject signPrefab)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x714000", Offset = "0x714000", VA = "0x714000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277A40", Offset = "0x277A40")]
		private void <SetupScene>b__61_1(GameObject prefab)
		{
		}
	}
}
namespace Halfbrick.FNVR.Framework
{
	[Token(Token = "0x2000296")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0x70D26C", Offset = "0x70D26C", VA = "0x70D26C")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class VariationAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_configPath;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private VariationConfig m_config;

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xB50AF4", Offset = "0xB50AF4", VA = "0xB50AF4")]
		public VariationAttribute(string configPath)
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x270FDC", Offset = "0x270FDC")]
	public class VariationConfig : ScriptableObject
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private string[] m_variationList;

		[Token(Token = "0x17000201")]
		public string[] VariationList
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xB50B90", Offset = "0xB50B90", VA = "0xB50B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xB50B98", Offset = "0xB50B98", VA = "0xB50B98")]
		public VariationConfig()
		{
		}
	}
}
namespace Halfbrick.FNVR.Debugging.Console
{
	[Token(Token = "0x2000299")]
	public class DebugConsole : MonoBehaviour
	{
		[Token(Token = "0x200029A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271044", Offset = "0x271044")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DebugConsoleContext.ActionItem action;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugConsole <>4__this;

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x539CC8", Offset = "0x539CC8", VA = "0x539CC8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0x539CD0", Offset = "0x539CD0", VA = "0x539CD0")]
			internal void <SetContext>b__0()
			{
			}
		}

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject m_debugItemPrefab;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PauseScreen m_pauseScreen;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private DebugConsoleContext m_currentContext;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DebugConsoleContext.ActionItem[] m_currentActions;

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x8992A4", Offset = "0x8992A4", VA = "0x8992A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x899350", Offset = "0x899350", VA = "0x899350")]
		public void SetContext(DebugConsoleContext context)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x8997A4", Offset = "0x8997A4", VA = "0x8997A4")]
		public DebugConsole()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class DebugContextEnd : DebugConsoleContext
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x89A3EC", Offset = "0x89A3EC", VA = "0x89A3EC", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x89A3F4", Offset = "0x89A3F4", VA = "0x89A3F4")]
		public DebugContextEnd()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public abstract class DebugConsoleContext
	{
		[Token(Token = "0x200029D")]
		public struct ActionItem
		{
			[Token(Token = "0x200029E")]
			public delegate DebugConsoleContext OnAction();

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273AC8", Offset = "0x273AC8")]
			private string <Title>k__BackingField;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x273AD8", Offset = "0x273AD8")]
			private OnAction <Callback>k__BackingField;

			[Token(Token = "0x17000202")]
			public string Title
			{
				[Token(Token = "0x6001096")]
				[Address(RVA = "0x539D2C", Offset = "0x539D2C", VA = "0x539D2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277AA0", Offset = "0x277AA0")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6001097")]
				[Address(RVA = "0x539D34", Offset = "0x539D34", VA = "0x539D34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277AD0", Offset = "0x277AD0")]
				set
				{
				}
			}

			[Token(Token = "0x17000203")]
			public OnAction Callback
			{
				[Token(Token = "0x6001098")]
				[Address(RVA = "0x539D3C", Offset = "0x539D3C", VA = "0x539D3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277AE0", Offset = "0x277AE0")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6001099")]
				[Address(RVA = "0x539D44", Offset = "0x539D44", VA = "0x539D44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277B10", Offset = "0x277B10")]
				set
				{
				}
			}
		}

		[Token(Token = "0x6001094")]
		public abstract ActionItem[] GetActions();

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x8997AC", Offset = "0x8997AC", VA = "0x8997AC")]
		protected DebugConsoleContext()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class DebugConsoleItem : MonoBehaviour
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TextMeshProUGUI m_text;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button m_button;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x8997B4", Offset = "0x8997B4", VA = "0x8997B4")]
		public DebugConsoleItem()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class DebugContextBladeAssignMenu : DebugConsoleContext
	{
		[Serializable]
		[Token(Token = "0x20002A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271054", Offset = "0x271054")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ActionItem.OnAction <>9__4_3;

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x539DBC", Offset = "0x539DBC", VA = "0x539DBC")]
			public <>c()
			{
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x539DC4", Offset = "0x539DC4", VA = "0x539DC4")]
			internal DebugConsoleContext <GetActions>b__4_3()
			{
				return null;
			}
		}

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271064", Offset = "0x271064")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int assignMode;

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x539E24", Offset = "0x539E24", VA = "0x539E24")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x539E2C", Offset = "0x539E2C", VA = "0x539E2C")]
			internal void <AssignBlade>b__0(Blade result)
			{
			}
		}

		[Token(Token = "0x4000DF4")]
		private const short ASSIGN_LEFT = 1;

		[Token(Token = "0x4000DF5")]
		private const short ASSIGN_RIGHT = 2;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private BladeConfig m_config;

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x8997BC", Offset = "0x8997BC", VA = "0x8997BC")]
		public DebugContextBladeAssignMenu(BladeConfig config)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x8997E8", Offset = "0x8997E8", VA = "0x8997E8", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x899C34", Offset = "0x899C34", VA = "0x899C34")]
		private void AssignBlade(int assignMode)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x899DB4", Offset = "0x899DB4", VA = "0x899DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277B20", Offset = "0x277B20")]
		private DebugConsoleContext <GetActions>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x899E2C", Offset = "0x899E2C", VA = "0x899E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277B30", Offset = "0x277B30")]
		private DebugConsoleContext <GetActions>b__4_1()
		{
			return null;
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x899E9C", Offset = "0x899E9C", VA = "0x899E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x277B40", Offset = "0x277B40")]
		private DebugConsoleContext <GetActions>b__4_2()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class DebugContextBladesMenu : DebugConsoleContext
	{
		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271074", Offset = "0x271074")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BladeConfig config;

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x53A110", Offset = "0x53A110", VA = "0x53A110")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x53A118", Offset = "0x53A118", VA = "0x53A118")]
			internal DebugConsoleContext <GetActions>b__0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20002A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271084", Offset = "0x271084")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ActionItem.OnAction <>9__0_1;

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x53A0A8", Offset = "0x53A0A8", VA = "0x53A0A8")]
			public <>c()
			{
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x53A0B0", Offset = "0x53A0B0", VA = "0x53A0B0")]
			internal DebugConsoleContext <GetActions>b__0_1()
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x899F0C", Offset = "0x899F0C", VA = "0x899F0C", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x899E24", Offset = "0x899E24", VA = "0x899E24")]
		public DebugContextBladesMenu()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class DebugContextMainMenu : DebugConsoleContext
	{
		[Serializable]
		[Token(Token = "0x20002A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x271094", Offset = "0x271094")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ActionItem.OnAction <>9__0_0;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ActionItem.OnAction <>9__0_1;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static ActionItem.OnAction <>9__0_2;

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x53A1F4", Offset = "0x53A1F4", VA = "0x53A1F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x53A1FC", Offset = "0x53A1FC", VA = "0x53A1FC")]
			internal DebugConsoleContext <GetActions>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x53A25C", Offset = "0x53A25C", VA = "0x53A25C")]
			internal DebugConsoleContext <GetActions>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x53A2BC", Offset = "0x53A2BC", VA = "0x53A2BC")]
			internal DebugConsoleContext <GetActions>b__0_2()
			{
				return null;
			}
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x89A3FC", Offset = "0x89A3FC", VA = "0x89A3FC", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x899348", Offset = "0x899348", VA = "0x899348")]
		public DebugContextMainMenu()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class DebugContextWeatherSystemMenu : DebugConsoleContext
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2710A4", Offset = "0x2710A4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DynamicEnvironmentManager dynamicEnvironmentManager;

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x53A3F4", Offset = "0x53A3F4", VA = "0x53A3F4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x53A3FC", Offset = "0x53A3FC", VA = "0x53A3FC")]
			internal DebugConsoleContext <GetActions>b__0()
			{
				return null;
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x53A42C", Offset = "0x53A42C", VA = "0x53A42C")]
			internal DebugConsoleContext <GetActions>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2710B4", Offset = "0x2710B4")]
		private sealed class <>c__DisplayClass1_1
		{
			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string weatherState;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass1_0 CS$<>8__locals1;

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x53A45C", Offset = "0x53A45C", VA = "0x53A45C")]
			public <>c__DisplayClass1_1()
			{
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x53A464", Offset = "0x53A464", VA = "0x53A464")]
			internal DebugConsoleContext <GetActions>b__2()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x2710C4", Offset = "0x2710C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ActionItem.OnAction <>9__1_3;

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x53A38C", Offset = "0x53A38C", VA = "0x53A38C")]
			public <>c()
			{
			}

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x53A394", Offset = "0x53A394", VA = "0x53A394")]
			internal DebugConsoleContext <GetActions>b__1_3()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string[] m_weatherStates;

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x89AA28", Offset = "0x89AA28", VA = "0x89AA28", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x89B0B8", Offset = "0x89B0B8", VA = "0x89B0B8")]
		public DebugContextWeatherSystemMenu()
		{
		}
	}
}
namespace Halfbrick.Analytics
{
	[Token(Token = "0x20002AC")]
	public class SettingsValuesAsset : ISettingsValuesAsset
	{
		[Token(Token = "0x17000204")]
		public override string ApiKey
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x718408", Offset = "0x718408", VA = "0x718408", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public override string ServerUrl
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x718454", Offset = "0x718454", VA = "0x718454", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public override string SkuName
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x7184A0", Offset = "0x7184A0", VA = "0x7184A0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		public override bool TestMode
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x7184EC", Offset = "0x7184EC", VA = "0x7184EC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x7184F4", Offset = "0x7184F4", VA = "0x7184F4")]
		public SettingsValuesAsset()
		{
		}
	}
}
namespace UnityEngine.AzureSky
{
	[Token(Token = "0x20002AD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x2710D4", Offset = "0x2710D4")]
	public class AzureSkyController : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		public static class Uniforms
		{
			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _CullMode;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _SunTexture;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _MoonTexture;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _CloudNoise;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _StarfieldTexture;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _StarNoiseTexture;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Kr;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Km;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Scattering;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _NightIntensity;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _RayleighColor;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _MieColor;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _SunDiskIntensity;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _SunDiskColor;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _Exposure;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _Pi316;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Pi14;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _Pi;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LightSpeed;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _MieDepth;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _SunSize;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _MoonSize;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _SunDirection;

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _MoonDirection;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _UpMatrix;

			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _MoonMatrix;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _SunMatrix;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _RelativeSunMatrix;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _StarMatrix;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NoiseMatrix;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _Br;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _Bm;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _MieG;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _SunsetColorMode;

			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _MoonColor;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			internal static readonly int _MoonBrightColor;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly int _MoonBrightRange;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			internal static readonly int _MoonEmission;

			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly int _StarfieldColorBalance;

			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			internal static readonly int _StarfieldIntensity;

			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly int _MilkyWayIntensity;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			internal static readonly int _FogScale;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly int _FogBlend;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			internal static readonly int _FogDensity;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			internal static readonly int _FogDistance;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			internal static readonly int _HeightFogBlend;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			internal static readonly int _HeightFogDensity;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			internal static readonly int _HeightFogDistance;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal static readonly int _HeightFogStart;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			internal static readonly int _HeightFogEnd;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			internal static readonly int _DynamicCloudLayer1Altitude;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			internal static readonly int _DynamicCloudLayer1Direction;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal static readonly int _DynamicCloudLayer1Speed;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			internal static readonly int _DynamicCloudLayer1Density;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			internal static readonly int _DynamicCloudLayer1Color1;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			internal static readonly int _DynamicCloudLayer1Color2;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			internal static readonly int _StaticCloudTextureSource;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			internal static readonly int _StaticCloudTextureDestination;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			internal static readonly int _StaticCloudColor;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			internal static readonly int _StaticCloudScattering;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			internal static readonly int _StaticCloudExtinction;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			internal static readonly int _StaticCloudPower;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			internal static readonly int _StaticCloudIntensity;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			internal static readonly int _StaticCloudRotationSpeed;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			internal static readonly int _WeatherTransitionTime;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			internal static readonly int _RainColor;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			internal static readonly int _SnowColor;
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x27111C", Offset = "0x27111C")]
		private sealed class <PlayThunderAudioClip>d__154 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delayTime;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AzureSkyController <>4__this;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int element;

			[Token(Token = "0x17000209")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E5")]
				[Address(RVA = "0x536740", Offset = "0x536740", VA = "0x536740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E7")]
				[Address(RVA = "0x536790", Offset = "0x536790", VA = "0x536790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x5365B8", Offset = "0x5365B8", VA = "0x5365B8")]
			[DebuggerHidden]
			public <PlayThunderAudioClip>d__154(int <>1__state)
			{
			}

			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x5365D8", Offset = "0x5365D8", VA = "0x5365D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x5365DC", Offset = "0x5365DC", VA = "0x5365DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x536748", Offset = "0x536748", VA = "0x536748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform sunTransform;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform moonTransform;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform lightTransform;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light thunderDirectionalLight;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Texture2D moonTexture;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D sunTexture;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Texture2D cloudNoise;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Cubemap starfieldTexture;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Cubemap starNoiseTexture;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material skyMaterial;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Material rainMaterial;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material snowMaterial;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ParticleSystem rainParticle;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ParticleSystem snowParticle;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WindZone windZone;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AzureSkySoundFX soundFX;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Transform skydome;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ReflectionProbe reflectionProbe;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DateTime m_date;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_dayOfYear;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private AzureSkyProfile m_getCalendarProfile;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4 m_starfieldMatrix;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Matrix4x4 m_noiseMatrix;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_noiseMatrixRotation;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Quaternion m_noiseRotation;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_timeSinceLastProbeUpdate;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_timelineCurveTime;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_timelineGradientTime;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_sunCurveTime;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float m_sunGradientTime;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_moonCurveTime;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float m_moonGradientTime;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_timeProgression;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 m_sunRealisticPosition;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 m_moonRealisticPosition;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Quaternion m_sunSimplePosition;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 m_sunLocalDirection;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 m_moonLocalDirection;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public List<AzureSkyThunder> thunderList;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float thunderLightIntensity;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float thunderCloudIntensity;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float m_thunderLightingTime;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float m_thunderLightingSpeed;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float m_thunderLightingIntensity;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int m_thunderIndex;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool m_thunderIsLighting;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public AzureSkyProfile[] calendarProfileList;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private WeightedDayProfile[] m_weightedProfiles;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public AzureSkyProfile calendarDayProfile;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private AzureSkyProfile nextCalendarDayProfile;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public AzureSkyTimeOfDayComponent timeOfDay;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AzureSkyOptionsComponent options;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float kr;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float km;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float rayleigh;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float mie;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float nightIntensity;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float scattering;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float sunDiskIntensity;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float exposure;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public Color mieColor;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public Color rayleighColor;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public Color sunDiskColor;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private Vector3 m_lambda;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float N;

		[Token(Token = "0x4000E48")]
		private const float m_pi = (float)Math.PI;

		[Token(Token = "0x4000E49")]
		private const float m_n = 1.00029f;

		[Token(Token = "0x4000E4A")]
		private const float m_pn = 0.035f;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Vector3 m_K;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Color moonColor;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Color moonBrightColor;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float moonBrightRange;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float moonEmission;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float starsScintillation;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float starfieldIntensity;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float milkyWayIntensity;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float fogScale;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float fogBlend;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float fogDensity;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float fogDistance;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float heightFogBlend;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public float heightFogDensity;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float heightFogDistance;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public float heightFogStart;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float heightFogEnd;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float dynamicCloudLayer1Altitude;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float dynamicCloudLayer1Direction;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float dynamicCloudLayer1Speed;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public Color dynamicCloudLayer1Color1;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public Color dynamicCloudLayer1Color2;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float dynamicCloudLayer1Density;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Texture2D staticCloudTextureSource;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Texture2D staticCloudTextureDestination;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Color staticCloudColor;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float staticCloudScattering;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float staticCloudExtinction;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public float staticCloudPower;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public float staticCloudIntensity;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public float staticCloudRotationSpeed;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float m_cloudRotationSpeed;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float lightIntensity;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public Color lightColor;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public float ambientIntensity;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public Color ambientSkyColor;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Color ambientEquatorColor;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Color ambientGroundColor;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public float reflectionIntensity;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private Light m_lightComponent;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float m_sunElevation;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public Color rainColor;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public Color snowColor;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float rainIntensity;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public float snowIntensity;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public float windSpeed;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public float windDirection;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float rainLightVolume;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float rainMediumVolume;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float rainHeavyVolume;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public float windLightVolume;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public float windMediumVolume;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float windHeavyVolume;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float wetness;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public float snowAmount;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float covarage;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Color outputColor1;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public Color outputColor2;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public Color outputColor3;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private ParticleSystem.EmissionModule m_rainEmission;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		private ParticleSystem.EmissionModule m_snowEmission;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private float m_maxRainEmission;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		private float m_maxSnowEmission;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private Vector3 m_windRotation;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		private float m_maxWindSpeed;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public List<CurveOutput> curveOuputList;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public List<GradientOutput> gradientOuputList;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private bool m_isDaytime;

		[Token(Token = "0x17000208")]
		public bool IsDaytime
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x9880DC", Offset = "0x9880DC", VA = "0x9880DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x9880E4", Offset = "0x9880E4", VA = "0x9880E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x989614", Offset = "0x989614", VA = "0x989614")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x989654", Offset = "0x989654", VA = "0x989654")]
		private void Update()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x98D124", Offset = "0x98D124", VA = "0x98D124")]
		private Vector3 GetBetaRay()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x98D1F4", Offset = "0x98D1F4", VA = "0x98D1F4")]
		private Vector3 GetBetaMie()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x98D27C", Offset = "0x98D27C", VA = "0x98D27C")]
		private float GetCurveValue(AnimationCurve[] curveTarget, int curveMode)
		{
			return default(float);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x98D364", Offset = "0x98D364", VA = "0x98D364")]
		public float GetCurveOutput(int element)
		{
			return default(float);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x98D57C", Offset = "0x98D57C", VA = "0x98D57C")]
		private Color GetGradientValue(Gradient[] gradientTarget, int curveMode)
		{
			return default(Color);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x98D68C", Offset = "0x98D68C", VA = "0x98D68C")]
		public Color GetGradientOutput(int element)
		{
			return default(Color);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x98B67C", Offset = "0x98B67C", VA = "0x98B67C")]
		public AzureSkyProfile GetCalendarDayProfile()
		{
			return null;
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x98D8CC", Offset = "0x98D8CC", VA = "0x98D8CC")]
		public AzureSkyProfile GetNextCalendarDayProfile()
		{
			return null;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x98DA4C", Offset = "0x98DA4C", VA = "0x98DA4C")]
		public void SetWeatherProfile(WeightedDayProfile[] weightedProfile)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x98B7C0", Offset = "0x98B7C0", VA = "0x98B7C0")]
		private void BlendWeatherProfiles(WeightedDayProfile[] profiles)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x9895A0", Offset = "0x9895A0", VA = "0x9895A0")]
		public void UpdateProfiles()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x98B5BC", Offset = "0x98B5BC", VA = "0x98B5BC")]
		private void SoundPlayController(float volume, AudioSource sound)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x98DDC8", Offset = "0x98DDC8", VA = "0x98DDC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x277B50", Offset = "0x277B50")]
		private IEnumerator PlayThunderAudioClip(int element, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x98DE94", Offset = "0x98DE94", VA = "0x98DE94")]
		public void PlayThunderEffect(int element)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x98E134", Offset = "0x98E134", VA = "0x98E134")]
		public void PlayThunderEffectRandom()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x9885C0", Offset = "0x9885C0", VA = "0x9885C0")]
		private void InitializeShaderUniforms()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x988830", Offset = "0x988830", VA = "0x988830")]
		private void UpdateShaderUniforms()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x98DD28", Offset = "0x98DD28", VA = "0x98DD28")]
		private void SetStaticCloudTexture(Texture2D source, Texture2D destination)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x9882FC", Offset = "0x9882FC", VA = "0x9882FC")]
		public void ConfigureShaders()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x98E404", Offset = "0x98E404", VA = "0x98E404")]
		public void SetParticlesActive(bool value)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x989454", Offset = "0x989454", VA = "0x989454")]
		public void SetParticlesActive(int value)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x98E540", Offset = "0x98E540", VA = "0x98E540")]
		public AzureSkyController()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x27112C", Offset = "0x27112C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x27112C", Offset = "0x27112C")]
	public class AzureSkyFogScattering : MonoBehaviour
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Material fogScatteringMaterial;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Camera m_camera;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] m_frustumCorners;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Rect m_rect;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Matrix4x4 m_frustumCornersArray;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CameraClearFlags clearFlags;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private GameObject m_tmpCam;

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x98F4B4", Offset = "0x98F4B4", VA = "0x98F4B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x98F548", Offset = "0x98F548", VA = "0x98F548")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x98FBF4", Offset = "0x98FBF4", VA = "0x98FBF4")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x9901F4", Offset = "0x9901F4", VA = "0x9901F4")]
		public AzureSkyFogScattering()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x2711E0", Offset = "0x2711E0")]
	public class AzureSkyProfile : ScriptableObject
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AzureSkyScatteringComponent scattering;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AzureSkyDeepSpaceComponent deepSpace;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AzureSkyFogScatteringComponent fogScattering;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AzureSkyCloudsComponent clouds;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AzureSkyLightingComponent lighting;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AzureSkyWeatherComponent weather;

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xD05AB0", Offset = "0xD05AB0", VA = "0xD05AB0")]
		public AzureSkyProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class AzureEditorSettings
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool showTimeOfDayTab;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool showReferencesTab;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool showClimateTab;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool showOptionsTab;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool showOutputTab;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool showScatteringTab;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool showDeepSpaceTab;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool showFogScatteringTab;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool showCloudsTab;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool showLightingTab;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool showWeatherTab;

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x9873C4", Offset = "0x9873C4", VA = "0x9873C4")]
		public AzureEditorSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class AzureSkyCloudsComponent
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float dynamicCloudLayer1Altitude;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dynamicCloudLayer1Direction;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float dynamicCloudLayer1Speed;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int dynamicCloudLayer1GradientColor1Index;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient[] dynamicCloudLayer1GradientColor1;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dynamicCloudLayer1GradientColor2Index;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient[] dynamicCloudLayer1GradientColor2;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int dynamicCloudLayer1DensityCurveIndex;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve[] dynamicCloudLayer1DensityCurve;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int fastIndexes;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D staticCloudTexture;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int staticCloudColorIndex;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient[] staticCloudColor;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int staticCloudScatteringCurveIndex;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve[] staticCloudScatteringCurve;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int staticCloudExtinctionCurveIndex;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] staticCloudExtinctionCurve;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int staticCloudPowerCurveIndex;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve[] staticCloudPowerCurve;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int staticCloudIntensityCurveIndex;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve[] staticCloudIntensityCurve;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float staticCloudRotationSpeed;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x9873D4", Offset = "0x9873D4", VA = "0x9873D4")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x9873FC", Offset = "0x9873FC", VA = "0x9873FC")]
		public AzureSkyCloudsComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class AzureSkyDeepSpaceComponent
	{
		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int moonColorGradientIndex;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Gradient[] moonColorGradientColor;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int moonBrightColorGradientIndex;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Gradient[] moonBrightColorGradientColor;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int moonBrightRangeCurveIndex;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve[] moonBrightRangeCurve;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int moonEmissionCurveIndex;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AnimationCurve[] moonEmissionCurve;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float starsScintillation;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int starfieldIntensityCurveIndex;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] starfieldIntensityCurve;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int milkyWayIntensityCurveIndex;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] milkyWayIntensityCurve;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int fastIndexes;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x98EABC", Offset = "0x98EABC", VA = "0x98EABC")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x98EADC", Offset = "0x98EADC", VA = "0x98EADC")]
		public AzureSkyDeepSpaceComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public class AzureSkyFogScatteringComponent
	{
		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fogScale;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int fogBlendCurveIndex;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve[] fogBlendCurve;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int fogDensityCurveIndex;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve[] fogDensityCurve;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int fogDistanceCurveIndex;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve[] fogDistanceCurve;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int heightFogBlendCurveIndex;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve[] heightFogBlendCurve;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int heightFogDensityCurveIndex;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] heightFogDensityCurve;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int heightFogDistanceCurveIndex;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] heightFogDistanceCurve;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int heightFogStartCurveIndex;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve[] heightFogStartCurve;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int heightFogEndCurveIndex;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] heightFogEndCurve;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int fastIndexes;

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x9902C8", Offset = "0x9902C8", VA = "0x9902C8")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x9902F0", Offset = "0x9902F0", VA = "0x9902F0")]
		public AzureSkyFogScatteringComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	public class AzureSkyLightingComponent
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int directionalLightIntensityCurveIndex;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimationCurve[] directionalLightIntensityCurve;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int directionalLightGradientColorIndex;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Gradient[] directionalLightGradientColor;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ambientIntensityCurveIndex;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve[] ambientIntensityCurve;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ambientSkyGradientColorIndex;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Gradient[] ambientSkyGradientColor;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int equatorGradientColorIndex;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Gradient[] equatorGradientColor;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int groundGradientColorIndex;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Gradient[] groundGradientColor;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int reflectionIntensityCurveIndex;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AnimationCurve[] reflectionIntensityCurve;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int fastIndexes;

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xD04F60", Offset = "0xD04F60", VA = "0xD04F60")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xD04F84", Offset = "0xD04F84", VA = "0xD04F84")]
		public AzureSkyLightingComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B7")]
	public class AzureSkyOptionsComponent
	{
		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool startAtCurrentTime;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool startAtCurrentDate;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool followMainCamera;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool applyDayChangeTransition;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dayChangeTransitionTime;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float planetRadius;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lightSpeed;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mieDepth;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sunSize;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float moonSize;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 starfieldPosition;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 starfieldColor;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int particlesMode;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool keepWeatherUpdate;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int cloudMode;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int repeatMode;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int sunsetColorMode;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int wavelengthMode;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int shaderMode;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int useReflectionProbe;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int reflectionProbeRefreshMode;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float reflectionProbeUpdateTime;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool reflectionProbeUpdateAtFirstFrame;

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xD05A68", Offset = "0xD05A68", VA = "0xD05A68")]
		public AzureSkyOptionsComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class CurveOutput
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int curveIndex;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimationCurve[] curveOutput;

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x892688", Offset = "0x892688", VA = "0x892688")]
		public CurveOutput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class GradientOutput
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int gradientIndex;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Gradient[] gradientOutput;

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x848424", Offset = "0x848424", VA = "0x848424")]
		public GradientOutput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class AzureSkyScatteringComponent
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 lambda;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float N;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float kr;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float km;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rayleighCurveIndex;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AnimationCurve[] rayleighCurve;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mieCurveIndex;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AnimationCurve[] mieCurve;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int nightIntensityCurveIndex;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AnimationCurve[] nightIntensityCurve;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int rayleighGradientIndex;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Gradient[] rayleighGradientColor;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int mieGradientIndex;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Gradient[] mieGradientColor;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sunDiskGradientIndex;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Gradient[] sunDiskGradientColor;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int scatteringCurveIndex;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public AnimationCurve[] scatteringCurve;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int sunDiskIntensityCurveIndex;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AnimationCurve[] sunDiskIntensityCurve;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int exposureCurveIndex;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AnimationCurve[] exposureCurve;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int fastIndexes;

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xD080A8", Offset = "0xD080A8", VA = "0xD080A8")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xD05C60", Offset = "0xD05C60", VA = "0xD05C60")]
		public AzureSkyScatteringComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class AzureSkySoundFX : MonoBehaviour
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AudioSource rainLight;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource rainMedium;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioSource rainHeavy;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource windLight;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioSource windMedium;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource windHeavy;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AudioSource thunder;

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xD080D4", Offset = "0xD080D4", VA = "0xD080D4")]
		public AzureSkySoundFX()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public struct AzureSkyThunder
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip audioClip;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float audioDelay;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationCurve lightingCurve;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float lightingSpeed;
	}
	[Serializable]
	[Token(Token = "0x20002BD")]
	public class AzureSkyTimeOfDayComponent
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selectableDayInt;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int dayOfYear;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] selectableDayList;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float hour;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int day;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int month;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int year;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int dayInMonth;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float utc;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float latitude;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float longitude;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int timeMode;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float dayCycle;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool setTimeByCurve;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float hourByCurve;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AnimationCurve dayCycleCurve;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lst;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_radians;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_radLatitude;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_sinLatitude;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_cosLatitude;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 m_hourAndMinutes;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_date;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DateTime m_dateTime;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_daysInMonth;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_dayOfWeek;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_fixLeapYear;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xD080DC", Offset = "0xD080DC", VA = "0xD080DC")]
		public void UpdateCalendar(string[] dayList)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xD0837C", Offset = "0xD0837C", VA = "0xD0837C")]
		public int GetDayOfWeek()
		{
			return default(int);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xD083D0", Offset = "0xD083D0", VA = "0xD083D0")]
		public int GetDayOfWeek(int dayNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xD08424", Offset = "0xD08424", VA = "0xD08424")]
		public int GetDayOfYear()
		{
			return default(int);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xD084C0", Offset = "0xD084C0", VA = "0xD084C0")]
		public bool IsLeapYear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xD0853C", Offset = "0xD0853C", VA = "0xD0853C")]
		public Vector2 GetTime()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD085A0", Offset = "0xD085A0", VA = "0xD085A0")]
		public Vector3 GetDate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xD085D8", Offset = "0xD085D8", VA = "0xD085D8")]
		public float GetSystemTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xD086C4", Offset = "0xD086C4", VA = "0xD086C4")]
		public void ApplySystemTime()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xD087B4", Offset = "0xD087B4", VA = "0xD087B4")]
		public void ApplySystemDate()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD088B0", Offset = "0xD088B0", VA = "0xD088B0")]
		public void StartNextDay(int repeatMode)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xD08924", Offset = "0xD08924", VA = "0xD08924")]
		public void JumpToNextDay(bool keepTime = true)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD08980", Offset = "0xD08980", VA = "0xD08980")]
		public void GotoDate(int month, int day, int year)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD08990", Offset = "0xD08990", VA = "0xD08990")]
		public void GotoTime(int hours, int minutes)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD089B4", Offset = "0xD089B4", VA = "0xD089B4")]
		public float GetDayLength()
		{
			return default(float);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD089E0", Offset = "0xD089E0", VA = "0xD089E0")]
		public void CalculateTimeByCurve()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD08A20", Offset = "0xD08A20", VA = "0xD08A20")]
		public float SetSimpleSunPosition()
		{
			return default(float);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xD08A68", Offset = "0xD08A68", VA = "0xD08A68")]
		public Quaternion SetSimpleMoonPosition(Transform sun)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD08B1C", Offset = "0xD08B1C", VA = "0xD08B1C")]
		public Vector3 SetRealisticSunPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD08ED0", Offset = "0xD08ED0", VA = "0xD08ED0")]
		public Vector3 SetRealisticMoonPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD09310", Offset = "0xD09310", VA = "0xD09310")]
		public AzureSkyTimeOfDayComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BE")]
	public struct WeatherProfile
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AzureSkyProfile Profile;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float TransitionTime;
	}
	[Token(Token = "0x20002BF")]
	public struct WeightedDayProfile
	{
		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AzureSkyProfile profile;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float weight;

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xB60CC4", Offset = "0xB60CC4", VA = "0xB60CC4")]
		public WeightedDayProfile(AzureSkyProfile profile, float weight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public class AzureSkyWeatherComponent
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int weatherRainGradientColorIndex;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Gradient[] weatherRainGradientColor;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int weatherSnowGradientColorIndex;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Gradient[] weatherSnowGradientColor;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int weatherRainIntensityCurveIndex;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve[] weatherRainIntensityCurve;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weatherSnowIntensityCurveIndex;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AnimationCurve[] weatherSnowIntensityCurve;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int weatherWindSpeedCurveIndex;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AnimationCurve[] weatherWindSpeedCurve;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int weatherWindDirectionCurveIndex;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AnimationCurve[] weatherWindDirectionCurve;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int weatherThunderLightIntensityCurveIndex;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AnimationCurve[] weatherThunderLightIntensityCurve;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int weatherThunderCloudIntensityCurveIndex;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AnimationCurve[] weatherThunderCloudIntensityCurve;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float weatherRainLightVolume;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float weatherRainMediumVolume;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float weatherRainHeavyVolume;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float weatherWindLightVolume;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float weatherWindMediumVolume;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float weatherWindHeavyVolume;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int weatherWetnessCurveIndex;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AnimationCurve[] weatherWetnessCurve;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int weatherSnowAmountCurveIndex;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AnimationCurve[] weatherSnowAmountCurve;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int weatherCovarageCurveIndex;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public AnimationCurve[] weatherCovarageCurve;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int weatherOutputColor1Index;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Gradient[] weatherOutputColor1GradientColor;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int weatherOutputColor2Index;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Gradient[] weatherOutputColor2GradientColor;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int weatherOutputColor3Index;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Gradient[] weatherOutputColor3GradientColor;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int fastIndexes;

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD0A72C", Offset = "0xD0A72C", VA = "0xD0A72C")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD06AE4", Offset = "0xD06AE4", VA = "0xD06AE4")]
		public AzureSkyWeatherComponent()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x20002C1")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Material mat;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x5350C0", Offset = "0x5350C0", VA = "0x5350C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x535144", Offset = "0x535144", VA = "0x535144")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x5351E0", Offset = "0x5351E0", VA = "0x5351E0")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x53514C", Offset = "0x53514C", VA = "0x53514C")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x5351E8", Offset = "0x5351E8", VA = "0x5351E8")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20002C2")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float lifetime;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x4EF668", Offset = "0x4EF668", VA = "0x4EF668")]
		private void Start()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x4EF700", Offset = "0x4EF700", VA = "0x4EF700")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float hitTime;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material mat;

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x4EF714", Offset = "0x4EF714", VA = "0x4EF714")]
		private void Start()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x4EF798", Offset = "0x4EF798", VA = "0x4EF798")]
		private void Update()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x4EF850", Offset = "0x4EF850", VA = "0x4EF850")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x4EFA48", Offset = "0x4EFA48", VA = "0x4EFA48")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody bullet;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform origshoot;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float speed;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float distance;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x4EFA50", Offset = "0x4EFA50", VA = "0x4EFA50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x4EFCD8", Offset = "0x4EFCD8", VA = "0x4EFCD8")]
		public ForceShieldShootBall()
		{
		}
	}
}
