using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using BHapticsSuit;
using FMOD.Studio;
using FMODUnity;
using GE.AI;
using GE.Achievements;
using GE.Actions;
using GE.BuildTag;
using GE.Conditions;
using GE.Core;
using GE.Database;
using GE.Events;
using GE.GlobalMultiplier;
using GE.Localisation;
using GE.Performance;
using GE.Performance.Occlusion;
using GE.PhysicalButtons;
using GE.PlayerClass;
using GE.PlayerUnit;
using GE.ProceduralGeneration;
using GE.SocialFeatures;
using GE.States;
using GE.Status;
using GE.TileGenerator;
using GE.Unit;
using GE.UnitEvents;
using GE.Upgrades;
using GE.VRAI;
using GE.VRInteraction;
using GE.VRInteraction.Inventory;
using GE.Validation;
using GE.WeaponConfigurator;
using GoogleSheetsToUnity;
using GreenerGames;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Peacemaker;
using Peacemaker.AI;
using Peacemaker.Audio;
using Peacemaker.Conditions;
using Peacemaker.Events;
using Sirenix.OdinInspector;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using Valve.VR;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class EasyColliderRotateDuplicate
{
	[Token(Token = "0x2000379")]
	public enum ROTATE_AXIS
	{
		[Token(Token = "0x4000DB7")]
		X,
		[Token(Token = "0x4000DB8")]
		Y,
		[Token(Token = "0x4000DB9")]
		Z
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ROTATE_AXIS axis;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NumberOfDuplications;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartRotation;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndRotation;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pivot;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject attachTo;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1308FCC", Offset = "0x1308FCC", VA = "0x1308FCC")]
	public EasyColliderRotateDuplicate()
	{
	}
}
[Token(Token = "0x2000003")]
public delegate void OnSpreedSheetLoaded(GstuSpreadSheet sheet);
[Token(Token = "0x2000004")]
public class GoogleSheetLog : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GoogleSheetLog Instance;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset VersionInfo;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ValueData> Infos;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string associatedSheet;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string associatedWorksheet;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x110F734", Offset = "0x110F734", VA = "0x110F734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x110F788", Offset = "0x110F788", VA = "0x110F788")]
	public void SendLog(int user, string progress, string district, int level, string sdk, Dictionary<ValueData, object> results, string modelName, List<string> controller)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x110F78C", Offset = "0x110F78C", VA = "0x110F78C")]
	public GoogleSheetLog()
	{
	}
}
[Token(Token = "0x2000005")]
public class ChangeMaterialDebug : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037A")]
	public class MaterialInfo
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE26E90", Offset = "0xE26E90")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE26ED8", Offset = "0xE26ED8")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE26ED8", Offset = "0xE26ED8")]
		[HideLabel]
		public KeyCode KeyCode;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ChangeMaterialDebug parent;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x12F9ABC", Offset = "0x12F9ABC", VA = "0x12F9ABC")]
		public void Set()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x12F9ADC", Offset = "0x12F9ADC", VA = "0x12F9ADC")]
		public void SetParent(ChangeMaterialDebug parent)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x12F9AE4", Offset = "0x12F9AE4", VA = "0x12F9AE4")]
		public MaterialInfo()
		{
		}
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1F088", Offset = "0xE1F088")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE1F088", Offset = "0xE1F088")]
	public List<MaterialInfo> Materials;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE1F0E8", Offset = "0xE1F0E8")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE1F0E8", Offset = "0xE1F0E8")]
	public List<Transform> Objects;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IncludeChildren;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x12F96F8", Offset = "0x12F96F8", VA = "0x12F96F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x12F97E8", Offset = "0x12F97E8", VA = "0x12F97E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x12F97EC", Offset = "0x12F97EC", VA = "0x12F97EC")]
	public void Replace(Material material)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x12F9960", Offset = "0x12F9960", VA = "0x12F9960")]
	public void ReplaceMaterial(Transform trans, Material material)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x12F9A24", Offset = "0x12F9A24", VA = "0x12F9A24")]
	public ChangeMaterialDebug()
	{
	}
}
[Token(Token = "0x2000006")]
public class ChangeQualityDebug : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037B")]
	public class QualityInfo
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE26F48", Offset = "0xE26F48")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE26F48", Offset = "0xE26F48")]
		[HideLabel]
		public string Quality;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE26FB4", Offset = "0xE26FB4")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE26FB4", Offset = "0xE26FB4")]
		[HideLabel]
		public KeyCode KeyCode;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x12F9B5C", Offset = "0x12F9B5C", VA = "0x12F9B5C")]
		public void Set()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x12F9C08", Offset = "0x12F9C08", VA = "0x12F9C08")]
		public string[] GetQuality()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x12F9B78", Offset = "0x12F9B78", VA = "0x12F9B78")]
		public int GetQualityByName(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x12F9C10", Offset = "0x12F9C10", VA = "0x12F9C10")]
		public QualityInfo()
		{
		}
	}

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE1F148", Offset = "0xE1F148")]
	public List<QualityInfo> Quality;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x12F9AEC", Offset = "0x12F9AEC", VA = "0x12F9AEC")]
	public ChangeQualityDebug()
	{
	}
}
[Token(Token = "0x2000007")]
public class MaterialSettings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037C")]
	public class MaterialInfo
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE27024", Offset = "0xE27024")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE27024", Offset = "0xE27024")]
		public List<Material> Material;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE27084", Offset = "0xE27084")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE27084", Offset = "0xE27084")]
		public List<string> Tags;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x111C628", Offset = "0x111C628", VA = "0x111C628")]
		public MaterialInfo()
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE1F180", Offset = "0xE1F180")]
	public List<MaterialInfo> Materials;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x111C28C", Offset = "0x111C28C", VA = "0x111C28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x111C290", Offset = "0x111C290", VA = "0x111C290")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE277F8", Offset = "0xE277F8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x111C5B8", Offset = "0x111C5B8", VA = "0x111C5B8")]
	public MaterialSettings()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE1DC74", Offset = "0xE1DC74")]
public class FastList<T>
{
	[Token(Token = "0x200037D")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E8B0", Offset = "0xE1E8B0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000B2")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000E82")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E84")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7F")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000E80")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E81")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000014")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000015")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000016")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000017")]
		set
		{
		}
	}

	[Token(Token = "0x6000012")]
	public FastList()
	{
	}

	[Token(Token = "0x6000013")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000018")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000019")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600001A")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600001B")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600001C")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001D")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600001E")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600001F")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000020")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000022")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000023")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000025")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000026")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27808", Offset = "0xE27808")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000027")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000028")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000029")]
	private void Trim()
	{
	}

	[Token(Token = "0x600002A")]
	public void Clear()
	{
	}

	[Token(Token = "0x600002B")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000009")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x11178B4", Offset = "0x11178B4", VA = "0x11178B4")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200000A")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1117888", Offset = "0x1117888", VA = "0x1117888")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200000B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200037F")]
	public delegate void OnClick();

	[Token(Token = "0x2000380")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000381")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000382")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E8C0", Offset = "0xE1E8C0")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x12FCD80", Offset = "0x12FCD80", VA = "0x12FCD80")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x12FD4AC", Offset = "0x12FD4AC", VA = "0x12FD4AC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E8D0", Offset = "0xE1E8D0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x12FCF98", Offset = "0x12FCF98", VA = "0x12FCF98")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x12FD724", Offset = "0x12FD724", VA = "0x12FD724")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E8E0", Offset = "0xE1E8E0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x12FD12C", Offset = "0x12FD12C", VA = "0x12FD12C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x12FDAD8", Offset = "0x12FDAD8", VA = "0x12FDAD8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E8F0", Offset = "0xE1E8F0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x12FD384", Offset = "0x12FD384", VA = "0x12FD384")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x12FDAF8", Offset = "0x12FDAF8", VA = "0x12FDAF8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000017")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000018")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000019")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000026")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000027")]
	private const float marginH = 16f;

	[Token(Token = "0x4000028")]
	private const float marginV = 16f;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x12FBB38", Offset = "0x12FBB38", VA = "0x12FBB38")]
	public void Awake()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x12FBF3C", Offset = "0x12FBF3C", VA = "0x12FBF3C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x12FC508", Offset = "0x12FC508", VA = "0x12FC508")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x12FC2B4", Offset = "0x12FC2B4", VA = "0x12FC2B4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x12FC6B0", Offset = "0x12FC6B0", VA = "0x12FC6B0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x12FC964", Offset = "0x12FC964", VA = "0x12FC964")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x12FCB14", Offset = "0x12FCB14", VA = "0x12FCB14")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x12FCBF8", Offset = "0x12FCBF8", VA = "0x12FCBF8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x12FCD88", Offset = "0x12FCD88", VA = "0x12FCD88")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x12FCE24", Offset = "0x12FCE24", VA = "0x12FCE24")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x12FCFA0", Offset = "0x12FCFA0", VA = "0x12FCFA0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x12FD134", Offset = "0x12FD134", VA = "0x12FD134")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x12FD38C", Offset = "0x12FD38C", VA = "0x12FD38C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x12FD43C", Offset = "0x12FD43C", VA = "0x12FD43C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200000C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x111687C", Offset = "0x111687C", VA = "0x111687C")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1116904", Offset = "0x1116904", VA = "0x1116904")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x11169CC", Offset = "0x11169CC", VA = "0x11169CC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1116A08", Offset = "0x1116A08", VA = "0x1116A08")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200000D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000387")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000DCD")]
		On,
		[Token(Token = "0x4000DCE")]
		Off,
		[Token(Token = "0x4000DCF")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color neutralColor;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color aimColor;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _forward;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _endPoint;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _hitTarget;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000003")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x1117C9C", Offset = "0x1117C9C", VA = "0x1117C9C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x1117C58", Offset = "0x1117C58", VA = "0x1117C58")]
		set
		{
		}
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1117CA4", Offset = "0x1117CA4", VA = "0x1117CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1117CFC", Offset = "0x1117CFC", VA = "0x1117CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1117E14", Offset = "0x1117E14", VA = "0x1117E14", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1117E30", Offset = "0x1117E30", VA = "0x1117E30", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1117E84", Offset = "0x1117E84", VA = "0x1117E84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x11180E0", Offset = "0x11180E0", VA = "0x11180E0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x11181F4", Offset = "0x11181F4", VA = "0x11181F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1118288", Offset = "0x1118288", VA = "0x1118288")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1118358", Offset = "0x1118358", VA = "0x1118358")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1118410", Offset = "0x1118410", VA = "0x1118410")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x11184DC", Offset = "0x11184DC", VA = "0x11184DC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200000E")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x12F8924", Offset = "0x12F8924", VA = "0x12F8924")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x12F8B30", Offset = "0x12F8B30", VA = "0x12F8B30")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x12F8FD0", Offset = "0x12F8FD0", VA = "0x12F8FD0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200000F")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1115B24", Offset = "0x1115B24", VA = "0x1115B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1115C58", Offset = "0x1115C58", VA = "0x1115C58")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1115EA8", Offset = "0x1115EA8", VA = "0x1115EA8")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000010")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000004")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x1115F54", Offset = "0x1115F54", VA = "0x1115F54")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x1115BB4", Offset = "0x1115BB4", VA = "0x1115BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2786C", Offset = "0xE2786C")]
		add
		{
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x1115EB0", Offset = "0x1115EB0", VA = "0x1115EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2787C", Offset = "0xE2787C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1115F60", Offset = "0x1115F60", VA = "0x1115F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x11160B8", Offset = "0x11160B8", VA = "0x11160B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x111622C", Offset = "0x111622C", VA = "0x111622C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1116234", Offset = "0x1116234", VA = "0x1116234")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000011")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F264", Offset = "0xE1F264")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F29C", Offset = "0xE1F29C")]
	public bool EnableCollision;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F2D4", Offset = "0xE1F2D4")]
	public float MaxFade;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F30C", Offset = "0xE1F30C")]
	public float FadeMinDistance;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F344", Offset = "0xE1F344")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x12F9C18", Offset = "0x12F9C18", VA = "0x12F9C18")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x12F9CA0", Offset = "0x12F9CA0", VA = "0x12F9CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x12F9D10", Offset = "0x12F9D10", VA = "0x12F9D10")]
	private void Start()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x12F9D14", Offset = "0x12F9D14", VA = "0x12F9D14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x12F9D38", Offset = "0x12F9D38", VA = "0x12F9D38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x12F9D5C", Offset = "0x12F9D5C", VA = "0x12F9D5C")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000012")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1118A24", Offset = "0x1118A24", VA = "0x1118A24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1118AD0", Offset = "0x1118AD0", VA = "0x1118AD0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000013")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	public enum States
	{
		[Token(Token = "0x4000DD1")]
		Ready,
		[Token(Token = "0x4000DD2")]
		Aim,
		[Token(Token = "0x4000DD3")]
		CancelAim,
		[Token(Token = "0x4000DD4")]
		PreTeleport,
		[Token(Token = "0x4000DD5")]
		CancelTeleport,
		[Token(Token = "0x4000DD6")]
		Teleporting,
		[Token(Token = "0x4000DD7")]
		PostTeleport
	}

	[Token(Token = "0x2000389")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000DD9")]
		None,
		[Token(Token = "0x4000DDA")]
		Aim,
		[Token(Token = "0x4000DDB")]
		PreTeleport,
		[Token(Token = "0x4000DDC")]
		Teleport
	}

	[Token(Token = "0x200038A")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000DDE")]
		Point,
		[Token(Token = "0x4000DDF")]
		Sphere,
		[Token(Token = "0x4000DE0")]
		Capsule
	}

	[Token(Token = "0x200038B")]
	public class AimData
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE270E4", Offset = "0xE270E4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000B4")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x111B300", Offset = "0x111B300", VA = "0x111B300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A618", Offset = "0xE2A618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x111B308", Offset = "0x111B308", VA = "0x111B308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A628", Offset = "0xE2A628")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x111B28C", Offset = "0x111B28C", VA = "0x111B28C")]
		public AimData()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x111B310", Offset = "0x111B310", VA = "0x111B310")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E900", Offset = "0xE1E900")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x111B0D8", Offset = "0x111B0D8", VA = "0x111B0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x111B140", Offset = "0x111B140", VA = "0x111B140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x11195DC", Offset = "0x11195DC", VA = "0x11195DC")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x111AFF0", Offset = "0x111AFF0", VA = "0x111AFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x111AFF4", Offset = "0x111AFF4", VA = "0x111AFF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x111B0E0", Offset = "0x111B0E0", VA = "0x111B0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E910", Offset = "0xE1E910")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x111AAB8", Offset = "0x111AAB8", VA = "0x111AAB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x111AB20", Offset = "0x111AB20", VA = "0x111AB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1119AC4", Offset = "0x1119AC4", VA = "0x1119AC4")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x111A980", Offset = "0x111A980", VA = "0x111A980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x111A984", Offset = "0x111A984", VA = "0x111A984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x111AAC0", Offset = "0x111AAC0", VA = "0x111AAC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E920", Offset = "0xE1E920")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x111ABCC", Offset = "0x111ABCC", VA = "0x111ABCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x111AC34", Offset = "0x111AC34", VA = "0x111AC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1119CA8", Offset = "0x1119CA8", VA = "0x1119CA8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x111AB28", Offset = "0x111AB28", VA = "0x111AB28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x111AB2C", Offset = "0x111AB2C", VA = "0x111AB2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x111ABD4", Offset = "0x111ABD4", VA = "0x111ABD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E930", Offset = "0xE1E930")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x111AF80", Offset = "0x111AF80", VA = "0x111AF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x111AFE8", Offset = "0x111AFE8", VA = "0x111AFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1119E8C", Offset = "0x1119E8C", VA = "0x1119E8C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x111AEA8", Offset = "0x111AEA8", VA = "0x111AEA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x111AEAC", Offset = "0x111AEAC", VA = "0x111AEAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x111AF88", Offset = "0x111AF88", VA = "0x111AF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E940", Offset = "0xE1E940")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x111ACE0", Offset = "0x111ACE0", VA = "0x111ACE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x111AD48", Offset = "0x111AD48", VA = "0x111AD48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x111A070", Offset = "0x111A070", VA = "0x111A070")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x111AC3C", Offset = "0x111AC3C", VA = "0x111AC3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x111AC40", Offset = "0x111AC40", VA = "0x111AC40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x111ACE8", Offset = "0x111ACE8", VA = "0x111ACE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E950", Offset = "0xE1E950")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x111B21C", Offset = "0x111B21C", VA = "0x111B21C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x111B284", Offset = "0x111B284", VA = "0x111B284", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x111A254", Offset = "0x111A254", VA = "0x111A254")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x111B148", Offset = "0x111B148", VA = "0x111B148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x111B14C", Offset = "0x111B14C", VA = "0x111B14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x111B224", Offset = "0x111B224", VA = "0x111B224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E960", Offset = "0xE1E960")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x111AE38", Offset = "0x111AE38", VA = "0x111AE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x111AEA0", Offset = "0x111AEA0", VA = "0x111AEA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x111A438", Offset = "0x111A438", VA = "0x111A438")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x111AD50", Offset = "0x111AD50", VA = "0x111AD50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x111AD54", Offset = "0x111AD54", VA = "0x111AD54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x111AE40", Offset = "0x111AE40", VA = "0x111AE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F37C", Offset = "0xE1F37C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F3B4", Offset = "0xE1F3B4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F3EC", Offset = "0xE1F3EC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F424", Offset = "0xE1F424")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F45C", Offset = "0xE1F45C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F494", Offset = "0xE1F494")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F4CC", Offset = "0xE1F4CC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F504", Offset = "0xE1F504")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F53C", Offset = "0xE1F53C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F54C", Offset = "0xE1F54C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F584", Offset = "0xE1F584")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F5CC", Offset = "0xE1F5CC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F5DC", Offset = "0xE1F5DC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F614", Offset = "0xE1F614")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F64C", Offset = "0xE1F64C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F684", Offset = "0xE1F684")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000005")]
	public States CurrentState
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1118B20", Offset = "0x1118B20", VA = "0x1118B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2788C", Offset = "0xE2788C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x1118B28", Offset = "0x1118B28", VA = "0x1118B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2789C", Offset = "0xE2789C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1118D58", Offset = "0x1118D58", VA = "0x1118D58")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000007")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x1118D80", Offset = "0x1118D80", VA = "0x1118D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE278CC", Offset = "0xE278CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006B")]
		[Address(RVA = "0x1118D88", Offset = "0x1118D88", VA = "0x1118D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE278DC", Offset = "0xE278DC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1118B30", Offset = "0x1118B30", VA = "0x1118B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE278AC", Offset = "0xE278AC")]
		add
		{
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1118BD4", Offset = "0x1118BD4", VA = "0x1118BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE278BC", Offset = "0xE278BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x1119494", Offset = "0x1119494", VA = "0x1119494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27924", Offset = "0xE27924")]
		add
		{
		}
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x1119538", Offset = "0x1119538", VA = "0x1119538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27934", Offset = "0xE27934")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x1119608", Offset = "0x1119608", VA = "0x1119608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279A8", Offset = "0xE279A8")]
		add
		{
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x11196AC", Offset = "0x11196AC", VA = "0x11196AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279B8", Offset = "0xE279B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x1119750", Offset = "0x1119750", VA = "0x1119750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279C8", Offset = "0xE279C8")]
		add
		{
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x11197F4", Offset = "0x11197F4", VA = "0x11197F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279D8", Offset = "0xE279D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x111990C", Offset = "0x111990C", VA = "0x111990C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279E8", Offset = "0xE279E8")]
		add
		{
		}
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x11199B0", Offset = "0x11199B0", VA = "0x11199B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE279F8", Offset = "0xE279F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x1119AF0", Offset = "0x1119AF0", VA = "0x1119AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A6C", Offset = "0xE27A6C")]
		add
		{
		}
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x1119B94", Offset = "0x1119B94", VA = "0x1119B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27A7C", Offset = "0xE27A7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000083")]
		[Address(RVA = "0x1119CD4", Offset = "0x1119CD4", VA = "0x1119CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27AF0", Offset = "0xE27AF0")]
		add
		{
		}
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x1119D78", Offset = "0x1119D78", VA = "0x1119D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B00", Offset = "0xE27B00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x1119EB8", Offset = "0x1119EB8", VA = "0x1119EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B74", Offset = "0xE27B74")]
		add
		{
		}
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x1119F5C", Offset = "0x1119F5C", VA = "0x1119F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27B84", Offset = "0xE27B84")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x111A09C", Offset = "0x111A09C", VA = "0x111A09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27BF8", Offset = "0xE27BF8")]
		add
		{
		}
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x111A140", Offset = "0x111A140", VA = "0x111A140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C08", Offset = "0xE27C08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x111A280", Offset = "0x111A280", VA = "0x111A280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C7C", Offset = "0xE27C7C")]
		add
		{
		}
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x111A324", Offset = "0x111A324", VA = "0x111A324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27C8C", Offset = "0xE27C8C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x111A464", Offset = "0x111A464", VA = "0x111A464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D00", Offset = "0xE27D00")]
		add
		{
		}
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x111A508", Offset = "0x111A508", VA = "0x111A508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D10", Offset = "0xE27D10")]
		remove
		{
		}
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1118AD8", Offset = "0x1118AD8", VA = "0x1118AD8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1118AFC", Offset = "0x1118AFC", VA = "0x1118AFC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1118C78", Offset = "0x1118C78", VA = "0x1118C78")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1118D90", Offset = "0x1118D90", VA = "0x1118D90")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x11190E8", Offset = "0x11190E8", VA = "0x11190E8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE278EC", Offset = "0xE278EC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x11191A0", Offset = "0x11191A0", VA = "0x11191A0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1119268", Offset = "0x1119268", VA = "0x1119268")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1119284", Offset = "0x1119284", VA = "0x1119284")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x111934C", Offset = "0x111934C", VA = "0x111934C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1119390", Offset = "0x1119390", VA = "0x1119390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x11193EC", Offset = "0x11193EC", VA = "0x11193EC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x111948C", Offset = "0x111948C", VA = "0x111948C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x111941C", Offset = "0x111941C", VA = "0x111941C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27944", Offset = "0xE27944")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1119898", Offset = "0x1119898", VA = "0x1119898")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1119A54", Offset = "0x1119A54", VA = "0x1119A54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27A08", Offset = "0xE27A08")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1119C38", Offset = "0x1119C38", VA = "0x1119C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27A8C", Offset = "0xE27A8C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1119E1C", Offset = "0x1119E1C", VA = "0x1119E1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27B10", Offset = "0xE27B10")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x111A000", Offset = "0x111A000", VA = "0x111A000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27B94", Offset = "0xE27B94")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x111A1E4", Offset = "0x111A1E4", VA = "0x111A1E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27C18", Offset = "0xE27C18")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x111A3C8", Offset = "0x111A3C8", VA = "0x111A3C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27C9C", Offset = "0xE27C9C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x111A5AC", Offset = "0x111A5AC", VA = "0x111A5AC")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x111A6F0", Offset = "0x111A6F0", VA = "0x111A6F0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x111A724", Offset = "0x111A724", VA = "0x111A724")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x111A844", Offset = "0x111A844", VA = "0x111A844")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x111A970", Offset = "0x111A970", VA = "0x111A970")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000014")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1037F30", Offset = "0x1037F30", VA = "0x1037F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D20", Offset = "0xE27D20")]
		add
		{
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1037FD4", Offset = "0x1037FD4", VA = "0x1037FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D30", Offset = "0xE27D30")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1038078", Offset = "0x1038078", VA = "0x1038078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D40", Offset = "0xE27D40")]
		add
		{
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x103811C", Offset = "0x103811C", VA = "0x103811C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D50", Offset = "0xE27D50")]
		remove
		{
		}
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10381C0", Offset = "0x10381C0", VA = "0x10381C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1038268", Offset = "0x1038268", VA = "0x1038268")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x103826C", Offset = "0x103826C", VA = "0x103826C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x10382E0", Offset = "0x10382E0", VA = "0x10382E0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1038450", Offset = "0x1038450", VA = "0x1038450")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1038734", Offset = "0x1038734", VA = "0x1038734")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1038924", Offset = "0x1038924", VA = "0x1038924")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000015")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x10FD490", Offset = "0x10FD490", VA = "0x10FD490", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10FD524", Offset = "0x10FD524", VA = "0x10FD524", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000A3")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10FD5F4", Offset = "0x10FD5F4", VA = "0x10FD5F4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000016")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F77C", Offset = "0xE1F77C")]
	public float Range;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10FD604", Offset = "0x10FD604", VA = "0x10FD604", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10FD760", Offset = "0x10FD760", VA = "0x10FD760")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000017")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F7B4", Offset = "0xE1F7B4")]
	public float Range;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F7EC", Offset = "0xE1F7EC")]
	public float MinimumElevation;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F824", Offset = "0xE1F824")]
	public float Gravity;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F85C", Offset = "0xE1F85C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1F85C", Offset = "0xE1F85C")]
	public float AimVelocity;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F8B8", Offset = "0xE1F8B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1F8B8", Offset = "0xE1F8B8")]
	public float AimStep;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10FD770", Offset = "0x10FD770", VA = "0x10FD770", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10FD9BC", Offset = "0x10FD9BC", VA = "0x10FD9BC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000018")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F910", Offset = "0xE1F910")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10FD9D0", Offset = "0x10FD9D0", VA = "0x10FD9D0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x10FDAB4", Offset = "0x10FDAB4", VA = "0x10FDAB4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10FDAE4", Offset = "0x10FDAE4", VA = "0x10FDAE4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10FDB14", Offset = "0x10FDB14", VA = "0x10FDB14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10FDBB4", Offset = "0x10FDBB4", VA = "0x10FDBB4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10FDC20", Offset = "0x10FDC20", VA = "0x10FDC20", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10FDC88", Offset = "0x10FDC88", VA = "0x10FDC88")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000019")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F948", Offset = "0xE1F948")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F958", Offset = "0xE1F958")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F990", Offset = "0xE1F990")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1F9C8", Offset = "0xE1F9C8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000008")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x10FDDA4", Offset = "0x10FDDA4", VA = "0x10FDDA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D60", Offset = "0xE27D60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x10FDDAC", Offset = "0x10FDDAC", VA = "0x10FDDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D70", Offset = "0xE27D70")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x10FDF5C", Offset = "0x10FDF5C", VA = "0x10FDF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D80", Offset = "0xE27D80")]
		add
		{
		}
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x10FE000", Offset = "0x10FE000", VA = "0x10FE000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27D90", Offset = "0xE27D90")]
		remove
		{
		}
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x10FDDB8", Offset = "0x10FDDB8", VA = "0x10FDDB8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x10FDE40", Offset = "0x10FDE40", VA = "0x10FDE40")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x10FDF18", Offset = "0x10FDF18", VA = "0x10FDF18")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x10FDF58", Offset = "0x10FDF58", VA = "0x10FDF58")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x10FE0A4", Offset = "0x10FE0A4", VA = "0x10FE0A4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x10FE10C", Offset = "0x10FE10C", VA = "0x10FE10C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x10FE12C", Offset = "0x10FE12C", VA = "0x10FE12C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200001A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E970", Offset = "0xE1E970")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x10FE7F0", Offset = "0x10FE7F0", VA = "0x10FE7F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x10FE858", Offset = "0x10FE858", VA = "0x10FE858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x10FE53C", Offset = "0x10FE53C", VA = "0x10FE53C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x10FE760", Offset = "0x10FE760", VA = "0x10FE760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x10FE764", Offset = "0x10FE764", VA = "0x10FE764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x10FE7F8", Offset = "0x10FE7F8", VA = "0x10FE7F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E980", Offset = "0xE1E980")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x10FE6F0", Offset = "0x10FE6F0", VA = "0x10FE6F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x10FE758", Offset = "0x10FE758", VA = "0x10FE758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x10FE5D8", Offset = "0x10FE5D8", VA = "0x10FE5D8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x10FE65C", Offset = "0x10FE65C", VA = "0x10FE65C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x10FE660", Offset = "0x10FE660", VA = "0x10FE660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x10FE6F8", Offset = "0x10FE6F8", VA = "0x10FE6F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x10FE30C", Offset = "0x10FE30C", VA = "0x10FE30C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x10FE3B8", Offset = "0x10FE3B8", VA = "0x10FE3B8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x10FE410", Offset = "0x10FE410", VA = "0x10FE410", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x10FE4CC", Offset = "0x10FE4CC", VA = "0x10FE4CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27DA0", Offset = "0xE27DA0")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x10FE568", Offset = "0x10FE568", VA = "0x10FE568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27E04", Offset = "0xE27E04")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000C0")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60000C1")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x10FE604", Offset = "0x10FE604", VA = "0x10FE604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E68", Offset = "0xE27E68")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x10FE630", Offset = "0x10FE630", VA = "0x10FE630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E78", Offset = "0xE27E78")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200001B")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1FA10", Offset = "0xE1FA10")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FA20", Offset = "0xE1FA20")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FA58", Offset = "0xE1FA58")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FA90", Offset = "0xE1FA90")]
	public bool FastTeleport;

	[Token(Token = "0x17000009")]
	public Transform Pointer
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x10FE860", Offset = "0x10FE860", VA = "0x10FE860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E88", Offset = "0xE27E88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x10FE868", Offset = "0x10FE868", VA = "0x10FE868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E98", Offset = "0xE27E98")]
		private set
		{
		}
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x10FE870", Offset = "0x10FE870", VA = "0x10FE870", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10FE9CC", Offset = "0x10FE9CC", VA = "0x10FE9CC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x10FEA84", Offset = "0x10FEA84", VA = "0x10FEA84")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200001C")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000395")]
	public enum InputModes
	{
		[Token(Token = "0x4000E02")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000E03")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000E04")]
		ThumbstickTeleport,
		[Token(Token = "0x4000E05")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000396")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000E07")]
		A,
		[Token(Token = "0x4000E08")]
		B,
		[Token(Token = "0x4000E09")]
		LeftTrigger,
		[Token(Token = "0x4000E0A")]
		LeftThumbstick,
		[Token(Token = "0x4000E0B")]
		RightTrigger,
		[Token(Token = "0x4000E0C")]
		RightThumbstick,
		[Token(Token = "0x4000E0D")]
		X,
		[Token(Token = "0x4000E0E")]
		Y
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FAC8", Offset = "0xE1FAC8")]
	public InputModes InputMode;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FB00", Offset = "0xE1FB00")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FB38", Offset = "0xE1FB38")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FB70", Offset = "0xE1FB70")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x10FEA88", Offset = "0x10FEA88", VA = "0x10FEA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x10FEA8C", Offset = "0x10FEA8C", VA = "0x10FEA8C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x10FEED4", Offset = "0x10FEED4", VA = "0x10FEED4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x10FEF94", Offset = "0x10FEF94", VA = "0x10FEF94")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200001D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000397")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000E10")]
		HeadRelative,
		[Token(Token = "0x4000E11")]
		ForwardFacing
	}

	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E990", Offset = "0xE1E990")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x10FF424", Offset = "0x10FF424", VA = "0x10FF424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x10FF48C", Offset = "0x10FF48C", VA = "0x10FF48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x10FF200", Offset = "0x10FF200", VA = "0x10FF200")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x10FF37C", Offset = "0x10FF37C", VA = "0x10FF37C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x10FF380", Offset = "0x10FF380", VA = "0x10FF380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x10FF42C", Offset = "0x10FF42C", VA = "0x10FF42C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x10FF040", Offset = "0x10FF040", VA = "0x10FF040")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x10FF0F4", Offset = "0x10FF0F4", VA = "0x10FF0F4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x10FF0FC", Offset = "0x10FF0FC", VA = "0x10FF0FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x10FF148", Offset = "0x10FF148", VA = "0x10FF148", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x10FF190", Offset = "0x10FF190", VA = "0x10FF190")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27EA8", Offset = "0xE27EA8")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60000D3")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x10FF22C", Offset = "0x10FF22C", VA = "0x10FF22C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x10FF350", Offset = "0x10FF350", VA = "0x10FF350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F0C", Offset = "0xE27F0C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200001E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x10FF494", Offset = "0x10FF494", VA = "0x10FF494", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x10FF498", Offset = "0x10FF498", VA = "0x10FF498", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x10FF514", Offset = "0x10FF514", VA = "0x10FF514")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200001F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FBA8", Offset = "0xE1FBA8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FBE0", Offset = "0xE1FBE0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FC18", Offset = "0xE1FC18")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FC50", Offset = "0xE1FC50")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x10FF518", Offset = "0x10FF518", VA = "0x10FF518", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x10FF588", Offset = "0x10FF588", VA = "0x10FF588", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x10FFA00", Offset = "0x10FFA00", VA = "0x10FFA00")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000020")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FC88", Offset = "0xE1FC88")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FCC0", Offset = "0xE1FCC0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FCF8", Offset = "0xE1FCF8")]
	public float RotateStickThreshold;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x10FFA04", Offset = "0x10FFA04", VA = "0x10FFA04", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x10FFA48", Offset = "0x10FFA48", VA = "0x10FFA48", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x10FFEB8", Offset = "0x10FFEB8", VA = "0x10FFEB8")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000021")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x10FFEC8", Offset = "0x10FFEC8", VA = "0x10FFEC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x10FFECC", Offset = "0x10FFECC", VA = "0x10FFECC")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x10FFED4", Offset = "0x10FFED4", VA = "0x10FFED4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x10FFFBC", Offset = "0x10FFFBC", VA = "0x10FFFBC")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x10FFFE4", Offset = "0x10FFFE4", VA = "0x10FFFE4")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000022")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1FD30", Offset = "0xE1FD30")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700000A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x10FFFFC", Offset = "0x10FFFFC", VA = "0x10FFFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F1C", Offset = "0xE27F1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1100004", Offset = "0x1100004", VA = "0x1100004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F2C", Offset = "0xE27F2C")]
		private set
		{
		}
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x10FD4C0", Offset = "0x10FD4C0", VA = "0x10FD4C0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x10FD5C8", Offset = "0x10FD5C8", VA = "0x10FD5C8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x110000C", Offset = "0x110000C", VA = "0x110000C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE27F3C", Offset = "0xE27F3C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x10FDC14", Offset = "0x10FDC14", VA = "0x10FDC14", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x10FDC80", Offset = "0x10FDC80", VA = "0x10FDC80", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x10FD5FC", Offset = "0x10FD5FC", VA = "0x10FD5FC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000023")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9A0", Offset = "0xE1E9A0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x1100660", Offset = "0x1100660", VA = "0x1100660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x11006C8", Offset = "0x11006C8", VA = "0x11006C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x110025C", Offset = "0x110025C", VA = "0x110025C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x11003F4", Offset = "0x11003F4", VA = "0x11003F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x11003F8", Offset = "0x11003F8", VA = "0x11003F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1100668", Offset = "0x1100668", VA = "0x1100668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FD40", Offset = "0xE1FD40")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40000C3")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x11000D4", Offset = "0x11000D4", VA = "0x11000D4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1100198", Offset = "0x1100198", VA = "0x1100198", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x11001C4", Offset = "0x11001C4", VA = "0x11001C4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x11001EC", Offset = "0x11001EC", VA = "0x11001EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE27F74", Offset = "0xE27F74")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1100288", Offset = "0x1100288", VA = "0x1100288", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60000F1")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x11002A4", Offset = "0x11002A4", VA = "0x11002A4", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x11003C8", Offset = "0x11003C8", VA = "0x11003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27FD8", Offset = "0xE27FD8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000024")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x11006D0", Offset = "0x11006D0", VA = "0x11006D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1100730", Offset = "0x1100730", VA = "0x1100730", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x11008B4", Offset = "0x11008B4", VA = "0x11008B4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x11009A4", Offset = "0x11009A4", VA = "0x11009A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xE27FE8", Offset = "0xE27FE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x11009A8", Offset = "0x11009A8", VA = "0x11009A8")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000025")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FD78", Offset = "0xE1FD78")]
	public float LOSOffset;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FDB0", Offset = "0xE1FDB0")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x11009B4", Offset = "0x11009B4", VA = "0x11009B4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1100BE4", Offset = "0x1100BE4", VA = "0x1100BE4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000026")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1100BF0", Offset = "0x1100BF0", VA = "0x1100BF0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1100D74", Offset = "0x1100D74", VA = "0x1100D74")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000027")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1100D78", Offset = "0x1100D78", VA = "0x1100D78", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1100E10", Offset = "0x1100E10", VA = "0x1100E10", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60000FF")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1100EA4", Offset = "0x1100EA4", VA = "0x1100EA4")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000028")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9B0", Offset = "0xE1E9B0")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x110120C", Offset = "0x110120C", VA = "0x110120C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x1101274", Offset = "0x1101274", VA = "0x1101274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1100F48", Offset = "0x1100F48", VA = "0x1100F48")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x110110C", Offset = "0x110110C", VA = "0x110110C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1101110", Offset = "0x1101110", VA = "0x1101110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1101214", Offset = "0x1101214", VA = "0x1101214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FDE8", Offset = "0xE1FDE8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1FDE8", Offset = "0xE1FDE8")]
	public float TransitionDuration;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FE40", Offset = "0xE1FE40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1FE40", Offset = "0xE1FE40")]
	public float TeleportDelay;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FE94", Offset = "0xE1FE94")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1100EAC", Offset = "0x1100EAC", VA = "0x1100EAC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1100ED8", Offset = "0x1100ED8", VA = "0x1100ED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28020", Offset = "0xE28020")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1100F74", Offset = "0x1100F74", VA = "0x1100F74")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000029")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000104")]
	[Address(RVA = "0x110127C", Offset = "0x110127C", VA = "0x110127C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1101298", Offset = "0x1101298", VA = "0x1101298")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200002A")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9C0", Offset = "0xE1E9C0")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x11014E4", Offset = "0x11014E4", VA = "0x11014E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x110154C", Offset = "0x110154C", VA = "0x110154C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x110133C", Offset = "0x110133C", VA = "0x110133C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x11013B0", Offset = "0x11013B0", VA = "0x11013B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x11013B4", Offset = "0x11013B4", VA = "0x11013B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x11014EC", Offset = "0x11014EC", VA = "0x11014EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE1FECC", Offset = "0xE1FECC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE1FECC", Offset = "0xE1FECC")]
	public float TransitionDuration;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x11012A0", Offset = "0x11012A0", VA = "0x11012A0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x11012CC", Offset = "0x11012CC", VA = "0x11012CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28084", Offset = "0xE28084")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1101368", Offset = "0x1101368", VA = "0x1101368")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200002B")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700000B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x112029C", Offset = "0x112029C", VA = "0x112029C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x1120558", Offset = "0x1120558", VA = "0x1120558")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x111E2BC", Offset = "0x111E2BC", VA = "0x111E2BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x111F52C", Offset = "0x111F52C", VA = "0x111F52C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000F")]
	public static long Duration
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x111F710", Offset = "0x111F710", VA = "0x111F710")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000010")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x111F61C", Offset = "0x111F61C", VA = "0x111F61C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x111ECA0", Offset = "0x111ECA0", VA = "0x111ECA0")]
		set
		{
		}
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x111FD70", Offset = "0x111FD70", VA = "0x111FD70")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x111FAB4", Offset = "0x111FAB4", VA = "0x111FAB4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x111E930", Offset = "0x111E930", VA = "0x111E930")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x111EAB4", Offset = "0x111EAB4", VA = "0x111EAB4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x111F8DC", Offset = "0x111F8DC", VA = "0x111F8DC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x111FF64", Offset = "0x111FF64", VA = "0x111FF64")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x111F370", Offset = "0x111F370", VA = "0x111F370")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200002C")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x12F9538", Offset = "0x12F9538", VA = "0x12F9538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE280E8", Offset = "0xE280E8")]
		add
		{
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x12F95DC", Offset = "0x12F95DC", VA = "0x12F95DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE280F8", Offset = "0xE280F8")]
		remove
		{
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x12F9680", Offset = "0x12F9680", VA = "0x12F9680", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x12F9694", Offset = "0x12F9694", VA = "0x12F9694")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200002D")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200039C")]
	public enum ButtonType
	{
		[Token(Token = "0x4000E24")]
		Play,
		[Token(Token = "0x4000E25")]
		Pause,
		[Token(Token = "0x4000E26")]
		FastForward,
		[Token(Token = "0x4000E27")]
		Rewind,
		[Token(Token = "0x4000E28")]
		SkipForward,
		[Token(Token = "0x4000E29")]
		SkipBack,
		[Token(Token = "0x4000E2A")]
		Stop
	}

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000011")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x111C6C0", Offset = "0x111C6C0", VA = "0x111C6C0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x111C6C8", Offset = "0x111C6C8", VA = "0x111C6C8")]
		set
		{
		}
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x111C6EC", Offset = "0x111C6EC", VA = "0x111C6EC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x111DBB8", Offset = "0x111DBB8", VA = "0x111DBB8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200002E")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200039D")]
	public enum VideoShape
	{
		[Token(Token = "0x4000E2C")]
		_360,
		[Token(Token = "0x4000E2D")]
		_180,
		[Token(Token = "0x4000E2E")]
		Quad
	}

	[Token(Token = "0x200039E")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000E30")]
		Mono,
		[Token(Token = "0x4000E31")]
		TopBottom,
		[Token(Token = "0x4000E32")]
		LeftRight
	}

	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9D0", Offset = "0xE1E9D0")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x112022C", Offset = "0x112022C", VA = "0x112022C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x1120294", Offset = "0x1120294", VA = "0x1120294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x111E62C", Offset = "0x111E62C", VA = "0x111E62C")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x11200A8", Offset = "0x11200A8", VA = "0x11200A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x11200AC", Offset = "0x11200AC", VA = "0x11200AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1120234", Offset = "0x1120234", VA = "0x1120234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1E9E0", Offset = "0xE1E9E0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x111E894", Offset = "0x111E894", VA = "0x111E894")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x111FC9C", Offset = "0x111FC9C", VA = "0x111FC9C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1FF54", Offset = "0xE1FF54")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1FF64", Offset = "0xE1FF64")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1FF74", Offset = "0xE1FF74")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000012")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x111E070", Offset = "0x111E070", VA = "0x111E070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28108", Offset = "0xE28108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x111E078", Offset = "0x111E078", VA = "0x111E078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28118", Offset = "0xE28118")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public long Duration
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x111E084", Offset = "0x111E084", VA = "0x111E084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28128", Offset = "0xE28128")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x111E08C", Offset = "0x111E08C", VA = "0x111E08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28138", Offset = "0xE28138")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x111E094", Offset = "0x111E094", VA = "0x111E094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28148", Offset = "0xE28148")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x111E09C", Offset = "0x111E09C", VA = "0x111E09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28158", Offset = "0xE28158")]
		private set
		{
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x111E0A4", Offset = "0x111E0A4", VA = "0x111E0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x111E324", Offset = "0x111E324", VA = "0x111E324")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x111E38C", Offset = "0x111E38C", VA = "0x111E38C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x111E5BC", Offset = "0x111E5BC", VA = "0x111E5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28168", Offset = "0xE28168")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x111E658", Offset = "0x111E658", VA = "0x111E658")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x111E89C", Offset = "0x111E89C", VA = "0x111E89C")]
	public void Play()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x111EA24", Offset = "0x111EA24", VA = "0x111EA24")]
	public void Pause()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x111EBA8", Offset = "0x111EBA8", VA = "0x111EBA8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x111EDE0", Offset = "0x111EDE0", VA = "0x111EDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x111F804", Offset = "0x111F804", VA = "0x111F804")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x111FA24", Offset = "0x111FA24", VA = "0x111FA24")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x111FBA8", Offset = "0x111FBA8", VA = "0x111FBA8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x111FC8C", Offset = "0x111FC8C", VA = "0x111FC8C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200002F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xE1DCAC", Offset = "0xE1DCAC")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20003A1")]
	private enum CubeFace
	{
		[Token(Token = "0x4000E3A")]
		Right,
		[Token(Token = "0x4000E3B")]
		Left,
		[Token(Token = "0x4000E3C")]
		Top,
		[Token(Token = "0x4000E3D")]
		Bottom,
		[Token(Token = "0x4000E3E")]
		Front,
		[Token(Token = "0x4000E3F")]
		Back,
		[Token(Token = "0x4000E40")]
		COUNT
	}

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1ADCA18", Offset = "0x1ADCA18", VA = "0x1ADCA18")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1ADCB78", Offset = "0x1ADCB78", VA = "0x1ADCB78")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1ADCD34", Offset = "0x1ADCD34", VA = "0x1ADCD34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1ADD20C", Offset = "0x1ADD20C", VA = "0x1ADD20C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1ADD4E0", Offset = "0x1ADD4E0", VA = "0x1ADD4E0")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1ADE73C", Offset = "0x1ADE73C", VA = "0x1ADE73C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1ADE79C", Offset = "0x1ADE79C", VA = "0x1ADE79C")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1ADD860", Offset = "0x1ADD860", VA = "0x1ADD860")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1ADE884", Offset = "0x1ADE884", VA = "0x1ADE884")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1ADEA70", Offset = "0x1ADEA70", VA = "0x1ADEA70")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1ADDD18", Offset = "0x1ADDD18", VA = "0x1ADDD18")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1ADE040", Offset = "0x1ADE040", VA = "0x1ADE040")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1ADE398", Offset = "0x1ADE398", VA = "0x1ADE398")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1ADEC24", Offset = "0x1ADEC24", VA = "0x1ADEC24")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000030")]
public static class VectorUtil
{
	[Token(Token = "0x6000142")]
	[Address(RVA = "0x110D970", Offset = "0x110D970", VA = "0x110D970")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1DD30", Offset = "0xE1DD30")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20003A2")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000E42")]
		MouseXAndY,
		[Token(Token = "0x4000E43")]
		MouseX,
		[Token(Token = "0x4000E44")]
		MouseY
	}

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x111DD30", Offset = "0x111DD30", VA = "0x111DD30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x111DF90", Offset = "0x111DF90", VA = "0x111DF90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x111E050", Offset = "0x111E050", VA = "0x111E050")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000032")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20003A3")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000E46")]
		Uninitialized = -1,
		[Token(Token = "0x4000E47")]
		NotEnabled,
		[Token(Token = "0x4000E48")]
		Success,
		[Token(Token = "0x4000E49")]
		StreamError,
		[Token(Token = "0x4000E4A")]
		ProcessError,
		[Token(Token = "0x4000E4B")]
		MaxStatValue
	}

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1120BBC", Offset = "0x1120BBC", VA = "0x1120BBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1120DF0", Offset = "0x1120DF0", VA = "0x1120DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1120FF4", Offset = "0x1120FF4", VA = "0x1120FF4")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000033")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	private enum Parameters
	{
		[Token(Token = "0x4000E4D")]
		P_GAIN,
		[Token(Token = "0x4000E4E")]
		P_USEINVSQR,
		[Token(Token = "0x4000E4F")]
		P_NEAR,
		[Token(Token = "0x4000E50")]
		P_FAR,
		[Token(Token = "0x4000E51")]
		P_RADIUS,
		[Token(Token = "0x4000E52")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000E53")]
		P_AMBISTAT,
		[Token(Token = "0x4000E54")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000E55")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000E56")]
		P_SENDLEVEL,
		[Token(Token = "0x4000E57")]
		P_NUM
	}

	[Token(Token = "0x4000113")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000015")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1121240", Offset = "0x1121240", VA = "0x1121240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x1121248", Offset = "0x1121248", VA = "0x1121248")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float Gain
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x1121254", Offset = "0x1121254", VA = "0x1121254")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x112125C", Offset = "0x112125C", VA = "0x112125C")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x11212E0", Offset = "0x11212E0", VA = "0x11212E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x11212E8", Offset = "0x11212E8", VA = "0x11212E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public float Near
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x11212F4", Offset = "0x11212F4", VA = "0x11212F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x11212FC", Offset = "0x11212FC", VA = "0x11212FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float Far
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x1121384", Offset = "0x1121384", VA = "0x1121384")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x112138C", Offset = "0x112138C", VA = "0x112138C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x1121414", Offset = "0x1121414", VA = "0x1121414")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x112141C", Offset = "0x112141C", VA = "0x112141C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float ReverbSend
	{
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x11214A4", Offset = "0x11214A4", VA = "0x11214A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x11214AC", Offset = "0x11214AC", VA = "0x11214AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool EnableRfl
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x1121534", Offset = "0x1121534", VA = "0x1121534")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x112153C", Offset = "0x112153C", VA = "0x112153C")]
		set
		{
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1121068", Offset = "0x1121068", VA = "0x1121068")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE281DC", Offset = "0xE281DC")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1121160", Offset = "0x1121160", VA = "0x1121160")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1121548", Offset = "0x1121548", VA = "0x1121548")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x11216BC", Offset = "0x11216BC", VA = "0x11216BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x11216C0", Offset = "0x11216C0", VA = "0x11216C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x11215B4", Offset = "0x11215B4", VA = "0x11215B4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1121788", Offset = "0x1121788", VA = "0x1121788")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1121BE8", Offset = "0x1121BE8", VA = "0x1121BE8")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000162")]
	[Address(RVA = "0x11210E0", Offset = "0x11210E0", VA = "0x11210E0")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1121CB8", Offset = "0x1121CB8", VA = "0x1121CB8")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000034")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400011E")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000120")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1121CD8", Offset = "0x1121CD8", VA = "0x1121CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1121CE4", Offset = "0x1121CE4", VA = "0x1121CE4")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1121D9C", Offset = "0x1121D9C", VA = "0x1121D9C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1121D1C", Offset = "0x1121D1C", VA = "0x1121D1C")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1121E1C", Offset = "0x1121E1C", VA = "0x1121E1C")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000035")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20003A5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20003A6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000127")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700001D")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x1124898", Offset = "0x1124898", VA = "0x1124898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public string filePath
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x1124924", Offset = "0x1124924", VA = "0x1124924")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x112499C", Offset = "0x112499C", VA = "0x112499C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1124AE4", Offset = "0x1124AE4", VA = "0x1124AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1124AE8", Offset = "0x1124AE8", VA = "0x1124AE8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1125048", Offset = "0x1125048", VA = "0x1125048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x11253E0", Offset = "0x11253E0", VA = "0x11253E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x112553C", Offset = "0x112553C", VA = "0x112553C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1125C14", Offset = "0x1125C14", VA = "0x1125C14")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1125C50", Offset = "0x1125C50", VA = "0x1125C50")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x11272BC", Offset = "0x11272BC", VA = "0x11272BC")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1127194", Offset = "0x1127194", VA = "0x1127194")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1124E80", Offset = "0x1124E80", VA = "0x1124E80")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1124CB4", Offset = "0x1124CB4", VA = "0x1124CB4")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1127768", Offset = "0x1127768", VA = "0x1127768")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1127BA4", Offset = "0x1127BA4", VA = "0x1127BA4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000036")]
internal class ONSPPropagation
{
	[Token(Token = "0x20003A7")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000E5E")]
		Int8,
		[Token(Token = "0x4000E5F")]
		UInt8,
		[Token(Token = "0x4000E60")]
		Int16,
		[Token(Token = "0x4000E61")]
		UInt16,
		[Token(Token = "0x4000E62")]
		Int32,
		[Token(Token = "0x4000E63")]
		UInt32,
		[Token(Token = "0x4000E64")]
		Int64,
		[Token(Token = "0x4000E65")]
		UInt64,
		[Token(Token = "0x4000E66")]
		Float16,
		[Token(Token = "0x4000E67")]
		Float32,
		[Token(Token = "0x4000E68")]
		Float64
	}

	[Token(Token = "0x20003A8")]
	public class ClientType
	{
		[Token(Token = "0x4000E69")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000E6A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000E6B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000E6C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000E6D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000E6E")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000E6F")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000E70")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000E71")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000E72")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000E73")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000E74")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000E75")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000E76")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000E77")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x4000E78")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2021_1 = 15u;

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x11222D0", Offset = "0x11222D0", VA = "0x11222D0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20003A9")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000EF8")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000EF9")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000EFA")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000EFB")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000EFC")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000EFD")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000EFE")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000EFF")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F00")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F01")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F02")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F03")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000F04")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F05")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F06")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20003AA")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000E79")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000D1")]
		private IntPtr context
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x1122F40", Offset = "0x1122F40", VA = "0x1122F40")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1122FA4", Offset = "0x1122FA4", VA = "0x1122FA4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1123034", Offset = "0x1123034", VA = "0x1123034")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x11230C4", Offset = "0x11230C4", VA = "0x11230C4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x11230E8", Offset = "0x11230E8", VA = "0x11230E8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1123178", Offset = "0x1123178", VA = "0x1123178", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x112319C", Offset = "0x112319C", VA = "0x112319C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1123228", Offset = "0x1123228", VA = "0x1123228", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x112324C", Offset = "0x112324C", VA = "0x112324C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x11232CC", Offset = "0x11232CC", VA = "0x11232CC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x11232D4", Offset = "0x11232D4", VA = "0x11232D4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x11233F4", Offset = "0x11233F4", VA = "0x11233F4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x11234EC", Offset = "0x11234EC", VA = "0x11234EC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1123584", Offset = "0x1123584", VA = "0x1123584", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1123590", Offset = "0x1123590", VA = "0x1123590")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x11236BC", Offset = "0x11236BC", VA = "0x11236BC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x11236C8", Offset = "0x11236C8", VA = "0x11236C8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1123774", Offset = "0x1123774", VA = "0x1123774", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1123780", Offset = "0x1123780", VA = "0x1123780")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x112382C", Offset = "0x112382C", VA = "0x112382C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x1123838", Offset = "0x1123838", VA = "0x1123838")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x11238E4", Offset = "0x11238E4", VA = "0x11238E4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x11238F0", Offset = "0x11238F0", VA = "0x11238F0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x112397C", Offset = "0x112397C", VA = "0x112397C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x11239A0", Offset = "0x11239A0", VA = "0x11239A0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1123A20", Offset = "0x1123A20", VA = "0x1123A20", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1123A28", Offset = "0x1123A28", VA = "0x1123A28")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1123AD0", Offset = "0x1123AD0", VA = "0x1123AD0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1123ADC", Offset = "0x1123ADC", VA = "0x1123ADC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1123B84", Offset = "0x1123B84", VA = "0x1123B84", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1123B94", Offset = "0x1123B94", VA = "0x1123B94")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1123C24", Offset = "0x1123C24", VA = "0x1123C24", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x112227C", Offset = "0x112227C", VA = "0x112227C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E7B")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000D2")]
		private IntPtr context
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x1123C30", Offset = "0x1123C30", VA = "0x1123C30")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x11220C4", Offset = "0x11220C4", VA = "0x11220C4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1123C94", Offset = "0x1123C94", VA = "0x1123C94")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1123D24", Offset = "0x1123D24", VA = "0x1123D24", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1123D48", Offset = "0x1123D48", VA = "0x1123D48")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x1123DD8", Offset = "0x1123DD8", VA = "0x1123DD8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1123DFC", Offset = "0x1123DFC", VA = "0x1123DFC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1123E8C", Offset = "0x1123E8C", VA = "0x1123E8C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1123EB0", Offset = "0x1123EB0", VA = "0x1123EB0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1123F30", Offset = "0x1123F30", VA = "0x1123F30", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x1123F38", Offset = "0x1123F38", VA = "0x1123F38")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1124058", Offset = "0x1124058", VA = "0x1124058", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1124150", Offset = "0x1124150", VA = "0x1124150")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x11241E8", Offset = "0x11241E8", VA = "0x11241E8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x11241F4", Offset = "0x11241F4", VA = "0x11241F4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1124320", Offset = "0x1124320", VA = "0x1124320", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x112432C", Offset = "0x112432C", VA = "0x112432C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x11243D8", Offset = "0x11243D8", VA = "0x11243D8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x11243E4", Offset = "0x11243E4", VA = "0x11243E4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1124490", Offset = "0x1124490", VA = "0x1124490", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x112449C", Offset = "0x112449C", VA = "0x112449C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1124548", Offset = "0x1124548", VA = "0x1124548", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1124554", Offset = "0x1124554", VA = "0x1124554")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x11245E4", Offset = "0x11245E4", VA = "0x11245E4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x1124608", Offset = "0x1124608", VA = "0x1124608")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1124688", Offset = "0x1124688", VA = "0x1124688", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1124690", Offset = "0x1124690", VA = "0x1124690")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1124738", Offset = "0x1124738", VA = "0x1124738", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1124744", Offset = "0x1124744", VA = "0x1124744")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x11247EC", Offset = "0x11247EC", VA = "0x11247EC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x11247FC", Offset = "0x11247FC", VA = "0x11247FC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x112488C", Offset = "0x112488C", VA = "0x112488C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1122154", Offset = "0x1122154", VA = "0x1122154")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20003AC")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E7D")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000D3")]
		private IntPtr context
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x11222D8", Offset = "0x11222D8", VA = "0x11222D8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x11221A0", Offset = "0x11221A0", VA = "0x11221A0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x112233C", Offset = "0x112233C", VA = "0x112233C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x11223CC", Offset = "0x11223CC", VA = "0x11223CC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x11223F0", Offset = "0x11223F0", VA = "0x11223F0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1122480", Offset = "0x1122480", VA = "0x1122480", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x11224A4", Offset = "0x11224A4", VA = "0x11224A4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1122534", Offset = "0x1122534", VA = "0x1122534", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x1122558", Offset = "0x1122558", VA = "0x1122558")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x11225D8", Offset = "0x11225D8", VA = "0x11225D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x11225E0", Offset = "0x11225E0", VA = "0x11225E0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1122700", Offset = "0x1122700", VA = "0x1122700", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x11227F8", Offset = "0x11227F8", VA = "0x11227F8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1122890", Offset = "0x1122890", VA = "0x1122890", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x112289C", Offset = "0x112289C", VA = "0x112289C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x11229C8", Offset = "0x11229C8", VA = "0x11229C8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x11229D4", Offset = "0x11229D4", VA = "0x11229D4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1122A80", Offset = "0x1122A80", VA = "0x1122A80", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1122A8C", Offset = "0x1122A8C", VA = "0x1122A8C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1122B38", Offset = "0x1122B38", VA = "0x1122B38", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1122B44", Offset = "0x1122B44", VA = "0x1122B44")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1122BF0", Offset = "0x1122BF0", VA = "0x1122BF0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1122BFC", Offset = "0x1122BFC", VA = "0x1122BFC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1122C8C", Offset = "0x1122C8C", VA = "0x1122C8C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1122CB0", Offset = "0x1122CB0", VA = "0x1122CB0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1122D30", Offset = "0x1122D30", VA = "0x1122D30", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1122D38", Offset = "0x1122D38", VA = "0x1122D38")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1122DE0", Offset = "0x1122DE0", VA = "0x1122DE0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1122DEC", Offset = "0x1122DEC", VA = "0x1122DEC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1122E94", Offset = "0x1122E94", VA = "0x1122E94", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1122EA4", Offset = "0x1122EA4", VA = "0x1122EA4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1122F34", Offset = "0x1122F34", VA = "0x1122F34", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1122230", Offset = "0x1122230", VA = "0x1122230")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700001F")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1121E2C", Offset = "0x1121E2C", VA = "0x1121E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1121E9C", Offset = "0x1121E9C", VA = "0x1121E9C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x11222C8", Offset = "0x11222C8", VA = "0x11222C8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000037")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20003AD")]
	public enum Preset
	{
		[Token(Token = "0x4000E80")]
		Custom,
		[Token(Token = "0x4000E81")]
		AcousticTile,
		[Token(Token = "0x4000E82")]
		Brick,
		[Token(Token = "0x4000E83")]
		BrickPainted,
		[Token(Token = "0x4000E84")]
		Carpet,
		[Token(Token = "0x4000E85")]
		CarpetHeavy,
		[Token(Token = "0x4000E86")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000E87")]
		CeramicTile,
		[Token(Token = "0x4000E88")]
		Concrete,
		[Token(Token = "0x4000E89")]
		ConcreteRough,
		[Token(Token = "0x4000E8A")]
		ConcreteBlock,
		[Token(Token = "0x4000E8B")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000E8C")]
		Curtain,
		[Token(Token = "0x4000E8D")]
		Foliage,
		[Token(Token = "0x4000E8E")]
		Glass,
		[Token(Token = "0x4000E8F")]
		GlassHeavy,
		[Token(Token = "0x4000E90")]
		Grass,
		[Token(Token = "0x4000E91")]
		Gravel,
		[Token(Token = "0x4000E92")]
		GypsumBoard,
		[Token(Token = "0x4000E93")]
		PlasterOnBrick,
		[Token(Token = "0x4000E94")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000E95")]
		Soil,
		[Token(Token = "0x4000E96")]
		SoundProof,
		[Token(Token = "0x4000E97")]
		Snow,
		[Token(Token = "0x4000E98")]
		Steel,
		[Token(Token = "0x4000E99")]
		Water,
		[Token(Token = "0x4000E9A")]
		WoodThin,
		[Token(Token = "0x4000E9B")]
		WoodThick,
		[Token(Token = "0x4000E9C")]
		WoodFloor,
		[Token(Token = "0x4000E9D")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20003AE")]
	public sealed class Point
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1AD2BF0", Offset = "0x1AD2BF0", VA = "0x1AD2BF0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1AD2D38", Offset = "0x1AD2D38", VA = "0x1AD2D38")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1AD2DA8", Offset = "0x1AD2DA8", VA = "0x1AD2DA8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE1E9F0", Offset = "0xE1E9F0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F058", Offset = "0xE1F058")]
		private sealed class <>c
		{
			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x1AD3200", Offset = "0x1AD3200", VA = "0x1AD3200")]
			public <>c()
			{
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x1AD3208", Offset = "0x1AD3208", VA = "0x1AD3208")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x1AD3220", Offset = "0x1AD3220", VA = "0x1AD3220")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000D4")]
		public float Item
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x1AD2DE0", Offset = "0x1AD2DE0", VA = "0x1AD2DE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1AD2CC0", Offset = "0x1AD2CC0", VA = "0x1AD2CC0")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE20004", Offset = "0xE20004")]
	public Spectrum absorption;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2003C", Offset = "0xE2003C")]
	public Spectrum transmission;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE20074", Offset = "0xE20074")]
	public Spectrum scattering;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000020")]
	public Preset preset
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1ACAAD4", Offset = "0x1ACAAD4", VA = "0x1ACAAD4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x1ACAADC", Offset = "0x1ACAADC", VA = "0x1ACAADC")]
		set
		{
		}
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1ACAC98", Offset = "0x1ACAC98", VA = "0x1ACAC98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1ACAC9C", Offset = "0x1ACAC9C", VA = "0x1ACAC9C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1ACB3D0", Offset = "0x1ACB3D0", VA = "0x1ACB3D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1ACB3D4", Offset = "0x1ACB3D4", VA = "0x1ACB3D4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1ACAE0C", Offset = "0x1ACAE0C", VA = "0x1ACAE0C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1ACAB04", Offset = "0x1ACAB04", VA = "0x1ACAB04")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1ACB4BC", Offset = "0x1ACB4BC", VA = "0x1ACB4BC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1ACB91C", Offset = "0x1ACB91C", VA = "0x1ACB91C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1ACBD7C", Offset = "0x1ACBD7C", VA = "0x1ACBD7C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1ACC1DC", Offset = "0x1ACC1DC", VA = "0x1ACC1DC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1ACC63C", Offset = "0x1ACC63C", VA = "0x1ACC63C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1ACCA9C", Offset = "0x1ACCA9C", VA = "0x1ACCA9C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1ACCEFC", Offset = "0x1ACCEFC", VA = "0x1ACCEFC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1ACD35C", Offset = "0x1ACD35C", VA = "0x1ACD35C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1ACD7BC", Offset = "0x1ACD7BC", VA = "0x1ACD7BC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1ACDC1C", Offset = "0x1ACDC1C", VA = "0x1ACDC1C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1ACE07C", Offset = "0x1ACE07C", VA = "0x1ACE07C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1ACE4DC", Offset = "0x1ACE4DC", VA = "0x1ACE4DC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1ACE93C", Offset = "0x1ACE93C", VA = "0x1ACE93C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1ACED9C", Offset = "0x1ACED9C", VA = "0x1ACED9C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1ACF1F4", Offset = "0x1ACF1F4", VA = "0x1ACF1F4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1ACF654", Offset = "0x1ACF654", VA = "0x1ACF654")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1ACF990", Offset = "0x1ACF990", VA = "0x1ACF990")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1ACFCCC", Offset = "0x1ACFCCC", VA = "0x1ACFCCC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1AD012C", Offset = "0x1AD012C", VA = "0x1AD012C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1AD058C", Offset = "0x1AD058C", VA = "0x1AD058C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1AD09EC", Offset = "0x1AD09EC", VA = "0x1AD09EC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1AD0D28", Offset = "0x1AD0D28", VA = "0x1AD0D28")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1AD0E84", Offset = "0x1AD0E84", VA = "0x1AD0E84")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1AD11C0", Offset = "0x1AD11C0", VA = "0x1AD11C0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1AD1618", Offset = "0x1AD1618", VA = "0x1AD1618")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1AD1A78", Offset = "0x1AD1A78", VA = "0x1AD1A78")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1AD1ED0", Offset = "0x1AD1ED0", VA = "0x1AD1ED0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1AD2330", Offset = "0x1AD2330", VA = "0x1AD2330")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1AD2790", Offset = "0x1AD2790", VA = "0x1AD2790")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1AD2C28", Offset = "0x1AD2C28", VA = "0x1AD2C28")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000038")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1AD3238", Offset = "0x1AD3238", VA = "0x1AD3238")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1AD330C", Offset = "0x1AD330C", VA = "0x1AD330C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000039")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000021")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1AD38C8", Offset = "0x1AD38C8", VA = "0x1AD38C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1AD39DC", Offset = "0x1AD39DC", VA = "0x1AD39DC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200003A")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1AD39EC", Offset = "0x1AD39EC", VA = "0x1AD39EC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1AD3A84", Offset = "0x1AD3A84", VA = "0x1AD3A84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1AD3B90", Offset = "0x1AD3B90", VA = "0x1AD3B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1AD3B94", Offset = "0x1AD3B94", VA = "0x1AD3B94")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1AD3B98", Offset = "0x1AD3B98", VA = "0x1AD3B98")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200003B")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20003B0")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000141")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000147")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1251720", Offset = "0x1251720", VA = "0x1251720")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1251550", Offset = "0x1251550", VA = "0x1251550")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xE281F0", Offset = "0xE281F0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1251758", Offset = "0x1251758", VA = "0x1251758")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x125188C", Offset = "0x125188C", VA = "0x125188C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1251980", Offset = "0x1251980", VA = "0x1251980")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1252338", Offset = "0x1252338", VA = "0x1252338")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x12517F8", Offset = "0x12517F8", VA = "0x12517F8")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x12518F0", Offset = "0x12518F0", VA = "0x12518F0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x12520A0", Offset = "0x12520A0", VA = "0x12520A0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1252120", Offset = "0x1252120", VA = "0x1252120")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x12521A8", Offset = "0x12521A8", VA = "0x12521A8")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1252230", Offset = "0x1252230", VA = "0x1252230")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x12522B0", Offset = "0x12522B0", VA = "0x12522B0")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1253170", Offset = "0x1253170", VA = "0x1253170")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1253218", Offset = "0x1253218", VA = "0x1253218")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x12532C0", Offset = "0x12532C0", VA = "0x12532C0")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200003C")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200003D")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1AD331C", Offset = "0x1AD331C", VA = "0x1AD331C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1AD3320", Offset = "0x1AD3320", VA = "0x1AD3320")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1AD3324", Offset = "0x1AD3324", VA = "0x1AD3324")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1AD348C", Offset = "0x1AD348C", VA = "0x1AD348C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1AD3370", Offset = "0x1AD3370", VA = "0x1AD3370")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1AD3400", Offset = "0x1AD3400", VA = "0x1AD3400")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1AD34D8", Offset = "0x1AD34D8", VA = "0x1AD34D8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1AD3570", Offset = "0x1AD3570", VA = "0x1AD3570")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1AD36D8", Offset = "0x1AD36D8", VA = "0x1AD36D8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1AD3840", Offset = "0x1AD3840", VA = "0x1AD3840")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200003E")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x20003B1")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x400015D")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000163")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x124F2F0", Offset = "0x124F2F0", VA = "0x124F2F0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x124F328", Offset = "0x124F328", VA = "0x124F328")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x124F4F8", Offset = "0x124F4F8", VA = "0x124F4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x124F574", Offset = "0x124F574", VA = "0x124F574")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x124F668", Offset = "0x124F668", VA = "0x124F668")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x124FFC4", Offset = "0x124FFC4", VA = "0x124FFC4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x124F5D8", Offset = "0x124F5D8", VA = "0x124F5D8")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x124FD2C", Offset = "0x124FD2C", VA = "0x124FD2C")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x124FDAC", Offset = "0x124FDAC", VA = "0x124FDAC")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x124FE34", Offset = "0x124FE34", VA = "0x124FE34")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x124FEBC", Offset = "0x124FEBC", VA = "0x124FEBC")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x124FF3C", Offset = "0x124FF3C", VA = "0x124FF3C")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1250DFC", Offset = "0x1250DFC", VA = "0x1250DFC")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1250EA4", Offset = "0x1250EA4", VA = "0x1250EA4")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1250F4C", Offset = "0x1250F4C", VA = "0x1250F4C")]
	public OculusSpatializerFMOD()
	{
	}
}
[Token(Token = "0x200003F")]
public class ParticleBySize : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particle;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Multiplicator;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Maximum;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule _emission;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1255510", Offset = "0x1255510", VA = "0x1255510")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1255548", Offset = "0x1255548", VA = "0x1255548")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x125564C", Offset = "0x125564C", VA = "0x125564C")]
	public ParticleBySize()
	{
	}
}
[Token(Token = "0x2000040")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimOrigin;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxAngle;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x111B374", Offset = "0x111B374", VA = "0x111B374")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x111B57C", Offset = "0x111B57C", VA = "0x111B57C")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x2000041")]
public class AdaptHandMeshToPlayerClass : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x12F7474", Offset = "0x12F7474", VA = "0x12F7474")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x12F74CC", Offset = "0x12F74CC", VA = "0x12F74CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x12F763C", Offset = "0x12F763C", VA = "0x12F763C")]
	public AdaptHandMeshToPlayerClass()
	{
	}
}
[Token(Token = "0x2000042")]
public class AmmunitionAnimation : MonoBehaviour
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon Weapon;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator Animator;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x12F8230", Offset = "0x12F8230", VA = "0x12F8230")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x12F8308", Offset = "0x12F8308", VA = "0x12F8308")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x12F8490", Offset = "0x12F8490", VA = "0x12F8490")]
	private void OnShotFired(WeaponBullet bullet)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x12F8554", Offset = "0x12F8554", VA = "0x12F8554")]
	private void OnReload()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x12F85D8", Offset = "0x12F85D8", VA = "0x12F85D8")]
	public AmmunitionAnimation()
	{
	}
}
[Token(Token = "0x2000043")]
public class FMODListenerPosition : MonoBehaviour
{
	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x13094EC", Offset = "0x13094EC", VA = "0x13094EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1309594", Offset = "0x1309594", VA = "0x1309594")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x130963C", Offset = "0x130963C", VA = "0x130963C")]
	public FMODListenerPosition()
	{
	}
}
[Token(Token = "0x2000044")]
public class MainFMODListener : MonoBehaviour
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioListener listener;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainFMODListener instance;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x111B5E8", Offset = "0x111B5E8", VA = "0x111B5E8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x111B640", Offset = "0x111B640", VA = "0x111B640")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x111B6D0", Offset = "0x111B6D0", VA = "0x111B6D0")]
	public void Activate(bool val)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x111B6F0", Offset = "0x111B6F0", VA = "0x111B6F0")]
	public MainFMODListener()
	{
	}
}
[Token(Token = "0x2000045")]
public class Walkman : MonoBehaviour
{
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x110DFE0", Offset = "0x110DFE0", VA = "0x110DFE0")]
	public Walkman()
	{
	}
}
[Token(Token = "0x2000046")]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE200CC", Offset = "0xE200CC")]
	public Transform Model;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitHealth Health;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask layer;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20104", Offset = "0xE20104")]
	public float MaxDistance;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit hit;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x12F85E0", Offset = "0x12F85E0", VA = "0x12F85E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x12F86C4", Offset = "0x12F86C4", VA = "0x12F86C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x12F8898", Offset = "0x12F8898", VA = "0x12F8898")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x12F8914", Offset = "0x12F8914", VA = "0x12F8914")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x2000047")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x12F90DC", Offset = "0x12F90DC", VA = "0x12F90DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x12F91E8", Offset = "0x12F91E8", VA = "0x12F91E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x12F9264", Offset = "0x12F9264", VA = "0x12F9264")]
	public Bullet()
	{
	}
}
[Token(Token = "0x2000048")]
public class BulletLine : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer Line;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DelayPerMeter;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinLength;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDelay;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float delay;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startTime;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x12F9274", Offset = "0x12F9274", VA = "0x12F9274")]
	public void Start()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x12F9384", Offset = "0x12F9384", VA = "0x12F9384")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x12F9518", Offset = "0x12F9518", VA = "0x12F9518")]
	public BulletLine()
	{
	}
}
[Token(Token = "0x2000049")]
public class CampaignSettings : MonoBehaviour
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CampaignSettings Instance;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x12F969C", Offset = "0x12F969C", VA = "0x12F969C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x12F96F0", Offset = "0x12F96F0", VA = "0x12F96F0")]
	public CampaignSettings()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DD68", Offset = "0xE1DD68")]
public class DisplayData : SerializedScriptableObject
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE2013C", Offset = "0xE2013C")]
	public EnumValueData Settings;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2014C", Offset = "0xE2014C")]
	public List<List<WeaponElement>> Elements;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x12FE0F4", Offset = "0x12FE0F4", VA = "0x12FE0F4")]
	public DisplayData()
	{
	}
}
[Token(Token = "0x200004B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DDB4", Offset = "0xE1DDB4")]
public class HapticData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Length;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Frequency;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Amplitude;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BooleanValueData Settings;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x17000022")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x1116E88", Offset = "0x1116E88", VA = "0x1116E88", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1116E90", Offset = "0x1116E90", VA = "0x1116E90", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1116E98", Offset = "0x1116E98", VA = "0x1116E98", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1116EA0", Offset = "0x1116EA0", VA = "0x1116EA0", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1116EA8", Offset = "0x1116EA8", VA = "0x1116EA8", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1116EB0", Offset = "0x1116EB0", VA = "0x1116EB0", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1116EB8", Offset = "0x1116EB8", VA = "0x1116EB8", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1116EBC", Offset = "0x1116EBC", VA = "0x1116EBC")]
	public HapticData()
	{
	}
}
[Token(Token = "0x200004C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DE00", Offset = "0xE1DE00")]
public class MaterialData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x17000023")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x111C1C0", Offset = "0x111C1C0", VA = "0x111C1C0", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x111C1C8", Offset = "0x111C1C8", VA = "0x111C1C8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x111C1D0", Offset = "0x111C1D0", VA = "0x111C1D0", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x111C1D8", Offset = "0x111C1D8", VA = "0x111C1D8", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x111C1E0", Offset = "0x111C1E0", VA = "0x111C1E0", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x111C1E8", Offset = "0x111C1E8", VA = "0x111C1E8", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x111C280", Offset = "0x111C280", VA = "0x111C280", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x111C284", Offset = "0x111C284", VA = "0x111C284")]
	public MaterialData()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DE4C", Offset = "0xE1DE4C")]
public class ParticleData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x17000024")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1255660", Offset = "0x1255660", VA = "0x1255660", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1255668", Offset = "0x1255668", VA = "0x1255668", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1255670", Offset = "0x1255670", VA = "0x1255670", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1255678", Offset = "0x1255678", VA = "0x1255678", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1255694", Offset = "0x1255694", VA = "0x1255694", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x125569C", Offset = "0x125569C", VA = "0x125569C", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x12556A4", Offset = "0x12556A4", VA = "0x12556A4", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x12556AC", Offset = "0x12556AC", VA = "0x12556AC")]
	public ParticleData()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DE98", Offset = "0xE1DE98")]
public class PopupTextData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPopupText Prefab;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient Fade;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve Scale;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool Bounce;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Speed;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x17000025")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x103549C", Offset = "0x103549C", VA = "0x103549C", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x10354A4", Offset = "0x10354A4", VA = "0x10354A4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x10354AC", Offset = "0x10354AC", VA = "0x10354AC", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x10354B4", Offset = "0x10354B4", VA = "0x10354B4", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10354D0", Offset = "0x10354D0", VA = "0x10354D0", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x10354D8", Offset = "0x10354D8", VA = "0x10354D8", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10354E0", Offset = "0x10354E0", VA = "0x10354E0", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10354E8", Offset = "0x10354E8", VA = "0x10354E8")]
	public PopupTextData()
	{
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DED4", Offset = "0xE1DED4")]
public class SkyData : MaterialData
{
	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1038D84", Offset = "0x1038D84", VA = "0x1038D84")]
	public SkyData()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1DF20", Offset = "0xE1DF20")]
public class UIBackgroundData : ScriptableObject, IStatus, IValidation, IDatabase
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient Color;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite Image;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Duration;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public ContentStatus _status;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool FadeOutMusic;

	[Token(Token = "0x17000026")]
	public ContentStatus ContentStatus
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1105068", Offset = "0x1105068", VA = "0x1105068", Slot = "4")]
		get
		{
			return default(ContentStatus);
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1105070", Offset = "0x1105070", VA = "0x1105070", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1105078", Offset = "0x1105078", VA = "0x1105078", Slot = "6")]
	public string GetError(ValidationMode mode)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1105080", Offset = "0x1105080", VA = "0x1105080", Slot = "10")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1105088", Offset = "0x1105088", VA = "0x1105088", Slot = "7")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1105090", Offset = "0x1105090", VA = "0x1105090", Slot = "9")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1105124", Offset = "0x1105124", VA = "0x1105124", Slot = "8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1105128", Offset = "0x1105128", VA = "0x1105128")]
	public UIBackgroundData()
	{
	}
}
[Token(Token = "0x2000051")]
public class DebugLineStrength : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> Materials;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DefaultLineWidth;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DefaultMaxLineWidth;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x12FB668", Offset = "0x12FB668", VA = "0x12FB668")]
	public void Change(float strength)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x12FB7B8", Offset = "0x12FB7B8", VA = "0x12FB7B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x12FB8F4", Offset = "0x12FB8F4", VA = "0x12FB8F4")]
	public DebugLineStrength()
	{
	}
}
[Token(Token = "0x2000052")]
public class DebugShowFps : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text label;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fps;

	[Token(Token = "0x400019C")]
	private const float updateInterval = 0.5f;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastUpdate;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showMenu;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x12FB970", Offset = "0x12FB970", VA = "0x12FB970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x12FB9D4", Offset = "0x12FB9D4", VA = "0x12FB9D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x12FBB20", Offset = "0x12FBB20", VA = "0x12FBB20")]
	public DebugShowFps()
	{
	}
}
[Token(Token = "0x2000053")]
public class GameObjectSwitch : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Weapon usedWeapon;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool state;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float onTime;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offTime;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float duration;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x130C9A0", Offset = "0x130C9A0", VA = "0x130C9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x130C9A8", Offset = "0x130C9A8", VA = "0x130C9A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x130CA80", Offset = "0x130CA80", VA = "0x130CA80")]
	public GameObjectSwitch()
	{
	}
}
[Token(Token = "0x2000054")]
public class MiningBotAttack : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIBehaviourManager miningBotAI;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetBehaviourType patrolBehav;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetBehaviourType moveBehav;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DamageOnContact miningBotDamage;

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x111DC20", Offset = "0x111DC20", VA = "0x111DC20")]
	private void Start()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x111DC3C", Offset = "0x111DC3C", VA = "0x111DC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x111DD28", Offset = "0x111DD28", VA = "0x111DD28")]
	public MiningBotAttack()
	{
	}
}
[Token(Token = "0x2000055")]
public class SpiderWarningSphere : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Peacemaker.ExplosionAttack attack;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 idleSize;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 activatedSize;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blinkInterval;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x10FD124", Offset = "0x10FD124", VA = "0x10FD124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x10FD264", Offset = "0x10FD264", VA = "0x10FD264")]
	public SpiderWarningSphere()
	{
	}
}
[Token(Token = "0x2000056")]
public class StunEnemyOnHit : MonoBehaviour
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitHealthPart healthPart;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GEUnit unit;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hit;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float stunDuration;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x10FD2FC", Offset = "0x10FD2FC", VA = "0x10FD2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x10FD3B8", Offset = "0x10FD3B8", VA = "0x10FD3B8")]
	private void Hp_OnHealthLost(UnitHealthPart arg1, float arg2)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x10FD400", Offset = "0x10FD400", VA = "0x10FD400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x10FD488", Offset = "0x10FD488", VA = "0x10FD488")]
	public StunEnemyOnHit()
	{
	}
}
[Token(Token = "0x2000057")]
public class ShootingRangeSelection : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool currentlySelected;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectedPrefab;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x10374F0", Offset = "0x10374F0", VA = "0x10374F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x10374F4", Offset = "0x10374F4", VA = "0x10374F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1037500", Offset = "0x1037500", VA = "0x1037500")]
	public ShootingRangeSelection()
	{
	}
}
[Token(Token = "0x2000058")]
public class OnTeleportTriggeredEvent : GenericEventEmitter
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE201D4", Offset = "0xE201D4")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE201D4", Offset = "0xE201D4")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE201D4", Offset = "0xE201D4")]
	[InlineProperty]
	public List<IAction> Actions;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE20268", Offset = "0xE20268")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE20268", Offset = "0xE20268")]
	[InlineProperty]
	public List<ITriggerAction> TriggerActions;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE202D8", Offset = "0xE202D8")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE202D8", Offset = "0xE202D8")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE202D8", Offset = "0xE202D8")]
	[InlineProperty]
	public List<IUnitAction> EnemyActions;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnTeleportTriggeredEvent teleportDestination;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAngle;

	[Token(Token = "0x40001BA")]
	private const float minTriggerInterval = 0.25f;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastTeleportTrigger;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Player currentPlayer;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider currentCollider;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1253C98", Offset = "0x1253C98", VA = "0x1253C98", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1253CC8", Offset = "0x1253CC8", VA = "0x1253CC8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1253DD0", Offset = "0x1253DD0", VA = "0x1253DD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x12542EC", Offset = "0x12542EC", VA = "0x12542EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x125450C", Offset = "0x125450C", VA = "0x125450C")]
	public OnTeleportTriggeredEvent()
	{
	}
}
[Token(Token = "0x2000059")]
public class ConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Mesh;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MoveSize;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Force;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<Rigidbody> movableObjects;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rig;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x12FA0A8", Offset = "0x12FA0A8", VA = "0x12FA0A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x12FA16C", Offset = "0x12FA16C", VA = "0x12FA16C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x12FA230", Offset = "0x12FA230", VA = "0x12FA230")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x12FA538", Offset = "0x12FA538", VA = "0x12FA538")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x200005A")]
public class CraneTurning : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform crane;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float craneTurnSpeed;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float totalRotation;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool active;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool switchDirection;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool craneCorrected;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int cranePosition;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float correctionRotation;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x12FA5B4", Offset = "0x12FA5B4", VA = "0x12FA5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x12FA5B8", Offset = "0x12FA5B8", VA = "0x12FA5B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x12FAB8C", Offset = "0x12FAB8C", VA = "0x12FAB8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x12FABC0", Offset = "0x12FABC0", VA = "0x12FABC0")]
	private void CraneRotation()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x12FA6A0", Offset = "0x12FA6A0", VA = "0x12FA6A0")]
	private void CraneCorrection()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x12FAC0C", Offset = "0x12FAC0C", VA = "0x12FAC0C")]
	public CraneTurning()
	{
	}
}
[Token(Token = "0x200005B")]
public class HealingField : MonoBehaviour
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float healTick;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float healAmount;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1116EC4", Offset = "0x1116EC4", VA = "0x1116EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1116EC8", Offset = "0x1116EC8", VA = "0x1116EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1116ECC", Offset = "0x1116ECC", VA = "0x1116ECC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1116ED0", Offset = "0x1116ED0", VA = "0x1116ED0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1117080", Offset = "0x1117080", VA = "0x1117080")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1117248", Offset = "0x1117248", VA = "0x1117248")]
	public HealingField()
	{
	}
}
[Token(Token = "0x200005C")]
public class Laser : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA28", Offset = "0xE1EA28")]
	private sealed class <ReactivateLaser>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Laser <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x1117BE8", Offset = "0x1117BE8", VA = "0x1117BE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x1117C50", Offset = "0x1117C50", VA = "0x1117C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1117AEC", Offset = "0x1117AEC", VA = "0x1117AEC")]
		[DebuggerHidden]
		public <ReactivateLaser>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1117B20", Offset = "0x1117B20", VA = "0x1117B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1117B24", Offset = "0x1117B24", VA = "0x1117B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1117BF0", Offset = "0x1117BF0", VA = "0x1117BF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform laser;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float laserLength;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float laserReactivationTime;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float laserContactDamage;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightLaserBox;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float laserBoxPos;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LaserTrigger lt;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x11178EC", Offset = "0x11178EC", VA = "0x11178EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1117A20", Offset = "0x1117A20", VA = "0x1117A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1117980", Offset = "0x1117980", VA = "0x1117980")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28254", Offset = "0xE28254")]
	public void SetupLaser()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1117A7C", Offset = "0x1117A7C", VA = "0x1117A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2828C", Offset = "0xE2828C")]
	private IEnumerator ReactivateLaser()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1117B18", Offset = "0x1117B18", VA = "0x1117B18")]
	public Laser()
	{
	}
}
[Token(Token = "0x200005D")]
public class LaserTrigger : MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Laser laser;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool triggered;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject laserVisual;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x11184EC", Offset = "0x11184EC", VA = "0x11184EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x11184F0", Offset = "0x11184F0", VA = "0x11184F0")]
	private void LaserCheck()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x11185A8", Offset = "0x11185A8", VA = "0x11185A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x11185B4", Offset = "0x11185B4", VA = "0x11185B4")]
	public LaserTrigger()
	{
	}
}
[Token(Token = "0x200005E")]
public class PerfectAimTowardsPlayer : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon weapon;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion storedRotation;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1034B84", Offset = "0x1034B84", VA = "0x1034B84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1034C18", Offset = "0x1034C18", VA = "0x1034C18")]
	private void Weapon_OnShotFired(WeaponBullet weaponBullet)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1034D14", Offset = "0x1034D14", VA = "0x1034D14")]
	public PerfectAimTowardsPlayer()
	{
	}
}
[Token(Token = "0x200005F")]
public class PlayerFallToDeath : MonoBehaviour
{
	[Token(Token = "0x600025A")]
	[Address(RVA = "0x103548C", Offset = "0x103548C", VA = "0x103548C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1035490", Offset = "0x1035490", VA = "0x1035490")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1035494", Offset = "0x1035494", VA = "0x1035494")]
	public PlayerFallToDeath()
	{
	}
}
[Token(Token = "0x2000060")]
public class PressDamage : MonoBehaviour
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPosition;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DamageOnContact contactDamage;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2036C", Offset = "0xE2036C")]
	public float initialDamage;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE203A4", Offset = "0xE203A4")]
	public float multiplyFactor;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pressDistance;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float damageMultiplier;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pressDamage;

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1035660", Offset = "0x1035660", VA = "0x1035660")]
	private void Start()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1035704", Offset = "0x1035704", VA = "0x1035704")]
	private void Update()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1035840", Offset = "0x1035840", VA = "0x1035840")]
	public PressDamage()
	{
	}
}
[Token(Token = "0x2000061")]
public class PressMachine : GenericEventEmitter
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform Press;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve Movement;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve Damage;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float StuckMinHeight;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE203DC", Offset = "0xE203DC")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE203DC", Offset = "0xE203DC")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE203DC", Offset = "0xE203DC")]
	[InlineProperty]
	public List<IAction> PressDownActions;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE20470", Offset = "0xE20470")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE20470", Offset = "0xE20470")]
	[InlineProperty]
	public List<IAction> PressHitActions;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 defaultPosition;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _time;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _damage;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _height;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private IAttackable _attack;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float stuckHeight;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastHeight;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isGround;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1035850", Offset = "0x1035850", VA = "0x1035850")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1035890", Offset = "0x1035890", VA = "0x1035890")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1035A74", Offset = "0x1035A74", VA = "0x1035A74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1035C4C", Offset = "0x1035C4C", VA = "0x1035C4C")]
	public PressMachine()
	{
	}
}
[Token(Token = "0x2000062")]
public class RepeatedMovement : MonoBehaviour
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] movingObjects;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPoint;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distanceCheck;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x10362D0", Offset = "0x10362D0", VA = "0x10362D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1036464", Offset = "0x1036464", VA = "0x1036464")]
	public RepeatedMovement()
	{
	}
}
[Token(Token = "0x2000063")]
public class RoomConnectorSetup : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetRoomConnector roomConnectorInfo;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomConnector roomConnector;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnDoorLockedEvent clearRoomFirstInfoPrefab;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DoorHandling doorPrefab;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform doorParent;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DoorHandling door;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject debugVisualizer;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1036640", Offset = "0x1036640", VA = "0x1036640")]
	private void Start()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1036A34", Offset = "0x1036A34", VA = "0x1036A34")]
	private void RoomConnector_OnUpdateDoorModels(RoomConnector.Type type)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1036A5C", Offset = "0x1036A5C", VA = "0x1036A5C")]
	public RoomConnectorSetup()
	{
	}
}
[Token(Token = "0x2000064")]
public class RotateTowardsPlayer180Degrees : MonoBehaviour
{
	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1036A64", Offset = "0x1036A64", VA = "0x1036A64")]
	private void Update()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1036C5C", Offset = "0x1036C5C", VA = "0x1036C5C")]
	public RotateTowardsPlayer180Degrees()
	{
	}
}
[Token(Token = "0x2000065")]
public class PracticeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject practiceTarget;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject practiceTargetPrefab;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x10354FC", Offset = "0x10354FC", VA = "0x10354FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1035500", Offset = "0x1035500", VA = "0x1035500")]
	private void Update()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1035658", Offset = "0x1035658", VA = "0x1035658")]
	public PracticeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000066")]
public class ShootingRangeDistance : MonoBehaviour
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform shootingTarget;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currentDistance;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shootingTargetDistance;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToReach;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lerpTime;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x103735C", Offset = "0x103735C", VA = "0x103735C")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1037390", Offset = "0x1037390", VA = "0x1037390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x10374C0", Offset = "0x10374C0", VA = "0x10374C0")]
	public ShootingRangeDistance()
	{
	}
}
[Token(Token = "0x2000067")]
public class ShootingRangePanel : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootingRangeDistance shootingRange;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distanceValue;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x10374C8", Offset = "0x10374C8", VA = "0x10374C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x10374E8", Offset = "0x10374E8", VA = "0x10374E8")]
	public ShootingRangePanel()
	{
	}
}
[Token(Token = "0x2000068")]
public class SpawnWeapon : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA38", Offset = "0xE1EA38")]
	private sealed class <CreateNewWeapon>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnWeapon <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x103B218", Offset = "0x103B218", VA = "0x103B218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x103B280", Offset = "0x103B280", VA = "0x103B280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x103B03C", Offset = "0x103B03C", VA = "0x103B03C")]
		[DebuggerHidden]
		public <CreateNewWeapon>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x103B070", Offset = "0x103B070", VA = "0x103B070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x103B074", Offset = "0x103B074", VA = "0x103B074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x103B220", Offset = "0x103B220", VA = "0x103B220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject startWeapon;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weaponToSpawn;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnContainer;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPosition;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToSpawn;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool weaponTaken;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool weaponSpawned;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x103AD8C", Offset = "0x103AD8C", VA = "0x103AD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x103AEAC", Offset = "0x103AEAC", VA = "0x103AEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x103AFCC", Offset = "0x103AFCC", VA = "0x103AFCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE282F0", Offset = "0xE282F0")]
	private IEnumerator CreateNewWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x103B068", Offset = "0x103B068", VA = "0x103B068")]
	public SpawnWeapon()
	{
	}
}
[Token(Token = "0x2000069")]
public class TriggerLevelGeneration : MonoBehaviour
{
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA48", Offset = "0xE1EA48")]
	private sealed class <DoRunMultipleTestRuns>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerLevelGeneration <>4__this;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <firstDistrict>5__2;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AssetWorldProgression.DistrictProgression>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetWorldProgression.DistrictProgression <levelStructure>5__4;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <levelId>5__5;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<AssetLevel>.Enumerator <>7__wrap5;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <i>5__7;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x1102E14", Offset = "0x1102E14", VA = "0x1102E14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x1102E7C", Offset = "0x1102E7C", VA = "0x1102E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1102758", Offset = "0x1102758", VA = "0x1102758")]
		[DebuggerHidden]
		public <DoRunMultipleTestRuns>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x110279C", Offset = "0x110279C", VA = "0x110279C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x11028D0", Offset = "0x11028D0", VA = "0x11028D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1102878", Offset = "0x1102878", VA = "0x1102878")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1102820", Offset = "0x1102820", VA = "0x1102820")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1102E1C", Offset = "0x1102E1C", VA = "0x1102E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridBasedRoomGenerator Generator;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool multipleTestRuns;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE204E0", Offset = "0xE204E0")]
	public int testRunCountPerLevel;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool testTrigger;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int overwriteSeedInEditor;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE2051C", Offset = "0xE2051C")]
	public AssetDistrict district;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE20558", Offset = "0xE20558")]
	public int level;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1101E90", Offset = "0x1101E90", VA = "0x1101E90")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28354", Offset = "0xE28354")]
	public void TriggerViaButton()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1101F48", Offset = "0x1101F48", VA = "0x1101F48")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE2838C", Offset = "0xE2838C")]
	public void ShowCompleteLevel()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1101FA4", Offset = "0x1101FA4", VA = "0x1101FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1102044", Offset = "0x1102044", VA = "0x1102044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE283C4", Offset = "0xE283C4")]
	private IEnumerator DoRunMultipleTestRuns()
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x11020B4", Offset = "0x11020B4", VA = "0x11020B4")]
	private void Trigger()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1102784", Offset = "0x1102784", VA = "0x1102784")]
	public TriggerLevelGeneration()
	{
	}
}
[Token(Token = "0x200006A")]
public class GenerateBackgroundCity : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Count;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinRange;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxRange;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinSize;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MaxSize;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MinHeight;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxHeight;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float YOffset;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x130CA88", Offset = "0x130CA88", VA = "0x130CA88")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28428", Offset = "0xE28428")]
	public void Remove()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x130CB58", Offset = "0x130CB58", VA = "0x130CB58")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28438", Offset = "0xE28438")]
	public void Generate()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x130CD9C", Offset = "0x130CD9C", VA = "0x130CD9C")]
	public GenerateBackgroundCity()
	{
	}
}
[Token(Token = "0x200006B")]
public class Health : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Current;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Max;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE20594", Offset = "0xE20594")]
	public float LowHealth;

	[Token(Token = "0x14000011")]
	public event Action OnDamage
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x1117250", Offset = "0x1117250", VA = "0x1117250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28448", Offset = "0xE28448")]
		add
		{
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x11172F4", Offset = "0x11172F4", VA = "0x11172F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28458", Offset = "0xE28458")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnLowHealth
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1117398", Offset = "0x1117398", VA = "0x1117398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28468", Offset = "0xE28468")]
		add
		{
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x111743C", Offset = "0x111743C", VA = "0x111743C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28478", Offset = "0xE28478")]
		remove
		{
		}
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x11174E0", Offset = "0x11174E0", VA = "0x11174E0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28488", Offset = "0xE28488")]
	public void TakeDamage(float damage)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x11175C0", Offset = "0x11175C0", VA = "0x11175C0")]
	public Health()
	{
	}
}
[Token(Token = "0x200006C")]
public class HoloRoom : MonoBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1117874", Offset = "0x1117874", VA = "0x1117874")]
	public HoloRoom()
	{
	}
}
[Token(Token = "0x200006D")]
public class InitSteam : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject steamPrefab;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x111787C", Offset = "0x111787C", VA = "0x111787C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1117880", Offset = "0x1117880", VA = "0x1117880")]
	public InitSteam()
	{
	}
}
[Token(Token = "0x200006E")]
public class AdjustSlotPosition : MonoBehaviour
{
	[Token(Token = "0x6000289")]
	[Address(RVA = "0x12F8220", Offset = "0x12F8220", VA = "0x12F8220")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x12F8224", Offset = "0x12F8224", VA = "0x12F8224")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x12F8228", Offset = "0x12F8228", VA = "0x12F8228")]
	public AdjustSlotPosition()
	{
	}
}
[Token(Token = "0x200006F")]
public class HandleObjectInInventorySlot : MonoBehaviour
{
	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1116E78", Offset = "0x1116E78", VA = "0x1116E78")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1116E7C", Offset = "0x1116E7C", VA = "0x1116E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1116E80", Offset = "0x1116E80", VA = "0x1116E80")]
	public HandleObjectInInventorySlot()
	{
	}
}
[Token(Token = "0x2000070")]
public class LevelSettings : MonoBehaviour
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelSettings Instance;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SeedType SeedMode;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE205CC", Offset = "0xE205CC")]
	public int Seed;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseEditorSeed;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE20664", Offset = "0xE20664")]
	public int EditorSeed;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currSeed;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x11185BC", Offset = "0x11185BC", VA = "0x11185BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1118610", Offset = "0x1118610", VA = "0x1118610")]
	public void Reload(SeedType type)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1118640", Offset = "0x1118640", VA = "0x1118640")]
	public int CalculateCurrentDailySeed()
	{
		return default(int);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x111870C", Offset = "0x111870C", VA = "0x111870C")]
	public int GetSeed()
	{
		return default(int);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x11187E8", Offset = "0x11187E8", VA = "0x11187E8")]
	public string GetSeedDesc()
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x11188E8", Offset = "0x11188E8", VA = "0x11188E8")]
	public LevelSettings()
	{
	}
}
[Token(Token = "0x2000071")]
public class ManualReloadWeapon : SerializedMonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE206A0", Offset = "0xE206A0")]
	public Weapon Weapon;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PickableObject Pickable;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE206D8", Offset = "0xE206D8")]
	public Transform ReloadFrom;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE206E8", Offset = "0xE206E8")]
	public Transform ReloadTo;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE206F8", Offset = "0xE206F8")]
	public Transform MovablePart;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE20708", Offset = "0xE20708")]
	public Transform HoldPoint;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool Reload;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE20718", Offset = "0xE20718")]
	public float ReloadPrecision;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 offset;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE20730", Offset = "0xE20730")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE20730", Offset = "0xE20730")]
	[InlineProperty]
	public List<IAction> HalfLoadActions;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE207A0", Offset = "0xE207A0")]
	[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE207A0", Offset = "0xE207A0")]
	[InlineProperty]
	public List<IAction> FullLoadActions;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Animator ReloadAnimator;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PlayerHand hand;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform pivot;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float distance;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float distance2;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float distance3;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float distance4;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int step;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[ReadOnly]
	public float reloadPercentage;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x111B6F8", Offset = "0x111B6F8", VA = "0x111B6F8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x111B768", Offset = "0x111B768", VA = "0x111B768")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x111B93C", Offset = "0x111B93C", VA = "0x111B93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x111B988", Offset = "0x111B988", VA = "0x111B988")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x111BAAC", Offset = "0x111BAAC", VA = "0x111BAAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x111BF4C", Offset = "0x111BF4C", VA = "0x111BF4C")]
	public void OnPickUp(IPicking picking, IPickable pickable)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x111C068", Offset = "0x111C068", VA = "0x111C068")]
	public void OnRelease(IPicking picking, IPickable pickable)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x111C094", Offset = "0x111C094", VA = "0x111C094")]
	public void OnShotFired(WeaponBullet bullet)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x111C09C", Offset = "0x111C09C", VA = "0x111C09C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x111C124", Offset = "0x111C124", VA = "0x111C124")]
	public ManualReloadWeapon()
	{
	}
}
[Token(Token = "0x2000072")]
public class NoteLibrary : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NoteReader Prefab;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotation;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string key;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1120800", Offset = "0x1120800", VA = "0x1120800")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1120B5C", Offset = "0x1120B5C", VA = "0x1120B5C")]
	public NoteLibrary()
	{
	}
}
[Token(Token = "0x2000073")]
public class ScaleObject : MonoBehaviour
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartSize;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float EndSize;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LifeTime;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve Size;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DestroyOnFinish;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float duration;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1036C64", Offset = "0x1036C64", VA = "0x1036C64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1036E70", Offset = "0x1036E70", VA = "0x1036E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1036C90", Offset = "0x1036C90", VA = "0x1036C90")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28498", Offset = "0xE28498")]
	private void ResetSize()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1036CB8", Offset = "0x1036CB8", VA = "0x1036CB8")]
	private void RefreshSize()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1036E74", Offset = "0x1036E74", VA = "0x1036E74")]
	public ScaleObject()
	{
	}
}
[Token(Token = "0x2000074")]
public class SpawnObject : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Object;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x103AC6C", Offset = "0x103AC6C", VA = "0x103AC6C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE284A8", Offset = "0xE284A8")]
	public void Spawn()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x103AD84", Offset = "0x103AD84", VA = "0x103AD84")]
	public SpawnObject()
	{
	}
}
[Token(Token = "0x2000075")]
public class OutlineShader : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter Mesh;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer SkinnedMeshRenderer;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnly]
	public GameObject OutlineObject;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Type> componentFilter;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x12545D8", Offset = "0x12545D8", VA = "0x12545D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x12545DC", Offset = "0x12545DC", VA = "0x12545DC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE284B8", Offset = "0xE284B8")]
	private void GenerateOutline()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1254C18", Offset = "0x1254C18", VA = "0x1254C18")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE284C8", Offset = "0xE284C8")]
	private void RemoveOutline()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1255328", Offset = "0x1255328", VA = "0x1255328")]
	private void ReverseNormals(Mesh mesh)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1254C84", Offset = "0x1254C84", VA = "0x1254C84")]
	private void WeldVertices(Mesh mesh)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x12553D4", Offset = "0x12553D4", VA = "0x12553D4")]
	public OutlineShader()
	{
	}
}
[Token(Token = "0x2000076")]
public class Cheats : MonoBehaviour
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputLeft;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnitHealth unitHealth;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x12FA008", Offset = "0x12FA008", VA = "0x12FA008")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x12FA0A0", Offset = "0x12FA0A0", VA = "0x12FA0A0")]
	public Cheats()
	{
	}
}
[Token(Token = "0x2000077")]
public class DashVisualisation : MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20830", Offset = "0xE20830")]
	public DashMovement DashMovement;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Arrow;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Circle;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20868", Offset = "0xE20868")]
	public float PrefabSize;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int NumPrefabs;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve ArcCurve;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> objects;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 finalPosition;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 currPosition;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 nextPosition;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 forward;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float magnitude;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _progress;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _offset;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _pointer;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x12FAC1C", Offset = "0x12FAC1C", VA = "0x12FAC1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x12FAE04", Offset = "0x12FAE04", VA = "0x12FAE04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x12FB234", Offset = "0x12FB234", VA = "0x12FB234")]
	private void ShowArrows()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x12FB300", Offset = "0x12FB300", VA = "0x12FB300")]
	private void HideArrows()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x12FB2E0", Offset = "0x12FB2E0", VA = "0x12FB2E0")]
	private void ShowPointer()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x12FB3AC", Offset = "0x12FB3AC", VA = "0x12FB3AC")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x12FB3CC", Offset = "0x12FB3CC", VA = "0x12FB3CC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x12FB5E8", Offset = "0x12FB5E8", VA = "0x12FB5E8")]
	public DashVisualisation()
	{
	}
}
[Token(Token = "0x2000078")]
public class HandSlotPosition : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerHand playerHand;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1116750", Offset = "0x1116750", VA = "0x1116750")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x11167E4", Offset = "0x11167E4", VA = "0x11167E4")]
	private void PlayerHand_OnVisualModelUpdate(Transform obj)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1116874", Offset = "0x1116874", VA = "0x1116874")]
	public HandSlotPosition()
	{
	}
}
[Token(Token = "0x2000079")]
public class MagazineSpawn : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MagazineSpawn Instance;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform LeftSpawn;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform RightSpawn;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x111B58C", Offset = "0x111B58C", VA = "0x111B58C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x111B5E0", Offset = "0x111B5E0", VA = "0x111B5E0")]
	public MagazineSpawn()
	{
	}
}
[Token(Token = "0x200007A")]
public class PlayerDamageOnContact : DamageOnContact
{
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1035484", Offset = "0x1035484", VA = "0x1035484")]
	public PlayerDamageOnContact()
	{
	}
}
[Token(Token = "0x200007B")]
public class ShowDebugBodyInfo : MonoBehaviour
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ValueData debug;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform visualHandLeft;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform visualHandRight;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform devicePositionLeft;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform devicePositionRight;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer physicalBody;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform debugHandLeft;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform debugHandRight;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x10377D0", Offset = "0x10377D0", VA = "0x10377D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1037874", Offset = "0x1037874", VA = "0x1037874")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1037918", Offset = "0x1037918", VA = "0x1037918")]
	private void Instance_OnValueChanged(ValueData valueData, object val)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x10379EC", Offset = "0x10379EC", VA = "0x10379EC")]
	private void EnableDebugInfo(bool val)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1037B68", Offset = "0x1037B68", VA = "0x1037B68")]
	private void RemoveScripts(Transform t)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1037C10", Offset = "0x1037C10", VA = "0x1037C10")]
	public ShowDebugBodyInfo()
	{
	}
}
[Token(Token = "0x200007C")]
public class VisualizeDashPointerLine : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float prefabSize;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numPrefabs;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float progressOffset;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve arcCurve;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DashMovement dashMovement;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> objects;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _pointer;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x110DA04", Offset = "0x110DA04", VA = "0x110DA04")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x110DBD4", Offset = "0x110DBD4", VA = "0x110DBD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x110DF54", Offset = "0x110DF54", VA = "0x110DF54")]
	public VisualizeDashPointerLine()
	{
	}
}
[Token(Token = "0x200007D")]
public class PlayerClassUpgrades : MonoBehaviour
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> weapons;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> items;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> chips;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1034D1C", Offset = "0x1034D1C", VA = "0x1034D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x10353DC", Offset = "0x10353DC", VA = "0x10353DC")]
	public PlayerClassUpgrades()
	{
	}
}
[Token(Token = "0x200007E")]
public class EmptySpawnTestingTool : MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA58", Offset = "0xE1EA58")]
	private sealed class <DoStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmptySpawnTestingTool <>4__this;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i2>5__2;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AssetDistrict>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetDistrict <district>5__4;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__5;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x130947C", Offset = "0x130947C", VA = "0x130947C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x13094E4", Offset = "0x13094E4", VA = "0x13094E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1309080", Offset = "0x1309080", VA = "0x1309080")]
		[DebuggerHidden]
		public <DoStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x130914C", Offset = "0x130914C", VA = "0x130914C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x13091C0", Offset = "0x13091C0", VA = "0x13091C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1309168", Offset = "0x1309168", VA = "0x1309168")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1309484", Offset = "0x1309484", VA = "0x1309484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AssetDistrict> districts;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BoxContent> spawns;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numIterations;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1308FE4", Offset = "0x1308FE4", VA = "0x1308FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1309010", Offset = "0x1309010", VA = "0x1309010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE284D8", Offset = "0xE284D8")]
	private IEnumerator DoStart()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x13090AC", Offset = "0x13090AC", VA = "0x13090AC")]
	public EmptySpawnTestingTool()
	{
	}
}
[Token(Token = "0x200007F")]
public class ReplaceGameObject : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> replacements;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x103646C", Offset = "0x103646C", VA = "0x103646C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x10365D0", Offset = "0x10365D0", VA = "0x10365D0")]
	public ReplaceGameObject()
	{
	}
}
[Token(Token = "0x2000080")]
public class RandomNote : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NoteReader NoteReader;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LoreNoteData> sortedLoreNotes;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<LoreNoteData> loreNotes;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1035CE8", Offset = "0x1035CE8", VA = "0x1035CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1035F68", Offset = "0x1035F68", VA = "0x1035F68")]
	public RandomNote()
	{
	}
}
[Token(Token = "0x2000081")]
public class ReloadWeapon : MonoBehaviour
{
	[Token(Token = "0x20003B6")]
	public enum ReloadType
	{
		[Token(Token = "0x4000EB9")]
		UpOrDown,
		[Token(Token = "0x4000EBA")]
		Up,
		[Token(Token = "0x4000EBB")]
		Down,
		[Token(Token = "0x4000EBC")]
		UpAndDown,
		[Token(Token = "0x4000EBD")]
		DownAndUp
	}

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon Weapon;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PickableObject Pickable;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Range;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE208A0", Offset = "0xE208A0")]
	public float SecondRange;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReloadType ReloadMode;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool reloadReady;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool valid;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int step;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1035FD8", Offset = "0x1035FD8", VA = "0x1035FD8")]
	private bool HasSecondRange()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1035FEC", Offset = "0x1035FEC", VA = "0x1035FEC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x103605C", Offset = "0x103605C", VA = "0x103605C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x10362C0", Offset = "0x10362C0", VA = "0x10362C0")]
	public ReloadWeapon()
	{
	}
}
[Token(Token = "0x2000082")]
public class ShowCanvasGroupOnPlayerDistance : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup Target;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinDistance;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeSpeed;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetAlpha;

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1037508", Offset = "0x1037508", VA = "0x1037508")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1037558", Offset = "0x1037558", VA = "0x1037558")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x10375B0", Offset = "0x10375B0", VA = "0x10375B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x10377B4", Offset = "0x10377B4", VA = "0x10377B4")]
	public ShowCanvasGroupOnPlayerDistance()
	{
	}
}
[Token(Token = "0x2000083")]
public class ShowOnPlayerDistance : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MinDistance;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScaleSpeed;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float destScale;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1037C18", Offset = "0x1037C18", VA = "0x1037C18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1037CBC", Offset = "0x1037CBC", VA = "0x1037CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1037F14", Offset = "0x1037F14", VA = "0x1037F14")]
	public ShowOnPlayerDistance()
	{
	}
}
[Token(Token = "0x2000084")]
public class SolidifyMesh : MonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wallThicknessDivide;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tileSize;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Vector3, List<Vector3>> normalsDict;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelBuilder levelBuilder;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TilesetData wall;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TilesetData platform;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1038F18", Offset = "0x1038F18", VA = "0x1038F18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x103AC58", Offset = "0x103AC58", VA = "0x103AC58")]
	public SolidifyMesh()
	{
	}
}
[Token(Token = "0x2000085")]
public class Speedlines : MonoBehaviour
{
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA68", Offset = "0xE1EA68")]
	private sealed class <DoHide>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Speedlines <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x103B4BC", Offset = "0x103B4BC", VA = "0x103B4BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x103B524", Offset = "0x103B524", VA = "0x103B524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x103B3AC", Offset = "0x103B3AC", VA = "0x103B3AC")]
		[DebuggerHidden]
		public <DoHide>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x103B3E8", Offset = "0x103B3E8", VA = "0x103B3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x103B3EC", Offset = "0x103B3EC", VA = "0x103B3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x103B4C4", Offset = "0x103B4C4", VA = "0x103B4C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particles;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HideTime;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x103B288", Offset = "0x103B288", VA = "0x103B288")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x103B2D0", Offset = "0x103B2D0", VA = "0x103B2D0")]
	public void Show()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x103B28C", Offset = "0x103B28C", VA = "0x103B28C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x103B33C", Offset = "0x103B33C", VA = "0x103B33C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2853C", Offset = "0xE2853C")]
	private IEnumerator DoHide()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x103B3D8", Offset = "0x103B3D8", VA = "0x103B3D8")]
	public Speedlines()
	{
	}
}
[Token(Token = "0x2000086")]
public class SpiderJoint : MonoBehaviour
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startOffset;

	[Token(Token = "0x17000027")]
	public Vector3 Axis
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x10FC1E0", Offset = "0x10FC1E0", VA = "0x10FC1E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x10FC204", Offset = "0x10FC204", VA = "0x10FC204")]
	public SpiderJoint()
	{
	}
}
[Token(Token = "0x2000087")]
public class SpiderLeg : MonoBehaviour
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform a;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform midPoint;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform b;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform endPoint;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetEndPoint;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float legSmoothing;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float legSpeed;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RagdollBoneLink ragdollBoneLink;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lerpedEndPoint;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion lerpedEndRotation;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lerpedVelocity;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion deriv;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform helperVisualizer;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	public float angle;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[ReadOnly]
	public float endLength;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public float legLength;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float offsetY;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool setLength;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform hip;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isLifted;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool isReversed;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float reverseSpeed;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float isReversedVal;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 movementDirection;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool firstUpdate;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 cross;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x10FC20C", Offset = "0x10FC20C", VA = "0x10FC20C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x10FC328", Offset = "0x10FC328", VA = "0x10FC328")]
	internal bool IsOnItsFeet()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x10FC33C", Offset = "0x10FC33C", VA = "0x10FC33C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x10FC450", Offset = "0x10FC450", VA = "0x10FC450")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x10FC528", Offset = "0x10FC528", VA = "0x10FC528")]
	private void RagdollBoneLink_OnRagdollEnable(bool val, Vector3 force)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x10FC538", Offset = "0x10FC538", VA = "0x10FC538")]
	public Vector3 UpdateLeg()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x10FCF14", Offset = "0x10FCF14", VA = "0x10FCF14")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x10FD0F4", Offset = "0x10FD0F4", VA = "0x10FD0F4")]
	public SpiderLeg()
	{
	}
}
[Token(Token = "0x2000088")]
public class TestDoor : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneId;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneData Scene;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI Text;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1101554", Offset = "0x1101554", VA = "0x1101554")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1101650", Offset = "0x1101650", VA = "0x1101650")]
	public TestDoor()
	{
	}
}
[Token(Token = "0x2000089")]
public class TestRooms : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2090C", Offset = "0xE2090C")]
	public List<SceneData> SpecificRooms;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform BuildWall;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SpecificWall;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TestDoor Door;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 DoorOffset;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _cnt;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1101658", Offset = "0x1101658", VA = "0x1101658")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x110191C", Offset = "0x110191C", VA = "0x110191C")]
	public TestRooms()
	{
	}
}
[Token(Token = "0x200008A")]
public class TriggerFinger : SerializedMonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B8")]
	public class JoinInfo
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Joint;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Angle;

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1101E88", Offset = "0x1101E88", VA = "0x1101E88")]
		public JoinInfo()
		{
		}
	}

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AssetVRInputDeviceGroup InputDevice;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerHand PlayerHand;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE20944", Offset = "0xE20944")]
	public List<JoinInfo> Joints;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1101B68", Offset = "0x1101B68", VA = "0x1101B68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1101E18", Offset = "0x1101E18", VA = "0x1101E18")]
	public TriggerFinger()
	{
	}
}
[Token(Token = "0x200008B")]
public class TunnelMan : SerializedMonoBehaviour
{
	[Token(Token = "0x20003B9")]
	public class TunnelInfo
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntegerValueData Progress;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE270F4", Offset = "0xE270F4")]
		public List<GameObject> Objects;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x1103424", Offset = "0x1103424", VA = "0x1103424")]
		public TunnelInfo()
		{
		}
	}

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE20978", Offset = "0xE20978")]
	public Dictionary<AssetDistrict, TunnelInfo> Stages;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _valid;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _progress;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _complete;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _lastComplete;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1102E84", Offset = "0x1102E84", VA = "0x1102E84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x11033B4", Offset = "0x11033B4", VA = "0x11033B4")]
	public TunnelMan()
	{
	}
}
[Token(Token = "0x200008C")]
public class LoadNextLevelOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x11188F0", Offset = "0x11188F0", VA = "0x11188F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1118A1C", Offset = "0x1118A1C", VA = "0x1118A1C")]
	public LoadNextLevelOnTriggerEnter()
	{
	}
}
[Token(Token = "0x200008D")]
public class TutorialPointInventoryStore : TutorialPoint
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PickableObject pickableObject;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool hasBeenPickedUp;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1103494", Offset = "0x1103494", VA = "0x1103494")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1103528", Offset = "0x1103528", VA = "0x1103528")]
	private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1103650", Offset = "0x1103650", VA = "0x1103650", Slot = "5")]
	public override bool Finished()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1103658", Offset = "0x1103658", VA = "0x1103658")]
	public TutorialPointInventoryStore()
	{
	}
}
[Token(Token = "0x200008E")]
public class TutorialPointPlayerAction : TutorialPoint
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool finishOnRotation;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool finishOnMovement;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool finishOnDragMovement;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool finishOnVisor;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DashMovement dashMovement;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minDistanceCovered;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AssetVRInputDeviceGroup inputLeft;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AssetVRInputDeviceGroup inputRight;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string dragMovementText;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text label;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string initialText;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float distanceCovered;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float startDistanceCovered;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool hasFinished;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1103660", Offset = "0x1103660", VA = "0x1103660")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x11038A0", Offset = "0x11038A0", VA = "0x11038A0")]
	private void DashMovement_OnDashStart()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x11038EC", Offset = "0x11038EC", VA = "0x11038EC")]
	private void Visor_OnVisorChanged(bool obj)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1103984", Offset = "0x1103984", VA = "0x1103984")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1103A00", Offset = "0x1103A00", VA = "0x1103A00")]
	private void Movement_OnMove(Vector3 deltaMovement)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1103C14", Offset = "0x1103C14", VA = "0x1103C14", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1103D0C", Offset = "0x1103D0C", VA = "0x1103D0C")]
	private void Movement_OnRotatePlayer()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x11038A4", Offset = "0x11038A4", VA = "0x11038A4")]
	private void SetFinished()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1103D10", Offset = "0x1103D10", VA = "0x1103D10", Slot = "5")]
	public override bool Finished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1103D18", Offset = "0x1103D18", VA = "0x1103D18")]
	public TutorialPointPlayerAction()
	{
	}
}
[Token(Token = "0x200008F")]
public class BuildInfo : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset VersionInfo;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset DateInfo;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Version;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Date;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x12F8FD8", Offset = "0x12F8FD8", VA = "0x12F8FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x12F90D4", Offset = "0x12F90D4", VA = "0x12F90D4")]
	public BuildInfo()
	{
	}
}
[Token(Token = "0x2000090")]
public class DisabledBaseInput : BaseInput
{
	[Token(Token = "0x6000306")]
	[Address(RVA = "0x12FE0D4", Offset = "0x12FE0D4", VA = "0x12FE0D4", Slot = "23")]
	public override bool GetMouseButtonDown(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x12FE0DC", Offset = "0x12FE0DC", VA = "0x12FE0DC", Slot = "24")]
	public override bool GetMouseButtonUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x12FE0E4", Offset = "0x12FE0E4", VA = "0x12FE0E4", Slot = "25")]
	public override bool GetMouseButton(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x12FE0EC", Offset = "0x12FE0EC", VA = "0x12FE0EC")]
	public DisabledBaseInput()
	{
	}
}
[Token(Token = "0x2000091")]
public class HandgunDisplay : MonoBehaviour
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE209AC", Offset = "0xE209AC")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE209AC", Offset = "0xE209AC")]
	public Weapon Weapon;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ReloadBar;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _proc;

	[Token(Token = "0x40002E0")]
	private const bool showHandgunDisplay = false;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1116A10", Offset = "0x1116A10", VA = "0x1116A10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1116A38", Offset = "0x1116A38", VA = "0x1116A38")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1116E70", Offset = "0x1116E70", VA = "0x1116E70")]
	public HandgunDisplay()
	{
	}
}
[Token(Token = "0x2000092")]
public class HealthPosition : SlotPosition
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CanvasGroup Canvas;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIStatusbarMesh Statusbar;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve MoveOut;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve FadeOut;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 defaultOffset;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _alpha;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x11175DC", Offset = "0x11175DC", VA = "0x11175DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11175F0", Offset = "0x11175F0", VA = "0x11175F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x111786C", Offset = "0x111786C", VA = "0x111786C")]
	public HealthPosition()
	{
	}
}
[Token(Token = "0x2000093")]
public class ScreenInfo : MonoBehaviour
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset versionNumber;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetWorldProgression World;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildTagData SetSeedTag;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode keyCode;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1036E98", Offset = "0x1036E98", VA = "0x1036E98")]
	public ScreenInfo()
	{
	}
}
[Token(Token = "0x2000094")]
public class SeedInfo : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DistrictValueData DistrictData;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntegerValueData LevelData;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntegerValueData UserData;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Level;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Room;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Seed;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text UserID;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1037010", Offset = "0x1037010", VA = "0x1037010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1037294", Offset = "0x1037294", VA = "0x1037294")]
	private string GetCurrentRoom()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1037354", Offset = "0x1037354", VA = "0x1037354")]
	public SeedInfo()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1DF6C", Offset = "0xE1DF6C")]
public class TextIntValue : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntegerValueData Value;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Add;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocalisationText loc;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI text;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x110198C", Offset = "0x110198C", VA = "0x110198C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1101B5C", Offset = "0x1101B5C", VA = "0x1101B5C")]
	private void OnTranslated()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1101AB0", Offset = "0x1101AB0", VA = "0x1101AB0")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1101B60", Offset = "0x1101B60", VA = "0x1101B60")]
	public TextIntValue()
	{
	}
}
[Token(Token = "0x2000096")]
public class UIAggroMesh : MonoBehaviour
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE209F8", Offset = "0xE209F8")]
	public MeshFilter MeshFilter;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20A30", Offset = "0xE20A30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE20A30", Offset = "0xE20A30")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20A30", Offset = "0xE20A30")]
	public float StatusValue;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20AAC", Offset = "0xE20AAC")]
	public Gradient ForegroundColor;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color BackgroundColor;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color BorderColor;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 TopLeftOffset;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 TopRighttOffset;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20AE4", Offset = "0xE20AE4")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20AE4", Offset = "0xE20AE4")]
	public float LineSize;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20B48", Offset = "0xE20B48")]
	public float Gap;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20B84", Offset = "0xE20B84")]
	public Vector2 Size;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE20BC0", Offset = "0xE20BC0")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20BC0", Offset = "0xE20BC0")]
	public float Depth;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<int> triangles;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Color> colors;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int complexity;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> dynVertices;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color _foregroundColor;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1103D78", Offset = "0x1103D78", VA = "0x1103D78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1104240", Offset = "0x1104240", VA = "0x1104240")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1104248", Offset = "0x1104248", VA = "0x1104248")]
	public void Change()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1103D7C", Offset = "0x1103D7C", VA = "0x1103D7C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE285A0", Offset = "0xE285A0")]
	public void Generate()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1104560", Offset = "0x1104560", VA = "0x1104560")]
	private void GeneradeQuad(Color color, Vector2 size, float offset, float padding, Vector2 topLeft, Vector2 topRight, float z = 0f)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1104864", Offset = "0x1104864", VA = "0x1104864")]
	public UIAggroMesh()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1DF80", Offset = "0xE1DF80")]
public class UIAmmo : WeaponElement
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20C18", Offset = "0xE20C18")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20C50", Offset = "0xE20C50")]
	public Gradient NumberColor;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LString ReloadTip;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ReloadTipCount;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Weapon weapon;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ShootWeapon shootWeapon;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform rectWeapon;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _ammo;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x11049B8", Offset = "0x11049B8", VA = "0x11049B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x11049E8", Offset = "0x11049E8", VA = "0x11049E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1104B54", Offset = "0x1104B54", VA = "0x1104B54")]
	public UIAmmo()
	{
	}
}
[Token(Token = "0x2000098")]
public class UIBackground : SerializedMonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIBackground Instance;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Background;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GenericFloatEvent> OnBackgroundIntensityChanged;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<UIBackgroundData> objects;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentVal;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTime;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastVal;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1104B74", Offset = "0x1104B74", VA = "0x1104B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1104BC8", Offset = "0x1104BC8", VA = "0x1104BC8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1104C58", Offset = "0x1104C58", VA = "0x1104C58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1104E5C", Offset = "0x1104E5C", VA = "0x1104E5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1104C5C", Offset = "0x1104C5C", VA = "0x1104C5C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1104E60", Offset = "0x1104E60", VA = "0x1104E60")]
	public void Show(UIBackgroundData mat, bool interrupt = false)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1104F30", Offset = "0x1104F30", VA = "0x1104F30")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1104F88", Offset = "0x1104F88", VA = "0x1104F88")]
	public void Hide(UIBackgroundData mat)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1104FF0", Offset = "0x1104FF0", VA = "0x1104FF0")]
	public UIBackground()
	{
	}
}
[Token(Token = "0x2000099")]
public class UIBillboard : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Size;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1105138", Offset = "0x1105138", VA = "0x1105138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x11054E8", Offset = "0x11054E8", VA = "0x11054E8")]
	public UIBillboard()
	{
	}
}
[Token(Token = "0x200009A")]
public class UIDamage : SerializedMonoBehaviour
{
	[Token(Token = "0x20003BA")]
	public enum Direction
	{
		[Token(Token = "0x4000EC6")]
		Left,
		[Token(Token = "0x4000EC7")]
		Right,
		[Token(Token = "0x4000EC8")]
		Front,
		[Token(Token = "0x4000EC9")]
		Behind
	}

	[Token(Token = "0x20003BB")]
	public class DamageInfo
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Direction Mode;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Sprite;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public float Time;

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x11058FC", Offset = "0x11058FC", VA = "0x11058FC")]
		public DamageInfo()
		{
		}
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA78", Offset = "0xE1EA78")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Direction mode;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1105848", Offset = "0x1105848", VA = "0x1105848")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x11058D8", Offset = "0x11058D8", VA = "0x11058D8")]
		internal bool <Show>b__0(DamageInfo it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIDamage Instance;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20C88", Offset = "0xE20C88")]
	[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE20C88", Offset = "0xE20C88")]
	public List<DamageInfo> DamageInfos;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20CE4", Offset = "0xE20CE4")]
	public Color Color;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Duration;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x11054FC", Offset = "0x11054FC", VA = "0x11054FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1105550", Offset = "0x1105550", VA = "0x1105550")]
	private void Update()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1105770", Offset = "0x1105770", VA = "0x1105770")]
	public void Show(Direction mode)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1105850", Offset = "0x1105850", VA = "0x1105850")]
	public UIDamage()
	{
	}
}
[Token(Token = "0x200009B")]
public class UIDebugLog : MonoBehaviour
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Container;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Log;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x110590C", Offset = "0x110590C", VA = "0x110590C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1105A50", Offset = "0x1105A50", VA = "0x1105A50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1105B94", Offset = "0x1105B94", VA = "0x1105B94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1105C3C", Offset = "0x1105C3C", VA = "0x1105C3C")]
	private void MessageLog(string log)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1105C78", Offset = "0x1105C78", VA = "0x1105C78")]
	public UIDebugLog()
	{
	}
}
[Token(Token = "0x200009C")]
public class UIHealth : WeaponElement
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeTime;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Gradient NumberColor;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color Positive;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Negative;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lasthealth;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastChange;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float progress;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1105C80", Offset = "0x1105C80", VA = "0x1105C80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1105D98", Offset = "0x1105D98", VA = "0x1105D98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1106078", Offset = "0x1106078", VA = "0x1106078")]
	public UIHealth()
	{
	}
}
[Token(Token = "0x200009D")]
public class UIHealthslider : WeaponElement
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider Slider;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Sprite;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FadeTime;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient Neutral;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color Positive;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Negative;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lasthealth;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastChange;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float progress;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x11060CC", Offset = "0x11060CC", VA = "0x11060CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1106178", Offset = "0x1106178", VA = "0x1106178")]
	private void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x110644C", Offset = "0x110644C", VA = "0x110644C")]
	public UIHealthslider()
	{
	}
}
[Token(Token = "0x200009E")]
public class UIPlayerClass : MonoBehaviour
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20D1C", Offset = "0xE20D1C")]
	public PlayerClassData Class;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button Button;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Container;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20D54", Offset = "0xE20D54")]
	public UIUpgradeProgress UnlockProgress;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x11064A0", Offset = "0x11064A0", VA = "0x11064A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x11066E8", Offset = "0x11066E8", VA = "0x11066E8")]
	public UIPlayerClass()
	{
	}
}
[Token(Token = "0x200009F")]
public class UIPlayerUpgrades : MonoBehaviour
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20D8C", Offset = "0xE20D8C")]
	public Transform Container;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalisationText Title;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Poster;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20DC4", Offset = "0xE20DC4")]
	public UIUpgradeGroup UnlockGroup;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIUpgrade Unlock;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIUpgradeProgress UnlockProgress;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cnt;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool locked;

	[Token(Token = "0x17000028")]
	[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE2BE7C", Offset = "0xE2BE7C")]
	[ShowInInspector]
	[ReadOnly]
	public PlayerClassData Selection
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x11066F0", Offset = "0x11066F0", VA = "0x11066F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1106758", Offset = "0x1106758", VA = "0x1106758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1107188", Offset = "0x1107188", VA = "0x1107188")]
	public UIPlayerUpgrades()
	{
	}
}
[Token(Token = "0x20000A0")]
public class UIPopupText : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20DFC", Offset = "0xE20DFC")]
	public PopupTextData Profile;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter NumberPrefab;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Mesh> Numbers;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20E34", Offset = "0xE20E34")]
	public float Distance;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startForce;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startSpeed;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _numString;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _startPos;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter _obj;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1107190", Offset = "0x1107190", VA = "0x1107190")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x110721C", Offset = "0x110721C", VA = "0x110721C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x11072CC", Offset = "0x11072CC", VA = "0x11072CC")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x11076A8", Offset = "0x11076A8", VA = "0x11076A8")]
	public void SetNumber(int number)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1107918", Offset = "0x1107918", VA = "0x1107918")]
	public UIPopupText()
	{
	}
}
[Token(Token = "0x20000A1")]
public class UIStatusbar : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20E6C", Offset = "0xE20E6C")]
	public GameObject Prefab;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitHealth Health;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform StatusContainer;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform LineContainer;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HorizontalLayoutGroup LineGroup;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Foreground;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image Background;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Changebar;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20EA4", Offset = "0xE20EA4")]
	public float StatusValue;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float StatusMax;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20EDC", Offset = "0xE20EDC")]
	public float StatusPointSize;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int StatusPointMax;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FadeTime;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Gradient ForegroundColorFrom;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Gradient ForegroundColorTo;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Gradient BackgroundColorFrom;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gradient BackgroundColorTo;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float AddTime;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Gradient AddColor;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float RemoveTime;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Gradient RemoveColor;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float PointDiff;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<GameObject> linePoints;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int pointCount;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastValue;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastMax;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float lastChangeTime;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float lastChangeValue;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _foregroundValue;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _changeValue;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color _foregroundColor;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Color _backgroundColor;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1107990", Offset = "0x1107990", VA = "0x1107990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1107A48", Offset = "0x1107A48", VA = "0x1107A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1108188", Offset = "0x1108188", VA = "0x1108188")]
	public UIStatusbar()
	{
	}
}
[Token(Token = "0x20000A2")]
public class UIStatusbarMesh : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20F14", Offset = "0xE20F14")]
	public UnitHealth Health;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter MeshFilter;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20F4C", Offset = "0xE20F4C")]
	public float StatusValue;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StatusMax;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE20F84", Offset = "0xE20F84")]
	public float StatusPointSize;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int StatusPointMax;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float FadeTime;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient ForegroundColor;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient BackgroundColor;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color BorderColor;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float AddTime;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Gradient AddColor;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float RemoveTime;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Gradient RemoveColor;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE20FBC", Offset = "0xE20FBC")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE20FBC", Offset = "0xE20FBC")]
	public float Alpha;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21014", Offset = "0xE21014")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21014", Offset = "0xE21014")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE21014", Offset = "0xE21014")]
	public float Angle;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE21090", Offset = "0xE21090")]
	public Vector2 Size;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE210CC", Offset = "0xE210CC")]
	public float Padding;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE21108", Offset = "0xE21108")]
	public float LineSize;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21144", Offset = "0xE21144")]
	[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0xE21144", Offset = "0xE21144")]
	public float Depth;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh mesh;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> vertices;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<int> triangles;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Color> colors;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int complexity;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Vector3> dynVertices;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int lineOffset;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int pointCount;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float lastValue;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastMax;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lastChangeTime;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float lastChangeValue;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _alpha;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _foregroundValue;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _changeValue;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Color _foregroundColor;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Color _backgroundColor;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Color _changeColor;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1108244", Offset = "0x1108244", VA = "0x1108244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x11082E0", Offset = "0x11082E0", VA = "0x11082E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1108FFC", Offset = "0x1108FFC", VA = "0x1108FFC")]
	private void Freeze()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1109018", Offset = "0x1109018", VA = "0x1109018")]
	public void Change()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1108670", Offset = "0x1108670", VA = "0x1108670")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE285B0", Offset = "0xE285B0")]
	public void Generate()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1109AE0", Offset = "0x1109AE0", VA = "0x1109AE0")]
	private void GeneradeQuad(Color color, Vector2 size, float offset, float padding, float z = 0f)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1109EA0", Offset = "0x1109EA0", VA = "0x1109EA0")]
	public UIStatusbarMesh()
	{
	}
}
[Token(Token = "0x20000A3")]
public class UIStatuspoint : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Sprite;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x110A01C", Offset = "0x110A01C", VA = "0x110A01C")]
	public UIStatuspoint()
	{
	}
}
[Token(Token = "0x20000A4")]
public class UIUnlockItem : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalisationText Title;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIUnlockProgress UnlockProgress;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Container;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x110A024", Offset = "0x110A024", VA = "0x110A024")]
	public UIUnlockItem()
	{
	}
}
[Token(Token = "0x20000A5")]
public class UIUnlockProgress : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Title;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider Slider;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider PreviewSlider;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x110A02C", Offset = "0x110A02C", VA = "0x110A02C")]
	public UIUnlockProgress()
	{
	}
}
[Token(Token = "0x20000A6")]
public class UIUnlocks : MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA88", Offset = "0xE1EA88")]
	private sealed class <DoSlider>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIUnlocks <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x110B754", Offset = "0x110B754", VA = "0x110B754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x110B7BC", Offset = "0x110B7BC", VA = "0x110B7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x110B2E8", Offset = "0x110B2E8", VA = "0x110B2E8")]
		[DebuggerHidden]
		public <DoSlider>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x110B3AC", Offset = "0x110B3AC", VA = "0x110B3AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x110B3B0", Offset = "0x110B3B0", VA = "0x110B3B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x110B75C", Offset = "0x110B75C", VA = "0x110B75C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2119C", Offset = "0xE2119C")]
	public RectTransform Container;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LString Upgrade;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE211D4", Offset = "0xE211D4")]
	public UIUnlockItem Unlock;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> Items;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<Slider, float> Sliders;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x110A034", Offset = "0x110A034", VA = "0x110A034")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x110B2E0", Offset = "0x110B2E0", VA = "0x110B2E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x110B270", Offset = "0x110B270", VA = "0x110B270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE285C0", Offset = "0xE285C0")]
	private IEnumerator DoSlider()
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x110B314", Offset = "0x110B314", VA = "0x110B314")]
	public UIUnlocks()
	{
	}
}
[Token(Token = "0x20000A7")]
public class UIUpgrade : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2120C", Offset = "0xE2120C")]
	public LocalisationText Title;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalisationText Description;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Icon;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle Toggle;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	public int Unlock;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ReadOnly]
	public IntegerValueData Selection;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x110B7C4", Offset = "0x110B7C4", VA = "0x110B7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x110B868", Offset = "0x110B868", VA = "0x110B868")]
	private void ChangeSelection(bool value)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x110B908", Offset = "0x110B908", VA = "0x110B908")]
	public UIUpgrade()
	{
	}
}
[Token(Token = "0x20000A8")]
public class UIUpgradeCondition : MonoBehaviour
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Condition;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x110B910", Offset = "0x110B910", VA = "0x110B910")]
	public UIUpgradeCondition()
	{
	}
}
[Token(Token = "0x20000A9")]
public class UIUpgradeGroup : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21264", Offset = "0xE21264")]
	public LocalisationText Title;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Label;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ProgressContainer;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UpgradeContainer;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ToggleGroup ToggleGroup;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Poster;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2129C", Offset = "0xE2129C")]
	public Sprite PosterSprite;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite PosterDisabledSprite;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LString Upgrade;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LString Locked;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x110B918", Offset = "0x110B918", VA = "0x110B918")]
	public UIUpgradeGroup()
	{
	}
}
[Token(Token = "0x20000AA")]
public class UIUpgradeProgress : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE212D4", Offset = "0xE212D4")]
	public Slider Progressbar;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Condition;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x110B920", Offset = "0x110B920", VA = "0x110B920")]
	public UIUpgradeProgress()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1DF94", Offset = "0xE1DF94")]
public class UIUpgrades : MonoBehaviour
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Container;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Icon;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RobotUpgrade robot;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image _icon;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x110B928", Offset = "0x110B928", VA = "0x110B928")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x110BAE0", Offset = "0x110BAE0", VA = "0x110BAE0")]
	public UIUpgrades()
	{
	}
}
[Token(Token = "0x20000AC")]
public class VRHUD : MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRHUD Instance;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIBackground Background;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2130C", Offset = "0xE2130C")]
	public UnitHealth Health;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21344", Offset = "0xE21344")]
	public UIBackgroundData FlashBackground;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2137C", Offset = "0xE2137C")]
	public UIBackgroundData DeathBackground;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE213B4", Offset = "0xE213B4")]
	public UIBackgroundData LoadBackground;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsShown;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastDeath;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isLoading;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isDamage;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color _color;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x110CC98", Offset = "0x110CC98", VA = "0x110CC98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x110CD00", Offset = "0x110CD00", VA = "0x110CD00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x110CF24", Offset = "0x110CF24", VA = "0x110CF24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x110CF18", Offset = "0x110CF18", VA = "0x110CF18")]
	public void Show()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x110CF6C", Offset = "0x110CF6C", VA = "0x110CF6C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x110CF74", Offset = "0x110CF74", VA = "0x110CF74")]
	private void OnDeath()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x110CFB0", Offset = "0x110CFB0", VA = "0x110CFB0")]
	private void OnGenerateFinished()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x110CFE4", Offset = "0x110CFE4", VA = "0x110CFE4")]
	public VRHUD()
	{
	}
}
[Token(Token = "0x20000AD")]
public class VRProfilerToggle : MonoBehaviour
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRProfilerToggle Instance;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform EyeCenter;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRMenu Menu;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuData MenuItem;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string LastError;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE213FC", Offset = "0xE213FC")]
	public List<GameObject> ShowItems;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRMenu menu;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _active;

	[Token(Token = "0x14000013")]
	public event Action<string> OnErrorLog
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x11059AC", Offset = "0x11059AC", VA = "0x11059AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28624", Offset = "0xE28624")]
		add
		{
		}
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1105AF0", Offset = "0x1105AF0", VA = "0x1105AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28634", Offset = "0xE28634")]
		remove
		{
		}
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x110CFF4", Offset = "0x110CFF4", VA = "0x110CFF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x110D120", Offset = "0x110D120", VA = "0x110D120")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x110D194", Offset = "0x110D194", VA = "0x110D194")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x110D208", Offset = "0x110D208", VA = "0x110D208")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x110D294", Offset = "0x110D294", VA = "0x110D294")]
	public void Open(MenuData data)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x110D3C8", Offset = "0x110D3C8", VA = "0x110D3C8")]
	public void Close()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x110D4E4", Offset = "0x110D4E4", VA = "0x110D4E4")]
	public void Select(MenuData data)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x110D658", Offset = "0x110D658", VA = "0x110D658")]
	private void MessageLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x110D6D8", Offset = "0x110D6D8", VA = "0x110D6D8")]
	public VRProfilerToggle()
	{
	}
}
[Token(Token = "0x20000AE")]
public class WeaponDisplay : SerializedMonoBehaviour
{
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21434", Offset = "0xE21434")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE21434", Offset = "0xE21434")]
	public Weapon Weapon;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE21480", Offset = "0xE21480")]
	public ShootWeapon ShootWeapon;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE21490", Offset = "0xE21490")]
	public DisplayData Display;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VerticalLayoutGroup LayoutGroup;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE214A0", Offset = "0xE214A0")]
	public bool ShowReloadHint;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE214D8", Offset = "0xE214D8")]
	[InlineProperty]
	public List<ISideAction> OnReloadActions;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public RectTransform rectTrans;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastSetting;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _currSetting;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PickableObject _pickable;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Side currentSide;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x110DFE8", Offset = "0x110DFE8", VA = "0x110DFE8")]
	public Side GetCurrentSide()
	{
		return default(Side);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x110DFF0", Offset = "0x110DFF0", VA = "0x110DFF0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x110E060", Offset = "0x110E060", VA = "0x110E060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x110E0B8", Offset = "0x110E0B8", VA = "0x110E0B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x110E364", Offset = "0x110E364", VA = "0x110E364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x110E6A8", Offset = "0x110E6A8", VA = "0x110E6A8")]
	public WeaponDisplay()
	{
	}
}
[Token(Token = "0x20000AF")]
public class WeaponElement : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public WeaponDisplay WeaponDisplay;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1104B6C", Offset = "0x1104B6C", VA = "0x1104B6C")]
	public WeaponElement()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AddCollider : MonoBehaviour
{
	[Token(Token = "0x20003BE")]
	public enum ColliderOptions
	{
		[Token(Token = "0x4000ED2")]
		Box,
		[Token(Token = "0x4000ED3")]
		Sphere,
		[Token(Token = "0x4000ED4")]
		Capsule,
		[Token(Token = "0x4000ED5")]
		Mesh
	}

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColliderOptions selectedCollider;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider currentCollider;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool parentCreated;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x12F7644", Offset = "0x12F7644", VA = "0x12F7644")]
	private void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x12F7648", Offset = "0x12F7648", VA = "0x12F7648")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28644", Offset = "0xE28644")]
	private void ColliderAddition()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x12F77BC", Offset = "0x12F77BC", VA = "0x12F77BC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28654", Offset = "0xE28654")]
	private void PutInParentObject()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x12F78CC", Offset = "0x12F78CC", VA = "0x12F78CC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28664", Offset = "0xE28664")]
	private void FinalizeAsset()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x12F7A00", Offset = "0x12F7A00", VA = "0x12F7A00")]
	public AddCollider()
	{
	}
}
[Token(Token = "0x20000B1")]
public class AdjustHandPositionDebugTool : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup inputDevice;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lockRotation;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool lockMovement;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lockPos;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion lockRot;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DeviceSpecificArmaturePosition armaturePositionScript;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previousInput;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool adjust;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BooleanValueData key;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x12F7A08", Offset = "0x12F7A08", VA = "0x12F7A08")]
	private void Start()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x12F7D5C", Offset = "0x12F7D5C", VA = "0x12F7D5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x12F7B7C", Offset = "0x12F7B7C", VA = "0x12F7B7C")]
	private void Instance_OnValueChanged(ValueData key, object val)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x12F7E4C", Offset = "0x12F7E4C", VA = "0x12F7E4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x12F8218", Offset = "0x12F8218", VA = "0x12F8218")]
	public AdjustHandPositionDebugTool()
	{
	}
}
[Token(Token = "0x20000B2")]
public class DamageUnitHealthPart : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnitHealthPart unitHealthPart;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float debugDamage;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x12FAC14", Offset = "0x12FAC14", VA = "0x12FAC14")]
	public DamageUnitHealthPart()
	{
	}
}
[Token(Token = "0x20000B3")]
public class SkinnedMeshRendererInfo : MonoBehaviour
{
	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1038944", Offset = "0x1038944", VA = "0x1038944")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28674", Offset = "0xE28674")]
	private void Test(bool refresh = false)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1038D7C", Offset = "0x1038D7C", VA = "0x1038D7C")]
	public SkinnedMeshRendererInfo()
	{
	}
}
[Token(Token = "0x20000B4")]
public class UtilitySavePose : MonoBehaviour
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Skeleton_Pose pose;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x110C40C", Offset = "0x110C40C", VA = "0x110C40C")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE286AC", Offset = "0xE286AC")]
	protected void SaveHandData()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x110CC90", Offset = "0x110CC90", VA = "0x110CC90")]
	public UtilitySavePose()
	{
	}
}
[Token(Token = "0x20000B5")]
public class VaryAnimation : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string key;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> values;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE21544", Offset = "0xE21544")]
	public float selectedValue;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x110D748", Offset = "0x110D748", VA = "0x110D748")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x110D7D8", Offset = "0x110D7D8", VA = "0x110D7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x110D8A8", Offset = "0x110D8A8", VA = "0x110D8A8")]
	public VaryAnimation()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1DFA8", Offset = "0xE1DFA8")]
public class GunAimAngleAdjuster : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ValueData angleKey;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public float currentGunAimAngle;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GunAimAngleAdjuster instance;

	[Token(Token = "0x14000014")]
	public event Action<float> OnGunAimAngleChanged
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1116510", Offset = "0x1116510", VA = "0x1116510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE286BC", Offset = "0xE286BC")]
		add
		{
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x11165B4", Offset = "0x11165B4", VA = "0x11165B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE286CC", Offset = "0xE286CC")]
		remove
		{
		}
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1116244", Offset = "0x1116244", VA = "0x1116244")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1116658", Offset = "0x1116658", VA = "0x1116658")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x11163D8", Offset = "0x11163D8", VA = "0x11163D8")]
	private void Instance_OnValueChanged(ValueData key, object val)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1116748", Offset = "0x1116748", VA = "0x1116748")]
	public GunAimAngleAdjuster()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SmoothLineRenderer : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> transformPoints;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1038D8C", Offset = "0x1038D8C", VA = "0x1038D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1038DE8", Offset = "0x1038DE8", VA = "0x1038DE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1038EA8", Offset = "0x1038EA8", VA = "0x1038EA8")]
	public SmoothLineRenderer()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ScrollbarAnalogStick : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVRInputDeviceGroup InputDevice;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform Container;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScrollSpeed;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 axis;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1036EA8", Offset = "0x1036EA8", VA = "0x1036EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1037000", Offset = "0x1037000", VA = "0x1037000")]
	public ScrollbarAnalogStick()
	{
	}
}
[Token(Token = "0x20000B9")]
public class UnlockProgression : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003BF")]
	public class ProgressInfo
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Condition;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Initial;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Current;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x110C36C", Offset = "0x110C36C", VA = "0x110C36C")]
		public ProgressInfo()
		{
		}
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnlockProgression Instance;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowInInspector]
	[ReadOnly]
	private Dictionary<PlayerClassData, Dictionary<ProgressBase, ProgressInfo>> ClassProgress;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ShowInInspector]
	[ReadOnly]
	private Dictionary<PlayerClassData.GroupInfo, Dictionary<ProgressBase, ProgressInfo>> UpgradeProgress;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _progress;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _condition;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x110BAE8", Offset = "0x110BAE8", VA = "0x110BAE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x110BB3C", Offset = "0x110BB3C", VA = "0x110BB3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x110AD6C", Offset = "0x110AD6C", VA = "0x110AD6C")]
	public Dictionary<PlayerClassData.GroupInfo, List<ProgressInfo>> GetUpgradeProgression()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x110A868", Offset = "0x110A868", VA = "0x110A868")]
	public Dictionary<PlayerClassData, List<ProgressInfo>> GetClassProgression()
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x110C374", Offset = "0x110C374", VA = "0x110C374")]
	public UnlockProgression()
	{
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000BA")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40003F2")]
		TRIANGLES,
		[Token(Token = "0x40003F3")]
		QUADS
	}
	[Token(Token = "0x20000BB")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40003F5")]
		ABSORPTION,
		[Token(Token = "0x40003F6")]
		TRANSMISSION,
		[Token(Token = "0x40003F7")]
		SCATTERING
	}
	[Token(Token = "0x20000BC")]
	public struct MeshGroup
	{
		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000BD")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000029")]
		public bool Highlight
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0x1246170", Offset = "0x1246170", VA = "0x1246170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600039B")]
			[Address(RVA = "0x1246178", Offset = "0x1246178", VA = "0x1246178")]
			set
			{
			}
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1246184", Offset = "0x1246184", VA = "0x1246184")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1246350", Offset = "0x1246350", VA = "0x1246350", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1246378", Offset = "0x1246378", VA = "0x1246378", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x12463A0", Offset = "0x12463A0", VA = "0x12463A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1246250", Offset = "0x1246250", VA = "0x1246250")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x12465F4", Offset = "0x12465F4", VA = "0x12465F4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700002A")]
		public bool InRange
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x12466E0", Offset = "0x12466E0", VA = "0x12466E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x12466E8", Offset = "0x12466E8", VA = "0x12466E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public bool Targeted
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x1246870", Offset = "0x1246870", VA = "0x1246870")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0x1246878", Offset = "0x1246878", VA = "0x1246878")]
			set
			{
			}
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1246884", Offset = "0x1246884", VA = "0x1246884", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x12466F4", Offset = "0x12466F4", VA = "0x12466F4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1246A50", Offset = "0x1246A50", VA = "0x1246A50")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1246A94", Offset = "0x1246A94", VA = "0x1246A94")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1246AF0", Offset = "0x1246AF0", VA = "0x1246AF0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE1DFBC", Offset = "0xE1DFBC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700002C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x1246AF8", Offset = "0x1246AF8", VA = "0x1246AF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x1246B00", Offset = "0x1246B00", VA = "0x1246B00")]
			set
			{
			}
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1246B1C", Offset = "0x1246B1C", VA = "0x1246B1C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1246CA8", Offset = "0x1246CA8", VA = "0x1246CA8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x124763C", Offset = "0x124763C", VA = "0x124763C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1247BF8", Offset = "0x1247BF8", VA = "0x1247BF8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1247FD8", Offset = "0x1247FD8", VA = "0x1247FD8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1246F70", Offset = "0x1246F70", VA = "0x1246F70")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x12480B4", Offset = "0x12480B4", VA = "0x12480B4")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x12484EC", Offset = "0x12484EC", VA = "0x12484EC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1248504", Offset = "0x1248504", VA = "0x1248504", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x124850C", Offset = "0x124850C", VA = "0x124850C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x1249CD4", Offset = "0x1249CD4", VA = "0x1249CD4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1249D84", Offset = "0x1249D84", VA = "0x1249D84")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1249E30", Offset = "0x1249E30", VA = "0x1249E30")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003C0")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000EDA")]
			Disabled,
			[Token(Token = "0x4000EDB")]
			Enabled,
			[Token(Token = "0x4000EDC")]
			Targeted
		}

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1249E38", Offset = "0x1249E38", VA = "0x1249E38")]
		private void Start()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x12469B4", Offset = "0x12469B4", VA = "0x12469B4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x1249EA0", Offset = "0x1249EA0", VA = "0x1249EA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1249EE8", Offset = "0x1249EE8", VA = "0x1249EE8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x124D19C", Offset = "0x124D19C", VA = "0x124D19C")]
		private void Start()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x124D268", Offset = "0x124D268", VA = "0x124D268")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x124D274", Offset = "0x124D274", VA = "0x124D274")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x124D280", Offset = "0x124D280", VA = "0x124D280")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1AE01AC", Offset = "0x1AE01AC", VA = "0x1AE01AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1AE0204", Offset = "0x1AE0204", VA = "0x1AE0204")]
		private void Update()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1AE04A8", Offset = "0x1AE04A8", VA = "0x1AE04A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1AE0598", Offset = "0x1AE0598", VA = "0x1AE0598")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1AE0208", Offset = "0x1AE0208", VA = "0x1AE0208")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x1AE0688", Offset = "0x1AE0688", VA = "0x1AE0688")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003C1")]
		public enum ContactTest
		{
			[Token(Token = "0x4000EDE")]
			PerpenTest,
			[Token(Token = "0x4000EDF")]
			BackwardsPress
		}

		[Token(Token = "0x4000420")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000421")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700002D")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x1AE0720", Offset = "0x1AE0720", VA = "0x1AE0720", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002E")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x1AE0728", Offset = "0x1AE0728", VA = "0x1AE0728")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1AE0734", Offset = "0x1AE0734", VA = "0x1AE0734", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1AE0824", Offset = "0x1AE0824", VA = "0x1AE0824")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1AE0990", Offset = "0x1AE0990", VA = "0x1AE0990")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1AE0AFC", Offset = "0x1AE0AFC", VA = "0x1AE0AFC")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1AE0C68", Offset = "0x1AE0C68", VA = "0x1AE0C68", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1AE1134", Offset = "0x1AE1134", VA = "0x1AE1134")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1AE121C", Offset = "0x1AE121C", VA = "0x1AE121C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1AE1310", Offset = "0x1AE1310", VA = "0x1AE1310")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1AE1434", Offset = "0x1AE1434", VA = "0x1AE1434")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2174C", Offset = "0xE2174C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2175C", Offset = "0xE2175C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700002F")]
		public Collider Collider
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x1245FD8", Offset = "0x1245FD8", VA = "0x1245FD8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE286DC", Offset = "0xE286DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x1245FE0", Offset = "0x1245FE0", VA = "0x1245FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE286EC", Offset = "0xE286EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x1245FE8", Offset = "0x1245FE8", VA = "0x1245FE8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE286FC", Offset = "0xE286FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x1245FF0", Offset = "0x1245FF0", VA = "0x1245FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2870C", Offset = "0xE2870C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x1245FF8", Offset = "0x1245FF8", VA = "0x1245FF8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1246048", Offset = "0x1246048", VA = "0x1246048")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x12460C4", Offset = "0x12460C4", VA = "0x12460C4")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000032")]
		Collider Collider
		{
			[Token(Token = "0x60003DB")]
			get;
		}

		[Token(Token = "0x17000033")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60003DC")]
			get;
		}

		[Token(Token = "0x17000034")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60003DD")]
			get;
		}
	}
	[Token(Token = "0x20000C7")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x12460CC", Offset = "0x12460CC", VA = "0x12460CC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public enum InteractionType
	{
		[Token(Token = "0x4000435")]
		Enter,
		[Token(Token = "0x4000436")]
		Stay,
		[Token(Token = "0x4000437")]
		Exit
	}
	[Token(Token = "0x20000C9")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003C2")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000EE1")]
			Mesh,
			[Token(Token = "0x4000EE2")]
			Skeleton,
			[Token(Token = "0x4000EE3")]
			Both
		}

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EA98", Offset = "0xE1EA98")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0x124AEC4", Offset = "0x124AEC4", VA = "0x124AEC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0x124AF2C", Offset = "0x124AF2C", VA = "0x124AF2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x124A8D0", Offset = "0x124A8D0", VA = "0x124A8D0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x124ACA4", Offset = "0x124ACA4", VA = "0x124ACA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x124ACA8", Offset = "0x124ACA8", VA = "0x124ACA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x124AECC", Offset = "0x124AECC", VA = "0x124AECC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000438")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2178C", Offset = "0xE2178C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000035")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x1248DD0", Offset = "0x1248DD0", VA = "0x1248DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x1249EF0", Offset = "0x1249EF0", VA = "0x1249EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x1249958", Offset = "0x1249958", VA = "0x1249958")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x1249F58", Offset = "0x1249F58", VA = "0x1249F58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x1249FC0", Offset = "0x1249FC0", VA = "0x1249FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0x1249FF8", Offset = "0x1249FF8", VA = "0x1249FF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x124A060", Offset = "0x124A060", VA = "0x124A060")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x124A098", Offset = "0x124A098", VA = "0x124A098")]
			private set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x124A100", Offset = "0x124A100", VA = "0x124A100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x124A138", Offset = "0x124A138", VA = "0x124A138")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x1248D9C", Offset = "0x1248D9C", VA = "0x1248D9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x124A1A0", Offset = "0x124A1A0", VA = "0x124A1A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x1249924", Offset = "0x1249924", VA = "0x1249924")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x124A204", Offset = "0x124A204", VA = "0x124A204")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x124A268", Offset = "0x124A268", VA = "0x124A268")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0x124A29C", Offset = "0x124A29C", VA = "0x124A29C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0x124A300", Offset = "0x124A300", VA = "0x124A300")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x124A334", Offset = "0x124A334", VA = "0x124A334")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x124A398", Offset = "0x124A398", VA = "0x124A398")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x124A3CC", Offset = "0x124A3CC", VA = "0x124A3CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x124A430", Offset = "0x124A430", VA = "0x124A430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2871C", Offset = "0xE2871C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x124A480", Offset = "0x124A480", VA = "0x124A480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2872C", Offset = "0xE2872C")]
			private set
			{
			}
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x124A4D4", Offset = "0x124A4D4", VA = "0x124A4D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x124A848", Offset = "0x124A848", VA = "0x124A848")]
		private void Update()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x124A7D8", Offset = "0x124A7D8", VA = "0x124A7D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2873C", Offset = "0xE2873C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x124A8FC", Offset = "0x124A8FC", VA = "0x124A8FC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x124A9E4", Offset = "0x124A9E4", VA = "0x124A9E4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1249990", Offset = "0x1249990", VA = "0x1249990")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1248C0C", Offset = "0x1248C0C", VA = "0x1248C0C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x124ABC4", Offset = "0x124ABC4", VA = "0x124ABC4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003C4")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x124B6E8", Offset = "0x124B6E8", VA = "0x124B6E8")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000040")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x124AF34", Offset = "0x124AF34", VA = "0x124AF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x124AF3C", Offset = "0x124AF3C", VA = "0x124AF3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x124AF44", Offset = "0x124AF44", VA = "0x124AF44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000400")]
			[Address(RVA = "0x124AF4C", Offset = "0x124AF4C", VA = "0x124AF4C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x124AF54", Offset = "0x124AF54", VA = "0x124AF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287A0", Offset = "0xE287A0")]
			add
			{
			}
			[Token(Token = "0x6000402")]
			[Address(RVA = "0x124AFF8", Offset = "0x124AFF8", VA = "0x124AFF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287B0", Offset = "0xE287B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000404")]
			[Address(RVA = "0x124B110", Offset = "0x124B110", VA = "0x124B110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287C0", Offset = "0xE287C0")]
			add
			{
			}
			[Token(Token = "0x6000405")]
			[Address(RVA = "0x124B1B4", Offset = "0x124B1B4", VA = "0x124B1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287D0", Offset = "0xE287D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x124B2CC", Offset = "0x124B2CC", VA = "0x124B2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287E0", Offset = "0xE287E0")]
			add
			{
			}
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x124B370", Offset = "0x124B370", VA = "0x124B370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE287F0", Offset = "0xE287F0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x124B09C", Offset = "0x124B09C", VA = "0x124B09C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x124B258", Offset = "0x124B258", VA = "0x124B258", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x124B414", Offset = "0x124B414", VA = "0x124B414", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600040A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x124B488", Offset = "0x124B488", VA = "0x124B488", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x124B5B4", Offset = "0x124B5B4", VA = "0x124B5B4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x124B6E0", Offset = "0x124B6E0", VA = "0x124B6E0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000450")]
		None,
		[Token(Token = "0x4000451")]
		Proximity,
		[Token(Token = "0x4000452")]
		Contact,
		[Token(Token = "0x4000453")]
		Action
	}
	[Token(Token = "0x20000CC")]
	public enum InteractableState
	{
		[Token(Token = "0x4000455")]
		Default,
		[Token(Token = "0x4000456")]
		ProximityState,
		[Token(Token = "0x4000457")]
		ContactState,
		[Token(Token = "0x4000458")]
		ActionState
	}
	[Token(Token = "0x20000CD")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x124B81C", Offset = "0x124B81C", VA = "0x124B81C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000044")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600040F")]
			[Address(RVA = "0x124B738", Offset = "0x124B738", VA = "0x124B738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x124B4EC", Offset = "0x124B4EC", VA = "0x124B4EC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x124B618", Offset = "0x124B618", VA = "0x124B618")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x124B7A0", Offset = "0x124B7A0", VA = "0x124B7A0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAA8", Offset = "0xE1EAA8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAF")]
				[Address(RVA = "0x124C934", Offset = "0x124C934", VA = "0x124C934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x124C99C", Offset = "0x124C99C", VA = "0x124C99C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x124C3F8", Offset = "0x124C3F8", VA = "0x124C3F8")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x124C524", Offset = "0x124C524", VA = "0x124C524", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x124C598", Offset = "0x124C598", VA = "0x124C598", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x124C540", Offset = "0x124C540", VA = "0x124C540")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x124C93C", Offset = "0x124C93C", VA = "0x124C93C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x124C2F0", Offset = "0x124C2F0", VA = "0x124C2F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x124C36C", Offset = "0x124C36C", VA = "0x124C36C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28800", Offset = "0xE28800")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x124C424", Offset = "0x124C424", VA = "0x124C424")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x124C51C", Offset = "0x124C51C", VA = "0x124C51C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000045")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x1248648", Offset = "0x1248648", VA = "0x1248648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x12487B0", Offset = "0x12487B0", VA = "0x12487B0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x124C9A4", Offset = "0x124C9A4", VA = "0x124C9A4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x124CA50", Offset = "0x124CA50", VA = "0x124CA50")]
		private void Update()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x124CD18", Offset = "0x124CD18", VA = "0x124CD18")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x124CD60", Offset = "0x124CD60", VA = "0x124CD60")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x124CFB0", Offset = "0x124CFB0", VA = "0x124CFB0")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x124D0DC", Offset = "0x124D0DC", VA = "0x124D0DC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAB8", Offset = "0xE1EAB8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FB5")]
				[Address(RVA = "0x1249BA0", Offset = "0x1249BA0", VA = "0x1249BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB7")]
				[Address(RVA = "0x1249C08", Offset = "0x1249C08", VA = "0x1249C08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x12488CC", Offset = "0x12488CC", VA = "0x12488CC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x12495B4", Offset = "0x12495B4", VA = "0x12495B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x12495B8", Offset = "0x12495B8", VA = "0x12495B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x1249BA8", Offset = "0x1249BA8", VA = "0x1249BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000468")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000046")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x124852C", Offset = "0x124852C", VA = "0x124852C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000047")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0x1248534", Offset = "0x1248534", VA = "0x1248534", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000048")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x124853C", Offset = "0x124853C", VA = "0x124853C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000049")]
		public override bool EnableState
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x1248544", Offset = "0x1248544", VA = "0x1248544", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x1248570", Offset = "0x1248570", VA = "0x1248570", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x12485AC", Offset = "0x12485AC", VA = "0x12485AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x124885C", Offset = "0x124885C", VA = "0x124885C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28864", Offset = "0xE28864")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x12488F8", Offset = "0x12488F8", VA = "0x12488F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1248E08", Offset = "0x1248E08", VA = "0x1248E08")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1249080", Offset = "0x1249080", VA = "0x1249080")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x12491C0", Offset = "0x12491C0", VA = "0x12491C0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1249488", Offset = "0x1249488", VA = "0x1249488", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x124948C", Offset = "0x124948C", VA = "0x124948C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1249490", Offset = "0x1249490", VA = "0x1249490")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2181C", Offset = "0xE2181C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2182C", Offset = "0xE2182C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2183C", Offset = "0xE2183C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700004A")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0x1249C10", Offset = "0x1249C10", VA = "0x1249C10", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE288C8", Offset = "0xE288C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x1249C18", Offset = "0x1249C18", VA = "0x1249C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE288D8", Offset = "0xE288D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public bool EnableState
		{
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x1249C20", Offset = "0x1249C20", VA = "0x1249C20", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x1249C3C", Offset = "0x1249C3C", VA = "0x1249C3C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x1249C5C", Offset = "0x1249C5C", VA = "0x1249C5C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE288E8", Offset = "0xE288E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x1249C64", Offset = "0x1249C64", VA = "0x1249C64", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE288F8", Offset = "0xE288F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public float SphereRadius
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x1249C70", Offset = "0x1249C70", VA = "0x1249C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28908", Offset = "0xE28908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x1249C78", Offset = "0x1249C78", VA = "0x1249C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28918", Offset = "0xE28918")]
			private set
			{
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x1249C80", Offset = "0x1249C80", VA = "0x1249C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x1249CC8", Offset = "0x1249CC8", VA = "0x1249CC8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x1249CCC", Offset = "0x1249CCC", VA = "0x1249CCC")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000478")]
		None = 0,
		[Token(Token = "0x4000479")]
		Ray = 1,
		[Token(Token = "0x400047A")]
		Poke = 4,
		[Token(Token = "0x400047B")]
		All = -1
	}
	[Token(Token = "0x20000D4")]
	public enum ToolInputState
	{
		[Token(Token = "0x400047D")]
		Inactive,
		[Token(Token = "0x400047E")]
		PrimaryInputDown,
		[Token(Token = "0x400047F")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000480")]
		PrimaryInputUp
	}
	[Token(Token = "0x20000D5")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x1249444", Offset = "0x1249444", VA = "0x1249444")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2184C", Offset = "0xE2184C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2185C", Offset = "0xE2185C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2186C", Offset = "0xE2186C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700004E")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x124B8C0", Offset = "0x124B8C0", VA = "0x124B8C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x124B8C8", Offset = "0x124B8C8", VA = "0x124B8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28928", Offset = "0xE28928")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600043C")]
			[Address(RVA = "0x124B8D0", Offset = "0x124B8D0", VA = "0x124B8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28938", Offset = "0xE28938")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600043D")]
			get;
		}

		[Token(Token = "0x17000051")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600043E")]
			get;
		}

		[Token(Token = "0x17000052")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600043F")]
			get;
		}

		[Token(Token = "0x17000053")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x124B8DC", Offset = "0x124B8DC", VA = "0x124B8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28948", Offset = "0xE28948")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000441")]
			[Address(RVA = "0x124B8E8", Offset = "0x124B8E8", VA = "0x124B8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28958", Offset = "0xE28958")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000442")]
			[Address(RVA = "0x124B8F4", Offset = "0x124B8F4", VA = "0x124B8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28968", Offset = "0xE28968")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000443")]
			[Address(RVA = "0x124B900", Offset = "0x124B900", VA = "0x124B900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28978", Offset = "0xE28978")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000448")]
			get;
			[Token(Token = "0x6000449")]
			set;
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x124B90C", Offset = "0x124B90C", VA = "0x124B90C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000446")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000447")]
		public abstract void DeFocus();

		[Token(Token = "0x600044A")]
		public abstract void Initialize();

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x124B914", Offset = "0x124B914", VA = "0x124B914")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x124B964", Offset = "0x124B964", VA = "0x124B964")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x124B9BC", Offset = "0x124B9BC", VA = "0x124B9BC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x124BC00", Offset = "0x124BC00", VA = "0x124BC00", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x12494A4", Offset = "0x12494A4", VA = "0x12494A4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000056")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000450")]
			get;
		}

		[Token(Token = "0x17000057")]
		bool EnableState
		{
			[Token(Token = "0x6000452")]
			get;
			[Token(Token = "0x6000453")]
			set;
		}

		[Token(Token = "0x17000058")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000454")]
			get;
			[Token(Token = "0x6000455")]
			set;
		}

		[Token(Token = "0x6000451")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20000D8")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003C7")]
		private enum PinchState
		{
			[Token(Token = "0x4000EF4")]
			None,
			[Token(Token = "0x4000EF5")]
			PinchDown,
			[Token(Token = "0x4000EF6")]
			PinchStay,
			[Token(Token = "0x4000EF7")]
			PinchUp
		}

		[Token(Token = "0x400048D")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000059")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x124D288", Offset = "0x124D288", VA = "0x124D288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005A")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0x124D314", Offset = "0x124D314", VA = "0x124D314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005B")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x124D3A0", Offset = "0x124D3A0", VA = "0x124D3A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x124D42C", Offset = "0x124D42C", VA = "0x124D42C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x124D458", Offset = "0x124D458", VA = "0x124D458")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000490")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000491")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000492")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000493")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000494")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2188C", Offset = "0xE2188C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700005C")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600045B")]
			[Address(RVA = "0x124D5DC", Offset = "0x124D5DC", VA = "0x124D5DC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700005D")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0x124D5E4", Offset = "0x124D5E4", VA = "0x124D5E4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700005E")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600045D")]
			[Address(RVA = "0x124D64C", Offset = "0x124D64C", VA = "0x124D64C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005F")]
		public override bool EnableState
		{
			[Token(Token = "0x600045E")]
			[Address(RVA = "0x124D654", Offset = "0x124D654", VA = "0x124D654", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x124D698", Offset = "0x124D698", VA = "0x124D698", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x124D70C", Offset = "0x124D70C", VA = "0x124D70C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x124D764", Offset = "0x124D764", VA = "0x124D764")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x124D800", Offset = "0x124D800", VA = "0x124D800")]
		private void Update()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x124DB00", Offset = "0x124DB00", VA = "0x124DB00")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x124DBFC", Offset = "0x124DBFC", VA = "0x124DBFC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x124DF60", Offset = "0x124DF60", VA = "0x124DF60")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x124E104", Offset = "0x124E104", VA = "0x124E104")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x124E22C", Offset = "0x124E22C", VA = "0x124E22C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x124E564", Offset = "0x124E564", VA = "0x124E564")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x124E974", Offset = "0x124E974", VA = "0x124E974", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x124EA48", Offset = "0x124EA48", VA = "0x124EA48", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x124EA7C", Offset = "0x124EA7C", VA = "0x124EA7C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40004A0")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40004A1")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21900", Offset = "0xE21900")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000060")]
		public bool EnableState
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0x124D67C", Offset = "0x124D67C", VA = "0x124D67C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x124D6B4", Offset = "0x124D6B4", VA = "0x124D6B4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x124EB34", Offset = "0x124EB34", VA = "0x124EB34", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600046F")]
			[Address(RVA = "0x124DAC4", Offset = "0x124DAC4", VA = "0x124DAC4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x124ED64", Offset = "0x124ED64", VA = "0x124ED64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28988", Offset = "0xE28988")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000472")]
			[Address(RVA = "0x124ED6C", Offset = "0x124ED6C", VA = "0x124ED6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28998", Offset = "0xE28998")]
			set
			{
			}
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x124EB3C", Offset = "0x124EB3C", VA = "0x124EB3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x124E9A8", Offset = "0x124E9A8", VA = "0x124E9A8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x124ED74", Offset = "0x124ED74", VA = "0x124ED74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x124F0A0", Offset = "0x124F0A0", VA = "0x124F0A0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x124F290", Offset = "0x124F290", VA = "0x124F290")]
		public RayToolView()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE1E030", Offset = "0xE1E030")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAC8", Offset = "0xE1EAC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1ADFE3C", Offset = "0x1ADFE3C", VA = "0x1ADFE3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1ADFE44", Offset = "0x1ADFE44", VA = "0x1ADFE44")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004AA")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40004AB")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40004AC")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40004AD")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40004AE")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40004AF")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40004B0")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40004B1")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40004B2")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40004B3")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40004B4")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x1ADF080", Offset = "0x1ADF080", VA = "0x1ADF080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1ADF0D8", Offset = "0x1ADF0D8", VA = "0x1ADF0D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1ADF4E0", Offset = "0x1ADF4E0", VA = "0x1ADF4E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1ADF5AC", Offset = "0x1ADF5AC", VA = "0x1ADF5AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1ADF6B8", Offset = "0x1ADF6B8", VA = "0x1ADF6B8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1ADF9F0", Offset = "0x1ADF9F0", VA = "0x1ADF9F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1ADFB58", Offset = "0x1ADFB58", VA = "0x1ADFB58")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x1ADFCA4", Offset = "0x1ADFCA4", VA = "0x1ADFCA4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x1ADF754", Offset = "0x1ADF754", VA = "0x1ADF754")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x1ADF7F4", Offset = "0x1ADF7F4", VA = "0x1ADF7F4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1ADF334", Offset = "0x1ADF334", VA = "0x1ADF334")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x1ADFDC0", Offset = "0x1ADFDC0", VA = "0x1ADFDC0")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public enum HandPoseId
	{
		[Token(Token = "0x40004C7")]
		Default,
		[Token(Token = "0x40004C8")]
		Generic,
		[Token(Token = "0x40004C9")]
		PingPongBall,
		[Token(Token = "0x40004CA")]
		Controller
	}
	[Token(Token = "0x20000DD")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000063")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x1ADFE70", Offset = "0x1ADFE70", VA = "0x1ADFE70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000064")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0x1ADFE78", Offset = "0x1ADFE78", VA = "0x1ADFE78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000065")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x1ADFE80", Offset = "0x1ADFE80", VA = "0x1ADFE80")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1ADFE88", Offset = "0x1ADFE88", VA = "0x1ADFE88")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x1ADFE90", Offset = "0x1ADFE90", VA = "0x1ADFE90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x1AE0104", Offset = "0x1AE0104", VA = "0x1AE0104")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x1AE0160", Offset = "0x1AE0160", VA = "0x1AE0160")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x1AE01A4", Offset = "0x1AE01A4", VA = "0x1AE01A4")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20000DF")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xE21990", Offset = "0xE21990")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x1ADC94C", Offset = "0x1ADC94C", VA = "0x1ADC94C")]
		private void Start()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1ADC950", Offset = "0x1ADC950", VA = "0x1ADC950")]
		private void Update()
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x1ADCA10", Offset = "0x1ADCA10", VA = "0x1ADCA10")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE219DC", Offset = "0xE219DC")]
		public bool autoRetrigger;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xE21A14", Offset = "0xE21A14")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21A38", Offset = "0xE21A38")]
		public Transform[] playPositions;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1AD3BA0", Offset = "0x1AD3BA0", VA = "0x1AD3BA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x1AD3D24", Offset = "0x1AD3D24", VA = "0x1AD3D24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x1AD3F00", Offset = "0x1AD3F00", VA = "0x1AD3F00")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x1AD3D84", Offset = "0x1AD3D84", VA = "0x1AD3D84")]
		public void Play()
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1AD4040", Offset = "0x1AD4040", VA = "0x1AD4040")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x1AD41B4", Offset = "0x1AD41B4", VA = "0x1AD41B4")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40004DE")]
		Default,
		[Token(Token = "0x40004DF")]
		Preload,
		[Token(Token = "0x40004E0")]
		ManualPreload
	}
	[Token(Token = "0x20000E2")]
	public enum Fade
	{
		[Token(Token = "0x40004E2")]
		In,
		[Token(Token = "0x40004E3")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20000E3")]
	public class SoundGroup
	{
		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21A70", Offset = "0xE21A70")]
		public int maxPlayingSounds;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1ADC82C", Offset = "0x1ADC82C", VA = "0x1ADC82C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1ADC8C0", Offset = "0x1ADC8C0", VA = "0x1ADC8C0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1ADB298", Offset = "0x1ADB298", VA = "0x1ADB298")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x1ADB3D8", Offset = "0x1ADB3D8", VA = "0x1ADB3D8")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x1ADBE90", Offset = "0x1ADBE90", VA = "0x1ADBE90")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000E4")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003C9")]
		public enum Fade
		{
			[Token(Token = "0x4000EFB")]
			In,
			[Token(Token = "0x4000EFC")]
			Out
		}

		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAD8", Offset = "0xE1EAD8")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1AD83D8", Offset = "0x1AD83D8", VA = "0x1AD83D8")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1ADAD54", Offset = "0x1ADAD54", VA = "0x1ADAD54")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAE8", Offset = "0xE1EAE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1ADACBC", Offset = "0x1ADACBC", VA = "0x1ADACBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1ADACC4", Offset = "0x1ADACC4", VA = "0x1ADACC4")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21A9C", Offset = "0xE21A9C")]
		public bool makePersistent;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21AD4", Offset = "0xE21AD4")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21B0C", Offset = "0xE21B0C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21B44", Offset = "0xE21B44")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21B7C", Offset = "0xE21B7C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21BB4", Offset = "0xE21BB4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21BEC", Offset = "0xE21BEC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21C24", Offset = "0xE21C24")]
		public bool verboseLogging;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21C5C", Offset = "0xE21C5C")]
		public int maxSoundEmitters;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21C94", Offset = "0xE21C94")]
		public float volumeSoundFX;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21CCC", Offset = "0xE21CCC")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000066")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0x1AD4274", Offset = "0x1AD4274", VA = "0x1AD4274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000067")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600049A")]
			[Address(RVA = "0x1AD4354", Offset = "0x1AD4354", VA = "0x1AD4354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		public static float NearFallOff
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0x1AD43BC", Offset = "0x1AD43BC", VA = "0x1AD43BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000069")]
		public static float FarFallOff
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0x1AD4430", Offset = "0x1AD4430", VA = "0x1AD4430")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700006A")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600049D")]
			[Address(RVA = "0x1AD44A4", Offset = "0x1AD44A4", VA = "0x1AD44A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600049E")]
			[Address(RVA = "0x1AD4518", Offset = "0x1AD4518", VA = "0x1AD4518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600049F")]
			[Address(RVA = "0x1AD458C", Offset = "0x1AD458C", VA = "0x1AD458C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0x1AD62FC", Offset = "0x1AD62FC", VA = "0x1AD62FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x1AD4600", Offset = "0x1AD4600", VA = "0x1AD4600")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1AD4828", Offset = "0x1AD4828", VA = "0x1AD4828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x1AD4604", Offset = "0x1AD4604", VA = "0x1AD4604")]
		private void Init()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x1AD5474", Offset = "0x1AD5474", VA = "0x1AD5474")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1AD4980", Offset = "0x1AD4980", VA = "0x1AD4980")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1AD5A98", Offset = "0x1AD5A98", VA = "0x1AD5A98")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1AD5C18", Offset = "0x1AD5C18", VA = "0x1AD5C18")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1AD5DB4", Offset = "0x1AD5DB4", VA = "0x1AD5DB4")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1AD5EB4", Offset = "0x1AD5EB4", VA = "0x1AD5EB4")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1AD5F44", Offset = "0x1AD5F44", VA = "0x1AD5F44")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1AD6364", Offset = "0x1AD6364", VA = "0x1AD6364")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1AD63DC", Offset = "0x1AD63DC", VA = "0x1AD63DC")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x1AD4DCC", Offset = "0x1AD4DCC", VA = "0x1AD4DCC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1AD5478", Offset = "0x1AD5478", VA = "0x1AD5478")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1AD666C", Offset = "0x1AD666C", VA = "0x1AD666C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1AD6770", Offset = "0x1AD6770", VA = "0x1AD6770")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x1AD6878", Offset = "0x1AD6878", VA = "0x1AD6878")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1AD6534", Offset = "0x1AD6534", VA = "0x1AD6534")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1AD69E4", Offset = "0x1AD69E4", VA = "0x1AD69E4")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1AD6B38", Offset = "0x1AD6B38", VA = "0x1AD6B38")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1AD6CE8", Offset = "0x1AD6CE8", VA = "0x1AD6CE8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1AD3F90", Offset = "0x1AD3F90", VA = "0x1AD3F90")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1AD4104", Offset = "0x1AD4104", VA = "0x1AD4104")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x1AD6E94", Offset = "0x1AD6E94", VA = "0x1AD6E94")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1AD6F60", Offset = "0x1AD6F60", VA = "0x1AD6F60")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x1AD6FF4", Offset = "0x1AD6FF4", VA = "0x1AD6FF4")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x1AD70B8", Offset = "0x1AD70B8", VA = "0x1AD70B8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x1AD715C", Offset = "0x1AD715C", VA = "0x1AD715C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1AD723C", Offset = "0x1AD723C", VA = "0x1AD723C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1AD7D20", Offset = "0x1AD7D20", VA = "0x1AD7D20")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1AD83E0", Offset = "0x1AD83E0", VA = "0x1AD83E0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x1AD85C0", Offset = "0x1AD85C0", VA = "0x1AD85C0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1AD9304", Offset = "0x1AD9304", VA = "0x1AD9304")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1AD7444", Offset = "0x1AD7444", VA = "0x1AD7444")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1AD9424", Offset = "0x1AD9424", VA = "0x1AD9424")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1AD94F8", Offset = "0x1AD94F8", VA = "0x1AD94F8")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1AD95D8", Offset = "0x1AD95D8", VA = "0x1AD95D8")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1AD9990", Offset = "0x1AD9990", VA = "0x1AD9990")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1AD9B8C", Offset = "0x1AD9B8C", VA = "0x1AD9B8C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1AD9CA8", Offset = "0x1AD9CA8", VA = "0x1AD9CA8")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1AD9E70", Offset = "0x1AD9E70", VA = "0x1AD9E70")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1AD9F48", Offset = "0x1AD9F48", VA = "0x1AD9F48")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1ADA07C", Offset = "0x1ADA07C", VA = "0x1ADA07C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1ADA468", Offset = "0x1ADA468", VA = "0x1ADA468")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public enum EmitterChannel
	{
		[Token(Token = "0x400050B")]
		None = -1,
		[Token(Token = "0x400050C")]
		Reserved,
		[Token(Token = "0x400050D")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20000E6")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1ADAE50", Offset = "0x1ADAE50", VA = "0x1ADAE50")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1ADADF4", Offset = "0x1ADADF4", VA = "0x1ADADF4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003CC")]
		public enum FadeState
		{
			[Token(Token = "0x4000F01")]
			Null,
			[Token(Token = "0x4000F02")]
			FadingIn,
			[Token(Token = "0x4000F03")]
			FadingOut,
			[Token(Token = "0x4000F04")]
			Ducking
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EAF8", Offset = "0xE1EAF8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170000E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC3")]
				[Address(RVA = "0x1ADB89C", Offset = "0x1ADB89C", VA = "0x1ADB89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC5")]
				[Address(RVA = "0x1ADB904", Offset = "0x1ADB904", VA = "0x1ADB904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1ADB57C", Offset = "0x1ADB57C", VA = "0x1ADB57C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x1ADB7AC", Offset = "0x1ADB7AC", VA = "0x1ADB7AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1ADB7B0", Offset = "0x1ADB7B0", VA = "0x1ADB7B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x1ADB8A4", Offset = "0x1ADB8A4", VA = "0x1ADB8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB08", Offset = "0xE1EB08")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170000E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC9")]
				[Address(RVA = "0x1ADBD50", Offset = "0x1ADBD50", VA = "0x1ADBD50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCB")]
				[Address(RVA = "0x1ADBDB8", Offset = "0x1ADBDB8", VA = "0x1ADBDB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x1ADB73C", Offset = "0x1ADB73C", VA = "0x1ADB73C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x1ADBBE4", Offset = "0x1ADBBE4", VA = "0x1ADBBE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x1ADBBE8", Offset = "0x1ADBBE8", VA = "0x1ADBBE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x1ADBD58", Offset = "0x1ADBD58", VA = "0x1ADBD58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB18", Offset = "0xE1EB18")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170000EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCF")]
				[Address(RVA = "0x1ADBB74", Offset = "0x1ADBB74", VA = "0x1ADBB74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD1")]
				[Address(RVA = "0x1ADBBDC", Offset = "0x1ADBBDC", VA = "0x1ADBBDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x1ADB768", Offset = "0x1ADB768", VA = "0x1ADB768")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x1ADB90C", Offset = "0x1ADB90C", VA = "0x1ADB90C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x1ADB910", Offset = "0x1ADB910", VA = "0x1ADB910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x1ADBB7C", Offset = "0x1ADBB7C", VA = "0x1ADBB7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700006E")]
		public float volume
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0x1AD92E8", Offset = "0x1AD92E8", VA = "0x1AD92E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x1ADAEF0", Offset = "0x1ADAEF0", VA = "0x1ADAEF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float pitch
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x1ADAF0C", Offset = "0x1ADAF0C", VA = "0x1ADAF0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x1ADAF28", Offset = "0x1ADAF28", VA = "0x1ADAF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public AudioClip clip
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x1ADAF44", Offset = "0x1ADAF44", VA = "0x1ADAF44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D5")]
			[Address(RVA = "0x1ADAF60", Offset = "0x1ADAF60", VA = "0x1ADAF60")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public float time
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x1ADAF7C", Offset = "0x1ADAF7C", VA = "0x1ADAF7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x1AD7220", Offset = "0x1AD7220", VA = "0x1AD7220")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public float length
		{
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0x1ADAF98", Offset = "0x1ADAF98", VA = "0x1ADAF98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000073")]
		public bool loop
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x1ADB050", Offset = "0x1ADB050", VA = "0x1ADB050")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x1ADB06C", Offset = "0x1ADB06C", VA = "0x1ADB06C")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public bool mute
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x1ADB08C", Offset = "0x1ADB08C", VA = "0x1ADB08C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x1ADB0A8", Offset = "0x1ADB0A8", VA = "0x1ADB0A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x1ADB0C8", Offset = "0x1ADB0C8", VA = "0x1ADB0C8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x1ADB0E4", Offset = "0x1ADB0E4", VA = "0x1ADB0E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public bool isPlaying
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x1ADB100", Offset = "0x1ADB100", VA = "0x1ADB100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x1ADB11C", Offset = "0x1ADB11C", VA = "0x1ADB11C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x1AD92D4", Offset = "0x1AD92D4", VA = "0x1AD92D4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1ADB328", Offset = "0x1ADB328", VA = "0x1ADB328")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1AD95D0", Offset = "0x1AD95D0", VA = "0x1AD95D0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x1ADB330", Offset = "0x1ADB330", VA = "0x1ADB330")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1ADB338", Offset = "0x1ADB338", VA = "0x1ADB338")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1AD9DC8", Offset = "0x1AD9DC8", VA = "0x1AD9DC8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1AD6600", Offset = "0x1AD6600", VA = "0x1AD6600")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1ADB340", Offset = "0x1ADB340", VA = "0x1ADB340")]
		public void Play()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1ADB3A0", Offset = "0x1ADB3A0", VA = "0x1ADB3A0")]
		public void Pause()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1AD6454", Offset = "0x1AD6454", VA = "0x1AD6454")]
		public void Stop()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1ADB468", Offset = "0x1ADB468", VA = "0x1ADB468")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x1AD9894", Offset = "0x1AD9894", VA = "0x1AD9894")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x1AD9AD4", Offset = "0x1AD9AD4", VA = "0x1AD9AD4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1AD69A4", Offset = "0x1AD69A4", VA = "0x1AD69A4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1ADB4C0", Offset = "0x1ADB4C0", VA = "0x1ADB4C0")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x1ADB4EC", Offset = "0x1ADB4EC", VA = "0x1ADB4EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE289A8", Offset = "0xE289A8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1ADB5A8", Offset = "0x1ADB5A8", VA = "0x1ADB5A8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1AD6DA0", Offset = "0x1AD6DA0", VA = "0x1AD6DA0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x1AD6E1C", Offset = "0x1AD6E1C", VA = "0x1AD6E1C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1AD6C50", Offset = "0x1AD6C50", VA = "0x1AD6C50")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1AD6A9C", Offset = "0x1AD6A9C", VA = "0x1AD6A9C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1ADB610", Offset = "0x1ADB610", VA = "0x1ADB610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28A0C", Offset = "0xE28A0C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1ADB694", Offset = "0x1ADB694", VA = "0x1ADB694")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28A70", Offset = "0xE28A70")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1ADB794", Offset = "0x1ADB794", VA = "0x1ADB794")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000524")]
		Random,
		[Token(Token = "0x4000525")]
		Sequential
	}
	[Token(Token = "0x20000EA")]
	public enum FreqHint
	{
		[Token(Token = "0x4000527")]
		None,
		[Token(Token = "0x4000528")]
		Wide,
		[Token(Token = "0x4000529")]
		Narrow
	}
	[Token(Token = "0x20000EB")]
	public enum SoundPriority
	{
		[Token(Token = "0x400052B")]
		VeryLow = -2,
		[Token(Token = "0x400052C")]
		Low,
		[Token(Token = "0x400052D")]
		Default,
		[Token(Token = "0x400052E")]
		High,
		[Token(Token = "0x400052F")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20000EC")]
	public class OSPProps
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21DB4", Offset = "0xE21DB4")]
		public bool enableSpatialization;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21DEC", Offset = "0xE21DEC")]
		public bool useFastOverride;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21E24", Offset = "0xE21E24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21E24", Offset = "0xE21E24")]
		public float gain;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21E78", Offset = "0xE21E78")]
		public bool enableInvSquare;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21EB0", Offset = "0xE21EB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21EB0", Offset = "0xE21EB0")]
		public float volumetric;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21F08", Offset = "0xE21F08")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xE21F08", Offset = "0xE21F08")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1ADAE60", Offset = "0x1ADAE60", VA = "0x1ADAE60")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class SoundFX
	{
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21F68", Offset = "0xE21F68")]
		public string name;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21FA0", Offset = "0xE21FA0")]
		public SoundFXNext playback;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE21FD8", Offset = "0xE21FD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21FD8", Offset = "0xE21FD8")]
		public float volume;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2202C", Offset = "0xE2202C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xE2202C", Offset = "0xE2202C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22088", Offset = "0xE22088")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xE22088", Offset = "0xE22088")]
		public Vector2 falloffDistance;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE220E8", Offset = "0xE220E8")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22120", Offset = "0xE22120")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22158", Offset = "0xE22158")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22190", Offset = "0xE22190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22190", Offset = "0xE22190")]
		public float spread;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE221E8", Offset = "0xE221E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE221E8", Offset = "0xE221E8")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2223C", Offset = "0xE2223C")]
		public SoundPriority priority;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22274", Offset = "0xE22274")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xE22274", Offset = "0xE22274")]
		public Vector2 delay;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE222D0", Offset = "0xE222D0")]
		public bool looping;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22308", Offset = "0xE22308")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000077")]
		public int Length
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0x1ADBDC0", Offset = "0x1ADBDC0", VA = "0x1ADBDC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000078")]
		public bool IsValid
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x1ADBDDC", Offset = "0x1ADBDDC", VA = "0x1ADBDDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		public SoundGroup Group
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0x1ADBE80", Offset = "0x1ADBE80", VA = "0x1ADBE80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004FE")]
			[Address(RVA = "0x1ADBE88", Offset = "0x1ADBE88", VA = "0x1ADBE88")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0x1AD91DC", Offset = "0x1AD91DC", VA = "0x1AD91DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007B")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x1AD9210", Offset = "0x1AD9210", VA = "0x1AD9210")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1ADA770", Offset = "0x1ADA770", VA = "0x1ADA770")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x1AD910C", Offset = "0x1AD910C", VA = "0x1AD910C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x1AD9234", Offset = "0x1AD9234", VA = "0x1AD9234")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x1AD91E8", Offset = "0x1AD91E8", VA = "0x1AD91E8")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1ADBEB0", Offset = "0x1ADBEB0", VA = "0x1ADBEB0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1AD9228", Offset = "0x1AD9228", VA = "0x1AD9228")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1ADBFAC", Offset = "0x1ADBFAC", VA = "0x1ADBFAC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1ADC088", Offset = "0x1ADC088", VA = "0x1ADC088")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1ADC19C", Offset = "0x1ADC19C", VA = "0x1ADC19C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1ADC228", Offset = "0x1ADC228", VA = "0x1ADC228")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1ADC2BC", Offset = "0x1ADC2BC", VA = "0x1ADC2BC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1ADC348", Offset = "0x1ADC348", VA = "0x1ADC348")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1ADC3D4", Offset = "0x1ADC3D4", VA = "0x1ADC3D4")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700007C")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0x1ADC44C", Offset = "0x1ADC44C", VA = "0x1ADC44C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public string name
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x1ADC540", Offset = "0x1ADC540", VA = "0x1ADC540")]
			get
			{
				return null;
			}
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x1ADC548", Offset = "0x1ADC548", VA = "0x1ADC548")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public int Length
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x1ADC550", Offset = "0x1ADC550", VA = "0x1ADC550")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700007F")]
		public bool IsValid
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x1ADC594", Offset = "0x1ADC594", VA = "0x1ADC594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1ADC47C", Offset = "0x1ADC47C", VA = "0x1ADC47C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1ADC5CC", Offset = "0x1ADC5CC", VA = "0x1ADC5CC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1ADC604", Offset = "0x1ADC604", VA = "0x1ADC604")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1ADC644", Offset = "0x1ADC644", VA = "0x1ADC644")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1AD3F10", Offset = "0x1AD3F10", VA = "0x1AD3F10")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1ADC68C", Offset = "0x1ADC68C", VA = "0x1ADC68C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1ADC6CC", Offset = "0x1ADC6CC", VA = "0x1ADC6CC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1ADC71C", Offset = "0x1ADC71C", VA = "0x1ADC71C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1ADC754", Offset = "0x1ADC754", VA = "0x1ADC754")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1ADC794", Offset = "0x1ADC794", VA = "0x1ADC794")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1ADC7CC", Offset = "0x1ADC7CC", VA = "0x1ADC7CC")]
		public SoundFXRef()
		{
		}
	}
}
namespace Peacemaker
{
	[Token(Token = "0x20000EF")]
	public class StopAudioOnStopRotation : MonoBehaviour
	{
		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotateObject rotateObject;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FMODContinuousSpeedBasedEvent fmodEvent;

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10253D0", Offset = "0x10253D0", VA = "0x10253D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1025464", Offset = "0x1025464", VA = "0x1025464")]
		private void RotateObject_OnStopRotation(float percentage)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1025480", Offset = "0x1025480", VA = "0x1025480")]
		public StopAudioOnStopRotation()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class ActivateBehavioursBehaviour : AIBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB28", Offset = "0xE1EB28")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<AIBehaviour> <>9__1_0;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<AIBehaviour> <>9__2_0;

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x10C893C", Offset = "0x10C893C", VA = "0x10C893C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x10C8944", Offset = "0x10C8944", VA = "0x10C8944")]
			internal void <Start>b__1_0(AIBehaviour b)
			{
			}

			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x10C8964", Offset = "0x10C8964", VA = "0x10C8964")]
			internal void <Execute>b__2_0(AIBehaviour b)
			{
			}
		}

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<AIBehaviour> activateBehaviours;

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x10C85E0", Offset = "0x10C85E0", VA = "0x10C85E0", Slot = "22")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x10C86E4", Offset = "0x10C86E4", VA = "0x10C86E4", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x10C87DC", Offset = "0x10C87DC", VA = "0x10C87DC", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x10C8868", Offset = "0x10C8868", VA = "0x10C8868")]
		public ActivateBehavioursBehaviour()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class AlarmTriggeredCondition : Condition
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x10CA248", Offset = "0x10CA248", VA = "0x10CA248", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x10CA2F4", Offset = "0x10CA2F4", VA = "0x10CA2F4")]
		public AlarmTriggeredCondition()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class ArmoredUnitHealth : UnitHealth
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<AssetInfoTag> requiredInfoTags;

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x10CA400", Offset = "0x10CA400", VA = "0x10CA400", Slot = "15")]
		public override void LoseHealth(float damage, [Optional] AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x10CA560", Offset = "0x10CA560", VA = "0x10CA560")]
		public ArmoredUnitHealth()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class BotJumpAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMeleeAttack meleeAttack;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x10D6CAC", Offset = "0x10D6CAC", VA = "0x10D6CAC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x10D6D1C", Offset = "0x10D6D1C", VA = "0x10D6D1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x10D6EF0", Offset = "0x10D6EF0", VA = "0x10D6EF0")]
		public BotJumpAnimation()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class BreakThroughEnvironment : MonoBehaviour
	{
		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask environmentLayer;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Collider> colliders;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float breakThroughSpeed;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject breakThroughParticleEffect;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BaseAttack baseAttack;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float disableTime;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float disabledTime;

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x10D70E8", Offset = "0x10D70E8", VA = "0x10D70E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x10D70F4", Offset = "0x10D70F4", VA = "0x10D70F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x10D7170", Offset = "0x10D7170", VA = "0x10D7170")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x10D75BC", Offset = "0x10D75BC", VA = "0x10D75BC")]
		public BreakThroughEnvironment()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class EventTracker : GlobalEventTracker
	{
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB38", Offset = "0xE1EB38")]
		private sealed class <DoConnectToOcclusionCamera>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventTracker <>4__this;

			[Token(Token = "0x170000ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD9")]
				[Address(RVA = "0x1016634", Offset = "0x1016634", VA = "0x1016634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDB")]
				[Address(RVA = "0x101669C", Offset = "0x101669C", VA = "0x101669C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x1015774", Offset = "0x1015774", VA = "0x1015774")]
			[DebuggerHidden]
			public <DoConnectToOcclusionCamera>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x1016520", Offset = "0x1016520", VA = "0x1016520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x1016524", Offset = "0x1016524", VA = "0x1016524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x101663C", Offset = "0x101663C", VA = "0x101663C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB48", Offset = "0xE1EB48")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AIBehaviour> <>9__21_0;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<AIBehaviour> <>9__22_0;

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x1016440", Offset = "0x1016440", VA = "0x1016440")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x1016448", Offset = "0x1016448", VA = "0x1016448")]
			internal bool <SetNumEnemiesAttackingPlayer>b__21_0(AIBehaviour c)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x10164B4", Offset = "0x10164B4", VA = "0x10164B4")]
			internal bool <UpdateEnemyTracker>b__22_0(AIBehaviour c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public new static EventTracker instance;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetUnitTag playerTag;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetBehaviourType attackBehaviourType;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetBehaviourType moveTowardsBehaviourType;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AchievementUnlockData EnemyFirstKillAchievement;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22340", Offset = "0xE22340")]
		public List<AchievementProgressData> EnemyKillAchievements;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float damageDealtByPlayer;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int numEnemiesAttackingPlayer;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int playerKills;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int enemiesKills;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int bulletsFired;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public List<AIBehaviour> currentAttacking;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public List<AIBehaviour> disabledAttacks;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastCheck;

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1015664", Offset = "0x1015664", VA = "0x1015664", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1015704", Offset = "0x1015704", VA = "0x1015704")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28AD4", Offset = "0xE28AD4")]
		private IEnumerator DoConnectToOcclusionCamera()
		{
			return null;
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x10157A0", Offset = "0x10157A0", VA = "0x10157A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1015890", Offset = "0x1015890", VA = "0x1015890")]
		private void Instance_OnRoomChanged(OcclusionContainer obj)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x1015BA0", Offset = "0x1015BA0", VA = "0x1015BA0")]
		private void HandleShotFired()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1015BB0", Offset = "0x1015BB0", VA = "0x1015BB0", Slot = "5")]
		protected override void HandleBehaviourExecutionStarted(AIBehaviourManager manager, AIBehaviour behaviour)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x1015DAC", Offset = "0x1015DAC", VA = "0x1015DAC")]
		private void SetNumEnemiesAttackingPlayer(int val)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x1015894", Offset = "0x1015894", VA = "0x1015894")]
		private void UpdateEnemyTracker()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1015EB8", Offset = "0x1015EB8", VA = "0x1015EB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1015F00", Offset = "0x1015F00", VA = "0x1015F00", Slot = "6")]
		protected override void HandleBehaviourExecutionEnded(AIBehaviourManager manager, AIBehaviour behaviour)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1015FAC", Offset = "0x1015FAC", VA = "0x1015FAC", Slot = "8")]
		protected override void HandleDeath(UnitHealth unitHealth, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x10161E8", Offset = "0x10161E8", VA = "0x10161E8", Slot = "7")]
		protected override void HandleHealthLost(UnitHealth unitHealth, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x101631C", Offset = "0x101631C", VA = "0x101631C")]
		public EventTracker()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class ExtendedSubObjectAttack : MonoBehaviour, IAttack, IAiming
	{
		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BaseAttack> attacks;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AimAtTransform> aimAtTransforms;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ShieldAttack> shieldAttacks;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoSelect;

		[Token(Token = "0x17000080")]
		public bool IsAttacking
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x10217A4", Offset = "0x10217A4", VA = "0x10217A4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public virtual bool AutoAttack
		{
			[Token(Token = "0x6000547")]
			[Address(RVA = "0x1022250", Offset = "0x1022250", VA = "0x1022250", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		public virtual bool BurstAttack
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x1022258", Offset = "0x1022258", VA = "0x1022258", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x10216F4", Offset = "0x10216F4", VA = "0x10216F4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x10218AC", Offset = "0x10218AC", VA = "0x10218AC", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x10219A8", Offset = "0x10219A8", VA = "0x10219A8", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1021AB0", Offset = "0x1021AB0", VA = "0x1021AB0", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1021CB8", Offset = "0x1021CB8", VA = "0x1021CB8", Slot = "7")]
		public bool Attack(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x1021EF8", Offset = "0x1021EF8", VA = "0x1021EF8", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1022010", Offset = "0x1022010", VA = "0x1022010", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1022034", Offset = "0x1022034", VA = "0x1022034", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1022038", Offset = "0x1022038", VA = "0x1022038", Slot = "12")]
		public void SetTargetDirection(Vector3 position)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1022158", Offset = "0x1022158", VA = "0x1022158", Slot = "13")]
		public void ResetTarget()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1022260", Offset = "0x1022260", VA = "0x1022260")]
		public ExtendedSubObjectAttack()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class FinalBoss : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D3")]
		public class Stage
		{
			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SpecialAttack> specialAttacks;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Transform> weaponSpawnPoints;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> activateObjects;

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x22F4190", Offset = "0x22F4190", VA = "0x22F4190")]
			public Stage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D4")]
		public class SpecialAttack
		{
			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WeaponData profile;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float cooldown;

			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAimDuration;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float generalAimDuration;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnType spawnType;

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x22F4174", Offset = "0x22F4174", VA = "0x22F4174")]
			public SpecialAttack()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB58", Offset = "0xE1EB58")]
		private sealed class <DoSetKinematic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FinalBoss <>4__this;

			[Token(Token = "0x170000EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE5")]
				[Address(RVA = "0x22F3E14", Offset = "0x22F3E14", VA = "0x22F3E14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE7")]
				[Address(RVA = "0x22F3E7C", Offset = "0x22F3E7C", VA = "0x22F3E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x22F3C5C", Offset = "0x22F3C5C", VA = "0x22F3C5C")]
			[DebuggerHidden]
			public <DoSetKinematic>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x22F3C88", Offset = "0x22F3C88", VA = "0x22F3C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x22F3C8C", Offset = "0x22F3C8C", VA = "0x22F3C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x22F3E1C", Offset = "0x22F3E1C", VA = "0x22F3E1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB68", Offset = "0xE1EB68")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__27_0;

			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__27_1;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GameObject> <>9__27_2;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<GameObject> <>9__27_3;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<UnitHealth, bool> <>9__32_0;

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x22F3AA0", Offset = "0x22F3AA0", VA = "0x22F3AA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x22F3AA8", Offset = "0x22F3AA8", VA = "0x22F3AA8")]
			internal bool <SetCurrentStage>b__27_0(GameObject o)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x22F3B14", Offset = "0x22F3B14", VA = "0x22F3B14")]
			internal void <SetCurrentStage>b__27_1(GameObject o)
			{
			}

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x22F3B34", Offset = "0x22F3B34", VA = "0x22F3B34")]
			internal bool <SetCurrentStage>b__27_2(GameObject o)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x22F3BA0", Offset = "0x22F3BA0", VA = "0x22F3BA0")]
			internal void <SetCurrentStage>b__27_3(GameObject o)
			{
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x22F3BC0", Offset = "0x22F3BC0", VA = "0x22F3BC0")]
			internal bool <DoSetStageForLimitedTime>b__32_0(UnitHealth c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB78", Offset = "0xE1EB78")]
		private sealed class <DoSetStageForLimitedTime>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FinalBoss <>4__this;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int id;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <prevStageId>5__2;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetHealthPercentage>5__3;

			[Token(Token = "0x170000F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF2")]
				[Address(RVA = "0x22F4104", Offset = "0x22F4104", VA = "0x22F4104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF4")]
				[Address(RVA = "0x22F416C", Offset = "0x22F416C", VA = "0x22F416C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x22F3E84", Offset = "0x22F3E84", VA = "0x22F3E84")]
			[DebuggerHidden]
			public <DoSetStageForLimitedTime>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x22F3EB0", Offset = "0x22F3EB0", VA = "0x22F3EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x22F3EB4", Offset = "0x22F3EB4", VA = "0x22F3EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x22F410C", Offset = "0x22F410C", VA = "0x22F410C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack attack;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeUntilNextAttack;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeUntilStop;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeaponData emptyWeapon;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int currentStageId;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Weapon weapon;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpecialAttack currentSpecialAttack;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Stage> stages;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SmoothDampMovement movement;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform pivotPoint;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve introCurveY;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float introDuration;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float sinSpeed;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float sinScale;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Transform> patrolPoints;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public Transform currentPatrolPoint;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<UnitHealth> cannons;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 initialPivotPointPosition;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float timeAlive;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool stageLocked;

		[Token(Token = "0x17000083")]
		public Stage CurrentStage
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0x1022558", Offset = "0x1022558", VA = "0x1022558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x10225C8", Offset = "0x10225C8", VA = "0x10225C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x1022754", Offset = "0x1022754", VA = "0x1022754")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1022780", Offset = "0x1022780", VA = "0x1022780")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28B38", Offset = "0xE28B38")]
		private IEnumerator DoSetKinematic()
		{
			return null;
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x10227F0", Offset = "0x10227F0", VA = "0x10227F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x1022EF4", Offset = "0x1022EF4", VA = "0x1022EF4")]
		private void SetCurrentStage(int id)
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x1023300", Offset = "0x1023300", VA = "0x1023300")]
		private void Cannon_OnDeath()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x1023350", Offset = "0x1023350", VA = "0x1023350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28B9C", Offset = "0xE28B9C")]
		private IEnumerator DoSetStageForLimitedTime(int id)
		{
			return null;
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x10233D0", Offset = "0x10233D0", VA = "0x10233D0")]
		public FinalBoss()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class GlitchThroughEnvironment : MonoBehaviour
	{
		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float glitchDuration;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material defaultMaterial;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material glitchMaterial;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SmoothDampMovement smoothDampMovement;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float collisionMult;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BaseAttack baseAttack;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Collider collider;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultSpeed;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float initialMaxAIShootDistance;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timeActive;

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x22F614C", Offset = "0x22F614C", VA = "0x22F614C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x22F6158", Offset = "0x22F6158", VA = "0x22F6158")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x22F6368", Offset = "0x22F6368", VA = "0x22F6368")]
		private void Update()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x22F63F4", Offset = "0x22F63F4", VA = "0x22F63F4")]
		public GlitchThroughEnvironment()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class IsBelowCondition : Condition
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxDistance;

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x2300FDC", Offset = "0x2300FDC", VA = "0x2300FDC", Slot = "21")]
		protected override bool IsTrueInternal(ConditionInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x23011F4", Offset = "0x23011F4", VA = "0x23011F4", Slot = "22")]
		public override string GetDescription(UnitTag currentTarget)
		{
			return null;
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x2301274", Offset = "0x2301274", VA = "0x2301274")]
		public IsBelowCondition()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class RobotLookAtEnemies : MonoBehaviour
	{
		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IsDetectedCondition condition;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE223A8", Offset = "0xE223A8")]
		public Transform currentTarget;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPosition;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int numViews;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotateSpeed;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxRotation;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion targetOffset;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion currentOffset;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animator animator;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int takeHit;

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x10B8E60", Offset = "0x10B8E60", VA = "0x10B8E60")]
		private void Start()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x10B9000", Offset = "0x10B9000", VA = "0x10B9000")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x10B9018", Offset = "0x10B9018", VA = "0x10B9018")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x10B96D0", Offset = "0x10B96D0", VA = "0x10B96D0")]
		public RobotLookAtEnemies()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class RobotUpgrade : MonoBehaviour
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon weapon;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandleLoseWeapon handleLoseWeapon;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UpgradeData> upgrades;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GEUnit Unit;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitHealth unitHealth;

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x10BA030", Offset = "0x10BA030", VA = "0x10BA030")]
		public void Start()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x10BA7FC", Offset = "0x10BA7FC", VA = "0x10BA7FC")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x10BAA9C", Offset = "0x10BAA9C", VA = "0x10BAA9C")]
		private void HandleLoseWeapon_OnLoseWeapon()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x10BA1C0", Offset = "0x10BA1C0", VA = "0x10BA1C0")]
		private void InitWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x10BA498", Offset = "0x10BA498", VA = "0x10BA498")]
		private void EnterWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x10BABD4", Offset = "0x10BABD4", VA = "0x10BABD4")]
		private void LeaveWeaponState(UpgradeData upgrade, Weapon weapon)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x10BAF38", Offset = "0x10BAF38", VA = "0x10BAF38")]
		public RobotUpgrade()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class SetMusicParameters : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D8")]
		public class DistrictMusic
		{
			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict district;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetFMODEvent audioEvent;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetFMODEvent elevatorMusic;

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x10C1648", Offset = "0x10C1648", VA = "0x10C1648")]
			public DistrictMusic()
			{
			}
		}

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB88", Offset = "0xE1EB88")]
		private sealed class <DoDelayedInitialization>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0x10C1274", Offset = "0x10C1274", VA = "0x10C1274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFB")]
				[Address(RVA = "0x10C12DC", Offset = "0x10C12DC", VA = "0x10C12DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x10BF620", Offset = "0x10BF620", VA = "0x10BF620")]
			[DebuggerHidden]
			public <DoDelayedInitialization>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x10C11A8", Offset = "0x10C11A8", VA = "0x10C11A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x10C11AC", Offset = "0x10C11AC", VA = "0x10C11AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x10C127C", Offset = "0x10C127C", VA = "0x10C127C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EB98", Offset = "0xE1EB98")]
		private sealed class <DoStartMusicDelayed>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0x10C15D8", Offset = "0x10C15D8", VA = "0x10C15D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001001")]
				[Address(RVA = "0x10C1640", Offset = "0x10C1640", VA = "0x10C1640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x10BFCC0", Offset = "0x10BFCC0", VA = "0x10BFCC0")]
			[DebuggerHidden]
			public <DoStartMusicDelayed>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x10C14A0", Offset = "0x10C14A0", VA = "0x10C14A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x10C14A4", Offset = "0x10C14A4", VA = "0x10C14A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0x10C15E0", Offset = "0x10C15E0", VA = "0x10C15E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBA8", Offset = "0xE1EBA8")]
		private sealed class <DoSetOneTimeParameter>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetAudioParameter parameter;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetMusicParameters <>4__this;

			[Token(Token = "0x170000F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001005")]
				[Address(RVA = "0x10C1430", Offset = "0x10C1430", VA = "0x10C1430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0x10C1498", Offset = "0x10C1498", VA = "0x10C1498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001002")]
			[Address(RVA = "0x10C0AFC", Offset = "0x10C0AFC", VA = "0x10C0AFC")]
			[DebuggerHidden]
			public <DoSetOneTimeParameter>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001003")]
			[Address(RVA = "0x10C12E4", Offset = "0x10C12E4", VA = "0x10C12E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0x10C12E8", Offset = "0x10C12E8", VA = "0x10C12E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0x10C1438", Offset = "0x10C1438", VA = "0x10C1438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventTracker eventTracker;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SetMusicParameters instance;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		public int numEnemiesInRoom;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[ReadOnly]
		public bool playerHoldsWeapon;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public float detectionAlertLevel;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[ReadOnly]
		public float generalAlertLevel;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float maxProximity;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<AssetUnitTag> enemyTags;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> stopBusesOnLevelTransition;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[ReadOnly]
		public float proximityToEnemy;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[ReadOnly]
		public float playerHealthPercentage;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ReadOnly]
		public float stealthKill;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[ReadOnly]
		public int numEnemiesAttackingPlayer;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public float mainVolume;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[ReadOnly]
		public float sfxVolume;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ReadOnly]
		public float musicVolume;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<GenericEvent> events;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AssetAudioParameter numEnemiesInRoomParameter;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AssetAudioParameter playerHoldsWeaponParameter;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AssetAudioParameter alertLevelParameter;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AssetAudioParameter proximityToEnemyParameter;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AssetAudioParameter playerHealthParameter;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AssetAudioParameter stealthKillParameter;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AssetAudioParameter combatKillParameter;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AssetAudioParameter numEnemiesAttackingPlayerParameter;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool isTutorialLevel;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22490", Offset = "0xE22490")]
		public ValueData alarmLevelData;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AssetAudioParameter alarmLevelParameter;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[ReadOnly]
		public int alarmLevel;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE224D8", Offset = "0xE224D8")]
		public ValueData mainVolumeData;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ValueData sfxVolumeData;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ValueData musicVolumeData;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AssetAudioParameter mainVolumeParameter;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AssetAudioParameter sfxVolumeParameter;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AssetAudioParameter musicVolumeParameter;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22510", Offset = "0xE22510")]
		public AssetFMODEvent defaultInGameMusic;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AssetFMODEvent elevatorMusic;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AssetFMODEvent deathMusic;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AssetFMODEvent mainTheme;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ValueData districtKey;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public List<DistrictMusic> districtInGameMusic;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool playMusic;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private StudioEventEmitter inGameMusic;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool initialized;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool playerHasDied;

		[Token(Token = "0x40005CE")]
		private const float stingerDuration = 8f;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float stingerStartTime;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static GameObject levelTransitionObject;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static StudioEventEmitter levelTransitionEventEmitter;

		[Token(Token = "0x40005D2")]
		private const float stealthKillDuration = 0.05f;

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x10BF488", Offset = "0x10BF488", VA = "0x10BF488")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x10BF4F4", Offset = "0x10BF4F4", VA = "0x10BF4F4")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x10BF584", Offset = "0x10BF584", VA = "0x10BF584")]
		private void Start()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x10BF5B0", Offset = "0x10BF5B0", VA = "0x10BF5B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28C00", Offset = "0xE28C00")]
		private IEnumerator DoDelayedInitialization()
		{
			return null;
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x10BF64C", Offset = "0x10BF64C", VA = "0x10BF64C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x10BFBB0", Offset = "0x10BFBB0", VA = "0x10BFBB0")]
		private void Instance_OnResetProgress()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x10BFB40", Offset = "0x10BFB40", VA = "0x10BFB40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28C64", Offset = "0xE28C64")]
		private IEnumerator DoStartMusicDelayed()
		{
			return null;
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x10BFCEC", Offset = "0x10BFCEC", VA = "0x10BFCEC")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x10C0258", Offset = "0x10C0258", VA = "0x10C0258")]
		private void Instance_OnMoveToNextScene()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x10BFBB4", Offset = "0x10BFBB4", VA = "0x10BFBB4")]
		private void StopBuses()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x10C0628", Offset = "0x10C0628", VA = "0x10C0628")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x10C087C", Offset = "0x10C087C", VA = "0x10C087C")]
		private void MeleeDamage_OnAnyMeleeKill(IAttackable obj)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x10C0A80", Offset = "0x10C0A80", VA = "0x10C0A80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28CC8", Offset = "0xE28CC8")]
		private IEnumerator DoSetOneTimeParameter(AssetAudioParameter parameter)
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x10C0B28", Offset = "0x10C0B28", VA = "0x10C0B28")]
		private void UnitHealth_OnAnyDeath(UnitHealth unitHealth, AttackInfo info)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x10C0BC0", Offset = "0x10C0BC0", VA = "0x10C0BC0")]
		private void OnDetectionProgressChanged_OnGlobalDetectionProgressChanged(float progress)
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x10C0BC8", Offset = "0x10C0BC8", VA = "0x10C0BC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x10BFDD0", Offset = "0x10BFDD0", VA = "0x10BFDD0")]
		private void UpdateParameters()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x10BFDB4", Offset = "0x10BFDB4", VA = "0x10BFDB4")]
		private void ResetAllParameters()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x10C1070", Offset = "0x10C1070", VA = "0x10C1070")]
		public void PrepareLevelTransition()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x10C1074", Offset = "0x10C1074", VA = "0x10C1074")]
		public SetMusicParameters()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class StopInGameMusicEvent : GenericEvent
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1025488", Offset = "0x1025488", VA = "0x1025488", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1025590", Offset = "0x1025590", VA = "0x1025590")]
		public StopInGameMusicEvent()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class SwitchUnitTags : MonoBehaviour
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AIBehaviourManager manager;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetUnitTag current;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetUnitTag next;

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1025B40", Offset = "0x1025B40", VA = "0x1025B40")]
		private void Reset()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1025B98", Offset = "0x1025B98", VA = "0x1025B98")]
		private void Start()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1025BA8", Offset = "0x1025BA8", VA = "0x1025BA8")]
		public static void Switch(AIBehaviourManager manager, AssetUnitTag current, AssetUnitTag next)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1025FF8", Offset = "0x1025FF8", VA = "0x1025FF8")]
		public SwitchUnitTags()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class SwitchUnitsEvent : GenericRigidbodyEvent
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag current;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetUnitTag next;

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x1026000", Offset = "0x1026000", VA = "0x1026000", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody rigidbody)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x10260D8", Offset = "0x10260D8", VA = "0x10260D8")]
		public SwitchUnitsEvent()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class SwitchWeapons : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003DC")]
		public class WeaponSelection
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AvatarIKGoal hand;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AvatarIKGoal secondHand;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform shoulder;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon weapon;

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x1026300", Offset = "0x1026300", VA = "0x1026300")]
			public WeaponSelection()
			{
			}
		}

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack baseAttack;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKWeaponAim weaponAim;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<WeaponSelection> weapons;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentWeaponId;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float changeInterval;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastChange;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x10260E0", Offset = "0x10260E0", VA = "0x10260E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1026128", Offset = "0x1026128", VA = "0x1026128")]
		private void SwitchWeapon()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1026288", Offset = "0x1026288", VA = "0x1026288")]
		public SwitchWeapons()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class ReportLeaderboardPoints : GenericEvent, IAction
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0x10B77E0", Offset = "0x10B77E0", VA = "0x10B77E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x10B7950", Offset = "0x10B7950", VA = "0x10B7950")]
		public ReportLeaderboardPoints()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class ReportLeaderboardGameFinished : GenericEvent, IAction
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x10B76E8", Offset = "0x10B76E8", VA = "0x10B76E8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x10B77D8", Offset = "0x10B77D8", VA = "0x10B77D8")]
		public ReportLeaderboardGameFinished()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class SetCurrentLeaderboard : GenericEvent, IAction
	{
		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardBaseData leaderboard;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x10BECF0", Offset = "0x10BECF0", VA = "0x10BECF0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x10BEE4C", Offset = "0x10BEE4C", VA = "0x10BEE4C")]
		public SetCurrentLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class SetCurrentClassLeaderboard : GenericEvent, IAction
	{
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<PlayerClassData, LeaderboardBaseData> leaderboards;

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x10BEA9C", Offset = "0x10BEA9C", VA = "0x10BEA9C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x10BECE8", Offset = "0x10BECE8", VA = "0x10BECE8")]
		public SetCurrentClassLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class DrillAnimation : MonoBehaviour
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseAttack attack;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 deltaRotation;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParticleSystem> drillEffects;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 currentLocalRotation;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool lastAttacking;

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1013CB4", Offset = "0x1013CB4", VA = "0x1013CB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1013FA0", Offset = "0x1013FA0", VA = "0x1013FA0")]
		public DrillAnimation()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class KeepAnimatorStateOnDisable : MonoBehaviour
	{
		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x2301748", Offset = "0x2301748", VA = "0x2301748")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x23017A0", Offset = "0x23017A0", VA = "0x23017A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x23018C0", Offset = "0x23018C0", VA = "0x23018C0")]
		public KeepAnimatorStateOnDisable()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class WeaponAnimation : SerializedMonoBehaviour
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22548", Offset = "0xE22548")]
		public Weapon Weapon;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PickableObject Pickable;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator Animator;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject StaticModel;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject AnimatedModel;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22580", Offset = "0xE22580")]
		public bool ReloadAnimation;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool OnlyTwoHanded;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool HoldAnimation;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool TwoHandedHoldAnimation;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool EmptyAnimation;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool HoldToReload;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool EmptyPercentage;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		public bool UseFullNumbers;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool TwoMagazines;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float smoothTime;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE225B8", Offset = "0xE225B8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE225B8", Offset = "0xE225B8")]
		public List<IAction> HoldAction;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22618", Offset = "0xE22618")]
		public List<IAction> ReleaseAction;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22650", Offset = "0xE22650")]
		public BooleanValueData AnimationShowcase;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int emptyAnimationId;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int emptyAnimationLeftId;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int emptyAnimationRightId;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int emptyId;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int reloadHoldId;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int reloadProgressId;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isHeldTwoHanded;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float currentEmptyMagazine;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentEmptyMagazineLeft;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float currentEmptyMagazineRight;

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1030DBC", Offset = "0x1030DBC", VA = "0x1030DBC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1030E44", Offset = "0x1030E44", VA = "0x1030E44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x10311D8", Offset = "0x10311D8", VA = "0x10311D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x103136C", Offset = "0x103136C", VA = "0x103136C")]
		private void OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1031538", Offset = "0x1031538", VA = "0x1031538")]
		private void OnPreReload()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x10316B0", Offset = "0x10316B0", VA = "0x10316B0")]
		private void OnReload()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1031828", Offset = "0x1031828", VA = "0x1031828")]
		private void OnStopReload()
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x103185C", Offset = "0x103185C", VA = "0x103185C")]
		private void OnEmpty()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x10319B8", Offset = "0x10319B8", VA = "0x10319B8")]
		private void OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1031D50", Offset = "0x1031D50", VA = "0x1031D50")]
		private void SetHoldTwoHanded(bool val)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1031DE4", Offset = "0x1031DE4", VA = "0x1031DE4")]
		private void Update()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1031BC8", Offset = "0x1031BC8", VA = "0x1031BC8")]
		private void SetHold(bool val)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x10321C8", Offset = "0x10321C8", VA = "0x10321C8")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1031B84", Offset = "0x1031B84", VA = "0x1031B84")]
		private void ActivateWeapon()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1031174", Offset = "0x1031174", VA = "0x1031174")]
		private void DeactivateWeapon()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1032288", Offset = "0x1032288", VA = "0x1032288")]
		public WeaponAnimation()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class ApplyDebugMaterial : MonoBehaviour
	{
		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugMaterialConfiguration material;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsDebug;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x10CA2FC", Offset = "0x10CA2FC", VA = "0x10CA2FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x10CA3F8", Offset = "0x10CA3F8", VA = "0x10CA3F8")]
		public ApplyDebugMaterial()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class ContinuousHealthAudio : MonoBehaviour
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter generalHealthParameter;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StudioEventEmitter emitter;

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x10DEBA8", Offset = "0x10DEBA8", VA = "0x10DEBA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x10DECEC", Offset = "0x10DECEC", VA = "0x10DECEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x10DED54", Offset = "0x10DED54", VA = "0x10DED54")]
		public ContinuousHealthAudio()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class ChangeLayer : MonoBehaviour
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask LayerDefault;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask LayerChange;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> Objects;

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x10D9798", Offset = "0x10D9798", VA = "0x10D9798")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x10D9814", Offset = "0x10D9814", VA = "0x10D9814")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x10D9890", Offset = "0x10D9890", VA = "0x10D9890")]
		private void HandleVisorChanged(bool isVisor)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x10D9A50", Offset = "0x10D9A50", VA = "0x10D9A50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x10D9C40", Offset = "0x10D9C40", VA = "0x10D9C40")]
		public ChangeLayer()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class ChangeSceneSettingsOnMapGeneration : MonoBehaviour
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneSettings sceneSettings;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelGenerator levelGenerator;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SceneSettingsData> artStyles;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int artIterator;

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x10DA128", Offset = "0x10DA128", VA = "0x10DA128")]
		private void Start()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x10DA1B4", Offset = "0x10DA1B4", VA = "0x10DA1B4")]
		private void LevelGenerator_OnGeneratedNewWorld()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x10DA290", Offset = "0x10DA290", VA = "0x10DA290")]
		public ChangeSceneSettingsOnMapGeneration()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class DamageTagCondition : IAttackCondition
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetInfoTag InfoTag;

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x100E0A8", Offset = "0x100E0A8", VA = "0x100E0A8", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x100E124", Offset = "0x100E124", VA = "0x100E124")]
		public DamageTagCondition()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class EnemyDeadCondition : IAttackCondition
	{
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1014028", Offset = "0x1014028", VA = "0x1014028", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1014130", Offset = "0x1014130", VA = "0x1014130")]
		public EnemyDeadCondition()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class MultipleDamageTagsCondition : IAttackCondition
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AssetInfoTag> InfoTags;

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x23064D8", Offset = "0x23064D8", VA = "0x23064D8", Slot = "4")]
		public bool Execute(Transform emitter, AttackInfo attack)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x2306614", Offset = "0x2306614", VA = "0x2306614")]
		public MultipleDamageTagsCondition()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class RandomCondition : ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22688", Offset = "0xE22688")]
		public float Chance;

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x10B5834", Offset = "0x10B5834", VA = "0x10B5834")]
		public bool HasChance(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x10B5868", Offset = "0x10B5868", VA = "0x10B5868", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x10B58BC", Offset = "0x10B58BC", VA = "0x10B58BC", Slot = "6")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x10B5910", Offset = "0x10B5910", VA = "0x10B5910", Slot = "5")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x10B5964", Offset = "0x10B5964", VA = "0x10B5964", Slot = "7")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x10B59B8", Offset = "0x10B59B8", VA = "0x10B59B8", Slot = "8")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x10B5A0C", Offset = "0x10B5A0C", VA = "0x10B5A0C")]
		public RandomCondition()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class SelfTagCondition : GenericTriggerCondition
	{
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE226A0", Offset = "0xE226A0")]
		public string Tag;

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x10BE830", Offset = "0x10BE830", VA = "0x10BE830", Slot = "4")]
		public override bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x10BE874", Offset = "0x10BE874", VA = "0x10BE874")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x10BE8C0", Offset = "0x10BE8C0", VA = "0x10BE8C0")]
		public SelfTagCondition()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class TagCondition : ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE226D8", Offset = "0xE226D8")]
		public string Tag;

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x1026314", Offset = "0x1026314", VA = "0x1026314")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x102634C", Offset = "0x102634C", VA = "0x102634C", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1026384", Offset = "0x1026384", VA = "0x1026384", Slot = "6")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x10263BC", Offset = "0x10263BC", VA = "0x10263BC", Slot = "5")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x10263F4", Offset = "0x10263F4", VA = "0x10263F4", Slot = "7")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x102642C", Offset = "0x102642C", VA = "0x102642C", Slot = "8")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1026464", Offset = "0x1026464", VA = "0x1026464")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x10264B0", Offset = "0x10264B0", VA = "0x10264B0")]
		public TagCondition()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class TargetTagCondition : ITargetCondition, ITargetSideCondition
	{
		[Token(Token = "0x20003DD")]
		public enum TargetType
		{
			[Token(Token = "0x4000F53")]
			Self,
			[Token(Token = "0x4000F54")]
			Target
		}

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetType Target;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE22710", Offset = "0xE22710")]
		public string Tag;

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x10264B8", Offset = "0x10264B8", VA = "0x10264B8")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x10264F0", Offset = "0x10264F0", VA = "0x10264F0", Slot = "4")]
		public bool Execute(Transform emitter, Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1026538", Offset = "0x1026538", VA = "0x1026538", Slot = "5")]
		public bool Execute(Transform emitter, Transform target, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1026580", Offset = "0x1026580", VA = "0x1026580")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x10265CC", Offset = "0x10265CC", VA = "0x10265CC")]
		public TargetTagCondition()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class SceneNameCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData scene;

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x10BE270", Offset = "0x10BE270", VA = "0x10BE270", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x10BE310", Offset = "0x10BE310", VA = "0x10BE310")]
		public SceneNameCondition()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class BuildTagCondition : GenericCondition, ICondition, ITriggerCondition, ICollisionCondition, IUnitCondition, ISideCondition
	{
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x10D79B8", Offset = "0x10D79B8", VA = "0x10D79B8")]
		public bool HasTag(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x10D7A2C", Offset = "0x10D7A2C", VA = "0x10D7A2C", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x10D7A60", Offset = "0x10D7A60", VA = "0x10D7A60", Slot = "7")]
		public bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x10D7A94", Offset = "0x10D7A94", VA = "0x10D7A94", Slot = "6")]
		public bool Execute(Transform emitter, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x10D7AC8", Offset = "0x10D7AC8", VA = "0x10D7AC8", Slot = "8")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x10D7AFC", Offset = "0x10D7AFC", VA = "0x10D7AFC", Slot = "9")]
		public bool Execute(Transform emitter, Side side)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x10D7B30", Offset = "0x10D7B30", VA = "0x10D7B30")]
		public BuildTagCondition()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class UnitDisabledCondition : IUnitCondition
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x102B87C", Offset = "0x102B87C", VA = "0x102B87C", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x102B8A8", Offset = "0x102B8A8", VA = "0x102B8A8")]
		public UnitDisabledCondition()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class UnitDeadCondition : IUnitCondition
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x102B83C", Offset = "0x102B83C", VA = "0x102B83C", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x102B874", Offset = "0x102B874", VA = "0x102B874")]
		public UnitDeadCondition()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class DecorationData : ObjectData, IValidation, IStatus, IDatabase
	{
		[Token(Token = "0x20003DE")]
		public enum DecorationType
		{
			[Token(Token = "0x4000F56")]
			StaticCombinable,
			[Token(Token = "0x4000F57")]
			Moving,
			[Token(Token = "0x4000F58")]
			WallAttachment,
			[Token(Token = "0x4000F59")]
			StaticChangeable
		}

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22748", Offset = "0xE22748")]
		public bool isStackOfOtherDecorationData;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public DecorationType Type;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22790", Offset = "0xE22790")]
		public bool hasDynamicCollisionSounds;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> allowedMaterials;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool validatedInPropSpawner;

		[Token(Token = "0x17000084")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x100EAE0", Offset = "0x100EAE0", VA = "0x100EAE0", Slot = "12")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x100EAE8", Offset = "0x100EAE8", VA = "0x100EAE8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x100EAF0", Offset = "0x100EAF0", VA = "0x100EAF0", Slot = "10")]
		public override string GetError(ValidationMode mode)
		{
			return null;
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x100FEC0", Offset = "0x100FEC0", VA = "0x100FEC0", Slot = "11")]
		public override void FixError()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x100FF70", Offset = "0x100FF70", VA = "0x100FF70")]
		public static void MakeInteractable(GameObject selection, DecorationType type)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x100FFF8", Offset = "0x100FFF8", VA = "0x100FFF8")]
		private static void MakeInteractable(GameObject selection, string layer, bool makeCombinedMesh = false, bool hasRigidbody = false, bool isKinematic = false, bool hasNavMeshObstacle = true, bool hasOcclusionProp = true)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x100FFFC", Offset = "0x100FFFC", VA = "0x100FFFC")]
		private static Material GetEnvInlineMaterial()
		{
			return null;
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1010004", Offset = "0x1010004", VA = "0x1010004")]
		private static Material GetObjectInlineMaterial()
		{
			return null;
		}

		[Token(Token = "0x60005E1")]
		public static T CopyComponent<T>(T original, GameObject destination) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x100FA78", Offset = "0x100FA78", VA = "0x100FA78")]
		private string ObjectDataCheckSuccessful(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x101000C", Offset = "0x101000C", VA = "0x101000C", Slot = "17")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x1010014", Offset = "0x1010014", VA = "0x1010014", Slot = "14")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x101001C", Offset = "0x101001C", VA = "0x101001C", Slot = "16")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x1010024", Offset = "0x1010024", VA = "0x1010024", Slot = "15")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1010028", Offset = "0x1010028", VA = "0x1010028")]
		public DecorationData()
		{
		}
	}
	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E094", Offset = "0xE1E094")]
	public class MarkerData : ScriptableObject
	{
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Prefab;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x23056B4", Offset = "0x23056B4", VA = "0x23056B4")]
		public MarkerData()
		{
		}
	}
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E0D0", Offset = "0xE1E0D0")]
	public class ProfilerData : ScriptableObject, IDatabase, IStatus
	{
		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE227C8", Offset = "0xE227C8")]
		public string Name;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture Icon;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22800", Offset = "0xE22800")]
		public int Vert;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Mesh;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Material;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Collider;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x17000085")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x10B4DA8", Offset = "0x10B4DA8", VA = "0x10B4DA8", Slot = "8")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x10B4DB0", Offset = "0x10B4DB0", VA = "0x10B4DB0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x10B4DB8", Offset = "0x10B4DB8", VA = "0x10B4DB8", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x10B4DC0", Offset = "0x10B4DC0", VA = "0x10B4DC0", Slot = "4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x10B4DC8", Offset = "0x10B4DC8", VA = "0x10B4DC8", Slot = "6")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x10B4DD0", Offset = "0x10B4DD0", VA = "0x10B4DD0", Slot = "5")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x10B4DD8", Offset = "0x10B4DD8", VA = "0x10B4DD8")]
		public ProfilerData()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class DebugFadeSwitch : MonoBehaviour
	{
		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode Shortcut;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22848", Offset = "0xE22848")]
		public List<SceneSettingsData> SceneSettings;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectedScene;

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x100E51C", Offset = "0x100E51C", VA = "0x100E51C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x100E5D8", Offset = "0x100E5D8", VA = "0x100E5D8")]
		public DebugFadeSwitch()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E10C", Offset = "0xE1E10C")]
	public class DebugMaterialConfiguration : ScriptableObject
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x100E758", Offset = "0x100E758", VA = "0x100E758")]
		public DebugMaterialConfiguration()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class DestructibleWall : MonoBehaviour, IAttackable
	{
		[Serializable]
		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBB8", Offset = "0xE1EBB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<CombinedMesh> <>9__6_0;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Collider> <>9__6_1;

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x101138C", Offset = "0x101138C", VA = "0x101138C")]
			public <>c()
			{
			}

			[Token(Token = "0x600100B")]
			[Address(RVA = "0x1011394", Offset = "0x1011394", VA = "0x1011394")]
			internal void <LoseHealth>b__6_0(CombinedMesh cm)
			{
			}

			[Token(Token = "0x600100C")]
			[Address(RVA = "0x10113B0", Offset = "0x10113B0", VA = "0x10113B0")]
			internal void <LoseHealth>b__6_1(Collider c)
			{
			}
		}

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CombinedMesh> wallParts;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject explosion;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Collider> colliders;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NavMeshObstacle navMeshObstacle;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isAlive;

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x101102C", Offset = "0x101102C", VA = "0x101102C", Slot = "5")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1011034", Offset = "0x1011034", VA = "0x1011034", Slot = "4")]
		public void LoseHealth(float lives, [Optional] AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x101130C", Offset = "0x101130C", VA = "0x101130C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28D2C", Offset = "0xE28D2C")]
		public void Destruct()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1011310", Offset = "0x1011310", VA = "0x1011310", Slot = "6")]
		public Transform GetRootTransform()
		{
			return null;
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x1011318", Offset = "0x1011318", VA = "0x1011318")]
		public DestructibleWall()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class TelegraphShots : BaseTelegraphShots
	{
		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startScale;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endScale;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool multipleSpawnPoints;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE22880", Offset = "0xE22880")]
		public Weapon weapon;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE228BC", Offset = "0xE228BC")]
		public int spawnPointId;

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10265D4", Offset = "0x10265D4", VA = "0x10265D4", Slot = "8")]
		protected override void VisualizeProgress(float percentage)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1026878", Offset = "0x1026878", VA = "0x1026878")]
		public TelegraphShots()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class TelegraphSniperShot : BaseTelegraphShots
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GE.WeaponConfigurator.LaserPointer laserPointer;

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1026894", Offset = "0x1026894", VA = "0x1026894", Slot = "8")]
		protected override void VisualizeProgress(float percentage)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x102697C", Offset = "0x102697C", VA = "0x102697C")]
		public TelegraphSniperShot()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class RepairActivity : BaseActivity
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator animator;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string parameter;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float repairSpeed;

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x10B75A8", Offset = "0x10B75A8", VA = "0x10B75A8", Slot = "6")]
		public override void Execute(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x10B76C8", Offset = "0x10B76C8", VA = "0x10B76C8", Slot = "4")]
		public override void StartExecution(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x10B76D0", Offset = "0x10B76D0", VA = "0x10B76D0", Slot = "5")]
		public override void EndExecution(GEUnit targetUnit)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x10B76D8", Offset = "0x10B76D8", VA = "0x10B76D8")]
		public RepairActivity()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class ExplosionAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x20003E0")]
		public enum State
		{
			[Token(Token = "0x4000F5E")]
			Idle,
			[Token(Token = "0x4000F5F")]
			Activated,
			[Token(Token = "0x4000F60")]
			Disabled
		}

		[Serializable]
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBC8", Offset = "0xE1EBC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__0_0;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__23_0;

			[Token(Token = "0x600100E")]
			[Address(RVA = "0x101C238", Offset = "0x101C238", VA = "0x101C238")]
			public <>c()
			{
			}

			[Token(Token = "0x600100F")]
			[Address(RVA = "0x101C240", Offset = "0x101C240", VA = "0x101C240")]
			internal void <Start>b__0_0(GameObject obj)
			{
			}

			[Token(Token = "0x6001010")]
			[Address(RVA = "0x101C260", Offset = "0x101C260", VA = "0x101C260")]
			internal void <Attack>b__23_0(GameObject obj)
			{
			}
		}

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseMovement movement;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxAttackDistance;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float attackDelay;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExternalRagdoll externalRagdoll;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitData explosionSource;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject explosionPrefab;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GameObject> destroyOnExplosion;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<GameObject> enableOnActivate;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<AssetInfoTag> infoTags;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Rigidbody> addExtraForce;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float extraForceVelocity;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool explodeOnDeath;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool isAttacking;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GEUnit geUnit;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float timer;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool hasExploded;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE228F8", Offset = "0xE228F8")]
		private State <state>k__BackingField;

		[Token(Token = "0x17000086")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x101BD4C", Offset = "0x101BD4C", VA = "0x101BD4C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public bool AutoAttack
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0x101BD54", Offset = "0x101BD54", VA = "0x101BD54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		public bool BurstAttack
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0x101BD5C", Offset = "0x101BD5C", VA = "0x101BD5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public State state
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0x101C104", Offset = "0x101C104", VA = "0x101C104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D3C", Offset = "0xE28D3C")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x600060F")]
			[Address(RVA = "0x101C10C", Offset = "0x101C10C", VA = "0x101C10C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D4C", Offset = "0xE28D4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x101B70C", Offset = "0x101B70C", VA = "0x101B70C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x101B880", Offset = "0x101B880", VA = "0x101B880")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x101BD64", Offset = "0x101BD64", VA = "0x101BD64", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x101BDD0", Offset = "0x101BDD0", VA = "0x101BDD0", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x101BF14", Offset = "0x101BF14", VA = "0x101BF14", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x101C048", Offset = "0x101C048", VA = "0x101C048", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x101C0A8", Offset = "0x101C0A8", VA = "0x101C0A8", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x101C0AC", Offset = "0x101C0AC", VA = "0x101C0AC", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x101C0B4", Offset = "0x101C0B4", VA = "0x101C0B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x101B890", Offset = "0x101B890", VA = "0x101B890")]
		public void Explode()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x101C114", Offset = "0x101C114", VA = "0x101C114")]
		internal void Deactivate()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x101C120", Offset = "0x101C120", VA = "0x101C120", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x101C128", Offset = "0x101C128", VA = "0x101C128")]
		public ExplosionAttack()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class RobotDisassemble : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBD8", Offset = "0xE1EBD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SkinnedMeshRenderer> <>9__9_0;

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x10B8DC4", Offset = "0x10B8DC4", VA = "0x10B8DC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001013")]
			[Address(RVA = "0x10B8DCC", Offset = "0x10B8DCC", VA = "0x10B8DCC")]
			internal void <UnitHealth_OnDeath>b__9_0(SkinnedMeshRenderer s)
			{
			}
		}

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SkinnedMeshRenderer> skinnedMeshRenderers;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetInfoTag explosionTag;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disassembleCompletelyOnDeath;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ReadOnly]
		public List<UnitHealthPart> damagedParts;

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x10B7C9C", Offset = "0x10B7C9C", VA = "0x10B7C9C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x10B7D24", Offset = "0x10B7D24", VA = "0x10B7D24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x10B8100", Offset = "0x10B8100", VA = "0x10B8100")]
		private void UnitHealth_OnHealthLost(float arg1, AttackInfo info)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x10B8264", Offset = "0x10B8264", VA = "0x10B8264")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x10B8A9C", Offset = "0x10B8A9C", VA = "0x10B8A9C")]
		private void Part_OnHealthLost(UnitHealthPart healthPart, float damage)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x10B821C", Offset = "0x10B821C", VA = "0x10B821C")]
		private void Disassemble(RobotPart robotPart)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x10B8CC8", Offset = "0x10B8CC8", VA = "0x10B8CC8")]
		public RobotDisassemble()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class RobotPart : MonoBehaviour
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollBoneLink ragdollBoneLink;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitHealthPart unitHealthPart;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Joint joint;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float priorityDistanceMultiplicator;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<UnitHealthPart> subUnitHealthParts;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22918", Offset = "0xE22918")]
		public List<RobotPart> childRobotParts;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject disassembleEffect;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool mainPickable;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool canBeDisassembled;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool isPickableAfterDisassemble;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22950", Offset = "0xE22950")]
		public bool disassembleWhileAlive;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[ReadOnly]
		public bool disassembled;

		[Token(Token = "0x400065E")]
		private const float maxAcceptedSpeed = 13f;

		[Token(Token = "0x400065F")]
		private const float maxAcceptedAngularSpeed = 2f;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22998", Offset = "0xE22998")]
		private PickableObject <PickableObject>k__BackingField;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isPickedUp;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastRigidbodyPosition;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion lastRigidbodyRotation;

		[Token(Token = "0x1700008A")]
		public PickableObject PickableObject
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x10B98EC", Offset = "0x10B98EC", VA = "0x10B98EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D5C", Offset = "0xE28D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600061E")]
			[Address(RVA = "0x10B98F4", Offset = "0x10B98F4", VA = "0x10B98F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D6C", Offset = "0xE28D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action OnDisassembled
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0x10B9DB4", Offset = "0x10B9DB4", VA = "0x10B9DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D7C", Offset = "0xE28D7C")]
			add
			{
			}
			[Token(Token = "0x6000627")]
			[Address(RVA = "0x10B9E58", Offset = "0x10B9E58", VA = "0x10B9E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28D8C", Offset = "0xE28D8C")]
			remove
			{
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x10B96E4", Offset = "0x10B96E4", VA = "0x10B96E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x10B96F0", Offset = "0x10B96F0", VA = "0x10B96F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x10B977C", Offset = "0x10B977C", VA = "0x10B977C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x10B8994", Offset = "0x10B8994", VA = "0x10B8994")]
		public void MakePickable()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x10B98FC", Offset = "0x10B98FC", VA = "0x10B98FC")]
		private void Po_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x10B9920", Offset = "0x10B9920", VA = "0x10B9920")]
		private void Po_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x10B9944", Offset = "0x10B9944", VA = "0x10B9944")]
		private void Update()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x10B9A8C", Offset = "0x10B9A8C", VA = "0x10B9A8C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x10B9C64", Offset = "0x10B9C64", VA = "0x10B9C64")]
		private void BreakToEnsureStability()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x10B85E0", Offset = "0x10B85E0", VA = "0x10B85E0")]
		internal void Disassemble(bool isAlive, bool disassembleCompletelyOnDeath = false)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x10B9EFC", Offset = "0x10B9EFC", VA = "0x10B9EFC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28D9C", Offset = "0xE28D9C")]
		public void DebugDisassemble()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x10B8C14", Offset = "0x10B8C14", VA = "0x10B8C14")]
		public bool ContainsHealthPart(UnitHealthPart healthPart)
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x10B9F20", Offset = "0x10B9F20", VA = "0x10B9F20")]
		public RobotPart()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x10B9FA8", Offset = "0x10B9FA8", VA = "0x10B9FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28DAC", Offset = "0xE28DAC")]
		private bool <Update>b__26_0(RagdollPerformance.RagdollInfo r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000123")]
	public class RotateOnMissingLegs : MonoBehaviour
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 missingLegOffset;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 missingLegRotationOffset;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool disableSpiderOnAllLegsLost;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExplosionAttack explosionAttack;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnitHealth health;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion initialLocalRotation;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> localOffsets;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 currentRotation;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 currentLocalOffset;

		[Token(Token = "0x4000670")]
		private const float lerpSpeed = 7f;

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x10BAF40", Offset = "0x10BAF40", VA = "0x10BAF40")]
		private void Start()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x10BB180", Offset = "0x10BB180", VA = "0x10BB180")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x10BB288", Offset = "0x10BB288", VA = "0x10BB288")]
		private void Update()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x10BB894", Offset = "0x10BB894", VA = "0x10BB894")]
		public RotateOnMissingLegs()
		{
		}
	}
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E160", Offset = "0xE1E160")]
	public class SpiderHangFromCeiling : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBE8", Offset = "0xE1EBE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SpiderLeg> <>9__4_0;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SpiderLeg> <>9__6_0;

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x10C4964", Offset = "0x10C4964", VA = "0x10C4964")]
			public <>c()
			{
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x10C496C", Offset = "0x10C496C", VA = "0x10C496C")]
			internal void <Start>b__4_0(SpiderLeg leg)
			{
			}

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x10C4988", Offset = "0x10C4988", VA = "0x10C4988")]
			internal void <ActivateBehaviour_OnStartExecution>b__6_0(SpiderLeg leg)
			{
			}
		}

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ActivateBehavioursBehaviour activateBehaviour;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<SpiderLeg> spiderLegs;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<IAction> OnReleaseActions;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x10C4404", Offset = "0x10C4404", VA = "0x10C4404")]
		private void Start()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x10C455C", Offset = "0x10C455C", VA = "0x10C455C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x10C4688", Offset = "0x10C4688", VA = "0x10C4688")]
		private void ActivateBehaviour_OnStartExecution()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x10C47F8", Offset = "0x10C47F8", VA = "0x10C47F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x10C4890", Offset = "0x10C4890", VA = "0x10C4890")]
		public SpiderHangFromCeiling()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class SpiderMovement : AnimatedMovement
	{
		[Token(Token = "0x20003E4")]
		public class LegTarget
		{
			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 initialLocalPosition;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int initialPosition;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpiderLeg spiderLeg;

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x10C4B80", Offset = "0x10C4B80", VA = "0x10C4B80")]
			public LegTarget(Transform transform, Vector3 initialLocalPosition, int currentPosition, SpiderLeg spiderLeg)
			{
			}
		}

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE229B8", Offset = "0xE229B8")]
		public List<SpiderLeg> spiderLegs;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<LegTarget> legTargets;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[ExposedInUnitDesigner]
		public Transform hip;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[ExposedInUnitDesigner]
		public float legLength;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[ExposedInUnitDesigner]
		public float liftLegHeight;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22A20", Offset = "0xE22A20")]
		public bool isDizzy;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector3 finalMovement;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool fallInAir;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float currentTime;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float timeSinceWaitingSpider;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Dictionary<SpiderLeg, int> offsets;

		[Token(Token = "0x14000019")]
		public event Action<Transform> OnLegChange
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0x10C4BE8", Offset = "0x10C4BE8", VA = "0x10C4BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28DBC", Offset = "0xE28DBC")]
			add
			{
			}
			[Token(Token = "0x6000637")]
			[Address(RVA = "0x10C4C90", Offset = "0x10C4C90", VA = "0x10C4C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28DCC", Offset = "0xE28DCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x10C49A0", Offset = "0x10C49A0", VA = "0x10C49A0", Slot = "45")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x10C4D38", Offset = "0x10C4D38", VA = "0x10C4D38", Slot = "46")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x10C4D7C", Offset = "0x10C4D7C", VA = "0x10C4D7C", Slot = "42")]
		protected override void FollowNMA()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x10C5B50", Offset = "0x10C5B50", VA = "0x10C5B50")]
		public SpiderMovement()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class StopMovementOnDamage : MonoBehaviour
	{
		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseMovement movement;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float stopTime;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeSinceDizzy;

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1025598", Offset = "0x1025598", VA = "0x1025598")]
		private void Awake()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x102563C", Offset = "0x102563C", VA = "0x102563C")]
		private void UnitHealth_OnHealthLost(float arg1, AttackInfo arg2)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1025668", Offset = "0x1025668", VA = "0x1025668")]
		private void Update()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x10256CC", Offset = "0x10256CC", VA = "0x10256CC")]
		public StopMovementOnDamage()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class EntityCounter : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003E5")]
		public class AmountInfo
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetUnitTag Tag;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationData Localisation;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Amount;

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x10155F8", Offset = "0x10155F8", VA = "0x10155F8")]
			public AmountInfo()
			{
			}
		}

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22A68", Offset = "0xE22A68")]
		public Text Label;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22AA0", Offset = "0xE22AA0")]
		public LString Title;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LString Success;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22AD8", Offset = "0xE22AD8")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE22AD8", Offset = "0xE22AD8")]
		public List<AmountInfo> AmountCondition;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22B34", Offset = "0xE22B34")]
		public bool DeleteItems;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool DeactivateSelf;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22B6C", Offset = "0xE22B6C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE22B6C", Offset = "0xE22B6C")]
		[InlineProperty]
		public List<IAction> Actions;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22BDC", Offset = "0xE22BDC")]
		public HashSet<IEntity> Entities;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Dictionary<AssetUnitTag, HashSet<IEntity>> Groups;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IEntity _entity;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _valid;

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1014308", Offset = "0x1014308", VA = "0x1014308")]
		private void Start()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1014690", Offset = "0x1014690", VA = "0x1014690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x101470C", Offset = "0x101470C", VA = "0x101470C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1014710", Offset = "0x1014710", VA = "0x1014710")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1015104", Offset = "0x1015104", VA = "0x1015104")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x101438C", Offset = "0x101438C", VA = "0x101438C")]
		private void RefreshConditions([Optional] LanguageData language)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1014C50", Offset = "0x1014C50", VA = "0x1014C50")]
		private void CheckCondition()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1015510", Offset = "0x1015510", VA = "0x1015510")]
		public EntityCounter()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class BackgroundCity : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E6")]
		public class Sky
		{
			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict district;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SkyData skybox;

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x10D5EB4", Offset = "0x10D5EB4", VA = "0x10D5EB4")]
			public Sky()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EBF8", Offset = "0xE1EBF8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict currentDistrict;

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x10D5D50", Offset = "0x10D5D50", VA = "0x10D5D50")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x10D5E2C", Offset = "0x10D5E2C", VA = "0x10D5E2C")]
			internal bool <Awake>b__0(Sky s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BackgroundCity instance;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject city;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Sky> skyboxes;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkyData defaultSkybox;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sky currentSky;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x10D5C14", Offset = "0x10D5C14", VA = "0x10D5C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x10D5D58", Offset = "0x10D5D58", VA = "0x10D5D58")]
		public void EnableBackgroundCity(bool val)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x10D5DBC", Offset = "0x10D5DBC", VA = "0x10D5DBC")]
		public BackgroundCity()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class DoorHandling : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003E8")]
		public enum LockType
		{
			[Token(Token = "0x4000F74")]
			LockInBattle,
			[Token(Token = "0x4000F75")]
			Manually
		}

		[Serializable]
		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC08", Offset = "0xE1EC08")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__18_0;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GEUnit> <>9__43_0;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GEUnit> <>9__49_0;

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x1013B68", Offset = "0x1013B68", VA = "0x1013B68")]
			public <>c()
			{
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x1013B70", Offset = "0x1013B70", VA = "0x1013B70")]
			internal bool <Instance_OnRoomChanged>b__18_0(GEUnit c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x1013BDC", Offset = "0x1013BDC", VA = "0x1013BDC")]
			internal bool <OnTriggerEnter>b__43_0(GEUnit c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x1013C48", Offset = "0x1013C48", VA = "0x1013C48")]
			internal bool <RemoveUnit>b__49_0(GEUnit c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator doorAnim;

		[Token(Token = "0x4000696")]
		private const float minCloseDistanceToDoor = 1.5f;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RoomConnector roomConnector;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LockType lockType;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isLocked;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter doorLeft;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshFilter doorRight;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshFilter panelLocked;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshFilter panelUnlocked;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AssetUnitTag requiredTag;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public bool entered;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NavMeshObstacle navMeshOstacle;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float unlockDoorTimestamp;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool debugLock;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[ReadOnly]
		public List<GEUnit> currentUnits;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ReadOnly]
		public List<GEUnit> disabledObjects;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<GenericEvent> DoorLockedEvents;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<GenericEvent> DoorUnlockedEvents;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<GenericEvent> DoorOpenEvents;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<GenericEvent> DoorCloseEvents;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<GenericEvent> DoorFailedToOpenEvents;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool roomCenterPointSetUp;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 roomCenterPoint;

		[Token(Token = "0x40006AD")]
		private const float maxLockTime = 45f;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[ReadOnly]
		[SerializeField]
		private float lockTime;

		[Token(Token = "0x40006AF")]
		private const float doorCloseTimer = 0.5f;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float closeAfterBattleTimer;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isOpen;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool closeAfterBattle;

		[Token(Token = "0x1400001A")]
		public event Action<bool> OnDoorLocked
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x1012A40", Offset = "0x1012A40", VA = "0x1012A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28DDC", Offset = "0xE28DDC")]
			add
			{
			}
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x1012AE4", Offset = "0x1012AE4", VA = "0x1012AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28DEC", Offset = "0xE28DEC")]
			remove
			{
			}
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1011B50", Offset = "0x1011B50", VA = "0x1011B50")]
		public void UpdateDoorModels(AssetRoomConnector roomConnectorInfo, RoomConnector.Type type)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1011BDC", Offset = "0x1011BDC", VA = "0x1011BDC")]
		internal void SetDoorPanels(Mesh panelClosed, Mesh panelOpen)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1011CD0", Offset = "0x1011CD0", VA = "0x1011CD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x10120B0", Offset = "0x10120B0", VA = "0x10120B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x10121A0", Offset = "0x10121A0", VA = "0x10121A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1012290", Offset = "0x1012290", VA = "0x1012290")]
		private void Instance_OnRoomChanged(OcclusionContainer occlusionContainer)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x10126A4", Offset = "0x10126A4", VA = "0x10126A4")]
		public void LockDoor()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1012818", Offset = "0x1012818", VA = "0x1012818")]
		public void UnlockDoor()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1012B88", Offset = "0x1012B88", VA = "0x1012B88")]
		private bool LeadsToDeactivatedRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1012D84", Offset = "0x1012D84", VA = "0x1012D84")]
		private bool GetPlayerInfrontOfDoor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1012F68", Offset = "0x1012F68", VA = "0x1012F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1013584", Offset = "0x1013584", VA = "0x1013584")]
		private GEUnit GetUnit(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x10136EC", Offset = "0x10136EC", VA = "0x10136EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x1012590", Offset = "0x1012590", VA = "0x1012590")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1011E68", Offset = "0x1011E68", VA = "0x1011E68")]
		private void CloseDoor()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1013920", Offset = "0x1013920", VA = "0x1013920")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1013438", Offset = "0x1013438", VA = "0x1013438")]
		private void RemoveUnit(GEUnit unit)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x10139E4", Offset = "0x10139E4", VA = "0x10139E4")]
		public DoorHandling()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class FallingObject : MonoBehaviour
	{
		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rb;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1022454", Offset = "0x1022454", VA = "0x1022454")]
		private void Start()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x10224F8", Offset = "0x10224F8", VA = "0x10224F8")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1022550", Offset = "0x1022550", VA = "0x1022550")]
		public FallingObject()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class MoveInDirection : MonoBehaviour
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 direction;

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x2306414", Offset = "0x2306414", VA = "0x2306414")]
		private void Update()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x23064D0", Offset = "0x23064D0", VA = "0x23064D0")]
		public MoveInDirection()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class RenderBackground : MonoBehaviour
	{
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x10B75A0", Offset = "0x10B75A0", VA = "0x10B75A0")]
		public RenderBackground()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class SpawnShootingRangeBot : MonoBehaviour
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spawnPosition;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform spawnContainer;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitData spawnEnemy;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnitHealth unitHealth;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 spawnPosVector;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool spawnPossible;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool respawning;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float time;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x10C3AD0", Offset = "0x10C3AD0", VA = "0x10C3AD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x10C3B14", Offset = "0x10C3B14", VA = "0x10C3B14")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x10C3B20", Offset = "0x10C3B20", VA = "0x10C3B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x10C3D3C", Offset = "0x10C3D3C", VA = "0x10C3D3C")]
		private void DestroyRemainingBots()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x10C3CE4", Offset = "0x10C3CE4", VA = "0x10C3CE4")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x10C3B44", Offset = "0x10C3B44", VA = "0x10C3B44")]
		private void SpawnBot()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x10C3FB4", Offset = "0x10C3FB4", VA = "0x10C3FB4")]
		public SpawnShootingRangeBot()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class OnAnyUnitAttackingPlayer : GenericEventEmitter
	{
		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool state;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x10AFE44", Offset = "0x10AFE44", VA = "0x10AFE44")]
		private void Update()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x10AFF1C", Offset = "0x10AFF1C", VA = "0x10AFF1C")]
		public OnAnyUnitAttackingPlayer()
		{
		}
	}
	[Token(Token = "0x200012F")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E174", Offset = "0xE1E174")]
	public class OnDistrictEvent : GenericEventEmitter
	{
		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AssetDistrict district;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x10AFF24", Offset = "0x10AFF24", VA = "0x10AFF24")]
		private void Awake()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x10B0020", Offset = "0x10B0020", VA = "0x10B0020")]
		public OnDistrictEvent()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class OnTutorialFinishedEvent : GenericEventEmitter
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TutorialPoint tutorialPoint;

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x10B0028", Offset = "0x10B0028", VA = "0x10B0028", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x10B00C0", Offset = "0x10B00C0", VA = "0x10B00C0")]
		private void TutorialPoint_OnTutorialPointFinished()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x10B00CC", Offset = "0x10B00CC", VA = "0x10B00CC")]
		public OnTutorialFinishedEvent()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class ActivateLift : MonoBehaviour
	{
		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LiftMovement lift;

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x10C8984", Offset = "0x10C8984", VA = "0x10C8984")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE28DFC", Offset = "0xE28DFC")]
		private void Activate()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x10C89A4", Offset = "0x10C89A4", VA = "0x10C89A4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x10C89C4", Offset = "0x10C89C4", VA = "0x10C89C4")]
		public ActivateLift()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class CallLiftEvent : GenericEvent, IAction
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LiftMovement lift;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x10D96F8", Offset = "0x10D96F8", VA = "0x10D96F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x10D9790", Offset = "0x10D9790", VA = "0x10D9790")]
		public CallLiftEvent()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class BreakableWall : MonoBehaviour
	{
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject intact;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject broken;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Rigidbody> breakableRigidbodies;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float forceMultiplier;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x10D763C", Offset = "0x10D763C", VA = "0x10D763C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x10D76D0", Offset = "0x10D76D0", VA = "0x10D76D0")]
		private void UnitHealth_OnHealthLost(float damage, AttackInfo info)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x10D79A8", Offset = "0x10D79A8", VA = "0x10D79A8")]
		public BreakableWall()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class Currency : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC18", Offset = "0xE1EC18")]
		private sealed class <DoReleaseAndDestroy>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Currency <>4__this;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001025")]
				[Address(RVA = "0x100D640", Offset = "0x100D640", VA = "0x100D640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001027")]
				[Address(RVA = "0x100D6A8", Offset = "0x100D6A8", VA = "0x100D6A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x100D330", Offset = "0x100D330", VA = "0x100D330")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001023")]
			[Address(RVA = "0x100D3D4", Offset = "0x100D3D4", VA = "0x100D3D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x100D3D8", Offset = "0x100D3D8", VA = "0x100D3D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x100D648", Offset = "0x100D648", VA = "0x100D648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GenericEvent> pickUpCompleteEvents;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int addAmount;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool allowDestruction;

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x100D1A8", Offset = "0x100D1A8", VA = "0x100D1A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x100D294", Offset = "0x100D294", VA = "0x100D294")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x100D2C0", Offset = "0x100D2C0", VA = "0x100D2C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28E34", Offset = "0xE28E34")]
		private IEnumerator DoReleaseAndDestroy()
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x100D35C", Offset = "0x100D35C", VA = "0x100D35C")]
		public Currency()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class CustomUsabelItem : UsableItem
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22C8C", Offset = "0xE22C8C")]
		public TextMeshProUGUI InfoText;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22CC4", Offset = "0xE22CC4")]
		public bool singleUse;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public Color UsableColor;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public Color UsedColor;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public LString UsableDescription;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public LString UsedDescription;

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x100D6B0", Offset = "0x100D6B0", VA = "0x100D6B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x100D750", Offset = "0x100D750", VA = "0x100D750")]
		private void Start()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x100D7CC", Offset = "0x100D7CC", VA = "0x100D7CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x100D848", Offset = "0x100D848", VA = "0x100D848", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x100D6B4", Offset = "0x100D6B4", VA = "0x100D6B4")]
		private void RefreshDescription([Optional] LanguageData data)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x100D97C", Offset = "0x100D97C", VA = "0x100D97C")]
		public CustomUsabelItem()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class DebugFPSControls : MonoBehaviour
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sensitivity;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCam;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TrackedPoseDriver> trackedPoseDrivers;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRMovement vrMovement;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isSetUp;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 handOffsetLeft;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 handOffsetRight;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHandPosition;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightHandPosition;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayerHand leftHand;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PlayerHand rightHand;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UseAbility useAbilityLeftHand;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UseAbility useAbilityRightHand;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float handUpwardsModifier;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 leftHandRotation;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 rightHandRotation;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AssetUnitTag enemyTag;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private OnJoystickMove joystickMoveEvent;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float x;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float y;

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x100E12C", Offset = "0x100E12C", VA = "0x100E12C")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x100E410", Offset = "0x100E410", VA = "0x100E410")]
		public DebugFPSControls()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class DistrictAppearanceProbability : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EB")]
		public class DistrictValues
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetDistrict District;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2713C", Offset = "0xE2713C")]
			public List<float> LevelProbabilities;

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x1011AE0", Offset = "0x1011AE0", VA = "0x1011AE0")]
			public DistrictValues()
			{
			}
		}

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22CFC", Offset = "0xE22CFC")]
		[SerializeField]
		protected List<DistrictValues> Districts;

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x10117EC", Offset = "0x10117EC", VA = "0x10117EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1011A70", Offset = "0x1011A70", VA = "0x1011A70")]
		public DistrictAppearanceProbability()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E188", Offset = "0xE1E188")]
	public class FloorPosition : MonoBehaviour
	{
		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetFloorHeight;

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x22F4200", Offset = "0x22F4200", VA = "0x22F4200")]
		private void Update()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x22F4300", Offset = "0x22F4300", VA = "0x22F4300")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x22F4204", Offset = "0x22F4204", VA = "0x22F4204")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x22F4304", Offset = "0x22F4304", VA = "0x22F4304")]
		public FloorPosition()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class Healthkit : UsableItem
	{
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22D48", Offset = "0xE22D48")]
		public TextMeshProUGUI InfoText;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22D80", Offset = "0xE22D80")]
		public float healAmount;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool singleUse;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Color UsableColor;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Color UsedColor;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public LString UsableDescription;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public LString UsedDescription;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string MultiplierKey;

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x22FD36C", Offset = "0x22FD36C", VA = "0x22FD36C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x22FD40C", Offset = "0x22FD40C", VA = "0x22FD40C")]
		private void Start()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x22FD488", Offset = "0x22FD488", VA = "0x22FD488")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x22FD504", Offset = "0x22FD504", VA = "0x22FD504", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x22FD370", Offset = "0x22FD370", VA = "0x22FD370")]
		private void RefreshDescription([Optional] LanguageData data)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x22FD750", Offset = "0x22FD750", VA = "0x22FD750")]
		public Healthkit()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class IgnoreExplosionForce : MonoBehaviour, INotAffectedByExplosionForce
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x22FF6AC", Offset = "0x22FF6AC", VA = "0x22FF6AC")]
		public IgnoreExplosionForce()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class Ladder : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003EC")]
		public class PickUpInfo
		{
			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timestamp;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IPicking picking;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float prevProgress;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lerpSpeed;

			[Token(Token = "0x170000FB")]
			public float Progress
			{
				[Token(Token = "0x600102A")]
				[Address(RVA = "0x230233C", Offset = "0x230233C", VA = "0x230233C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x23022F0", Offset = "0x23022F0", VA = "0x23022F0")]
			public PickUpInfo(float timestamp, IPicking picking, float lerpSpeed)
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC28", Offset = "0xE1EC28")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform hand;

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x23022E8", Offset = "0x23022E8", VA = "0x23022E8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x2302478", Offset = "0x2302478", VA = "0x2302478")]
			internal float <OnVisualModelUpdate>b__0(Transform t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PickableObject pickableObject;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Transform> ladderPoints;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lerpSpeed;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float rotationBasedOffset;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericEvent> onGrabCompleteEvents;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IPicking currentPicking;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Transform, PickUpInfo> handPickUp;

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x23018C8", Offset = "0x23018C8", VA = "0x23018C8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x2301920", Offset = "0x2301920", VA = "0x2301920")]
		private void Start()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x23019F8", Offset = "0x23019F8", VA = "0x23019F8")]
		private void PickableObject_OnEndClimb(IPicking picking)
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x2301CC0", Offset = "0x2301CC0", VA = "0x2301CC0")]
		private void PickableObject_OnStartClimb(IPicking picking)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x2301DB8", Offset = "0x2301DB8", VA = "0x2301DB8")]
		private void OnVisualModelUpdate(Transform hand)
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x23023D4", Offset = "0x23023D4", VA = "0x23023D4")]
		public Ladder()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E19C", Offset = "0xE1E19C")]
	public class LiftMovement : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC38", Offset = "0xE1EC38")]
		private sealed class <DoWait>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftMovement <>4__this;

			[Token(Token = "0x170000FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001030")]
				[Address(RVA = "0x23052E4", Offset = "0x23052E4", VA = "0x23052E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001032")]
				[Address(RVA = "0x230534C", Offset = "0x230534C", VA = "0x230534C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x230512C", Offset = "0x230512C", VA = "0x230512C")]
			[DebuggerHidden]
			public <DoWait>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x2305218", Offset = "0x2305218", VA = "0x2305218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102F")]
			[Address(RVA = "0x230521C", Offset = "0x230521C", VA = "0x230521C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x23052EC", Offset = "0x23052EC", VA = "0x23052EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform[] waypoints;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float speed;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 movementVector;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 distanceVector;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool returnIfPlayerJumpsOff;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22DC8", Offset = "0xE22DC8")]
		public bool activeOnStart;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22E00", Offset = "0xE22E00")]
		public bool loop;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool stopOnEachWaypoint;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22E38", Offset = "0xE22E38")]
		public float waitTime;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float acceptableDistance;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22E70", Offset = "0xE22E70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22E70", Offset = "0xE22E70")]
		[InlineProperty]
		public List<GenericEvent> startEvents;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22EE0", Offset = "0xE22EE0")]
		[InlineProperty]
		public List<GenericEvent> stopEvents;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<GenericEvent> moveUpEvents;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<GenericEvent> moveDownEvents;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[ReadOnly]
		public bool waypointReached;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[ReadOnly]
		public bool reverse;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[ReadOnly]
		public int currentTargetWaypoint;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int waypointIncrement;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool isPaused;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float pauseTimestamp;

		[Token(Token = "0x4000711")]
		private const float moveDelay = 1.5f;

		[Token(Token = "0x1400001B")]
		public event Action<bool> OnActivateLift
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x23043E0", Offset = "0x23043E0", VA = "0x23043E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28E98", Offset = "0xE28E98")]
			add
			{
			}
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x2304484", Offset = "0x2304484", VA = "0x2304484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28EA8", Offset = "0xE28EA8")]
			remove
			{
			}
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x23000CC", Offset = "0x23000CC", VA = "0x23000CC")]
		public void Activate(bool val)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x2304710", Offset = "0x2304710", VA = "0x2304710")]
		private void Start()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x2304780", Offset = "0x2304780", VA = "0x2304780")]
		private void Update()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x2304B8C", Offset = "0x2304B8C", VA = "0x2304B8C")]
		private void UpdateLiftMovement()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x2304A8C", Offset = "0x2304A8C", VA = "0x2304A8C")]
		private void CheckReturn()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x2304CF8", Offset = "0x2304CF8", VA = "0x2304CF8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x2304E28", Offset = "0x2304E28", VA = "0x2304E28")]
		private void OnCollisionExit(Collision other)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x2304F60", Offset = "0x2304F60", VA = "0x2304F60")]
		public void CallToWaypoint(int id)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x23047BC", Offset = "0x23047BC", VA = "0x23047BC")]
		private void WaypointVectorCalculation()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x2304528", Offset = "0x2304528", VA = "0x2304528")]
		private void UpdateTargetVectors()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x2304884", Offset = "0x2304884", VA = "0x2304884")]
		private void WaypointDistance()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x23050BC", Offset = "0x23050BC", VA = "0x23050BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28EB8", Offset = "0xE28EB8")]
		private IEnumerator DoWait()
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x2305158", Offset = "0x2305158", VA = "0x2305158")]
		public LiftMovement()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class RefreshRate : MonoBehaviour
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x10B5C04", Offset = "0x10B5C04", VA = "0x10B5C04")]
		private void Start()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x10B5D58", Offset = "0x10B5D58", VA = "0x10B5D58")]
		public RefreshRate()
		{
		}
	}
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E1B0", Offset = "0xE1E1B0")]
	public class AssetRoomConnector : ScriptableObject
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh doorEntranceLeft;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh doorEntranceRight;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh doorExitLeft;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh doorExitRight;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh panelClosed;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh panelOpen;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject closedWallGameObject;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 closedWallLocalPosition;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 closedWallLocalRotation;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x10CA5D8", Offset = "0x10CA5D8", VA = "0x10CA5D8")]
		public AssetRoomConnector()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E1EC", Offset = "0xE1E1EC")]
	public class RotateTowardsImaginaryElbow : MonoBehaviour
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform imaginaryElbow;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform wrist;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float percentage;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxAngle;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float armLength;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float angleOffset;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Side side;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion initialRotation;

		[Token(Token = "0x1700008B")]
		private float halfArmLength
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x10BBA0C", Offset = "0x10BBA0C", VA = "0x10BBA0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x10BBA1C", Offset = "0x10BBA1C", VA = "0x10BBA1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x10BBA58", Offset = "0x10BBA58", VA = "0x10BBA58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x10BBFD0", Offset = "0x10BBFD0", VA = "0x10BBFD0")]
		public RotateTowardsImaginaryElbow()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E200", Offset = "0xE1E200")]
	public class SceneIndependentStateHandler : MonoBehaviour
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x10BE260", Offset = "0x10BE260", VA = "0x10BE260")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x10BE264", Offset = "0x10BE264", VA = "0x10BE264")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x10BE268", Offset = "0x10BE268", VA = "0x10BE268")]
		public SceneIndependentStateHandler()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class ServerDisplayBone : MonoBehaviour
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interval;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentMagnitude;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastUpdate;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x10BE8C8", Offset = "0x10BE8C8", VA = "0x10BE8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x10BE904", Offset = "0x10BE904", VA = "0x10BE904")]
		private void Update()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x10BEA7C", Offset = "0x10BEA7C", VA = "0x10BEA7C")]
		public ServerDisplayBone()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class PracticeTarget : MonoBehaviour
	{
		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnitHealth practiceTargetHealth;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer practiceTargetMeshRenderer;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float reactivationTime;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material inactiveMat;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject practiceTargetContainer;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LiftMovement liftMove;

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x10B2970", Offset = "0x10B2970", VA = "0x10B2970")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x10B2A44", Offset = "0x10B2A44", VA = "0x10B2A44")]
		private void PracticeTargetHealth_OnDeath()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x10B2AEC", Offset = "0x10B2AEC", VA = "0x10B2AEC")]
		public PracticeTarget()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class SlopeConfigurator : MonoBehaviour
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject colliderObj;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxWalkableSlopeAngle;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[ReadOnly]
		public float angle;

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x10C39CC", Offset = "0x10C39CC", VA = "0x10C39CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x10C3AC0", Offset = "0x10C3AC0", VA = "0x10C3AC0")]
		public SlopeConfigurator()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class SpeedBoots : UsableItem
	{
		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float speedBoostAmount;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x10C415C", Offset = "0x10C415C", VA = "0x10C415C", Slot = "15")]
		protected override void TriggerItem(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x10C43F4", Offset = "0x10C43F4", VA = "0x10C43F4")]
		public SpeedBoots()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class TriggerDelayedAttackOnDeath : MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC48", Offset = "0xE1EC48")]
		private sealed class <DoDestroy>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerDelayedAttackOnDeath <>4__this;

			[Token(Token = "0x170000FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001036")]
				[Address(RVA = "0x10275FC", Offset = "0x10275FC", VA = "0x10275FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001038")]
				[Address(RVA = "0x1027664", Offset = "0x1027664", VA = "0x1027664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x10273D0", Offset = "0x10273D0", VA = "0x10273D0")]
			[DebuggerHidden]
			public <DoDestroy>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x10274E0", Offset = "0x10274E0", VA = "0x10274E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x10274E4", Offset = "0x10274E4", VA = "0x10274E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x1027604", Offset = "0x1027604", VA = "0x1027604", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseAttack attack;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float attackDelay;

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1027200", Offset = "0x1027200", VA = "0x1027200")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x10272A8", Offset = "0x10272A8", VA = "0x10272A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1027334", Offset = "0x1027334", VA = "0x1027334")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1027360", Offset = "0x1027360", VA = "0x1027360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28F1C", Offset = "0xE28F1C")]
		private IEnumerator DoDestroy()
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x10273FC", Offset = "0x10273FC", VA = "0x10273FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x10274CC", Offset = "0x10274CC", VA = "0x10274CC")]
		public TriggerDelayedAttackOnDeath()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public abstract class UsableItem : Weapon
	{
		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC58", Offset = "0xE1EC58")]
		private sealed class <DoReleaseAndDestroy>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UsableItem <>4__this;

			[Token(Token = "0x17000100")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600103C")]
				[Address(RVA = "0x102E168", Offset = "0x102E168", VA = "0x102E168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000101")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600103E")]
				[Address(RVA = "0x102E1D0", Offset = "0x102E1D0", VA = "0x102E1D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x102DF24", Offset = "0x102DF24", VA = "0x102DF24")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x102DF60", Offset = "0x102DF60", VA = "0x102DF60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600103B")]
			[Address(RVA = "0x102DF64", Offset = "0x102DF64", VA = "0x102DF64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x102E170", Offset = "0x102E170", VA = "0x102E170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool releaseAndDestroyAfterUse;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		protected bool hasBeenUsed;

		[Token(Token = "0x1400001C")]
		public event Action<GEUnit> OnUse
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x102DBC0", Offset = "0x102DBC0", VA = "0x102DBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F80", Offset = "0xE28F80")]
			add
			{
			}
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x102DC68", Offset = "0x102DC68", VA = "0x102DC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE28F90", Offset = "0xE28F90")]
			remove
			{
			}
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x102DD10", Offset = "0x102DD10", VA = "0x102DD10", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x102DD18", Offset = "0x102DD18", VA = "0x102DD18", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x102DD78", Offset = "0x102DD78", VA = "0x102DD78", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x102DD80", Offset = "0x102DD80", VA = "0x102DD80", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x102DD88", Offset = "0x102DD88", VA = "0x102DD88", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x102DD90", Offset = "0x102DD90", VA = "0x102DD90", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x102DDA0", Offset = "0x102DDA0", VA = "0x102DDA0", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x102DDA4", Offset = "0x102DDA4", VA = "0x102DDA4", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CD")]
		protected abstract void TriggerItem(GEUnit owner, List<Collider> unitColliders);

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x102DDAC", Offset = "0x102DDAC", VA = "0x102DDAC", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x102DEB4", Offset = "0x102DEB4", VA = "0x102DEB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE28FA0", Offset = "0xE28FA0")]
		private IEnumerator DoReleaseAndDestroy()
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x102DF50", Offset = "0x102DF50", VA = "0x102DF50")]
		protected UsableItem()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class VendingMachine : PoolContent
	{
		[Token(Token = "0x20003F1")]
		public class VendingItem
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PickableObject pickableObject;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ObjectDataInstance objectDataInstance;

			[Token(Token = "0x600103F")]
			[Address(RVA = "0x102F0E4", Offset = "0x102F0E4", VA = "0x102F0E4")]
			public VendingItem(PickableObject pickableObject, ObjectDataInstance objectDataInstance)
			{
			}
		}

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<VendingItem> vendingItems;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ValueData currencyKey;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text priceLabel;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color availableColor;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color unavailableColor;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject lockCage;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<GenericEvent> purchaseEvents;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool isPurchased;

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x102EAB4", Offset = "0x102EAB4", VA = "0x102EAB4", Slot = "11")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x102F514", Offset = "0x102F514", VA = "0x102F514")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x102F604", Offset = "0x102F604", VA = "0x102F604")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x102F6F4", Offset = "0x102F6F4", VA = "0x102F6F4")]
		private void Instance_OnValueChanged(ValueData valueData, object val)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x102F11C", Offset = "0x102F11C", VA = "0x102F11C")]
		private void UpdatePickability(int currentCurrency)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x102F7C8", Offset = "0x102F7C8", VA = "0x102F7C8")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x102FBEC", Offset = "0x102FBEC", VA = "0x102FBEC")]
		public VendingMachine()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class WinScreen : MonoBehaviour
	{
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC68", Offset = "0xE1EC68")]
		private sealed class <DoCheckForItems>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WinScreen <>4__this;

			[Token(Token = "0x17000102")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001043")]
				[Address(RVA = "0x10341A0", Offset = "0x10341A0", VA = "0x10341A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000103")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001045")]
				[Address(RVA = "0x1034208", Offset = "0x1034208", VA = "0x1034208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x1033954", Offset = "0x1033954", VA = "0x1033954")]
			[DebuggerHidden]
			public <DoCheckForItems>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001041")]
			[Address(RVA = "0x1033988", Offset = "0x1033988", VA = "0x1033988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001042")]
			[Address(RVA = "0x103398C", Offset = "0x103398C", VA = "0x103398C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x10341A8", Offset = "0x10341A8", VA = "0x10341A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject breakdown;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject perfectEnding;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectData fuelCellObjectData;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SavePlayerState sps;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AchievementUnlockData SecretAchievement;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AchievementUnlockData FinishWithoutShortcutsAchievement;

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x10338B8", Offset = "0x10338B8", VA = "0x10338B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x10338E4", Offset = "0x10338E4", VA = "0x10338E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29004", Offset = "0xE29004")]
		private IEnumerator DoCheckForItems()
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1033980", Offset = "0x1033980", VA = "0x1033980")]
		public WinScreen()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class ChangeMaterialOnHover_Skinned : BaseHover
	{
		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material hoverMaterial;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Mesh;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22F7C", Offset = "0xE22F7C")]
		public Material defaultMaterial;

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x10D9C48", Offset = "0x10D9C48", VA = "0x10D9C48", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x10D9D04", Offset = "0x10D9D04", VA = "0x10D9D04", Slot = "5")]
		protected override void OnHover(bool val)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x10D9D3C", Offset = "0x10D9D3C", VA = "0x10D9D3C")]
		public ChangeMaterialOnHover_Skinned()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class OutlineThicknessTests : MonoBehaviour
	{
		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureSize;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCam;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[,] cubes;

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x10B00D4", Offset = "0x10B00D4", VA = "0x10B00D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x10B04BC", Offset = "0x10B04BC", VA = "0x10B04BC")]
		public OutlineThicknessTests()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class RagdollHover : MonoBehaviour
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RobotPart> robotParts;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material hoverMaterial;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Mesh;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22FB4", Offset = "0xE22FB4")]
		public Material defaultMaterial;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool currentState;

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x10B53FC", Offset = "0x10B53FC", VA = "0x10B53FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x10B5504", Offset = "0x10B5504", VA = "0x10B5504")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x10B5510", Offset = "0x10B5510", VA = "0x10B5510")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x10B56F4", Offset = "0x10B56F4", VA = "0x10B56F4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29068", Offset = "0xE29068")]
		private void AssignParts(Transform parent)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x10B57C4", Offset = "0x10B57C4", VA = "0x10B57C4")]
		public RagdollHover()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class HealAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit Unit;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE22FEC", Offset = "0xE22FEC")]
		public List<AssetUnitTag> Tags;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Range;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Delay;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Amount;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23024", Offset = "0xE23024")]
		private bool <IsAttacking>k__BackingField;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[ReadOnly]
		public List<UnitTag> closeUnits;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastAttack;

		[Token(Token = "0x1700008C")]
		public bool IsAttacking
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0x22FC048", Offset = "0x22FC048", VA = "0x22FC048", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290A0", Offset = "0xE290A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x22FC050", Offset = "0x22FC050", VA = "0x22FC050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290B0", Offset = "0xE290B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public bool AutoAttack
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x22FC05C", Offset = "0x22FC05C", VA = "0x22FC05C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public bool BurstAttack
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x22FC064", Offset = "0x22FC064", VA = "0x22FC064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x22FC06C", Offset = "0x22FC06C", VA = "0x22FC06C", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x22FC0D8", Offset = "0x22FC0D8", VA = "0x22FC0D8", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x22FC304", Offset = "0x22FC304", VA = "0x22FC304", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x22FC3E0", Offset = "0x22FC3E0", VA = "0x22FC3E0", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x22FC440", Offset = "0x22FC440", VA = "0x22FC440", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x22FC448", Offset = "0x22FC448", VA = "0x22FC448", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x22FC44C", Offset = "0x22FC44C", VA = "0x22FC44C", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x22FC454", Offset = "0x22FC454", VA = "0x22FC454")]
		public HealAttack()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x22FC504", Offset = "0x22FC504", VA = "0x22FC504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290C0", Offset = "0xE290C0")]
		private bool <Attack>b__16_0(UnitTag p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200014D")]
	public class HoloMap : SerializedMonoBehaviour
	{
		[Token(Token = "0x20003F3")]
		public class RoomInfo
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds Bounds;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color Color;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool IsExit;

			[Token(Token = "0x6001046")]
			[Address(RVA = "0x22FEB78", Offset = "0x22FEB78", VA = "0x22FEB78")]
			public RoomInfo()
			{
			}
		}

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<RoomInfo> Rooms;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23044", Offset = "0xE23044")]
		public Transform Container;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform Hand;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter MeshFilter;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform LeftHandPivot;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform RightHandPivot;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform LeftParent;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform RightParent;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2307C", Offset = "0xE2307C")]
		public float Scale;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color CurrentColor;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color KnownColor;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color UnknownColor;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color ExitColor;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AssetRoomTag exitTag;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE230B4", Offset = "0xE230B4")]
		public GameObject Player;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject player;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RoomInfo _room;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float _dx;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float _dz;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RoomInfo currentRoom;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE230EC", Offset = "0xE230EC")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE230EC", Offset = "0xE230EC")]
		public List<IState> OpenStates;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2314C", Offset = "0xE2314C")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2314C", Offset = "0xE2314C")]
		public List<IAction> OnOpenEvents;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE231AC", Offset = "0xE231AC")]
		public List<IAction> OnCloseEvents;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[ReadOnly]
		public float currentAngle;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool holoMapEnabled;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Mesh mesh;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<Vector3> vertices;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<int> triangles;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<Color> colors;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int complexity;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool changed;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public EnumValueData handednessKey;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool isLeftSide;

		[Token(Token = "0x1400001D")]
		public event Action OnOpen
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x22FD7B8", Offset = "0x22FD7B8", VA = "0x22FD7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290D0", Offset = "0xE290D0")]
			add
			{
			}
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x22FD860", Offset = "0x22FD860", VA = "0x22FD860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290E0", Offset = "0xE290E0")]
			remove
			{
			}
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x22FD908", Offset = "0x22FD908", VA = "0x22FD908")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x22FDCC4", Offset = "0x22FDCC4", VA = "0x22FDCC4")]
		private void Instance_OnValueChanged(ValueData arg1, object arg2)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x22FDB4C", Offset = "0x22FDB4C", VA = "0x22FDB4C")]
		private void UpdateHandedness()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x22FDCC8", Offset = "0x22FDCC8", VA = "0x22FDCC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x22FDD6C", Offset = "0x22FDD6C", VA = "0x22FDD6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x22FDA74", Offset = "0x22FDA74", VA = "0x22FDA74")]
		private void EnableHoloMap(bool val)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x22FE49C", Offset = "0x22FE49C", VA = "0x22FE49C")]
		private void OnGenerateFinished()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x22FE1EC", Offset = "0x22FE1EC", VA = "0x22FE1EC")]
		private void GenerateRooms()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x22FEB80", Offset = "0x22FEB80", VA = "0x22FEB80")]
		private void GenerateRoom(Bounds bound, Color color)
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x22FF548", Offset = "0x22FF548", VA = "0x22FF548")]
		public HoloMap()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class AdjustHoldPointOnInventory : MonoBehaviour
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion playerHandHoldRotation;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion inventoryHoldRotation;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PickableObject po;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x10C93D8", Offset = "0x10C93D8", VA = "0x10C93D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x10C946C", Offset = "0x10C946C", VA = "0x10C946C")]
		private void Po_OnBeforePickup(IPicking picking)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x10C952C", Offset = "0x10C952C", VA = "0x10C952C")]
		public AdjustHoldPointOnInventory()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E214", Offset = "0xE1E214")]
	public class AssetInventoryType : ScriptableObject
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x10CA5D0", Offset = "0x10CA5D0", VA = "0x10CA5D0")]
		public AssetInventoryType()
		{
		}
	}
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E268", Offset = "0xE1E268")]
	public class AssetSpecialInventoryItem : ScriptableObject
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x10CA66C", Offset = "0x10CA66C", VA = "0x10CA66C")]
		public AssetSpecialInventoryItem()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class ChangeMaterialOnInventorySlotHover : MonoBehaviour
	{
		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer renderer;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material extendedRangeMaterial;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material errorMaterial;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material defaultMaterial;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<IPickable> pickables;

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x10D9D44", Offset = "0x10D9D44", VA = "0x10D9D44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x10D9DEC", Offset = "0x10D9DEC", VA = "0x10D9DEC")]
		private void Slot_OnHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x10D9F1C", Offset = "0x10D9F1C", VA = "0x10D9F1C")]
		public ChangeMaterialOnInventorySlotHover()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class ChangeSlotPositionWhenSeated : MonoBehaviour
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SlotPosition slotPosition;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnumValueData seatedStandingKey;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnumValueData inventoryHeightKey;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yOffsetSeated;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 defaultSlotPosition;

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x10DA300", Offset = "0x10DA300", VA = "0x10DA300")]
		private void Start()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x10DA650", Offset = "0x10DA650", VA = "0x10DA650")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x10DA440", Offset = "0x10DA440", VA = "0x10DA440")]
		private void Instance_OnValueChanged(ValueData key, object val)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x10DA740", Offset = "0x10DA740", VA = "0x10DA740")]
		public ChangeSlotPositionWhenSeated()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class ExtendedInventorySlot : SerializedMonoBehaviour, IPicking
	{
		[Token(Token = "0x20003F4")]
		public enum LimitType
		{
			[Token(Token = "0x4000F96")]
			Whitelist,
			[Token(Token = "0x4000F97")]
			Blacklist,
			[Token(Token = "0x4000F98")]
			None
		}

		[Token(Token = "0x20003F5")]
		private class PickedUpColliderLayer
		{
			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider collider;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int currentLayer;

			[Token(Token = "0x6001047")]
			[Address(RVA = "0x1020C34", Offset = "0x1020C34", VA = "0x1020C34")]
			public PickedUpColliderLayer(Collider collider, int currentLayer)
			{
			}
		}

		[Token(Token = "0x20003F6")]
		public enum RangeInfo
		{
			[Token(Token = "0x4000F9C")]
			InCloseRange,
			[Token(Token = "0x4000F9D")]
			InExtendedRange,
			[Token(Token = "0x4000F9E")]
			Blacklisted,
			[Token(Token = "0x4000F9F")]
			NotInRange
		}

		[Token(Token = "0x20003F7")]
		private enum WhitelistInfo
		{
			[Token(Token = "0x4000FA1")]
			Whitelisted,
			[Token(Token = "0x4000FA2")]
			Blacklisted
		}

		[Serializable]
		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC78", Offset = "0xE1EC78")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IPickable> <>9__46_0;

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x10213B0", Offset = "0x10213B0", VA = "0x10213B0")]
			public <>c()
			{
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x10213B8", Offset = "0x10213B8", VA = "0x10213B8")]
			internal bool <Update>b__46_0(IPickable p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC88", Offset = "0xE1EC88")]
		private sealed class <>c__DisplayClass102_0
		{
			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider collider;

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1020C2C", Offset = "0x1020C2C", VA = "0x1020C2C")]
			public <>c__DisplayClass102_0()
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x10213D8", Offset = "0x10213D8", VA = "0x10213D8")]
			internal bool <ChangeLayers>b__0(PickedUpColliderLayer info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EC98", Offset = "0xE1EC98")]
		private sealed class <DoTestExtendedPickUp>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExtendedInventorySlot <>4__this;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPickable pickable;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000104")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001050")]
				[Address(RVA = "0x1021684", Offset = "0x1021684", VA = "0x1021684", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000105")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001052")]
				[Address(RVA = "0x10216EC", Offset = "0x10216EC", VA = "0x10216EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x1020C70", Offset = "0x1020C70", VA = "0x1020C70")]
			[DebuggerHidden]
			public <DoTestExtendedPickUp>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x1021488", Offset = "0x1021488", VA = "0x1021488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x102148C", Offset = "0x102148C", VA = "0x102148C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x102168C", Offset = "0x102168C", VA = "0x102168C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRMovement movement;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23204", Offset = "0xE23204")]
		public float pickUpRange;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LayerMask layerMask;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<PlayerHand> playerHands;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int maxNumPickUps;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool pushOutPreviousItem;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2323C", Offset = "0xE2323C")]
		public List<ExtendedInventorySlot> alternativesBeforePushingOut;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float pushOutSpeed;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23274", Offset = "0xE23274")]
		public PlayerHand equipHandIfEmptyGrab;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool canBeRemovedAfterPickUp;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnitHealth unitHealth;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool overwriteHoldPositionToZeroOnPickUp;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject hoverCircle;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE232AC", Offset = "0xE232AC")]
		public bool changeScaleOnPickUp;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE232E4", Offset = "0xE232E4")]
		public float scaleMultiplier;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE23320", Offset = "0xE23320")]
		public float changeScaleSpeed;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2335C", Offset = "0xE2335C")]
		public bool debug;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected List<IPickable> currentPickUps;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<ExtendedInventorySlot> otherSlots;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float distanceMultiplicatorOnPickUp;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Side side;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE233D4", Offset = "0xE233D4")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE233D4", Offset = "0xE233D4")]
		[InlineProperty]
		public List<GenericEvent> hoverEvents;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE23444", Offset = "0xE23444")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE23444", Offset = "0xE23444")]
		[InlineProperty]
		public List<GenericSideEvent> hoverEventsSide;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE234B4", Offset = "0xE234B4")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE234B4", Offset = "0xE234B4")]
		[InlineProperty]
		public List<GenericStringEvent> stringHoverEvents;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool allowStacking;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE23524", Offset = "0xE23524")]
		public GameObject stackDisplayPrefab;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[ReadOnly]
		public Text stackLabel;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE23570", Offset = "0xE23570")]
		[ReadOnly]
		public int stackCount;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<IPickable> currentPlayerHandPickUps;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject stackDisplay;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform cachedFixedHoldTransform;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Dictionary<IPickable, float> initialDistanceMultiplicators;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Dictionary<PickableObject, Vector3> initialScale;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Dictionary<PickableObject, bool> currentScaledObjects;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE235C0", Offset = "0xE235C0")]
		public bool useExtendedPickUp;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE235F8", Offset = "0xE235F8")]
		public float extendedPickUpStartDelay;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23630", Offset = "0xE23630")]
		public float extendedPickUpDuration;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float extendedRange;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23668", Offset = "0xE23668")]
		public LimitType limitType;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE236A0", Offset = "0xE236A0")]
		public List<AssetSpecialInventoryItem> whitelistedTypes;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE23734", Offset = "0xE23734")]
		public List<AssetSpecialInventoryItem> blacklistedTypes;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool hideAllRenderersOnPickUp;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public LayerMask pickedUpLayer;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public VRMovement vrMovement;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Dictionary<IPickable, List<PickedUpColliderLayer>> currentlyPickedUpColliderLayers;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<IPickable> extendedHold;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Dictionary<IPickable, SpecialInventoryItem> whitelistDict;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private HashSet<IPickable> previousPickUps;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private List<Renderer> deactivatedRenderers;

		[Token(Token = "0x1700008F")]
		public List<IPickable> CurrentPickedUpObjects
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x101C280", Offset = "0x101C280", VA = "0x101C280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x101E190", Offset = "0x101E190", VA = "0x101E190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<IPickable> OnPickUp
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x101C288", Offset = "0x101C288", VA = "0x101C288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE290F0", Offset = "0xE290F0")]
			add
			{
			}
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x101C32C", Offset = "0x101C32C", VA = "0x101C32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29100", Offset = "0xE29100")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<IPickable> OnRelease
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x101C3D0", Offset = "0x101C3D0", VA = "0x101C3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29110", Offset = "0xE29110")]
			add
			{
			}
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x101C474", Offset = "0x101C474", VA = "0x101C474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29120", Offset = "0xE29120")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<IPickable, RangeInfo> OnSlotHover
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x1018C20", Offset = "0x1018C20", VA = "0x1018C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29130", Offset = "0xE29130")]
			add
			{
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x101C518", Offset = "0x101C518", VA = "0x101C518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29140", Offset = "0xE29140")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<IPickable, bool> OnHover
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x101C5BC", Offset = "0x101C5BC", VA = "0x101C5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29150", Offset = "0xE29150")]
			add
			{
			}
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x101C660", Offset = "0x101C660", VA = "0x101C660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29160", Offset = "0xE29160")]
			remove
			{
			}
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x101C704", Offset = "0x101C704", VA = "0x101C704")]
		private void Hand_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x101C76C", Offset = "0x101C76C", VA = "0x101C76C", Slot = "29")]
		protected virtual bool InCloseRange(IPickable pickable, out float distance, out float otherSlotsMinDistance, bool checkOtherSlots)
		{
			return default(bool);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x101CBC8", Offset = "0x101CBC8", VA = "0x101CBC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x101DF14", Offset = "0x101DF14", VA = "0x101DF14")]
		private bool GetAllowStacking(IPickable pickUp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x101E078", Offset = "0x101E078", VA = "0x101E078")]
		private bool AllowPushOut()
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x101E1EC", Offset = "0x101E1EC", VA = "0x101E1EC", Slot = "30")]
		protected virtual bool CanStoreNewItem(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x101E238", Offset = "0x101E238", VA = "0x101E238")]
		private void Hand_OnRelease(IPickable pickable)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x101E23C", Offset = "0x101E23C", VA = "0x101E23C")]
		protected bool HandleRelease(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x101E750", Offset = "0x101E750", VA = "0x101E750", Slot = "31")]
		public virtual Side GetSide()
		{
			return default(Side);
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x101E758", Offset = "0x101E758", VA = "0x101E758", Slot = "32")]
		public virtual TwoHandedPickingMode AllowTwoHandedPickUp()
		{
			return default(TwoHandedPickingMode);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x101E760", Offset = "0x101E760", VA = "0x101E760", Slot = "33")]
		public virtual Transform GetExternalMovement()
		{
			return null;
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x101E77C", Offset = "0x101E77C", VA = "0x101E77C", Slot = "34")]
		public virtual bool GetInteractionKeyPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x101E784", Offset = "0x101E784", VA = "0x101E784", Slot = "35")]
		public virtual Transform GetTarget()
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x101E78C", Offset = "0x101E78C", VA = "0x101E78C", Slot = "36")]
		public virtual bool GetToggleKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x101E794", Offset = "0x101E794", VA = "0x101E794", Slot = "37")]
		public virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x101E79C", Offset = "0x101E79C", VA = "0x101E79C", Slot = "38")]
		public virtual void HandleVisualModelUpdate()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x101E7A0", Offset = "0x101E7A0", VA = "0x101E7A0")]
		private void UpdateStackDisplay()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x101EA8C", Offset = "0x101EA8C", VA = "0x101EA8C", Slot = "39")]
		public virtual void PickUp(IPickable pickable, Rigidbody other, Vector3 objToHandVector)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x101F75C", Offset = "0x101F75C", VA = "0x101F75C")]
		private void ResetPriorityDistanceOnRelease(IPicking arg1, IPickable pickable)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x101F880", Offset = "0x101F880", VA = "0x101F880", Slot = "40")]
		public virtual void ReleaseAndPickUp()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x101FA88", Offset = "0x101FA88", VA = "0x101FA88", Slot = "41")]
		public virtual void Release(IPickable pickable)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x101F29C", Offset = "0x101F29C", VA = "0x101F29C")]
		private void MinimizeObject(PickableObject pickable, bool isPickedUp)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x101FCF0", Offset = "0x101FCF0", VA = "0x101FCF0", Slot = "42")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x101FD68", Offset = "0x101FD68", VA = "0x101FD68", Slot = "43")]
		public virtual void Release(Vector3 velocity)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x10200E4", Offset = "0x10200E4", VA = "0x10200E4", Slot = "44")]
		public virtual bool CanBeStolenByOtherHand()
		{
			return default(bool);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x10200EC", Offset = "0x10200EC", VA = "0x10200EC", Slot = "45")]
		public virtual void RegisterOnPickUp(Action<IPickable> callback)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x10200F0", Offset = "0x10200F0", VA = "0x10200F0", Slot = "46")]
		public virtual void UnregisterOnPickUp(Action<IPickable> callback)
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x10200F4", Offset = "0x10200F4", VA = "0x10200F4", Slot = "47")]
		public virtual void RegisterOnHover(Action<IPickable, bool> callback)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x10200F8", Offset = "0x10200F8", VA = "0x10200F8", Slot = "48")]
		public virtual void UnregisterOnHover(Action<IPickable, bool> callback)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x10200FC", Offset = "0x10200FC", VA = "0x10200FC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1020560", Offset = "0x1020560", VA = "0x1020560")]
		private void Hand_OnBeforeTestPickUp()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x10206DC", Offset = "0x10206DC", VA = "0x10206DC")]
		private void VRMovement_OnMove(Vector3 deltaPos)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1020564", Offset = "0x1020564", VA = "0x1020564")]
		private void SnapToTargetPosition()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x10206E0", Offset = "0x10206E0", VA = "0x10206E0")]
		private void EquipHandIfEmptyGrab_OnClosestItemSelected(PlayerHand.SelectionInfo selectionInfo)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x102075C", Offset = "0x102075C", VA = "0x102075C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x102089C", Offset = "0x102089C", VA = "0x102089C")]
		private void UnitHealth_OnDeath()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x10208A8", Offset = "0x10208A8", VA = "0x10208A8")]
		private void OtherSlot_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1020910", Offset = "0x1020910", VA = "0x1020910")]
		public static int LayerMaskToLayer(LayerMask layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1020960", Offset = "0x1020960", VA = "0x1020960")]
		private bool HandleReleaseDelayed(IPickable pickable)
		{
			return default(bool);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x101F38C", Offset = "0x101F38C", VA = "0x101F38C")]
		private void ChangeLayers(IPickable pickable)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x101E6D4", Offset = "0x101E6D4", VA = "0x101E6D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29170", Offset = "0xE29170")]
		private IEnumerator DoTestExtendedPickUp(IPickable pickable)
		{
			return null;
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1020C9C", Offset = "0x1020C9C", VA = "0x1020C9C")]
		private void OnReleaseFromInventory(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x101CAC4", Offset = "0x101CAC4", VA = "0x101CAC4")]
		protected RangeInfo CanPickUp(IPickable pickable, bool checkOtherSlots)
		{
			return default(RangeInfo);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x101D928", Offset = "0x101D928", VA = "0x101D928")]
		protected RangeInfo InRange(IPickable pickable, bool checkOtherSlots)
		{
			return default(RangeInfo);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x101DC94", Offset = "0x101DC94", VA = "0x101DC94")]
		private WhitelistInfo GetWhitelistInfo(IPickable pickable)
		{
			return default(WhitelistInfo);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1020F34", Offset = "0x1020F34", VA = "0x1020F34", Slot = "27")]
		public void RegisterOnVisualModelUpdate(Action<Transform> callback)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1020F94", Offset = "0x1020F94", VA = "0x1020F94", Slot = "28")]
		public void UnregisterOnVisualModelUpdate(Action<Transform> callback)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1020FF4", Offset = "0x1020FF4", VA = "0x1020FF4", Slot = "17")]
		public List<IPickable> GetCurrentPickUps()
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1020FFC", Offset = "0x1020FFC", VA = "0x1020FFC")]
		public ExtendedInventorySlot()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class InventoryAudio : SerializedMonoBehaviour
	{
		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ExtendedInventorySlot inventorySlot;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetInventoryType inventoryType;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AssetFMODEvent pickUp;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AssetFMODEvent release;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AssetFMODEvent hover;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AssetAudioParameter inventoryTypeParameter;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FMODAudioEvent pickUpAudioEvent;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FMODAudioEvent releaseAudioEvent;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FMODAudioEvent hoverAudioEvent;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<GenericEvent> pickUpEvents;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<IPickable, ExtendedInventorySlot.RangeInfo> hoverInfo;

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x23006CC", Offset = "0x23006CC", VA = "0x23006CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x2300724", Offset = "0x2300724", VA = "0x2300724")]
		private void Start()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x2300B2C", Offset = "0x2300B2C", VA = "0x2300B2C")]
		private void InventorySlot_OnSlotHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x2300C1C", Offset = "0x2300C1C", VA = "0x2300C1C")]
		private void InventorySlot_OnPickUp(IPickable pickable)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x2300DC4", Offset = "0x2300DC4", VA = "0x2300DC4")]
		private void InventorySlot_OnRelease(IPickable pickable)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x2300F6C", Offset = "0x2300F6C", VA = "0x2300F6C")]
		public InventoryAudio()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class OverwriteInventoryAudioEvents : MonoBehaviour
	{
		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent overwritePickUpEvent;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetFMODEvent overwriteReleaseEvent;

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x10B0550", Offset = "0x10B0550", VA = "0x10B0550")]
		public OverwriteInventoryAudioEvents()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E2BC", Offset = "0xE1E2BC")]
	public class PlaceInventoryAtPosition : MonoBehaviour
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ExtendedInventorySlot> inventorySlots;

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x10B14A0", Offset = "0x10B14A0", VA = "0x10B14A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x10B17A0", Offset = "0x10B17A0", VA = "0x10B17A0")]
		public PlaceInventoryAtPosition()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class PreventInventoryOnActivate : MonoBehaviour
	{
		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GE.WeaponConfigurator.ExplosionAttack explosionAttack;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpecialInventoryItem specialInventoryItem;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x10B2AF4", Offset = "0x10B2AF4", VA = "0x10B2AF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x10B2B80", Offset = "0x10B2B80", VA = "0x10B2B80")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x10B2BF0", Offset = "0x10B2BF0", VA = "0x10B2BF0")]
		private void ExplosionAttack_OnCountdownStarted()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x10B2C5C", Offset = "0x10B2C5C", VA = "0x10B2C5C")]
		public PreventInventoryOnActivate()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class SpecialInventoryItem : MonoBehaviour
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetSpecialInventoryItem> types;

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x10C3FCC", Offset = "0x10C3FCC", VA = "0x10C3FCC")]
		internal bool Contains(List<AssetSpecialInventoryItem> whitelistedTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x10C40EC", Offset = "0x10C40EC", VA = "0x10C40EC")]
		public SpecialInventoryItem()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class UpgradeChip : MonoBehaviour, IEntity
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE237CC", Offset = "0xE237CC")]
		public PickableObject Pickable;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectDataInstance DataInstance;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform EffectContainer;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23804", Offset = "0xE23804")]
		public float HoverOffset;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float HoldOffset;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 Offset;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject particle;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UpgradeData upgradeData;

		[Token(Token = "0x17000091")]
		public UpgradeData UpgradeData
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0x102BF2C", Offset = "0x102BF2C", VA = "0x102BF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x102BF34", Offset = "0x102BF34", VA = "0x102BF34")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x102C014", Offset = "0x102C014", VA = "0x102C014")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x102C100", Offset = "0x102C100", VA = "0x102C100")]
		private void Start()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x102C2DC", Offset = "0x102C2DC", VA = "0x102C2DC")]
		private void OnHover(IPicking picking, bool hover)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x102C6D0", Offset = "0x102C6D0", VA = "0x102C6D0")]
		private void OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x102C870", Offset = "0x102C870", VA = "0x102C870")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x102C528", Offset = "0x102C528", VA = "0x102C528")]
		private void ShowTooltip(TooltipType id, UpgradeData upgrade, Side side, string desc, bool detail, float offset)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x102C9FC", Offset = "0x102C9FC", VA = "0x102C9FC")]
		public UpgradeChip()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class UpgradeSlot : MonoBehaviour
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExtendedInventorySlot Slot;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerUpgrades Player;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Side Side;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int SlotId;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UpgradeChip equippedUpgradeChip;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<UpgradeSlot> otherSlots;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2383C", Offset = "0xE2383C")]
		public LString Title;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LString Description;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool currentUpgradeInfoState;

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x102CCBC", Offset = "0x102CCBC", VA = "0x102CCBC")]
		private void Reset()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x102CD9C", Offset = "0x102CD9C", VA = "0x102CD9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x102CE74", Offset = "0x102CE74", VA = "0x102CE74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x102CF4C", Offset = "0x102CF4C", VA = "0x102CF4C")]
		public void HideSlotLookAtInfo()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x102CFD0", Offset = "0x102CFD0", VA = "0x102CFD0")]
		public void ShowSlotLookAtInfo()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x102D394", Offset = "0x102D394", VA = "0x102D394")]
		private void OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x102D4D0", Offset = "0x102D4D0", VA = "0x102D4D0")]
		private void OnRelease(IPickable obj)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x102D634", Offset = "0x102D634", VA = "0x102D634")]
		public void ShowUpgradeInfo(bool val)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x102D654", Offset = "0x102D654", VA = "0x102D654")]
		public UpgradeSlot()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class UpgradeSlotInformation : MonoBehaviour
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tolerance;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UpgradeSlot> slots;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UpgradeSlot visibleSlot;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Side side;

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x102D6C4", Offset = "0x102D6C4", VA = "0x102D6C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x102DB48", Offset = "0x102DB48", VA = "0x102DB48")]
		public UpgradeSlotInformation()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class BreakAfterTime : MonoBehaviour
	{
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lifetime;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timePassed;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isReleased;

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x10D6EF8", Offset = "0x10D6EF8", VA = "0x10D6EF8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x10D6F50", Offset = "0x10D6F50", VA = "0x10D6F50")]
		private void Start()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x10D6FF4", Offset = "0x10D6FF4", VA = "0x10D6FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x10D70CC", Offset = "0x10D70CC", VA = "0x10D70CC")]
		private void StartCountdown(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x10D70D8", Offset = "0x10D70D8", VA = "0x10D70D8")]
		public BreakAfterTime()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class ChipIcon : MonoBehaviour
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float animationSpeed;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PickableObject pickableObject;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float foldSpeed;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timer;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float targetFoldVal;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float foldVal;

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x10DB278", Offset = "0x10DB278", VA = "0x10DB278")]
		private void Start()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x10DB350", Offset = "0x10DB350", VA = "0x10DB350")]
		private void PickableObject_OnRelease(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x10DB35C", Offset = "0x10DB35C", VA = "0x10DB35C")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x10DB364", Offset = "0x10DB364", VA = "0x10DB364")]
		private void Update()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x10DB4B8", Offset = "0x10DB4B8", VA = "0x10DB4B8")]
		public ChipIcon()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class DeflectiveMaterial : SerializedMonoBehaviour, GE.WeaponConfigurator.IDeflective
	{
		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GEUnit unit;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<GenericEvent> deflectEvents;

		[Token(Token = "0x14000022")]
		public event Action<Rigidbody> OnDeflect
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x10100FC", Offset = "0x10100FC", VA = "0x10100FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291D4", Offset = "0xE291D4")]
			add
			{
			}
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x10101A0", Offset = "0x10101A0", VA = "0x10101A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291E4", Offset = "0xE291E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1010244", Offset = "0x1010244", VA = "0x1010244", Slot = "10")]
		public GEUnit GetGEUnit()
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x101024C", Offset = "0x101024C", VA = "0x101024C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1010570", Offset = "0x1010570", VA = "0x1010570", Slot = "11")]
		public void InformAboutDeflection()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x101059C", Offset = "0x101059C", VA = "0x101059C")]
		public DeflectiveMaterial()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class ExpandChip : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FB")]
		public class StaticState
		{
			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject mesh;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Collider collider;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshFilter meshFilter;

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x101B704", Offset = "0x101B704", VA = "0x101B704")]
			public StaticState()
			{
			}
		}

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float expandDuration;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StaticState closedState;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StaticState openState;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject dynamicMesh;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter icon;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UpgradeChip upgradeChip;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentExpandProgress;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float targetExpand;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x101AF3C", Offset = "0x101AF3C", VA = "0x101AF3C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x101AFAC", Offset = "0x101AFAC", VA = "0x101AFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x101B0DC", Offset = "0x101B0DC", VA = "0x101B0DC")]
		private void SetMeshModels()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x101B360", Offset = "0x101B360", VA = "0x101B360")]
		private void SetExpandProgress(float progress)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x101B540", Offset = "0x101B540", VA = "0x101B540")]
		private void Update()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x101B5E0", Offset = "0x101B5E0", VA = "0x101B5E0")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x101B6BC", Offset = "0x101B6BC", VA = "0x101B6BC")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x101B6E8", Offset = "0x101B6E8", VA = "0x101B6E8")]
		public ExpandChip()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class Visor : MonoBehaviour
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVRInputDeviceGroup InputDevice;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleObject VisorPing;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Visor instance;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isVisor;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera visorCamera;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastActivation;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ScaleObject ping;

		[Token(Token = "0x14000023")]
		public static event Action<bool> OnVisorChanged
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x102FD3C", Offset = "0x102FD3C", VA = "0x102FD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE291F4", Offset = "0xE291F4")]
			add
			{
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x102FDF4", Offset = "0x102FDF4", VA = "0x102FDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29204", Offset = "0xE29204")]
			remove
			{
			}
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x102FEAC", Offset = "0x102FEAC", VA = "0x102FEAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x102FF04", Offset = "0x102FF04", VA = "0x102FF04")]
		private void UpdateDepthTexture()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x102FF3C", Offset = "0x102FF3C", VA = "0x102FF3C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29214", Offset = "0xE29214")]
		public void ToggleVisor()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x10300A4", Offset = "0x10300A4", VA = "0x10300A4")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29224", Offset = "0xE29224")]
		private void Ping()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1030158", Offset = "0x1030158", VA = "0x1030158")]
		public Visor()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class VisorActivator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECA8", Offset = "0xE1ECA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__2_0;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject> <>9__5_0;

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x1030670", Offset = "0x1030670", VA = "0x1030670")]
			public <>c()
			{
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1030678", Offset = "0x1030678", VA = "0x1030678")]
			internal void <PickableObject_OnRelease>b__2_0(GameObject o)
			{
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1030698", Offset = "0x1030698", VA = "0x1030698")]
			internal void <PickableObject_OnPickUp>b__5_0(GameObject o)
			{
			}
		}

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> disableOnHead;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform currentPickingTransform;

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1030170", Offset = "0x1030170", VA = "0x1030170")]
		private void Start()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1030248", Offset = "0x1030248", VA = "0x1030248")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1030408", Offset = "0x1030408", VA = "0x1030408")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1030604", Offset = "0x1030604", VA = "0x1030604")]
		public VisorActivator()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class InitializeLevelEventsAction : BaseAction
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECB8", Offset = "0xE1ECB8")]
		private sealed class <DoExecute>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InitializeLevelEventsAction <>4__this;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GenerationInfo generationInfo;

			[Token(Token = "0x17000106")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600105B")]
				[Address(RVA = "0x22FFF88", Offset = "0x22FFF88", VA = "0x22FFF88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000107")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105D")]
				[Address(RVA = "0x22FFFF0", Offset = "0x22FFFF0", VA = "0x22FFFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x22FFE28", Offset = "0x22FFE28", VA = "0x22FFE28")]
			[DebuggerHidden]
			public <DoExecute>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x22FFEB8", Offset = "0x22FFEB8", VA = "0x22FFEB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x22FFEBC", Offset = "0x22FFEBC", VA = "0x22FFEBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105C")]
			[Address(RVA = "0x22FFF90", Offset = "0x22FFF90", VA = "0x22FFF90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x22FFDAC", Offset = "0x22FFDAC", VA = "0x22FFDAC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29234", Offset = "0xE29234")]
		public override IEnumerator DoExecute(GenerationInfo generationInfo)
		{
			return null;
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x22FFE54", Offset = "0x22FFE54", VA = "0x22FFE54")]
		private void InitializeWorldEventForLevel(GenerationInfo generationInfo)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x22FFEB0", Offset = "0x22FFEB0", VA = "0x22FFEB0")]
		public InitializeLevelEventsAction()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class LevelObjects : SerializedMonoBehaviour
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelObjects Instance;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Player Player;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<AssetUnitTag, HashSet<GEUnit>> Units;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<AssetUnitTag, HashSet<Weapon>> Weapons;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HashSet<UpgradeChip> Upgrades;

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x2302FB4", Offset = "0x2302FB4", VA = "0x2302FB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x2303094", Offset = "0x2303094", VA = "0x2303094")]
		private void Start()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x23031D8", Offset = "0x23031D8", VA = "0x23031D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x2303360", Offset = "0x2303360", VA = "0x2303360")]
		private void OnAdd(IEntity entity)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x2303ED8", Offset = "0x2303ED8", VA = "0x2303ED8")]
		private void OnRemove(IEntity entity)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x2302668", Offset = "0x2302668", VA = "0x2302668")]
		public void OnLevelLoad()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x2304208", Offset = "0x2304208", VA = "0x2304208")]
		public LevelObjects()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class ResetHeightOnSteps : MonoBehaviour
	{
		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cameraTransform;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minStepHeight;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxStepHeight;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float testInterval;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastTest;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask environmentLayer;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x10B7958", Offset = "0x10B7958", VA = "0x10B7958")]
		private void Update()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x10B7BD4", Offset = "0x10B7BD4", VA = "0x10B7BD4")]
		public ResetHeightOnSteps()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class SwitchSeatedOrStanding : MonoBehaviour
	{
		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float standingOffset;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetVRInputDeviceGroup inputDevice;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SeatedNotification;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string StandingNotification;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnumValueData positionKey;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool allowSwitchingWithJoystick;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool isStanding;

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x10256DC", Offset = "0x10256DC", VA = "0x10256DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x10258A0", Offset = "0x10258A0", VA = "0x10258A0")]
		private void Instance_OnValueChanged(ValueData arg1, object arg2)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x102593C", Offset = "0x102593C", VA = "0x102593C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1025A2C", Offset = "0x1025A2C", VA = "0x1025A2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x102578C", Offset = "0x102578C", VA = "0x102578C")]
		private void Refresh(bool showNotifications = true)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1025B24", Offset = "0x1025B24", VA = "0x1025B24")]
		public SwitchSeatedOrStanding()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class TeleportUsingJoystick : MonoBehaviour
	{
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float climbDelay;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JoystickMovement currentJoystickMovement;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float climbProgress;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player currentPlayer;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> progressIndicators;

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1026984", Offset = "0x1026984", VA = "0x1026984")]
		private void Start()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1026A90", Offset = "0x1026A90", VA = "0x1026A90")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1026BE4", Offset = "0x1026BE4", VA = "0x1026BE4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1026D30", Offset = "0x1026D30", VA = "0x1026D30")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1026FF4", Offset = "0x1026FF4", VA = "0x1026FF4")]
		private void TeleportToTop()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1027188", Offset = "0x1027188", VA = "0x1027188")]
		public TeleportUsingJoystick()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class MarkerObject : MonoBehaviour
	{
		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MarkerData Marker;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform marker;

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x23056BC", Offset = "0x23056BC", VA = "0x23056BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x230588C", Offset = "0x230588C", VA = "0x230588C")]
		public MarkerObject()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class BakeEnvironmentHandler : MonoBehaviour
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombinedMeshHandler combinedMeshHandler;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material environmentMaterial;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material replacementMaterial;

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x10D5EBC", Offset = "0x10D5EBC", VA = "0x10D5EBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x10D5F50", Offset = "0x10D5F50", VA = "0x10D5F50")]
		private void CombinedMeshHandler_OnCombineMeshes(List<GameObject> combinedObjects)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x10D61B0", Offset = "0x10D61B0", VA = "0x10D61B0")]
		public static void AddUVs(GameObject helper, Mesh mesh, MeshRenderer mr, Material replacementMaterial)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x10D63D8", Offset = "0x10D63D8", VA = "0x10D63D8")]
		public BakeEnvironmentHandler()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class BakeEnvironmentObject : MonoBehaviour
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material replacementMaterial;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x10D63E0", Offset = "0x10D63E0", VA = "0x10D63E0")]
		private void Reset()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x10D6450", Offset = "0x10D6450", VA = "0x10D6450")]
		private void Start()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x10D6548", Offset = "0x10D6548", VA = "0x10D6548")]
		public BakeEnvironmentObject()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class RemoveInvisibleTriangles : MonoBehaviour
	{
		[Token(Token = "0x20003FE")]
		public class Triangle
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRepresentation mesh;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int id;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int outlineVal;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> vertexIds;

			[Token(Token = "0x600105E")]
			[Address(RVA = "0x10B6668", Offset = "0x10B6668", VA = "0x10B6668")]
			public Triangle(MeshRepresentation mesh, int id)
			{
			}

			[Token(Token = "0x600105F")]
			[Address(RVA = "0x10B704C", Offset = "0x10B704C", VA = "0x10B704C", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x10B710C", Offset = "0x10B710C", VA = "0x10B710C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x10B73E4", Offset = "0x10B73E4", VA = "0x10B73E4")]
			public List<Vector3> GetVertices()
			{
				return null;
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x10B6810", Offset = "0x10B6810", VA = "0x10B6810")]
			public bool HasSamePoints(Triangle otherTriangle)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003FF")]
		public class MeshRepresentation
		{
			[Token(Token = "0x2000466")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F068", Offset = "0xE1F068")]
			private sealed class <>c__DisplayClass13_0
			{
				[Token(Token = "0x4001164")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int i;

				[Token(Token = "0x60011B4")]
				[Address(RVA = "0x10B7020", Offset = "0x10B7020", VA = "0x10B7020")]
				public <>c__DisplayClass13_0()
				{
				}

				[Token(Token = "0x60011B5")]
				[Address(RVA = "0x10B7028", Offset = "0x10B7028", VA = "0x10B7028")]
				internal bool <ApplyRemovedTriangles>b__0(Triangle t)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> triangles;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> vertices;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Color> colors;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> normals;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Vector2> uv;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Vector2> uv2;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<int> unusedVertices;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Triangle> unusedTriangles;

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x10B6504", Offset = "0x10B6504", VA = "0x10B6504")]
			public MeshRepresentation(Mesh mesh)
			{
			}

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x10B6EB8", Offset = "0x10B6EB8", VA = "0x10B6EB8")]
			public void Apply()
			{
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x10B6AD0", Offset = "0x10B6AD0", VA = "0x10B6AD0")]
			public void StartRemovingTriangles()
			{
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0x10B6B60", Offset = "0x10B6B60", VA = "0x10B6B60")]
			public void RemoveTriangle(Triangle triangle)
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x10B6BC8", Offset = "0x10B6BC8", VA = "0x10B6BC8")]
			public void ApplyRemovedTriangles()
			{
			}
		}

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombinedMeshHandler combinedMeshHandler;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool removeAdjacentTriangles;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool raycastTestEveryTriangle;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomOcclusion roomOcclusion;

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x10B5D60", Offset = "0x10B5D60", VA = "0x10B5D60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x10B5DF4", Offset = "0x10B5DF4", VA = "0x10B5DF4")]
		private void CombinedMeshHandler_OnCombineMeshes(List<GameObject> combinedObjects)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10B7010", Offset = "0x10B7010", VA = "0x10B7010")]
		public RemoveInvisibleTriangles()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class NonHumanoidRagdoll : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000400")]
		public class RagdollBone
		{
			[Token(Token = "0x2000467")]
			public enum Type
			{
				[Token(Token = "0x4001166")]
				Body,
				[Token(Token = "0x4001167")]
				Leg
			}

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int legParts;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float legThickness;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform attachedTo;

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x2306D28", Offset = "0x2306D28", VA = "0x2306D28")]
			public RagdollBone()
			{
			}
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RagdollBone> ragdollBones;

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x230661C", Offset = "0x230661C", VA = "0x230661C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29298", Offset = "0xE29298")]
		public void CreateRagdoll()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x2306D20", Offset = "0x2306D20", VA = "0x2306D20")]
		public NonHumanoidRagdoll()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class EntityHandler : MonoBehaviour
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EntityHandler instance;

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1015600", Offset = "0x1015600", VA = "0x1015600")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1015654", Offset = "0x1015654", VA = "0x1015654")]
		public EntityHandler()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class PickableRagdoll : MonoBehaviour
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMovement movement;

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x10B1170", Offset = "0x10B1170", VA = "0x10B1170")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x10B1204", Offset = "0x10B1204", VA = "0x10B1204")]
		private void Movement_OnEnableRagdoll(ExternalRagdoll ragdoll, bool val)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x10B1408", Offset = "0x10B1408", VA = "0x10B1408")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x10B1498", Offset = "0x10B1498", VA = "0x10B1498")]
		public PickableRagdoll()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class SidedPickableObject : PickableObject
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Transform rotatableModel;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public Transform inverseRotatableModel;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Transform leftOneHanded;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Transform leftTwoHanded;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public Transform rightOneHanded;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public Transform rightTwoHanded;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public BoxCollider boxCollider;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public Vector3 centerClosed;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public Vector3 sizeClosed;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Vector3 centerOpenLeft;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public Vector3 sizeOpenLeft;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public Vector3 centerOpenRight;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public Vector3 sizeOpenRight;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x10C3630", Offset = "0x10C3630", VA = "0x10C3630", Slot = "43")]
		public override void PickUp(IPicking picking, Vector3 objToHandVector)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x10C3950", Offset = "0x10C3950", VA = "0x10C3950", Slot = "44")]
		public override void Release(IPicking picking)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x10C39C4", Offset = "0x10C39C4", VA = "0x10C39C4")]
		public SidedPickableObject()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class AbilityCooldown : MonoBehaviour
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UseAbility useAbility;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Side side;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material activeMaterial;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material cooldownMaterial;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x10C8308", Offset = "0x10C8308", VA = "0x10C8308")]
		private void Update()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x10C8388", Offset = "0x10C8388", VA = "0x10C8388")]
		public AbilityCooldown()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class AddMomentumOnEndClimbing : MonoBehaviour
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRMovement movement;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand playerHand;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody playerRigidbody;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float threshold;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 momentum;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 initialMomentum;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slowDownSpeed;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VelocityRecorder velocity;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x10C8F64", Offset = "0x10C8F64", VA = "0x10C8F64")]
		private void Start()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x10C90F8", Offset = "0x10C90F8", VA = "0x10C90F8")]
		private void PlayerHand_OnEndClimbing()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x10C9154", Offset = "0x10C9154", VA = "0x10C9154")]
		private void Update()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x10C933C", Offset = "0x10C933C", VA = "0x10C933C")]
		public AddMomentumOnEndClimbing()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class EnsureMinHeightAboveTransform : MonoBehaviour
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 initialLocalPosition;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform reference;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minHeight;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1014138", Offset = "0x1014138", VA = "0x1014138")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1014174", Offset = "0x1014174", VA = "0x1014174")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x10142F8", Offset = "0x10142F8", VA = "0x10142F8")]
		public EnsureMinHeightAboveTransform()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class PlayerAttributes : MonoBehaviour
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerAttributes instance;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashMovement dashMovement;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GEUnit unit;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float defaultJoystickMovementSpeed;

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x10B17A8", Offset = "0x10B17A8", VA = "0x10B17A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x10B1800", Offset = "0x10B1800", VA = "0x10B1800")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x10B1854", Offset = "0x10B1854", VA = "0x10B1854")]
		public void ChangeMovementSpeed(float newVal)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x10B1878", Offset = "0x10B1878", VA = "0x10B1878")]
		public void ResetMovementSpeed()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x10B18A0", Offset = "0x10B18A0", VA = "0x10B18A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x10B1930", Offset = "0x10B1930", VA = "0x10B1930")]
		public PlayerAttributes()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class ChangeMovementSpeedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x10D9F8C", Offset = "0x10D9F8C", VA = "0x10D9F8C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x10DA044", Offset = "0x10DA044", VA = "0x10DA044")]
		public ChangeMovementSpeedEvent()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class ChangeMovementSpeedMultiplicator : GenericEvent, IAction
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DashMovement dashMovement;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float val;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x10DA04C", Offset = "0x10DA04C", VA = "0x10DA04C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x10DA118", Offset = "0x10DA118", VA = "0x10DA118")]
		public ChangeMovementSpeedMultiplicator()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class ResetMovementSpeedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x10B7BE8", Offset = "0x10B7BE8", VA = "0x10B7BE8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x10B7C94", Offset = "0x10B7C94", VA = "0x10B7C94")]
		public ResetMovementSpeedEvent()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class RefreshHoverOnLanguageChange : MonoBehaviour
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand playerHand;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x10B5A1C", Offset = "0x10B5A1C", VA = "0x10B5A1C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x10B5A74", Offset = "0x10B5A74", VA = "0x10B5A74")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x10B5AF0", Offset = "0x10B5AF0", VA = "0x10B5AF0")]
		private void LocalisationSystem_OnLateLanguageChange(LanguageData language)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x10B5B80", Offset = "0x10B5B80", VA = "0x10B5B80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x10B5BFC", Offset = "0x10B5BFC", VA = "0x10B5BFC")]
		public RefreshHoverOnLanguageChange()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class UpdateMovementSettings : MonoBehaviour
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRMovement movement;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand LeftHand;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHand RightHand;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JoystickMovement joystickMovement;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnumValueData movementKey;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<AssetMovementSettings> movementSettingsLeft;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<AssetMovementSettings> movementSettings;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EnumValueData snapTurnAngleKey;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EnumValueData turnTypeKey;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EnumValueData smoothRotationSpeedKey;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EnumValueData fallDownBehaviourKey;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public EnumValueData movementDirectionKey;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public EnumValueData holdWeaponKey;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public EnumValueData handednessKey;

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x102B8B0", Offset = "0x102B8B0", VA = "0x102B8B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x102B9A8", Offset = "0x102B9A8", VA = "0x102B9A8")]
		private void UpdateValues()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x102BB24", Offset = "0x102BB24", VA = "0x102BB24")]
		private void SetMovementType(int id)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x102BCD8", Offset = "0x102BCD8", VA = "0x102BCD8")]
		private void SetMovementDirection(JoystickMovement.OrientationType orientationType)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x102BC38", Offset = "0x102BC38", VA = "0x102BC38")]
		private void SetFallDownBehaviour(FallDownBehaviour.FallDownType val)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x102BBF8", Offset = "0x102BBF8", VA = "0x102BBF8")]
		private void SetSmoothRotation(int id)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x102BC1C", Offset = "0x102BC1C", VA = "0x102BC1C")]
		private void SetSmoothRotationSpeed(float val)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x102BBDC", Offset = "0x102BBDC", VA = "0x102BBDC")]
		private void SetRotationAmount(float val)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x102BCF4", Offset = "0x102BCF4", VA = "0x102BCF4")]
		private void SetHoldWeapon(bool val)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x102BDA8", Offset = "0x102BDA8", VA = "0x102BDA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x102BE98", Offset = "0x102BE98", VA = "0x102BE98")]
		private void Instance_OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x102BE9C", Offset = "0x102BE9C", VA = "0x102BE9C")]
		public UpdateMovementSettings()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class UseAbility : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECC8", Offset = "0xE1ECC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UpgradeData, bool> <>9__12_0;

			[Token(Token = "0x600106A")]
			[Address(RVA = "0x102E854", Offset = "0x102E854", VA = "0x102E854")]
			public <>c()
			{
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0x102E85C", Offset = "0x102E85C", VA = "0x102E85C")]
			internal bool <get_NumUpgrades>b__12_0(UpgradeData u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlayerUpgrades playerUpgrades;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform aimPivot;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GEUnit Unit;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnitHealth Health;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PlayerHand Playerhand;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Side side;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AssetVRInputDeviceGroup input;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public KeyCode debugKeyCode;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float lastCoolDown;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<IAction> OnUseEvents;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<IAction> OnUseFailedEvents;

		[Token(Token = "0x17000092")]
		public int NumUpgrades
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x102E1D8", Offset = "0x102E1D8", VA = "0x102E1D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000093")]
		public bool HasActiveUpgrade
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x102E318", Offset = "0x102E318", VA = "0x102E318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x102E40C", Offset = "0x102E40C", VA = "0x102E40C")]
		public float GetCoolDownProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x102E2E8", Offset = "0x102E2E8", VA = "0x102E2E8")]
		private List<UpgradeData> GetUpgradeData()
		{
			return null;
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x102E5BC", Offset = "0x102E5BC", VA = "0x102E5BC")]
		public void Execute()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x102E77C", Offset = "0x102E77C", VA = "0x102E77C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x102E7E0", Offset = "0x102E7E0", VA = "0x102E7E0")]
		public UseAbility()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class LootBox : MonoBehaviour
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxContent boxContent;

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x230539C", Offset = "0x230539C", VA = "0x230539C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x2305430", Offset = "0x2305430", VA = "0x2305430")]
		private void BoxContent_OnGameObjectSpawned(GameObject obj)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x2305524", Offset = "0x2305524", VA = "0x2305524")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x23056AC", Offset = "0x23056AC", VA = "0x23056AC")]
		public LootBox()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class SetGoldLimitAction : BaseAction
	{
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECD8", Offset = "0xE1ECD8")]
		private sealed class <DoExecute>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GenerationInfo generationInfo;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SetGoldLimitAction <>4__this;

			[Token(Token = "0x17000108")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106F")]
				[Address(RVA = "0x10BF308", Offset = "0x10BF308", VA = "0x10BF308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001071")]
				[Address(RVA = "0x10BF370", Offset = "0x10BF370", VA = "0x10BF370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0x10BEED0", Offset = "0x10BEED0", VA = "0x10BEED0")]
			[DebuggerHidden]
			public <DoExecute>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600106D")]
			[Address(RVA = "0x10BEF0C", Offset = "0x10BEF0C", VA = "0x10BEF0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106E")]
			[Address(RVA = "0x10BEF10", Offset = "0x10BEF10", VA = "0x10BEF10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001070")]
			[Address(RVA = "0x10BF310", Offset = "0x10BF310", VA = "0x10BF310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int goldLimitPerLevel;

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x10BEE54", Offset = "0x10BEE54", VA = "0x10BEE54", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE292A8", Offset = "0xE292A8")]
		public override IEnumerator DoExecute(GenerationInfo generationInfo)
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x10BEEFC", Offset = "0x10BEEFC", VA = "0x10BEEFC")]
		public SetGoldLimitAction()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class Profiler : SerializedMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000403")]
		public class StatInfo
		{
			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Value;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Max;

			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "GUIColorAttribute", RVA = "0xE27174", Offset = "0xE27174")]
			public string Percentage;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInTables]
			public float Perc;

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x10B4D70", Offset = "0x10B4D70", VA = "0x10B4D70")]
			public Color PercColor()
			{
				return default(Color);
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x10B48C8", Offset = "0x10B48C8", VA = "0x10B48C8")]
			public StatInfo()
			{
			}
		}

		[Token(Token = "0x2000404")]
		public enum MeshOrderType
		{
			[Token(Token = "0x4000FD3")]
			Count,
			[Token(Token = "0x4000FD4")]
			Vert,
			[Token(Token = "0x4000FD5")]
			Total
		}

		[Serializable]
		[Token(Token = "0x2000405")]
		public class MeshInfo
		{
			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0xE271BC", Offset = "0xE271BC")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE271BC", Offset = "0xE271BC")]
			[ReadOnly]
			public Mesh Mesh;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27218", Offset = "0xE27218")]
			[ReadOnly]
			public int Count;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[ReadOnly]
			public int Vert;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public int VertTotal;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27278", Offset = "0xE27278")]
			[ReadOnly]
			public string Perc;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[ReadOnly]
			public string PercTotal;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE272C8", Offset = "0xE272C8")]
			[ReadOnly]
			public List<GameObject> Objects;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27314", Offset = "0xE27314")]
			[ReadOnly]
			public bool Anim;

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x10B4510", Offset = "0x10B4510", VA = "0x10B4510")]
			public MeshInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000406")]
		public class MaterialInfo
		{
			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public Material Material;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27364", Offset = "0xE27364")]
			[ReadOnly]
			public int Count;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE273A4", Offset = "0xE273A4")]
			[ReadOnly]
			public string Perc;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE273E4", Offset = "0xE273E4")]
			[ReadOnly]
			public List<GameObject> Objects;

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x10B4580", Offset = "0x10B4580", VA = "0x10B4580")]
			public MaterialInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000407")]
		public class ColliderInfo
		{
			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27430", Offset = "0xE27430")]
			[ReadOnly]
			public string Type;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE27470", Offset = "0xE27470")]
			[ReadOnly]
			public int Count;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE274B0", Offset = "0xE274B0")]
			[ReadOnly]
			public string Perc;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE274F0", Offset = "0xE274F0")]
			[ReadOnly]
			public HashSet<GameObject> Objects;

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x10B4600", Offset = "0x10B4600", VA = "0x10B4600")]
			public ColliderInfo()
			{
			}
		}

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECE8", Offset = "0xE1ECE8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshFilter meshFilter;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Renderer, bool> <>9__4;

			[Token(Token = "0x6001077")]
			[Address(RVA = "0x10B4500", Offset = "0x10B4500", VA = "0x10B4500")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x10B4AC0", Offset = "0x10B4AC0", VA = "0x10B4AC0")]
			internal bool <LogGameObject>b__4(Renderer r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x10B4BBC", Offset = "0x10B4BBC", VA = "0x10B4BBC")]
			internal bool <LogGameObject>b__2(MeshInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ECF8", Offset = "0xE1ECF8")]
		private sealed class <>c__DisplayClass24_1
		{
			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRenderer rend;

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x10B4508", Offset = "0x10B4508", VA = "0x10B4508")]
			public <>c__DisplayClass24_1()
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x10B4C20", Offset = "0x10B4C20", VA = "0x10B4C20")]
			internal bool <LogGameObject>b__3(MaterialInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED08", Offset = "0xE1ED08")]
		private sealed class <>c__DisplayClass24_2
		{
			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer skin;

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x10B45F0", Offset = "0x10B45F0", VA = "0x10B45F0")]
			public <>c__DisplayClass24_2()
			{
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0x10B4C84", Offset = "0x10B4C84", VA = "0x10B4C84")]
			internal bool <LogGameObject>b__5(MeshInfo it)
			{
				return default(bool);
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0x10B4CE8", Offset = "0x10B4CE8", VA = "0x10B4CE8")]
			internal bool <LogGameObject>b__6(MaterialInfo it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED18", Offset = "0xE1ED18")]
		private sealed class <>c__DisplayClass24_3
		{
			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string type;

			[Token(Token = "0x600107F")]
			[Address(RVA = "0x10B45F8", Offset = "0x10B45F8", VA = "0x10B45F8")]
			public <>c__DisplayClass24_3()
			{
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0x10B4D4C", Offset = "0x10B4D4C", VA = "0x10B4D4C")]
			internal bool <LogGameObject>b__7(ColliderInfo it)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED28", Offset = "0xE1ED28")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MaterialInfo, int> <>9__24_0;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ColliderInfo, int> <>9__24_1;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshInfo, int> <>9__26_0;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MeshInfo, int> <>9__26_1;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MeshInfo, int> <>9__26_2;

			[Token(Token = "0x6001082")]
			[Address(RVA = "0x10B4A40", Offset = "0x10B4A40", VA = "0x10B4A40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0x10B4A48", Offset = "0x10B4A48", VA = "0x10B4A48")]
			internal int <LogGameObject>b__24_0(MaterialInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0x10B4A60", Offset = "0x10B4A60", VA = "0x10B4A60")]
			internal int <LogGameObject>b__24_1(ColliderInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6001085")]
			[Address(RVA = "0x10B4A78", Offset = "0x10B4A78", VA = "0x10B4A78")]
			internal int <SortMesh>b__26_0(MeshInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6001086")]
			[Address(RVA = "0x10B4A90", Offset = "0x10B4A90", VA = "0x10B4A90")]
			internal int <SortMesh>b__26_1(MeshInfo it)
			{
				return default(int);
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0x10B4AA8", Offset = "0x10B4AA8", VA = "0x10B4AA8")]
			internal int <SortMesh>b__26_2(MeshInfo it)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Profiler Instance;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23894", Offset = "0xE23894")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0xE23894", Offset = "0xE23894")]
		[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE23894", Offset = "0xE23894")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE23894", Offset = "0xE23894")]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE23894", Offset = "0xE23894")]
		public ProfilerData Template;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0xE23944", Offset = "0xE23944")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE23944", Offset = "0xE23944")]
		[ReadOnly]
		public List<StatInfo> Stats;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0xE239D8", Offset = "0xE239D8")]
		[EnumToggleButtons]
		public MeshOrderType MeshOrder;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0xE23A48", Offset = "0xE23A48")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE23A48", Offset = "0xE23A48")]
		public List<MeshInfo> Meshes;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0xE23AD0", Offset = "0xE23AD0")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE23AD0", Offset = "0xE23AD0")]
		public List<MaterialInfo> Materials;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TabGroupAttribute", RVA = "0xE23B58", Offset = "0xE23B58")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE23B58", Offset = "0xE23B58")]
		public List<ColliderInfo> Collider;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int meshCount;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int vertCount;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int matCount;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int matTotalCount;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int collCount;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float countPerc;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float vertPerc;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float matPerc;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float collPerc;

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x10B2E30", Offset = "0x10B2E30", VA = "0x10B2E30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x10B2CE4", Offset = "0x10B2CE4", VA = "0x10B2CE4")]
		public void LogScene()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x10B44D4", Offset = "0x10B44D4", VA = "0x10B44D4")]
		private void LogObject()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x10B2E84", Offset = "0x10B2E84", VA = "0x10B2E84")]
		public void LogGameObject(GameObject obj)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x10B48D0", Offset = "0x10B48D0", VA = "0x10B48D0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x10B4670", Offset = "0x10B4670", VA = "0x10B4670")]
		public void SortMesh()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x10B48D4", Offset = "0x10B48D4", VA = "0x10B48D4")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x10B48DC", Offset = "0x10B48DC", VA = "0x10B48DC")]
		public int GetVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x10B48E4", Offset = "0x10B48E4", VA = "0x10B48E4")]
		public int GetMaterialCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x10B48EC", Offset = "0x10B48EC", VA = "0x10B48EC")]
		public int GetColliderCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x10B48F4", Offset = "0x10B48F4", VA = "0x10B48F4")]
		public Profiler()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class SavePlayerState : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		public class SaveState
		{
			[Token(Token = "0x2000468")]
			public class InventoryPickUp
			{
				[Token(Token = "0x4001168")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int slotId;

				[Token(Token = "0x4001169")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public ObjectData objectData;

				[Token(Token = "0x400116A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public bool isHand;

				[Token(Token = "0x60011B6")]
				[Address(RVA = "0x10BCCFC", Offset = "0x10BCCFC", VA = "0x10BCCFC")]
				public InventoryPickUp(int slotId, ObjectData objectData, bool isHand)
				{
				}
			}

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<InventoryPickUp> pickUps;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float currentLives;

			[Token(Token = "0x4000FF3")]
			public const int LEFT_HAND = 1;

			[Token(Token = "0x4000FF4")]
			public const int RIGHT_HAND = 2;

			[Token(Token = "0x4000FF5")]
			public const int LEFT_HOLSTER = 3;

			[Token(Token = "0x4000FF6")]
			public const int RIGHT_HOLSTER = 4;

			[Token(Token = "0x4000FF7")]
			public const int SMALL_LEFT_HOLSTER = 5;

			[Token(Token = "0x4000FF8")]
			public const int SMALL_RIGHT_HOLSTER = 6;

			[Token(Token = "0x4000FF9")]
			public const int BACK_HOLSTER = 6;

			[Token(Token = "0x4000FFA")]
			public const int UPGRADE_LEFT1 = 8;

			[Token(Token = "0x4000FFB")]
			public const int UPGRADE_LEFT2 = 9;

			[Token(Token = "0x4000FFC")]
			public const int UPGRADE_RIGHT1 = 10;

			[Token(Token = "0x4000FFD")]
			public const int UPGRADE_RIGHT2 = 11;

			[Token(Token = "0x4000FFE")]
			public const int SMALL_LEFT_UP_HOLSTER = 12;

			[Token(Token = "0x4000FFF")]
			public const int SMALL_RIGHT_UP_HOLSTER = 13;

			[Token(Token = "0x6001088")]
			[Address(RVA = "0x10BCC84", Offset = "0x10BCC84", VA = "0x10BCC84")]
			public SaveState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED38", Offset = "0xE1ED38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SceneData, bool> <>9__6_0;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<IPicking> <>9__12_0;

			[Token(Token = "0x600108A")]
			[Address(RVA = "0x10BD92C", Offset = "0x10BD92C", VA = "0x10BD92C")]
			public <>c()
			{
			}

			[Token(Token = "0x600108B")]
			[Address(RVA = "0x10BD934", Offset = "0x10BD934", VA = "0x10BD934")]
			internal bool <Start>b__6_0(SceneData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600108C")]
			[Address(RVA = "0x10BD9D8", Offset = "0x10BD9D8", VA = "0x10BD9D8")]
			internal bool <Awake>b__12_0(IPicking p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED48", Offset = "0xE1ED48")]
		private sealed class <DoPickUpAfterOneFrame>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isHand;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPicking picking;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SavePlayerState <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PickableObject pickable;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <targetPosition>5__2;

			[Token(Token = "0x1700010A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001090")]
				[Address(RVA = "0x10BDF6C", Offset = "0x10BDF6C", VA = "0x10BDF6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001092")]
				[Address(RVA = "0x10BDFD4", Offset = "0x10BDFD4", VA = "0x10BDFD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600108D")]
			[Address(RVA = "0x10BD7CC", Offset = "0x10BD7CC", VA = "0x10BD7CC")]
			[DebuggerHidden]
			public <DoPickUpAfterOneFrame>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x10BD9E4", Offset = "0x10BD9E4", VA = "0x10BD9E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600108F")]
			[Address(RVA = "0x10BD9E8", Offset = "0x10BD9E8", VA = "0x10BD9E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0x10BDF74", Offset = "0x10BDF74", VA = "0x10BDF74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PlayerHand> playerHands;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ExtendedInventorySlot> inventorySlots;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitHealth unitHealth;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SceneData> whitelistedScenes;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 weaponsOffset;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<IPicking> pickingList;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SaveState latestSaveState;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SaveState homebaseEquipSaveState;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SavePlayerState instance;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23BE0", Offset = "0xE23BE0")]
		private List<IPickable> <CurrentHandObjects>k__BackingField;

		[Token(Token = "0x17000094")]
		public List<IPickable> CurrentHandObjects
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x10BD7BC", Offset = "0x10BD7BC", VA = "0x10BD7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2931C", Offset = "0xE2931C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x10BD7C4", Offset = "0x10BD7C4", VA = "0x10BD7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2932C", Offset = "0xE2932C")]
			private set
			{
			}
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x10BBFE4", Offset = "0x10BBFE4", VA = "0x10BBFE4")]
		private void Reset()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x10BC08C", Offset = "0x10BC08C", VA = "0x10BC08C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x10BCA74", Offset = "0x10BCA74", VA = "0x10BCA74")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE2930C", Offset = "0xE2930C")]
		public void Test()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x10BCB08", Offset = "0x10BCB08", VA = "0x10BCB08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x10BC270", Offset = "0x10BC270", VA = "0x10BC270")]
		public void CreateSaveState()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x10BCD44", Offset = "0x10BCD44", VA = "0x10BCD44")]
		public void SetHomebaseEquipSaveState()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x10BCA04", Offset = "0x10BCA04", VA = "0x10BCA04")]
		private void LoadLatestSaveState()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x10BCDB0", Offset = "0x10BCDB0", VA = "0x10BCDB0")]
		private void LoadSaveState(SaveState saveState)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x10BD724", Offset = "0x10BD724", VA = "0x10BD724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2933C", Offset = "0xE2933C")]
		private IEnumerator DoPickUpAfterOneFrame(IPicking picking, PickableObject pickable, bool isHand)
		{
			return null;
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x10BD7F8", Offset = "0x10BD7F8", VA = "0x10BD7F8")]
		public void DeleteSaveState()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x10BD860", Offset = "0x10BD860", VA = "0x10BD860")]
		public SavePlayerState()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class CreateSaveStateEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x100C150", Offset = "0x100C150", VA = "0x100C150", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x100C25C", Offset = "0x100C25C", VA = "0x100C25C")]
		public CreateSaveStateEvent()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class DeleteSaveStateEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x10105A4", Offset = "0x10105A4", VA = "0x10105A4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x10106DC", Offset = "0x10106DC", VA = "0x10106DC")]
		public DeleteSaveStateEvent()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class SetHomebaseEquipState : GenericEvent, IAction
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x10BF378", Offset = "0x10BF378", VA = "0x10BF378", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x10BF480", Offset = "0x10BF480", VA = "0x10BF480")]
		public SetHomebaseEquipState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class EquipState
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23BF0", Offset = "0xE23BF0")]
		public ObjectData leftHand;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23C28", Offset = "0xE23C28")]
		public ObjectData rightHand;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23C60", Offset = "0xE23C60")]
		public ObjectData leftSlot;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23C98", Offset = "0xE23C98")]
		public ObjectData rightSlot;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectData backSlot;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23CD0", Offset = "0xE23CD0")]
		public ObjectData leftBottomChestSlot;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23D08", Offset = "0xE23D08")]
		public ObjectData rightBottomChestSlot;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23D40", Offset = "0xE23D40")]
		public ObjectData leftUpChestSlot;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23D78", Offset = "0xE23D78")]
		public ObjectData rightUpChestSlot;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23DB0", Offset = "0xE23DB0")]
		public ObjectData leftUpgradeSlot1;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23DE8", Offset = "0xE23DE8")]
		public ObjectData leftUpgradeSlot2;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23E20", Offset = "0xE23E20")]
		public ObjectData rightUpgradeSlot1;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23E58", Offset = "0xE23E58")]
		public ObjectData rightUpgradeSlot2;

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x101565C", Offset = "0x101565C", VA = "0x101565C")]
		public EquipState()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE23E90", Offset = "0xE23E90")]
		[AttributeAttribute(Name = "InlineEditorAttribute", RVA = "0xE23E90", Offset = "0xE23E90")]
		public SceneSettingsData Settings;

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x10BE318", Offset = "0x10BE318", VA = "0x10BE318")]
		private void Start()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x10BE3AC", Offset = "0x10BE3AC", VA = "0x10BE3AC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x10BE31C", Offset = "0x10BE31C", VA = "0x10BE31C")]
		private void RefreshShader()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x10BE524", Offset = "0x10BE524", VA = "0x10BE524")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E2D0", Offset = "0xE1E2D0")]
	public class SceneSettingsData : ScriptableObject
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE23EF4", Offset = "0xE23EF4")]
		[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0xE23EF4", Offset = "0xE23EF4")]
		public Texture FadeTextureLEGACY;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0xE23F58", Offset = "0xE23F58")]
		[HideLabel]
		public Texture2D GradientTexture;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE23F98", Offset = "0xE23F98")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE23F98", Offset = "0xE23F98")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE23F98", Offset = "0xE23F98")]
		public List<Gradient> Gradients;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE24030", Offset = "0xE24030")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE24030", Offset = "0xE24030")]
		[HideLabel]
		public string Name;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE240BC", Offset = "0xE240BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE240BC", Offset = "0xE240BC")]
		public float FogFadeColor;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float FogHeight;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FogHeightFade;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float FogDistance;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float FogDistanceFade;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE24120", Offset = "0xE24120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24120", Offset = "0xE24120")]
		public float SkyFadeColorTop;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24184", Offset = "0xE24184")]
		public float SkyFadeColorBottom;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2419C", Offset = "0xE2419C")]
		public float SkyColorHeight;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE241B4", Offset = "0xE241B4")]
		public float SkyColorFade;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE241CC", Offset = "0xE241CC")]
		public float SkyFogHeight;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE241E4", Offset = "0xE241E4")]
		public float SkyFogFade;

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x10BE52C", Offset = "0x10BE52C", VA = "0x10BE52C")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE293A0", Offset = "0xE293A0")]
		[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE293A0", Offset = "0xE293A0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE293A0", Offset = "0xE293A0")]
		public void SaveGradient()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x10BE7AC", Offset = "0x10BE7AC", VA = "0x10BE7AC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x10BE3B0", Offset = "0x10BE3B0", VA = "0x10BE3B0")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE29430", Offset = "0xE29430")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29430", Offset = "0xE29430")]
		public void RefreshShader()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x10BE7D8", Offset = "0x10BE7D8", VA = "0x10BE7D8")]
		public SceneSettingsData()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class SetPistolHoldPointRotation : MonoBehaviour
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 localRotation;

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x10C1650", Offset = "0x10C1650", VA = "0x10C1650")]
		private void Start()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x10C1700", Offset = "0x10C1700", VA = "0x10C1700")]
		public SetPistolHoldPointRotation()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class Shield : BaseWeapon, IIgnoreDamageOnContact, GE.WeaponConfigurator.IDeflective
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GEUnit owner;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShieldData ShieldProfile;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE241FC", Offset = "0xE241FC")]
		public float energy;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float energyLossPerBullet;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool autoShoot;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer meshRenderer;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Gradient colorGradient;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient damageGradient;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float damageDuration;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxActiveTime;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float mineActivationTime;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float animationSpeed;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float regenerationSpeed;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float timeLossPerHit;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool hasEnergy;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[ReadOnly]
		[SerializeField]
		private bool isActive;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[ReadOnly]
		public float currentEnergy;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[ReadOnly]
		[SerializeField]
		private float currentAnimation;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[ReadOnly]
		[SerializeField]
		private float targetAnimation;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastHitTimestamp;

		[Token(Token = "0x14000024")]
		public event Action<Rigidbody> OnReflect
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x10C188C", Offset = "0x10C188C", VA = "0x10C188C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2948C", Offset = "0xE2948C")]
			add
			{
			}
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x10C1930", Offset = "0x10C1930", VA = "0x10C1930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2949C", Offset = "0xE2949C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<float> OnAnimate
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x10C19D4", Offset = "0x10C19D4", VA = "0x10C19D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294AC", Offset = "0xE294AC")]
			add
			{
			}
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x10C1A78", Offset = "0x10C1A78", VA = "0x10C1A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294BC", Offset = "0xE294BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<float> OnDeteriorate
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x10C1B1C", Offset = "0x10C1B1C", VA = "0x10C1B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294CC", Offset = "0xE294CC")]
			add
			{
			}
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x10C1BC0", Offset = "0x10C1BC0", VA = "0x10C1BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294DC", Offset = "0xE294DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action OnActivate
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0x10C1C64", Offset = "0x10C1C64", VA = "0x10C1C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294EC", Offset = "0xE294EC")]
			add
			{
			}
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x10C1D08", Offset = "0x10C1D08", VA = "0x10C1D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE294FC", Offset = "0xE294FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action OnDeactivate
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x10C1DAC", Offset = "0x10C1DAC", VA = "0x10C1DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2950C", Offset = "0xE2950C")]
			add
			{
			}
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x10C1E50", Offset = "0x10C1E50", VA = "0x10C1E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2951C", Offset = "0xE2951C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action OnStartActivation
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x10C1EF4", Offset = "0x10C1EF4", VA = "0x10C1EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2952C", Offset = "0xE2952C")]
			add
			{
			}
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x10C1F98", Offset = "0x10C1F98", VA = "0x10C1F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2953C", Offset = "0xE2953C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnStartDeactivation
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x10C203C", Offset = "0x10C203C", VA = "0x10C203C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2954C", Offset = "0xE2954C")]
			add
			{
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x10C20E0", Offset = "0x10C20E0", VA = "0x10C20E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2955C", Offset = "0xE2955C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x10C2184", Offset = "0x10C2184", VA = "0x10C2184")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x10C21D0", Offset = "0x10C21D0", VA = "0x10C21D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x10C23F4", Offset = "0x10C23F4", VA = "0x10C23F4")]
		private void UpdateVisualModel()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x10C257C", Offset = "0x10C257C", VA = "0x10C257C", Slot = "15")]
		public GEUnit GetGEUnit()
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x10C2584", Offset = "0x10C2584", VA = "0x10C2584")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x10C2934", Offset = "0x10C2934", VA = "0x10C2934")]
		private void LoseEnergy()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x10C297C", Offset = "0x10C297C", VA = "0x10C297C", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x10C2984", Offset = "0x10C2984", VA = "0x10C2984", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x10C298C", Offset = "0x10C298C", VA = "0x10C298C", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x10C29E8", Offset = "0x10C29E8", VA = "0x10C29E8", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x10C2A0C", Offset = "0x10C2A0C", VA = "0x10C2A0C", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x10C21A8", Offset = "0x10C21A8", VA = "0x10C21A8")]
		private void SetShieldActive(bool val)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x10C2A14", Offset = "0x10C2A14", VA = "0x10C2A14", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x10C23CC", Offset = "0x10C23CC", VA = "0x10C23CC")]
		private void DeactivateShield()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x10C29B0", Offset = "0x10C29B0", VA = "0x10C29B0")]
		private void ActivateShield()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x10C2A3C", Offset = "0x10C2A3C", VA = "0x10C2A3C", Slot = "10")]
		public override void Reload()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x10C2A40", Offset = "0x10C2A40", VA = "0x10C2A40", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x10C2A4C", Offset = "0x10C2A4C", VA = "0x10C2A4C", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x10C2A54", Offset = "0x10C2A54", VA = "0x10C2A54", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x10C2A5C", Offset = "0x10C2A5C", VA = "0x10C2A5C", Slot = "16")]
		public void InformAboutDeflection()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x10C2A60", Offset = "0x10C2A60", VA = "0x10C2A60")]
		public Shield()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class ShieldAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit Unit;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shield Shield;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform SpawnPoint;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float shieldDistance;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2435C", Offset = "0xE2435C")]
		private bool <IsAttacking>k__BackingField;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shield shield;

		[Token(Token = "0x17000095")]
		public bool IsAttacking
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x10C2A98", Offset = "0x10C2A98", VA = "0x10C2A98", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2956C", Offset = "0xE2956C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x10C2AA0", Offset = "0x10C2AA0", VA = "0x10C2AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2957C", Offset = "0xE2957C")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public bool AutoAttack
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x10C2AAC", Offset = "0x10C2AAC", VA = "0x10C2AAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000097")]
		public bool BurstAttack
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x10C2AB4", Offset = "0x10C2AB4", VA = "0x10C2AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x10C2ABC", Offset = "0x10C2ABC", VA = "0x10C2ABC", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x10C2C78", Offset = "0x10C2C78", VA = "0x10C2C78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x10C2D78", Offset = "0x10C2D78", VA = "0x10C2D78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x10C2EA4", Offset = "0x10C2EA4", VA = "0x10C2EA4")]
		private void Health_OnDeath()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x10C2B30", Offset = "0x10C2B30", VA = "0x10C2B30", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x10C2F70", Offset = "0x10C2F70", VA = "0x10C2F70", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x10C30A4", Offset = "0x10C30A4", VA = "0x10C30A4", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x10C3104", Offset = "0x10C3104", VA = "0x10C3104", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x10C310C", Offset = "0x10C310C", VA = "0x10C310C", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x10C3110", Offset = "0x10C3110", VA = "0x10C3110", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x10C3118", Offset = "0x10C3118", VA = "0x10C3118")]
		public ShieldAttack()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class LevelTime : MonoBehaviour
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float overseerArrivalTime;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float levelTime;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelTime instance;

		[Token(Token = "0x17000098")]
		public float OverseerApproachTime
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x23042C8", Offset = "0x23042C8", VA = "0x23042C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x2304344", Offset = "0x2304344", VA = "0x2304344")]
		private void Awake()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x2304398", Offset = "0x2304398", VA = "0x2304398")]
		private void Update()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x23043D0", Offset = "0x23043D0", VA = "0x23043D0")]
		public LevelTime()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class AutomaticTileSet : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		public class Tile
		{
			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int pos;

			[Token(Token = "0x6001093")]
			[Address(RVA = "0x10D5BD8", Offset = "0x10D5BD8", VA = "0x10D5BD8")]
			public Tile(Vector3Int pos)
			{
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x10D34A0", Offset = "0x10D34A0", VA = "0x10D34A0")]
			public Tile(int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x2000411")]
		public class Connection
		{
			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 pos;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 forward;

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x10D56CC", Offset = "0x10D56CC", VA = "0x10D56CC")]
			public Connection(Vector3 pos, Vector3 forward)
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED58", Offset = "0xE1ED58")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 centerPoint;

			[Token(Token = "0x6001096")]
			[Address(RVA = "0x10D56BC", Offset = "0x10D56BC", VA = "0x10D56BC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001097")]
			[Address(RVA = "0x10D593C", Offset = "0x10D593C", VA = "0x10D593C")]
			internal bool <CreateTile>b__0(Connection endPoint)
			{
				return default(bool);
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x10D5A08", Offset = "0x10D5A08", VA = "0x10D5A08")]
			internal int <CreateTile>b__1(Connection o)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED68", Offset = "0xE1ED68")]
		private sealed class <>c__DisplayClass13_1
		{
			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int relPos;

			[Token(Token = "0x6001099")]
			[Address(RVA = "0x10D56C4", Offset = "0x10D56C4", VA = "0x10D56C4")]
			public <>c__DisplayClass13_1()
			{
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x10D5B38", Offset = "0x10D5B38", VA = "0x10D5B38")]
			internal bool <CreateTile>b__2(Tile t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawSpheres;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoCreateCompleteListOfCombinations;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelBuilder levelBuilder;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LevelTile tile;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3Int gridPos;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Vector3Int, AutomaticTileSet> positionDict;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector3Int> tiles;

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x10D2F1C", Offset = "0x10D2F1C", VA = "0x10D2F1C")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE2958C", Offset = "0xE2958C")]
		public void UpdateTiles()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x10D323C", Offset = "0x10D323C", VA = "0x10D323C")]
		public void UpdateTile()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x10D53FC", Offset = "0x10D53FC", VA = "0x10D53FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x10D3510", Offset = "0x10D3510", VA = "0x10D3510")]
		private void CreateTile(List<Tile> combination, Vector3 offset)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x10D572C", Offset = "0x10D572C", VA = "0x10D572C")]
		private void AddConnection(List<Connection> connectionList, Connection connection)
		{
		}

		[Token(Token = "0x6000852")]
		public static List<List<T>> GetAllCombos<T>(List<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x10D5858", Offset = "0x10D5858", VA = "0x10D5858")]
		public AutomaticTileSet()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class InGameInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000414")]
		public class Info
		{
			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string infoKey;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LString title;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LString description;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public TutorialPoint tutorialPrefab;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool isActive;

			[Token(Token = "0x4001014")]
			private const string tutorialKey = "Tutorial_";

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TutorialPoint tutorialPoint;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action InitializeAction;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action FinishAction;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<IPickable> PickableCallback1;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<IPickable> PickableCallback2;

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x22FF8FC", Offset = "0x22FF8FC", VA = "0x22FF8FC")]
			public void SetUp()
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x22FFB70", Offset = "0x22FFB70", VA = "0x22FFB70")]
			public void Show()
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x22FFCF8", Offset = "0x22FFCF8", VA = "0x22FFCF8")]
			public bool IsFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0x22FFC74", Offset = "0x22FFC74", VA = "0x22FFC74")]
			public void Finish()
			{
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0x22FFD54", Offset = "0x22FFD54", VA = "0x22FFD54")]
			public Info()
			{
			}
		}

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialPoint tutorialPrefab;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand leftHand;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHand rightHand;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExtendedInventorySlot backSlot;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Info twoHandedHolster;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Info> inGameInfos;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x22FF6B4", Offset = "0x22FF6B4", VA = "0x22FF6B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x22FF7B8", Offset = "0x22FF7B8", VA = "0x22FF7B8")]
		private void SetUpTwoHandedHolster()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x22FF93C", Offset = "0x22FF93C", VA = "0x22FF93C")]
		public InGameInfo()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x22FF9AC", Offset = "0x22FF9AC", VA = "0x22FF9AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2959C", Offset = "0xE2959C")]
		private void <SetUpTwoHandedHolster>b__8_0()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x22FFA1C", Offset = "0x22FFA1C", VA = "0x22FFA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE295AC", Offset = "0xE295AC")]
		private void <SetUpTwoHandedHolster>b__8_1()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x22FFA8C", Offset = "0x22FFA8C", VA = "0x22FFA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE295BC", Offset = "0xE295BC")]
		private void <SetUpTwoHandedHolster>b__8_2(IPickable pickable)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x22FFC5C", Offset = "0x22FFC5C", VA = "0x22FFC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE295CC", Offset = "0xE295CC")]
		private void <SetUpTwoHandedHolster>b__8_3(IPickable pickable)
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class TutorialPoint : MonoBehaviour
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float viewDistance;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject container;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialPoint previousTutorial;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalisationText titleLabel;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalisationText descriptionLabel;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool placeOnTargetPosition;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool setYToZero;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform targetTransform;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool rotateTowardsPlayer;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float smoothTime;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float appearanceDelay;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool requireHandsFree;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float verticalRotationSpeed;

		[Token(Token = "0x40008F0")]
		private const float fadeInDuration = 0.3f;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float finishedTimestamp;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LineRenderer lineRendererConnection;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LineRenderer lineRendererUnderscore;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float targetTransparency;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float currentTransparency;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isFinished;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool hasStarted;

		[Token(Token = "0x17000099")]
		protected VRMovement movement
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x10282DC", Offset = "0x10282DC", VA = "0x10282DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		protected PlayerHand leftHand
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x1028474", Offset = "0x1028474", VA = "0x1028474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		protected PlayerHand rightHand
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0x10284D8", Offset = "0x10284D8", VA = "0x10284D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action OnTutorialPointFinished
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0x102832C", Offset = "0x102832C", VA = "0x102832C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE295DC", Offset = "0xE295DC")]
			add
			{
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0x10283D0", Offset = "0x10283D0", VA = "0x10283D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE295EC", Offset = "0xE295EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x102853C", Offset = "0x102853C", VA = "0x102853C")]
		public void SetTitle(LocalizationData text)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1028558", Offset = "0x1028558", VA = "0x1028558")]
		public void SetDescription(LocalizationData text)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1028574", Offset = "0x1028574", VA = "0x1028574", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x10286E4", Offset = "0x10286E4", VA = "0x10286E4")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1028750", Offset = "0x1028750", VA = "0x1028750", Slot = "5")]
		public virtual bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1028758", Offset = "0x1028758", VA = "0x1028758", Slot = "6")]
		public virtual bool Started()
		{
			return default(bool);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1028858", Offset = "0x1028858", VA = "0x1028858", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x102914C", Offset = "0x102914C", VA = "0x102914C")]
		public TutorialPoint()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class TutorialPointGrenade : TutorialPoint
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public PickableObject grenade;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool hasFinished;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1029170", Offset = "0x1029170", VA = "0x1029170")]
		private void Start()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x10291FC", Offset = "0x10291FC", VA = "0x10291FC")]
		private void ShootWeapon_OnShoot()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1029238", Offset = "0x1029238", VA = "0x1029238", Slot = "5")]
		public override bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1029240", Offset = "0x1029240", VA = "0x1029240", Slot = "6")]
		public override bool Started()
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x102925C", Offset = "0x102925C", VA = "0x102925C")]
		public TutorialPointGrenade()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class TutorialPointPickUp : TutorialPoint
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public PickableObject pickableObject;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool hasBeenPickedUp;

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1029280", Offset = "0x1029280", VA = "0x1029280")]
		private void Start()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1029314", Offset = "0x1029314", VA = "0x1029314")]
		private void PickableObject_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1029350", Offset = "0x1029350", VA = "0x1029350", Slot = "5")]
		public override bool Finished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1029358", Offset = "0x1029358", VA = "0x1029358")]
		public TutorialPointPickUp()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class VerticalSliceSelection : MonoBehaviour
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PickableObject> pickableWeapons;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PickableObject> pickableChips;

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x102FCC8", Offset = "0x102FCC8", VA = "0x102FCC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x102FCCC", Offset = "0x102FCCC", VA = "0x102FCCC")]
		public VerticalSliceSelection()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class CityPoster : MonoBehaviour
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> mapPoints;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer map;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite[] districtMapSprites;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] districtMapTitles;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform dot;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x10DB4D8", Offset = "0x10DB4D8", VA = "0x10DB4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x10DB6A8", Offset = "0x10DB6A8", VA = "0x10DB6A8")]
		public CityPoster()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class DebugPinboard : MonoBehaviour
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugPinboard instance;

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x100E760", Offset = "0x100E760", VA = "0x100E760")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x100E7B4", Offset = "0x100E7B4", VA = "0x100E7B4")]
		public void SetInfo(string info)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x100E7D8", Offset = "0x100E7D8", VA = "0x100E7D8")]
		public DebugPinboard()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class ExclamationMark : MonoBehaviour
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject outrageIcon;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image interior;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AssetBehaviourType> activeBehaviours;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x101AD04", Offset = "0x101AD04", VA = "0x101AD04")]
		private void Start()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x101AECC", Offset = "0x101AECC", VA = "0x101AECC")]
		public ExclamationMark()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class PeacemakerLeaderboardEntry : UILeaderboardEntry
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text GearsLabel;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text DateLabel;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public float value;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LeaderboardBaseData dailyRunKey;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x10B0C94", Offset = "0x10B0C94", VA = "0x10B0C94", Slot = "4")]
		public override void SetUp(GE.SocialFeatures.LeaderboardEntry entry, LeaderboardBaseData profile)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x10B0EC8", Offset = "0x10B0EC8", VA = "0x10B0EC8")]
		public PeacemakerLeaderboardEntry()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class ShowHoverHighlightObject : MonoBehaviour
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand hand;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject obj;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform head;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offset;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IPickable> currentHovers;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x10C3128", Offset = "0x10C3128", VA = "0x10C3128")]
		private void Start()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x10C31E0", Offset = "0x10C31E0", VA = "0x10C31E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x10C3490", Offset = "0x10C3490", VA = "0x10C3490")]
		private void Hand_OnHover(IPickable pickable, bool val)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x10C35B4", Offset = "0x10C35B4", VA = "0x10C35B4")]
		public ShowHoverHighlightObject()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class UIHealthbar : MonoBehaviour
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitHealth unitHealth;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x102B1B0", Offset = "0x102B1B0", VA = "0x102B1B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x102B230", Offset = "0x102B230", VA = "0x102B230")]
		public UIHealthbar()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class UIMarker : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Marker;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x102B238", Offset = "0x102B238", VA = "0x102B238")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x102B3E8", Offset = "0x102B3E8", VA = "0x102B3E8")]
		public UIMarker()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class UIProfiler : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Profiler Profiler;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ProfilerData Profil;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2438C", Offset = "0xE2438C")]
		public Text Mesh;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text MeshPerc;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE243C4", Offset = "0xE243C4")]
		public Text Vertex;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text VertexPerc;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE243FC", Offset = "0xE243FC")]
		public Text Material;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Text MaterialPerc;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE24434", Offset = "0xE24434")]
		public Text Collider;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text ColliderPerc;

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x102B3F8", Offset = "0x102B3F8", VA = "0x102B3F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x102B3FC", Offset = "0x102B3FC", VA = "0x102B3FC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x102B7E0", Offset = "0x102B7E0", VA = "0x102B7E0")]
		private float GetPerc(int value, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x102B7FC", Offset = "0x102B7FC", VA = "0x102B7FC")]
		private Color GetColor(int value, int max)
		{
			return default(Color);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x102B834", Offset = "0x102B834", VA = "0x102B834")]
		public UIProfiler()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class VRPointer : MonoBehaviour
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVRInputDeviceGroup inputDevice;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastMouse;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isButtonPressed;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isButtonDown;

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x102E8C8", Offset = "0x102E8C8", VA = "0x102E8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x102E8F4", Offset = "0x102E8F4", VA = "0x102E8F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x102EAA0", Offset = "0x102EAA0", VA = "0x102EAA0")]
		public VRPointer()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class CheckLeaderboardForSpecificUsers : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000415")]
		public class Entry
		{
			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LeaderboardData leaderboard;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int value;

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x10DB270", Offset = "0x10DB270", VA = "0x10DB270")]
			public Entry()
			{
			}
		}

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Entry> entries;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x10DADB0", Offset = "0x10DADB0", VA = "0x10DADB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x10DADB4", Offset = "0x10DADB4", VA = "0x10DADB4")]
		private void OnReceiveUsername(Message<User> message)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x10DB200", Offset = "0x10DB200", VA = "0x10DB200")]
		public CheckLeaderboardForSpecificUsers()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class CycleThroughGameObjects : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVRInputDeviceGroup inputDevice;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> list;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int iterator;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera editorCamera;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera buildCamera;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject currentCopy;

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x100D98C", Offset = "0x100D98C", VA = "0x100D98C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x100DAC8", Offset = "0x100DAC8", VA = "0x100DAC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x100DC94", Offset = "0x100DC94", VA = "0x100DC94")]
		public CycleThroughGameObjects()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class DestroyIfNotDemoBuild : MonoBehaviour
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1010F24", Offset = "0x1010F24", VA = "0x1010F24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1010FA0", Offset = "0x1010FA0", VA = "0x1010FA0")]
		public DestroyIfNotDemoBuild()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class DestroyIfNotDeveloperBuild : MonoBehaviour
	{
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1010FA8", Offset = "0x1010FA8", VA = "0x1010FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1011024", Offset = "0x1011024", VA = "0x1011024")]
		public DestroyIfNotDeveloperBuild()
		{
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E30C", Offset = "0xE1E30C")]
	public class FaceCamera : MonoBehaviour
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1022328", Offset = "0x1022328", VA = "0x1022328")]
		private void Start()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x10223BC", Offset = "0x10223BC", VA = "0x10223BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x102244C", Offset = "0x102244C", VA = "0x102244C")]
		public FaceCamera()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public static class Layers
	{
		[Token(Token = "0x400092D")]
		public const int Default = 0;

		[Token(Token = "0x400092E")]
		public const int Environment = 14;

		[Token(Token = "0x400092F")]
		public const int Decoration = 17;

		[Token(Token = "0x4000930")]
		public const int CollideWithEnvironmentOnly = 21;
	}
	[Token(Token = "0x200019C")]
	public class LogCollisions : MonoBehaviour
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x2305394", Offset = "0x2305394", VA = "0x2305394")]
		public LogCollisions()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class PropTester : MonoBehaviour
	{
		[Token(Token = "0x2000416")]
		public class TransformCheck
		{
			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4001020")]
			private const float posMargin = 0.1f;

			[Token(Token = "0x4001021")]
			private const float rotMargin = 5f;

			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x10B516C", Offset = "0x10B516C", VA = "0x10B516C")]
			public TransformCheck(Transform transform, Vector3 pos, Quaternion rotation)
			{
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x10B51E4", Offset = "0x10B51E4", VA = "0x10B51E4")]
			public bool StillInCorrectPosition()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED78", Offset = "0xE1ED78")]
		private sealed class <DoTest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A6")]
				[Address(RVA = "0x10B50FC", Offset = "0x10B50FC", VA = "0x10B50FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A8")]
				[Address(RVA = "0x10B5164", Offset = "0x10B5164", VA = "0x10B5164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x10B5084", Offset = "0x10B5084", VA = "0x10B5084")]
			[DebuggerHidden]
			public <DoTest>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x10B50C4", Offset = "0x10B50C4", VA = "0x10B50C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x10B50C8", Offset = "0x10B50C8", VA = "0x10B50C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x10B5104", Offset = "0x10B5104", VA = "0x10B5104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitTime;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numInstancesPerObject;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onlyTestMovingObjects;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<DecorationData> decorationData;

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x10B4DE0", Offset = "0x10B4DE0", VA = "0x10B4DE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x10B4E6C", Offset = "0x10B4E6C", VA = "0x10B4E6C")]
		public static Bounds GetCombinedBoundingBoxOfChildren(Transform root)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x10B4E0C", Offset = "0x10B4E0C", VA = "0x10B4E0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE295FC", Offset = "0xE295FC")]
		private IEnumerator DoTest()
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x10B50B0", Offset = "0x10B50B0", VA = "0x10B50B0")]
		public PropTester()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class ActiveOnPlayerPickUp : MonoBehaviour
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject Pickable;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2447C", Offset = "0xE2447C")]
		public List<GameObject> activateGameObjects;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE244B4", Offset = "0xE244B4")]
		public List<GameObject> deactivateGameObjects;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x10C89CC", Offset = "0x10C89CC", VA = "0x10C89CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x10C8A24", Offset = "0x10C8A24", VA = "0x10C8A24")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x10C8D4C", Offset = "0x10C8D4C", VA = "0x10C8D4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x10C8E24", Offset = "0x10C8E24", VA = "0x10C8E24")]
		private void OnPickup(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x10C8EC0", Offset = "0x10C8EC0", VA = "0x10C8EC0")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x10C8B08", Offset = "0x10C8B08", VA = "0x10C8B08")]
		private void SetGameObjects(bool status)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x10C8F5C", Offset = "0x10C8F5C", VA = "0x10C8F5C")]
		public ActiveOnPlayerPickUp()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class Boomerang : MonoBehaviour
	{
		[Token(Token = "0x2000418")]
		public enum ReturnType
		{
			[Token(Token = "0x4001025")]
			ReturnToThrowPosition,
			[Token(Token = "0x4001026")]
			ReturnToThrowingHand
		}

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeBeforeReturn;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float returnSpeed;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minFlySpeed;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speedMultiplicator;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float stopReturnThreshold;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ReturnType returnType;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject explosionPrefab;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform pickingHand;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LayerMask fallDownLayer;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float releaseTimestamp;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 throwPosition;

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x10D6550", Offset = "0x10D6550", VA = "0x10D6550")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x10D6684", Offset = "0x10D6684", VA = "0x10D6684")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x10D6748", Offset = "0x10D6748", VA = "0x10D6748")]
		private void PickableObject_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x10D6648", Offset = "0x10D6648", VA = "0x10D6648")]
		private void Disable()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x10D6880", Offset = "0x10D6880", VA = "0x10D6880")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x10D6A28", Offset = "0x10D6A28", VA = "0x10D6A28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x10D6C88", Offset = "0x10D6C88", VA = "0x10D6C88")]
		public Boomerang()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ChangeWeaponOnPlayerPickUp : MonoBehaviour
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE244EC", Offset = "0xE244EC")]
		public PickableObject Pickable;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponData weaponProfile;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Weapon weapon;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE24524", Offset = "0xE24524")]
		public List<GameObject> activateGameObjects;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> deactivateGameObjects;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x10DA754", Offset = "0x10DA754", VA = "0x10DA754")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x10DA7AC", Offset = "0x10DA7AC", VA = "0x10DA7AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x10DAB24", Offset = "0x10DAB24", VA = "0x10DAB24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x10DAC08", Offset = "0x10DAC08", VA = "0x10DAC08")]
		private void OnPickup(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x10DAD0C", Offset = "0x10DAD0C", VA = "0x10DAD0C")]
		private void OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x10DA8E8", Offset = "0x10DA8E8", VA = "0x10DA8E8")]
		private void SetGameObjects(bool status)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x10DADA8", Offset = "0x10DADA8", VA = "0x10DADA8")]
		public ChangeWeaponOnPlayerPickUp()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class CreateEnemyPrefabs : MonoBehaviour
	{
		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStatusbarMesh healthDisplayPrefab;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAggroMesh aggroDisplayPrefab;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlobShadow blobShadowPrefab;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AIBehaviourManager aiBehaviourManager;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 healthDisplayOffset;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 aggroDisplayOffset;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BlobShadowDistance;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x100BD44", Offset = "0x100BD44", VA = "0x100BD44")]
		private void Reset()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x100BDB4", Offset = "0x100BDB4", VA = "0x100BDB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x100C0B0", Offset = "0x100C0B0", VA = "0x100C0B0")]
		public CreateEnemyPrefabs()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E320", Offset = "0xE1E320")]
	public class CreateWeaponForRobot : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000419")]
		public class UpgradeProbability
		{
			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UpgradeData upgradeData;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float probability;

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x100D1A0", Offset = "0x100D1A0", VA = "0x100D1A0")]
			public UpgradeProbability()
			{
			}
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedMovement movement;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[ReadOnly]
		public bool meshRendererLocked;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BaseAttack robotAttack;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform weaponHoldPoint;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform secondaryWeaponHoldPoint;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<UpgradeData> upgrades;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetContentPool upgradeContentPool;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RequiredAttribute", RVA = "0xE2456C", Offset = "0xE2456C")]
		public CapsuleCollider movementCollider;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool canLoseWeapon;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool telegraphLaserPointer;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask ignoreBulletsLayer;

		[Token(Token = "0x1700009C")]
		private UnitData unitData
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x100C264", Offset = "0x100C264", VA = "0x100C264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x100C280", Offset = "0x100C280", VA = "0x100C280")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x100D128", Offset = "0x100D128", VA = "0x100D128")]
		public CreateWeaponForRobot()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class DamageEnemy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041A")]
		public class Damage
		{
			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float probability;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<RagdollBoneLink> damagableBoneLinks;

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x100E030", Offset = "0x100E030", VA = "0x100E030")]
			public Damage()
			{
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance unitDataInstance;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Damage> damages;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x100DD04", Offset = "0x100DD04", VA = "0x100DD04")]
		public void Start()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x100DFC0", Offset = "0x100DFC0", VA = "0x100DFC0")]
		public DamageEnemy()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class DeployableZipLine : MonoBehaviour
	{
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED88", Offset = "0xE1ED88")]
		private sealed class <DoHandleShot>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponBullet bullet;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DeployableZipLine <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010AE")]
				[Address(RVA = "0x1010EB4", Offset = "0x1010EB4", VA = "0x1010EB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B0")]
				[Address(RVA = "0x1010F1C", Offset = "0x1010F1C", VA = "0x1010F1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x1010820", Offset = "0x1010820", VA = "0x1010820")]
			[DebuggerHidden]
			public <DoHandleShot>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x101098C", Offset = "0x101098C", VA = "0x101098C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x1010990", Offset = "0x1010990", VA = "0x1010990", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x1010EBC", Offset = "0x1010EBC", VA = "0x1010EBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon weapon;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZipLine zipLinePrefab;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask allowedLayerMask;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform a;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform b;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x10106E4", Offset = "0x10106E4", VA = "0x10106E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1010778", Offset = "0x1010778", VA = "0x1010778")]
		private void Weapon_OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x10107A4", Offset = "0x10107A4", VA = "0x10107A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29660", Offset = "0xE29660")]
		private IEnumerator DoHandleShot(WeaponBullet bullet)
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x101084C", Offset = "0x101084C", VA = "0x101084C")]
		private void DeployZipLine()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1010984", Offset = "0x1010984", VA = "0x1010984")]
		public DeployableZipLine()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E334", Offset = "0xE1E334")]
	public class GrapplingHook : SerializedMonoBehaviour
	{
		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1ED98", Offset = "0xE1ED98")]
		private sealed class <DoMove>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponBullet bullet;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GrapplingHook <>4__this;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <targetPosition>5__2;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <movement>5__3;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 <startForward>5__5;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody <nonKinematicRigidbody>5__6;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <prevFallDelay>5__7;

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <timeSinceBackwardsStart>5__8;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool <validArrow>5__9;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private FallDownBehaviour <fallDownBehaviour>5__10;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <hasClaimedLock>5__11;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B4")]
				[Address(RVA = "0x22F8D00", Offset = "0x22F8D00", VA = "0x22F8D00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B6")]
				[Address(RVA = "0x22F8D68", Offset = "0x22F8D68", VA = "0x22F8D68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x22F77A8", Offset = "0x22F77A8", VA = "0x22F77A8")]
			[DebuggerHidden]
			public <DoMove>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x22F79C8", Offset = "0x22F79C8", VA = "0x22F79C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x22F79CC", Offset = "0x22F79CC", VA = "0x22F79CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x22F8D08", Offset = "0x22F8D08", VA = "0x22F8D08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform weaponArrow;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Weapon weapon;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PickableObject pickable;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speed;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float pullObjectsSpeed;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float distanceThreshold;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float moveBackwardsDistance;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float arcDuration;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public LayerMask layerMask;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[InlineProperty]
		public List<GenericEvent> reelInStartEvents;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[InlineProperty]
		public List<GenericEvent> reelInStopEvents;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<ISideAction> reelInStartEventsSide;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[InlineProperty]
		public List<GenericEvent> canHoldOntoObjectEvents;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[InlineProperty]
		public List<GenericEvent> stopHoldOntoObjectEvents;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float pullMassThreshold;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private VRMovement currentMovement;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE245BC", Offset = "0xE245BC")]
		public Transform bulletLineStart;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform bulletLineEnd;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LineRenderer bulletLine;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool hasMovedHandBackwards;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform weaponArrowParent;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 weaponArrowLocalPosition;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 initialWeaponArrowLocalPosition;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion weaponArrowLocalRotation;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private HandleLoseWeapon currentHlw;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 movementBackwardsDirection;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float defaultGeneralMovementMultiplicator;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GrapplingHook currentLock;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x22F7248", Offset = "0x22F7248", VA = "0x22F7248")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x22F7414", Offset = "0x22F7414", VA = "0x22F7414")]
		private void Pickable_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x22F7528", Offset = "0x22F7528", VA = "0x22F7528")]
		private void Weapon_OnShotFired(WeaponBullet bullet)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x22F75D0", Offset = "0x22F75D0", VA = "0x22F75D0")]
		private void Weapon_OnReleased()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x22F75FC", Offset = "0x22F75FC", VA = "0x22F75FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x22F7554", Offset = "0x22F7554", VA = "0x22F7554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE296C4", Offset = "0xE296C4")]
		private IEnumerator DoMove(WeaponBullet bullet)
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x22F77D4", Offset = "0x22F77D4", VA = "0x22F77D4")]
		public GrapplingHook()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x22F7800", Offset = "0x22F7800", VA = "0x22F7800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29728", Offset = "0xE29728")]
		private void <DoMove>b__34_1(GenericEvent e)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x22F783C", Offset = "0x22F783C", VA = "0x22F783C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29738", Offset = "0xE29738")]
		private void <DoMove>b__34_2(ISideAction e)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x22F798C", Offset = "0x22F798C", VA = "0x22F798C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29748", Offset = "0xE29748")]
		private void <DoMove>b__34_0(GenericEvent e)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class GrapplingHookBoundingBox : MonoBehaviour
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 gridDimension;

		[Token(Token = "0x4000985")]
		private const float gridSize = 4f;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<GrapplingHookBoundingBox> instances;

		[Token(Token = "0x1700009D")]
		private Vector3 RotatedScale
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x22F8EA4", Offset = "0x22F8EA4", VA = "0x22F8EA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700009E")]
		private Vector3 CenterPoint
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x22F8DD0", Offset = "0x22F8DD0", VA = "0x22F8DD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x22F8D70", Offset = "0x22F8D70", VA = "0x22F8D70")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x22F8AF4", Offset = "0x22F8AF4", VA = "0x22F8AF4")]
		public static bool ContainsWorldPoint(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x22F8EDC", Offset = "0x22F8EDC", VA = "0x22F8EDC")]
		private bool WithinCube(Vector3 cubePos, Vector3 cubeScale, Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x22F9018", Offset = "0x22F9018", VA = "0x22F9018")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x22F909C", Offset = "0x22F909C", VA = "0x22F909C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x22F9120", Offset = "0x22F9120", VA = "0x22F9120")]
		public GrapplingHookBoundingBox()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class JetPackGlove : BaseWeapon
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRMovement currentMovement;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FallDownBehaviour fallDownBehaviour;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float noiseRange;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastTimestamp;

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x2301284", Offset = "0x2301284", VA = "0x2301284")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x2301318", Offset = "0x2301318", VA = "0x2301318")]
		private void PickableObject_OnPickUp(IPicking picking, IPickable arg2)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x230142C", Offset = "0x230142C", VA = "0x230142C", Slot = "4")]
		public override BaseBullet GetBullet()
		{
			return null;
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x2301434", Offset = "0x2301434", VA = "0x2301434", Slot = "5")]
		public override bool IsReadyToShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x230143C", Offset = "0x230143C", VA = "0x230143C", Slot = "10")]
		public override void Reload()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x2301440", Offset = "0x2301440", VA = "0x2301440", Slot = "9")]
		public override void Release()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x23014D0", Offset = "0x23014D0", VA = "0x23014D0", Slot = "8")]
		public override bool RequiresRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x23014D8", Offset = "0x23014D8", VA = "0x23014D8", Slot = "6")]
		public override void Shoot(GEUnit owner, List<Collider> unitColliders)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x23016B4", Offset = "0x23016B4", VA = "0x23016B4", Slot = "7")]
		public override Vector3 GetCurrentShotDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x23016D8", Offset = "0x23016D8", VA = "0x23016D8", Slot = "12")]
		public override float GetRange()
		{
			return default(float);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x23016E4", Offset = "0x23016E4", VA = "0x23016E4", Slot = "13")]
		public override Transform GetShotSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x23016EC", Offset = "0x23016EC", VA = "0x23016EC", Slot = "14")]
		public override float GetNoiseRange()
		{
			return default(float);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x230172C", Offset = "0x230172C", VA = "0x230172C")]
		public JetPackGlove()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E348", Offset = "0xE1E348")]
	public class OverwriteAttackValues : MonoBehaviour
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnitDataInstance instance;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseAttack baseAttack;

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x10B04CC", Offset = "0x10B04CC", VA = "0x10B04CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x10B0548", Offset = "0x10B0548", VA = "0x10B0548")]
		public OverwriteAttackValues()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E35C", Offset = "0xE1E35C")]
	public class ZipLine : SerializedMonoBehaviour
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform a;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform b;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject rope;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject zipper;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float startPos;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PickableObject po;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 forwardVector;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float speed;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<GenericEvent> startEvents;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<GenericEvent> stopEvents;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HashSet<IPicking> currentPickings;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool reverse;

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1034210", Offset = "0x1034210", VA = "0x1034210")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x10345E8", Offset = "0x10345E8", VA = "0x10345E8")]
		private void StopZipper()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x10345F4", Offset = "0x10345F4", VA = "0x10345F4")]
		private void StartZipper(IPicking picking)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x10346D4", Offset = "0x10346D4", VA = "0x10346D4")]
		private void ResetZipper(IPicking picking)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x10347C0", Offset = "0x10347C0", VA = "0x10347C0")]
		private float GetProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x10348F4", Offset = "0x10348F4", VA = "0x10348F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1034AB8", Offset = "0x1034AB8", VA = "0x1034AB8")]
		public ZipLine()
		{
		}
	}
}
namespace Peacemaker.Visualization
{
	[Token(Token = "0x20001AA")]
	public class VisualizeHandSelection : MonoBehaviour
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand playerHand;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject visualizerPrefab;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material green;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material red;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxRays;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> rays;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ValueData optionsKey;

		[Token(Token = "0x40009A3")]
		private const float rayThickness = 0.01f;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x10306B8", Offset = "0x10306B8", VA = "0x10306B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1030844", Offset = "0x1030844", VA = "0x1030844")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1030934", Offset = "0x1030934", VA = "0x1030934")]
		private void Instance_OnValueChanged(ValueData data, object val)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x10307C0", Offset = "0x10307C0", VA = "0x10307C0")]
		private void CheckSetUp()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1030938", Offset = "0x1030938", VA = "0x1030938")]
		private void SetUp()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1030A44", Offset = "0x1030A44", VA = "0x1030A44")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1030D44", Offset = "0x1030D44", VA = "0x1030D44")]
		public VisualizeHandSelection()
		{
		}
	}
}
namespace Peacemaker.Tutorial
{
	[Token(Token = "0x20001AB")]
	public class LargeItemStoreTooltip : TutorialTooltip
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PlayerHand playerHandLeft;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayerHand playerHandRight;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExtendedInventorySlot inventorySlot;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isShowing;

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x102766C", Offset = "0x102766C", VA = "0x102766C", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1027930", Offset = "0x1027930", VA = "0x1027930")]
		private void InventorySlot_OnPickUp(IPickable obj)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1027CA4", Offset = "0x1027CA4", VA = "0x1027CA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1027EE4", Offset = "0x1027EE4", VA = "0x1027EE4")]
		private void OnRelease()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1027F44", Offset = "0x1027F44", VA = "0x1027F44")]
		private void OnPickUp(IPickable pickable)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1027AC4", Offset = "0x1027AC4", VA = "0x1027AC4")]
		private void FinishInventoryStorage()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x10280F4", Offset = "0x10280F4", VA = "0x10280F4")]
		public LargeItemStoreTooltip()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class MapTooltip : TutorialTooltip
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HoloMap map;

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1028178", Offset = "0x1028178", VA = "0x1028178", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1028244", Offset = "0x1028244", VA = "0x1028244")]
		private void Map_OnOpen()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x10282D8", Offset = "0x10282D8", VA = "0x10282D8")]
		public MapTooltip()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class TutorialTooltip : SerializedMonoBehaviour
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<IState> showEvents;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string infoKey;

		[Token(Token = "0x40009AB")]
		private const string tutorialKey = "Tutorial_";

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1027828", Offset = "0x1027828", VA = "0x1027828", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1028050", Offset = "0x1028050", VA = "0x1028050")]
		public void Trigger()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1027F18", Offset = "0x1027F18", VA = "0x1027F18")]
		public void Close()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x102807C", Offset = "0x102807C", VA = "0x102807C")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x10280F8", Offset = "0x10280F8", VA = "0x10280F8")]
		public TutorialTooltip()
		{
		}
	}
}
namespace Peacemaker.WeaponState
{
	[Serializable]
	[Token(Token = "0x20001AE")]
	public class ChangeDamage : IWeaponState
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x10331CC", Offset = "0x10331CC", VA = "0x10331CC", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x10331D0", Offset = "0x10331D0", VA = "0x10331D0", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1033268", Offset = "0x1033268", VA = "0x1033268", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1033300", Offset = "0x1033300", VA = "0x1033300")]
		public ChangeDamage()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public enum MathType
	{
		[Token(Token = "0x40009AE")]
		Multiplicative,
		[Token(Token = "0x40009AF")]
		Additive
	}
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class ChangeDamagePercentage : IWeaponState
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MathType Type;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PercentageAmount;

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1033308", Offset = "0x1033308", VA = "0x1033308", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x103330C", Offset = "0x103330C", VA = "0x103330C", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1033414", Offset = "0x1033414", VA = "0x1033414", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x10334D8", Offset = "0x10334D8", VA = "0x10334D8")]
		public ChangeDamagePercentage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B1")]
	public class DamageModifier : IWeaponState
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x10334E8", Offset = "0x10334E8", VA = "0x10334E8", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x10334EC", Offset = "0x10334EC", VA = "0x10334EC", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1033584", Offset = "0x1033584", VA = "0x1033584", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x103361C", Offset = "0x103361C", VA = "0x103361C")]
		public DamageModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B2")]
	public class ChangeAmunitionPercentage : IWeaponState
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x103294C", Offset = "0x103294C", VA = "0x103294C", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1032950", Offset = "0x1032950", VA = "0x1032950", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1032A44", Offset = "0x1032A44", VA = "0x1032A44", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1032B38", Offset = "0x1032B38", VA = "0x1032B38")]
		public ChangeAmunitionPercentage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	public class ChangeAmunitionRecoil : IWeaponState
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1032B48", Offset = "0x1032B48", VA = "0x1032B48", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1032B4C", Offset = "0x1032B4C", VA = "0x1032B4C", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1032C38", Offset = "0x1032C38", VA = "0x1032C38", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1032D24", Offset = "0x1032D24", VA = "0x1032D24")]
		public ChangeAmunitionRecoil()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B4")]
	public class ChangeAmunitionAccuracy : IWeaponState
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PercentageAmount;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1032804", Offset = "0x1032804", VA = "0x1032804", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1032808", Offset = "0x1032808", VA = "0x1032808", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x10328A0", Offset = "0x10328A0", VA = "0x10328A0", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1032938", Offset = "0x1032938", VA = "0x1032938")]
		public ChangeAmunitionAccuracy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B5")]
	public class ChangeCooldown : IWeaponState
	{
		[Token(Token = "0x200041D")]
		public enum Type
		{
			[Token(Token = "0x400103E")]
			Add,
			[Token(Token = "0x400103F")]
			Multiply
		}

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Type type;

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1033040", Offset = "0x1033040", VA = "0x1033040", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1033044", Offset = "0x1033044", VA = "0x1033044", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1033100", Offset = "0x1033100", VA = "0x1033100", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x10331BC", Offset = "0x10331BC", VA = "0x10331BC")]
		public ChangeCooldown()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B6")]
	public class BulletCondition : IWeaponCondition
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletData bullet;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1032774", Offset = "0x1032774", VA = "0x1032774", Slot = "4")]
		public bool Execute(Transform emitter, Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x10327FC", Offset = "0x10327FC", VA = "0x10327FC")]
		public BulletCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B7")]
	public class ReplaceBullets : IWeaponState
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<BulletData, BulletData> replacements;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<BulletData, BulletData> exitStates;

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x103362C", Offset = "0x103362C", VA = "0x103362C", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1033630", Offset = "0x1033630", VA = "0x1033630", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1033760", Offset = "0x1033760", VA = "0x1033760", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1033828", Offset = "0x1033828", VA = "0x1033828")]
		public ReplaceBullets()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B8")]
	public class ChangeBullet : IWeaponState
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BulletData Bullet;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE245F4", Offset = "0xE245F4")]
		public List<WeaponData> Exceptions;

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1032D38", Offset = "0x1032D38", VA = "0x1032D38")]
		private bool IsException(Weapon weapon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1032E84", Offset = "0x1032E84", VA = "0x1032E84", Slot = "4")]
		public void Init(Transform emitter, Weapon weapon, bool state)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1032E88", Offset = "0x1032E88", VA = "0x1032E88", Slot = "5")]
		public void Enter(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1032F28", Offset = "0x1032F28", VA = "0x1032F28", Slot = "6")]
		public void Leave(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1032FD0", Offset = "0x1032FD0", VA = "0x1032FD0")]
		public ChangeBullet()
		{
		}
	}
}
namespace Peacemaker.DebugState
{
	[Serializable]
	[Token(Token = "0x20001B9")]
	public class DebugText : IState, ISideState
	{
		[Token(Token = "0x200041E")]
		public enum DebugType
		{
			[Token(Token = "0x4001041")]
			Info,
			[Token(Token = "0x4001042")]
			Warning,
			[Token(Token = "0x4001043")]
			Error
		}

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnterText;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LeaveText;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugType Type;

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x100E9D8", Offset = "0x100E9D8", VA = "0x100E9D8", Slot = "7")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x100E9DC", Offset = "0x100E9DC", VA = "0x100E9DC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x100E9E4", Offset = "0x100E9E4", VA = "0x100E9E4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x100E9E8", Offset = "0x100E9E8", VA = "0x100E9E8", Slot = "8")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x100EA60", Offset = "0x100EA60", VA = "0x100EA60", Slot = "9")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x100E9E0", Offset = "0x100E9E0", VA = "0x100E9E0")]
		public void ExecuteDebug(string text)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x100EAD8", Offset = "0x100EAD8", VA = "0x100EAD8")]
		public DebugText()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class DebugTag : IState, ISideState
	{
		[Token(Token = "0x200041F")]
		public enum DebugType
		{
			[Token(Token = "0x4001045")]
			Info,
			[Token(Token = "0x4001046")]
			Warning,
			[Token(Token = "0x4001047")]
			Error
		}

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnterText;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LeaveText;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugType Type;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x100E7E0", Offset = "0x100E7E0", VA = "0x100E7E0", Slot = "7")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x100E7E4", Offset = "0x100E7E4", VA = "0x100E7E4", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x100E830", Offset = "0x100E830", VA = "0x100E830", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x100E878", Offset = "0x100E878", VA = "0x100E878", Slot = "8")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x100E924", Offset = "0x100E924", VA = "0x100E924", Slot = "9")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x100E82C", Offset = "0x100E82C", VA = "0x100E82C")]
		public void ExecuteDebug(string text)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x100E9D0", Offset = "0x100E9D0", VA = "0x100E9D0")]
		public DebugTag()
		{
		}
	}
}
namespace Peacemaker.Abilities
{
	[Token(Token = "0x20001BB")]
	public abstract class GenericEnemySelectionEvent : ISuccessAction
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxRange;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxAngle;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetUnitTag> tags;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GEUnit unit;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool success;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2462C", Offset = "0xE2462C")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE2462C", Offset = "0xE2462C")]
		public List<IAction> SuccessEvents;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x125BF8C", Offset = "0x125BF8C", VA = "0x125BF8C", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000937")]
		protected abstract bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source);

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x125C178", Offset = "0x125C178", VA = "0x125C178")]
		protected GEUnit GetSelectedUnit(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x125B738", Offset = "0x125B738", VA = "0x125B738")]
		protected GenericEnemySelectionEvent()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class TeleportTowardsEnemy : GenericEnemySelectionEvent
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceToEnemy;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxNavMeshSearchRadius;

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x10C79A8", Offset = "0x10C79A8", VA = "0x10C79A8", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x10C7B90", Offset = "0x10C7B90", VA = "0x10C7B90")]
		public TeleportTowardsEnemy()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class TransferHealthToUnit : GenericEnemySelectionEvent
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Amount;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AttackInfo attackInfo;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevHealth;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float actualHealthloss;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x10C80D8", Offset = "0x10C80D8", VA = "0x10C80D8", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x10C82F8", Offset = "0x10C82F8", VA = "0x10C82F8")]
		public TransferHealthToUnit()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class ApplyEffectOnEnemy : GenericEnemySelectionEvent
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnitEventData unitEventData;

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x125B43C", Offset = "0x125B43C", VA = "0x125B43C", Slot = "5")]
		protected override bool ExecuteAfterSelection(Transform emitter, GEUnit unit, GEUnit source)
		{
			return default(bool);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x125B734", Offset = "0x125B734", VA = "0x125B734")]
		public ApplyEffectOnEnemy()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class TeleportPlayerToPosition : GenericEvent, IAction
	{
		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDA8", Offset = "0xE1EDA8")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportPlayerToPosition <>4__this;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <prevFallDelay>5__3;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private FallDownBehaviour <fdb>5__4;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ResetHeightOnSteps <resetHeight>5__5;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <i>5__6;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BA")]
				[Address(RVA = "0x10C7424", Offset = "0x10C7424", VA = "0x10C7424", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BC")]
				[Address(RVA = "0x10C748C", Offset = "0x10C748C", VA = "0x10C748C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x10C7010", Offset = "0x10C7010", VA = "0x10C7010")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x10C70A4", Offset = "0x10C70A4", VA = "0x10C70A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x10C70A8", Offset = "0x10C70A8", VA = "0x10C70A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x10C742C", Offset = "0x10C742C", VA = "0x10C742C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x10C6D58", Offset = "0x10C6D58", VA = "0x10C6D58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x10C6F7C", Offset = "0x10C6F7C", VA = "0x10C6F7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29758", Offset = "0xE29758")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x10C6E60", Offset = "0x10C6E60", VA = "0x10C6E60")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x10C703C", Offset = "0x10C703C", VA = "0x10C703C")]
		public TeleportPlayerToPosition()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class TeleportUnitToPosition : GenericEvent, IAction
	{
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDB8", Offset = "0xE1EDB8")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportUnitToPosition <>4__this;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000114")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C0")]
				[Address(RVA = "0x10C8068", Offset = "0x10C8068", VA = "0x10C8068", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000115")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C2")]
				[Address(RVA = "0x10C80D0", Offset = "0x10C80D0", VA = "0x10C80D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x10C7E74", Offset = "0x10C7E74", VA = "0x10C7E74")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x10C7F08", Offset = "0x10C7F08", VA = "0x10C7F08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x10C7F0C", Offset = "0x10C7F0C", VA = "0x10C7F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x10C8070", Offset = "0x10C8070", VA = "0x10C8070", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x10C7BA4", Offset = "0x10C7BA4", VA = "0x10C7BA4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x10C7DE0", Offset = "0x10C7DE0", VA = "0x10C7DE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE297BC", Offset = "0xE297BC")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x10C7CC4", Offset = "0x10C7CC4", VA = "0x10C7CC4")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x10C7EA0", Offset = "0x10C7EA0", VA = "0x10C7EA0")]
		public TeleportUnitToPosition()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class TeleportPlayerToPositionSuccessAction : ISuccessAction
	{
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDC8", Offset = "0xE1EDC8")]
		private sealed class <DoTeleport>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportPlayerToPositionSuccessAction <>4__this;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C6")]
				[Address(RVA = "0x10C7938", Offset = "0x10C7938", VA = "0x10C7938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C8")]
				[Address(RVA = "0x10C79A0", Offset = "0x10C79A0", VA = "0x10C79A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x10C7744", Offset = "0x10C7744", VA = "0x10C7744")]
			[DebuggerHidden]
			public <DoTeleport>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x10C77D8", Offset = "0x10C77D8", VA = "0x10C77D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x10C77DC", Offset = "0x10C77DC", VA = "0x10C77DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x10C7940", Offset = "0x10C7940", VA = "0x10C7940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform startTransform;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minTeleportInterval;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numFrames;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x10C7494", Offset = "0x10C7494", VA = "0x10C7494", Slot = "4")]
		public bool Execute(Transform emitter, GEUnit unit)
		{
			return default(bool);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x10C76B0", Offset = "0x10C76B0", VA = "0x10C76B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29820", Offset = "0xE29820")]
		private IEnumerator DoTeleport(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x10C7594", Offset = "0x10C7594", VA = "0x10C7594")]
		private void Teleport(Vector3 position)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x10C7770", Offset = "0x10C7770", VA = "0x10C7770")]
		public TeleportPlayerToPositionSuccessAction()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class AttachGameObjectToEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject currentObj;

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x125B7DC", Offset = "0x125B7DC", VA = "0x125B7DC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x125B8D0", Offset = "0x125B8D0", VA = "0x125B8D0")]
		public AttachGameObjectToEmitter()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class EnterEventStatesForLimitedTime : GenericEvent, IAction
	{
		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDD8", Offset = "0xE1EDD8")]
		private sealed class <DoEnterStates>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnterEventStatesForLimitedTime <>4__this;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x17000118")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CC")]
				[Address(RVA = "0x125BF1C", Offset = "0x125BF1C", VA = "0x125BF1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000119")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CE")]
				[Address(RVA = "0x125BF84", Offset = "0x125BF84", VA = "0x125BF84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x125BA5C", Offset = "0x125BA5C", VA = "0x125BA5C")]
			[DebuggerHidden]
			public <DoEnterStates>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x125BB00", Offset = "0x125BB00", VA = "0x125BB00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x125BB04", Offset = "0x125BB04", VA = "0x125BB04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x125BF24", Offset = "0x125BF24", VA = "0x125BF24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE2469C", Offset = "0xE2469C")]
		[InlineProperty]
		public List<IState> States;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool initDone;

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x125B98C", Offset = "0x125B98C", VA = "0x125B98C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x125B9E0", Offset = "0x125B9E0", VA = "0x125B9E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29884", Offset = "0xE29884")]
		private IEnumerator DoEnterStates(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x125BA88", Offset = "0x125BA88", VA = "0x125BA88")]
		public EnterEventStatesForLimitedTime()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class ChangeGlobalDamageMultiplicator : IState
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float defaultVal;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x125B8E0", Offset = "0x125B8E0", VA = "0x125B8E0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x125B914", Offset = "0x125B914", VA = "0x125B914", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x125B948", Offset = "0x125B948", VA = "0x125B948", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x125B97C", Offset = "0x125B97C", VA = "0x125B97C")]
		public ChangeGlobalDamageMultiplicator()
		{
		}
	}
}
namespace Peacemaker.WeaponEvent
{
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class ReloadWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon Weapon;

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x10323F8", Offset = "0x10323F8", VA = "0x10323F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1032418", Offset = "0x1032418", VA = "0x1032418")]
		public ReloadWeapon()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class ReloadTargetWeapon : IAction, ITriggerAction
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Weapon weapon;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x103233C", Offset = "0x103233C", VA = "0x103233C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x103235C", Offset = "0x103235C", VA = "0x103235C", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x10323F0", Offset = "0x10323F0", VA = "0x10323F0")]
		public ReloadTargetWeapon()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C7")]
	public class WeaponReload : IWeaponAction
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1032730", Offset = "0x1032730", VA = "0x1032730", Slot = "4")]
		public void Execute(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x103276C", Offset = "0x103276C", VA = "0x103276C")]
		public WeaponReload()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class ShowWeaponTooltip : ISideState
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE246E8", Offset = "0xE246E8")]
		public Vector3 Offset;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24720", Offset = "0xE24720")]
		public float OffsetY;

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1032420", Offset = "0x1032420", VA = "0x1032420", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1032424", Offset = "0x1032424", VA = "0x1032424", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x10326B4", Offset = "0x10326B4", VA = "0x10326B4", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x103271C", Offset = "0x103271C", VA = "0x103271C")]
		public ShowWeaponTooltip()
		{
		}
	}
}
namespace Peacemaker.UpgradeEvent
{
	[Serializable]
	[Token(Token = "0x20001C9")]
	public class UpgradeEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeData Upgrade;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x102CC3C", Offset = "0x102CC3C", VA = "0x102CC3C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x102CCB4", Offset = "0x102CCB4", VA = "0x102CCB4")]
		public UpgradeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CA")]
	public class TriggerUpgradesBulletAction : IBulletAction
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x102CA10", Offset = "0x102CA10", VA = "0x102CA10", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x102CC24", Offset = "0x102CC24", VA = "0x102CC24")]
		public TriggerUpgradesBulletAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public class TriggerUpgradesUnitAction : IUnitAction
	{
		[Token(Token = "0x2000424")]
		public enum ActionType
		{
			[Token(Token = "0x4001062")]
			OnPlayerHit,
			[Token(Token = "0x4001063")]
			OnEnemyHit
		}

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ActionType Action;

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x102CC2C", Offset = "0x102CC2C", VA = "0x102CC2C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x102CC30", Offset = "0x102CC30", VA = "0x102CC30")]
		public void TriggerUpgrade(UpgradeData[] upgrades, GEUnit unit)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x102CC34", Offset = "0x102CC34", VA = "0x102CC34")]
		public TriggerUpgradesUnitAction()
		{
		}
	}
}
namespace Peacemaker.AlarmSystem
{
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class TriggerAlarm : GenericEvent, IAction
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData alarmValue;

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x10CA118", Offset = "0x10CA118", VA = "0x10CA118", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x10CA240", Offset = "0x10CA240", VA = "0x10CA240")]
		public TriggerAlarm()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class EnableAlarm : GenericEvent, IAction
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData alarmValue;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x10CA058", Offset = "0x10CA058", VA = "0x10CA058", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x10CA108", Offset = "0x10CA108", VA = "0x10CA108")]
		public EnableAlarm()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class AlarmSystem : MonoBehaviour
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AlarmSystem Instance;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Material> alarmMaterials;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ValueData alarmStat;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient AlarmGradient;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Speed;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture AlarmTexture;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve AlarmStrength;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, float> defaultFade;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Texture> defaultTextures;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float triggerTime;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool setUpDefaultMats;

		[Token(Token = "0x1400002C")]
		public event Action<bool> OnAlarmTriggered
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x10C9534", Offset = "0x10C9534", VA = "0x10C9534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298E8", Offset = "0xE298E8")]
			add
			{
			}
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x10C95D8", Offset = "0x10C95D8", VA = "0x10C95D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE298F8", Offset = "0xE298F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x10C967C", Offset = "0x10C967C", VA = "0x10C967C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x10C96D0", Offset = "0x10C96D0", VA = "0x10C96D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x10C97B4", Offset = "0x10C97B4", VA = "0x10C97B4")]
		private void Instance_OnValueChanged(ValueData stat, object value)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x10C9890", Offset = "0x10C9890", VA = "0x10C9890")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29908", Offset = "0xE29908")]
		public void EnableAlarm(bool val)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x10C9D5C", Offset = "0x10C9D5C", VA = "0x10C9D5C")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x10C9D64", Offset = "0x10C9D64", VA = "0x10C9D64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x10C9EC8", Offset = "0x10C9EC8", VA = "0x10C9EC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x10C9FB8", Offset = "0x10C9FB8", VA = "0x10C9FB8")]
		public AlarmSystem()
		{
		}
	}
}
namespace Peacemaker.Settings
{
	[Serializable]
	[Token(Token = "0x20001CF")]
	public class DeleteSavedPrefsEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x10C1828", Offset = "0x10C1828", VA = "0x10C1828", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x10C1884", Offset = "0x10C1884", VA = "0x10C1884")]
		public DeleteSavedPrefsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D0")]
	public class DeleteAllPlayerPrefs : GenericEvent, IAction
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x10C1760", Offset = "0x10C1760", VA = "0x10C1760", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x10C17BC", Offset = "0x10C17BC", VA = "0x10C17BC")]
		public DeleteAllPlayerPrefs()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D1")]
	public class DeleteAllProgression : GenericEvent, IAction
	{
		[Token(Token = "0x600097C")]
		[Address(RVA = "0x10C17C4", Offset = "0x10C17C4", VA = "0x10C17C4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x10C1820", Offset = "0x10C1820", VA = "0x10C1820")]
		public DeleteAllProgression()
		{
		}
	}
}
namespace Peacemaker.Scene
{
	[Serializable]
	[Token(Token = "0x20001D2")]
	public class LoadScene : GenericEvent, IAction
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData Scene;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x10BDFDC", Offset = "0x10BDFDC", VA = "0x10BDFDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x10BE058", Offset = "0x10BE058", VA = "0x10BE058")]
		public LoadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D3")]
	public class LoadSpecificSeed : GenericStringEvent
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetWorldProgression World;

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x10BE060", Offset = "0x10BE060", VA = "0x10BE060", Slot = "4")]
		public override void Execute(Transform emitter, string seed)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x10BE258", Offset = "0x10BE258", VA = "0x10BE258")]
		public LoadSpecificSeed()
		{
		}
	}
}
namespace Peacemaker.Quality
{
	[Serializable]
	[Token(Token = "0x20001D4")]
	public class SetQuality : GenericEvent, IAction
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE24768", Offset = "0xE24768")]
		[HideLabel]
		public string Quality;

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x10B5340", Offset = "0x10B5340", VA = "0x10B5340", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x10B53EC", Offset = "0x10B53EC", VA = "0x10B53EC")]
		public string[] GetQuality()
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x10B535C", Offset = "0x10B535C", VA = "0x10B535C")]
		public int GetQualityByName(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x10B53F4", Offset = "0x10B53F4", VA = "0x10B53F4")]
		public SetQuality()
		{
		}
	}
}
namespace Peacemaker.Profile
{
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class OpenProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x10B2CF4", Offset = "0x10B2CF4", VA = "0x10B2CF4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x10B2D58", Offset = "0x10B2D58", VA = "0x10B2D58")]
		public OpenProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class CloseProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x10B2C64", Offset = "0x10B2C64", VA = "0x10B2C64", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x10B2CC0", Offset = "0x10B2CC0", VA = "0x10B2CC0")]
		public CloseProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class SelectProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x10B2D60", Offset = "0x10B2D60", VA = "0x10B2D60", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x10B2DC4", Offset = "0x10B2DC4", VA = "0x10B2DC4")]
		public SelectProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D8")]
	public class ToggleProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0x10B2DCC", Offset = "0x10B2DCC", VA = "0x10B2DCC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x10B2E28", Offset = "0x10B2E28", VA = "0x10B2E28")]
		public ToggleProfiler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D9")]
	public class LogProfiler : GenericEvent, IAction
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Profiler Profiler;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x10B2CC8", Offset = "0x10B2CC8", VA = "0x10B2CC8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x10B2CEC", Offset = "0x10B2CEC", VA = "0x10B2CEC")]
		public LogProfiler()
		{
		}
	}
}
namespace Peacemaker.PopupText
{
	[Serializable]
	[Token(Token = "0x20001DA")]
	public class ShowWorldPopup : GenericEvent, IAction, ISideAction, IAttackAction
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Text;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x10B272C", Offset = "0x10B272C", VA = "0x10B272C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x10B2874", Offset = "0x10B2874", VA = "0x10B2874", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x10B2880", Offset = "0x10B2880", VA = "0x10B2880", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x10B288C", Offset = "0x10B288C", VA = "0x10B288C")]
		public ShowWorldPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class ShowWorldFloatPopup : GenericFloatEvent
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x10B25B0", Offset = "0x10B25B0", VA = "0x10B25B0", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x10B2724", Offset = "0x10B2724", VA = "0x10B2724")]
		public ShowWorldFloatPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class ShowWorldAttackPopup : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x10B24AC", Offset = "0x10B24AC", VA = "0x10B24AC", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo info)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x10B25A8", Offset = "0x10B25A8", VA = "0x10B25A8")]
		public ShowWorldAttackPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class ShowWorldVectorPopup : GenericVectorEvent, IVector3Action
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PopupTextData Profile;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x10B2894", Offset = "0x10B2894", VA = "0x10B2894", Slot = "4")]
		public override void Execute(Transform emitter, Vector3 position)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x10B2968", Offset = "0x10B2968", VA = "0x10B2968")]
		public ShowWorldVectorPopup()
		{
		}
	}
}
namespace Peacemaker.Playerhand
{
	[Serializable]
	[Token(Token = "0x20001DE")]
	public class SpawnMagazine : GenericSideEvent
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MagazineData Magazine;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Opposite;

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x10B22FC", Offset = "0x10B22FC", VA = "0x10B22FC", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x10B24A4", Offset = "0x10B24A4", VA = "0x10B24A4")]
		public SpawnMagazine()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class ReleaseAndDestroy : GenericEvent
	{
		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDE8", Offset = "0xE1EDE8")]
		private sealed class <DoReleaseAndDestroy>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReleaseAndDestroy <>4__this;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D2")]
				[Address(RVA = "0x10B228C", Offset = "0x10B228C", VA = "0x10B228C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D4")]
				[Address(RVA = "0x10B22F4", Offset = "0x10B22F4", VA = "0x10B22F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x10B2158", Offset = "0x10B2158", VA = "0x10B2158")]
			[DebuggerHidden]
			public <DoReleaseAndDestroy>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x10B218C", Offset = "0x10B218C", VA = "0x10B218C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x10B2190", Offset = "0x10B2190", VA = "0x10B2190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x10B2294", Offset = "0x10B2294", VA = "0x10B2294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x10B2088", Offset = "0x10B2088", VA = "0x10B2088", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x10B20DC", Offset = "0x10B20DC", VA = "0x10B20DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29918", Offset = "0xE29918")]
		private IEnumerator DoReleaseAndDestroy(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x10B2184", Offset = "0x10B2184", VA = "0x10B2184")]
		public ReleaseAndDestroy()
		{
		}
	}
}
namespace Peacemaker.PlayerEvents
{
	[Token(Token = "0x20001E0")]
	public class TeleportPlayerInDirection : GenericVectorEvent
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float distance;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool warpToNavMesh;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE247B4", Offset = "0xE247B4")]
		public float maxNavMeshSearchRadius;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask obstacleLayer;

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x10B1D58", Offset = "0x10B1D58", VA = "0x10B1D58", Slot = "4")]
		public override void Execute(Transform emitter, Vector3 value)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x10B2070", Offset = "0x10B2070", VA = "0x10B2070")]
		public TeleportPlayerInDirection()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class HealPlayerEvent : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x10B1B8C", Offset = "0x10B1B8C", VA = "0x10B1B8C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x10B1C6C", Offset = "0x10B1C6C", VA = "0x10B1C6C")]
		public HealPlayerEvent()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class LosePlayerHealth : GenericEvent
	{
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float damage;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x10B1C7C", Offset = "0x10B1C7C", VA = "0x10B1C7C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x10B1D48", Offset = "0x10B1D48", VA = "0x10B1D48")]
		public LosePlayerHealth()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class DistanceToPlayerCondition : GenericCondition
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDistance;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDistance;

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x10B1938", Offset = "0x10B1938", VA = "0x10B1938", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x10B1A98", Offset = "0x10B1A98", VA = "0x10B1A98")]
		public DistanceToPlayerCondition()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class HealPlayer : GenericEvent
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float amount;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x10B1AAC", Offset = "0x10B1AAC", VA = "0x10B1AAC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x10B1B7C", Offset = "0x10B1B7C", VA = "0x10B1B7C")]
		public HealPlayer()
		{
		}
	}
}
namespace Peacemaker.Particle
{
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class SpawnParticle : GenericEvent, IAction, ITriggerAction, IVector3Action
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x10B077C", Offset = "0x10B077C", VA = "0x10B077C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x10B0898", Offset = "0x10B0898", VA = "0x10B0898", Slot = "6")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x10B0A14", Offset = "0x10B0A14", VA = "0x10B0A14", Slot = "7")]
		public void Execute(Transform emitter, Vector3 position)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x10B0B68", Offset = "0x10B0B68", VA = "0x10B0B68")]
		public SpawnParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E6")]
	public class SpawnParticleAtParent : GenericEvent, IAction
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parent;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x10B0B70", Offset = "0x10B0B70", VA = "0x10B0B70", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x10B0C8C", Offset = "0x10B0C8C", VA = "0x10B0C8C")]
		public SpawnParticleAtParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E7")]
	public class SpawnCollisionParticle : GenericCollisionEvent, ICollisionAction
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleData Profile;

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x10B0558", Offset = "0x10B0558", VA = "0x10B0558", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x10B0774", Offset = "0x10B0774", VA = "0x10B0774")]
		public SpawnCollisionParticle()
		{
		}
	}
}
namespace Peacemaker.NoteEvents
{
	[Serializable]
	[Token(Token = "0x20001E8")]
	public class UnlockNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoteData Note;

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x2306F58", Offset = "0x2306F58", VA = "0x2306F58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x2307014", Offset = "0x2307014", VA = "0x2307014")]
		public UnlockNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E9")]
	public class IncreaseShootWeaponNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeaponNoteData Note;

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x2306E94", Offset = "0x2306E94", VA = "0x2306E94", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x2306F50", Offset = "0x2306F50", VA = "0x2306F50")]
		public IncreaseShootWeaponNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EA")]
	public class IncreaseKillUnitNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitNoteData Note;

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x2306DD0", Offset = "0x2306DD0", VA = "0x2306DD0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x2306E8C", Offset = "0x2306E8C", VA = "0x2306E8C")]
		public IncreaseKillUnitNote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EB")]
	public class ChangePlayerNote : GenericEvent, IAction
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NoteReader noteReader;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LoreNoteData Note;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x2306D40", Offset = "0x2306D40", VA = "0x2306D40", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x2306DC8", Offset = "0x2306DC8", VA = "0x2306DC8")]
		public ChangePlayerNote()
		{
		}
	}
}
namespace Peacemaker.Materials
{
	[Serializable]
	[Token(Token = "0x20001EC")]
	public class SetMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Objects;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IncludeChildren;

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x2305B8C", Offset = "0x2305B8C", VA = "0x2305B8C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x2305DB4", Offset = "0x2305DB4", VA = "0x2305DB4")]
		public void Replace(Material material)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x2305CF0", Offset = "0x2305CF0", VA = "0x2305CF0")]
		public void ReplaceMaterial(Transform trans, Material material)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x2305F28", Offset = "0x2305F28", VA = "0x2305F28")]
		public SetMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001ED")]
	public class SetLevelMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x2305A04", Offset = "0x2305A04", VA = "0x2305A04", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x2305AC0", Offset = "0x2305AC0", VA = "0x2305AC0")]
		public void ReplaceMaterial(Transform trans, Material material)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x2305B84", Offset = "0x2305B84", VA = "0x2305B84")]
		public SetLevelMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EE")]
	public class SetGlobalMaterial : GenericEvent, IAction
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public Material Material;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x23058BC", Offset = "0x23058BC", VA = "0x23058BC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x23059FC", Offset = "0x23059FC", VA = "0x23059FC")]
		public SetGlobalMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class SetSpriteColor : GenericEvent, IAction
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x2305F98", Offset = "0x2305F98", VA = "0x2305F98", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x2305FC0", Offset = "0x2305FC0", VA = "0x2305FC0")]
		public SetSpriteColor()
		{
		}
	}
}
namespace Peacemaker.Level
{
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class SetSeed : GenericEvent, IAction
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SeedType SeedMode;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE24820", Offset = "0xE24820")]
		public int Seed;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x2302EEC", Offset = "0x2302EEC", VA = "0x2302EEC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x2302FAC", Offset = "0x2302FAC", VA = "0x2302FAC")]
		public SetSeed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F1")]
	public class RandomLevel : GenericEvent, IAction
	{
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x2302990", Offset = "0x2302990", VA = "0x2302990", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x23029F8", Offset = "0x23029F8", VA = "0x23029F8")]
		public RandomLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public class ReloadLevel : GenericEvent, IAction
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x2302BCC", Offset = "0x2302BCC", VA = "0x2302BCC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x2302C34", Offset = "0x2302C34", VA = "0x2302C34")]
		public ReloadLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class LoadScene : GenericEvent, IAction
	{
		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneData Scene;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x230288C", Offset = "0x230288C", VA = "0x230288C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x2302988", Offset = "0x2302988", VA = "0x2302988")]
		public LoadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class ReloadScene : GenericEvent, IAction
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x2302C3C", Offset = "0x2302C3C", VA = "0x2302C3C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x2302CBC", Offset = "0x2302CBC", VA = "0x2302CBC")]
		public ReloadScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class ReloadSceneIfTrue : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x2302CC4", Offset = "0x2302CC4", VA = "0x2302CC4", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x2302D54", Offset = "0x2302D54", VA = "0x2302D54")]
		public ReloadSceneIfTrue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F6")]
	public class LoadLevelActions : IAction
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x2302608", Offset = "0x2302608", VA = "0x2302608", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x2302884", Offset = "0x2302884", VA = "0x2302884")]
		public LoadLevelActions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class RemoveUnitByTag : IUnitAction
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x2302D5C", Offset = "0x2302D5C", VA = "0x2302D5C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x2302E1C", Offset = "0x2302E1C", VA = "0x2302E1C")]
		public RemoveUnitByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F8")]
	public class RemoveWeaponByTag : IWeaponAction
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x2302E24", Offset = "0x2302E24", VA = "0x2302E24", Slot = "4")]
		public void Execute(Transform emitter, Weapon weapon)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x2302EE4", Offset = "0x2302EE4", VA = "0x2302EE4")]
		public RemoveWeaponByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class ReduceUnitHealthByTag : IUnitAction
	{
		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE248B8", Offset = "0xE248B8")]
		public float Percentage;

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x2302ACC", Offset = "0x2302ACC", VA = "0x2302ACC", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x2302BBC", Offset = "0x2302BBC", VA = "0x2302BBC")]
		public ReduceUnitHealthByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FA")]
	public class DebugUnitByTag : IUnitAction
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag Tag;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x2302554", Offset = "0x2302554", VA = "0x2302554", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x2302600", Offset = "0x2302600", VA = "0x2302600")]
		public DebugUnitByTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class ReducePlayerHealth : IAction, IPlayerAction
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE248D0", Offset = "0xE248D0")]
		public float Percentage;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x2302A00", Offset = "0x2302A00", VA = "0x2302A00", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x2302A84", Offset = "0x2302A84", VA = "0x2302A84", Slot = "5")]
		public void Execute(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x2302ABC", Offset = "0x2302ABC", VA = "0x2302ABC")]
		public ReducePlayerHealth()
		{
		}
	}
}
namespace Peacemaker.Interaction
{
	[Serializable]
	[Token(Token = "0x20001FC")]
	public class ChangeThrowBehaviour : GenericEvent, IAction
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetThrowBehaviour throwBehaviour;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x230035C", Offset = "0x230035C", VA = "0x230035C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x230037C", Offset = "0x230037C", VA = "0x230037C")]
		public ChangeThrowBehaviour()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class ReleaseFromHand : GenericEvent, IAction
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand playerHand;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x23006A8", Offset = "0x23006A8", VA = "0x23006A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x23006C4", Offset = "0x23006C4", VA = "0x23006C4")]
		public ReleaseFromHand()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class ReleaseEvent : GenericEvent, IAction
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EDF8", Offset = "0xE1EDF8")]
		private sealed class <DoReleaseAtEndOfFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPicking picking;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PickableObject po;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D8")]
				[Address(RVA = "0x2300638", Offset = "0x2300638", VA = "0x2300638", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010DA")]
				[Address(RVA = "0x23006A0", Offset = "0x23006A0", VA = "0x23006A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x23004F0", Offset = "0x23004F0", VA = "0x23004F0")]
			[DebuggerHidden]
			public <DoReleaseAtEndOfFrame>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x2300524", Offset = "0x2300524", VA = "0x2300524", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x2300528", Offset = "0x2300528", VA = "0x2300528", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x2300640", Offset = "0x2300640", VA = "0x2300640", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PickableObject pickableObject;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x2300384", Offset = "0x2300384", VA = "0x2300384", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x2300474", Offset = "0x2300474", VA = "0x2300474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2997C", Offset = "0xE2997C")]
		private IEnumerator DoReleaseAtEndOfFrame(IPicking picking, PickableObject po, Vector3 initialPosition)
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x230051C", Offset = "0x230051C", VA = "0x230051C")]
		public ReleaseEvent()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class AllowHandPickUp : GenericEvent, IAction
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand playerHand;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x2300334", Offset = "0x2300334", VA = "0x2300334", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x2300354", Offset = "0x2300354", VA = "0x2300354")]
		public AllowHandPickUp()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	public class ActivateLift : GenericEvent, IAction
	{
		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LiftMovement Lift;

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x22FFFF8", Offset = "0x22FFFF8", VA = "0x22FFFF8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x230032C", Offset = "0x230032C", VA = "0x230032C")]
		public ActivateLift()
		{
		}
	}
}
namespace Peacemaker.Haptic
{
	[Serializable]
	[Token(Token = "0x2000201")]
	public class HapticEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanValueData HapticsSettings;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HapticLength;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve HapticFrequency;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve HapticAmplitude;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useHaptics;

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x22FB94C", Offset = "0x22FB94C", VA = "0x22FB94C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x22FBA50", Offset = "0x22FBA50", VA = "0x22FBA50")]
		public HapticEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class HapticDataEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticData Haptic;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useHaptics;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x22FB798", Offset = "0x22FB798", VA = "0x22FB798", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x22FB944", Offset = "0x22FB944", VA = "0x22FB944")]
		public HapticDataEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class HapticSideEvent : GenericEvent, IAction, ICollisionAction
	{
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side Side;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticData Haptic;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useHaptics;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x22FBA58", Offset = "0x22FBA58", VA = "0x22FBA58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x22FBB58", Offset = "0x22FBB58", VA = "0x22FBB58", Slot = "6")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x22FBB64", Offset = "0x22FBB64", VA = "0x22FBB64")]
		public HapticSideEvent()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public static class HapticBaseEvent
	{
		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE08", Offset = "0xE1EE08")]
		private sealed class <DoPlayOVRCurve>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve HapticFrequency;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float HapticLength;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve HapticAmplitude;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Side side;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <frequencyMult>5__2;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <amplitudeMult>5__3;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private OVRInput.Controller <controller>5__4;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AssetVRInputDeviceGroup <inputDevice>5__5;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <i>5__6;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010DE")]
				[Address(RVA = "0x22FB728", Offset = "0x22FB728", VA = "0x22FB728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E0")]
				[Address(RVA = "0x22FB790", Offset = "0x22FB790", VA = "0x22FB790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x22FB338", Offset = "0x22FB338", VA = "0x22FB338")]
			[DebuggerHidden]
			public <DoPlayOVRCurve>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x22FB364", Offset = "0x22FB364", VA = "0x22FB364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x22FB368", Offset = "0x22FB368", VA = "0x22FB368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x22FB730", Offset = "0x22FB730", VA = "0x22FB730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A45")]
		private const float precision = 0.1f;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x22FB2A0", Offset = "0x22FB2A0", VA = "0x22FB2A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE299E0", Offset = "0xE299E0")]
		public static IEnumerator DoPlayOVRCurve(float HapticLength, AnimationCurve HapticFrequency, AnimationCurve HapticAmplitude, Side side)
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	public class EnterLeaveSideState : ISideState
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ISideAction> enterSideAction;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ISideAction> leaveSideAction;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x22FB1E4", Offset = "0x22FB1E4", VA = "0x22FB1E4", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x22FB1F8", Offset = "0x22FB1F8", VA = "0x22FB1F8", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x22FB1FC", Offset = "0x22FB1FC", VA = "0x22FB1FC", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x22FB210", Offset = "0x22FB210", VA = "0x22FB210")]
		public EnterLeaveSideState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class HapticWeaponEvent : GenericSideEvent, ISideAction
	{
		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE18", Offset = "0xE1EE18")]
		private sealed class <DoPlayOVRCurve>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Side side;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticWeaponEvent <>4__this;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OVRInput.Controller <controller>5__2;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <i>5__3;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E4")]
				[Address(RVA = "0x22FBFD8", Offset = "0x22FBFD8", VA = "0x22FBFD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E6")]
				[Address(RVA = "0x22FC040", Offset = "0x22FC040", VA = "0x22FC040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x22FBDDC", Offset = "0x22FBDDC", VA = "0x22FBDDC")]
			[DebuggerHidden]
			public <DoPlayOVRCurve>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x22FBE10", Offset = "0x22FBE10", VA = "0x22FBE10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x22FBE14", Offset = "0x22FBE14", VA = "0x22FBE14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x22FBFE0", Offset = "0x22FBFE0", VA = "0x22FBFE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon Weapon;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BooleanValueData HapticsSettings;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WeaponData profile;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float frequencyMult;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float amplitudeMult;

		[Token(Token = "0x4000A4D")]
		private const float precision = 0.1f;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useHaptics;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x22FBB6C", Offset = "0x22FBB6C", VA = "0x22FBB6C", Slot = "4")]
		public override void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x22FBD5C", Offset = "0x22FBD5C", VA = "0x22FBD5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29A44", Offset = "0xE29A44")]
		private IEnumerator DoPlayOVRCurve(Side side)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x22FBE08", Offset = "0x22FBE08", VA = "0x22FBE08")]
		public HapticWeaponEvent()
		{
		}
	}
}
namespace Peacemaker.Graphics
{
	[Token(Token = "0x2000207")]
	public class OverwriteMaterialState_Float : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialFloatParameter floatParam;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float val;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useCurve;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE248E8", Offset = "0xE248E8")]
		public AnimationCurve curve;

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x22F6CE4", Offset = "0x22F6CE4", VA = "0x22F6CE4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x22F6DF0", Offset = "0x22F6DF0", VA = "0x22F6DF0", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x22F6DFC", Offset = "0x22F6DFC", VA = "0x22F6DFC")]
		public OverwriteMaterialState_Float()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class OverwriteMaterialState_Color : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color val;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x22F6BDC", Offset = "0x22F6BDC", VA = "0x22F6BDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x22F6CD0", Offset = "0x22F6CD0", VA = "0x22F6CD0", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x22F6CDC", Offset = "0x22F6CDC", VA = "0x22F6CDC")]
		public OverwriteMaterialState_Color()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class OverwriteMaterialState_Gradient : GenericEvent, IAction, IUnitAction
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x22F6E04", Offset = "0x22F6E04", VA = "0x22F6E04", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x22F6F04", Offset = "0x22F6F04", VA = "0x22F6F04", Slot = "6")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x22F6F10", Offset = "0x22F6F10", VA = "0x22F6F10")]
		public OverwriteMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class EventState : IState
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IAction> enterEvents;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IAction> exitEvents;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x22F6520", Offset = "0x22F6520", VA = "0x22F6520", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x22F6534", Offset = "0x22F6534", VA = "0x22F6534", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x22F6550", Offset = "0x22F6550", VA = "0x22F6550", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x22F6564", Offset = "0x22F6564", VA = "0x22F6564")]
		public EventState()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class MaterialState : IState
	{
		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24924", Offset = "0xE24924")]
		public float stopPosition;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool affectSpecificMaterial;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE2495C", Offset = "0xE2495C")]
		public List<string> specificMaterials;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x22F66E4", Offset = "0x22F66E4", VA = "0x22F66E4", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x22F67EC", Offset = "0x22F67EC", VA = "0x22F67EC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x22F67F8", Offset = "0x22F67F8", VA = "0x22F67F8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x22F68E0", Offset = "0x22F68E0", VA = "0x22F68E0")]
		public MaterialState()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class MaterialState_Float : IState
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialFloatParameter param;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float val;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24998", Offset = "0xE24998")]
		public float stopPosition;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool affectSpecificMaterial;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE249D0", Offset = "0xE249D0")]
		public List<string> specificMaterials;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x22F695C", Offset = "0x22F695C", VA = "0x22F695C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x22F6A64", Offset = "0x22F6A64", VA = "0x22F6A64", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x22F6A70", Offset = "0x22F6A70", VA = "0x22F6A70", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x22F6B58", Offset = "0x22F6B58", VA = "0x22F6B58")]
		public MaterialState_Float()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class EnterMaterialState_Gradient : GenericEvent, IAction
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient val;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24A0C", Offset = "0xE24A0C")]
		public float stopPosition;

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x22F6414", Offset = "0x22F6414", VA = "0x22F6414", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x22F650C", Offset = "0x22F650C", VA = "0x22F650C")]
		public EnterMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ExitMaterialState_Gradient : GenericEvent, IAction
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialColorParameter param;

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x22F65F4", Offset = "0x22F65F4", VA = "0x22F65F4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x22F66DC", Offset = "0x22F66DC", VA = "0x22F66DC")]
		public ExitMaterialState_Gradient()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class OverwriteMaterialState_Texture : GenericEvent, IAction
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverwriteMaterialTextureParameter param;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture val;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x22F6F18", Offset = "0x22F6F18", VA = "0x22F6F18", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x22F7008", Offset = "0x22F7008", VA = "0x22F7008")]
		public OverwriteMaterialState_Texture()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class OverwriteMaterialState_TwoColors : GenericEvent, IAction
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture colorTexture;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color lineColor;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x22F7010", Offset = "0x22F7010", VA = "0x22F7010", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x22F7204", Offset = "0x22F7204", VA = "0x22F7204")]
		public OverwriteMaterialState_TwoColors()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class SetBlendShapeValue : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int shapeKeyIndex;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float multiplicator;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x22F720C", Offset = "0x22F720C", VA = "0x22F720C", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x22F7238", Offset = "0x22F7238", VA = "0x22F7238")]
		public SetBlendShapeValue()
		{
		}
	}
}
namespace Peacemaker.DebugLog
{
	[Serializable]
	[Token(Token = "0x2000212")]
	public class DebugLog : GenericEvent, IAction
	{
		[Token(Token = "0x2000429")]
		public enum DebugType
		{
			[Token(Token = "0x400107E")]
			Info,
			[Token(Token = "0x400107F")]
			Warning,
			[Token(Token = "0x4001080")]
			Error
		}

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public string Text;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideLabel]
		public DebugType Type;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x100E650", Offset = "0x100E650", VA = "0x100E650", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x100E750", Offset = "0x100E750", VA = "0x100E750")]
		public DebugLog()
		{
		}
	}
}
namespace Peacemaker.Physic
{
	[Serializable]
	[Token(Token = "0x2000213")]
	public class IgnoreCollisionTag : GenericCollisionEvent
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE24A64", Offset = "0xE24A64")]
		public string Tag;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24A9C", Offset = "0xE24A9C")]
		public List<Collider> Collider;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x10B0F7C", Offset = "0x10B0F7C", VA = "0x10B0F7C", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x10B10B4", Offset = "0x10B10B4", VA = "0x10B10B4")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x10B1100", Offset = "0x10B1100", VA = "0x10B1100")]
		public IgnoreCollisionTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000214")]
	public class AddRelativeForce : GenericEvent, IAction
	{
		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Direction;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Strength;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x10B0ED0", Offset = "0x10B0ED0", VA = "0x10B0ED0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x10B0F74", Offset = "0x10B0F74", VA = "0x10B0F74")]
		public AddRelativeForce()
		{
		}
	}
}
namespace Peacemaker.AchievementEvents
{
	[Serializable]
	[Token(Token = "0x2000215")]
	public class UnlockAchievement : GenericEvent, IAction
	{
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementUnlockData Unlock;

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x10C851C", Offset = "0x10C851C", VA = "0x10C851C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x10C85D8", Offset = "0x10C85D8", VA = "0x10C85D8")]
		public UnlockAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class ProgressAchievement : GenericEvent, IAction
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementProgressData Progress;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x10C8454", Offset = "0x10C8454", VA = "0x10C8454", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x10C8514", Offset = "0x10C8514", VA = "0x10C8514")]
		public ProgressAchievement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class HasAchievement : GenericEvent, IAction
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementUnlockData Unlock;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x10C8390", Offset = "0x10C8390", VA = "0x10C8390", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x10C844C", Offset = "0x10C844C", VA = "0x10C844C")]
		public HasAchievement()
		{
		}
	}
}
namespace Peacemaker.UI
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE1E370", Offset = "0xE1E370")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E370", Offset = "0xE1E370")]
	public class OnMultToggleEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24AD4", Offset = "0xE24AD4")]
		public List<ValueEvent> valueEvents;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle toggle;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<OnMultToggleEvent> relatedToggleEvents;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ValueData Index;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ScriptableObject Value;

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1029544", Offset = "0x1029544", VA = "0x1029544", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1029810", Offset = "0x1029810", VA = "0x1029810")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x10296E0", Offset = "0x10296E0", VA = "0x10296E0")]
		public void OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1029900", Offset = "0x1029900", VA = "0x1029900")]
		private void OnToggle(bool value)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1029964", Offset = "0x1029964", VA = "0x1029964")]
		public OnMultToggleEvent()
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE1E3F8", Offset = "0xE1E3F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E3F8", Offset = "0xE1E3F8")]
	public class OnToggleEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24B0C", Offset = "0xE24B0C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24B0C", Offset = "0xE24B0C")]
		[InlineProperty]
		public List<IAction> Actions;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24B7C", Offset = "0xE24B7C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24B7C", Offset = "0xE24B7C")]
		[InlineProperty]
		public List<IBoolAction> ToggleActions;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24BEC", Offset = "0xE24BEC")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24BEC", Offset = "0xE24BEC")]
		[InlineProperty]
		public List<GenericBooleanEvent> EventsBoolean;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE24C5C", Offset = "0xE24C5C")]
		public ValueData Index;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Toggle toggle;

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x10299FC", Offset = "0x10299FC", VA = "0x10299FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1029A54", Offset = "0x1029A54", VA = "0x1029A54", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1029D84", Offset = "0x1029D84", VA = "0x1029D84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1029C10", Offset = "0x1029C10", VA = "0x1029C10")]
		private void Instance_OnValueChanged(ValueData index, object value)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1029E74", Offset = "0x1029E74", VA = "0x1029E74")]
		private void OnToggle(bool value)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x102A08C", Offset = "0x102A08C", VA = "0x102A08C")]
		public OnToggleEvent()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class ShowIntegerValueOnUI : IntegerValueEvent
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text label;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x102AAE0", Offset = "0x102AAE0", VA = "0x102AAE0", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x102ABA4", Offset = "0x102ABA4", VA = "0x102ABA4")]
		public ShowIntegerValueOnUI()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class DailyRunButton : MonoBehaviour
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x1700009F")]
		public static string DailySeedKey
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x1029398", Offset = "0x1029398", VA = "0x1029398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x102937C", Offset = "0x102937C", VA = "0x102937C")]
		public void StoreCurrentDailySeed()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1029430", Offset = "0x1029430", VA = "0x1029430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x10294CC", Offset = "0x10294CC", VA = "0x10294CC")]
		private void CheckButtonInteractable()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x102951C", Offset = "0x102951C", VA = "0x102951C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1029520", Offset = "0x1029520", VA = "0x1029520")]
		public DailyRunButton()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1029528", Offset = "0x1029528", VA = "0x1029528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29AA8", Offset = "0xE29AA8")]
		private void <Start>b__2_0()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class PullTextFromUrl : MonoBehaviour
	{
		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE28", Offset = "0xE1EE28")]
		private sealed class <DoCheck>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PullTextFromUrl <>4__this;

			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WWW <w>5__2;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010EA")]
				[Address(RVA = "0x102A440", Offset = "0x102A440", VA = "0x102A440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010EC")]
				[Address(RVA = "0x102A4A8", Offset = "0x102A4A8", VA = "0x102A4A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x102A228", Offset = "0x102A228", VA = "0x102A228")]
			[DebuggerHidden]
			public <DoCheck>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x102A25C", Offset = "0x102A25C", VA = "0x102A25C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x102A260", Offset = "0x102A260", VA = "0x102A260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x102A448", Offset = "0x102A448", VA = "0x102A448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpro;

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x102A14C", Offset = "0x102A14C", VA = "0x102A14C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x102A1B8", Offset = "0x102A1B8", VA = "0x102A1B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29AB8", Offset = "0xE29AB8")]
		private IEnumerator DoCheck()
		{
			return null;
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x102A254", Offset = "0x102A254", VA = "0x102A254")]
		public PullTextFromUrl()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class SetLanguageBasedOnGlobalSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE38", Offset = "0xE1EE38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LanguageData, bool> <>9__2_0;

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x102AAA4", Offset = "0x102AAA4", VA = "0x102AAA4")]
			public <>c()
			{
			}

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x102AAAC", Offset = "0x102AAAC", VA = "0x102AAAC")]
			internal bool <Start>b__2_0(LanguageData it)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageEnumValueData LanguageData;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BooleanValueData FirstStart;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x102A4B0", Offset = "0x102A4B0", VA = "0x102A4B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x102A858", Offset = "0x102A858", VA = "0x102A858")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x102A948", Offset = "0x102A948", VA = "0x102A948")]
		private void Instance_OnValueChanged(ValueData key, object arg2)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x102AA38", Offset = "0x102AA38", VA = "0x102AA38")]
		public SetLanguageBasedOnGlobalSettings()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class UIVignette : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200042C")]
		public class VignetteInfo
		{
			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "PreviewFieldAttribute", RVA = "0xE2754C", Offset = "0xE2754C")]
			[AttributeAttribute(Name = "TableColumnWidthAttribute", RVA = "0xE2754C", Offset = "0xE2754C")]
			public Sprite Image;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Strength;

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x102B1A0", Offset = "0x102B1A0", VA = "0x102B1A0")]
			public VignetteInfo()
			{
			}
		}

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UIVignette Instance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE24C94", Offset = "0xE24C94")]
		public Image Vignette;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE24CCC", Offset = "0xE24CCC")]
		public EnumValueData ShowVignetteKey;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE24D04", Offset = "0xE24D04")]
		public List<VignetteInfo> Vignettes;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeIn;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float FadeOut;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int showVignette;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float percentage;

		[Token(Token = "0x4000A9A")]
		private const float tolerance = 0.1f;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x102AE80", Offset = "0x102AE80", VA = "0x102AE80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x102AF84", Offset = "0x102AF84", VA = "0x102AF84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x102B074", Offset = "0x102B074", VA = "0x102B074")]
		private void Instance_OnValueChanged(ValueData valueKey, object val)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x102AC60", Offset = "0x102AC60", VA = "0x102AC60")]
		public void Show(float speed)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x102B124", Offset = "0x102B124", VA = "0x102B124")]
		public UIVignette()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class ShowVignette : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x102ABAC", Offset = "0x102ABAC", VA = "0x102ABAC", Slot = "4")]
		public override void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x102AE78", Offset = "0x102AE78", VA = "0x102AE78")]
		public ShowVignette()
		{
		}
	}
}
namespace Peacemaker.Events
{
	[Token(Token = "0x2000220")]
	public class OnEnemyArrivalEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool wasInvisible;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform appearanceCenter;

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x10189F8", Offset = "0x10189F8", VA = "0x10189F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x1018B6C", Offset = "0x1018B6C", VA = "0x1018B6C")]
		public OnEnemyArrivalEvent()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class OnAlarmTriggeredEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24D38", Offset = "0xE24D38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24D38", Offset = "0xE24D38")]
		[InlineProperty]
		public List<GenericBooleanEvent> EventsBool;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x1017E00", Offset = "0x1017E00", VA = "0x1017E00", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1017EB0", Offset = "0x1017EB0", VA = "0x1017EB0")]
		private void Instance_OnAlarmTriggered(bool enabled)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1017EF8", Offset = "0x1017EF8", VA = "0x1017EF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x1017FE8", Offset = "0x1017FE8", VA = "0x1017FE8")]
		public OnAlarmTriggeredEvent()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class OnAnyHoverEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CurvedUIInputModule inputModule;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[ReadOnly]
		public GameObject current;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x1018058", Offset = "0x1018058", VA = "0x1018058")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1018178", Offset = "0x1018178", VA = "0x1018178")]
		public OnAnyHoverEvent()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class OnChargeEvent : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<IState> chargeStates;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ChargeBehaviour chargeBehaviour;

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1018180", Offset = "0x1018180", VA = "0x1018180")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x10181D8", Offset = "0x10181D8", VA = "0x10181D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x101826C", Offset = "0x101826C", VA = "0x101826C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1018344", Offset = "0x1018344", VA = "0x1018344")]
		private void ChargeBehaviour_OnCharge(bool val)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1018384", Offset = "0x1018384", VA = "0x1018384")]
		public OnChargeEvent()
		{
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E480", Offset = "0xE1E480")]
	public class OnDisassembledEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RobotPart robotPart;

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x10183F4", Offset = "0x10183F4", VA = "0x10183F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x101844C", Offset = "0x101844C", VA = "0x101844C", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x10184E4", Offset = "0x10184E4", VA = "0x10184E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x10185B4", Offset = "0x10185B4", VA = "0x10185B4")]
		private void RobotPart_OnDisassembled()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x10185C0", Offset = "0x10185C0", VA = "0x10185C0")]
		public OnDisassembledEvent()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class OnDoorLockedEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DoorHandling door;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24DB8", Offset = "0xE24DB8")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE24DB8", Offset = "0xE24DB8")]
		public List<GenericBooleanEvent> EventsBoolean;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x10185C8", Offset = "0x10185C8", VA = "0x10185C8", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1018758", Offset = "0x1018758", VA = "0x1018758")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1018710", Offset = "0x1018710", VA = "0x1018710")]
		private void Door_OnDoorLocked(bool locked)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1018830", Offset = "0x1018830", VA = "0x1018830")]
		public OnDoorLockedEvent()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class OnElevatorActivateEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LiftMovement elevator;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericBooleanEvent> boolEvents;

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x10188A0", Offset = "0x10188A0", VA = "0x10188A0", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1018940", Offset = "0x1018940", VA = "0x1018940")]
		private void Elevator_OnActivateLift(bool val)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1018988", Offset = "0x1018988", VA = "0x1018988")]
		public OnElevatorActivateEvent()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class OnInventoryErrorEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<IPickable> pickables;

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1018B74", Offset = "0x1018B74", VA = "0x1018B74", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1018CC4", Offset = "0x1018CC4", VA = "0x1018CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1018E34", Offset = "0x1018E34", VA = "0x1018E34")]
		private void Slot_OnSlotHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1018F20", Offset = "0x1018F20", VA = "0x1018F20")]
		public OnInventoryErrorEvent()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class OnInventorySlotHoverEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0xE24E18", Offset = "0xE24E18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24E18", Offset = "0xE24E18")]
		[InlineProperty]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE24E18", Offset = "0xE24E18")]
		public List<GenericEvent> endEvents;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "PropertyOrderAttribute", RVA = "0xE24EB0", Offset = "0xE24EB0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE24EB0", Offset = "0xE24EB0")]
		[InlineProperty]
		[AttributeAttribute(Name = "InlineButtonAttribute", RVA = "0xE24EB0", Offset = "0xE24EB0")]
		public List<ISideAction> sideActions;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[ReadOnly]
		public ExtendedInventorySlot slot;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<IPickable> pickables;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool prevState;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1018F90", Offset = "0x1018F90", VA = "0x1018F90", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1019044", Offset = "0x1019044", VA = "0x1019044")]
		private void Slot_OnHover(IPickable pickable, ExtendedInventorySlot.RangeInfo rangeInfo)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1019350", Offset = "0x1019350", VA = "0x1019350")]
		public OnInventorySlotHoverEvent()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E4B8", Offset = "0xE1E4B8")]
	public class OnLevelTimePassedEvent : GenericEventEmitter
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1019410", Offset = "0x1019410", VA = "0x1019410")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x10194A0", Offset = "0x10194A0", VA = "0x10194A0")]
		public OnLevelTimePassedEvent()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class OnShieldReflectEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shield shield;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x10194A8", Offset = "0x10194A8", VA = "0x10194A8", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1019548", Offset = "0x1019548", VA = "0x1019548")]
		private void Shield_OnReflect(Rigidbody obj)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1019554", Offset = "0x1019554", VA = "0x1019554")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x10195AC", Offset = "0x10195AC", VA = "0x10195AC")]
		public OnShieldReflectEvent()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class OnSpawnOverseerEvent : GenericEventEmitter
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x10195B4", Offset = "0x10195B4", VA = "0x10195B4")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x101973C", Offset = "0x101973C", VA = "0x101973C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x10198C4", Offset = "0x10198C4", VA = "0x10198C4")]
		private void Instance_OnSpawnOverseer()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x10198D0", Offset = "0x10198D0", VA = "0x10198D0")]
		public OnSpawnOverseerEvent()
		{
		}
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E4F0", Offset = "0xE1E4F0")]
	public class OnSpiderLegChangeEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpiderMovement spiderMovement;

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x10198D8", Offset = "0x10198D8", VA = "0x10198D8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1019930", Offset = "0x1019930", VA = "0x1019930", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x10199D0", Offset = "0x10199D0", VA = "0x10199D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1019AA8", Offset = "0x1019AA8", VA = "0x1019AA8")]
		private void HandleLegChange(Transform leg)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1019AB4", Offset = "0x1019AB4", VA = "0x1019AB4")]
		public OnSpiderLegChangeEvent()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class SpawnOverseerEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float overseerApproachTime;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public float timer;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpawnOverseerEvent instance;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject overseer;

		[Token(Token = "0x1400002D")]
		public event Action OnSpawnOverseer
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x1019698", Offset = "0x1019698", VA = "0x1019698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29B1C", Offset = "0xE29B1C")]
			add
			{
			}
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x1019820", Offset = "0x1019820", VA = "0x1019820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29B2C", Offset = "0xE29B2C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x101A46C", Offset = "0x101A46C", VA = "0x101A46C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x101A4C0", Offset = "0x101A4C0", VA = "0x101A4C0", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x101A5CC", Offset = "0x101A5CC", VA = "0x101A5CC")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29B3C", Offset = "0xE29B3C")]
		public void TestEmit()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x101A5D8", Offset = "0x101A5D8", VA = "0x101A5D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x101A630", Offset = "0x101A630", VA = "0x101A630")]
		public void TriggerOverseer()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x101A674", Offset = "0x101A674", VA = "0x101A674")]
		public SpawnOverseerEvent()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TriggerOverseerArrival : GenericEvent
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x101A894", Offset = "0x101A894", VA = "0x101A894", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x101A97C", Offset = "0x101A97C", VA = "0x101A97C")]
		public TriggerOverseerArrival()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class AnimationEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool boolValue;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1016864", Offset = "0x1016864", VA = "0x1016864", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x101688C", Offset = "0x101688C", VA = "0x101688C")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class AnimationTriggerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1016894", Offset = "0x1016894", VA = "0x1016894", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x10168B8", Offset = "0x10168B8", VA = "0x10168B8")]
		public AnimationTriggerEvent()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class AnimationBooleanEvent : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string boolName;

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1016744", Offset = "0x1016744", VA = "0x1016744", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x101685C", Offset = "0x101685C", VA = "0x101685C")]
		public AnimationBooleanEvent()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class ChangeLayerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask layer;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> gameObjects;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1016970", Offset = "0x1016970", VA = "0x1016970", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1016ABC", Offset = "0x1016ABC", VA = "0x1016ABC")]
		public ChangeLayerEvent()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class AddGoldEvent : GenericEvent
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueData goldKey;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amount;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x10166D8", Offset = "0x10166D8", VA = "0x10166D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x101673C", Offset = "0x101673C", VA = "0x101673C")]
		public AddGoldEvent()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class EnableGameObjectEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x10173E0", Offset = "0x10173E0", VA = "0x10173E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1017474", Offset = "0x1017474", VA = "0x1017474")]
		public EnableGameObjectEvent()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class SetLocalScale : GenericEvent, IAction
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 scale;

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1019FB4", Offset = "0x1019FB4", VA = "0x1019FB4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x101A04C", Offset = "0x101A04C", VA = "0x101A04C")]
		public SetLocalScale()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class InstantiateGameObjectEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1017A1C", Offset = "0x1017A1C", VA = "0x1017A1C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1017ADC", Offset = "0x1017ADC", VA = "0x1017ADC")]
		public InstantiateGameObjectEvent()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class EnableGameObjectEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool invert;

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x101747C", Offset = "0x101747C", VA = "0x101747C", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1017534", Offset = "0x1017534", VA = "0x1017534")]
		public EnableGameObjectEventBoolean()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class Unparent : GenericEvent, IAction
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x101ACDC", Offset = "0x101ACDC", VA = "0x101ACDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x101ACFC", Offset = "0x101ACFC", VA = "0x101ACFC")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class SetLocalRotation : GenericEvent, IAction
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotation;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1019EC4", Offset = "0x1019EC4", VA = "0x1019EC4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1019FAC", Offset = "0x1019FAC", VA = "0x1019FAC")]
		public SetLocalRotation()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class BooleanEvents : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GenericEvent> enableEvents;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GenericEvent> disableEvents;

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x10168C0", Offset = "0x10168C0", VA = "0x10168C0", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x10168E0", Offset = "0x10168E0", VA = "0x10168E0")]
		public BooleanEvents()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class SetLocalPosition : GenericEvent, IAction
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPosition;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1019E24", Offset = "0x1019E24", VA = "0x1019E24", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1019EBC", Offset = "0x1019EBC", VA = "0x1019EBC")]
		public SetLocalPosition()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class ChangeMeshEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x1016B3C", Offset = "0x1016B3C", VA = "0x1016B3C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1016BD0", Offset = "0x1016BD0", VA = "0x1016BD0")]
		public ChangeMeshEvent()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class ChangeSkinnedMeshEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer meshFilter;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1016BD8", Offset = "0x1016BD8", VA = "0x1016BD8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1016C6C", Offset = "0x1016C6C", VA = "0x1016C6C")]
		public ChangeSkinnedMeshEvent()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class RotateLocal : GenericEvent, IAction
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotation;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1019ABC", Offset = "0x1019ABC", VA = "0x1019ABC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1019B8C", Offset = "0x1019B8C", VA = "0x1019B8C")]
		public RotateLocal()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023F")]
	public class ActiveSelf : GenericCondition
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x10166A4", Offset = "0x10166A4", VA = "0x10166A4", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x10166D0", Offset = "0x10166D0", VA = "0x10166D0")]
		public ActiveSelf()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class ToggleMeshEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh a;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh b;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x101A858", Offset = "0x101A858", VA = "0x101A858", Slot = "4")]
		public override void Execute(Transform emitter, bool val)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x101A88C", Offset = "0x101A88C", VA = "0x101A88C")]
		public ToggleMeshEventBoolean()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class EnableComponentEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour component;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool val;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x10173B4", Offset = "0x10173B4", VA = "0x10173B4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x10173D8", Offset = "0x10173D8", VA = "0x10173D8")]
		public EnableComponentEvent()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class StartRotation : GenericEvent, IAction
	{
		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RotateObject rotateObject;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startDelay;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x101A684", Offset = "0x101A684", VA = "0x101A684", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x101A6A8", Offset = "0x101A6A8", VA = "0x101A6A8")]
		public StartRotation()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class StopRotation : GenericEvent, IAction
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RotateObject rotateObject;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float stopDelay;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x101A6B8", Offset = "0x101A6B8", VA = "0x101A6B8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x101A6DC", Offset = "0x101A6DC", VA = "0x101A6DC")]
		public StopRotation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000244")]
	public class HapticSuitEvent : GenericEvent, IAction, IAttackAction, ISideAction
	{
		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticSuitData haptic;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x10178E0", Offset = "0x10178E0", VA = "0x10178E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x101798C", Offset = "0x101798C", VA = "0x101798C", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1017998", Offset = "0x1017998", VA = "0x1017998", Slot = "7")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1017A0C", Offset = "0x1017A0C", VA = "0x1017A0C")]
		public HapticSuitEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class ConditionalDirectionBasedHapticSuitEvent : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<AssetInfoTag, HapticSuitData> haptics;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticSuitData fallback;

		[Token(Token = "0x4000AE1")]
		private const float playerBodyHeight = 0.671256f;

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1016C74", Offset = "0x1016C74", VA = "0x1016C74", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1017140", Offset = "0x1017140", VA = "0x1017140")]
		public ConditionalDirectionBasedHapticSuitEvent()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class DirectionBasedHapticSuitEvent : IAttackAction
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticSuitData haptic;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x4000AE4")]
		private const float playerBodyHeight = 0.671256f;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1017148", Offset = "0x1017148", VA = "0x1017148", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x10173A4", Offset = "0x10173A4", VA = "0x10173A4")]
		public DirectionBasedHapticSuitEvent()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class MoveRigidbodyToPosition : GenericEvent
	{
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE48", Offset = "0xE1EE48")]
		private sealed class <DoMoveTowards>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MoveRigidbodyToPosition <>4__this;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0x1017D90", Offset = "0x1017D90", VA = "0x1017D90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0x1017DF8", Offset = "0x1017DF8", VA = "0x1017DF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x1017B54", Offset = "0x1017B54", VA = "0x1017B54")]
			[DebuggerHidden]
			public <DoMoveTowards>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x1017BD4", Offset = "0x1017BD4", VA = "0x1017BD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x1017BD8", Offset = "0x1017BD8", VA = "0x1017BD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x1017D98", Offset = "0x1017D98", VA = "0x1017D98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetPosition;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1017AE4", Offset = "0x1017AE4", VA = "0x1017AE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29B4C", Offset = "0xE29B4C")]
		private IEnumerator DoMoveTowards()
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1017B80", Offset = "0x1017B80", VA = "0x1017B80", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1017BC4", Offset = "0x1017BC4", VA = "0x1017BC4")]
		public MoveRigidbodyToPosition()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class ShieldEvents : SerializedMonoBehaviour
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<GenericFloatEvent> animationEvents;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<GenericFloatEvent> deteriorateEvents;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<GenericEvent> activatedEvents;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<GenericEvent> deactivatedEvents;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GenericEvent> startActivatedEvents;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<GenericEvent> startDeactivatedEvents;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Shield shieldWeapon;

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x101A154", Offset = "0x101A154", VA = "0x101A154")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x101A368", Offset = "0x101A368", VA = "0x101A368")]
		private void ShieldWeapon_OnDeteriorate(float val)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x101A3A4", Offset = "0x101A3A4", VA = "0x101A3A4")]
		private void ShieldWeapon_OnStartDeactivation()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x101A3D0", Offset = "0x101A3D0", VA = "0x101A3D0")]
		private void ShieldWeapon_OnStartActivation()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x101A3FC", Offset = "0x101A3FC", VA = "0x101A3FC")]
		private void ShieldWeapon_OnAnimate(float progress)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x101A438", Offset = "0x101A438", VA = "0x101A438")]
		private void ShieldWeapon_OnActivate()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x101A33C", Offset = "0x101A33C", VA = "0x101A33C")]
		private void ShieldWeapon_OnDeactivate()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x101A464", Offset = "0x101A464", VA = "0x101A464")]
		public ShieldEvents()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class TriggerOverseerEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x101A984", Offset = "0x101A984", VA = "0x101A984", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x101AA20", Offset = "0x101AA20", VA = "0x101AA20")]
		public TriggerOverseerEvent()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class FinishTutorialEvent : GenericEvent
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialPoint tutorialPoint;

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x101753C", Offset = "0x101753C", VA = "0x101753C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1017558", Offset = "0x1017558", VA = "0x1017558")]
		public FinishTutorialEvent()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class SetColorByGradient : GenericFloatEvent
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpriteRenderer spriteRenderer;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1019C4C", Offset = "0x1019C4C", VA = "0x1019C4C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1019D6C", Offset = "0x1019D6C", VA = "0x1019D6C")]
		public SetColorByGradient()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class SetFilledAmount : GenericFloatEvent
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1019D74", Offset = "0x1019D74", VA = "0x1019D74", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1019E1C", Offset = "0x1019E1C", VA = "0x1019E1C")]
		public SetFilledAmount()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class SetAggroAmount : GenericFloatEvent
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAggroMesh Aggro;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1019B9C", Offset = "0x1019B9C", VA = "0x1019B9C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1019C44", Offset = "0x1019C44", VA = "0x1019C44")]
		public SetAggroAmount()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class SetSlowMotionValue : GenericEvent, IAction
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeScale;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x101A138", Offset = "0x101A138", VA = "0x101A138", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x101A144", Offset = "0x101A144", VA = "0x101A144")]
		public SetSlowMotionValue()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class TimeState : IState
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float val;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x101A6EC", Offset = "0x101A6EC", VA = "0x101A6EC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x101A76C", Offset = "0x101A76C", VA = "0x101A76C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x101A778", Offset = "0x101A778", VA = "0x101A778", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x101A7F4", Offset = "0x101A7F4", VA = "0x101A7F4")]
		public TimeState()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class SetSlowMotionForLimitedTime : GenericEvent, IAction
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeScale;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float duration;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x101A054", Offset = "0x101A054", VA = "0x101A054", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x101A0D4", Offset = "0x101A0D4", VA = "0x101A0D4")]
		public SetSlowMotionForLimitedTime()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class TwoHandedWieldingBonus : MonoBehaviour
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform weaponBonus;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PickableObject pickable;

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x101AA28", Offset = "0x101AA28", VA = "0x101AA28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x101AAB8", Offset = "0x101AAB8", VA = "0x101AAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x101ABC0", Offset = "0x101ABC0", VA = "0x101ABC0")]
		private void Pickable_OnRelease(IPicking picking, IPickable pickable)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x101AC0C", Offset = "0x101AC0C", VA = "0x101AC0C")]
		private void Pickable_OnPickUp(IPicking arg1, IPickable arg2)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x101AC78", Offset = "0x101AC78", VA = "0x101AC78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x101ACD4", Offset = "0x101ACD4", VA = "0x101ACD4")]
		public TwoHandedWieldingBonus()
		{
		}
	}
}
namespace Peacemaker.Events.Gameplay
{
	[Token(Token = "0x2000252")]
	public class OpenDoorEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DoorHandling door;

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1017620", Offset = "0x1017620", VA = "0x1017620", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x10176F0", Offset = "0x10176F0", VA = "0x10176F0")]
		public OpenDoorEvent()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class UnlockAllNotes : GenericEvent, IAction
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetWorldProgression worldProgression;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1017738", Offset = "0x1017738", VA = "0x1017738", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x10178D8", Offset = "0x10178D8", VA = "0x10178D8")]
		public UnlockAllNotes()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class ResetDailyRun : GenericEvent, IAction
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x10176F8", Offset = "0x10176F8", VA = "0x10176F8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1017730", Offset = "0x1017730", VA = "0x1017730")]
		public ResetDailyRun()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class EnableBackground : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1017560", Offset = "0x1017560", VA = "0x1017560", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1017618", Offset = "0x1017618", VA = "0x1017618")]
		public EnableBackground()
		{
		}
	}
}
namespace Peacemaker.Conditions
{
	[Token(Token = "0x2000256")]
	public abstract class ValueCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x200042E")]
		public enum NumberOperator
		{
			[Token(Token = "0x400108D")]
			Equal,
			[Token(Token = "0x400108E")]
			LessEqual,
			[Token(Token = "0x400108F")]
			GreaterEqual,
			[Token(Token = "0x4001090")]
			Less,
			[Token(Token = "0x4001091")]
			Greater,
			[Token(Token = "0x4001092")]
			Unequal
		}

		[Token(Token = "0x200042F")]
		public enum StringOperator
		{
			[Token(Token = "0x4001094")]
			Equal,
			[Token(Token = "0x4001095")]
			Unequal
		}

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE24F78", Offset = "0xE24F78")]
		[HideLabel]
		public ValueData Index;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE24FD4", Offset = "0xE24FD4")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE24FD4", Offset = "0xE24FD4")]
		public NumberOperator NumberOp;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE25058", Offset = "0xE25058")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE25058", Offset = "0xE25058")]
		public StringOperator StringOp;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE250DC", Offset = "0xE250DC")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE250DC", Offset = "0xE250DC")]
		public int IntValue;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE25160", Offset = "0xE25160")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE25160", Offset = "0xE25160")]
		public float FloatValue;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE251E4", Offset = "0xE251E4")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE251E4", Offset = "0xE251E4")]
		public string StringValue;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE25268", Offset = "0xE25268")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE25268", Offset = "0xE25268")]
		public bool BoolValue;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE252EC", Offset = "0xE252EC")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE252EC", Offset = "0xE252EC")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE252EC", Offset = "0xE252EC")]
		public string EnumValue;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HorizontalGroupAttribute", RVA = "0xE25394", Offset = "0xE25394")]
		[HideLabel]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE25394", Offset = "0xE25394")]
		public AssetDistrict DistrictValue;

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x10DE3F0", Offset = "0x10DE3F0", VA = "0x10DE3F0")]
		public bool CheckValue(GenericValues values)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x10DE6A4", Offset = "0x10DE6A4", VA = "0x10DE6A4")]
		public bool CheckOperator(NumberOperator op, float value1, float value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x10DE714", Offset = "0x10DE714", VA = "0x10DE714")]
		public bool CheckOperator(StringOperator op, string value1, string value2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x10DE748", Offset = "0x10DE748", VA = "0x10DE748")]
		public bool IsNumber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x10DE800", Offset = "0x10DE800", VA = "0x10DE800")]
		public bool IsInt()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x10DE884", Offset = "0x10DE884", VA = "0x10DE884")]
		public bool IsFloat()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x10DE908", Offset = "0x10DE908", VA = "0x10DE908")]
		public bool IsEnum()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x10DE98C", Offset = "0x10DE98C", VA = "0x10DE98C")]
		public bool IsString()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x10DEA10", Offset = "0x10DEA10", VA = "0x10DEA10")]
		public bool IsBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x10DEA94", Offset = "0x10DEA94", VA = "0x10DEA94")]
		public bool IsDistrict()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x10DEB18", Offset = "0x10DEB18", VA = "0x10DEB18")]
		private List<string> EnumDropdown()
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x10DEBA0", Offset = "0x10DEBA0", VA = "0x10DEBA0")]
		protected ValueCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000257")]
	public class IfCondition : GenericEvent, IAction
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25418", Offset = "0xE25418")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25418", Offset = "0xE25418")]
		public List<GenericCondition> Conditions;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25488", Offset = "0xE25488")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25488", Offset = "0xE25488")]
		public List<GenericEvent> events;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x10DC2A8", Offset = "0x10DC2A8", VA = "0x10DC2A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x10DC484", Offset = "0x10DC484", VA = "0x10DC484")]
		public IfCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000258")]
	public class IfElseCondition : GenericEvent, IAction
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE254F8", Offset = "0xE254F8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE254F8", Offset = "0xE254F8")]
		public List<GenericCondition> Conditions;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25568", Offset = "0xE25568")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25568", Offset = "0xE25568")]
		public List<GenericEvent> ifEvents;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE255D8", Offset = "0xE255D8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE255D8", Offset = "0xE255D8")]
		public List<GenericEvent> elseEvents;

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x10DCA38", Offset = "0x10DCA38", VA = "0x10DCA38", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x10DCD68", Offset = "0x10DCD68", VA = "0x10DCD68")]
		public IfElseCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000259")]
	public class IfCollisionCondition : GenericCollisionEvent, ICollisionAction
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25648", Offset = "0xE25648")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25648", Offset = "0xE25648")]
		public List<GenericCollisionCondition> Conditions;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE256B8", Offset = "0xE256B8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE256B8", Offset = "0xE256B8")]
		public List<GenericEvent> events;

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x10DBDAC", Offset = "0x10DBDAC", VA = "0x10DBDAC", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x10DBF90", Offset = "0x10DBF90", VA = "0x10DBF90")]
		public IfCollisionCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025A")]
	public class IfCollisionConditionCollisionEvent : GenericCollisionEvent
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25728", Offset = "0xE25728")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25728", Offset = "0xE25728")]
		public List<GenericCollisionCondition> Conditions;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25798", Offset = "0xE25798")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25798", Offset = "0xE25798")]
		public List<GenericCollisionEvent> collisionEvents;

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x10DC028", Offset = "0x10DC028", VA = "0x10DC028", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x10DC210", Offset = "0x10DC210", VA = "0x10DC210")]
		public IfCollisionConditionCollisionEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025B")]
	public class IfTriggerCondition : ITriggerAction
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25808", Offset = "0xE25808")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25808", Offset = "0xE25808")]
		public List<ITriggerCondition> Conditions;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25878", Offset = "0xE25878")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25878", Offset = "0xE25878")]
		public List<ITriggerAction> events;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x10DDD70", Offset = "0x10DDD70", VA = "0x10DDD70", Slot = "4")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x10DE018", Offset = "0x10DE018", VA = "0x10DE018")]
		public IfTriggerCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025C")]
	public class IfUnitCondition : IUnitAction
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE258E8", Offset = "0xE258E8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE258E8", Offset = "0xE258E8")]
		public List<IUnitCondition> Conditions;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25958", Offset = "0xE25958")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25958", Offset = "0xE25958")]
		public List<IUnitAction> Actions;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x10DE0B0", Offset = "0x10DE0B0", VA = "0x10DE0B0", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x10DE358", Offset = "0x10DE358", VA = "0x10DE358")]
		public IfUnitCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025D")]
	public class IfSideCondition : ISideAction
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE259C8", Offset = "0xE259C8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE259C8", Offset = "0xE259C8")]
		public List<ISideCondition> Conditions;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25A38", Offset = "0xE25A38")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25A38", Offset = "0xE25A38")]
		public List<ISideAction> Actions;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x10DCE20", Offset = "0x10DCE20", VA = "0x10DCE20", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x10DD0C8", Offset = "0x10DD0C8", VA = "0x10DD0C8")]
		public IfSideCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025E")]
	public class IfAttackCondition : IAttackAction
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25AA8", Offset = "0xE25AA8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25AA8", Offset = "0xE25AA8")]
		public List<IAttackCondition> Conditions;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25B18", Offset = "0xE25B18")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25B18", Offset = "0xE25B18")]
		public List<IAttackAction> events;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25B88", Offset = "0xE25B88")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25B88", Offset = "0xE25B88")]
		public List<IAttackAction> elseEvents;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x10DB894", Offset = "0x10DB894", VA = "0x10DB894", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x10DBCF4", Offset = "0x10DBCF4", VA = "0x10DBCF4")]
		public IfAttackCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025F")]
	public class IfElseAttackCondition : IAttackAction
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25BF8", Offset = "0xE25BF8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25BF8", Offset = "0xE25BF8")]
		public List<IAttackCondition> Conditions;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25C68", Offset = "0xE25C68")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25C68", Offset = "0xE25C68")]
		public List<IAttackAction> IfActions;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25CD8", Offset = "0xE25CD8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25CD8", Offset = "0xE25CD8")]
		public List<IAttackAction> ElseActions;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x10DC51C", Offset = "0x10DC51C", VA = "0x10DC51C", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x10DC980", Offset = "0x10DC980", VA = "0x10DC980")]
		public IfElseAttackCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000260")]
	public class IfSideStateCondition : ISideState
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25D48", Offset = "0xE25D48")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25D48", Offset = "0xE25D48")]
		public List<ISideCondition> Conditions;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25DB8", Offset = "0xE25DB8")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25DB8", Offset = "0xE25DB8")]
		public List<ISideState> States;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x10DD160", Offset = "0x10DD160", VA = "0x10DD160", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x10DD164", Offset = "0x10DD164", VA = "0x10DD164", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x10DD410", Offset = "0x10DD410", VA = "0x10DD410", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x10DD6BC", Offset = "0x10DD6BC", VA = "0x10DD6BC")]
		public IfSideStateCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public class IfTargetSideStateCondition : ITargetSideState
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25E28", Offset = "0xE25E28")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25E28", Offset = "0xE25E28")]
		public List<ITargetSideCondition> Conditions;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE25E98", Offset = "0xE25E98")]
		[InlineProperty]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25E98", Offset = "0xE25E98")]
		public List<ITargetSideState> States;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10DD754", Offset = "0x10DD754", VA = "0x10DD754", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10DD758", Offset = "0x10DD758", VA = "0x10DD758", Slot = "5")]
		public void Enter(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10DDA18", Offset = "0x10DDA18", VA = "0x10DDA18", Slot = "6")]
		public void Leave(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10DDCD8", Offset = "0x10DDCD8", VA = "0x10DDCD8")]
		public IfTargetSideStateCondition()
		{
		}
	}
}
namespace Peacemaker.Stats
{
	[Serializable]
	[Token(Token = "0x2000262")]
	public class CheckStat : ValueCondition
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1024828", Offset = "0x1024828", VA = "0x1024828", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1024884", Offset = "0x1024884", VA = "0x1024884")]
		public CheckStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000263")]
	public class CheckGlobalStat : ValueCondition
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x10246C4", Offset = "0x10246C4", VA = "0x10246C4", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1024720", Offset = "0x1024720", VA = "0x1024720")]
		public CheckGlobalStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000264")]
	public class CheckProgressionStat : ValueCondition
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1024728", Offset = "0x1024728", VA = "0x1024728", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1024784", Offset = "0x1024784", VA = "0x1024784")]
		public CheckProgressionStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000265")]
	public class CheckGameType : ICondition
	{
		[Token(Token = "0x2000430")]
		public enum OperatorType
		{
			[Token(Token = "0x4001097")]
			Equal,
			[Token(Token = "0x4001098")]
			Unequal
		}

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OperatorType Operator;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SeedType SeedType;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1024644", Offset = "0x1024644", VA = "0x1024644", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x10246BC", Offset = "0x10246BC", VA = "0x10246BC")]
		public CheckGameType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	public class CheckSceneName : ICondition
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x102478C", Offset = "0x102478C", VA = "0x102478C", Slot = "4")]
		public bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1024820", Offset = "0x1024820", VA = "0x1024820")]
		public CheckSceneName()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public class SetGlobalSettings : SetValueEvent, ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1024AC0", Offset = "0x1024AC0", VA = "0x1024AC0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1024B1C", Offset = "0x1024B1C", VA = "0x1024B1C", Slot = "7")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1024B28", Offset = "0x1024B28", VA = "0x1024B28", Slot = "8")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1024B34", Offset = "0x1024B34", VA = "0x1024B34")]
		public SetGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000268")]
	public class AddGlobalSettings : AddValueEvent, ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x10C5CDC", Offset = "0x10C5CDC", VA = "0x10C5CDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x10C5D38", Offset = "0x10C5D38", VA = "0x10C5D38", Slot = "7")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x10C5D44", Offset = "0x10C5D44", VA = "0x10C5D44", Slot = "8")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x10C5D50", Offset = "0x10C5D50", VA = "0x10C5D50")]
		public AddGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public class SetFloatGlobalSettings : FloatValueEvent
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x10249D8", Offset = "0x10249D8", VA = "0x10249D8", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1024A44", Offset = "0x1024A44", VA = "0x1024A44")]
		public SetFloatGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	public class AddFloatGlobalSettings : FloatValueEvent
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x10C5BF4", Offset = "0x10C5BF4", VA = "0x10C5BF4", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x10C5C60", Offset = "0x10C5C60", VA = "0x10C5C60")]
		public AddFloatGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	public class SetIntegerGlobalSettings : IntegerValueEvent
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1024B3C", Offset = "0x1024B3C", VA = "0x1024B3C", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1024BA8", Offset = "0x1024BA8", VA = "0x1024BA8")]
		public SetIntegerGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class AddIntegerGlobalSettings : IntegerValueEvent
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x102448C", Offset = "0x102448C", VA = "0x102448C", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x10244F8", Offset = "0x10244F8", VA = "0x10244F8")]
		public AddIntegerGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class SetStringGlobalSettings : StringValueEvent
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1024DD4", Offset = "0x1024DD4", VA = "0x1024DD4", Slot = "4")]
		public override void Execute(Transform emitter, string value)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1024E40", Offset = "0x1024E40", VA = "0x1024E40")]
		public SetStringGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class SetBooleanGlobalSettings : BooleanValueEvent
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x10248F0", Offset = "0x10248F0", VA = "0x10248F0", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x102495C", Offset = "0x102495C", VA = "0x102495C")]
		public SetBooleanGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026F")]
	public class SetMovementGlobalSettings : ValueEvent
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetMovementSettings value;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1024C24", Offset = "0x1024C24", VA = "0x1024C24", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1024C88", Offset = "0x1024C88", VA = "0x1024C88")]
		public SetMovementGlobalSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000270")]
	public class ToggleBooleanGlobalSettings : BooleanValueEvent
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1025308", Offset = "0x1025308", VA = "0x1025308", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1025364", Offset = "0x1025364", VA = "0x1025364")]
		public ToggleBooleanGlobalSettings()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class BoolValue
	{
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x102463C", Offset = "0x102463C", VA = "0x102463C")]
		public BoolValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000272")]
	public class SetProgressionSettings : SetValueEvent
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1024C90", Offset = "0x1024C90", VA = "0x1024C90", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1024CEC", Offset = "0x1024CEC", VA = "0x1024CEC")]
		public SetProgressionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000273")]
	public class AddProgressionSettings : AddValueEvent
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1024574", Offset = "0x1024574", VA = "0x1024574", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x10245D0", Offset = "0x10245D0", VA = "0x10245D0")]
		public AddProgressionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000274")]
	public class SetStat : SetValueEvent, IAction
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1024CF4", Offset = "0x1024CF4", VA = "0x1024CF4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1024D50", Offset = "0x1024D50", VA = "0x1024D50")]
		public SetStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000275")]
	public class SetStatLocalized : SetValueEvent, IAction
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LString localizedAsset;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1024D58", Offset = "0x1024D58", VA = "0x1024D58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1024DCC", Offset = "0x1024DCC", VA = "0x1024DCC")]
		public SetStatLocalized()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	public class AddStat : AddValueEvent, IAction
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x10245D8", Offset = "0x10245D8", VA = "0x10245D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1024634", Offset = "0x1024634", VA = "0x1024634")]
		public AddStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000277")]
	public class SetFloatStat : FloatValueEvent
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1024A4C", Offset = "0x1024A4C", VA = "0x1024A4C", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1024AB8", Offset = "0x1024AB8", VA = "0x1024AB8")]
		public SetFloatStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class AddFloatStat : FloatValueEvent
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x10C5C68", Offset = "0x10C5C68", VA = "0x10C5C68", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x10C5CD4", Offset = "0x10C5CD4", VA = "0x10C5CD4")]
		public AddFloatStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class SetIntegerStat : IntegerValueEvent
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1024BB0", Offset = "0x1024BB0", VA = "0x1024BB0", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1024C1C", Offset = "0x1024C1C", VA = "0x1024C1C")]
		public SetIntegerStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public class AddIntegerStat : IntegerValueEvent
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1024500", Offset = "0x1024500", VA = "0x1024500", Slot = "4")]
		public override void Execute(Transform emitter, int value)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x102456C", Offset = "0x102456C", VA = "0x102456C")]
		public AddIntegerStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class SetStringStat : StringValueEvent, IAttackAction
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<AssetInfoTag, LocalizationData> Tags;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnitDataInstance data;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1024E48", Offset = "0x1024E48", VA = "0x1024E48", Slot = "4")]
		public override void Execute(Transform emitter, string value)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1024EB4", Offset = "0x1024EB4", VA = "0x1024EB4", Slot = "5")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1025120", Offset = "0x1025120", VA = "0x1025120")]
		public SetStringStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027C")]
	public class SetBooleanStat : BooleanValueEvent
	{
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1024964", Offset = "0x1024964", VA = "0x1024964", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x10249D0", Offset = "0x10249D0", VA = "0x10249D0")]
		public SetBooleanStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	public class ToggleBooleanStat : BooleanValueEvent
	{
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x102536C", Offset = "0x102536C", VA = "0x102536C", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x10253C8", Offset = "0x10253C8", VA = "0x10253C8")]
		public ToggleBooleanStat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027E")]
	public class ResetStats : GenericEvent, IAction
	{
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x102488C", Offset = "0x102488C", VA = "0x102488C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x10248E8", Offset = "0x10248E8", VA = "0x10248E8")]
		public ResetStats()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class StatLabel : MonoBehaviour
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ValueData Stat;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI Label;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object stat;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1025190", Offset = "0x1025190", VA = "0x1025190")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1025300", Offset = "0x1025300", VA = "0x1025300")]
		public StatLabel()
		{
		}
	}
}
namespace Peacemaker.CollisionConditions
{
	[Token(Token = "0x2000280")]
	public class HasTagCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE25F08", Offset = "0xE25F08")]
		public string Tag;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x10DB7C0", Offset = "0x10DB7C0", VA = "0x10DB7C0", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x10DB804", Offset = "0x10DB804", VA = "0x10DB804")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x10DB850", Offset = "0x10DB850", VA = "0x10DB850")]
		public HasTagCondition()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class IsDeadCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitHealth unitHealth;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x10DB858", Offset = "0x10DB858", VA = "0x10DB858", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x10DB88C", Offset = "0x10DB88C", VA = "0x10DB88C")]
		public IsDeadCondition()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class HasLayerCondition : GenericCollisionCondition
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask layer;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x10DB718", Offset = "0x10DB718", VA = "0x10DB718", Slot = "4")]
		public override bool Execute(Transform emitter, Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x10DB76C", Offset = "0x10DB76C", VA = "0x10DB76C")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x10DB7B8", Offset = "0x10DB7B8", VA = "0x10DB7B8")]
		public HasLayerCondition()
		{
		}
	}
}
namespace Peacemaker.MaterialAction
{
	[Serializable]
	[Token(Token = "0x2000283")]
	public class SetSky : IAction
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkyData Sky;

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x2305894", Offset = "0x2305894", VA = "0x2305894", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x23058B4", Offset = "0x23058B4", VA = "0x23058B4")]
		public SetSky()
		{
		}
	}
}
namespace Peacemaker.LocalisationAction
{
	[Serializable]
	[Token(Token = "0x2000284")]
	public class SetLocalisation : IAction
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationData Localization;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalisationText Text;

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x2305368", Offset = "0x2305368", VA = "0x2305368", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x230538C", Offset = "0x230538C", VA = "0x230538C")]
		public SetLocalisation()
		{
		}
	}
}
namespace Peacemaker.Localisation
{
	[Serializable]
	[Token(Token = "0x2000285")]
	public class SetLanguage : IAction
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LanguageData Language;

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x2305354", Offset = "0x2305354", VA = "0x2305354", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x2305360", Offset = "0x2305360", VA = "0x2305360")]
		public SetLanguage()
		{
		}
	}
}
namespace Peacemaker.Health
{
	[Serializable]
	[Token(Token = "0x2000286")]
	public class ChangeHealthAction : IUnitAction, IHealthAction
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x22FC880", Offset = "0x22FC880", VA = "0x22FC880", Slot = "5")]
		public void Execute(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x22FC8B4", Offset = "0x22FC8B4", VA = "0x22FC8B4", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x22FC904", Offset = "0x22FC904", VA = "0x22FC904")]
		public ChangeHealthAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	public class ChangeHealthOverTimeAction : IUnitAction, IHealthAction
	{
		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE58", Offset = "0xE1EE58")]
		private sealed class <DoExecute>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChangeHealthOverTimeAction <>4__this;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnitHealth health;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <x>5__3;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010FA")]
				[Address(RVA = "0x22FCB68", Offset = "0x22FCB68", VA = "0x22FCB68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010FC")]
				[Address(RVA = "0x22FCBD0", Offset = "0x22FCBD0", VA = "0x22FCBD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x22FCA20", Offset = "0x22FCA20", VA = "0x22FCA20")]
			[DebuggerHidden]
			public <DoExecute>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x22FCA5C", Offset = "0x22FCA5C", VA = "0x22FCA5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x22FCA60", Offset = "0x22FCA60", VA = "0x22FCA60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x22FCB70", Offset = "0x22FCB70", VA = "0x22FCB70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float AmountPerTick;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TickCount;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TickDelay;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool InstantTick;

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x22FC90C", Offset = "0x22FC90C", VA = "0x22FC90C", Slot = "4")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x22FC950", Offset = "0x22FC950", VA = "0x22FC950", Slot = "5")]
		public void Execute(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x22FC9A4", Offset = "0x22FC9A4", VA = "0x22FC9A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29BB0", Offset = "0xE29BB0")]
		private IEnumerator DoExecute(Transform emitter, UnitHealth health)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x22FCA4C", Offset = "0x22FCA4C", VA = "0x22FCA4C")]
		public ChangeHealthOverTimeAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000288")]
	public class MultiplyHealAction : IHealthFloatAction
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Multiplicator;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x22FD220", Offset = "0x22FD220", VA = "0x22FD220", Slot = "4")]
		public void Execute(Transform emitter, UnitHealth health, float value)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x22FD25C", Offset = "0x22FD25C", VA = "0x22FD25C")]
		public MultiplyHealAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000289")]
	public class ChangeMaxHealth : IUnitState, IHealthState
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x22FCBD8", Offset = "0x22FCBD8", VA = "0x22FCBD8", Slot = "4")]
		public void Init(Transform emitter, GEUnit unit, bool state)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x22FCBDC", Offset = "0x22FCBDC", VA = "0x22FCBDC", Slot = "7")]
		public void Enter(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x22FCC2C", Offset = "0x22FCC2C", VA = "0x22FCC2C", Slot = "5")]
		public void Enter(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x22FCC68", Offset = "0x22FCC68", VA = "0x22FCC68", Slot = "8")]
		public void Leave(Transform emitter, UnitHealth health)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x22FCCB8", Offset = "0x22FCCB8", VA = "0x22FCCB8", Slot = "6")]
		public void Leave(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x22FCCF4", Offset = "0x22FCCF4", VA = "0x22FCCF4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x22FCCF8", Offset = "0x22FCCF8", VA = "0x22FCCF8")]
		public ChangeMaxHealth()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class ChangeMaxPlayerHealth : IState
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Multiplier;

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x22FCD00", Offset = "0x22FCD00", VA = "0x22FCD00", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x22FCE1C", Offset = "0x22FCE1C", VA = "0x22FCE1C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x22FCE20", Offset = "0x22FCE20", VA = "0x22FCE20", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x22FCF3C", Offset = "0x22FCF3C", VA = "0x22FCF3C")]
		public ChangeMaxPlayerHealth()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028B")]
	public class Regeneration : IUnitState
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Intervall;

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x22FD26C", Offset = "0x22FD26C", VA = "0x22FD26C", Slot = "4")]
		public void Init(Transform emitter, GEUnit unit, bool state)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x22FD270", Offset = "0x22FD270", VA = "0x22FD270", Slot = "5")]
		public void Enter(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x22FD2D8", Offset = "0x22FD2D8", VA = "0x22FD2D8", Slot = "6")]
		public void Leave(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x22FD35C", Offset = "0x22FD35C", VA = "0x22FD35C")]
		public Regeneration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	public class HealthModifier : IPlayerState
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x22FD168", Offset = "0x22FD168", VA = "0x22FD168", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x22FD1BC", Offset = "0x22FD1BC", VA = "0x22FD1BC", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x22FD210", Offset = "0x22FD210", VA = "0x22FD210")]
		public HealthModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public class ChangeSpeedModifier : IPlayerState, IState
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x22FCF4C", Offset = "0x22FCF4C", VA = "0x22FCF4C", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x22FCF7C", Offset = "0x22FCF7C", VA = "0x22FCF7C", Slot = "7")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x22FD02C", Offset = "0x22FD02C", VA = "0x22FD02C", Slot = "6")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x22FD030", Offset = "0x22FD030", VA = "0x22FD030", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x22FD060", Offset = "0x22FD060", VA = "0x22FD060", Slot = "8")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x22FD110", Offset = "0x22FD110", VA = "0x22FD110")]
		public ChangeSpeedModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class ChangeVisibilityModifier : IPlayerState
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25F40", Offset = "0xE25F40")]
		public float Modifier;

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x22FD118", Offset = "0x22FD118", VA = "0x22FD118", Slot = "4")]
		public void Enter(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x22FD138", Offset = "0x22FD138", VA = "0x22FD138", Slot = "5")]
		public void Leave(Transform emitter, Player player)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x22FD158", Offset = "0x22FD158", VA = "0x22FD158")]
		public ChangeVisibilityModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028F")]
	public class ChangeHandMass : IHandState
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Amount;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float bodyImpactMultiplicator;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float meleeDamageMultiplicator;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x22FC57C", Offset = "0x22FC57C", VA = "0x22FC57C", Slot = "4")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x22FC6A8", Offset = "0x22FC6A8", VA = "0x22FC6A8")]
		private void MultiplyValues(PlayerUpgrades.HandAttributes hand)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x22FC6F0", Offset = "0x22FC6F0", VA = "0x22FC6F0")]
		private void DivideValues(PlayerUpgrades.HandAttributes hand)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x22FC738", Offset = "0x22FC738", VA = "0x22FC738", Slot = "5")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x22FC864", Offset = "0x22FC864", VA = "0x22FC864")]
		public ChangeHandMass()
		{
		}
	}
}
namespace Peacemaker.HUD
{
	[Serializable]
	[Token(Token = "0x2000290")]
	public class ShowUIBackground : IAction
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIBackgroundData Background;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Interrupt;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x22FA03C", Offset = "0x22FA03C", VA = "0x22FA03C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x22FA0F8", Offset = "0x22FA0F8", VA = "0x22FA0F8")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x22FA1B4", Offset = "0x22FA1B4", VA = "0x22FA1B4")]
		public ShowUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000291")]
	public class HideUIBackground : IAction
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x22F9B70", Offset = "0x22F9B70", VA = "0x22F9B70", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x22F9BCC", Offset = "0x22F9BCC", VA = "0x22F9BCC")]
		public HideUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000292")]
	public class ShowUIDamage : IAttackAction
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x22FA1BC", Offset = "0x22FA1BC", VA = "0x22FA1BC", Slot = "4")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x22FA448", Offset = "0x22FA448", VA = "0x22FA448")]
		public ShowUIDamage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000293")]
	public class ShowSpeedlines : IAction, ITriggerAction
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Speedlines Speedlines;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x22F9FFC", Offset = "0x22F9FFC", VA = "0x22F9FFC", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x22FA018", Offset = "0x22FA018", VA = "0x22FA018", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x22FA034", Offset = "0x22FA034", VA = "0x22FA034")]
		public ShowSpeedlines()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000294")]
	public class HideSpeedlines : IAction
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Speedlines Speedlines;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x22F9B4C", Offset = "0x22F9B4C", VA = "0x22F9B4C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x22F9B68", Offset = "0x22F9B68", VA = "0x22F9B68")]
		public HideSpeedlines()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000295")]
	public class ShowHUD : GenericEvent, IAction
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x22F9E18", Offset = "0x22F9E18", VA = "0x22F9E18", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x22F9E1C", Offset = "0x22F9E1C", VA = "0x22F9E1C")]
		public ShowHUD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class HideHUD : GenericEvent, IAction
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x22F96A8", Offset = "0x22F96A8", VA = "0x22F96A8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x22F96AC", Offset = "0x22F96AC", VA = "0x22F96AC")]
		public HideHUD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000297")]
	public class ShowHUDPopup : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x22F9FA8", Offset = "0x22F9FA8", VA = "0x22F9FA8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x22F9FAC", Offset = "0x22F9FAC", VA = "0x22F9FAC", Slot = "6")]
		public void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x22F9FB0", Offset = "0x22F9FB0", VA = "0x22F9FB0")]
		public ShowHUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class ShowHUDPopupCurrentLevel : GenericEvent, IAction
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DistrictValueData districtKey;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntegerValueData levelKey;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x22F9FB8", Offset = "0x22F9FB8", VA = "0x22F9FB8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x22F9FBC", Offset = "0x22F9FBC", VA = "0x22F9FBC")]
		public ShowHUDPopupCurrentLevel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class ShowHUDFloatPopup : GenericFloatEvent
	{
		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x22F9E24", Offset = "0x22F9E24", VA = "0x22F9E24", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x22F9E28", Offset = "0x22F9E28", VA = "0x22F9E28")]
		public ShowHUDFloatPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class ShowHUDStringPopup : GenericStringEvent
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x22F9FF0", Offset = "0x22F9FF0", VA = "0x22F9FF0", Slot = "4")]
		public override void Execute(Transform emitter, string text)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x22F9FF4", Offset = "0x22F9FF4", VA = "0x22F9FF4")]
		public ShowHUDStringPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class HideHUDPopup : GenericEvent, IAction
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x22F96B4", Offset = "0x22F96B4", VA = "0x22F96B4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x22F96B8", Offset = "0x22F96B8", VA = "0x22F96B8")]
		public HideHUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class ShowHUDInfotext : GenericEvent, IAction, ISideAction
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LString Description;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xE25F78", Offset = "0xE25F78")]
		public string Text;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Delay;

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x22F9E30", Offset = "0x22F9E30", VA = "0x22F9E30", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x22F9F34", Offset = "0x22F9F34", VA = "0x22F9F34", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x22F9F40", Offset = "0x22F9F40", VA = "0x22F9F40")]
		public ShowHUDInfotext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class HUDPopup : IState
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x22F9614", Offset = "0x22F9614", VA = "0x22F9614", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x22F9618", Offset = "0x22F9618", VA = "0x22F9618", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x22F961C", Offset = "0x22F961C", VA = "0x22F961C", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x22F9620", Offset = "0x22F9620", VA = "0x22F9620")]
		public HUDPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class HUDPopupUpgrade : IState
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UpgradeData Upgrade;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x22F9628", Offset = "0x22F9628", VA = "0x22F9628", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x22F962C", Offset = "0x22F962C", VA = "0x22F962C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x22F9630", Offset = "0x22F9630", VA = "0x22F9630", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x22F9634", Offset = "0x22F9634", VA = "0x22F9634")]
		public HUDPopupUpgrade()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class SetMaterial : IState
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer Mesh;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material defaultMaterial;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x22F9C0C", Offset = "0x22F9C0C", VA = "0x22F9C0C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x22F9C40", Offset = "0x22F9C40", VA = "0x22F9C40", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x22F9C64", Offset = "0x22F9C64", VA = "0x22F9C64", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x22F9C88", Offset = "0x22F9C88", VA = "0x22F9C88")]
		public SetMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class ShowGameObject : IState
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Obj;

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x22F9DB0", Offset = "0x22F9DB0", VA = "0x22F9DB0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x22F9DD0", Offset = "0x22F9DD0", VA = "0x22F9DD0", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x22F9DF0", Offset = "0x22F9DF0", VA = "0x22F9DF0", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x22F9E10", Offset = "0x22F9E10", VA = "0x22F9E10")]
		public ShowGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class HideGameObject : IState
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Obj;

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x22F963C", Offset = "0x22F963C", VA = "0x22F963C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x22F9660", Offset = "0x22F9660", VA = "0x22F9660", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x22F9680", Offset = "0x22F9680", VA = "0x22F9680", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x22F96A0", Offset = "0x22F96A0", VA = "0x22F96A0")]
		public HideGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	public class HidePlayerWeapons : IState
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Weapon weapon;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x22F99D4", Offset = "0x22F99D4", VA = "0x22F99D4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x22F9B34", Offset = "0x22F9B34", VA = "0x22F9B34", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x22F9B3C", Offset = "0x22F9B3C", VA = "0x22F9B3C", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x22F99DC", Offset = "0x22F99DC", VA = "0x22F99DC")]
		private void SetWeapons(bool state)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x22F9B44", Offset = "0x22F9B44", VA = "0x22F9B44")]
		public HidePlayerWeapons()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class HidePlayerPickups : IState
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x22F96C0", Offset = "0x22F96C0", VA = "0x22F96C0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x22F99BC", Offset = "0x22F99BC", VA = "0x22F99BC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x22F99C4", Offset = "0x22F99C4", VA = "0x22F99C4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x22F96C8", Offset = "0x22F96C8", VA = "0x22F96C8")]
		private void SetPickup(bool state)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x22F99CC", Offset = "0x22F99CC", VA = "0x22F99CC")]
		public HidePlayerPickups()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A4")]
	public class SetTimeScale : IState
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Scale;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float defaultTime;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x22F9C90", Offset = "0x22F9C90", VA = "0x22F9C90", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x22F9CB8", Offset = "0x22F9CB8", VA = "0x22F9CB8", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x22F9CC4", Offset = "0x22F9CC4", VA = "0x22F9CC4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x22F9CD0", Offset = "0x22F9CD0", VA = "0x22F9CD0")]
		public SetTimeScale()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A5")]
	public class PauseGame : IState
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x22F9BD4", Offset = "0x22F9BD4", VA = "0x22F9BD4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x22F9BEC", Offset = "0x22F9BEC", VA = "0x22F9BEC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x22F9BF8", Offset = "0x22F9BF8", VA = "0x22F9BF8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x22F9C04", Offset = "0x22F9C04", VA = "0x22F9C04")]
		public PauseGame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class Tooltip : ISideState
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25F88", Offset = "0xE25F88")]
		public Vector3 Offset;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25FC0", Offset = "0xE25FC0")]
		public float OffsetY;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x22FA450", Offset = "0x22FA450", VA = "0x22FA450", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x22FA454", Offset = "0x22FA454", VA = "0x22FA454", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x22FA5BC", Offset = "0x22FA5BC", VA = "0x22FA5BC", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x22FA630", Offset = "0x22FA630", VA = "0x22FA630")]
		public Tooltip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public class TooltipFixedHand : IState
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Side side;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TooltipType Id;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE25FF8", Offset = "0xE25FF8")]
		public Vector3 Offset;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26030", Offset = "0xE26030")]
		public float OffsetY;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x22FA6D4", Offset = "0x22FA6D4", VA = "0x22FA6D4", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x22FA6D8", Offset = "0x22FA6D8", VA = "0x22FA6D8", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x22FA830", Offset = "0x22FA830", VA = "0x22FA830", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x22FA894", Offset = "0x22FA894", VA = "0x22FA894")]
		public TooltipFixedHand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class TooltipTarget : ITargetSideState
	{
		[Token(Token = "0x2000432")]
		public enum TargetType
		{
			[Token(Token = "0x40010A0")]
			Self,
			[Token(Token = "0x40010A1")]
			Target
		}

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TargetType Target;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LString Title;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LString Description;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Color;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26068", Offset = "0xE26068")]
		public Vector3 Offset;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE260A0", Offset = "0xE260A0")]
		public float OffsetY;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Detail;

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x22FAD64", Offset = "0x22FAD64", VA = "0x22FAD64", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x22FAD68", Offset = "0x22FAD68", VA = "0x22FAD68", Slot = "5")]
		public void Enter(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x22FAEC4", Offset = "0x22FAEC4", VA = "0x22FAEC4", Slot = "6")]
		public void Leave(Transform emitter, Transform target, Side side)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x22FAF38", Offset = "0x22FAF38", VA = "0x22FAF38")]
		public TooltipTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class TooltipUpgrade : ISideState
	{
		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TooltipType Id;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UpgradeData Upgrade;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE260D8", Offset = "0xE260D8")]
		public Vector3 Offset;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26110", Offset = "0xE26110")]
		public float OffsetY;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool Detail;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[ReadOnly]
		public bool CurrentState;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[ReadOnly]
		public Side CurrentSide;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x22FAFDC", Offset = "0x22FAFDC", VA = "0x22FAFDC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x22FAFE0", Offset = "0x22FAFE0", VA = "0x22FAFE0", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x22FB154", Offset = "0x22FB154", VA = "0x22FB154", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x22FB1D0", Offset = "0x22FB1D0", VA = "0x22FB1D0")]
		public TooltipUpgrade()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class TooltipSlots : ISideState
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationData Title;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizationData Empty;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Color;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TooltipType Id;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26168", Offset = "0xE26168")]
		public Vector3 Offset;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE261A0", Offset = "0xE261A0")]
		public float OffsetY;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[ReadOnly]
		public bool CurrentState;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public Side CurrentSide;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<UpgradeData> _upgrades;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StringBuilder _sb;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x22FA938", Offset = "0x22FA938", VA = "0x22FA938", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x22FA93C", Offset = "0x22FA93C", VA = "0x22FA93C", Slot = "5")]
		public void Enter(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x22FACD4", Offset = "0x22FACD4", VA = "0x22FACD4", Slot = "6")]
		public void Leave(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x22FAD50", Offset = "0x22FAD50", VA = "0x22FAD50")]
		public TooltipSlots()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	public class EnableTooltips : IState
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x22F92CC", Offset = "0x22F92CC", VA = "0x22F92CC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x22F933C", Offset = "0x22F933C", VA = "0x22F933C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x22F9398", Offset = "0x22F9398", VA = "0x22F9398", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x22F93F4", Offset = "0x22F93F4", VA = "0x22F93F4")]
		public EnableTooltips()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class DisableTooltips : IState
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x22F919C", Offset = "0x22F919C", VA = "0x22F919C", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x22F920C", Offset = "0x22F920C", VA = "0x22F920C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x22F9268", Offset = "0x22F9268", VA = "0x22F9268", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x22F92C4", Offset = "0x22F92C4", VA = "0x22F92C4")]
		public DisableTooltips()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class SetUIBackground : IState
	{
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIBackgroundData Background;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Interrupt;

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x22F9CD8", Offset = "0x22F9CD8", VA = "0x22F9CD8", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x22F9CDC", Offset = "0x22F9CDC", VA = "0x22F9CDC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x22F9D44", Offset = "0x22F9D44", VA = "0x22F9D44", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x22F9DA8", Offset = "0x22F9DA8", VA = "0x22F9DA8")]
		public SetUIBackground()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class FMODAudio : IState
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x22F93FC", Offset = "0x22F93FC", VA = "0x22F93FC", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x22F9408", Offset = "0x22F9408", VA = "0x22F9408", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x22F94F8", Offset = "0x22F94F8", VA = "0x22F94F8", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x22F95A4", Offset = "0x22F95A4", VA = "0x22F95A4")]
		public FMODAudio()
		{
		}
	}
}
namespace Peacemaker.Discord
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class SendDiscord : IAction
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Text;

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x10113D0", Offset = "0x10113D0", VA = "0x10113D0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x10114D0", Offset = "0x10114D0", VA = "0x10114D0")]
		public SendDiscord()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class SendWinDiscord : SendDiscordBase, IAction
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x10117E0", Offset = "0x10117E0", VA = "0x10117E0", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x10117E4", Offset = "0x10117E4", VA = "0x10117E4")]
		public SendWinDiscord()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class SendLoseDiscord : SendDiscordBase, IAction
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x10117D4", Offset = "0x10117D4", VA = "0x10117D4", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x10117D8", Offset = "0x10117D8", VA = "0x10117D8")]
		public SendLoseDiscord()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public abstract class SendDiscordBase
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x10114D8", Offset = "0x10114D8", VA = "0x10114D8")]
		public void Send(string message, string district, int level)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x10117CC", Offset = "0x10117CC", VA = "0x10117CC")]
		protected SendDiscordBase()
		{
		}
	}
}
namespace Peacemaker.Object
{
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class DestroySelf : IAction, ITriggerAction, ISideAction
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x2307088", Offset = "0x2307088", VA = "0x2307088", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x23070B8", Offset = "0x23070B8", VA = "0x23070B8", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x23070BC", Offset = "0x23070BC", VA = "0x23070BC", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x23070C0", Offset = "0x23070C0", VA = "0x23070C0")]
		public DestroySelf()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class DestroyTarget : IAction, ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x23070C8", Offset = "0x23070C8", VA = "0x23070C8", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x23070F8", Offset = "0x23070F8", VA = "0x23070F8", Slot = "5")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x2307120", Offset = "0x2307120", VA = "0x2307120", Slot = "6")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x2307148", Offset = "0x2307148", VA = "0x2307148")]
		public DestroyTarget()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E528", Offset = "0xE1E528")]
	public class ObjectTagData : ScriptableObject, IStatus
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public ContentStatus _status;

		[Token(Token = "0x170000A0")]
		public ContentStatus ContentStatus
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x10AFBC4", Offset = "0x10AFBC4", VA = "0x10AFBC4", Slot = "4")]
			get
			{
				return default(ContentStatus);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x10AFBCC", Offset = "0x10AFBCC", VA = "0x10AFBCC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x10AFBD4", Offset = "0x10AFBD4", VA = "0x10AFBD4")]
		public ObjectTagData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	public class SpawnObjectAtParent : GenericEvent
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectData Object;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Parent;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Position;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion Rotation;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 Scale;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x10AFC48", Offset = "0x10AFC48", VA = "0x10AFC48", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x10AFD8C", Offset = "0x10AFD8C", VA = "0x10AFD8C")]
		public SpawnObjectAtParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B7")]
	public class IgnoreTag : ITriggerAction, ICollisionAction
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE26208", Offset = "0xE26208")]
		public string Tag;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26240", Offset = "0xE26240")]
		public List<Collider> Collider;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x2307150", Offset = "0x2307150", VA = "0x2307150", Slot = "4")]
		public void Execute(Transform emitter, Collider collider)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x23071B8", Offset = "0x23071B8", VA = "0x23071B8", Slot = "5")]
		public void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x23072F0", Offset = "0x23072F0", VA = "0x23072F0")]
		private string[] Tags()
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x230733C", Offset = "0x230733C", VA = "0x230733C")]
		public IgnoreTag()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class AddBuildTag : IAction
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x230701C", Offset = "0x230701C", VA = "0x230701C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x2307080", Offset = "0x2307080", VA = "0x2307080")]
		public AddBuildTag()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class RemoveBuildTag : IAction
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildTagData Tag;

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x10AFBDC", Offset = "0x10AFBDC", VA = "0x10AFBDC", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x10AFC40", Offset = "0x10AFC40", VA = "0x10AFC40")]
		public RemoveBuildTag()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class ObjectActiveCondition : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000433")]
		public enum ActivationType
		{
			[Token(Token = "0x40010A3")]
			Awake,
			[Token(Token = "0x40010A4")]
			Start,
			[Token(Token = "0x40010A5")]
			Enable
		}

		[Token(Token = "0x2000434")]
		public enum OperatorType
		{
			[Token(Token = "0x40010A7")]
			AND,
			[Token(Token = "0x40010A8")]
			OR
		}

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ActivationType Activation;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public OperatorType Operator;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool Not;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject Target;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26278", Offset = "0xE26278")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26278", Offset = "0xE26278")]
		[InlineProperty]
		public List<ICondition> Conditions;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x23073AC", Offset = "0x23073AC", VA = "0x23073AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x23074E4", Offset = "0x23074E4", VA = "0x23074E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x23074F8", Offset = "0x23074F8", VA = "0x23074F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x230744C", Offset = "0x230744C", VA = "0x230744C")]
		private void Execute()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x230750C", Offset = "0x230750C", VA = "0x230750C")]
		public ObjectActiveCondition()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class ObjectCleaner : SerializedMonoBehaviour
	{
		[Token(Token = "0x2000435")]
		public struct CountInfo
		{
			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjectTagData Category;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Limit;
		}

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ObjectCleaner Instance;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TableListAttribute", RVA = "0xE262E8", Offset = "0xE262E8")]
		public List<CountInfo> ObjectList;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<ObjectTagData, int> objectsLimit;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsAlways;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsHigh;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<ObjectTagData, HashSet<ObjectPriority>> objectsLow;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x230757C", Offset = "0x230757C", VA = "0x230757C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x2307810", Offset = "0x2307810", VA = "0x2307810")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x23078A0", Offset = "0x23078A0", VA = "0x23078A0")]
		public bool Register(Priority priority, ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x2307990", Offset = "0x2307990", VA = "0x2307990")]
		public bool RegisterAlways(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x2307B64", Offset = "0x2307B64", VA = "0x2307B64")]
		public bool RegisterHigh(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x2307CF4", Offset = "0x2307CF4", VA = "0x2307CF4")]
		public bool RegisterLow(ObjectTagData tag, ObjectPriority obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x2307E24", Offset = "0x2307E24", VA = "0x2307E24")]
		public void UnRegister(Priority priority, ObjectTagData tag, ObjectPriority obj, bool remove = false)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x2307F40", Offset = "0x2307F40", VA = "0x2307F40")]
		public ObjectCleaner()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public enum Priority
	{
		[Token(Token = "0x4000B9E")]
		Always,
		[Token(Token = "0x4000B9F")]
		High,
		[Token(Token = "0x4000BA0")]
		Low
	}
	[Token(Token = "0x20002BD")]
	public class ObjectPriority : MonoBehaviour
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ValueDropdownAttribute", RVA = "0xE2631C", Offset = "0xE2631C")]
		public ObjectTagData Category;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26354", Offset = "0xE26354")]
		public Priority PriorityType;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isRegistered;

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x10AF9E4", Offset = "0x10AF9E4", VA = "0x10AF9E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x10AFAEC", Offset = "0x10AFAEC", VA = "0x10AFAEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x10AFBBC", Offset = "0x10AFBBC", VA = "0x10AFBBC")]
		public ObjectPriority()
		{
		}
	}
}
namespace Peacemaker.General
{
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class DebugAction : IAction, IUnitAction, IBulletAction, IAttackAction, ISideAction
	{
		[Token(Token = "0x2000436")]
		public enum DebugType
		{
			[Token(Token = "0x40010AC")]
			Info,
			[Token(Token = "0x40010AD")]
			Warning,
			[Token(Token = "0x40010AE")]
			Error
		}

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideLabel]
		public string Text;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideLabel]
		public DebugType Type;

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x22F4400", Offset = "0x22F4400", VA = "0x22F4400", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x22F4500", Offset = "0x22F4500", VA = "0x22F4500", Slot = "5")]
		public void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x22F4504", Offset = "0x22F4504", VA = "0x22F4504", Slot = "6")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x22F4508", Offset = "0x22F4508", VA = "0x22F4508", Slot = "7")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x22F450C", Offset = "0x22F450C", VA = "0x22F450C", Slot = "8")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x22F4510", Offset = "0x22F4510", VA = "0x22F4510")]
		public DebugAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class DelayEvent : GenericEvent, IAction, ISideAction
	{
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE68", Offset = "0xE1EE68")]
		private sealed class <DoDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayEvent <>4__this;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform emitter;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <x>5__2;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001100")]
				[Address(RVA = "0x22F4880", Offset = "0x22F4880", VA = "0x22F4880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001102")]
				[Address(RVA = "0x22F48E8", Offset = "0x22F48E8", VA = "0x22F48E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x22F45F4", Offset = "0x22F45F4", VA = "0x22F45F4")]
			[DebuggerHidden]
			public <DoDelay>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x22F4698", Offset = "0x22F4698", VA = "0x22F4698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x22F469C", Offset = "0x22F469C", VA = "0x22F469C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x22F4888", Offset = "0x22F4888", VA = "0x22F4888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Delay;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE263AC", Offset = "0xE263AC")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE263AC", Offset = "0xE263AC")]
		[InlineProperty]
		public List<IAction> Actions;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x22F4518", Offset = "0x22F4518", VA = "0x22F4518", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x22F45E8", Offset = "0x22F45E8", VA = "0x22F45E8", Slot = "6")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x22F456C", Offset = "0x22F456C", VA = "0x22F456C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29C14", Offset = "0xE29C14")]
		private IEnumerator DoDelay(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x22F4620", Offset = "0x22F4620", VA = "0x22F4620")]
		public DelayEvent()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class ScaleOverTimeEvent : GenericEvent, IAction
	{
		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE78", Offset = "0xE1EE78")]
		private sealed class <DoScale>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform emitter;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScaleOverTimeEvent <>4__this;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initialScale>5__2;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <x>5__3;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001106")]
				[Address(RVA = "0x22F4EC4", Offset = "0x22F4EC4", VA = "0x22F4EC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001108")]
				[Address(RVA = "0x22F4F2C", Offset = "0x22F4F2C", VA = "0x22F4F2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x22F4C64", Offset = "0x22F4C64", VA = "0x22F4C64")]
			[DebuggerHidden]
			public <DoScale>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x22F4CA0", Offset = "0x22F4CA0", VA = "0x22F4CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x22F4CA4", Offset = "0x22F4CA4", VA = "0x22F4CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001107")]
			[Address(RVA = "0x22F4ECC", Offset = "0x22F4ECC", VA = "0x22F4ECC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x22F4B94", Offset = "0x22F4B94", VA = "0x22F4B94", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x22F4BE8", Offset = "0x22F4BE8", VA = "0x22F4BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29C78", Offset = "0xE29C78")]
		private IEnumerator DoScale(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x22F4C90", Offset = "0x22F4C90", VA = "0x22F4C90")]
		public ScaleOverTimeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class Quit : GenericEvent, IAction
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x22F4B84", Offset = "0x22F4B84", VA = "0x22F4B84", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x22F4B8C", Offset = "0x22F4B8C", VA = "0x22F4B8C")]
		public Quit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class OpenUrl : GenericEvent, IAction
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x22F4B70", Offset = "0x22F4B70", VA = "0x22F4B70", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x22F4B7C", Offset = "0x22F4B7C", VA = "0x22F4B7C")]
		public OpenUrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	[HideLabel]
	public class CustomEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideReferenceObjectPicker]
		public UnityEvent Event;

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x22F430C", Offset = "0x22F430C", VA = "0x22F430C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x22F4328", Offset = "0x22F4328", VA = "0x22F4328")]
		public CustomEvent()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class DestroyEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x22F48F0", Offset = "0x22F48F0", VA = "0x22F48F0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x22F4974", Offset = "0x22F4974", VA = "0x22F4974")]
		public DestroyEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C5")]
	public class DestroyGameObjectEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x22F497C", Offset = "0x22F497C", VA = "0x22F497C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x22F49E8", Offset = "0x22F49E8", VA = "0x22F49E8")]
		public DestroyGameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class DestroyObjectDataInstanceEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ObjectDataInstance data;

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x22F49F0", Offset = "0x22F49F0", VA = "0x22F49F0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x22F4ADC", Offset = "0x22F4ADC", VA = "0x22F4ADC")]
		public DestroyObjectDataInstanceEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C7")]
	public class DestroySelfEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x22F4AE4", Offset = "0x22F4AE4", VA = "0x22F4AE4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x22F4B68", Offset = "0x22F4B68", VA = "0x22F4B68")]
		public DestroySelfEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C8")]
	public class CustomFloatEvent : GenericFloatEvent, IFloatAction
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent<float> Event;

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x22F4390", Offset = "0x22F4390", VA = "0x22F4390", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x22F43F8", Offset = "0x22F43F8", VA = "0x22F43F8")]
		public CustomFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C9")]
	public class SetTimeScale : GenericEvent, IAction
	{
		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float defaultFixedDeltaTime;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float TimeScale;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x22F5218", Offset = "0x22F5218", VA = "0x22F5218", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x22F5304", Offset = "0x22F5304", VA = "0x22F5304")]
		public SetTimeScale()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CA")]
	public class SetTimeScaleOverTime : GenericEvent, IAction
	{
		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE88", Offset = "0xE1EE88")]
		private sealed class <DoSlowDownTime>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetTimeScaleOverTime <>4__this;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <x>5__2;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600110C")]
				[Address(RVA = "0x22F56F4", Offset = "0x22F56F4", VA = "0x22F56F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600110E")]
				[Address(RVA = "0x22F575C", Offset = "0x22F575C", VA = "0x22F575C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001109")]
			[Address(RVA = "0x22F54A4", Offset = "0x22F54A4", VA = "0x22F54A4")]
			[DebuggerHidden]
			public <DoSlowDownTime>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600110A")]
			[Address(RVA = "0x22F5588", Offset = "0x22F5588", VA = "0x22F5588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600110B")]
			[Address(RVA = "0x22F558C", Offset = "0x22F558C", VA = "0x22F558C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600110D")]
			[Address(RVA = "0x22F56FC", Offset = "0x22F56FC", VA = "0x22F56FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float defaultFixedDeltaTime;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Delay;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeScale;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Key;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x22F5360", Offset = "0x22F5360", VA = "0x22F5360", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x22F5434", Offset = "0x22F5434", VA = "0x22F5434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29CDC", Offset = "0xE29CDC")]
		private IEnumerator DoSlowDownTime()
		{
			return null;
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x22F54D0", Offset = "0x22F54D0", VA = "0x22F54D0")]
		public SetTimeScaleOverTime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class SetSeedViaKeyboard : GenericEvent, IAction
	{
		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EE98", Offset = "0xE1EE98")]
		private sealed class <DoSetSeed>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetSeedViaKeyboard <>4__this;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0x22F51A8", Offset = "0x22F51A8", VA = "0x22F51A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0x22F5210", Offset = "0x22F5210", VA = "0x22F5210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x22F4FE8", Offset = "0x22F4FE8", VA = "0x22F4FE8")]
			[DebuggerHidden]
			public <DoSetSeed>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0x22F501C", Offset = "0x22F501C", VA = "0x22F501C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x22F5020", Offset = "0x22F5020", VA = "0x22F5020", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x22F51B0", Offset = "0x22F51B0", VA = "0x22F51B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TouchScreenKeyboard overlayKeyboard;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x22F4F34", Offset = "0x22F4F34", VA = "0x22F4F34", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x22F4F78", Offset = "0x22F4F78", VA = "0x22F4F78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29D40", Offset = "0xE29D40")]
		private IEnumerator DoSetSeed()
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x22F5014", Offset = "0x22F5014", VA = "0x22F5014")]
		public SetSeedViaKeyboard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CC")]
	public class SpawnHoloWeapon : ISideAction
	{
		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EEA8", Offset = "0xE1EEA8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IPickable pickable;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpawnHoloWeapon <>4__this;

			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Rigidbody rig;

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x22F5B90", Offset = "0x22F5B90", VA = "0x22F5B90")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0x22F5B98", Offset = "0x22F5B98", VA = "0x22F5B98")]
			internal void <DoPickup>b__0(IPicking <p0>, IPickable <p1>)
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EEB8", Offset = "0xE1EEB8")]
		private sealed class <DoPickup>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPickable pickable;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnHoloWeapon <>4__this;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Rigidbody rig;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Side side;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x17000130")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111A")]
				[Address(RVA = "0x22F60DC", Offset = "0x22F60DC", VA = "0x22F60DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000131")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0x22F6144", Offset = "0x22F6144", VA = "0x22F6144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x22F59B0", Offset = "0x22F59B0", VA = "0x22F59B0")]
			[DebuggerHidden]
			public <DoPickup>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x22F5CBC", Offset = "0x22F5CBC", VA = "0x22F5CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x22F5CC0", Offset = "0x22F5CC0", VA = "0x22F5CC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x22F60E4", Offset = "0x22F60E4", VA = "0x22F60E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeaponData Weapon;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material OverrideMaterial;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material FadeOutMaterial;

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x22F5764", Offset = "0x22F5764", VA = "0x22F5764", Slot = "4")]
		public void Execute(Transform emitter, Side side)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x22F5918", Offset = "0x22F5918", VA = "0x22F5918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29DA4", Offset = "0xE29DA4")]
		private IEnumerator DoPickup(Side side, GameObject go, Weapon weapon, IPickable pickable, Rigidbody rig)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x22F59DC", Offset = "0x22F59DC", VA = "0x22F59DC")]
		private void ChangeMaterial(GameObject go, Material mat)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x22F5B88", Offset = "0x22F5B88", VA = "0x22F5B88")]
		public SpawnHoloWeapon()
		{
		}
	}
}
namespace Peacemaker.Bullet
{
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class IncreaseBulletDamageAction : IBulletAction
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Modifier;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x10D7FF8", Offset = "0x10D7FF8", VA = "0x10D7FF8", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x10D815C", Offset = "0x10D815C", VA = "0x10D815C")]
		public IncreaseBulletDamageAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CE")]
	public class ChangeColorAction : IBulletAction
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient Color;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x10D7B38", Offset = "0x10D7B38", VA = "0x10D7B38", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x10D7C28", Offset = "0x10D7C28", VA = "0x10D7C28")]
		public ChangeColorAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class LeechAction : IBulletAction
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float percentageHealthGain;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetUnitTag> leechTags;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FloatValueData> leechProgressPermanent;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<FloatValueData> leechProgressRun;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x10D816C", Offset = "0x10D816C", VA = "0x10D816C", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x10D82B0", Offset = "0x10D82B0", VA = "0x10D82B0")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x10D8734", Offset = "0x10D8734", VA = "0x10D8734")]
		public LeechAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D0")]
	public class ExplodeStunnedAction : IBulletAction
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExplosionForce explosionPrefab;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x10D7C90", Offset = "0x10D7C90", VA = "0x10D7C90", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x10D7DD4", Offset = "0x10D7DD4", VA = "0x10D7DD4")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x10D7FF0", Offset = "0x10D7FF0", VA = "0x10D7FF0")]
		public ExplodeStunnedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D1")]
	public class UnitEffectAction : IBulletAction
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitEventData eventData;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WeaponBullet weaponBullet;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x10D87B0", Offset = "0x10D87B0", VA = "0x10D87B0", Slot = "4")]
		public void Execute(Transform emitter, BaseBullet bullet)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x10D88D0", Offset = "0x10D88D0", VA = "0x10D88D0")]
		private void WeaponBullet_OnDamage(IAttackable attackable, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x10D96F0", Offset = "0x10D96F0", VA = "0x10D96F0")]
		public UnitEffectAction()
		{
		}
	}
}
namespace Peacemaker.Audio
{
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E584", Offset = "0xE1E584")]
	public class AssetAudioMaterial : ScriptableObject, IDatabase, IValidation
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string descriptiveName;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minSoundThreshold;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSoundThreshold;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useScrapeSound;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE2642C", Offset = "0xE2642C")]
		public AssetFMODEvent scrapeEvent;

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x10CA674", Offset = "0x10CA674", VA = "0x10CA674")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x10CA69C", Offset = "0x10CA69C", VA = "0x10CA69C", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x10CA6A4", Offset = "0x10CA6A4", VA = "0x10CA6A4", Slot = "4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x10CA6AC", Offset = "0x10CA6AC", VA = "0x10CA6AC", Slot = "6")]
		public Texture GetTexture()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x10CA6B4", Offset = "0x10CA6B4", VA = "0x10CA6B4", Slot = "5")]
		public void SetName(string name)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x10CA6BC", Offset = "0x10CA6BC", VA = "0x10CA6BC", Slot = "8")]
		public string GetError(ValidationMode mode)
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x10CA754", Offset = "0x10CA754", VA = "0x10CA754")]
		public AssetAudioMaterial()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E5D8", Offset = "0xE1E5D8")]
	public class AssetAudioParameter : ScriptableObject
	{
		[Token(Token = "0x200043D")]
		public enum Type
		{
			[Token(Token = "0x40010CE")]
			Int,
			[Token(Token = "0x40010CF")]
			Float
		}

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type type;

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x10CA7B8", Offset = "0x10CA7B8", VA = "0x10CA7B8")]
		public AssetAudioParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D4")]
	public class AudioParameterValue
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioParameter audioParameter;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE26468", Offset = "0xE26468")]
		public float floatVal;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE26500", Offset = "0xE26500")]
		public int intVal;

		[Token(Token = "0x170000A1")]
		public AssetAudioParameter.Type type
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x10CBF7C", Offset = "0x10CBF7C", VA = "0x10CBF7C")]
			get
			{
				return default(AssetAudioParameter.Type);
			}
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x10CCE54", Offset = "0x10CCE54", VA = "0x10CCE54")]
		public AudioParameterValue(AssetAudioParameter parameter, float val)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x10CCE90", Offset = "0x10CCE90", VA = "0x10CCE90")]
		public AudioParameterValue(AssetAudioParameter parameter, int val)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x10CCD9C", Offset = "0x10CCD9C", VA = "0x10CCD9C")]
		internal string GetValue()
		{
			return null;
		}
	}
	[Token(Token = "0x20002D5")]
	public class AudioHandler : MonoBehaviour
	{
		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioHandler instance;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debug;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FMODAudioVisualizer visualizePrefab;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BooleanValueData visualizeAudioSetting;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x10CB180", Offset = "0x10CB180", VA = "0x10CB180")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x10CB1D8", Offset = "0x10CB1D8", VA = "0x10CB1D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x10CB1DC", Offset = "0x10CB1DC", VA = "0x10CB1DC")]
		private void OVRManager_AudioOutChanged()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x10CB3D4", Offset = "0x10CB3D4", VA = "0x10CB3D4")]
		private bool IsOculusSDK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x10CB428", Offset = "0x10CB428", VA = "0x10CB428")]
		public void StopBus(string guid)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x10CB4D8", Offset = "0x10CB4D8", VA = "0x10CB4D8")]
		public void SetGlobalParameter(AssetAudioParameter parameter, float val)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x10CB574", Offset = "0x10CB574", VA = "0x10CB574")]
		public void SetGlobalParameter(AssetAudioParameter parameter, int val)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x10CB610", Offset = "0x10CB610", VA = "0x10CB610")]
		public void PlayOneShot(Guid guid, Vector3 point, [Optional] List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x10CC5F4", Offset = "0x10CC5F4", VA = "0x10CC5F4")]
		internal StudioEventEmitter Play(Guid guid, Transform emitter, List<AudioParameterValue> parameters)
		{
			return null;
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x10CBC8C", Offset = "0x10CBC8C", VA = "0x10CBC8C")]
		private object Print(List<AudioParameterValue> parameters)
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x10CCE44", Offset = "0x10CCE44", VA = "0x10CCE44")]
		public AudioHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public class FMODAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x10CDEF8", Offset = "0x10CDEF8", VA = "0x10CDEF8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29E08", Offset = "0xE29E08")]
		[AttributeAttribute(Name = "HideIfAttribute", RVA = "0xE29E08", Offset = "0xE29E08")]
		private void CreateNewEvent(string name, string guid)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x10CDEFC", Offset = "0x10CDEFC", VA = "0x10CDEFC")]
		private bool HasEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x10CDF6C", Offset = "0x10CDF6C", VA = "0x10CDF6C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x10CE0C8", Offset = "0x10CE0C8", VA = "0x10CE0C8")]
		public FMODAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class FMODAudioHealthEvent : FMODAudioEvent
	{
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter healthParameter;

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x10CE408", Offset = "0x10CE408", VA = "0x10CE408", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x10CE4FC", Offset = "0x10CE4FC", VA = "0x10CE4FC")]
		public FMODAudioHealthEvent()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class DistanceBasedDelayedEvent : GenericEvent, IAction
	{
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EEC8", Offset = "0xE1EEC8")]
		private sealed class <DoDelayEvent>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform emitter;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DistanceBasedDelayedEvent <>4__this;

			[Token(Token = "0x17000132")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001120")]
				[Address(RVA = "0x10CD9B0", Offset = "0x10CD9B0", VA = "0x10CD9B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000133")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001122")]
				[Address(RVA = "0x10CDA18", Offset = "0x10CDA18", VA = "0x10CDA18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x10CD7A8", Offset = "0x10CD7A8", VA = "0x10CD7A8")]
			[DebuggerHidden]
			public <DoDelayEvent>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600111E")]
			[Address(RVA = "0x10CD850", Offset = "0x10CD850", VA = "0x10CD850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x10CD854", Offset = "0x10CD854", VA = "0x10CD854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x10CD9B8", Offset = "0x10CD9B8", VA = "0x10CD9B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<IAction> events;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayPerMeter;

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x10CD6D8", Offset = "0x10CD6D8", VA = "0x10CD6D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x10CD72C", Offset = "0x10CD72C", VA = "0x10CD72C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29E6C", Offset = "0xE29E6C")]
		private IEnumerator DoDelayEvent(Transform emitter)
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x10CD7D4", Offset = "0x10CD7D4", VA = "0x10CD7D4")]
		public DistanceBasedDelayedEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D9")]
	public class FMODParameterPropertyAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x10D06E0", Offset = "0x10D06E0", VA = "0x10D06E0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x10D0918", Offset = "0x10D0918", VA = "0x10D0918")]
		public FMODParameterPropertyAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class SetEndOfLevelIntensity : GenericFloatEvent
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x10D2B08", Offset = "0x10D2B08", VA = "0x10D2B08", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x10D2B70", Offset = "0x10D2B70", VA = "0x10D2B70")]
		public SetEndOfLevelIntensity()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class SetInitialEndOfLevelIntensity : GenericEvent
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x10D2B78", Offset = "0x10D2B78", VA = "0x10D2B78", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x10D2BD4", Offset = "0x10D2BD4", VA = "0x10D2BD4")]
		public SetInitialEndOfLevelIntensity()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class SetPauseIntensity : GenericFloatEvent
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x10D2C40", Offset = "0x10D2C40", VA = "0x10D2C40", Slot = "4")]
		public override void Execute(Transform emitter, float value)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x10D2CA8", Offset = "0x10D2CA8", VA = "0x10D2CA8")]
		public SetPauseIntensity()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class SetInitialPauseIntensity : GenericEvent
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x10D2BDC", Offset = "0x10D2BDC", VA = "0x10D2BDC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x10D2C38", Offset = "0x10D2C38", VA = "0x10D2C38")]
		public SetInitialPauseIntensity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public class FMODAudioEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent eventEnabled;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent eventDisabled;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x10CE138", Offset = "0x10CE138", VA = "0x10CE138", Slot = "4")]
		public override void Execute(Transform emitter, bool enabled)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x10CE2B0", Offset = "0x10CE2B0", VA = "0x10CE2B0")]
		public FMODAudioEventBoolean()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class FMODContinuousAudioEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent continousEvent;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StudioEventEmitter audioEmitter;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x10CED94", Offset = "0x10CED94", VA = "0x10CED94", Slot = "4")]
		public override void Execute(Transform emitter, bool enabled)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x10CEF14", Offset = "0x10CEF14", VA = "0x10CEF14")]
		public FMODContinuousAudioEventBoolean()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class FMODSetParameterFloat : GenericFloatEvent
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x10D0C28", Offset = "0x10D0C28", VA = "0x10D0C28", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x10D0DA0", Offset = "0x10D0DA0", VA = "0x10D0DA0")]
		public FMODSetParameterFloat()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class FMODSetGlobalParameterFloat : GenericFloatEvent
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x10D0BB0", Offset = "0x10D0BB0", VA = "0x10D0BB0", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x10D0C20", Offset = "0x10D0C20", VA = "0x10D0C20")]
		public FMODSetGlobalParameterFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class FMODContinuousAudioEventFloat : GenericFloatEvent
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool stopIfValueIsZero;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x10CEF1C", Offset = "0x10CEF1C", VA = "0x10CEF1C", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x10CF2A4", Offset = "0x10CF2A4", VA = "0x10CF2A4")]
		public FMODContinuousAudioEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class FMODAudioEventFloat : GenericFloatEvent
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter floatParameter;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x10CE2B8", Offset = "0x10CE2B8", VA = "0x10CE2B8", Slot = "4")]
		public override void Execute(Transform emitter, float progress)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x10CE400", Offset = "0x10CE400", VA = "0x10CE400")]
		public FMODAudioEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class FMODStartEventEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x10D15C8", Offset = "0x10D15C8", VA = "0x10D15C8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x10D1670", Offset = "0x10D1670", VA = "0x10D1670")]
		public FMODStartEventEmitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class FMODStopEventEmitter : GenericEvent, IAction
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x10D172C", Offset = "0x10D172C", VA = "0x10D172C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x10D17C0", Offset = "0x10D17C0", VA = "0x10D17C0")]
		public FMODStopEventEmitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class FMODSetEventEmitterParameter : GenericEvent, IAction
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float value;

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x10D0A90", Offset = "0x10D0A90", VA = "0x10D0A90", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x10D0BA8", Offset = "0x10D0BA8", VA = "0x10D0BA8")]
		public FMODSetEventEmitterParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class FMODTransformProgressAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EED8", Offset = "0xE1EED8")]
		private sealed class <DoAdjustProgress>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StudioEventEmitter eventScript;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FMODTransformProgressAudioEvent <>4__this;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x17000134")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0x10D1AFC", Offset = "0x10D1AFC", VA = "0x10D1AFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000135")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001128")]
				[Address(RVA = "0x10D1B64", Offset = "0x10D1B64", VA = "0x10D1B64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x10D1844", Offset = "0x10D1844", VA = "0x10D1844")]
			[DebuggerHidden]
			public <DoAdjustProgress>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001124")]
			[Address(RVA = "0x10D1A18", Offset = "0x10D1A18", VA = "0x10D1A18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0x10D1A1C", Offset = "0x10D1A1C", VA = "0x10D1A1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0x10D1B04", Offset = "0x10D1B04", VA = "0x10D1B04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonoBehaviour eventEmitter;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x10D17C8", Offset = "0x10D17C8", VA = "0x10D17C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE29ED0", Offset = "0xE29ED0")]
		private IEnumerator DoAdjustProgress(StudioEventEmitter eventScript)
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x10D1870", Offset = "0x10D1870", VA = "0x10D1870", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x10D1A08", Offset = "0x10D1A08", VA = "0x10D1A08")]
		public FMODTransformProgressAudioEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class FMODTransformProgressFloatAudioEvent : ContinuousFloatEvent
	{
		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter progressParameter;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter eventScript;

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x10D1B6C", Offset = "0x10D1B6C", VA = "0x10D1B6C", Slot = "4")]
		public override void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x10D1E34", Offset = "0x10D1E34", VA = "0x10D1E34", Slot = "5")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x10D1EC8", Offset = "0x10D1EC8", VA = "0x10D1EC8")]
		public FMODTransformProgressFloatAudioEvent()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x10D1ED0", Offset = "0x10D1ED0", VA = "0x10D1ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F34", Offset = "0xE29F34")]
		private bool <Execute>b__4_0(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class FMODAudioImpactEvent : GenericImpactEvent
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x10CE500", Offset = "0x10CE500", VA = "0x10CE500", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody value, Vector3 point, float impactSpeed)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x10CE72C", Offset = "0x10CE72C", VA = "0x10CE72C")]
		public FMODAudioImpactEvent()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x10CE734", Offset = "0x10CE734", VA = "0x10CE734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F44", Offset = "0xE29F44")]
		private bool <Execute>b__3_0(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class FMODAudioCollisionEvent : GenericCollisionEvent
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioParameter weightParameter;

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x10CDA2C", Offset = "0x10CDA2C", VA = "0x10CDA2C", Slot = "4")]
		public override void Execute(Transform emitter, Collision collision)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x10CDDE0", Offset = "0x10CDDE0", VA = "0x10CDDE0")]
		public FMODAudioCollisionEvent()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x10CDDE8", Offset = "0x10CDDE8", VA = "0x10CDDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F54", Offset = "0xE29F54")]
		private bool <Execute>b__4_0(AudioParameterValue p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x10CDE70", Offset = "0x10CDE70", VA = "0x10CDE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29F64", Offset = "0xE29F64")]
		private bool <Execute>b__4_1(AudioParameterValue p)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class FMODDynamicMaterialAudioEvent : GenericImpactEvent
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetAudioMaterial material;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioMaterial concrete;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetAudioMaterial metal;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetAudioMaterial enemy;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speedValue;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool useSizeParameter;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE26594", Offset = "0xE26594")]
		public AssetAudioParameter sizeParameter;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE265D0", Offset = "0xE265D0")]
		public FMODDynamicObject.Size size;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x10CF5F8", Offset = "0x10CF5F8", VA = "0x10CF5F8", Slot = "4")]
		public override void Execute(Transform emitter, Rigidbody rigidbody, Vector3 point, float speed)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x10CF8B8", Offset = "0x10CF8B8", VA = "0x10CF8B8")]
		public FMODDynamicMaterialAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class FMODAudioVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioEventEmitter eventEmitter;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text label;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject canvas;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public bool willBeDestroyed;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool hasEmitter;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float occlusion;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string eventName;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<AudioParameterValue> parameters;

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x10CC00C", Offset = "0x10CC00C", VA = "0x10CC00C")]
		internal void SetUp(EventInstance instance, string path, Vector3 point, float occlusion, List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x10CC980", Offset = "0x10CC980", VA = "0x10CC980")]
		internal void SetUp(StudioEventEmitter emitterScript, string audioEvent, Transform emitter, float occlusion, List<AudioParameterValue> parameters)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x10CE7BC", Offset = "0x10CE7BC", VA = "0x10CE7BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x10CED8C", Offset = "0x10CED8C", VA = "0x10CED8C")]
		public FMODAudioVisualizer()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class FMODContinuousParameterHandler : MonoBehaviour
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal StudioEventEmitter eventEmitter;

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x10CF2AC", Offset = "0x10CF2AC", VA = "0x10CF2AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x10CF33C", Offset = "0x10CF33C", VA = "0x10CF33C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x10CF3E0", Offset = "0x10CF3E0", VA = "0x10CF3E0")]
		public FMODContinuousParameterHandler()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class FMODContinuousSpeedBasedEvent : MonoBehaviour
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent soundEvent;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedPercentage;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter fmodEmitter;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x10CF3E8", Offset = "0x10CF3E8", VA = "0x10CF3E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x10CF538", Offset = "0x10CF538", VA = "0x10CF538")]
		public void UpdateSpeed(float val)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x10CF5E8", Offset = "0x10CF5E8", VA = "0x10CF5E8")]
		public FMODContinuousSpeedBasedEvent()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class FMODDynamicObject : MonoBehaviour
	{
		[Token(Token = "0x2000440")]
		public enum Size
		{
			[Token(Token = "0x40010DA")]
			Small,
			[Token(Token = "0x40010DB")]
			Medium,
			[Token(Token = "0x40010DC")]
			Large
		}

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioMaterial material;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useSizeParameter;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE2661C", Offset = "0xE2661C")]
		public AssetAudioParameter sizeParameter;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0xE26658", Offset = "0xE26658")]
		public Size size;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool useScrapeSound;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetAudioParameter speedParameter;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minAudioInterval;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[ReadOnly]
		public bool isPlaying;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4000C1D")]
		private const float scrapeMinTime = 0.1f;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float scrapeTimer;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StudioEventEmitter fmodEmitter;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool testScrape;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Collider> collidersInContact;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastCollision;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x10CF8C0", Offset = "0x10CF8C0", VA = "0x10CF8C0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x10CF918", Offset = "0x10CF918", VA = "0x10CF918")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x10CF9A8", Offset = "0x10CF9A8", VA = "0x10CF9A8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29F74", Offset = "0xE29F74")]
		public void TestScrape()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x10CF9C0", Offset = "0x10CF9C0", VA = "0x10CF9C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x10CFBCC", Offset = "0x10CFBCC", VA = "0x10CFBCC")]
		private void Disable()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x10CFC70", Offset = "0x10CFC70", VA = "0x10CFC70")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x10CFD44", Offset = "0x10CFD44", VA = "0x10CFD44")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x10D0138", Offset = "0x10D0138", VA = "0x10D0138")]
		public FMODDynamicObject()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class FMODEnvironmentAudio : MonoBehaviour
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetFMODEvent audioEvent;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float panOverrideDistance;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera mainCam;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPlaying;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventInstance eventInstance;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x10D0334", Offset = "0x10D0334", VA = "0x10D0334")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x10D0580", Offset = "0x10D0580", VA = "0x10D0580")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x10D06C8", Offset = "0x10D06C8", VA = "0x10D06C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x10D05C4", Offset = "0x10D05C4", VA = "0x10D05C4")]
		private void Play()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x10D06CC", Offset = "0x10D06CC", VA = "0x10D06CC")]
		public FMODEnvironmentAudio()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class FMODStartContinuousAudioEvent : FMODAudioEvent
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x10D14D4", Offset = "0x10D14D4", VA = "0x10D14D4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x10D15C4", Offset = "0x10D15C4", VA = "0x10D15C4")]
		public FMODStartContinuousAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class FMODStopContinuousAudioEvent : GenericEvent, IAction
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x10D1678", Offset = "0x10D1678", VA = "0x10D1678", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x10D1724", Offset = "0x10D1724", VA = "0x10D1724")]
		public FMODStopContinuousAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class FMODWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x10D1F58", Offset = "0x10D1F58", VA = "0x10D1F58", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x10D20C0", Offset = "0x10D20C0", VA = "0x10D20C0")]
		public FMODWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class FMODEmptyWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x10D01C4", Offset = "0x10D01C4", VA = "0x10D01C4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x10D032C", Offset = "0x10D032C", VA = "0x10D032C")]
		public FMODEmptyWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class FMODReloadWeaponAudioEvent : GenericEvent
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon weapon;

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x10D0920", Offset = "0x10D0920", VA = "0x10D0920", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x10D0A88", Offset = "0x10D0A88", VA = "0x10D0A88")]
		public FMODReloadWeaponAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E62C", Offset = "0xE1E62C")]
	public class AssetFMODCollisionMatrix : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000441")]
		public class MatrixElement
		{
			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideLabel]
			public string descriptiveName;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideLabel]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0xE2759C", Offset = "0xE2759C")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE2759C", Offset = "0xE2759C")]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE2759C", Offset = "0xE2759C")]
			public AssetAudioMaterial emitter;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideLabel]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0xE27638", Offset = "0xE27638")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE27638", Offset = "0xE27638")]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE27638", Offset = "0xE27638")]
			public AssetAudioMaterial receiver;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE276D4", Offset = "0xE276D4")]
			[AttributeAttribute(Name = "TitleAttribute", RVA = "0xE276D4", Offset = "0xE276D4")]
			[HideLabel]
			[AttributeAttribute(Name = "LabelWidthAttribute", RVA = "0xE276D4", Offset = "0xE276D4")]
			public AssetFMODEvent audioEvent;

			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE27770", Offset = "0xE27770")]
			public List<AssetAudioParameter> audioParameters;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "FoldoutGroupAttribute", RVA = "0xE277AC", Offset = "0xE277AC")]
			public List<AudioParameterValue> parameterValues;

			[Token(Token = "0x6001129")]
			[Address(RVA = "0x10CB0E8", Offset = "0x10CB0E8", VA = "0x10CB0E8")]
			public MatrixElement()
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EEE8", Offset = "0xE1EEE8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetAudioMaterial a;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetAudioMaterial b;

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x10CAD50", Offset = "0x10CAD50", VA = "0x10CAD50")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0x10CAE28", Offset = "0x10CAE28", VA = "0x10CAE28")]
			internal bool <GetEventForCollision>b__0(MatrixElement c)
			{
				return default(bool);
			}

			[Token(Token = "0x600112C")]
			[Address(RVA = "0x10CAF04", Offset = "0x10CAF04", VA = "0x10CAF04")]
			internal bool <GetEventForCollision>b__1(MatrixElement c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EEF8", Offset = "0xE1EEF8")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetAudioParameter audioParameter;

			[Token(Token = "0x600112D")]
			[Address(RVA = "0x10CAD58", Offset = "0x10CAD58", VA = "0x10CAD58")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0x10CAFD0", Offset = "0x10CAFD0", VA = "0x10CAFD0")]
			internal bool <GetEventForCollision>b__2(AudioParameterValue p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF08", Offset = "0xE1EF08")]
		private sealed class <>c__DisplayClass2_2
		{
			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioParameterValue parameterValue;

			[Token(Token = "0x600112F")]
			[Address(RVA = "0x10CAD60", Offset = "0x10CAD60", VA = "0x10CAD60")]
			public <>c__DisplayClass2_2()
			{
			}

			[Token(Token = "0x6001130")]
			[Address(RVA = "0x10CB058", Offset = "0x10CB058", VA = "0x10CB058")]
			internal bool <GetEventForCollision>b__3(AudioParameterValue p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MatrixElement> combinations;

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x10CA7C0", Offset = "0x10CA7C0", VA = "0x10CA7C0")]
		public CollisionInfo GetEventForCollision(AssetAudioMaterial a, AssetAudioMaterial b, List<AudioParameterValue> audioParameterValues)
		{
			return null;
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x10CADB8", Offset = "0x10CADB8", VA = "0x10CADB8")]
		public AssetFMODCollisionMatrix()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class AudioParameterProperty : MonoBehaviour
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetAudioParameter parameter;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int value;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x10CCE4C", Offset = "0x10CCE4C", VA = "0x10CCE4C")]
		public AudioParameterProperty()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class ClosingAudioBehindPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE266A4", Offset = "0xE266A4")]
		public Transform targetRoot;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE266DC", Offset = "0xE266DC")]
		public Transform target;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startDistance;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endDistance;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve lerpCurve;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float approachDuration;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float currentYAngle;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentYVelocity;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetYAngle;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float percentage;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 currentVelocity;

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x10CCECC", Offset = "0x10CCECC", VA = "0x10CCECC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x10CD108", Offset = "0x10CD108", VA = "0x10CD108")]
		private float GetTargetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x10CCF34", Offset = "0x10CCF34", VA = "0x10CCF34")]
		private void UpdateTargetY()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x10CD210", Offset = "0x10CD210", VA = "0x10CD210")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x10CD374", Offset = "0x10CD374", VA = "0x10CD374")]
		private void UpdateYAngle()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x10CCF88", Offset = "0x10CCF88", VA = "0x10CCF88")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x10CD424", Offset = "0x10CD424", VA = "0x10CD424")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x10CD580", Offset = "0x10CD580", VA = "0x10CD580")]
		public ClosingAudioBehindPlayer()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class CollisionInfo
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid eventName;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioParameterValue> parameters;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x10CAD68", Offset = "0x10CAD68", VA = "0x10CAD68")]
		public CollisionInfo(AssetFMODEvent eventName, List<AudioParameterValue> parameters)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class FMODAlertLevel : MonoBehaviour
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioGlobalParameterTrigger alertLevel;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x10CDA20", Offset = "0x10CDA20", VA = "0x10CDA20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x10CDA24", Offset = "0x10CDA24", VA = "0x10CDA24")]
		public FMODAlertLevel()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xE1E680", Offset = "0xE1E680")]
	public class FMODSettings : MonoBehaviour
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FMODSettings instance;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StudioGlobalParameterTrigger roomWidth;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StudioGlobalParameterTrigger roomHeight;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StudioGlobalParameterTrigger roomLength;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StudioGlobalParameterTrigger levelTime;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StudioGlobalParameterTrigger overseerApproach;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StudioGlobalParameterTrigger alertLevel;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public StudioGlobalParameterTrigger endOfLevelIntensity;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public StudioGlobalParameterTrigger pauseIntensity;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StudioEventEmitter transitionEventEmitter;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AssetFMODCollisionMatrix fMODCollisionMatrix;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntegerValueData alarmStat;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float overseerApproachDelay;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve roomSizeToParameterValue;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[ReadOnly]
		public float levelTimeValue;

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x10D0DA8", Offset = "0x10D0DA8", VA = "0x10D0DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x10D0DFC", Offset = "0x10D0DFC", VA = "0x10D0DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x10D0E50", Offset = "0x10D0E50", VA = "0x10D0E50")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29F84", Offset = "0xE29F84")]
		public void UpdateRoomSize(Vector3 roomSize)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x10D0F58", Offset = "0x10D0F58", VA = "0x10D0F58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x10D0F7C", Offset = "0x10D0F7C", VA = "0x10D0F7C")]
		private void UpdateLevelTime()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x10D0FD0", Offset = "0x10D0FD0", VA = "0x10D0FD0")]
		private void UpdateAlertLevel()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x10D1160", Offset = "0x10D1160", VA = "0x10D1160")]
		public void SetEndOfLevelIntensity(float val)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x10D12B0", Offset = "0x10D12B0", VA = "0x10D12B0")]
		public void SetPauseIntensity(float val)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x10D12E8", Offset = "0x10D12E8", VA = "0x10D12E8")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0xE29FBC", Offset = "0xE29FBC")]
		private void SetRandomRoomSize()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x10D14C4", Offset = "0x10D14C4", VA = "0x10D14C4")]
		public FMODSettings()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class UpdateReverbOnMovement : MonoBehaviour
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OcclusionCamera occlusionCamera;

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x10D2CB0", Offset = "0x10D2CB0", VA = "0x10D2CB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x10D2DBC", Offset = "0x10D2DBC", VA = "0x10D2DBC")]
		private void OcclusionCamera_OnGridPositionChanged(Vector3Int gridPos)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x10D2F14", Offset = "0x10D2F14", VA = "0x10D2F14")]
		public UpdateReverbOnMovement()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E694", Offset = "0xE1E694")]
	public class OnUseEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UsableItem Item;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26724", Offset = "0xE26724")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26724", Offset = "0xE26724")]
		[InlineProperty]
		public List<IAction> Actions;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26794", Offset = "0xE26794")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26794", Offset = "0xE26794")]
		[InlineProperty]
		public List<IUnitAction> UnitActions;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26804", Offset = "0xE26804")]
		[AttributeAttribute(Name = "LabelTextAttribute", RVA = "0xE26804", Offset = "0xE26804")]
		[InlineProperty]
		public List<ISideAction> SideActions;

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x10D2764", Offset = "0x10D2764", VA = "0x10D2764", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x10D2804", Offset = "0x10D2804", VA = "0x10D2804")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x10D2894", Offset = "0x10D2894", VA = "0x10D2894")]
		private void OnUseItem(GEUnit unit)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x10D2A48", Offset = "0x10D2A48", VA = "0x10D2A48")]
		public OnUseEvent()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class OcclusionHandler : MonoBehaviour
	{
		[Token(Token = "0x2000445")]
		private class OcclusionInfluence
		{
			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float influence;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float occlusion;

			[Token(Token = "0x6001131")]
			[Address(RVA = "0x10D272C", Offset = "0x10D272C", VA = "0x10D272C")]
			public OcclusionInfluence(float influence, float occlusion)
			{
			}
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF18", Offset = "0xE1EF18")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3Int pos;

			[Token(Token = "0x6001132")]
			[Address(RVA = "0x10D25E4", Offset = "0x10D25E4", VA = "0x10D25E4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001133")]
			[Address(RVA = "0x10D25EC", Offset = "0x10D25EC", VA = "0x10D25EC")]
			internal bool <GetOcclusionAtPoint>b__0(OcclusionPoint p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001134")]
			[Address(RVA = "0x10D268C", Offset = "0x10D268C", VA = "0x10D268C")]
			internal bool <GetOcclusionAtPoint>b__1(OcclusionPoint p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask occlusionMask;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxRaycastDistance;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26874", Offset = "0xE26874")]
		public bool debug;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numVisualizedRaycasts;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OcclusionHandler _instance;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioListener mainListener;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Tuple<Vector3, Vector3>> lastRaycasts;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool started;

		[Token(Token = "0x170000A2")]
		public static OcclusionHandler Instance
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x10CBB94", Offset = "0x10CBB94", VA = "0x10CBB94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x10D2160", Offset = "0x10D2160", VA = "0x10D2160")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x10D224C", Offset = "0x10D224C", VA = "0x10D224C")]
		private void Instance_OnGenerateFinished()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x10D20C8", Offset = "0x10D20C8", VA = "0x10D20C8")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x10CBC84", Offset = "0x10CBC84", VA = "0x10CBC84")]
		public float GetOcclusionAtPoint(Vector3 source)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x10D2250", Offset = "0x10D2250", VA = "0x10D2250")]
		private Vector3Int GetIndexGridPosition(Vector3 pos, int i)
		{
			return default(Vector3Int);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x10D2460", Offset = "0x10D2460", VA = "0x10D2460")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x10D2564", Offset = "0x10D2564", VA = "0x10D2564")]
		public OcclusionHandler()
		{
		}
	}
}
namespace Peacemaker.Menu
{
	[Token(Token = "0x20002FF")]
	public class MenuEffect : MonoBehaviour
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MenuEffect Instance;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x2306104", Offset = "0x2306104", VA = "0x2306104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x2306158", Offset = "0x2306158", VA = "0x2306158")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x23061F4", Offset = "0x23061F4", VA = "0x23061F4")]
		public MenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public class OpenMenu : GenericEvent, IAction
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IgnoreLock;

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x23061FC", Offset = "0x23061FC", VA = "0x23061FC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x2306264", Offset = "0x2306264", VA = "0x2306264")]
		public OpenMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000301")]
	public class CloseMenu : IAction
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x2305FC8", Offset = "0x2305FC8", VA = "0x2305FC8", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x2306024", Offset = "0x2306024", VA = "0x2306024")]
		public CloseMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000302")]
	public class ShowMenuEffect : GenericEvent, IAction
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x23062D8", Offset = "0x23062D8", VA = "0x23062D8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x2306344", Offset = "0x2306344", VA = "0x2306344")]
		public ShowMenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000303")]
	public class HideMenuEffect : IAction
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x230602C", Offset = "0x230602C", VA = "0x230602C", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x2306098", Offset = "0x2306098", VA = "0x2306098")]
		public HideMenuEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public class SelectMenu : GenericEvent, IAction
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuData Menu;

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x230626C", Offset = "0x230626C", VA = "0x230626C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x23062D0", Offset = "0x23062D0", VA = "0x23062D0")]
		public SelectMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000305")]
	public class ToggleMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x230634C", Offset = "0x230634C", VA = "0x230634C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x23063A8", Offset = "0x23063A8", VA = "0x23063A8")]
		public ToggleMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	public class LockMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x23060A0", Offset = "0x23060A0", VA = "0x23060A0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x23060FC", Offset = "0x23060FC", VA = "0x23060FC")]
		public LockMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	public class UnLockMenu : GenericEvent, IAction
	{
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x23063B0", Offset = "0x23063B0", VA = "0x23063B0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x230640C", Offset = "0x230640C", VA = "0x230640C")]
		public UnLockMenu()
		{
		}
	}
}
namespace Peacemaker.AI
{
	[Token(Token = "0x2000308")]
	public class RobotAttackBehaviour : AIBehaviour
	{
		[Token(Token = "0x2000447")]
		public enum State
		{
			[Token(Token = "0x40010EB")]
			Attack,
			[Token(Token = "0x40010EC")]
			Reposition
		}

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE268AC", Offset = "0xE268AC")]
		public int numShotsBeforeMoving;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float repositionDistance;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float repositionDuration;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float repositionSpeedPercentage;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[ReadOnly]
		public int numShots;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[ReadOnly]
		public State currentState;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 repositionTarget;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool lookInDirectionOfShot;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float respositionTimer;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BaseAttack baseAttack;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26904", Offset = "0xE26904")]
		private float <lastAttack>k__BackingField;

		[Token(Token = "0x170000A3")]
		public float lastAttack
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x125A09C", Offset = "0x125A09C", VA = "0x125A09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29FF4", Offset = "0xE29FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x125A0A4", Offset = "0x125A0A4", VA = "0x125A0A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A004", Offset = "0xE2A004")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1259700", Offset = "0x1259700", VA = "0x1259700", Slot = "21")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1259710", Offset = "0x1259710", VA = "0x1259710")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1259760", Offset = "0x1259760", VA = "0x1259760")]
		private Vector3 GetTargetLookDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x12598C0", Offset = "0x12598C0", VA = "0x12598C0", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1259C5C", Offset = "0x1259C5C", VA = "0x1259C5C")]
		private void SetRepositionState(UnitTag firstTarget)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1259FD0", Offset = "0x1259FD0", VA = "0x1259FD0", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x125A0AC", Offset = "0x125A0AC", VA = "0x125A0AC", Slot = "29")]
		public override void DrawProperties(Rect currentRect, GUIStyle style)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x125A0B4", Offset = "0x125A0B4", VA = "0x125A0B4", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x125A13C", Offset = "0x125A13C", VA = "0x125A13C")]
		public RobotAttackBehaviour()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ChargeBehaviour : AIBehaviour
	{
		[Token(Token = "0x2000448")]
		public enum State
		{
			[Token(Token = "0x40010EE")]
			Charging,
			[Token(Token = "0x40010EF")]
			Cooldown,
			[Token(Token = "0x40010F0")]
			Preparing
		}

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float acceptedAngle;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float chargeDistance;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float chargeDuration;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float chargeCooldown;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float lastStateChange;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[ReadOnly]
		public State currentState;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[ReadOnly]
		public float currentAngle;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 originalPosition;

		[Token(Token = "0x1400002E")]
		public event Action<bool> OnCharge
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x1255B84", Offset = "0x1255B84", VA = "0x1255B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A014", Offset = "0xE2A014")]
			add
			{
			}
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1255C28", Offset = "0x1255C28", VA = "0x1255C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A024", Offset = "0xE2A024")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1255CCC", Offset = "0x1255CCC", VA = "0x1255CCC", Slot = "21")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1255CD4", Offset = "0x1255CD4", VA = "0x1255CD4", Slot = "22")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1255D1C", Offset = "0x1255D1C", VA = "0x1255D1C", Slot = "29")]
		public override void DrawProperties(Rect currentRect, GUIStyle style)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1255D24", Offset = "0x1255D24", VA = "0x1255D24", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x12561DC", Offset = "0x12561DC", VA = "0x12561DC", Slot = "27")]
		public override void StartExecution()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x125624C", Offset = "0x125624C", VA = "0x125624C", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x12562BC", Offset = "0x12562BC", VA = "0x12562BC", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1256304", Offset = "0x1256304", VA = "0x1256304")]
		internal void Stop()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1256344", Offset = "0x1256344", VA = "0x1256344")]
		public ChargeBehaviour()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class DistanceBasedViewDetection : BaseDetectUnits
	{
		[Serializable]
		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF28", Offset = "0xE1EF28")]
		private sealed class <>c
		{
			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__5_0;

			[Token(Token = "0x6001136")]
			[Address(RVA = "0x12571C4", Offset = "0x12571C4", VA = "0x12571C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x12571CC", Offset = "0x12571CC", VA = "0x12571CC")]
			internal bool <UpdateSight>b__5_0(GEUnit v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int updateInterval;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int counter;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AIBehaviourManager manager;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GEUnit myUnit;

		[Token(Token = "0x1400002F")]
		public event Action<List<GEUnit>> OnUnitsUpdated
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x1256F34", Offset = "0x1256F34", VA = "0x1256F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A034", Offset = "0xE2A034")]
			add
			{
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x1256FD8", Offset = "0x1256FD8", VA = "0x1256FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A044", Offset = "0xE2A044")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1256A24", Offset = "0x1256A24", VA = "0x1256A24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1256A54", Offset = "0x1256A54", VA = "0x1256A54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1256A94", Offset = "0x1256A94", VA = "0x1256A94")]
		private void UpdateSight()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1256F30", Offset = "0x1256F30", VA = "0x1256F30", Slot = "6")]
		public override void InformAboutUnit(GEUnit unit)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x125707C", Offset = "0x125707C", VA = "0x125707C", Slot = "4")]
		public override void RegisterCallback(Action<List<GEUnit>> callback)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1257080", Offset = "0x1257080", VA = "0x1257080", Slot = "7")]
		public override void SetManager(AIBehaviourManager manager)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1257148", Offset = "0x1257148", VA = "0x1257148", Slot = "5")]
		public override void UnregisterCallback(Action<List<GEUnit>> callback)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x125714C", Offset = "0x125714C", VA = "0x125714C")]
		public DistanceBasedViewDetection()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class InteractWithTerminalBehaviour : AIBehaviour
	{
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[ReadOnly]
		public InteractiveTerminalPoint terminalPoint;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public IKWeaponAim weaponAim;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool hasTriggered;

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x12584EC", Offset = "0x12584EC", VA = "0x12584EC", Slot = "27")]
		public override void StartExecution()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1258830", Offset = "0x1258830", VA = "0x1258830", Slot = "25")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x125893C", Offset = "0x125893C", VA = "0x125893C", Slot = "28")]
		public override void EndExecution()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1258A08", Offset = "0x1258A08", VA = "0x1258A08", Slot = "26")]
		public override string GetInfo()
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1258A50", Offset = "0x1258A50", VA = "0x1258A50")]
		public InteractWithTerminalBehaviour()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class InteractiveTerminalPoint : MonoBehaviour
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicalButton physicalButton;

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1258A58", Offset = "0x1258A58", VA = "0x1258A58")]
		public InteractiveTerminalPoint()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class PropDamageOnContact : DamageOnContact
	{
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public DamageData damageData;

		[Token(Token = "0x170000A4")]
		protected override float CurrentDamage
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x1259510", Offset = "0x1259510", VA = "0x1259510", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x12595D4", Offset = "0x12595D4", VA = "0x12595D4")]
		public PropDamageOnContact()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class SimpleAttack : MonoBehaviour, IAttack
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit unit;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon weapon;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Collider> unitColliders;

		[Token(Token = "0x170000A5")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x125A3CC", Offset = "0x125A3CC", VA = "0x125A3CC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x125A35C", Offset = "0x125A35C", VA = "0x125A35C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x125A3D4", Offset = "0x125A3D4", VA = "0x125A3D4", Slot = "6")]
		public bool Attack(UnitTag unitTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x125A434", Offset = "0x125A434", VA = "0x125A434", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x125A494", Offset = "0x125A494", VA = "0x125A494", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x125A49C", Offset = "0x125A49C", VA = "0x125A49C", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x125A4BC", Offset = "0x125A4BC", VA = "0x125A4BC", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x125A4C4", Offset = "0x125A4C4", VA = "0x125A4C4", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x125A4C8", Offset = "0x125A4C8", VA = "0x125A4C8", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x125A4D0", Offset = "0x125A4D0", VA = "0x125A4D0")]
		public SimpleAttack()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class SpawnEnemiesAttack : MonoBehaviour, IAttack
	{
		[Serializable]
		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF38", Offset = "0xE1EF38")]
		private sealed class <>c
		{
			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GEUnit> <>9__10_0;

			[Token(Token = "0x6001139")]
			[Address(RVA = "0x125AA04", Offset = "0x125AA04", VA = "0x125AA04")]
			public <>c()
			{
			}

			[Token(Token = "0x600113A")]
			[Address(RVA = "0x125AA0C", Offset = "0x125AA0C", VA = "0x125AA0C")]
			internal bool <Update>b__10_0(GEUnit u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit spawnedUnitPrefab;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform spawnPoint;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxNumSpawn;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float spawnInterval;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public List<GEUnit> spawnedUnits;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeSinceLastSpawn;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastAttack;

		[Token(Token = "0x170000A6")]
		public bool IsAttacking
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x125A4D8", Offset = "0x125A4D8", VA = "0x125A4D8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x125A510", Offset = "0x125A510", VA = "0x125A510", Slot = "6")]
		public bool Attack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x125A6C0", Offset = "0x125A6C0", VA = "0x125A6C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x125A548", Offset = "0x125A548", VA = "0x125A548", Slot = "7")]
		public bool Attack(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x125A7F8", Offset = "0x125A7F8", VA = "0x125A7F8")]
		private GEUnit SpawnUnit(GEUnit spawnedUnit, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x125A8E0", Offset = "0x125A8E0", VA = "0x125A8E0", Slot = "5")]
		public bool CanAttack(UnitTag unit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x125A8E8", Offset = "0x125A8E8", VA = "0x125A8E8", Slot = "9")]
		public Vector3 GetAimVector(Vector3 target)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x125A904", Offset = "0x125A904", VA = "0x125A904", Slot = "11")]
		public bool HasWeapon()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x125A90C", Offset = "0x125A90C", VA = "0x125A90C", Slot = "8")]
		public void ResetAttacks()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x125A914", Offset = "0x125A914", VA = "0x125A914", Slot = "10")]
		public void SetGEUnit(GEUnit geUnit)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x125A918", Offset = "0x125A918", VA = "0x125A918")]
		public SpawnEnemiesAttack()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class TurretMovement : BaseMovement
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform turretBase;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform weaponBase;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BaseAttack baseAttack;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x125AFD8", Offset = "0x125AFD8", VA = "0x125AFD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x125B0B0", Offset = "0x125B0B0", VA = "0x125B0B0")]
		private void BaseAttack_OnAim(Vector3 targetPos, float shotAngle)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x125B268", Offset = "0x125B268", VA = "0x125B268", Slot = "26")]
		public override void SetTargetLookDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x125B2B0", Offset = "0x125B2B0", VA = "0x125B2B0", Slot = "30")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x125B434", Offset = "0x125B434", VA = "0x125B434")]
		public TurretMovement()
		{
		}
	}
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E6CC", Offset = "0xE1E6CC")]
	public class DamageData : ScriptableObject
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1256360", Offset = "0x1256360", VA = "0x1256360")]
		public DamageData()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class DroneMovement : PhysicsBasedMovement
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26974", Offset = "0xE26974")]
		public float velocityAdaptationSpeed;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float smoothDampTime;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float angularBreakSpeed;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool placeOnNavMeshPositionAtStart;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool placeNavMeshOnTargetPositionIfNoPathIsFound;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[ReadOnly]
		private Vector3 currentTargetVelocity;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Vector3 offsetFromMovementTarget;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float offsetRandomizationY;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE269E4", Offset = "0xE269E4")]
		public float verticalRange;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float changeVerticalHeightInterval;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26A1C", Offset = "0xE26A1C")]
		public float externalForceMultiplicator;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float externalForceRandomizer;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float externalAngularForce;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float maxSpeed;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float maxAngularSpeed;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float currentVerticalOffset;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float lastVerticalChange;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float timeSinceWaitingDrone;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 currentDroneMovementTarget;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 droneForwardTarget;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool initialized;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 stackedImpactForce;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float stackedImpactTimestamp;

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1257238", Offset = "0x1257238", VA = "0x1257238", Slot = "37")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1257240", Offset = "0x1257240", VA = "0x1257240")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1257354", Offset = "0x1257354", VA = "0x1257354", Slot = "30")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x12573D8", Offset = "0x12573D8", VA = "0x12573D8", Slot = "42")]
		protected override void FollowNMA()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x125770C", Offset = "0x125770C", VA = "0x125770C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1257C28", Offset = "0x1257C28", VA = "0x1257C28", Slot = "35")]
		public override void KnockOffFeet(Vector3 force)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x125836C", Offset = "0x125836C", VA = "0x125836C", Slot = "36")]
		public override void KnockOffFeet()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1258370", Offset = "0x1258370", VA = "0x1258370")]
		public DroneMovement()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class ActivateUnitEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit geUnit;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enable;

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x12556B4", Offset = "0x12556B4", VA = "0x12556B4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x12556D8", Offset = "0x12556D8", VA = "0x12556D8")]
		public ActivateUnitEvent()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class LoseHealthEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitHealth unitHealth;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damage;

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1258A60", Offset = "0x1258A60", VA = "0x1258A60", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1258A90", Offset = "0x1258A90", VA = "0x1258A90")]
		public LoseHealthEvent()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class DisableUnitInRangeForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF48", Offset = "0xE1EF48")]
		private sealed class <DoDisableUnit>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisableUnitInRangeForSeconds <>4__this;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x17000136")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0x12569B4", Offset = "0x12569B4", VA = "0x12569B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000137")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001140")]
				[Address(RVA = "0x1256A1C", Offset = "0x1256A1C", VA = "0x1256A1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0x125682C", Offset = "0x125682C", VA = "0x125682C")]
			[DebuggerHidden]
			public <DoDisableUnit>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0x1256874", Offset = "0x1256874", VA = "0x1256874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0x1256878", Offset = "0x1256878", VA = "0x1256878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0x12569BC", Offset = "0x12569BC", VA = "0x12569BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MaxUnits;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Range;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Duration;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] _hitColliders;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _numColliders;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GEUnit _unit;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _numUnits;

		[Token(Token = "0x4000CAD")]
		private const int maxColliders = 20;

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1256640", Offset = "0x1256640", VA = "0x1256640", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x12567B0", Offset = "0x12567B0", VA = "0x12567B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A054", Offset = "0xE2A054")]
		private IEnumerator DoDisableUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1256858", Offset = "0x1256858", VA = "0x1256858")]
		public DisableUnitInRangeForSeconds()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class ChangeMaterialForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF58", Offset = "0xE1EF58")]
		private sealed class <DoAddEffect>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreateWeaponForRobot script;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ChangeMaterialForSeconds <>4__this;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Renderer <mr>5__2;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Material <prevMaterial>5__3;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x17000138")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001144")]
				[Address(RVA = "0x1255B14", Offset = "0x1255B14", VA = "0x1255B14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000139")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0x1255B7C", Offset = "0x1255B7C", VA = "0x1255B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0x1255978", Offset = "0x1255978", VA = "0x1255978")]
			[DebuggerHidden]
			public <DoAddEffect>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0x12559B4", Offset = "0x12559B4", VA = "0x12559B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0x12559B8", Offset = "0x12559B8", VA = "0x12559B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0x1255B1C", Offset = "0x1255B1C", VA = "0x1255B1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x12557E4", Offset = "0x12557E4", VA = "0x12557E4", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x12558FC", Offset = "0x12558FC", VA = "0x12558FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A0B8", Offset = "0xE2A0B8")]
		private IEnumerator DoAddEffect(CreateWeaponForRobot script)
		{
			return null;
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x12559A4", Offset = "0x12559A4", VA = "0x12559A4")]
		public ChangeMaterialForSeconds()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class DisableUnitForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF68", Offset = "0xE1EF68")]
		private sealed class <DoDisableUnit>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisableUnitForSeconds <>4__this;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x1700013A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114A")]
				[Address(RVA = "0x12565D0", Offset = "0x12565D0", VA = "0x12565D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114C")]
				[Address(RVA = "0x1256638", Offset = "0x1256638", VA = "0x1256638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001147")]
			[Address(RVA = "0x1256438", Offset = "0x1256438", VA = "0x1256438")]
			[DebuggerHidden]
			public <DoDisableUnit>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001148")]
			[Address(RVA = "0x1256474", Offset = "0x1256474", VA = "0x1256474", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001149")]
			[Address(RVA = "0x1256478", Offset = "0x1256478", VA = "0x1256478", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0x12565D8", Offset = "0x12565D8", VA = "0x12565D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1256368", Offset = "0x1256368", VA = "0x1256368", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x12563BC", Offset = "0x12563BC", VA = "0x12563BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A11C", Offset = "0xE2A11C")]
		private IEnumerator DoDisableUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1256464", Offset = "0x1256464", VA = "0x1256464")]
		public DisableUnitForSeconds()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class PlaySoundEffectOnUnitForSeconds : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF78", Offset = "0xE1EF78")]
		private sealed class <DoPlayAudioOnUnit>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GEUnit unit;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlaySoundEffectOnUnitForSeconds <>4__this;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <unitEffect>5__2;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x1700013C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001150")]
				[Address(RVA = "0x12594A0", Offset = "0x12594A0", VA = "0x12594A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001152")]
				[Address(RVA = "0x1259508", Offset = "0x1259508", VA = "0x1259508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0x1259138", Offset = "0x1259138", VA = "0x1259138")]
			[DebuggerHidden]
			public <DoPlayAudioOnUnit>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0x12591DC", Offset = "0x12591DC", VA = "0x12591DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0x12591E0", Offset = "0x12591E0", VA = "0x12591E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001151")]
			[Address(RVA = "0x12594A8", Offset = "0x12594A8", VA = "0x12594A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetFMODEvent @event;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AssetUnitTag> ignoredTags;

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x125903C", Offset = "0x125903C", VA = "0x125903C", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x12590BC", Offset = "0x12590BC", VA = "0x12590BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A180", Offset = "0xE2A180")]
		private IEnumerator DoPlayAudioOnUnit(GEUnit unit)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1259164", Offset = "0x1259164", VA = "0x1259164")]
		public PlaySoundEffectOnUnitForSeconds()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class ToggleUnitEvent : GenericEvent, IAction
	{
		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minToggleInterval;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GEUnit geUnit;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastTrigger;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x125AEFC", Offset = "0x125AEFC", VA = "0x125AEFC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x125AF80", Offset = "0x125AF80", VA = "0x125AF80")]
		public ToggleUnitEvent()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class ActivateUnitEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit geUnit;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x12556E0", Offset = "0x12556E0", VA = "0x12556E0", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1255788", Offset = "0x1255788", VA = "0x1255788")]
		public ActivateUnitEventBoolean()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class EnableRendererEventBoolean : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x125843C", Offset = "0x125843C", VA = "0x125843C", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x12584E4", Offset = "0x12584E4", VA = "0x12584E4")]
		public EnableRendererEventBoolean()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class StopRigidbodyOnDeactivate : GenericBooleanEvent, IBoolAction
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rigidbody;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x125ABB8", Offset = "0x125ABB8", VA = "0x125ABB8", Slot = "4")]
		public override void Execute(Transform emitter, bool value)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x125ACA8", Offset = "0x125ACA8", VA = "0x125ACA8")]
		public StopRigidbodyOnDeactivate()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class SetInitialAimDuration : GenericEvent, IAction
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float val;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x125A164", Offset = "0x125A164", VA = "0x125A164", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x125A180", Offset = "0x125A180", VA = "0x125A180")]
		public SetInitialAimDuration()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class Attack : GenericEvent, IAction
	{
		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x12557B4", Offset = "0x12557B4", VA = "0x12557B4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x12557DC", Offset = "0x12557DC", VA = "0x12557DC")]
		public Attack()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class TriggerShootWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x125AFB4", Offset = "0x125AFB4", VA = "0x125AFB4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x125AFD0", Offset = "0x125AFD0", VA = "0x125AFD0")]
		public TriggerShootWeapon()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class TriggerReleaseWeapon : GenericEvent, IAction
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootWeapon shootWeapon;

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x125AF90", Offset = "0x125AF90", VA = "0x125AF90", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x125AFAC", Offset = "0x125AFAC", VA = "0x125AFAC")]
		public TriggerReleaseWeapon()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class ResetAttack : GenericEvent, IAction
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseAttack attack;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMeleeAttack meleeAttack;

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x12595DC", Offset = "0x12595DC", VA = "0x12595DC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x12596F8", Offset = "0x12596F8", VA = "0x12596F8")]
		public ResetAttack()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class SetPlayerVisibleForUnit : GenericEvent
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BaseDetectUnits> unitDetections;

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x125A188", Offset = "0x125A188", VA = "0x125A188", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x125A2EC", Offset = "0x125A2EC", VA = "0x125A2EC")]
		public SetPlayerVisibleForUnit()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class StopCharge : GenericEvent, IAction
	{
		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChargeBehaviour charge;

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x125AABC", Offset = "0x125AABC", VA = "0x125AABC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x125ABB0", Offset = "0x125ABB0", VA = "0x125ABB0")]
		public StopCharge()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class MultiplyDamageFromTag : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetInfoTag infoTag;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplicator;

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1258D34", Offset = "0x1258D34", VA = "0x1258D34", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1258DB4", Offset = "0x1258DB4", VA = "0x1258DB4")]
		public MultiplyDamageFromTag()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class MultiplyDamage : GenericAttackEvent, IAttackAction
	{
		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float multiplicator;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1258D0C", Offset = "0x1258D0C", VA = "0x1258D0C", Slot = "4")]
		public override void Execute(Transform emitter, AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1258D24", Offset = "0x1258D24", VA = "0x1258D24")]
		public MultiplyDamage()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class AddUnitInformationToExplosionAttack : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GE.WeaponConfigurator.ExplosionAttack explosionAttack;

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1255790", Offset = "0x1255790", VA = "0x1255790", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x12557AC", Offset = "0x12557AC", VA = "0x12557AC")]
		public AddUnitInformationToExplosionAttack()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class MoveUnitToGround : GenericEvent, IAction
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GEUnit unit;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1258A98", Offset = "0x1258A98", VA = "0x1258A98", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1258D04", Offset = "0x1258D04", VA = "0x1258D04")]
		public MoveUnitToGround()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class TeleportUnitEvent : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minToggleInterval;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float lastTeleport;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x125ACB0", Offset = "0x125ACB0", VA = "0x125ACB0", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x125AE98", Offset = "0x125AE98", VA = "0x125AE98")]
		public TeleportUnitEvent()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE1E718", Offset = "0xE1E718")]
	public class OnTelegraphShotsEvent : GenericEventEmitter
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26A54", Offset = "0xE26A54")]
		[InlineProperty]
		public List<GenericFloatEvent> floatEvents;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TelegraphShots telegraphShots;

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1258DC4", Offset = "0x1258DC4", VA = "0x1258DC4", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1258E6C", Offset = "0x1258E6C", VA = "0x1258E6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1258F80", Offset = "0x1258F80", VA = "0x1258F80")]
		private void Attack_OnAimProgressChanged(float progress)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1258FCC", Offset = "0x1258FCC", VA = "0x1258FCC")]
		public OnTelegraphShotsEvent()
		{
		}
	}
}
namespace GE.Actions
{
	[Token(Token = "0x200032A")]
	public class RotateObject : MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF88", Offset = "0xE1EF88")]
		private sealed class <DoStopRotation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotateObject <>4__this;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float stopDelay;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startSpeed>5__2;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__3;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001156")]
				[Address(RVA = "0x130A028", Offset = "0x130A028", VA = "0x130A028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001158")]
				[Address(RVA = "0x130A090", Offset = "0x130A090", VA = "0x130A090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001153")]
			[Address(RVA = "0x1309C44", Offset = "0x1309C44", VA = "0x1309C44")]
			[DebuggerHidden]
			public <DoStopRotation>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001154")]
			[Address(RVA = "0x1309EE8", Offset = "0x1309EE8", VA = "0x1309EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001155")]
			[Address(RVA = "0x1309EEC", Offset = "0x1309EEC", VA = "0x1309EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0x130A030", Offset = "0x130A030", VA = "0x130A030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EF98", Offset = "0xE1EF98")]
		private sealed class <DoStartRotation>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotateObject <>4__this;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startDelay;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startSpeed>5__2;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__3;

			[Token(Token = "0x17000140")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0x1309E78", Offset = "0x1309E78", VA = "0x1309E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0x1309EE0", Offset = "0x1309EE0", VA = "0x1309EE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0x1309CF0", Offset = "0x1309CF0", VA = "0x1309CF0")]
			[DebuggerHidden]
			public <DoStartRotation>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x1309D2C", Offset = "0x1309D2C", VA = "0x1309D2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0x1309D30", Offset = "0x1309D30", VA = "0x1309D30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x1309E80", Offset = "0x1309E80", VA = "0x1309E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 euler;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float targetSpeed;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float currentSpeed;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float startAndStopDelay;

		[Token(Token = "0x14000030")]
		public event Action<float> OnStopRotation
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x1309644", Offset = "0x1309644", VA = "0x1309644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1E4", Offset = "0xE2A1E4")]
			add
			{
			}
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x13096E8", Offset = "0x13096E8", VA = "0x13096E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A1F4", Offset = "0xE2A1F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<float> OnStartRotation
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x130978C", Offset = "0x130978C", VA = "0x130978C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A204", Offset = "0xE2A204")]
			add
			{
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x1309830", Offset = "0x1309830", VA = "0x1309830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A214", Offset = "0xE2A214")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x13098D4", Offset = "0x13098D4", VA = "0x13098D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x13098E0", Offset = "0x13098E0", VA = "0x13098E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1309AB4", Offset = "0x1309AB4", VA = "0x1309AB4")]
		public void StopRotation(float stopDelay)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1309B3C", Offset = "0x1309B3C", VA = "0x1309B3C")]
		public void StartRotation(float startDelay)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1309BC4", Offset = "0x1309BC4", VA = "0x1309BC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A224", Offset = "0xE2A224")]
		private IEnumerator DoStopRotation(float stopDelay)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1309C70", Offset = "0x1309C70", VA = "0x1309C70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A288", Offset = "0xE2A288")]
		private IEnumerator DoStartRotation(float startDelay)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1309D1C", Offset = "0x1309D1C", VA = "0x1309D1C")]
		public RotateObject()
		{
		}
	}
}
namespace GE.Progression
{
	[Token(Token = "0x200032B")]
	public class MoveToNextLevel : GenericEvent, IAction
	{
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x130B0C0", Offset = "0x130B0C0", VA = "0x130B0C0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x130B1D4", Offset = "0x130B1D4", VA = "0x130B1D4")]
		public MoveToNextLevel()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class MoveToDistrict : GenericEvent, IAction
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetDistrict District;

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x130AF90", Offset = "0x130AF90", VA = "0x130AF90", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x130B0B8", Offset = "0x130B0B8", VA = "0x130B0B8")]
		public MoveToDistrict()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class ResetWorldProgress : GenericEvent, IAction
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int district;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x130B2A4", Offset = "0x130B2A4", VA = "0x130B2A4", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x130B308", Offset = "0x130B308", VA = "0x130B308")]
		public ResetWorldProgress()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ResetProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x130B1DC", Offset = "0x130B1DC", VA = "0x130B1DC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x130B238", Offset = "0x130B238", VA = "0x130B238")]
		public ResetProgression()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class SetQuickRestartDistrict : GenericEvent, IAction
	{
		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int district;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x130B310", Offset = "0x130B310", VA = "0x130B310", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x130B374", Offset = "0x130B374", VA = "0x130B374")]
		public SetQuickRestartDistrict()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class ResetToQuickRestart : GenericEvent, IAction
	{
		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x130B240", Offset = "0x130B240", VA = "0x130B240", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x130B29C", Offset = "0x130B29C", VA = "0x130B29C")]
		public ResetToQuickRestart()
		{
		}
	}
}
namespace GE.PlayerClass
{
	[Serializable]
	[Token(Token = "0x2000331")]
	public class SetPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x130ADBC", Offset = "0x130ADBC", VA = "0x130ADBC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x130AE28", Offset = "0x130AE28", VA = "0x130AE28")]
		public SetPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class SelectPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x130AD00", Offset = "0x130AD00", VA = "0x130AD00", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x130ADB4", Offset = "0x130ADB4", VA = "0x130ADB4")]
		public SelectPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class AcceptPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x130A42C", Offset = "0x130A42C", VA = "0x130A42C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x130A48C", Offset = "0x130A48C", VA = "0x130A48C")]
		public AcceptPlayerClass()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class IsNotCondition : GenericCondition, ICondition
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ICondition Condition;

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x130A9B8", Offset = "0x130A9B8", VA = "0x130A9B8", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x130AA84", Offset = "0x130AA84", VA = "0x130AA84")]
		public IsNotCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class IsPlayerClass : GenericCondition, ICondition
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x130AA8C", Offset = "0x130AA8C", VA = "0x130AA8C", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x130AAF8", Offset = "0x130AAF8", VA = "0x130AAF8")]
		public IsPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class IsPlayerClassCompleted : GenericCondition, ICondition
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x130AB00", Offset = "0x130AB00", VA = "0x130AB00", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x130AB6C", Offset = "0x130AB6C", VA = "0x130AB6C")]
		public IsPlayerClassCompleted()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public class IsCurrentPlayerClass : GenericCondition, ICondition
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x130A914", Offset = "0x130A914", VA = "0x130A914", Slot = "4")]
		public override bool Execute(Transform emitter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x130A9B0", Offset = "0x130A9B0", VA = "0x130A9B0")]
		public IsCurrentPlayerClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class IncreasePlayerClassProgress : GenericEvent, IAction, IAttackAction
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntegerValueData Value;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ProgressType progressType;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugBreak;

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x130A494", Offset = "0x130A494", VA = "0x130A494", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x130A5BC", Offset = "0x130A5BC", VA = "0x130A5BC", Slot = "6")]
		public void Execute(Transform emitter, AttackInfo attack)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x130A5C8", Offset = "0x130A5C8", VA = "0x130A5C8")]
		public IncreasePlayerClassProgress()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class ResetInOneRunProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x130ABF0", Offset = "0x130ABF0", VA = "0x130ABF0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x130ACF8", Offset = "0x130ACF8", VA = "0x130ACF8")]
		public ResetInOneRunProgression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public class IncreasePlayerClassProgressFloat : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FloatValueData Value;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressType progressType;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Amount;

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x130A5D0", Offset = "0x130A5D0", VA = "0x130A5D0", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x130A6C8", Offset = "0x130A6C8", VA = "0x130A6C8", Slot = "6")]
		public void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x130A7C4", Offset = "0x130A7C4", VA = "0x130A7C4")]
		public IncreasePlayerClassProgressFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class IncreasePlayerClassProgressFloatInOneRun : GenericEvent, IAction, IFloatAction
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FloatValueData Value;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amount;

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x130A7CC", Offset = "0x130A7CC", VA = "0x130A7CC", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x130A86C", Offset = "0x130A86C", VA = "0x130A86C", Slot = "6")]
		public void Execute(Transform emitter, float val)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x130A90C", Offset = "0x130A90C", VA = "0x130A90C")]
		public IncreasePlayerClassProgressFloatInOneRun()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033C")]
	public class SetPlayerClassProgress : GenericEvent, IAction
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanValueData Value;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x130AE30", Offset = "0x130AE30", VA = "0x130AE30", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x130AEA0", Offset = "0x130AEA0", VA = "0x130AEA0")]
		public SetPlayerClassProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033D")]
	public class UnlockPlayerClass : GenericEvent, IAction
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x130AEA8", Offset = "0x130AEA8", VA = "0x130AEA8", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x130AF14", Offset = "0x130AF14", VA = "0x130AF14")]
		public UnlockPlayerClass()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class LowerPlayerClassProgression : GenericEvent, IAction
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x130AB74", Offset = "0x130AB74", VA = "0x130AB74", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x130ABE8", Offset = "0x130ABE8", VA = "0x130ABE8")]
		public LowerPlayerClassProgression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class UnlockUpgrades : GenericEvent, IAction
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerClassData Player;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x130AF1C", Offset = "0x130AF1C", VA = "0x130AF1C", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x130AF88", Offset = "0x130AF88", VA = "0x130AF88")]
		public UnlockUpgrades()
		{
		}
	}
}
namespace GE.Events
{
	[Token(Token = "0x2000340")]
	public class GenericModifierState : IState
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplicator;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GlobalMultipliers.GenericMultiplier currentMultiplier;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x130A12C", Offset = "0x130A12C", VA = "0x130A12C", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x130A1E0", Offset = "0x130A1E0", VA = "0x130A1E0", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x130A1E4", Offset = "0x130A1E4", VA = "0x130A1E4", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x130A2A4", Offset = "0x130A2A4", VA = "0x130A2A4")]
		public GenericModifierState()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class SpecificMultiplierState : IState
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetUnitTag unitTag;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetInfoTag infoTag;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float multiplicator;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GlobalMultipliers.SpecificMultiplier currentMultiplier;

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x130A2AC", Offset = "0x130A2AC", VA = "0x130A2AC", Slot = "5")]
		public void Enter(Transform emitter)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x130A360", Offset = "0x130A360", VA = "0x130A360", Slot = "4")]
		public void Init(Transform emitter, bool state)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x130A364", Offset = "0x130A364", VA = "0x130A364", Slot = "6")]
		public void Leave(Transform emitter)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x130A424", Offset = "0x130A424", VA = "0x130A424")]
		public SpecificMultiplierState()
		{
		}
	}
}
namespace GE.UnitEvents
{
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E750", Offset = "0xE1E750")]
	public class UnitEventData : SerializedScriptableObject
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26AC0", Offset = "0xE26AC0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26AC0", Offset = "0xE26AC0")]
		[InlineProperty]
		public List<ICondition> Conditions;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26B30", Offset = "0xE26B30")]
		[InlineProperty]
		public List<IUnitCondition> UnitConditions;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26B7C", Offset = "0xE26B7C")]
		[InlineProperty]
		public List<IAttackCondition> AttackConditions;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26BC8", Offset = "0xE26BC8")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26BC8", Offset = "0xE26BC8")]
		[InlineProperty]
		public List<GenericEvent> events;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26C38", Offset = "0xE26C38")]
		[InlineProperty]
		public List<IAction> actions;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26C84", Offset = "0xE26C84")]
		[InlineProperty]
		public List<GenericUnitEvent> unitEvents;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26CD0", Offset = "0xE26CD0")]
		[InlineProperty]
		public List<IUnitAction> unitActions;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26D1C", Offset = "0xE26D1C")]
		[InlineProperty]
		public List<IBulletAction> bulletActions;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26D68", Offset = "0xE26D68")]
		[InlineProperty]
		public List<IWeaponAction> weaponActions;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ListDrawerSettingsAttribute", RVA = "0xE26DB4", Offset = "0xE26DB4")]
		[InlineProperty]
		public List<IVector3Action> positionActions;

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x130C7C8", Offset = "0x130C7C8", VA = "0x130C7C8")]
		public UnitEventData()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class TriggerEventData : GenericEvent, IAction
	{
		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventData eventData;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x130BF40", Offset = "0x130BF40", VA = "0x130BF40", Slot = "4")]
		public override void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x130C168", Offset = "0x130C168", VA = "0x130C168")]
		public TriggerEventData()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class TriggerUnitEventData : GenericUnitEvent, IUnitAction
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnitEventData eventData;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x130C170", Offset = "0x130C170", VA = "0x130C170", Slot = "4")]
		public override void Execute(Transform emitter, GEUnit unit)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x130C7C0", Offset = "0x130C7C0", VA = "0x130C7C0")]
		public TriggerUnitEventData()
		{
		}
	}
}
namespace GE.SocialFeatures
{
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE1E7A4", Offset = "0xE1E7A4")]
	public class LeaderboardData : LeaderboardBaseData
	{
		[Token(Token = "0x2000451")]
		public enum LeaderboardType
		{
			[Token(Token = "0x4001119")]
			BestRun
		}

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardType type;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ScoreCalculator.AdditionalScoreType scoreType;

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x130B37C", Offset = "0x130B37C", VA = "0x130B37C", Slot = "4")]
		public override int GetValue()
		{
			return default(int);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x130B3F4", Offset = "0x130B3F4", VA = "0x130B3F4")]
		public LeaderboardData()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class UILeaderboard : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFA8", Offset = "0xE1EFA8")]
		private sealed class <>c
		{
			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LeaderboardEntry, int> <>9__6_0;

			[Token(Token = "0x6001160")]
			[Address(RVA = "0x130BCD0", Offset = "0x130BCD0", VA = "0x130BCD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0x130BCD8", Offset = "0x130BCD8", VA = "0x130BCD8")]
			internal int <OnComplete>b__6_0(LeaderboardEntry e)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26E00", Offset = "0xE26E00")]
		public LeaderboardData Profile;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26E38", Offset = "0xE26E38")]
		public UILeaderboardEntry Entry;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UILeaderboardEntry> fields;

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x130B580", Offset = "0x130B580", VA = "0x130B580")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x130B760", Offset = "0x130B760", VA = "0x130B760")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x130B6A4", Offset = "0x130B6A4", VA = "0x130B6A4")]
		private void UpdateLeaderboard()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x130B848", Offset = "0x130B848", VA = "0x130B848")]
		private void OnComplete(List<LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x130BBFC", Offset = "0x130BBFC", VA = "0x130BBFC")]
		public UILeaderboard()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class UILeaderboardSelection : MonoBehaviour
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> leaderboards;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LeaderboardBaseData> leaderboardKeys;

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x130BCF0", Offset = "0x130BCF0", VA = "0x130BCF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x130B4C0", Offset = "0x130B4C0", VA = "0x130B4C0")]
		public void EnableLeaderboard(int id)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x130BEA8", Offset = "0x130BEA8", VA = "0x130BEA8")]
		public UILeaderboardSelection()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class SelectLeaderboardAction : IAction
	{
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UILeaderboardSelection leaderboardSelection;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int id;

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x130B3FC", Offset = "0x130B3FC", VA = "0x130B3FC", Slot = "4")]
		public void Execute(Transform emitter)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x130B578", Offset = "0x130B578", VA = "0x130B578")]
		public SelectLeaderboardAction()
		{
		}
	}
}
namespace GE.DebugTools
{
	[Token(Token = "0x2000349")]
	public class CaptureScreenshot : MonoBehaviour
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int resolutionMultiplicator;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode key;

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x130A098", Offset = "0x130A098", VA = "0x130A098")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x130A118", Offset = "0x130A118", VA = "0x130A118")]
		public CaptureScreenshot()
		{
		}
	}
}
namespace GreenerGames
{
	[Serializable]
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE1E7F8", Offset = "0xE1E7F8")]
	public class SecondaryKeyDictionary<T1, T2, V>
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T1, V> primaryDictionary;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T2, T1> secondaryKeyLink;

		[Token(Token = "0x170000A7")]
		public V Item
		{
			[Token(Token = "0x6000DBF")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x170000A8")]
		public V Item
		{
			[Token(Token = "0x6000DC0")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x170000A9")]
		public V Item
		{
			[Token(Token = "0x6000DC1")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x6000DC2")]
		public V GetValueFromPrimary(T1 primaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DC3")]
		public V GetValueFromSecondary(T2 secondaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DC4")]
		public V GetValueFromEither(T1 primary, T2 secondary)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DC5")]
		public void Add(T1 key, V value)
		{
		}

		[Token(Token = "0x6000DC6")]
		public void Add(T1 key, V value, T2 secondaryKey)
		{
		}

		[Token(Token = "0x6000DC7")]
		public void LinkSecondaryKey(T1 primaryKey, T2 secondaryKey)
		{
		}

		[Token(Token = "0x6000DC8")]
		public bool ContainsPrimaryKey(T1 primaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC9")]
		public bool ContainsSecondaryKey(T2 secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		public bool ContainsKey(T1 key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		public bool ContainsKey(T2 secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		public SecondaryKeyDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE1E830", Offset = "0xE1E830")]
	public class SecondaryKeyDictionary<T, V>
	{
		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T, V> primaryDictionary;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T, T> secondaryKeyLink;

		[Token(Token = "0x170000AA")]
		public V Item
		{
			[Token(Token = "0x6000DCD")]
			get
			{
				return (V)null;
			}
		}

		[Token(Token = "0x6000DCE")]
		public V GetValueFromPrimary(T primaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DCF")]
		public V GetValueFromSecondary(T secondaryKey)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DD0")]
		public V GetValueFromEither(T key)
		{
			return (V)null;
		}

		[Token(Token = "0x6000DD1")]
		public void Add(T key, V value)
		{
		}

		[Token(Token = "0x6000DD2")]
		public void Add(T key, V value, T secondaryKey)
		{
		}

		[Token(Token = "0x6000DD3")]
		public void LinkSecondaryKey(T primaryKey, T secondaryKey)
		{
		}

		[Token(Token = "0x6000DD4")]
		public bool ContainsKey(T key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		public bool ContainsPrimaryKey(T primaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		public bool ContainsSecondaryKey(T secondaryKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		public SecondaryKeyDictionary()
		{
		}
	}
}
namespace GoogleSheetsToUnity
{
	[Token(Token = "0x200034C")]
	public class GoogleSheetsToUnityConfig : ScriptableObject
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CLIENT_ID;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CLIENT_SECRET;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ACCESS_TOKEN;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string REFRESH_TOKEN;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string API_Key;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int PORT;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GoogleDataResponse gdr;

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1111070", Offset = "0x1111070", VA = "0x1111070")]
		public GoogleSheetsToUnityConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class GoogleDataResponse
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string access_token;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string refresh_token;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string token_type;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int expires_in;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DateTime nextRefreshTime;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1111014", Offset = "0x1111014", VA = "0x1111014")]
		public GoogleDataResponse()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class GoogleAuthrisationHelper : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFB8", Offset = "0xE1EFB8")]
		private sealed class <CheckForRefreshOfToken>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000142")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001166")]
				[Address(RVA = "0x1110FA4", Offset = "0x1110FA4", VA = "0x1110FA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000143")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001168")]
				[Address(RVA = "0x111100C", Offset = "0x111100C", VA = "0x111100C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x1110954", Offset = "0x1110954", VA = "0x1110954")]
			[DebuggerHidden]
			public <CheckForRefreshOfToken>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x1110A2C", Offset = "0x1110A2C", VA = "0x1110A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x1110B08", Offset = "0x1110B08", VA = "0x1110B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x1110A48", Offset = "0x1110A48", VA = "0x1110A48")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x1110FAC", Offset = "0x1110FAC", VA = "0x1110FAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _authToken;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HttpListener _httpListener;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _htmlResponseContent;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _notifyAuthTokenLock;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool _shouldNotifyAuthTokenReceived;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Action<string> _onComplete;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x11108F4", Offset = "0x11108F4", VA = "0x11108F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A2EC", Offset = "0xE2A2EC")]
		public static IEnumerator CheckForRefreshOfToken()
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1110980", Offset = "0x1110980", VA = "0x1110980")]
		public GoogleAuthrisationHelper()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class SpreadsheetManager
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFC8", Offset = "0xE1EFC8")]
		private sealed class <CheckForRefreshToken>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000144")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116C")]
				[Address(RVA = "0x1113928", Offset = "0x1113928", VA = "0x1113928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000145")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0x1113990", Offset = "0x1113990", VA = "0x1113990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x1112600", Offset = "0x1112600", VA = "0x1112600")]
			[DebuggerHidden]
			public <CheckForRefreshToken>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x1113844", Offset = "0x1113844", VA = "0x1113844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0x1113848", Offset = "0x1113848", VA = "0x1113848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x1113930", Offset = "0x1113930", VA = "0x1113930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFD8", Offset = "0xE1EFD8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GSTU_Search search;

			[Token(Token = "0x600116F")]
			[Address(RVA = "0x111351C", Offset = "0x111351C", VA = "0x111351C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x1113524", Offset = "0x1113524", VA = "0x1113524")]
			internal bool <Read>b__0(Sheet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFE8", Offset = "0xE1EFE8")]
		private sealed class <Read>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GSTU_Search search;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest request;

			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool containsMergedCells;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass2_0 <>8__1;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityAction<GstuSpreadSheet> callback;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private GSTU_SpreadsheetResponce <responce>5__3;

			[Token(Token = "0x400112B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityWebRequest <request2>5__4;

			[Token(Token = "0x17000146")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001175")]
				[Address(RVA = "0x1114214", Offset = "0x1114214", VA = "0x1114214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000147")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001177")]
				[Address(RVA = "0x111427C", Offset = "0x111427C", VA = "0x111427C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x1112A6C", Offset = "0x1112A6C", VA = "0x1112A6C")]
			[DebuggerHidden]
			public <Read>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x1113B50", Offset = "0x1113B50", VA = "0x1113B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x1113C3C", Offset = "0x1113C3C", VA = "0x1113C3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x1113B7C", Offset = "0x1113B7C", VA = "0x1113B7C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x111421C", Offset = "0x111421C", VA = "0x111421C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1EFF8", Offset = "0xE1EFF8")]
		private sealed class <Write>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction callback;

			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117C")]
				[Address(RVA = "0x11144D8", Offset = "0x11144D8", VA = "0x11144D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117E")]
				[Address(RVA = "0x1114540", Offset = "0x1114540", VA = "0x1114540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0x1112C7C", Offset = "0x1112C7C", VA = "0x1112C7C")]
			[DebuggerHidden]
			public <Write>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x1114284", Offset = "0x1114284", VA = "0x1114284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x1114360", Offset = "0x1114360", VA = "0x1114360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x11142A0", Offset = "0x11142A0", VA = "0x11142A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0x11144E0", Offset = "0x11144E0", VA = "0x11144E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F008", Offset = "0xE1F008")]
		private sealed class <WriteBatch>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction callback;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x1700014A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001183")]
				[Address(RVA = "0x111479C", Offset = "0x111479C", VA = "0x111479C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001185")]
				[Address(RVA = "0x1114804", Offset = "0x1114804", VA = "0x1114804", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x1112D24", Offset = "0x1112D24", VA = "0x1112D24")]
			[DebuggerHidden]
			public <WriteBatch>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x1114548", Offset = "0x1114548", VA = "0x1114548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x1114624", Offset = "0x1114624", VA = "0x1114624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x1114564", Offset = "0x1114564", VA = "0x1114564")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x11147A4", Offset = "0x11147A4", VA = "0x11147A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F018", Offset = "0xE1F018")]
		private sealed class <Append>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<string> callback;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <>7__wrap1;

			[Token(Token = "0x1700014C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600118A")]
				[Address(RVA = "0x11137D4", Offset = "0x11137D4", VA = "0x11137D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600118C")]
				[Address(RVA = "0x111383C", Offset = "0x111383C", VA = "0x111383C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1113084", Offset = "0x1113084", VA = "0x1113084")]
			[DebuggerHidden]
			public <Append>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x1113558", Offset = "0x1113558", VA = "0x1113558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x1113634", Offset = "0x1113634", VA = "0x1113634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x1113574", Offset = "0x1113574", VA = "0x1113574")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600118B")]
			[Address(RVA = "0x11137DC", Offset = "0x11137DC", VA = "0x11137DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F028", Offset = "0xE1F028")]
		private sealed class <Read>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string titleColumn;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int titleRow;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public OnSpreedSheetLoaded callback;

			[Token(Token = "0x1700014E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001190")]
				[Address(RVA = "0x1113AE0", Offset = "0x1113AE0", VA = "0x1113AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001192")]
				[Address(RVA = "0x1113B48", Offset = "0x1113B48", VA = "0x1113B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x11134E8", Offset = "0x11134E8", VA = "0x11134E8")]
			[DebuggerHidden]
			public <Read>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x1113998", Offset = "0x1113998", VA = "0x1113998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0x111399C", Offset = "0x111399C", VA = "0x111399C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x1113AE8", Offset = "0x1113AE8", VA = "0x1113AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GoogleSheetsToUnityConfig _config;

		[Token(Token = "0x170000AB")]
		public static GoogleSheetsToUnityConfig Config
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x1110EB8", Offset = "0x1110EB8", VA = "0x1110EB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x11130B0", Offset = "0x11130B0", VA = "0x11130B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x11125A0", Offset = "0x11125A0", VA = "0x11125A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A350", Offset = "0xE2A350")]
		private static IEnumerator CheckForRefreshToken()
		{
			return null;
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x111262C", Offset = "0x111262C", VA = "0x111262C")]
		public static void Read(GSTU_Search search, UnityAction<GstuSpreadSheet> callback, bool containsMergedCells = false)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x1112910", Offset = "0x1112910", VA = "0x1112910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A3B4", Offset = "0xE2A3B4")]
		private static IEnumerator Read(UnityWebRequest request, GSTU_Search search, bool containsMergedCells, UnityAction<GstuSpreadSheet> callback)
		{
			return null;
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1112A98", Offset = "0x1112A98", VA = "0x1112A98")]
		public static void Write(GSTU_Search search, string inputData, UnityAction callback)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x1110134", Offset = "0x1110134", VA = "0x1110134")]
		public static void Write(GSTU_Search search, ValueRange inputData, UnityAction callback)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1112C00", Offset = "0x1112C00", VA = "0x1112C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A418", Offset = "0xE2A418")]
		private static IEnumerator Write(UnityWebRequest request, UnityAction callback)
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x110F9C4", Offset = "0x110F9C4", VA = "0x110F9C4")]
		public static void WriteBatch(GSTU_Search search, BatchRequestBody requestData, UnityAction callback)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1112CA8", Offset = "0x1112CA8", VA = "0x1112CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A47C", Offset = "0xE2A47C")]
		private static IEnumerator WriteBatch(UnityWebRequest request, UnityAction callback)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1112D50", Offset = "0x1112D50", VA = "0x1112D50")]
		public static void Append(GSTU_Search search, ValueRange inputData, UnityAction<string> callback)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1113008", Offset = "0x1113008", VA = "0x1113008")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A4E0", Offset = "0xE2A4E0")]
		private static IEnumerator Append(UnityWebRequest request, UnityAction<string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1113104", Offset = "0x1113104", VA = "0x1113104")]
		public static void ReadPublicSpreadsheet(GSTU_Search searchDetails, OnSpreedSheetLoaded callback)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1113454", Offset = "0x1113454", VA = "0x1113454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2A544", Offset = "0xE2A544")]
		private static IEnumerator Read(WWW www, string titleColumn, int titleRow, OnSpreedSheetLoaded callback)
		{
			return null;
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1113514", Offset = "0x1113514", VA = "0x1113514")]
		public SpreadsheetManager()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class GSTU_Search
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string sheetId;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string worksheetName;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string startCell;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string endCell;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string titleColumn;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly int titleRow;

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x110F90C", Offset = "0x110F90C", VA = "0x110F90C")]
		public GSTU_Search(string sheetId, string worksheetName)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x110FFC0", Offset = "0x110FFC0", VA = "0x110FFC0")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1110564", Offset = "0x1110564", VA = "0x1110564")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell, string endCell)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1110630", Offset = "0x1110630", VA = "0x1110630")]
		public GSTU_Search(string sheetId, string worksheetName, string startCell, string endCell, string titleColumn, int titleRow)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public class GSTU_Cell
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string column;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string columnId;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int row;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rowId;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string value;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal List<string> titleConnectedCells;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x110FC8C", Offset = "0x110FC8C", VA = "0x110FC8C")]
		public GSTU_Cell(string value, string column, int row)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x110FD6C", Offset = "0x110FD6C", VA = "0x110FD6C")]
		public GSTU_Cell(string value)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x110FE34", Offset = "0x110FE34", VA = "0x110FE34")]
		public string Column()
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x110FE3C", Offset = "0x110FE3C", VA = "0x110FE3C")]
		public int Row()
		{
			return default(int);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x110FE44", Offset = "0x110FE44", VA = "0x110FE44")]
		public string CellRef()
		{
			return null;
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x110FEBC", Offset = "0x110FEBC", VA = "0x110FEBC")]
		internal void UpdateCellValue(string sheetID, string worksheet, string value, [Optional] UnityAction callback)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x11104A0", Offset = "0x11104A0", VA = "0x11104A0")]
		internal ValueRange AddCellToBatchUpdate(string sheetID, string worksheet, string value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class GSTU_SpreadsheetResponce
	{
		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueRange valueRange;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Sheet sheetInfo;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1110714", Offset = "0x1110714", VA = "0x1110714")]
		public string WorkSheet()
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x1110790", Offset = "0x1110790", VA = "0x1110790")]
		public string StartCell()
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1110848", Offset = "0x1110848", VA = "0x1110848")]
		public string EndCell()
		{
			return null;
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x11108C0", Offset = "0x11108C0", VA = "0x11108C0")]
		public GSTU_SpreadsheetResponce()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x11108C8", Offset = "0x11108C8", VA = "0x11108C8")]
		public GSTU_SpreadsheetResponce(ValueRange data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	public class ValueRange
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string range;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string majorDimension;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<string>> values;

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x11159A8", Offset = "0x11159A8", VA = "0x11159A8")]
		public ValueRange()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1115A28", Offset = "0x1115A28", VA = "0x1115A28")]
		public ValueRange(List<List<string>> data)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1110088", Offset = "0x1110088", VA = "0x1110088")]
		public ValueRange(List<string> data)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1112B10", Offset = "0x1112B10", VA = "0x1112B10")]
		public ValueRange(string data)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1115ABC", Offset = "0x1115ABC", VA = "0x1115ABC")]
		public void Add(List<string> data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class BatchRequestBody
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ValueInputOption valueInputOption;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ValueRange> data;

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x110F81C", Offset = "0x110F81C", VA = "0x110F81C")]
		public void Add(ValueRange data)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x110F884", Offset = "0x110F884", VA = "0x110F884")]
		public void Send(string spreadsheetId, string worksheet, UnityAction callback)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x110FC14", Offset = "0x110FC14", VA = "0x110FC14")]
		public BatchRequestBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	public class SheetsRootObject
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Sheet> sheets;

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1112598", Offset = "0x1112598", VA = "0x1112598")]
		public SheetsRootObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class Sheet
	{
		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Properties properties;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Merge> merges;

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1112590", Offset = "0x1112590", VA = "0x1112590")]
		public Sheet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000357")]
	public class Properties
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sheetId;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sheetType;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x1112588", Offset = "0x1112588", VA = "0x1112588")]
		public Properties()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	public class Merge
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sheetId;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startRowIndex;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int endRowIndex;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int startColumnIndex;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int endColumnIndex;

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1112580", Offset = "0x1112580", VA = "0x1112580")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public enum Dimension
	{
		[Token(Token = "0x4000D3F")]
		Rows,
		[Token(Token = "0x4000D40")]
		Columns
	}
	[Token(Token = "0x200035A")]
	public enum ValueRenderOption
	{
		[Token(Token = "0x4000D42")]
		UnformattedValue,
		[Token(Token = "0x4000D43")]
		FormattedValue,
		[Token(Token = "0x4000D44")]
		Formula
	}
	[Token(Token = "0x200035B")]
	public enum ValueInputOption
	{
		[Token(Token = "0x4000D46")]
		RAW,
		[Token(Token = "0x4000D47")]
		USER_ENTERED
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xE1E868", Offset = "0xE1E868")]
	public class GstuSpreadSheet
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, GSTU_Cell> Cells;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SecondaryKeyDictionary<string, List<GSTU_Cell>> columns;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecondaryKeyDictionary<int, string, List<GSTU_Cell>> rows;

		[Token(Token = "0x170000AC")]
		public GSTU_Cell Item
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x1112224", Offset = "0x1112224", VA = "0x1112224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public GSTU_Cell Item
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x111228C", Offset = "0x111228C", VA = "0x111228C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public List<GSTU_Cell> Item
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x1112380", Offset = "0x1112380", VA = "0x1112380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x11110D0", Offset = "0x11110D0", VA = "0x11110D0")]
		public GstuSpreadSheet(GSTU_SpreadsheetResponce data, string titleColumn, int titleRow)
		{
		}
	}
}
namespace GoogleSheetsToUnity.ThirdPary
{
	[Token(Token = "0x200035D")]
	internal class Task
	{
		[Token(Token = "0x200045B")]
		public delegate void FinishedHandler(bool manual);

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskManager.TaskState task;

		[Token(Token = "0x170000AF")]
		public bool Running
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x111480C", Offset = "0x111480C", VA = "0x111480C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public bool Paused
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x1114828", Offset = "0x1114828", VA = "0x1114828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000032")]
		public event FinishedHandler Finished
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x1114844", Offset = "0x1114844", VA = "0x1114844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A5A8", Offset = "0xE2A5A8")]
			add
			{
			}
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x11148E8", Offset = "0x11148E8", VA = "0x11148E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A5B8", Offset = "0xE2A5B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x11129A8", Offset = "0x11129A8", VA = "0x11129A8")]
		public Task(IEnumerator c, bool autoStart = true)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1114B6C", Offset = "0x1114B6C", VA = "0x1114B6C")]
		public Task(IEnumerator c, FinishedHandler handler, bool autoStart = true)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1114B54", Offset = "0x1114B54", VA = "0x1114B54")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1114C14", Offset = "0x1114C14", VA = "0x1114C14")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1114C48", Offset = "0x1114C48", VA = "0x1114C48")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1114C74", Offset = "0x1114C74", VA = "0x1114C74")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1114C98", Offset = "0x1114C98", VA = "0x1114C98")]
		private void TaskFinished(bool manual)
		{
		}
	}
	[Token(Token = "0x200035E")]
	internal class TaskManager : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		public class TaskState
		{
			[Token(Token = "0x2000469")]
			public delegate void FinishedHandler(bool manual);

			[Token(Token = "0x200046A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F078", Offset = "0xE1F078")]
			private sealed class <CallWrapper>d__17 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400116B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400116C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400116D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TaskState <>4__this;

				[Token(Token = "0x400116E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerator <e>5__2;

				[Token(Token = "0x17000152")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60011BE")]
					[Address(RVA = "0x1115588", Offset = "0x1115588", VA = "0x1115588", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000153")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60011C0")]
					[Address(RVA = "0x11155F0", Offset = "0x11155F0", VA = "0x11155F0", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60011BB")]
				[Address(RVA = "0x1115120", Offset = "0x1115120", VA = "0x1115120")]
				[DebuggerHidden]
				public <CallWrapper>d__17(int <>1__state)
				{
				}

				[Token(Token = "0x60011BC")]
				[Address(RVA = "0x111514C", Offset = "0x111514C", VA = "0x111514C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60011BD")]
				[Address(RVA = "0x1115150", Offset = "0x1115150", VA = "0x1115150", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60011BF")]
				[Address(RVA = "0x1115590", Offset = "0x1115590", VA = "0x1115590", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator coroutine;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool running;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			private bool paused;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			private bool stopped;

			[Token(Token = "0x17000150")]
			public bool Running
			{
				[Token(Token = "0x6001197")]
				[Address(RVA = "0x1114FFC", Offset = "0x1114FFC", VA = "0x1114FFC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000151")]
			public bool Paused
			{
				[Token(Token = "0x6001198")]
				[Address(RVA = "0x1115004", Offset = "0x1115004", VA = "0x1115004")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x14000033")]
			public event FinishedHandler Finished
			{
				[Token(Token = "0x6001199")]
				[Address(RVA = "0x1114AB0", Offset = "0x1114AB0", VA = "0x1114AB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDA8", Offset = "0xE2BDA8")]
				add
				{
				}
				[Token(Token = "0x600119A")]
				[Address(RVA = "0x111500C", Offset = "0x111500C", VA = "0x111500C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2BDB8", Offset = "0xE2BDB8")]
				remove
				{
				}
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0x1114FC8", Offset = "0x1114FC8", VA = "0x1114FC8")]
			public TaskState(IEnumerator c)
			{
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0x1114C68", Offset = "0x1114C68", VA = "0x1114C68")]
			public void Pause()
			{
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0x1114C90", Offset = "0x1114C90", VA = "0x1114C90")]
			public void Unpause()
			{
			}

			[Token(Token = "0x600119E")]
			[Address(RVA = "0x1114B9C", Offset = "0x1114B9C", VA = "0x1114B9C")]
			public void Start()
			{
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x1114C38", Offset = "0x1114C38", VA = "0x1114C38")]
			public void Stop()
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x11150B0", Offset = "0x11150B0", VA = "0x11150B0")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BDC8", Offset = "0xE2BDC8")]
			private IEnumerator CallWrapper()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TaskManager singleton;

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x111498C", Offset = "0x111498C", VA = "0x111498C")]
		public static TaskState CreateTask(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1114FF4", Offset = "0x1114FF4", VA = "0x1114FF4")]
		public TaskManager()
		{
		}
	}
}
namespace GoogleSheetsToUnity.Utils
{
	[Token(Token = "0x200035F")]
	internal class GoogleSheetsToUnityUtilities
	{
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x111586C", Offset = "0x111586C", VA = "0x111586C")]
		public static int GetIndexInAlphabet(string value)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x11158D4", Offset = "0x11158D4", VA = "0x11158D4")]
		private static int IndexInAlphabet(char c)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x1112028", Offset = "0x1112028", VA = "0x1112028")]
		public static string ExcelColumnFromNumber(int column)
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x1111F14", Offset = "0x1111F14", VA = "0x1111F14")]
		public static int NumberFromExcelColumn(string column)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x11159A0", Offset = "0x11159A0", VA = "0x11159A0")]
		public GoogleSheetsToUnityUtilities()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class GSTUString
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1115694", Offset = "0x1115694", VA = "0x1115694")]
		public void AddParam(string paramName, string paramValue)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1115814", Offset = "0x1115814", VA = "0x1115814")]
		public GSTUString()
		{
		}
	}
}
namespace ECE
{
	[Token(Token = "0x2000361")]
	public class EasyColliderCreator
	{
		[Token(Token = "0x200045D")]
		private struct BestFitSphere
		{
			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Center;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Radius;

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x12FEA18", Offset = "0x12FEA18", VA = "0x12FEA18")]
			public BestFitSphere(Vector3 center, float radius)
			{
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x12FE2C4", Offset = "0x12FE2C4", VA = "0x12FE2C4")]
		private BestFitSphere CalculateBestFitSphere(List<Vector3> localVertices)
		{
			return default(BestFitSphere);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x12FEA24", Offset = "0x12FEA24", VA = "0x12FEA24")]
		public BoxColliderData CalculateBox(List<Vector3> worldVertices, Transform attachTo, bool isRotated = false)
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x12FEF74", Offset = "0x12FEF74", VA = "0x12FEF74")]
		public BoxColliderData CalculateBoxLocal(List<Vector3> vertices)
		{
			return null;
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x12FF1D4", Offset = "0x12FF1D4", VA = "0x12FF1D4")]
		public CapsuleColliderData CalculateCapsuleBestFit(List<Vector3> worldVertices, Transform attachTo, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x12FF5D0", Offset = "0x12FF5D0", VA = "0x12FF5D0")]
		public CapsuleColliderData CalculateCapsuleBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x12FF818", Offset = "0x12FF818", VA = "0x12FF818")]
		public CapsuleColliderData CalculateCapsuleMinMax(List<Vector3> worldVertices, Transform attachTo, CAPSULE_COLLIDER_METHOD method, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x12FFC00", Offset = "0x12FFC00", VA = "0x12FFC00")]
		public CapsuleColliderData CalculateCapsuleMinMaxLocal(List<Vector3> localVertices, CAPSULE_COLLIDER_METHOD method)
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x1300004", Offset = "0x1300004", VA = "0x1300004")]
		public MeshColliderData CalculateCylinderCollider(List<Vector3> worldVertices, Transform attachTo, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x130067C", Offset = "0x130067C", VA = "0x130067C")]
		public MeshColliderData CalculateCylinderColliderLocal(List<Vector3> vertices, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1300784", Offset = "0x1300784", VA = "0x1300784")]
		public MeshColliderData CalculateMeshColliderQuickHullLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x130084C", Offset = "0x130084C", VA = "0x130084C")]
		public SphereColliderData CalculateSphereBestFit(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1300920", Offset = "0x1300920", VA = "0x1300920")]
		public SphereColliderData CalculateSphereBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x13009C8", Offset = "0x13009C8", VA = "0x13009C8")]
		public SphereColliderData CalculateSphereDistance(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1300A9C", Offset = "0x1300A9C", VA = "0x1300A9C")]
		public SphereColliderData CalculateSphereDistanceLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1301054", Offset = "0x1301054", VA = "0x1301054")]
		public SphereColliderData CalculateSphereMinMax(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x1301128", Offset = "0x1301128", VA = "0x1301128")]
		public SphereColliderData CalculateSphereMinMaxLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1301570", Offset = "0x1301570", VA = "0x1301570")]
		private BoxCollider CreateBoxCollider(BoxColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x13016E8", Offset = "0x13016E8", VA = "0x13016E8")]
		public BoxCollider CreateBoxCollider(List<Vector3> vertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1301ADC", Offset = "0x1301ADC", VA = "0x1301ADC")]
		private CapsuleCollider CreateCapsuleCollider(CapsuleColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x1301BB4", Offset = "0x1301BB4", VA = "0x1301BB4")]
		public CapsuleCollider CreateCapsuleCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x1301D04", Offset = "0x1301D04", VA = "0x1301D04")]
		public CapsuleCollider CreateCapsuleCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, CAPSULE_COLLIDER_METHOD method, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x1301E7C", Offset = "0x1301E7C", VA = "0x1301E7C")]
		public MeshCollider CreateConvexMeshCollider(Mesh mesh, GameObject attachToObject, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1301F2C", Offset = "0x1301F2C", VA = "0x1301F2C")]
		private SphereCollider CreateSphereCollider(SphereColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1301FE4", Offset = "0x1301FE4", VA = "0x1301FE4")]
		public SphereCollider CreateSphereCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x130208C", Offset = "0x130208C", VA = "0x130208C")]
		public SphereCollider CreateSphereCollider_Distance(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1302134", Offset = "0x1302134", VA = "0x1302134")]
		public SphereCollider CreateSphereCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1300158", Offset = "0x1300158", VA = "0x1300158")]
		public List<Vector3> CalculateCylinderPointsLocal(List<Vector3> vertices, Transform attachTo, int numberOfSides, CYLINDER_ORIENTATION orientation, float cylinderOffset)
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1301894", Offset = "0x1301894", VA = "0x1301894")]
		private GameObject CreateGameObjectOrientation(List<Vector3> worldVertices, GameObject parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1302204", Offset = "0x1302204", VA = "0x1302204")]
		private void DebugDrawPoint(Vector3 worldLoc, Color color)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x130162C", Offset = "0x130162C", VA = "0x130162C")]
		private void SetPropertiesOnCollider(Collider collider, EasyColliderProperties properties)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x12FEE10", Offset = "0x12FEE10", VA = "0x12FEE10")]
		private List<Vector3> ToLocalVerts(Transform transform, List<Vector3> worldVertices)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1302508", Offset = "0x1302508", VA = "0x1302508")]
		public EasyColliderCreator()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class EasyColliderData
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CREATE_COLLIDER_TYPE ColliderType;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsValid;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 Matrix;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x12FE1C8", Offset = "0x12FE1C8", VA = "0x12FE1C8")]
		public void Clone(EasyColliderData data)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x12FE214", Offset = "0x12FE214", VA = "0x12FE214")]
		public EasyColliderData()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class SphereColliderData : EasyColliderData
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Radius;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 Center;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x12FE258", Offset = "0x12FE258", VA = "0x12FE258")]
		public void Clone(SphereColliderData data)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x12FE2BC", Offset = "0x12FE2BC", VA = "0x12FE2BC")]
		public SphereColliderData()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class CapsuleColliderData : SphereColliderData
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Direction;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Height;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x12FE21C", Offset = "0x12FE21C", VA = "0x12FE21C")]
		public void Clone(CapsuleColliderData data)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x12FE2B4", Offset = "0x12FE2B4", VA = "0x12FE2B4")]
		public CapsuleColliderData()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class BoxColliderData : EasyColliderData
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 Center;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 Size;

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x12FE164", Offset = "0x12FE164", VA = "0x12FE164")]
		public void Clone(BoxColliderData data)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x12FE20C", Offset = "0x12FE20C", VA = "0x12FE20C")]
		public BoxColliderData()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class MeshColliderData : EasyColliderData
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh ConvexMesh;

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x1308F80", Offset = "0x1308F80", VA = "0x1308F80")]
		public void Clone(MeshColliderData data)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x1300150", Offset = "0x1300150", VA = "0x1300150")]
		public MeshColliderData()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public enum NORMAL_OFFSET
	{
		[Token(Token = "0x4000D5A")]
		Out,
		[Token(Token = "0x4000D5B")]
		In,
		[Token(Token = "0x4000D5C")]
		Both
	}
	[Token(Token = "0x2000368")]
	public enum CAPSULE_COLLIDER_METHOD
	{
		[Token(Token = "0x4000D5E")]
		BestFit,
		[Token(Token = "0x4000D5F")]
		MinMax,
		[Token(Token = "0x4000D60")]
		MinMaxPlusRadius,
		[Token(Token = "0x4000D61")]
		MinMaxPlusDiameter
	}
	[Token(Token = "0x2000369")]
	public enum CREATE_COLLIDER_TYPE
	{
		[Token(Token = "0x4000D63")]
		BOX,
		[Token(Token = "0x4000D64")]
		ROTATED_BOX,
		[Token(Token = "0x4000D65")]
		SPHERE,
		[Token(Token = "0x4000D66")]
		CAPSULE,
		[Token(Token = "0x4000D67")]
		ROTATED_CAPSULE,
		[Token(Token = "0x4000D68")]
		CONVEX_MESH,
		[Token(Token = "0x4000D69")]
		CYLINDER
	}
	[Token(Token = "0x200036A")]
	public enum COLLIDER_ORIENTATION
	{
		[Token(Token = "0x4000D6B")]
		NORMAL,
		[Token(Token = "0x4000D6C")]
		ROTATED
	}
	[Token(Token = "0x200036B")]
	public enum CYLINDER_ORIENTATION
	{
		[Token(Token = "0x4000D6E")]
		Automatic,
		[Token(Token = "0x4000D6F")]
		LocalX,
		[Token(Token = "0x4000D70")]
		LocalY,
		[Token(Token = "0x4000D71")]
		LocalZ
	}
	[Token(Token = "0x200036C")]
	public enum GIZMO_TYPE
	{
		[Token(Token = "0x4000D73")]
		CUBE,
		[Token(Token = "0x4000D74")]
		SPHERE
	}
	[Token(Token = "0x200036D")]
	public enum RENDER_POINT_TYPE
	{
		[Token(Token = "0x4000D76")]
		SHADER,
		[Token(Token = "0x4000D77")]
		GIZMOS
	}
	[Token(Token = "0x200036E")]
	public enum SKINNED_MESH_COLLIDER_TYPE
	{
		[Token(Token = "0x4000D79")]
		Box,
		[Token(Token = "0x4000D7A")]
		Capsule,
		[Token(Token = "0x4000D7B")]
		Sphere,
		[Token(Token = "0x4000D7C")]
		Convex_Mesh
	}
	[Token(Token = "0x200036F")]
	public enum SPHERE_COLLIDER_METHOD
	{
		[Token(Token = "0x4000D7E")]
		BestFit,
		[Token(Token = "0x4000D7F")]
		Distance,
		[Token(Token = "0x4000D80")]
		MinMax
	}
	[Token(Token = "0x2000370")]
	public enum VHACD_CONVERSION
	{
		[Token(Token = "0x4000D82")]
		None,
		[Token(Token = "0x4000D83")]
		Boxes,
		[Token(Token = "0x4000D84")]
		Spheres,
		[Token(Token = "0x4000D85")]
		Capsules
	}
	[Token(Token = "0x2000371")]
	public enum MESH_COLLIDER_METHOD
	{
		[Token(Token = "0x4000D87")]
		QuickHull,
		[Token(Token = "0x4000D88")]
		MessyHull
	}
	[Token(Token = "0x2000372")]
	public enum VERTEX_SNAP_METHOD
	{
		[Token(Token = "0x4000D8A")]
		Add,
		[Token(Token = "0x4000D8B")]
		Remove,
		[Token(Token = "0x4000D8C")]
		Both
	}
	[Token(Token = "0x2000373")]
	public enum VHACD_RESULT_METHOD
	{
		[Token(Token = "0x4000D8E")]
		AttachTo,
		[Token(Token = "0x4000D8F")]
		ChildObject,
		[Token(Token = "0x4000D90")]
		IndividualChildObjects
	}
	[Token(Token = "0x2000374")]
	public enum ECE_WINDOW_TAB
	{
		[Token(Token = "0x4000D92")]
		None = -1,
		[Token(Token = "0x4000D93")]
		Creation,
		[Token(Token = "0x4000D94")]
		Editing,
		[Token(Token = "0x4000D95")]
		VHACD,
		[Token(Token = "0x4000D96")]
		AutoSkinned
	}
	[Token(Token = "0x2000375")]
	public enum COLLIDER_HOLDER
	{
		[Token(Token = "0x4000D98")]
		Default,
		[Token(Token = "0x4000D99")]
		Once,
		[Token(Token = "0x4000D9A")]
		Always
	}
	[Token(Token = "0x2000376")]
	public struct EasyColliderProperties
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsTrigger;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Layer;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public COLLIDER_ORIENTATION Orientation;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject AttachTo;

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x1302510", Offset = "0x1302510", VA = "0x1302510")]
		public EasyColliderProperties(bool isTrigger, int layer, PhysicMaterial physicMaterial, GameObject attachTo, COLLIDER_ORIENTATION orientation = COLLIDER_ORIENTATION.NORMAL)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class EasyColliderQuickHull
	{
		[Token(Token = "0x200045E")]
		private class Face
		{
			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int F0;

			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int F1;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int F2;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Normal;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool OnConvexHull;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> OutsideVertices;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int V0;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int V1;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int V2;

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x130756C", Offset = "0x130756C", VA = "0x130756C")]
			public Face(int v0, int v1, int v2, Vector3 normal, int f0, int f1, int f2)
			{
			}
		}

		[Token(Token = "0x200045F")]
		private class Horizon
		{
			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Face;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int From;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool OnConvexHull;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int V0;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int V1;

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x1304CF0", Offset = "0x1304CF0", VA = "0x1304CF0")]
			public Horizon(int v0, int v1, int face, int from)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F038", Offset = "0xE1F038")]
		private sealed class <>c
		{
			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Face, bool> <>9__33_0;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Horizon, bool> <>9__43_0;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Horizon, bool> <>9__43_1;

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x1308C4C", Offset = "0x1308C4C", VA = "0x1308C4C")]
			public <>c()
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1308C54", Offset = "0x1308C54", VA = "0x1308C54")]
			internal bool <CreateMesh>b__33_0(Face face)
			{
				return default(bool);
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x1308C6C", Offset = "0x1308C6C", VA = "0x1308C6C")]
			internal bool <GenerateHull>b__43_0(Horizon item)
			{
				return default(bool);
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x1308C84", Offset = "0x1308C84", VA = "0x1308C84")]
			internal bool <GenerateHull>b__43_1(Horizon item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE1F048", Offset = "0xE1F048")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> ips;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<int> <>9__0;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<int> <>9__1;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Predicate<int> <>9__2;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Predicate<int> <>9__3;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Predicate<int> <>9__4;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Predicate<int> <>9__5;

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x130764C", Offset = "0x130764C", VA = "0x130764C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x1308C9C", Offset = "0x1308C9C", VA = "0x1308C9C")]
			internal bool <FindInitialPointsFallBack>b__0(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x1308D14", Offset = "0x1308D14", VA = "0x1308D14")]
			internal bool <FindInitialPointsFallBack>b__1(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x1308D90", Offset = "0x1308D90", VA = "0x1308D90")]
			internal bool <FindInitialPointsFallBack>b__2(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x1308E0C", Offset = "0x1308E0C", VA = "0x1308E0C")]
			internal bool <FindInitialPointsFallBack>b__3(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x1308E88", Offset = "0x1308E88", VA = "0x1308E88")]
			internal bool <FindInitialPointsFallBack>b__4(int element)
			{
				return default(bool);
			}

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x1308F04", Offset = "0x1308F04", VA = "0x1308F04")]
			internal bool <FindInitialPointsFallBack>b__5(int element)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DebugHorizon;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color DebugHorizonColor;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DebugLoopNumber;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DebugMaxLoopNumber;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DebugNewFaces;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool DebugNormals;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool DebugOutsideSet;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color DebugNormalColor;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DrawTime;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<int> AssignedVertices;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<int> ClosedVertices;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Horizon> CurrentHorizon;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float Epsilon;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Face> Faces;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> NewFaces;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh Result;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<int> UnAssignedVertices;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> VerticesList;

		[Token(Token = "0x170000B1")]
		public bool isFinished
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x1307668", Offset = "0x1307668", VA = "0x1307668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x130060C", Offset = "0x130060C", VA = "0x130060C")]
		public static EasyColliderQuickHull CalculateHull(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1302CAC", Offset = "0x1302CAC", VA = "0x1302CAC")]
		public static EasyColliderQuickHull CalculateHullWorld(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x1302E30", Offset = "0x1302E30", VA = "0x1302E30")]
		public static MeshColliderData CalculateHullData(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1302F38", Offset = "0x1302F38", VA = "0x1302F38")]
		public static MeshColliderData CalculateHullData(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1302FCC", Offset = "0x1302FCC", VA = "0x1302FCC")]
		private void AddToOutsideSet(Face face, HashSet<int> vertices)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x13034F8", Offset = "0x13034F8", VA = "0x13034F8")]
		private bool AreVertsCoincident(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x13035F0", Offset = "0x13035F0", VA = "0x13035F0")]
		private bool AreVertsCoincident(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x130381C", Offset = "0x130381C", VA = "0x130381C")]
		private void CloseUnAssignedVertsOnFaces()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1303404", Offset = "0x1303404", VA = "0x1303404")]
		private bool IsVertOnFace(int i, Face face)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1303D8C", Offset = "0x1303D8C", VA = "0x1303D8C")]
		private Vector3 CalcNormal(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1303EBC", Offset = "0x1303EBC", VA = "0x1303EBC")]
		private Vector3 CalcNormal(int a, int b, int c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1303B14", Offset = "0x1303B14", VA = "0x1303B14")]
		private float CalcTriangleArea(int v0, int v1, int v2)
		{
			return default(float);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x13040AC", Offset = "0x13040AC", VA = "0x13040AC")]
		private void CalculateHorizon(int eyePoint, Horizon crossedEdge, int currFace, bool firstFace = true)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1304D44", Offset = "0x1304D44", VA = "0x1304D44")]
		private Mesh CreateMesh(List<Face> allFaces)
		{
			return null;
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x13055B0", Offset = "0x13055B0", VA = "0x13055B0")]
		private float DistanceFromLine(Vector3 point, Vector3 line, Vector3 pointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x13056C8", Offset = "0x13056C8", VA = "0x13056C8")]
		private float DistanceFromPlane(Vector3 point, Plane p)
		{
			return default(float);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x13032B0", Offset = "0x13032B0", VA = "0x13032B0")]
		private float DistanceFromPlane(Vector3 point, Vector3 normal, Vector3 pointOnPlane)
		{
			return default(float);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x13056F4", Offset = "0x13056F4", VA = "0x13056F4")]
		private bool FindInitialHull(List<Vector3> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x1306C1C", Offset = "0x1306C1C", VA = "0x1306C1C")]
		private bool FindInitialPointsFallBack(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x13065FC", Offset = "0x13065FC", VA = "0x13065FC")]
		private bool FindInitialPoints(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x13076D8", Offset = "0x13076D8", VA = "0x13076D8")]
		private void CalculateEpsilon(List<Vector3> points)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x13026F4", Offset = "0x13026F4", VA = "0x13026F4")]
		public void GenerateHull(List<Vector3> points)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x130799C", Offset = "0x130799C", VA = "0x130799C")]
		private int GetFurthestPointFromFace(int faceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x13078F0", Offset = "0x13078F0", VA = "0x13078F0")]
		private int GetNonEmptyFaceIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1307D70", Offset = "0x1307D70", VA = "0x1307D70")]
		private bool HaveNonEmptyFaceSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1307558", Offset = "0x1307558", VA = "0x1307558")]
		private bool isAGreaterThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x1307654", Offset = "0x1307654", VA = "0x1307654")]
		private bool isALessThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x1303D0C", Offset = "0x1303D0C", VA = "0x1303D0C")]
		private bool isApproxEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1303388", Offset = "0x1303388", VA = "0x1303388")]
		private bool IsApproxZero(float a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x1307BCC", Offset = "0x1307BCC", VA = "0x1307BCC")]
		private void UpdateFace(Horizon horizon, int newFace)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x1307E84", Offset = "0x1307E84", VA = "0x1307E84")]
		private Vector3 CalcFaceCenter(Face face)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1308004", Offset = "0x1308004", VA = "0x1308004")]
		private void DebugInitialPoints(List<Vector3> points, List<int> initialPoints)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x13081E8", Offset = "0x13081E8", VA = "0x13081E8")]
		private void DrawFace(int face, Color color, float size = 0.08f)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1308668", Offset = "0x1308668", VA = "0x1308668")]
		private void DrawFaceConnections(int face)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1308804", Offset = "0x1308804", VA = "0x1308804")]
		private void DrawFaceNormal(Face face, Color color, float distance = 1f)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1308974", Offset = "0x1308974", VA = "0x1308974")]
		private void ForceUpdateFace(int faceIndex)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1308B60", Offset = "0x1308B60", VA = "0x1308B60")]
		private Color RandomColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x130837C", Offset = "0x130837C", VA = "0x130837C")]
		private void DrawPoint(Vector3 point, Color color, float size = 0.05f)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x130252C", Offset = "0x130252C", VA = "0x130252C")]
		public EasyColliderQuickHull()
		{
		}
	}
}
