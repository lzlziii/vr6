using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using BezierSolution;
using DG.Tweening;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using GameAnalyticsSDK;
using GameAnalyticsSDK.Events;
using GameAnalyticsSDK.Setup;
using GameQuest;
using GoogleSheetsDataStructures;
using GoogleSheetsForUnity;
using Humans;
using Il2CppDummyDll;
using MIConvexHull;
using NWH;
using SRDebugger;
using Sound;
using Stacked;
using TMPro;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using Water;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000003")]
public class Vertex : IVertex
{
	[Token(Token = "0x17000003")]
	public double[] Position
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0xA40350", Offset = "0xA40350", VA = "0xA40350", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000008")]
		[Address(RVA = "0xA40358", Offset = "0xA40358", VA = "0xA40358")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xA40360", Offset = "0xA40360", VA = "0xA40360")]
	public Vertex(double x, double y, double z)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xA40410", Offset = "0xA40410", VA = "0xA40410")]
	public Vertex(Vector3 ver)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xA404CC", Offset = "0xA404CC", VA = "0xA404CC")]
	public Vector3 ToVec()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class CenterOfMass : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 centerOfMass;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 centerOfMassOffset;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetCOM;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rb;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool showCOM;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool deactivateOnGrab;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool deactivateInsideWater;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool invertDeactivateInsideWater;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isGrabbed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool manualRB;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabbable grabbable;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xA40514", Offset = "0xA40514", VA = "0xA40514")]
	[ContextMenu("Reset COM")]
	private void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xA40530", Offset = "0xA40530", VA = "0xA40530")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xA4079C", Offset = "0xA4079C", VA = "0xA4079C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xA408E0", Offset = "0xA408E0", VA = "0xA408E0")]
	public void SetNewCOM(Vector3 _com)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xA40960", Offset = "0xA40960", VA = "0xA40960")]
	public void OnWaterStatusChange(GameObject _go, bool _which)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xA40A58", Offset = "0xA40A58", VA = "0xA40A58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xA406DC", Offset = "0xA406DC", VA = "0xA406DC")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xA40B9C", Offset = "0xA40B9C", VA = "0xA40B9C")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xA40C78", Offset = "0xA40C78", VA = "0xA40C78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xA40DA0", Offset = "0xA40DA0", VA = "0xA40DA0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xA40E7C", Offset = "0xA40E7C", VA = "0xA40E7C")]
	public CenterOfMass()
	{
	}
}
[Token(Token = "0x2000005")]
public class BuoyTri
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 center;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 normal;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToSurface;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float area;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 velocity;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float velocityMagnitude;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 u;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 v;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 crossUV;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float crossMagnitude;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 velocityNormalized;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float dotNormalVelocityNormal;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float velocityMagTimesDot;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 dynamicForce;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 buoyantForce;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 resultantForce;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 p1;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 p2;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 p3;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool atSurface;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 gravityDir;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float resistance;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float upDot;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float fa;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xA40EE4", Offset = "0xA40EE4", VA = "0xA40EE4")]
	public static float Dot(Vector3 lhs, Vector3 rhs)
	{
		return default(float);
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xA40EFC", Offset = "0xA40EFC", VA = "0xA40EFC")]
	public void Set(Vector3 p1, Vector3 p2, Vector3 p3, FloatingObject fo, int atSurface)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xA412A8", Offset = "0xA412A8", VA = "0xA412A8")]
	public BuoyTri()
	{
	}
}
[Token(Token = "0x2000006")]
public class MeshUtils
{
	[Token(Token = "0x600001A")]
	[Address(RVA = "0xA412B0", Offset = "0xA412B0", VA = "0xA412B0")]
	public static Mesh RasterizeMesh(Mesh oMesh, int resolution)
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xA41D7C", Offset = "0xA41D7C", VA = "0xA41D7C")]
	public static Mesh GenerateMesh(List<Vert> verts, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xA4169C", Offset = "0xA4169C", VA = "0xA4169C")]
	public static List<Vert> GetVerts(Mesh oMesh)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xA418C4", Offset = "0xA418C4", VA = "0xA418C4")]
	public static List<Tri> GetTris(Mesh oMesh, List<Vert> verts)
	{
		return null;
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xA42544", Offset = "0xA42544", VA = "0xA42544")]
	public static List<Vert> CollapseVert(Vert replaceWithVert, Vert replaceVert, List<Tri> tris, List<Vert> verts)
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xA42B44", Offset = "0xA42B44", VA = "0xA42B44")]
	public static List<List<int>> TrianglesContainingVert(Vert u, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xA42838", Offset = "0xA42838", VA = "0xA42838")]
	public static List<int> TrianglesContainingVerts(Vert u, Vert v, List<Tri> tris)
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xA41B08", Offset = "0xA41B08", VA = "0xA41B08")]
	public static void RemoveDuplicateVerts(List<Tri> tris, List<Vert> verts)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xA42E38", Offset = "0xA42E38", VA = "0xA42E38")]
	public MeshUtils()
	{
	}
}
[Token(Token = "0x2000008")]
public class Vert
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 pos;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 normal;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool deleted;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cost;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int cheapestNeighbor;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vert> neighbors;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xA42270", Offset = "0xA42270", VA = "0xA42270")]
	public Vert(int id, Vector3 pos, Vector3 normal)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xA42E98", Offset = "0xA42E98", VA = "0xA42E98")]
	public static List<Vert> FindNeighbors(Vert v, List<Vert> verts, List<Tri> tris)
	{
		return null;
	}
}
[Token(Token = "0x200000A")]
public class Tri
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Vert> vs;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 normal;

	[Token(Token = "0x17000004")]
	public List<Vert> verts
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xA4318C", Offset = "0xA4318C", VA = "0xA4318C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xA43194", Offset = "0xA43194", VA = "0xA43194")]
		set
		{
		}
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xA4334C", Offset = "0xA4334C", VA = "0xA4334C")]
	public Tri()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xA43354", Offset = "0xA43354", VA = "0xA43354")]
	public Tri(List<Vert> verts)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xA42348", Offset = "0xA42348", VA = "0xA42348")]
	public Tri(Vert v0, Vert v1, Vert v2)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xA433A8", Offset = "0xA433A8", VA = "0xA433A8")]
	public bool HasVertex(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xA431BC", Offset = "0xA431BC", VA = "0xA431BC")]
	public Vector3 ComputeNormal()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200000B")]
public class WaterLine
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 p0;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 p1;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuoyTri tri;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xA43464", Offset = "0xA43464", VA = "0xA43464")]
	public WaterLine(Vector3 p0, Vector3 p1, BuoyTri tri)
	{
	}
}
[Token(Token = "0x200000C")]
[AddComponentMenu("Rendering/SetRenderQueue")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int queue;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xA434D0", Offset = "0xA434D0", VA = "0xA434D0")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xA43578", Offset = "0xA43578", VA = "0xA43578")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x200000D")]
public class WaterParticle
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float initTime;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeToLive;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform t;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer mr;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mat;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 initialVelocity;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 initialScale;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color initialColor;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float initialAlpha;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xA43580", Offset = "0xA43580", VA = "0xA43580")]
	public WaterParticle()
	{
	}
}
[Token(Token = "0x200000E")]
public class FloatingObject : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	public enum FLOATTYPE
	{
		[Token(Token = "0x4000099")]
		regularFloat,
		[Token(Token = "0x400009A")]
		barelyFloat,
		[Token(Token = "0x400009B")]
		slowSink,
		[Token(Token = "0x400009C")]
		quickSink,
		[Token(Token = "0x400009D")]
		prettyFloaty,
		[Token(Token = "0x400009E")]
		superFloaty,
		[Token(Token = "0x400009F")]
		superSlowSink,
		[Token(Token = "0x40000A0")]
		mediumSink,
		[Token(Token = "0x40000A1")]
		mediumFloat,
		[Token(Token = "0x40000A2")]
		veryFloaty
	}

	[Token(Token = "0x2000010")]
	public delegate float GetWaterHeightAtPoint(float x, float z);

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public FLOATTYPE floatType;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<FLOATTYPE, float> floatTypeFactors;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public float secondsToFloat;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float timeToFullSink;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Rigidbody rb;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform t;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh originalMesh;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh dummyMesh;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int[] dummyMeshTris;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3[] dummyMeshVerts;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int dummyMeshTriCount;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int dummyMeshVertCount;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public int skipStep;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BuoyTri[] underwaterTris;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int underwaterTriCount;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool isTouchingWater;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public float dynamicForceFactor;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	public float fluidDensity;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GetWaterHeightAtPoint WaterHeightFunction;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject water;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public float upFactor;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	public bool manualUpfactor;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool simulate;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sleepPositionTreshold;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sleepAngleTreshold;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool sleep;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int sleepMax;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool wakeUpCall;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 rbSleepPosition;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 rbSleepUp;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 meshSize;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float meshVolume;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float materialDensity;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float materialMass;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	public bool sleepEnabled;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3[] objVerticesGlobal;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] distancesToSurface;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VertexData vd0;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private VertexData vd1;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private VertexData vd2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 H;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 M;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 L;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 I_M;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 I_L;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 J_M;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 J_H;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float h_H;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float h_M;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float h_L;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int M_index;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private VertexData[] sortedData;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float waterY;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 globalPos;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool disable;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int totalRBColliders;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float floatTimer;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool forceSink;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float originalUpfactor;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private FloatRigidbody floatRigidbody;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int simMin;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public bool timerSinking;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float surfaceOffset;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool surfaceOffsetSet;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	public bool waterHeightOptimize;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int sleepStepsCheck;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<GameObject> wgos;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaterInterface generalWaterInterface;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static FloatingObject myFloatRef;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float fSink;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float distanceDiff;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float angleDiff;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float thisVolume;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float volumeFactor;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int cnt;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int reg;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool lastTouchingWater;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float distanceToWater;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int inWaterBeforeSkip;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int cntStartStore;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int waterChecks;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool debugThis;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Transform manualWaterSurface;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool useManualSurface;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Vector3 waterforce;

	[Token(Token = "0x17000005")]
	public Rigidbody TargetRigidbody
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xA43588", Offset = "0xA43588", VA = "0xA43588")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xA43590", Offset = "0xA43590", VA = "0xA43590")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Transform TargetTransform
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xA43598", Offset = "0xA43598", VA = "0xA43598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xA435A0", Offset = "0xA435A0", VA = "0xA435A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Mesh OriginalMesh
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0xA435A8", Offset = "0xA435A8", VA = "0xA435A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003A")]
		[Address(RVA = "0xA435B0", Offset = "0xA435B0", VA = "0xA435B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public Mesh DummyMesh
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xA435B8", Offset = "0xA435B8", VA = "0xA435B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xA435C0", Offset = "0xA435C0", VA = "0xA435C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float FluidDensity
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xA435C8", Offset = "0xA435C8", VA = "0xA435C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xA435D0", Offset = "0xA435D0", VA = "0xA435D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool IsTouchingWater
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xA435D8", Offset = "0xA435D8", VA = "0xA435D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0xA435E0", Offset = "0xA435E0", VA = "0xA435E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float DynamicForceFactor
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xA435EC", Offset = "0xA435EC", VA = "0xA435EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xA435F4", Offset = "0xA435F4", VA = "0xA435F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float MaterialDensity
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xA435FC", Offset = "0xA435FC", VA = "0xA435FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xA43604", Offset = "0xA43604", VA = "0xA43604")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float MaterialMass
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0xA4360C", Offset = "0xA4360C", VA = "0xA4360C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xA43614", Offset = "0xA43614", VA = "0xA43614")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float MeshVolume
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xA4361C", Offset = "0xA4361C", VA = "0xA4361C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xA43624", Offset = "0xA43624", VA = "0xA43624")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public bool ReuseForces
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xA4362C", Offset = "0xA4362C", VA = "0xA4362C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xA43634", Offset = "0xA43634", VA = "0xA43634")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float ReusePositionTreshold
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xA43640", Offset = "0xA43640", VA = "0xA43640")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0xA43648", Offset = "0xA43648", VA = "0xA43648")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ReuseAngleTreshold
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xA43650", Offset = "0xA43650", VA = "0xA43650")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xA43658", Offset = "0xA43658", VA = "0xA43658")]
		set
		{
		}
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xA43660", Offset = "0xA43660", VA = "0xA43660")]
	private void MeshCheck()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xA43760", Offset = "0xA43760", VA = "0xA43760")]
	public void SetStartSkipCount(int _which)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xA4376C", Offset = "0xA4376C", VA = "0xA4376C")]
	public static void WakeUp()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA437C8", Offset = "0xA437C8", VA = "0xA437C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA43820", Offset = "0xA43820", VA = "0xA43820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xA44314", Offset = "0xA44314", VA = "0xA44314")]
	public void FloatRBWaterChange(bool _which)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xA44334", Offset = "0xA44334", VA = "0xA44334")]
	public void SetManualWaterSurface(bool isTrue, Transform _manualSurface)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xA44368", Offset = "0xA44368", VA = "0xA44368")]
	private float WaterHeightOverride(float _x, float _y)
	{
		return default(float);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xA44470", Offset = "0xA44470", VA = "0xA44470")]
	public void AdjustUpfactor(int _totalRBColliders, float _totalVolume)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xA44510", Offset = "0xA44510", VA = "0xA44510")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xA41270", Offset = "0xA41270", VA = "0xA41270")]
	public float GetDistanceToSurface(Vector3 p, GetWaterHeightAtPoint waterHeight)
	{
		return default(float);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xA454FC", Offset = "0xA454FC", VA = "0xA454FC")]
	public bool PointInWater(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xA44E98", Offset = "0xA44E98", VA = "0xA44E98")]
	private BuoyTri[] GenerateSplitMesh()
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xA45518", Offset = "0xA45518", VA = "0xA45518")]
	private void TwoUnderWater(VertexData[] vertexData)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xA4577C", Offset = "0xA4577C", VA = "0xA4577C")]
	private void OneUnderWater(VertexData[] vertexData)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xA45950", Offset = "0xA45950", VA = "0xA45950")]
	public float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(float);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xA441A0", Offset = "0xA441A0", VA = "0xA441A0")]
	public float VolumeOfMesh(Mesh mesh)
	{
		return default(float);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xA459AC", Offset = "0xA459AC", VA = "0xA459AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xA45A34", Offset = "0xA45A34", VA = "0xA45A34")]
	public FloatingObject()
	{
	}
}
[Token(Token = "0x2000011")]
[ExecuteInEditMode]
[RequireComponent(typeof(Rigidbody))]
public class MassFromChildren : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FloatingObject[] fos;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xA45D70", Offset = "0xA45D70", VA = "0xA45D70")]
	public void Calculate()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xA45EF8", Offset = "0xA45EF8", VA = "0xA45EF8")]
	public MassFromChildren()
	{
	}
}
[Token(Token = "0x2000012")]
public class WaterInterface : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	public enum WATER
	{
		[Token(Token = "0x40000B8")]
		regular,
		[Token(Token = "0x40000B9")]
		darkWaves,
		[Token(Token = "0x40000BA")]
		night,
		[Token(Token = "0x40000BB")]
		black,
		[Token(Token = "0x40000BC")]
		stormy,
		[Token(Token = "0x40000BD")]
		stormySlower,
		[Token(Token = "0x40000BE")]
		nightLessAmplitude,
		[Token(Token = "0x40000BF")]
		none,
		[Token(Token = "0x40000C0")]
		stormyLessAmplitude,
		[Token(Token = "0x40000C1")]
		nightBlue,
		[Token(Token = "0x40000C2")]
		sunnyFlat,
		[Token(Token = "0x40000C3")]
		stormyViolet
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _Height;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _Length;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _Stretch;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _Speed;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _Scale;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector4 _Direction;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform waterTrigger;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float highestWave;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currentY;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 waterPos;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 origWaterPos;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] LPWSets;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WATER currentWater;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WaterPreset preset;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int waterInt;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float offset;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaterInterface _instance;

	[Token(Token = "0x17000012")]
	public static WaterInterface Instance
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xA43F64", Offset = "0xA43F64", VA = "0xA43F64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xA45F00", Offset = "0xA45F00", VA = "0xA45F00")]
	public void SetWater(int _whichWater)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xA460F4", Offset = "0xA460F4", VA = "0xA460F4")]
	public void SetWater(WATER _whichWater)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xA460F8", Offset = "0xA460F8", VA = "0xA460F8")]
	public void ToggleWaterRendering()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA4614C", Offset = "0xA4614C", VA = "0xA4614C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA460A4", Offset = "0xA460A4", VA = "0xA460A4")]
	public void Init()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA4443C", Offset = "0xA4443C", VA = "0xA4443C")]
	public float GetWaterHeightAtLocationLPW(float x, float z)
	{
		return default(float);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA461C8", Offset = "0xA461C8", VA = "0xA461C8")]
	public void ResetTriggerToWater()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA461D0", Offset = "0xA461D0", VA = "0xA461D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xA46218", Offset = "0xA46218", VA = "0xA46218")]
	public WaterInterface()
	{
	}
}
[Token(Token = "0x2000014")]
public class FadeController : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	private static class Uniform
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Fade;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int Color;
	}

	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <AnimateFadeTo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeController <>4__this;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color to;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onFinish;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startFade>5__2;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color <startColor>5__3;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeDelta>5__4;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <lastTime>5__5;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <t>5__6;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0xA46A64", Offset = "0xA46A64", VA = "0xA46A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0xA46AAC", Offset = "0xA46AAC", VA = "0xA46AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xA46530", Offset = "0xA46530", VA = "0xA46530")]
		[DebuggerHidden]
		public <AnimateFadeTo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xA46838", Offset = "0xA46838", VA = "0xA46838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xA4683C", Offset = "0xA4683C", VA = "0xA4683C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xA46A6C", Offset = "0xA46A6C", VA = "0xA46A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <AnimateFade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeController <>4__this;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float from;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float to;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action onFinish;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0xA46BB8", Offset = "0xA46BB8", VA = "0xA46BB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0xA46C00", Offset = "0xA46C00", VA = "0xA46C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xA4676C", Offset = "0xA4676C", VA = "0xA4676C")]
		[DebuggerHidden]
		public <AnimateFade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xA46AB4", Offset = "0xA46AB4", VA = "0xA46AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xA46AB8", Offset = "0xA46AB8", VA = "0xA46AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0xA46BC0", Offset = "0xA46BC0", VA = "0xA46BC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color testColor;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine fadeAnimation;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xA46220", Offset = "0xA46220", VA = "0xA46220")]
	[ContextMenu("SETFULLFADE")]
	private void SetFadeFull()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA462DC", Offset = "0xA462DC", VA = "0xA462DC")]
	[ContextMenu("FadeOut")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA463A4", Offset = "0xA463A4", VA = "0xA463A4")]
	[ContextMenu("FadTo")]
	private void FadeTo()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA46454", Offset = "0xA46454", VA = "0xA46454")]
	public void StopFade()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA463B8", Offset = "0xA463B8", VA = "0xA463B8")]
	public void FadeTo(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA46468", Offset = "0xA46468", VA = "0xA46468")]
	[IteratorStateMachine(typeof(<AnimateFadeTo>d__8))]
	private IEnumerator AnimateFadeTo(Color to, float duration, Action onFinish)
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA46558", Offset = "0xA46558", VA = "0xA46558")]
	public void FadeIn(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA462F8", Offset = "0xA462F8", VA = "0xA462F8")]
	public void FadeOut(Color color, float duration, [Optional] Action onFinish)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA466B8", Offset = "0xA466B8", VA = "0xA466B8")]
	[IteratorStateMachine(typeof(<AnimateFade>d__11))]
	private IEnumerator AnimateFade(float from, float to, float duration, Action onFinish)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA46604", Offset = "0xA46604", VA = "0xA46604")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA46228", Offset = "0xA46228", VA = "0xA46228")]
	public void SetFade(float fade)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA46794", Offset = "0xA46794", VA = "0xA46794")]
	public FadeController()
	{
	}
}
[Token(Token = "0x2000018")]
public class GAFyberIntegration
{
	[Token(Token = "0x600008B")]
	[Address(RVA = "0xA46C08", Offset = "0xA46C08", VA = "0xA46C08")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xA46C0C", Offset = "0xA46C0C", VA = "0xA46C0C")]
	public GAFyberIntegration()
	{
	}
}
[Token(Token = "0x2000019")]
public class GAIronSourceIntegration
{
	[Token(Token = "0x600008D")]
	[Address(RVA = "0xA46C14", Offset = "0xA46C14", VA = "0xA46C14")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xA46C18", Offset = "0xA46C18", VA = "0xA46C18")]
	public GAIronSourceIntegration()
	{
	}
}
[Token(Token = "0x200001A")]
public class GAMaxIntegration
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0xA46C20", Offset = "0xA46C20", VA = "0xA46C20")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xA46C24", Offset = "0xA46C24", VA = "0xA46C24")]
	public GAMaxIntegration()
	{
	}
}
[Token(Token = "0x200001B")]
public class GAMopubIntegration
{
	[Token(Token = "0x6000091")]
	[Address(RVA = "0xA46C2C", Offset = "0xA46C2C", VA = "0xA46C2C")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xA46C30", Offset = "0xA46C30", VA = "0xA46C30")]
	public GAMopubIntegration()
	{
	}
}
[Token(Token = "0x200001C")]
public class GATopOnIntegration
{
	[Token(Token = "0x6000093")]
	[Address(RVA = "0xA46C38", Offset = "0xA46C38", VA = "0xA46C38")]
	public static void ListenForImpressions(Action<string> callback)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xA46C3C", Offset = "0xA46C3C", VA = "0xA46C3C")]
	public GATopOnIntegration()
	{
	}
}
[Token(Token = "0x200001D")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x200001E")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009B")]
			[Address(RVA = "0xA46F10", Offset = "0xA46F10", VA = "0xA46F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600009D")]
			[Address(RVA = "0xA46F58", Offset = "0xA46F58", VA = "0xA46F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0xA46D68", Offset = "0xA46D68", VA = "0xA46D68")]
		[DebuggerHidden]
		public <CheckIfAlive>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0xA46D98", Offset = "0xA46D98", VA = "0xA46D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0xA46D9C", Offset = "0xA46D9C", VA = "0xA46D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xA46F18", Offset = "0xA46F18", VA = "0xA46F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToDeactivate;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xA46C44", Offset = "0xA46C44", VA = "0xA46C44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xA46CF4", Offset = "0xA46CF4", VA = "0xA46CF4")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__3))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xA46D90", Offset = "0xA46D90", VA = "0xA46D90")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200001F")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x600009E")]
	[Address(RVA = "0xA46F60", Offset = "0xA46F60", VA = "0xA46F60")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xA46FF8", Offset = "0xA46FF8", VA = "0xA46FF8")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x2000020")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xA47000", Offset = "0xA47000", VA = "0xA47000")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xA47068", Offset = "0xA47068", VA = "0xA47068")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000021")]
public class CFX_InspectorHelp : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Locked;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Title;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HelpText;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MsgType;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xA47078", Offset = "0xA47078", VA = "0xA47078")]
	[ContextMenu("Unlock editing")]
	private void Unlock()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xA47080", Offset = "0xA47080", VA = "0xA47080")]
	public CFX_InspectorHelp()
	{
	}
}
[Token(Token = "0x2000022")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xA47088", Offset = "0xA47088", VA = "0xA47088")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA470E8", Offset = "0xA470E8", VA = "0xA470E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA47164", Offset = "0xA47164", VA = "0xA47164")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA472C8", Offset = "0xA472C8", VA = "0xA472C8")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000023")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x2000024")]
	[CompilerGenerated]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0xA4751C", Offset = "0xA4751C", VA = "0xA4751C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B0")]
			[Address(RVA = "0xA47564", Offset = "0xA47564", VA = "0xA47564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xA47438", Offset = "0xA47438", VA = "0xA47438")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xA47468", Offset = "0xA47468", VA = "0xA47468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xA4746C", Offset = "0xA4746C", VA = "0xA4746C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xA47524", Offset = "0xA47524", VA = "0xA47524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA472D8", Offset = "0xA472D8", VA = "0xA472D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA473C4", Offset = "0xA473C4", VA = "0xA473C4")]
	[IteratorStateMachine(typeof(<WaitFrame>d__2))]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA47460", Offset = "0xA47460", VA = "0xA47460")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x2000025")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x1700001B")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xA484FC", Offset = "0xA484FC", VA = "0xA484FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA4756C", Offset = "0xA4756C", VA = "0xA4756C")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA47CEC", Offset = "0xA47CEC", VA = "0xA47CEC")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA48098", Offset = "0xA48098", VA = "0xA48098")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA47D54", Offset = "0xA47D54", VA = "0xA47D54")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA480F0", Offset = "0xA480F0", VA = "0xA480F0")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA47B8C", Offset = "0xA47B8C", VA = "0xA47B8C")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xA48550", Offset = "0xA48550", VA = "0xA48550")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA48650", Offset = "0xA48650", VA = "0xA48650")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA486D0", Offset = "0xA486D0", VA = "0xA486D0")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000026")]
public class ButtonTrigger : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string ButtonSound;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent ButtonDown;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent ButtonUp;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ButtonPress;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool InitalActive;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool DoInitCallback;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA4881C", Offset = "0xA4881C", VA = "0xA4881C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA48884", Offset = "0xA48884", VA = "0xA48884")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA48964", Offset = "0xA48964", VA = "0xA48964")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA489E0", Offset = "0xA489E0", VA = "0xA489E0")]
	[ContextMenu("Toggle Button")]
	public void ToggleButton()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xA488F8", Offset = "0xA488F8", VA = "0xA488F8")]
	public void SetButton(bool _which)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xA489F0", Offset = "0xA489F0", VA = "0xA489F0")]
	public ButtonTrigger()
	{
	}
}
[Token(Token = "0x2000027")]
public class CameraToPNG : MonoBehaviour
{
	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resWidth;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int resHeight;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool takeHiResShot;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA489F8", Offset = "0xA489F8", VA = "0xA489F8")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA48C44", Offset = "0xA48C44", VA = "0xA48C44")]
	public void TakeHiResShot()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA48C50", Offset = "0xA48C50", VA = "0xA48C50")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA48E60", Offset = "0xA48E60", VA = "0xA48E60")]
	public CameraToPNG()
	{
	}
}
[Token(Token = "0x2000028")]
public class LeverBehavior : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 OriginalPos;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA48E74", Offset = "0xA48E74", VA = "0xA48E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA48F6C", Offset = "0xA48F6C", VA = "0xA48F6C")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA49018", Offset = "0xA49018", VA = "0xA49018")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA49124", Offset = "0xA49124", VA = "0xA49124")]
	public LeverBehavior()
	{
	}
}
[Token(Token = "0x2000029")]
[CreateAssetMenu(fileName = "Data", menuName = "Road/RoadData", order = 1)]
public class RoadScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] Meshes;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA4912C", Offset = "0xA4912C", VA = "0xA4912C")]
	public RoadScriptableObject()
	{
	}
}
[Token(Token = "0x200002A")]
public class Cloud : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] gameObjects;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] Meshes;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA49134", Offset = "0xA49134", VA = "0xA49134")]
	[ContextMenu("DO the thing")]
	private void DoTheThing()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA49338", Offset = "0xA49338", VA = "0xA49338")]
	[ContextMenu("Randomize")]
	private void Randomize()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA495E4", Offset = "0xA495E4", VA = "0xA495E4")]
	[ContextMenu("Randomize Down")]
	private void RandomizeDown()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA497EC", Offset = "0xA497EC", VA = "0xA497EC")]
	[ContextMenu("Randomize up")]
	private void RandomizeUp()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA499F4", Offset = "0xA499F4", VA = "0xA499F4")]
	[ContextMenu("Thin Out")]
	private void ThinOut()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA49B54", Offset = "0xA49B54", VA = "0xA49B54")]
	public Cloud()
	{
	}
}
[Token(Token = "0x200002B")]
public class RenderCubemapWizard : MonoBehaviour
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubemap cubemap;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA49B5C", Offset = "0xA49B5C", VA = "0xA49B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA49C5C", Offset = "0xA49C5C", VA = "0xA49C5C")]
	public RenderCubemapWizard()
	{
	}
}
[Token(Token = "0x200002C")]
public class SaveRenderTextureToFile
{
	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA49C64", Offset = "0xA49C64", VA = "0xA49C64")]
	public SaveRenderTextureToFile()
	{
	}
}
[Token(Token = "0x200002D")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorLinear : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA49C6C", Offset = "0xA49C6C", VA = "0xA49C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA49D44", Offset = "0xA49D44", VA = "0xA49D44")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA49F74", Offset = "0xA49F74", VA = "0xA49F74")]
	public particleAttractorLinear()
	{
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorMove : MonoBehaviour
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA49F84", Offset = "0xA49F84", VA = "0xA49F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA4A05C", Offset = "0xA4A05C", VA = "0xA4A05C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA4A2C4", Offset = "0xA4A2C4", VA = "0xA4A2C4")]
	public particleAttractorMove()
	{
	}
}
[Token(Token = "0x200002F")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorSelf : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numParticlesAlive;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA4A2D4", Offset = "0xA4A2D4", VA = "0xA4A2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA4A3AC", Offset = "0xA4A3AC", VA = "0xA4A3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA4A558", Offset = "0xA4A558", VA = "0xA4A558")]
	public particleAttractorSelf()
	{
	}
}
[Token(Token = "0x2000030")]
[RequireComponent(typeof(ParticleSystem))]
public class particleAttractorSpherical : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA4A568", Offset = "0xA4A568", VA = "0xA4A568")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA4A640", Offset = "0xA4A640", VA = "0xA4A640")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA4A7D0", Offset = "0xA4A7D0", VA = "0xA4A7D0")]
	public particleAttractorSpherical()
	{
	}
}
[Token(Token = "0x2000031")]
public class rotation : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA4A7E0", Offset = "0xA4A7E0", VA = "0xA4A7E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA4A838", Offset = "0xA4A838", VA = "0xA4A838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA4A840", Offset = "0xA4A840", VA = "0xA4A840")]
	public void clickOn()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA4A898", Offset = "0xA4A898", VA = "0xA4A898")]
	public void clickOff()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA4A8A0", Offset = "0xA4A8A0", VA = "0xA4A8A0")]
	private void rotate()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA4A8F0", Offset = "0xA4A8F0", VA = "0xA4A8F0")]
	public rotation()
	{
	}
}
[Token(Token = "0x2000032")]
public class PixelArsenalLightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string waveFunction;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amplitude;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float phase;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float frequency;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA4A8F8", Offset = "0xA4A8F8", VA = "0xA4A8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xA4A95C", Offset = "0xA4A95C", VA = "0xA4A95C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xA4A9F0", Offset = "0xA4A9F0", VA = "0xA4A9F0")]
	private float EvalWave()
	{
		return default(float);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xA4ABBC", Offset = "0xA4ABBC", VA = "0xA4ABBC")]
	public PixelArsenalLightFlicker()
	{
	}
}
[Token(Token = "0x2000033")]
public class AchievementCannonCatcher : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	public enum Level
	{
		[Token(Token = "0x400012D")]
		Level1,
		[Token(Token = "0x400012E")]
		Level2
	}

	[Serializable]
	[Token(Token = "0x2000035")]
	public class Persistent
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cannon_level1;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int cannon_level2;

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xA4AEB0", Offset = "0xA4AEB0", VA = "0xA4AEB0")]
		public Persistent()
		{
		}
	}

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement cannon_catcher;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Cannon cannon;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level level;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xA4AC24", Offset = "0xA4AC24", VA = "0xA4AC24")]
	public void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xA4AEA8", Offset = "0xA4AEA8", VA = "0xA4AEA8")]
	public AchievementCannonCatcher()
	{
	}
}
[Token(Token = "0x2000036")]
public class AchievementsCollectedObjects : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000037")]
	public class SuccessfulLevels
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xA4B2D4", Offset = "0xA4B2D4", VA = "0xA4B2D4")]
		public SuccessfulLevels()
		{
		}
	}

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Level level;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideIfTriggered;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xA4AEB8", Offset = "0xA4AEB8", VA = "0xA4AEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xA4AEFC", Offset = "0xA4AEFC", VA = "0xA4AEFC")]
	private bool LevelIsAdded()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xA4AFFC", Offset = "0xA4AFFC", VA = "0xA4AFFC")]
	public void TriggerCondition()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xA4B2C4", Offset = "0xA4B2C4", VA = "0xA4B2C4")]
	public AchievementsCollectedObjects()
	{
	}
}
[Token(Token = "0x2000038")]
public class AchievementsCollectedObjectsID : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	public delegate void ObjectCollectedDelegate();

	[Token(Token = "0x200003A")]
	public delegate void ObjectCollectedStaticDelegate(AchievementsCollectedObjectsID achievementsCollectedObjectsID);

	[Serializable]
	[Token(Token = "0x200003B")]
	public class CollectedObjectIDs
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] objectIDs;

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xA4BD88", Offset = "0xA4BD88", VA = "0xA4BD88")]
		public CollectedObjectIDs()
		{
		}
	}

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Entity myEntity;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hideIfTriggered;

	[Token(Token = "0x14000001")]
	public event ObjectCollectedDelegate OnObjectCollected
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xA4B338", Offset = "0xA4B338", VA = "0xA4B338")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xA4B3D4", Offset = "0xA4B3D4", VA = "0xA4B3D4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event ObjectCollectedStaticDelegate OnObjectCollectedStatic
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xA4B470", Offset = "0xA4B470", VA = "0xA4B470")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xA4B528", Offset = "0xA4B528", VA = "0xA4B528")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xA4B5E0", Offset = "0xA4B5E0", VA = "0xA4B5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xA4B638", Offset = "0xA4B638", VA = "0xA4B638")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xA4B6D8", Offset = "0xA4B6D8", VA = "0xA4B6D8")]
	private bool ObjectCollected()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xA4B82C", Offset = "0xA4B82C", VA = "0xA4B82C")]
	[ContextMenu("TriggerCondition")]
	public void TriggerCondition()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xA4BB40", Offset = "0xA4BB40", VA = "0xA4BB40")]
	public AchievementsCollectedObjectsID()
	{
	}
}
[Token(Token = "0x200003C")]
[CreateAssetMenu(fileName = "AchievementsPerfectRunsRockets", menuName = "Achievements/AchievementRocketRuns", order = 1)]
public class AchievementsPerfectRunsRockets : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200003D")]
	public class AchievementPerfectRunSet
	{
		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tries;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Level level;

		[Token(Token = "0x6000105")]
		[Address(RVA = "0xA4C10C", Offset = "0xA4C10C", VA = "0xA4C10C")]
		public AchievementPerfectRunSet()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200003E")]
	public class SuccessfulLevels
	{
		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xA4C114", Offset = "0xA4C114", VA = "0xA4C114")]
		public SuccessfulLevels()
		{
		}
	}

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AchievementPerfectRunSet[] runSets;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xA4BDEC", Offset = "0xA4BDEC", VA = "0xA4BDEC")]
	public void CheckAchievement(int tries)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xA4C104", Offset = "0xA4C104", VA = "0xA4C104")]
	public AchievementsPerfectRunsRockets()
	{
	}
}
[Token(Token = "0x200003F")]
public enum AchievmentType
{
	[Token(Token = "0x4000141")]
	NONE,
	[Token(Token = "0x4000142")]
	Achieve,
	[Token(Token = "0x4000143")]
	Increment
}
[Token(Token = "0x2000040")]
[CreateAssetMenu(fileName = "New Achievement", menuName = "Achievements/Achievement", order = 1)]
public class Achievement : ScriptableObject
{
	[Token(Token = "0x2000041")]
	public enum Type
	{
		[Token(Token = "0x400014C")]
		None,
		[Token(Token = "0x400014D")]
		Automatic,
		[Token(Token = "0x400014E")]
		Speedrun
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type type;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string API_ID;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level UnlockLevel;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int MaxCounter;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float finishingTimeInSeconds;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EntityDefinition[] Unlocks;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xA4C178", Offset = "0xA4C178", VA = "0xA4C178")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xA4C19C", Offset = "0xA4C19C", VA = "0xA4C19C")]
	[ContextMenu("Change ID")]
	public void ChangeID()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xA4AD7C", Offset = "0xA4AD7C", VA = "0xA4AD7C")]
	[ContextMenu("Unlock now")]
	public void UnlockNow()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xA4C25C", Offset = "0xA4C25C", VA = "0xA4C25C")]
	[ContextMenu("LogPersistentCounter")]
	private void LogPersistentCounter()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xA4B268", Offset = "0xA4B268", VA = "0xA4B268")]
	public void Increment()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xA4C444", Offset = "0xA4C444", VA = "0xA4C444")]
	[ContextMenu("TestIncrement")]
	private void TestIncrement()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xA4C4A0", Offset = "0xA4C4A0", VA = "0xA4C4A0")]
	public bool AchievementUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xA4C4C4", Offset = "0xA4C4C4", VA = "0xA4C4C4")]
	public Achievement()
	{
	}
}
[Token(Token = "0x2000042")]
public class AchievementSystem : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	public delegate void AchievementUnlockedDelegate(Achievement achievement);

	[Serializable]
	[Token(Token = "0x2000044")]
	public class AchievementBackup
	{
		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xA4D4A0", Offset = "0xA4D4A0", VA = "0xA4D4A0")]
		public AchievementBackup()
		{
		}
	}

	[Token(Token = "0x2000047")]
	[CompilerGenerated]
	private sealed class <QueryBackupAchievement>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AchievementSystem <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000133")]
			[Address(RVA = "0xA4DAF0", Offset = "0xA4DAF0", VA = "0xA4DAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000135")]
			[Address(RVA = "0xA4DB38", Offset = "0xA4DB38", VA = "0xA4DB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xA4CD40", Offset = "0xA4CD40", VA = "0xA4CD40")]
		[DebuggerHidden]
		public <QueryBackupAchievement>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xA4D5D4", Offset = "0xA4D5D4", VA = "0xA4D5D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xA4D5D8", Offset = "0xA4D5D8", VA = "0xA4D5D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xA4DAF8", Offset = "0xA4DAF8", VA = "0xA4DAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AchievementSystem _instance;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement100;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDirty;

	[NonSerialized]
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Achievement[] _achievements;

	[Token(Token = "0x1700001C")]
	public static AchievementSystem Instance
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xA4C6D4", Offset = "0xA4C6D4", VA = "0xA4C6D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public static Achievement[] Achievements
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xA4C71C", Offset = "0xA4C71C", VA = "0xA4C71C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event AchievementUnlockedDelegate OnAchievementUnlocked
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0xA4C564", Offset = "0xA4C564", VA = "0xA4C564")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xA4C61C", Offset = "0xA4C61C", VA = "0xA4C61C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xA4C990", Offset = "0xA4C990", VA = "0xA4C990")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xA4CBB4", Offset = "0xA4CBB4", VA = "0xA4CBB4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xA4CCB8", Offset = "0xA4CCB8", VA = "0xA4CCB8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xA4CD34", Offset = "0xA4CD34", VA = "0xA4CD34")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xA4CC44", Offset = "0xA4CC44", VA = "0xA4CC44")]
	[IteratorStateMachine(typeof(<QueryBackupAchievement>d__17))]
	private IEnumerator QueryBackupAchievement()
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xA4CD68", Offset = "0xA4CD68", VA = "0xA4CD68")]
	public void UnlockAchiementByApiID(Achievement achievement)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xA4CD70", Offset = "0xA4CD70", VA = "0xA4CD70")]
	public void LevelComplete(Level level, float completionTime = float.MaxValue)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xA4CBDC", Offset = "0xA4CBDC", VA = "0xA4CBDC")]
	private void InitializePlatform()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xA4AD64", Offset = "0xA4AD64", VA = "0xA4AD64")]
	public static SaveDataAchievementProgress GetPersistentData(Achievement achievement)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xA4CEE0", Offset = "0xA4CEE0", VA = "0xA4CEE0")]
	private static SaveDataAchievementProgress GetPersistentDataForID(string id)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xA4D0C8", Offset = "0xA4D0C8", VA = "0xA4D0C8")]
	private SaveDataAchievementProgress GetPersistentDataForAPIID(string apiid)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xA4C2B4", Offset = "0xA4C2B4", VA = "0xA4C2B4")]
	public void GetPersistentCounter(Achievement achievement)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xA4D1C4", Offset = "0xA4D1C4", VA = "0xA4D1C4")]
	public int GetIncrementCounter(Achievement achievement)
	{
		return default(int);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xA4C378", Offset = "0xA4C378", VA = "0xA4C378")]
	public void Increment(Achievement achievement, int amount = 1)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xA4C200", Offset = "0xA4C200", VA = "0xA4C200")]
	public bool AchievementUnlocked(Achievement achievement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xA4C224", Offset = "0xA4C224", VA = "0xA4C224")]
	public void Unlock(Achievement achievement)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xA4D248", Offset = "0xA4D248", VA = "0xA4D248")]
	public void Unlock(Achievement achievement, SaveDataAchievementProgress persistent)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xA4D328", Offset = "0xA4D328", VA = "0xA4D328")]
	private void BackupAchievement(Achievement achievement, SaveDataAchievementProgress persistent)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xA4D348", Offset = "0xA4D348", VA = "0xA4D348")]
	public AchievementSystem()
	{
	}
}
[Token(Token = "0x200004A")]
public class AchievementTrackerHumanPhoto : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004B")]
	public class HumanPhotos
	{
		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] levels;

		[Token(Token = "0x600013D")]
		[Address(RVA = "0xA4E340", Offset = "0xA4E340", VA = "0xA4E340")]
		public HumanPhotos()
		{
		}
	}

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionValidationPhotoCamera validationCamera;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject progressDisplay;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xA4DB88", Offset = "0xA4DB88", VA = "0xA4DB88")]
	private void Start()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xA4DC48", Offset = "0xA4DC48", VA = "0xA4DC48")]
	public void TakePicture()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xA4E330", Offset = "0xA4E330", VA = "0xA4E330")]
	public AchievementTrackerHumanPhoto()
	{
	}
}
[Token(Token = "0x200004C")]
public class ActionOnGamestate : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTargetPlacedEvent;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnTargetsCompleteEvent;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnTargetsIncompleteEvent;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnLevelCompleteEvent;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xA4E3A4", Offset = "0xA4E3A4", VA = "0xA4E3A4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA4E4A0", Offset = "0xA4E4A0", VA = "0xA4E4A0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xA4E59C", Offset = "0xA4E59C", VA = "0xA4E59C", Slot = "6")]
	public virtual void OnTargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xA4E5EC", Offset = "0xA4E5EC", VA = "0xA4E5EC", Slot = "7")]
	public virtual void OnLevelComplete()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xA4E608", Offset = "0xA4E608", VA = "0xA4E608")]
	public ActionOnGamestate()
	{
	}
}
[Token(Token = "0x200004D")]
public class ActivateFixedJoint : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody bodyA;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody bodyB;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xA4E610", Offset = "0xA4E610", VA = "0xA4E610")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xA4E67C", Offset = "0xA4E67C", VA = "0xA4E67C")]
	public ActivateFixedJoint()
	{
	}
}
[Token(Token = "0x200004E")]
public class ActivateHumanMovement : MonoBehaviour
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool changeHumanWaypointID;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int changeHumanWaypointIDTo;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float freeFallDistance;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool activateForEveryone;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool doNotActivateForID;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> characterID;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool refreshCollider;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider myCollider;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool noMovementOnGrab;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xA4E684", Offset = "0xA4E684", VA = "0xA4E684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xA4E7A4", Offset = "0xA4E7A4", VA = "0xA4E7A4")]
	private void DoRefreshCollider()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xA4E7DC", Offset = "0xA4E7DC", VA = "0xA4E7DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xA4E9C0", Offset = "0xA4E9C0", VA = "0xA4E9C0")]
	public ActivateHumanMovement()
	{
	}
}
[Token(Token = "0x200004F")]
public class ActivateInWater : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wayPoints;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xA4E9E0", Offset = "0xA4E9E0", VA = "0xA4E9E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xA4EA6C", Offset = "0xA4EA6C", VA = "0xA4EA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xA4EAF8", Offset = "0xA4EAF8", VA = "0xA4EAF8")]
	private void WaterStatusChange(bool _inWater)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xA4EB18", Offset = "0xA4EB18", VA = "0xA4EB18")]
	public ActivateInWater()
	{
	}
}
[Token(Token = "0x2000050")]
public class AddForce : MonoBehaviour
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 force;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xA4EB20", Offset = "0xA4EB20", VA = "0xA4EB20")]
	private void Start()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xA4EB78", Offset = "0xA4EB78", VA = "0xA4EB78")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xA4EBCC", Offset = "0xA4EBCC", VA = "0xA4EBCC")]
	public AddForce()
	{
	}
}
[Token(Token = "0x2000051")]
public class AdjustWaypointDirectionTugboat : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VehicleWaypoint waypointToChange;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TargetShippingPerimeter perimeter;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform closest;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xA4EBD4", Offset = "0xA4EBD4", VA = "0xA4EBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xA4EC34", Offset = "0xA4EC34", VA = "0xA4EC34")]
	private void DirectionCheck()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xA4F298", Offset = "0xA4F298", VA = "0xA4F298")]
	public AdjustWaypointDirectionTugboat()
	{
	}
}
[Token(Token = "0x2000052")]
public class AlertAntenna : MonoBehaviour
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DOTweenAnimation ani;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xA4F2A0", Offset = "0xA4F2A0", VA = "0xA4F2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xA4F338", Offset = "0xA4F338", VA = "0xA4F338")]
	[ContextMenu("ON")]
	private void SetOn()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xA4F2A8", Offset = "0xA4F2A8", VA = "0xA4F2A8")]
	public void SetMode(bool _which)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xA4F340", Offset = "0xA4F340", VA = "0xA4F340")]
	public AlertAntenna()
	{
	}
}
[Token(Token = "0x2000053")]
public class AlignToBezierCurve : MonoBehaviour
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Bones;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Tip;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BezierSpline Line;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RotationReference[] Points;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float t;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] _originalSizes;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] _currentSizes;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _sizeTotal;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xA4F348", Offset = "0xA4F348", VA = "0xA4F348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xA4F71C", Offset = "0xA4F71C", VA = "0xA4F71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xA4F4C0", Offset = "0xA4F4C0", VA = "0xA4F4C0")]
	private float[] CalculateSizes()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xA4F934", Offset = "0xA4F934", VA = "0xA4F934")]
	public AlignToBezierCurve()
	{
	}
}
[Token(Token = "0x2000054")]
public class AMTanimations : MonoBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator[] animators;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xA4F93C", Offset = "0xA4F93C", VA = "0xA4F93C")]
	[ContextMenu("On")]
	public void OnAnimation()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xA4F9C8", Offset = "0xA4F9C8", VA = "0xA4F9C8")]
	[ContextMenu("Off")]
	public void OffAnimation()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA4FA54", Offset = "0xA4FA54", VA = "0xA4FA54")]
	[ContextMenu("Idle")]
	public void IdleAnimation()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA4FAE0", Offset = "0xA4FAE0", VA = "0xA4FAE0")]
	[ContextMenu("Error")]
	public void ErrorAnimation()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA4FB6C", Offset = "0xA4FB6C", VA = "0xA4FB6C")]
	public AMTanimations()
	{
	}
}
[Token(Token = "0x2000055")]
[ExecuteInEditMode]
public class Analytics : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string versionNumber;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool useAnalytics;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Analytics _instance;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI versionTM;

	[Token(Token = "0x17000020")]
	public static Analytics Instance
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0xA4FB74", Offset = "0xA4FB74", VA = "0xA4FB74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xA4FCF0", Offset = "0xA4FCF0", VA = "0xA4FCF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xA4FE2C", Offset = "0xA4FE2C", VA = "0xA4FE2C")]
	public static void NewProgressionEvent(GAProgressionStatus status, string stat, string level, string place)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xA4FEC0", Offset = "0xA4FEC0", VA = "0xA4FEC0")]
	public static void NewProgressionEvent(GAProgressionStatus status, string stat, string level, string place, int passed)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xA4FF5C", Offset = "0xA4FF5C", VA = "0xA4FF5C")]
	public static void NewDesignEvent(string whichEvent)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xA4FFC0", Offset = "0xA4FFC0", VA = "0xA4FFC0")]
	public static void NewDesignEvent(string whichEvent, float value)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xA50038", Offset = "0xA50038", VA = "0xA50038")]
	public Analytics()
	{
	}
}
[Token(Token = "0x2000056")]
public class AnchorBreakDistance : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000057")]
	public class DistanceReachedEvent : UnityEvent
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0xA502E4", Offset = "0xA502E4", VA = "0xA502E4")]
		public DistanceReachedEvent()
		{
		}
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DistanceReachedEvent DistanceReached;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joint joint;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startDistance;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BreakDistance;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float dist;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xA50090", Offset = "0xA50090", VA = "0xA50090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xA500B4", Offset = "0xA500B4", VA = "0xA500B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA500B8", Offset = "0xA500B8", VA = "0xA500B8")]
	private void CheckJointDiff()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xA502C8", Offset = "0xA502C8", VA = "0xA502C8")]
	public AnchorBreakDistance()
	{
	}
}
[Token(Token = "0x2000058")]
public class AntiGravity : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA502EC", Offset = "0xA502EC", VA = "0xA502EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA5035C", Offset = "0xA5035C", VA = "0xA5035C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA503B4", Offset = "0xA503B4", VA = "0xA503B4")]
	public AntiGravity()
	{
	}
}
[Token(Token = "0x2000059")]
public class ApplyStartVelocity : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minVel;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA503BC", Offset = "0xA503BC", VA = "0xA503BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA503C0", Offset = "0xA503C0", VA = "0xA503C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA50484", Offset = "0xA50484", VA = "0xA50484")]
	public ApplyStartVelocity()
	{
	}
}
[Token(Token = "0x200005A")]
public class AttachAsPayload : MonoBehaviour
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 hingeAxis;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PayloadManager payloadManager;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadObject;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lockAngularLimits;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float angularLimits;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA50494", Offset = "0xA50494", VA = "0xA50494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA504EC", Offset = "0xA504EC", VA = "0xA504EC")]
	public AttachAsPayload()
	{
	}
}
[Token(Token = "0x200005B")]
public class AttachToCamera : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA50514", Offset = "0xA50514", VA = "0xA50514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA50568", Offset = "0xA50568", VA = "0xA50568")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA506AC", Offset = "0xA506AC", VA = "0xA506AC")]
	public AttachToCamera()
	{
	}
}
[Token(Token = "0x200005C")]
public class AttachToTentacle : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool usePhysics;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform bone;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int boneID;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 localRotationOffset;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 localPositionOffset;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool rightTentacle;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TentacleLogic tentaclelogic;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delay;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool updateOffsets;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[Header("ONLY WORKS WITH NON PHYSICS")]
	public bool deactivateWithTentacle;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject visualToDeativate;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA506BC", Offset = "0xA506BC", VA = "0xA506BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA50790", Offset = "0xA50790", VA = "0xA50790")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA50864", Offset = "0xA50864", VA = "0xA50864")]
	private void GetController()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA508BC", Offset = "0xA508BC", VA = "0xA508BC")]
	private void OnControllerActive(int _id, bool active)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA509CC", Offset = "0xA509CC", VA = "0xA509CC")]
	private void Load()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA50A7C", Offset = "0xA50A7C", VA = "0xA50A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA50ACC", Offset = "0xA50ACC", VA = "0xA50ACC")]
	private void Init()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA50C4C", Offset = "0xA50C4C", VA = "0xA50C4C")]
	public AttachToTentacle()
	{
	}
}
[Token(Token = "0x200005D")]
public class Ambient : MonoBehaviour
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsUnderwater;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string CurrentAmbient;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	private float AmbientVolume;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string UnderwaterAmbient;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance ambientInstance;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance UnderwaterInstance;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA50C68", Offset = "0xA50C68", VA = "0xA50C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA50D1C", Offset = "0xA50D1C", VA = "0xA50D1C")]
	public void ToggleUnderwater()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA50CD4", Offset = "0xA50CD4", VA = "0xA50CD4")]
	public void SetStatus(bool undervater)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA50D34", Offset = "0xA50D34", VA = "0xA50D34")]
	public void ChangeAmbient(string EventRef)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA50D54", Offset = "0xA50D54", VA = "0xA50D54")]
	public Ambient()
	{
	}
}
[Token(Token = "0x200005E")]
public static class AudioHelper
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventInstance pauseInstance;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA50D68", Offset = "0xA50D68", VA = "0xA50D68")]
	public static PLAYBACK_STATE PlaybackState(EventInstance instance)
	{
		return default(PLAYBACK_STATE);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA50D94", Offset = "0xA50D94", VA = "0xA50D94")]
	public static void PlayOneShotWithParams3D(string fmodEvent, Vector3 position, params (string name, float value)[] parameters)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA50E80", Offset = "0xA50E80", VA = "0xA50E80")]
	public static EventInstance PlayOneShotWithParamsAttached(string fmodEvent, GameObject _gameObject, params (string name, float value)[] parameters)
	{
		return default(EventInstance);
	}
}
[Token(Token = "0x200005F")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsAboveWater;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string CurrentAmbient;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string UnderwaterAmbient;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance ambientInstance;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance UnderwaterInstance;

	[Token(Token = "0x17000021")]
	public static float MusicVolume
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xA513E8", Offset = "0xA513E8", VA = "0xA513E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xA510D0", Offset = "0xA510D0", VA = "0xA510D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public static float SFXVolume
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xA51444", Offset = "0xA51444", VA = "0xA51444")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xA51214", Offset = "0xA51214", VA = "0xA51214")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static float AmbienceVolume
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xA514A4", Offset = "0xA514A4", VA = "0xA514A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xA5114C", Offset = "0xA5114C", VA = "0xA5114C")]
		set
		{
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA50F88", Offset = "0xA50F88", VA = "0xA50F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA512DC", Offset = "0xA512DC", VA = "0xA512DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA5135C", Offset = "0xA5135C", VA = "0xA5135C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA513DC", Offset = "0xA513DC", VA = "0xA513DC")]
	private void PostLoadEvent()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA51014", Offset = "0xA51014", VA = "0xA51014")]
	public void SetAboveWaterStatus(bool aboveWater, bool reset = false)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA51408", Offset = "0xA51408", VA = "0xA51408")]
	public static void ToggleVCA(string vcaPath, float volume)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA51464", Offset = "0xA51464", VA = "0xA51464")]
	public static void ToggleResonanceEvents(string parameter, float volume)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA514C4", Offset = "0xA514C4", VA = "0xA514C4")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000060")]
public class ColliderSFXOneShotTriggerOnExit : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string fmodEvent;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider targetCollider;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool played;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA514CC", Offset = "0xA514CC", VA = "0xA514CC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA5159C", Offset = "0xA5159C", VA = "0xA5159C")]
	public ColliderSFXOneShotTriggerOnExit()
	{
	}
}
[Serializable]
[Token(Token = "0x2000061")]
public class EmoSFXDefiniton
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string emoTriggerSheets;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[SerializeField]
	public string emoSFX;

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA515A4", Offset = "0xA515A4", VA = "0xA515A4")]
	public EmoSFXDefiniton()
	{
	}
}
[Token(Token = "0x2000062")]
[CreateAssetMenu(fileName = "New HumanEmoSFX", menuName = "HumanEmoSFX", order = 1)]
public class HumanEmoSFX : ScriptableObject
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EmoSFXDefiniton[] emoSFXArray;

	[Token(Token = "0x40001B7")]
	public const string dummySymbols = "¼½¾^_|¢£¤¥¦\u00a8©ª®\u00af°±²³µ¹ºﬀﬂﬃﬄﬅﬆ";

	[Token(Token = "0x40001B8")]
	public const string preSuffix = "§§§";

	[Token(Token = "0x40001B9")]
	public const string elviraPreSuffix = "&&&";

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, string> specialSymDic;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, string> sheetsSFXDict;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string theChar;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA515FC", Offset = "0xA515FC", VA = "0xA515FC")]
	private void CreateSheetsSFXDict()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA517E4", Offset = "0xA517E4", VA = "0xA517E4")]
	public Dictionary<string, string> GetSheetsSFXDict()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA51848", Offset = "0xA51848", VA = "0xA51848")]
	private void CreateSpecialSymDict()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA51988", Offset = "0xA51988", VA = "0xA51988")]
	public string ReplaceSymCharacters(string _text)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA519F0", Offset = "0xA519F0", VA = "0xA519F0")]
	public string GetSFXForReactionType(string _reactionType)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA51AB4", Offset = "0xA51AB4", VA = "0xA51AB4")]
	public string GetLastSymbolForBubble(string _sentence)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA51BB0", Offset = "0xA51BB0", VA = "0xA51BB0")]
	public string GetReplaceForTrigger(string _trigger)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xA51BB4", Offset = "0xA51BB4", VA = "0xA51BB4")]
	public string GetReplaceForTriggerSheets(string _trigger)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA51C90", Offset = "0xA51C90", VA = "0xA51C90")]
	public bool IsSFXSymbol(string _symbol)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xA51CE4", Offset = "0xA51CE4", VA = "0xA51CE4")]
	public string GetSFXForReplace(string _replace)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xA51D94", Offset = "0xA51D94", VA = "0xA51D94")]
	public HumanEmoSFX()
	{
	}
}
[Token(Token = "0x2000063")]
public class MovingSFXLoopRB : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EventInstance instance;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	[SerializeField]
	private string fmodEvent;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string parameter;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int frameInterval;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float turnSpeedFactor;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool paused;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xA51DEC", Offset = "0xA51DEC", VA = "0xA51DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA51E4C", Offset = "0xA51E4C", VA = "0xA51E4C")]
	private void StartInstance()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA51EA4", Offset = "0xA51EA4", VA = "0xA51EA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA51F28", Offset = "0xA51F28", VA = "0xA51F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA51F50", Offset = "0xA51F50", VA = "0xA51F50")]
	public MovingSFXLoopRB()
	{
	}
}
[Token(Token = "0x2000064")]
[CreateAssetMenu(menuName = "My FMOD Callback Handler")]
public class MyFMODCallbackHandler : PlatformCallbackHandler
{
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA51F6C", Offset = "0xA51F6C", VA = "0xA51F6C", Slot = "4")]
	public override void PreInitialize(FMOD.Studio.System studioSystem, Action<RESULT, string> reportResult)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA51F70", Offset = "0xA51F70", VA = "0xA51F70")]
	public MyFMODCallbackHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
[CreateAssetMenu(fileName = "UniqHumansCollection", menuName = "HumansCollectionUniq", order = 1)]
public class UniqHumansCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000066")]
	public class UniqEntityDefinitionGroup
	{
		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnResources.HumanType groupType;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EntityDefinition[] group;

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xA520CC", Offset = "0xA520CC", VA = "0xA520CC")]
		public UniqEntityDefinitionGroup()
		{
		}
	}

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniqEntityDefinitionGroup[] collection;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA51F78", Offset = "0xA51F78", VA = "0xA51F78")]
	public EntityDefinition GetRandomHumnFromGroup(SpawnResources.HumanType whichType)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA520C4", Offset = "0xA520C4", VA = "0xA520C4")]
	public UniqHumansCollection()
	{
	}
}
[Token(Token = "0x2000067")]
public class AxisToAxis : MonoBehaviour
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody crankShaftRB;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HingeJoint turnedJoint;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint crankShaft;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FXgeneratorRunning;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool freeSpinTarget;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private JointMotor motor;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float factor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool crankAttached;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mass;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float counter;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float squeekTime;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA520D4", Offset = "0xA520D4", VA = "0xA520D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA52160", Offset = "0xA52160", VA = "0xA52160")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA5211C", Offset = "0xA5211C", VA = "0xA5211C")]
	public void SetMotor(bool which)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA52260", Offset = "0xA52260", VA = "0xA52260")]
	public AxisToAxis()
	{
	}
}
[Token(Token = "0x2000068")]
public class BabbleField : CollisionBase
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool visualFeedback;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dumbfield;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA52278", Offset = "0xA52278", VA = "0xA52278")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA52308", Offset = "0xA52308", VA = "0xA52308", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA5244C", Offset = "0xA5244C", VA = "0xA5244C")]
	public BabbleField()
	{
	}
}
[Token(Token = "0x2000069")]
[CreateAssetMenu(fileName = "BakeSceneStorage", menuName = "Bakery", order = 1)]
public class BakeSceneStorage : ScriptableObject
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public UnityEngine.Object[] scenes;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA52454", Offset = "0xA52454", VA = "0xA52454")]
	public BakeSceneStorage()
	{
	}
}
[Token(Token = "0x200006A")]
public class BakingHelper : MonoBehaviour
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 OriginalPosition;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion OriginalRotation;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool HideOnAwake;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA5245C", Offset = "0xA5245C", VA = "0xA5245C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA5250C", Offset = "0xA5250C", VA = "0xA5250C")]
	[ContextMenu("Record current position")]
	public void Record()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA5255C", Offset = "0xA5255C", VA = "0xA5255C")]
	public BakingHelper()
	{
	}
}
[Token(Token = "0x200006B")]
public class BirthdayCake : MonoBehaviour
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject candle;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isBurning;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float velCounter;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject smokeOnly;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool touchCandleIsOff;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xA52564", Offset = "0xA52564", VA = "0xA52564")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xA525D4", Offset = "0xA525D4", VA = "0xA525D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xA526BC", Offset = "0xA526BC", VA = "0xA526BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xA527A4", Offset = "0xA527A4", VA = "0xA527A4")]
	private void BlowOutCandle(MouthSFXSet set, Entity entity, string ID, Transform mouth)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xA52894", Offset = "0xA52894", VA = "0xA52894")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xA52848", Offset = "0xA52848", VA = "0xA52848")]
	[ContextMenu("candle off")]
	private void CandleOff()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xA52914", Offset = "0xA52914", VA = "0xA52914")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xA52A68", Offset = "0xA52A68", VA = "0xA52A68")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xA52BC8", Offset = "0xA52BC8", VA = "0xA52BC8")]
	public BirthdayCake()
	{
	}
}
[Token(Token = "0x200006C")]
public class BlinderReference : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer blinderMesh;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xA52BDC", Offset = "0xA52BDC", VA = "0xA52BDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA52C5C", Offset = "0xA52C5C", VA = "0xA52C5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA52CDC", Offset = "0xA52CDC", VA = "0xA52CDC")]
	private void BlinderEvent(bool blinderOn)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA52CFC", Offset = "0xA52CFC", VA = "0xA52CFC")]
	public BlinderReference()
	{
	}
}
[Token(Token = "0x200006D")]
public class BoomBox : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	public class Song
	{
		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FMOD_Event;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventReference evenReference;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float songLength;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string songName;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int songIDX;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool unlocked;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Level songLevel;

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xA54810", Offset = "0xA54810", VA = "0xA54810")]
		public Song()
		{
		}
	}

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playSymbol;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject stopSymbol;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool boomboxIsOn;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro songNameTM;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Level> songLevels;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Song> songsList;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Level defaultLevel;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int playingSongIDX;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventInstance instance;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA52D04", Offset = "0xA52D04", VA = "0xA52D04")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA52DEC", Offset = "0xA52DEC", VA = "0xA52DEC")]
	[ContextMenu("CreateSongList")]
	private void CreateUnlockedSongsList()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA534E8", Offset = "0xA534E8", VA = "0xA534E8")]
	private void AutoPlayCheck()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA5325C", Offset = "0xA5325C", VA = "0xA5325C")]
	private void UpdateCurrentSongDisplay()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xA53610", Offset = "0xA53610", VA = "0xA53610")]
	private void PlaySong()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xA53544", Offset = "0xA53544", VA = "0xA53544")]
	private void NextSong()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA5370C", Offset = "0xA5370C", VA = "0xA5370C")]
	[ContextMenu("NextSong")]
	private void PreviousSong()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xA536CC", Offset = "0xA536CC", VA = "0xA536CC")]
	private void StopSong()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xA537CC", Offset = "0xA537CC", VA = "0xA537CC")]
	[ContextMenu("TogglePlayPressed")]
	public void TogglePlayPressed()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xA52DAC", Offset = "0xA52DAC", VA = "0xA52DAC")]
	private void SetVisualState()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xA537FC", Offset = "0xA537FC", VA = "0xA537FC")]
	[ContextMenu("NextPressed")]
	public void NextPressed()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xA53800", Offset = "0xA53800", VA = "0xA53800")]
	[ContextMenu("PreviousPressed")]
	public void PreviousPressed()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA53804", Offset = "0xA53804", VA = "0xA53804")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA53808", Offset = "0xA53808", VA = "0xA53808")]
	public BoomBox()
	{
	}
}
[Token(Token = "0x200006F")]
public class BossBooster : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	public delegate void BoosterSlingConnectedDelegate(Glue whichGlue, bool connected);

	[Token(Token = "0x2000071")]
	public delegate void BoosterDestroyedDelegate();

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BossBoosterWeakpoint> bossBoosterWeakpoints;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hatchDuration;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SpinnytopWhole;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpinnytopBroken;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject AntennaWhole;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject AntennaBroke;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BaseWhole;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BaseBroke;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject energyOrbFX;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool boosterDestroyed;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float hingeForce;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform boosterWP;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool boosterActivated;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject energyAttach;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int direction;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float rotVelocity;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hatchOpen;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CrystalEnergyBase energyBaseAttach;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HingeJoint myHingeJoint;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JointMotor jointMotor;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject overloadFX;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Glued rotationGlued;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentEnergy;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int lastEnergyLevel;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject launchFX;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ShakeObject[] shakeObject;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public StudioEventEmitter destroyedBoosterSFX;

	[Token(Token = "0x14000004")]
	public static event BoosterSlingConnectedDelegate OnBoosterSlingConnected
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xA54878", Offset = "0xA54878", VA = "0xA54878")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xA54930", Offset = "0xA54930", VA = "0xA54930")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event BoosterDestroyedDelegate OnBoosterDestroyed
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xA549E8", Offset = "0xA549E8", VA = "0xA549E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xA54AA4", Offset = "0xA54AA4", VA = "0xA54AA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xA54B60", Offset = "0xA54B60", VA = "0xA54B60")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xA54C64", Offset = "0xA54C64", VA = "0xA54C64")]
	public void ActivateBooster()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xA54D78", Offset = "0xA54D78", VA = "0xA54D78")]
	[ContextMenu("LaunchBooster")]
	public void LaunchBooster(bool which = true)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xA54DA8", Offset = "0xA54DA8", VA = "0xA54DA8")]
	public void SetShake(bool which)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xA54E08", Offset = "0xA54E08", VA = "0xA54E08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xA54EF0", Offset = "0xA54EF0", VA = "0xA54EF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xA54FD8", Offset = "0xA54FD8", VA = "0xA54FD8")]
	private void EnergyEvent(int _energyLevel)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA55020", Offset = "0xA55020", VA = "0xA55020")]
	private void EnergyConnection(Glue _glue, Glued _glued)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA55108", Offset = "0xA55108", VA = "0xA55108")]
	public void DebugDestroyAll()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA54FEC", Offset = "0xA54FEC", VA = "0xA54FEC")]
	private void EnergyLevelCheck()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xA55414", Offset = "0xA55414", VA = "0xA55414")]
	public void WeakpointDestroyed(BossBoosterWeakpoint _bossBoosterWeakpoint)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xA55704", Offset = "0xA55704", VA = "0xA55704")]
	public void RegisterBooster(BossBoosterWeakpoint booster)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xA55404", Offset = "0xA55404", VA = "0xA55404")]
	[ContextMenu("OpenHatch")]
	private void OpenHatch()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA5540C", Offset = "0xA5540C", VA = "0xA5540C")]
	[ContextMenu("CloseHatch")]
	private void CloseHatch()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xA557EC", Offset = "0xA557EC", VA = "0xA557EC")]
	private void OpenHatch(bool which)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA55B88", Offset = "0xA55B88", VA = "0xA55B88")]
	public BossBooster()
	{
	}
}
[Token(Token = "0x2000072")]
public class BossBoosterWeakpoint : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hatchRoot;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject weakPoint;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject weakPointDestroyed;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject weakPointActive;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hatchOpen;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isWeakPointDestroyed;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BossBooster bossBooster;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween tween;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CollisionBase collisionBase;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EntityDefinition zapper;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject physicalHatch;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody hatchRB;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA55EE4", Offset = "0xA55EE4", VA = "0xA55EE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA56118", Offset = "0xA56118", VA = "0xA56118")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA56238", Offset = "0xA56238", VA = "0xA56238")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA56294", Offset = "0xA56294", VA = "0xA56294")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xA55250", Offset = "0xA55250", VA = "0xA55250")]
	[ContextMenu("DestroyWeakpoint")]
	public void DestroyWeakpoint()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xA559A8", Offset = "0xA559A8", VA = "0xA559A8")]
	public void OpenHatch(bool which, float duration)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA563D0", Offset = "0xA563D0", VA = "0xA563D0")]
	private void HatchOpen()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA563F0", Offset = "0xA563F0", VA = "0xA563F0")]
	private void HatchClosed()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA56410", Offset = "0xA56410", VA = "0xA56410")]
	public BossBoosterWeakpoint()
	{
	}
}
[Token(Token = "0x2000073")]
public class BossController : LevelDirector_base
{
	[Token(Token = "0x2000074")]
	public enum Phase
	{
		[Token(Token = "0x4000252")]
		none,
		[Token(Token = "0x4000253")]
		patrol,
		[Token(Token = "0x4000254")]
		EMPBuildUp,
		[Token(Token = "0x4000255")]
		reboot,
		[Token(Token = "0x4000256")]
		initBoosters
	}

	[Token(Token = "0x2000075")]
	[CompilerGenerated]
	private sealed class <RebootSequence>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossController <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xA58A9C", Offset = "0xA58A9C", VA = "0xA58A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000228")]
			[Address(RVA = "0xA58AE4", Offset = "0xA58AE4", VA = "0xA58AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xA57A70", Offset = "0xA57A70", VA = "0xA57A70")]
		[DebuggerHidden]
		public <RebootSequence>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0xA589B8", Offset = "0xA589B8", VA = "0xA589B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xA589BC", Offset = "0xA589BC", VA = "0xA589BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xA58AA4", Offset = "0xA58AA4", VA = "0xA58AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000076")]
	[CompilerGenerated]
	private sealed class <EMPBlastSequence>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossController <>4__this;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <lastBoostersDestroyed>5__2;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022C")]
			[Address(RVA = "0xA58CFC", Offset = "0xA58CFC", VA = "0xA58CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022E")]
			[Address(RVA = "0xA58D44", Offset = "0xA58D44", VA = "0xA58D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0xA588A0", Offset = "0xA588A0", VA = "0xA588A0")]
		[DebuggerHidden]
		public <EMPBlastSequence>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0xA58AEC", Offset = "0xA58AEC", VA = "0xA58AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xA58AF0", Offset = "0xA58AF0", VA = "0xA58AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xA58D04", Offset = "0xA58D04", VA = "0xA58D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Phase bossPhase;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Drone myDrone;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public EntityDefinition powerslingDef;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<Glued> gluedList;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Rigidbody rb;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Glue connectedGlue;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int slingConnections;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float initialSteerTorque;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float initialUprightTorque;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float initialPower;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float initialAngularDrag;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float initialMaxVelocity;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<float> velocityOverTime;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject weakSpot;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<Glue> connections;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int minSlingsRequired;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public List<Transform> patrolWPs;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public BossBooster[] bossBoosters;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform playerTarget;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform centerWP;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float chargeTimerMax;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public CollisionBase weakPoint;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float velMiddled;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public EntityDefinition zapper;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float weakSpotStartTime;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public int weakPointHitCount;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject electricalExplosion;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private IEnumerator EMPBlastBuildUp;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject hitExplosion;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject boosterLeft;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject boosterRight;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool toCenterWP;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public HingeJoint headJoint;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public BossLauncher bossLauncher;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float initialsDistanceTreshold;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int boostersDestroyed;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public MolluskWebcam webcam;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public LevelDirector_C3333_Resetto controllingLevelDirector;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private IEnumerator rebootSequence;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private bool movingToLastBooster;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Transform lastBooster;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool killMagnets;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject[] sparksHands;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float initialDrag;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject bossCoreComputer;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Transform bossCoreReactor;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool boosterActivationDone;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private BossBooster bossBooster;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool coreVis;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float fightingPower;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool cooldown;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool empSequenceActive;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA56420", Offset = "0xA56420", VA = "0xA56420")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xA56698", Offset = "0xA56698", VA = "0xA56698", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xA5672C", Offset = "0xA5672C", VA = "0xA5672C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xA56628", Offset = "0xA56628", VA = "0xA56628")]
	public void SetBoosters(bool which)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xA567C8", Offset = "0xA567C8", VA = "0xA567C8")]
	private void SetSparks(bool which)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xA565D0", Offset = "0xA565D0", VA = "0xA565D0")]
	public void SetKillMagnets(bool which)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xA56830", Offset = "0xA56830", VA = "0xA56830")]
	public void DebugActivateBoosters()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xA5688C", Offset = "0xA5688C", VA = "0xA5688C")]
	[ContextMenu("ActivateBoosters")]
	public void ActivateBoosters()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xA56A74", Offset = "0xA56A74", VA = "0xA56A74")]
	private void CheckBoosterActivated(Transform wpReached)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xA56D54", Offset = "0xA56D54", VA = "0xA56D54", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xA56D5C", Offset = "0xA56D5C", VA = "0xA56D5C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xA56EA0", Offset = "0xA56EA0", VA = "0xA56EA0", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xA56FE4", Offset = "0xA56FE4", VA = "0xA56FE4")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xA57390", Offset = "0xA57390", VA = "0xA57390")]
	private void TargetReached(Transform _transform)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xA575CC", Offset = "0xA575CC", VA = "0xA575CC")]
	public void KillAllCoroutines()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xA575D4", Offset = "0xA575D4", VA = "0xA575D4")]
	public void LaunchLastBooster(bool which = true)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xA57668", Offset = "0xA57668", VA = "0xA57668")]
	public void MoveToLastWorkingBooster()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xA57124", Offset = "0xA57124", VA = "0xA57124")]
	[ContextMenu("WeakPointHit")]
	public void WeakPointHit()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xA579FC", Offset = "0xA579FC", VA = "0xA579FC")]
	[IteratorStateMachine(typeof(<RebootSequence>d__68))]
	private IEnumerator RebootSequence()
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xA57A98", Offset = "0xA57A98", VA = "0xA57A98")]
	[ContextMenu("showCore")]
	private void ToggleCore()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xA565F8", Offset = "0xA565F8", VA = "0xA565F8")]
	public void ShowCore(bool showCore = true)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xA578B0", Offset = "0xA578B0", VA = "0xA578B0")]
	private void EndWeakpointPhase()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xA57AD8", Offset = "0xA57AD8", VA = "0xA57AD8")]
	private void EMPBlast()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xA5747C", Offset = "0xA5747C", VA = "0xA5747C")]
	[ContextMenu("StopAndLookAtPlayer")]
	private void StopAndLookAtPlayer()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xA56BE4", Offset = "0xA56BE4", VA = "0xA56BE4")]
	[ContextMenu("ToCenterWP")]
	public void ToCenterWP()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xA57914", Offset = "0xA57914", VA = "0xA57914")]
	private void KillAttachedPowerslings()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xA57D3C", Offset = "0xA57D3C", VA = "0xA57D3C")]
	[ContextMenu("AddDebugSlingConnection")]
	private void AddDebugSlingConnection()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xA57F40", Offset = "0xA57F40", VA = "0xA57F40")]
	[ContextMenu("AddDebugALLLLLSlingConnection")]
	private void AddAllSlingConnection()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xA57F5C", Offset = "0xA57F5C", VA = "0xA57F5C")]
	private void KillAllBotConnections()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xA57F60", Offset = "0xA57F60", VA = "0xA57F60", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xA583B0", Offset = "0xA583B0", VA = "0xA583B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xA5860C", Offset = "0xA5860C", VA = "0xA5860C")]
	[ContextMenu("Patrol")]
	private void Patrol()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xA58614", Offset = "0xA58614", VA = "0xA58614")]
	public void OriginalDroneValues()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xA57C04", Offset = "0xA57C04", VA = "0xA57C04")]
	public void Patrol(bool setNewWPs = false)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xA57D64", Offset = "0xA57D64", VA = "0xA57D64")]
	private void ChangeWaypoint()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xA58504", Offset = "0xA58504", VA = "0xA58504")]
	[ContextMenu("StartEMPBlastSequence")]
	private void StartEMPBlastSequence()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xA586D8", Offset = "0xA586D8", VA = "0xA586D8")]
	private void BoosterDestroyed()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xA58794", Offset = "0xA58794", VA = "0xA58794")]
	private void MeanFace()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xA587B8", Offset = "0xA587B8", VA = "0xA587B8")]
	private void NoTypeDelay()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xA587EC", Offset = "0xA587EC", VA = "0xA587EC")]
	private void InsertVerbalReactionAndLocalise(string key)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xA58664", Offset = "0xA58664", VA = "0xA58664")]
	[IteratorStateMachine(typeof(<EMPBlastSequence>d__94))]
	private IEnumerator EMPBlastSequence()
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xA588C8", Offset = "0xA588C8", VA = "0xA588C8")]
	public BossController()
	{
	}
}
[Token(Token = "0x2000077")]
public class BossLauncher : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject zapperMissile;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform debugTarget;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> targetList;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> missileList;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform launchPoint;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BossController bossController;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator rescanTargets;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isActive;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA58D4C", Offset = "0xA58D4C", VA = "0xA58D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA58E24", Offset = "0xA58E24", VA = "0xA58E24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA58EF8", Offset = "0xA58EF8", VA = "0xA58EF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA58FCC", Offset = "0xA58FCC", VA = "0xA58FCC")]
	private void DestroyerDestroy(GameObject destroyObject)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA59148", Offset = "0xA59148", VA = "0xA59148")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA59520", Offset = "0xA59520", VA = "0xA59520")]
	[ContextMenu("DebugLogMissiles")]
	private void DebugLogMissiles()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA59264", Offset = "0xA59264", VA = "0xA59264")]
	public void AddTarget(Transform _transform, bool _isGlued)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA596BC", Offset = "0xA596BC", VA = "0xA596BC")]
	private void CheckTargetsMissiles()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xA5990C", Offset = "0xA5990C", VA = "0xA5990C")]
	public BossLauncher()
	{
	}
}
[Token(Token = "0x2000078")]
public class BossLimits : MonoBehaviour
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> leftCuffs;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Glue> rightCuffs;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool limitsOff;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject limits;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int sidesRemoved;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelDirector_C3333_Resetto levelController;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xA5991C", Offset = "0xA5991C", VA = "0xA5991C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xA5999C", Offset = "0xA5999C", VA = "0xA5999C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xA59A1C", Offset = "0xA59A1C", VA = "0xA59A1C")]
	public void DebugKillLimits()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xA59B94", Offset = "0xA59B94", VA = "0xA59B94")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xA59C48", Offset = "0xA59C48", VA = "0xA59C48")]
	private void CheckBurnoutSide(List<Glue> side)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xA59E38", Offset = "0xA59E38", VA = "0xA59E38")]
	public BossLimits()
	{
	}
}
[Token(Token = "0x2000079")]
public class BubbleIconVisibility : MonoBehaviour
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool iconHidden;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iconToHide;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xA59E40", Offset = "0xA59E40", VA = "0xA59E40")]
	public static void ToggleIcons()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xA59F38", Offset = "0xA59F38", VA = "0xA59F38")]
	public BubbleIconVisibility()
	{
	}
}
[Token(Token = "0x200007A")]
public class BubbleTextTransitionFader : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] textMeshes;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] fadeMaterials;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color vertexColor;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string colorProp;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xA59F40", Offset = "0xA59F40", VA = "0xA59F40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xA59F44", Offset = "0xA59F44", VA = "0xA59F44")]
	private void SetFade()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xA5A0C8", Offset = "0xA5A0C8", VA = "0xA5A0C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xA5A128", Offset = "0xA5A128", VA = "0xA5A128")]
	public BubbleTextTransitionFader()
	{
	}
}
[Token(Token = "0x200007B")]
public class BurnoutAttachedToKinematic : MonoBehaviour
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glued myGlued;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool connectedToMe;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool connectedIsKinematic;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xA5A180", Offset = "0xA5A180", VA = "0xA5A180")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xA5A184", Offset = "0xA5A184", VA = "0xA5A184")]
	private void CheckGlued()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xA5A234", Offset = "0xA5A234", VA = "0xA5A234")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xA5A2B4", Offset = "0xA5A2B4", VA = "0xA5A2B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xA5A334", Offset = "0xA5A334", VA = "0xA5A334")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xA5A554", Offset = "0xA5A554", VA = "0xA5A554")]
	public BurnoutAttachedToKinematic()
	{
	}
}
[Token(Token = "0x200007C")]
public class Drawing : MonoBehaviour
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mRenderer;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material newMat;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color col;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float val;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject alarmSFX;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Joint myJoint;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xA5A55C", Offset = "0xA5A55C", VA = "0xA5A55C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xA5A5DC", Offset = "0xA5A5DC", VA = "0xA5A5DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xA5A65C", Offset = "0xA5A65C", VA = "0xA5A65C")]
	private void OnGrab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xA5A744", Offset = "0xA5A744", VA = "0xA5A744")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xA5A798", Offset = "0xA5A798", VA = "0xA5A798")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xA5A820", Offset = "0xA5A820", VA = "0xA5A820")]
	public void TellPolaJoint(Joint _polaJoint)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xA5A828", Offset = "0xA5A828", VA = "0xA5A828")]
	public void CreateDrawing(Texture2D _drawing)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xA5A924", Offset = "0xA5A924", VA = "0xA5A924")]
	public Drawing()
	{
	}
}
[Token(Token = "0x200007D")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fov;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float orthoSize;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraPositionProxyTransform;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform cameraTargetProxyTransform;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform playerTransform;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform targetTransform;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform camTrans;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 camPosOffset;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 cameraTargetOffset;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 camPosOffsetStore;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 cameraTargetOffsetStore;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 camDiff;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 targetDiff;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float followSpeedCamera;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float followSpeedTarget;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float camDist;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float startFov;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float distanceFactor;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool playerOrthoSizeTracking;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ratioScale;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform[] targets;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int currentTarget;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FollowCamera _instance;

	[Token(Token = "0x17000028")]
	public static FollowCamera Instance
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xA5A92C", Offset = "0xA5A92C", VA = "0xA5A92C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xA5AAB8", Offset = "0xA5AAB8", VA = "0xA5AAB8")]
	private void NextTarget()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xA5AB08", Offset = "0xA5AB08", VA = "0xA5AB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xA5AC50", Offset = "0xA5AC50", VA = "0xA5AC50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xA5AE38", Offset = "0xA5AE38", VA = "0xA5AE38")]
	public void SnapCameraToTargets()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xA5AFA0", Offset = "0xA5AFA0", VA = "0xA5AFA0")]
	public void RemoveOffset()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xA5AFAC", Offset = "0xA5AFAC", VA = "0xA5AFAC")]
	public void RemoveOffsetFull()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA5AFBC", Offset = "0xA5AFBC", VA = "0xA5AFBC")]
	public void SetOffsetCamPositionProxy(Vector3 vec)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA5B010", Offset = "0xA5B010", VA = "0xA5B010")]
	public void UnlocksCam()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA5B02C", Offset = "0xA5B02C", VA = "0xA5B02C")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x200007E")]
public class LookAtLerp : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turnSpeed;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distance;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera cam;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFactor;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool changeFOV;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool useConstructionManagerTarget;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool pureLookAt;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LookAtLerp _instance;

	[Token(Token = "0x17000029")]
	public static LookAtLerp Instance
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xA5B070", Offset = "0xA5B070", VA = "0xA5B070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA5B1FC", Offset = "0xA5B1FC", VA = "0xA5B1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA5B408", Offset = "0xA5B408", VA = "0xA5B408")]
	public void NewTarget(Collider _collider)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA5B248", Offset = "0xA5B248", VA = "0xA5B248")]
	private void SelectConstructionManagerTarget()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA5B4BC", Offset = "0xA5B4BC", VA = "0xA5B4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA5B7A4", Offset = "0xA5B7A4", VA = "0xA5B7A4")]
	public LookAtLerp()
	{
	}
}
[Token(Token = "0x200007F")]
public class LookAtVRCamera : MonoBehaviour
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform lookAtCamera;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 posOffset;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool pitchLock;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool rollLock;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool useMinHeight;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minHeight;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion q;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA5B7C4", Offset = "0xA5B7C4", VA = "0xA5B7C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA5B7E8", Offset = "0xA5B7E8", VA = "0xA5B7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xA5BA4C", Offset = "0xA5BA4C", VA = "0xA5BA4C")]
	public LookAtVRCamera()
	{
	}
}
[Token(Token = "0x2000080")]
public class Polaroid : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture camTex;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mRenderer;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D screenShot;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material newMat;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color col;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float val;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float developInc;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Joint myJoint;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOverlay;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isIntro;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D[] stars;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color32[] pix;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numStars;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA5BA5C", Offset = "0xA5BA5C", VA = "0xA5BA5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA5BADC", Offset = "0xA5BADC", VA = "0xA5BADC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xA5BB5C", Offset = "0xA5BB5C", VA = "0xA5BB5C")]
	private void OnGrab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xA5BC44", Offset = "0xA5BC44", VA = "0xA5BC44")]
	public void TellPolaJoint(Joint _polaJoint)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xA5BC4C", Offset = "0xA5BC4C", VA = "0xA5BC4C")]
	public void CreatePolaroid(bool _showOverlays, bool _isIntro, Camera _photoCamera)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xA5BEFC", Offset = "0xA5BEFC", VA = "0xA5BEFC")]
	private void SaveToLevel(bool _isIntro, bool isFreeCamera = false)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xA5C09C", Offset = "0xA5C09C", VA = "0xA5C09C")]
	private string GetSavePath()
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xA5BF00", Offset = "0xA5BF00", VA = "0xA5BF00")]
	private void DrawImage()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xA5C0A4", Offset = "0xA5C0A4", VA = "0xA5C0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xA5C11C", Offset = "0xA5C11C", VA = "0xA5C11C")]
	public Polaroid()
	{
	}
}
[Token(Token = "0x2000081")]
public class SpawnConstructionCamera : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject constructionCameraPrefab;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xA5C130", Offset = "0xA5C130", VA = "0xA5C130")]
	public SpawnConstructionCamera()
	{
	}
}
[Token(Token = "0x2000082")]
public class SpawnPolaroidImage : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionValidationPhotoCamera vCamera;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject polaPrefab;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform polaAttach;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HingeJoint hingeJoint;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xA5C138", Offset = "0xA5C138", VA = "0xA5C138")]
	public void SpawnPolaroid(bool _showOverlays, bool useJoints = true, bool isIntro = false)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xA5C504", Offset = "0xA5C504", VA = "0xA5C504")]
	public void DestroyJoint()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xA5C508", Offset = "0xA5C508", VA = "0xA5C508")]
	public SpawnPolaroidImage()
	{
	}
}
[Token(Token = "0x2000083")]
public class SpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fov;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xA5C510", Offset = "0xA5C510", VA = "0xA5C510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xA5C568", Offset = "0xA5C568", VA = "0xA5C568")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xA5C58C", Offset = "0xA5C58C", VA = "0xA5C58C")]
	public SpectatorCamera()
	{
	}
}
[Token(Token = "0x2000084")]
public class CameraColliderFrustrum : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionValidationPhotoCamera validationCamera;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xA5C59C", Offset = "0xA5C59C", VA = "0xA5C59C", Slot = "4")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xA5C860", Offset = "0xA5C860", VA = "0xA5C860", Slot = "5")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xA5CA58", Offset = "0xA5CA58", VA = "0xA5CA58")]
	public CameraColliderFrustrum()
	{
	}
}
[Token(Token = "0x2000085")]
public class CameraDisplayController : MonoBehaviour
{
	[Token(Token = "0x2000086")]
	[CompilerGenerated]
	private sealed class <Blink>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraDisplayController <>4__this;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <s>5__2;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000284")]
			[Address(RVA = "0xA5CEBC", Offset = "0xA5CEBC", VA = "0xA5CEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0xA5CF04", Offset = "0xA5CF04", VA = "0xA5CF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xA5CDBC", Offset = "0xA5CDBC", VA = "0xA5CDBC")]
		[DebuggerHidden]
		public <Blink>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xA5CDEC", Offset = "0xA5CDEC", VA = "0xA5CDEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xA5CDF0", Offset = "0xA5CDF0", VA = "0xA5CDF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xA5CEC4", Offset = "0xA5CEC4", VA = "0xA5CEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CompletionDial;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LedON;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LedOFF;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro text;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool on;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro textTargets;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro textCompletion;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro textTentacles;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GameUI;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isBlinking;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Sequence seq;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string targetText;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xA5CA60", Offset = "0xA5CA60", VA = "0xA5CA60")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xA5CBA4", Offset = "0xA5CBA4", VA = "0xA5CBA4")]
	public void SetDigit(int A, int B)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xA5CC7C", Offset = "0xA5CC7C", VA = "0xA5CC7C")]
	public void ToggleUI(bool UI)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xA5CAD0", Offset = "0xA5CAD0", VA = "0xA5CAD0")]
	public void SetDial(float t)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xA5CC9C", Offset = "0xA5CC9C", VA = "0xA5CC9C")]
	public void SetLed(bool state)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xA5CCE4", Offset = "0xA5CCE4", VA = "0xA5CCE4")]
	public void BlinkLed(bool on)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xA5CD48", Offset = "0xA5CD48", VA = "0xA5CD48")]
	[IteratorStateMachine(typeof(<Blink>d__18))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xA5CDE4", Offset = "0xA5CDE4", VA = "0xA5CDE4")]
	public CameraDisplayController()
	{
	}
}
[Token(Token = "0x2000087")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FadeController fadeController;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fadeControllerPrefab;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color targetColor;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color titleColor;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xA5CF0C", Offset = "0xA5CF0C", VA = "0xA5CF0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xA5D070", Offset = "0xA5D070", VA = "0xA5D070")]
	public void TransitionFade(bool toTitle, float _duration, float _delay = 0f)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xA5D10C", Offset = "0xA5D10C", VA = "0xA5D10C")]
	public void DoFade(Color _color, float _duration, float _delay = 0f)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xA5D1DC", Offset = "0xA5D1DC", VA = "0xA5D1DC")]
	private void FadeTo()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xA5D20C", Offset = "0xA5D20C", VA = "0xA5D20C")]
	public void SetColor(Color _color)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xA5D228", Offset = "0xA5D228", VA = "0xA5D228")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x2000088")]
public class CameraSmooth : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cameraTarget;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cameraSelf;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool enableSmooth;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rollLock;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool pitchLock;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int fov;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float XRotationOffset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform helperTrans;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float lerpPositionRateStatic;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float lerpRotationRateStatic;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool smoothCamEnabled;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FlyCam flyCam;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform originalCameraTarget;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool flyCamActive;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xA5D280", Offset = "0xA5D280", VA = "0xA5D280")]
	public void Start()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xA5D7C4", Offset = "0xA5D7C4", VA = "0xA5D7C4")]
	public void DestroySmoothCamera()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xA5D890", Offset = "0xA5D890", VA = "0xA5D890")]
	[ContextMenu("ToggleFlyCam")]
	public void ToggleFlyCam()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xA5D944", Offset = "0xA5D944", VA = "0xA5D944")]
	public void ResetFlyCamPosition()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xA5D68C", Offset = "0xA5D68C", VA = "0xA5D68C")]
	public void SetFlyCam(bool active)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xA5D9D0", Offset = "0xA5D9D0", VA = "0xA5D9D0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xA5DE08", Offset = "0xA5DE08", VA = "0xA5DE08")]
	public CameraSmooth()
	{
	}
}
[Token(Token = "0x2000089")]
public class CameraSurfaceFX : MonoBehaviour
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isUnderWater;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform trans;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color underWaterColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distanceToSurface;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA5DE20", Offset = "0xA5DE20", VA = "0xA5DE20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA5DF10", Offset = "0xA5DF10", VA = "0xA5DF10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA5DF9C", Offset = "0xA5DF9C", VA = "0xA5DF9C")]
	private void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA5DFBC", Offset = "0xA5DFBC", VA = "0xA5DFBC")]
	public static void UnderwaterDOF(bool which)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA5E07C", Offset = "0xA5E07C", VA = "0xA5E07C")]
	public static void UnderWaterSFX(bool _which)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA5E0D0", Offset = "0xA5E0D0", VA = "0xA5E0D0")]
	public CameraSurfaceFX()
	{
	}
}
[Token(Token = "0x200008A")]
public class CarryOver_base : MonoBehaviour
{
	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA5E0D8", Offset = "0xA5E0D8", VA = "0xA5E0D8", Slot = "4")]
	public virtual void CleanUpStart()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA5E13C", Offset = "0xA5E13C", VA = "0xA5E13C", Slot = "5")]
	public virtual void CleanUpEnd()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA5E1E0", Offset = "0xA5E1E0", VA = "0xA5E1E0")]
	public CarryOver_base()
	{
	}
}
[Token(Token = "0x200008B")]
public class CarryOver_Human : CarryOver_base
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA5E1E8", Offset = "0xA5E1E8", VA = "0xA5E1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA5E240", Offset = "0xA5E240", VA = "0xA5E240", Slot = "4")]
	public override void CleanUpStart()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA5E2C0", Offset = "0xA5E2C0", VA = "0xA5E2C0", Slot = "5")]
	public override void CleanUpEnd()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA5E318", Offset = "0xA5E318", VA = "0xA5E318")]
	public CarryOver_Human()
	{
	}
}
[Token(Token = "0x200008C")]
public class CarryOver_SingleMagnet : CarryOver_base
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glue magnet;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA5E320", Offset = "0xA5E320", VA = "0xA5E320")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA5E3F8", Offset = "0xA5E3F8", VA = "0xA5E3F8", Slot = "4")]
	public override void CleanUpStart()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA5E4C4", Offset = "0xA5E4C4", VA = "0xA5E4C4", Slot = "5")]
	public override void CleanUpEnd()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xA5E5AC", Offset = "0xA5E5AC", VA = "0xA5E5AC")]
	public CarryOver_SingleMagnet()
	{
	}
}
[Token(Token = "0x200008D")]
public class ChangeBreakforce : MonoBehaviour
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float breakForce;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xA5E5B4", Offset = "0xA5E5B4", VA = "0xA5E5B4")]
	public void ChangeForce()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA5E63C", Offset = "0xA5E63C", VA = "0xA5E63C")]
	public ChangeBreakforce()
	{
	}
}
[Token(Token = "0x200008E")]
public class ChattyHumans : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum State
	{
		[Token(Token = "0x40002F9")]
		chat,
		[Token(Token = "0x40002FA")]
		impatient,
		[Token(Token = "0x40002FB")]
		annoyed
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State chatState;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isEndgame;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> chatList;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int chatIndex;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cooldownStart;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int temperLimit;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int temper;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool doesEndgameLines;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool stopTalking;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool smallChanceOfNonEndgame;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float chanceOfTalking;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool noChitChat;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int annoyed;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA5E650", Offset = "0xA5E650", VA = "0xA5E650")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA5E6EC", Offset = "0xA5E6EC", VA = "0xA5E6EC")]
	private void GetMe()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA5E79C", Offset = "0xA5E79C", VA = "0xA5E79C")]
	private void GetLines()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA5EB40", Offset = "0xA5EB40", VA = "0xA5EB40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA5EC78", Offset = "0xA5EC78", VA = "0xA5EC78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA5EDA8", Offset = "0xA5EDA8", VA = "0xA5EDA8")]
	private void SimTap()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA5EDD8", Offset = "0xA5EDD8", VA = "0xA5EDD8", Slot = "4")]
	public virtual void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA5EF04", Offset = "0xA5EF04", VA = "0xA5EF04")]
	private void ChatWithPlayer()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA5F0DC", Offset = "0xA5F0DC", VA = "0xA5F0DC", Slot = "5")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA5F160", Offset = "0xA5F160", VA = "0xA5F160")]
	public ChattyHumans()
	{
	}
}
[Token(Token = "0x2000090")]
public class CityReplayLabel : MonoBehaviour
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject backToCity;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backToReplay;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA5F17C", Offset = "0xA5F17C", VA = "0xA5F17C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA5F180", Offset = "0xA5F180", VA = "0xA5F180")]
	private void Init()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA5F274", Offset = "0xA5F274", VA = "0xA5F274")]
	public CityReplayLabel()
	{
	}
}
[Token(Token = "0x2000091")]
public class CollisionBase : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	public delegate void CollisionDictChangedDelegate(Rigidbody rb, bool added = true, string baseID = "");

	[Token(Token = "0x2000093")]
	public delegate void CollisionDictChangedObjectDelegate(Rigidbody rb, bool added = true, string baseID = "");

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> collisionsListNonRB;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string collisionBaseID;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool excludeStaticRBs;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool ignoreTriggers;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool useIgnoreCategory;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<CategoryDefinition> ignoreCategory;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useIgnoreRBs;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> ignoreRBs;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool trackRBs;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool trackColliders;

	[Token(Token = "0x14000006")]
	public static event CollisionDictChangedDelegate OnCollisionDictChanged
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xA5F27C", Offset = "0xA5F27C", VA = "0xA5F27C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xA5F334", Offset = "0xA5F334", VA = "0xA5F334")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event CollisionDictChangedObjectDelegate OnCollisionDictObjectChanged
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xA5607C", Offset = "0xA5607C", VA = "0xA5607C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xA5619C", Offset = "0xA5619C", VA = "0xA5619C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA5F3EC", Offset = "0xA5F3EC", VA = "0xA5F3EC", Slot = "4")]
	public virtual void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA5F3F0", Offset = "0xA5F3F0", VA = "0xA5F3F0", Slot = "5")]
	public virtual void CollisionDictChangedNonRB(Collider col, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA5F3F4", Offset = "0xA5F3F4", VA = "0xA5F3F4", Slot = "6")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA5F8E4", Offset = "0xA5F8E4", VA = "0xA5F8E4", Slot = "7")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA5FB64", Offset = "0xA5FB64", VA = "0xA5FB64")]
	public CollisionBase()
	{
	}
}
[Token(Token = "0x2000094")]
public class CollisionColliderBase : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> colliderList;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask ignoreLayers;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int totalCollisions;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CategoryDefinition> ignoreCategory;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Rigidbody> ignoreRBs;

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA5FF28", Offset = "0xA5FF28", VA = "0xA5FF28", Slot = "4")]
	public virtual void CollisionDictChanged(Collision collision, bool added = true)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA5FF2C", Offset = "0xA5FF2C", VA = "0xA5FF2C")]
	private void CleanList()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA6003C", Offset = "0xA6003C", VA = "0xA6003C", Slot = "5")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA6020C", Offset = "0xA6020C", VA = "0xA6020C", Slot = "6")]
	public virtual void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA603E0", Offset = "0xA603E0", VA = "0xA603E0")]
	public CollisionColliderBase()
	{
	}
}
[Token(Token = "0x2000095")]
public class CollisionTest : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody colRB;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA604B8", Offset = "0xA604B8", VA = "0xA604B8")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA605D8", Offset = "0xA605D8", VA = "0xA605D8")]
	public void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA606F8", Offset = "0xA606F8", VA = "0xA606F8")]
	public CollisionTest()
	{
	}
}
[Token(Token = "0x2000096")]
public class ConnectedJointBase : GlueConnections
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Joint connections")]
	public ConnectedJointBase connectedJointBase;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool hasConnectedJoint;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Joint connectedJointJoint;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool isMainJoint;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xA60700", Offset = "0xA60700", VA = "0xA60700")]
	public ConnectedJointBase()
	{
	}
}
[Token(Token = "0x2000097")]
public class AchievementConnections : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GlueConnections myConnection;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EntityDefinition> forbiddenEntities;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Rigidbody> forbiddenRBs;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool locked;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool conditionMet;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Achievement achievement;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xA60708", Offset = "0xA60708", VA = "0xA60708")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xA607B8", Offset = "0xA607B8", VA = "0xA607B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA608F4", Offset = "0xA608F4", VA = "0xA608F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA60A18", Offset = "0xA60A18", VA = "0xA60A18")]
	private void LevelComplete()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA60AA4", Offset = "0xA60AA4", VA = "0xA60AA4")]
	private void ChainCheck(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA60D08", Offset = "0xA60D08", VA = "0xA60D08")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xA60D18", Offset = "0xA60D18", VA = "0xA60D18")]
	public AchievementConnections()
	{
	}
}
[Token(Token = "0x2000098")]
public class AnalogWheelDriver : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JointMotor m;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastAngle;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float diff;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float velocity;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startAngle;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool snapBack;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float snapBackFactor;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool useLimits;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float limit;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float setSpeed;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float motorForce;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ID;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minVelocity;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float stepIncPowFactor;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertedVelocity;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool rollOut;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float speedVal;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float powFactor;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xA60D20", Offset = "0xA60D20", VA = "0xA60D20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xA60DA0", Offset = "0xA60DA0", VA = "0xA60DA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xA60E20", Offset = "0xA60E20", VA = "0xA60E20")]
	public void OnLeverUpdate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xA60ED0", Offset = "0xA60ED0", VA = "0xA60ED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xA60E38", Offset = "0xA60E38", VA = "0xA60E38")]
	public void SetSpeed(float _speed, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xA61038", Offset = "0xA61038", VA = "0xA61038")]
	private void SnapBack()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xA61124", Offset = "0xA61124", VA = "0xA61124")]
	public AnalogWheelDriver()
	{
	}
}
[Token(Token = "0x2000099")]
public class AutoSpawn : CreateVisualTarget
{
	[Token(Token = "0x200009A")]
	public delegate void ObjectSpawned(GameObject spawnObject, AutoSpawn spawner);

	[Token(Token = "0x200009B")]
	public enum ID
	{
		[Token(Token = "0x4000352")]
		spawner0,
		[Token(Token = "0x4000353")]
		spawner1,
		[Token(Token = "0x4000354")]
		spawner2,
		[Token(Token = "0x4000355")]
		spawner3,
		[Token(Token = "0x4000356")]
		spawner4,
		[Token(Token = "0x4000357")]
		spawner5
	}

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Collider> colliders;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("WARNING: can only have one prefab for penetration area reasons")]
	public GameObject[] myPrefab;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float wait;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waitCounter;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool SpawnAsIs;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool useWeightLabels;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool useSpawnerRotation;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool randomRotation;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool makeKinematicAfterSpawn;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int MaxElements;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int spawnedElements;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float initialSpawnWait;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int nextSpawn;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject spawnGameObject;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool spawnerInactive;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool showGhost;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool recoverSunkObjects;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool released;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public ID spawnerID;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject editorSpawnResourcesGameObject;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool autoSpawn;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool autoSpawnFirst;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool buttonPressed;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	public bool overrideFloat;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float secondsToFloat;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float timeToFullSink;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EntityDefinition currentEntityDef;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Entity sunkThing;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int spawnObjectColliders;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int collidersCounted;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Rigidbody attachedRB;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool justSpawned;

	[Token(Token = "0x14000008")]
	public static event ObjectSpawned OnObjectSpawned
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xA6115C", Offset = "0xA6115C", VA = "0xA6115C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xA61214", Offset = "0xA61214", VA = "0xA61214")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA612CC", Offset = "0xA612CC", VA = "0xA612CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA614E8", Offset = "0xA614E8", VA = "0xA614E8")]
	private void RemoveLegacyElements()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA61718", Offset = "0xA61718", VA = "0xA61718")]
	private void SpawnerGhost()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA617D0", Offset = "0xA617D0", VA = "0xA617D0")]
	private void EditorCreateGhost()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA61600", Offset = "0xA61600", VA = "0xA61600")]
	private void SelectNextSpawn()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA61970", Offset = "0xA61970", VA = "0xA61970")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA61C60", Offset = "0xA61C60", VA = "0xA61C60")]
	private void OnGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA61C64", Offset = "0xA61C64", VA = "0xA61C64")]
	[ContextMenu("SpawnManual")]
	public void ManualSpawnRequest()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA61C70", Offset = "0xA61C70", VA = "0xA61C70", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA61D98", Offset = "0xA61D98", VA = "0xA61D98", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA61EC0", Offset = "0xA61EC0", VA = "0xA61EC0")]
	private void WaterDeactivate(Rigidbody _rb)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA62030", Offset = "0xA62030", VA = "0xA62030")]
	public void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA61A68", Offset = "0xA61A68", VA = "0xA61A68")]
	private void CheckAreBusy()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA621E4", Offset = "0xA621E4", VA = "0xA621E4")]
	private void SpawnerDepleted()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA621F4", Offset = "0xA621F4", VA = "0xA621F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA62768", Offset = "0xA62768", VA = "0xA62768")]
	private void SetFloatingValues(GameObject go)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA62674", Offset = "0xA62674", VA = "0xA62674")]
	private void FloatingCheck(Rigidbody _rb)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA62828", Offset = "0xA62828", VA = "0xA62828")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA629A0", Offset = "0xA629A0", VA = "0xA629A0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA62A30", Offset = "0xA62A30", VA = "0xA62A30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA62A68", Offset = "0xA62A68", VA = "0xA62A68")]
	public AutoSpawn()
	{
	}
}
[Token(Token = "0x200009C")]
public class BlockTargets : MonoBehaviour
{
	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA62C24", Offset = "0xA62C24", VA = "0xA62C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA62D60", Offset = "0xA62D60", VA = "0xA62D60")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA62DB0", Offset = "0xA62DB0", VA = "0xA62DB0")]
	public BlockTargets()
	{
	}
}
[Token(Token = "0x200009D")]
public class Cannon : MonoBehaviour
{
	[Token(Token = "0x200009E")]
	public delegate void OnCannonEmptyDelegate();

	[Token(Token = "0x200009F")]
	public delegate void OnCannonFiredDelegate(GameObject _go);

	[Token(Token = "0x20000A0")]
	[CompilerGenerated]
	private sealed class <CountDown>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cannon <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0xA63D88", Offset = "0xA63D88", VA = "0xA63D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0xA63DD0", Offset = "0xA63DD0", VA = "0xA63DD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xA6322C", Offset = "0xA6322C", VA = "0xA6322C")]
		[DebuggerHidden]
		public <CountDown>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xA63C6C", Offset = "0xA63C6C", VA = "0xA63C6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xA63C70", Offset = "0xA63C70", VA = "0xA63C70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xA63D90", Offset = "0xA63D90", VA = "0xA63D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <Shoot>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cannon <>4__this;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <barrelRotTime>5__2;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031E")]
			[Address(RVA = "0xA64148", Offset = "0xA64148", VA = "0xA64148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000320")]
			[Address(RVA = "0xA64190", Offset = "0xA64190", VA = "0xA64190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xA635CC", Offset = "0xA635CC", VA = "0xA635CC")]
		[DebuggerHidden]
		public <Shoot>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xA63DD8", Offset = "0xA63DD8", VA = "0xA63DD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xA63DDC", Offset = "0xA63DDC", VA = "0xA63DDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xA64150", Offset = "0xA64150", VA = "0xA64150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string CannonBoom;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string Klaxxon;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform Swivel;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform barrel;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform spawner;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] cannonBall;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool fireProjectilesRandomly;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int cannonBallIdx;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float swivelMax;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float barrelMax;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float barrelMin;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float velocityMin;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float velocityMax;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool autoStart;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int maxShots;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float waitBetweenShots;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isShooting;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro shots;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float signPostDirectionTime;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool noExplosion;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAngularVelocity;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float initWait;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 rotOffset;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool blocked;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int countDown;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int maxCountDown;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float barrelRot;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentProjectile;

	[Token(Token = "0x1700002C")]
	public int ShotsFired
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xA630A0", Offset = "0xA630A0", VA = "0xA630A0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xA630A8", Offset = "0xA630A8", VA = "0xA630A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event OnCannonEmptyDelegate OnCannonEmpty
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xA62DB8", Offset = "0xA62DB8", VA = "0xA62DB8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xA62E70", Offset = "0xA62E70", VA = "0xA62E70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event OnCannonFiredDelegate OnCannonFired
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xA62F28", Offset = "0xA62F28", VA = "0xA62F28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xA62FE4", Offset = "0xA62FE4", VA = "0xA62FE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xA630B0", Offset = "0xA630B0", VA = "0xA630B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xA63188", Offset = "0xA63188", VA = "0xA63188")]
	public void ShootCountdown()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA631B8", Offset = "0xA631B8", VA = "0xA631B8")]
	[IteratorStateMachine(typeof(<CountDown>d__41))]
	private IEnumerator CountDown()
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA63254", Offset = "0xA63254", VA = "0xA63254")]
	public void StartShooting(bool _force = false)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA63378", Offset = "0xA63378", VA = "0xA63378")]
	[ContextMenu("ToggleShooting")]
	public void ToggleShooting()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA634C0", Offset = "0xA634C0", VA = "0xA634C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA63540", Offset = "0xA63540", VA = "0xA63540")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA635C0", Offset = "0xA635C0", VA = "0xA635C0")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA63304", Offset = "0xA63304", VA = "0xA63304")]
	[IteratorStateMachine(typeof(<Shoot>d__48))]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA635F4", Offset = "0xA635F4", VA = "0xA635F4")]
	private void SpawnProjectile()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA633C0", Offset = "0xA633C0", VA = "0xA633C0")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA63A34", Offset = "0xA63A34", VA = "0xA63A34")]
	public Cannon()
	{
	}
}
[Token(Token = "0x20000A2")]
public class CannonShotCameraTarget : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool trackCannonShots;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA64198", Offset = "0xA64198", VA = "0xA64198")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA64210", Offset = "0xA64210", VA = "0xA64210")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA64288", Offset = "0xA64288", VA = "0xA64288")]
	private void CannonFired(GameObject _go)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA6433C", Offset = "0xA6433C", VA = "0xA6433C")]
	public CannonShotCameraTarget()
	{
	}
}
[Token(Token = "0x20000A3")]
public class CollisionsCatcher : MonoBehaviour
{
	[Token(Token = "0x20000A4")]
	public delegate void OnCollidingDelegate(bool _isColliding, Rigidbody _rb);

	[Token(Token = "0x20000A5")]
	public delegate void OnDisqualifiedDelegate(Rigidbody _rb);

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable grabbable;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inWater;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool wasInWater;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool hasCollided;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool ignoreTentacleCollisions;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hasExploded;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool cannotExplode;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool isDisqualified;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool wasGrabbed;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool allowWaterCollision;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool allowOtherCollision;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x1400000B")]
	public event OnCollidingDelegate OnColliding
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xA6434C", Offset = "0xA6434C", VA = "0xA6434C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xA643E8", Offset = "0xA643E8", VA = "0xA643E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event OnDisqualifiedDelegate OnDisqualified
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xA64484", Offset = "0xA64484", VA = "0xA64484")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xA6453C", Offset = "0xA6453C", VA = "0xA6453C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xA645F4", Offset = "0xA645F4", VA = "0xA645F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xA646A8", Offset = "0xA646A8", VA = "0xA646A8")]
	private void CheckGrabbable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xA647C0", Offset = "0xA647C0", VA = "0xA647C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xA648A8", Offset = "0xA648A8", VA = "0xA648A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA64990", Offset = "0xA64990", VA = "0xA64990")]
	public bool GetIsDisqualified()
	{
		return default(bool);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA64998", Offset = "0xA64998", VA = "0xA64998")]
	private void OnGrab(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA649AC", Offset = "0xA649AC", VA = "0xA649AC")]
	public void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA64AA8", Offset = "0xA64AA8", VA = "0xA64AA8")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA64B28", Offset = "0xA64B28", VA = "0xA64B28")]
	public int GetCollisions()
	{
		return default(int);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xA64B78", Offset = "0xA64B78", VA = "0xA64B78")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xA64DAC", Offset = "0xA64DAC", VA = "0xA64DAC")]
	private void OnCollisionEnter(Collision _collision)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xA64DD8", Offset = "0xA64DD8", VA = "0xA64DD8")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xA64F00", Offset = "0xA64F00", VA = "0xA64F00")]
	private void OnCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xA64F2C", Offset = "0xA64F2C", VA = "0xA64F2C")]
	public CollisionsCatcher()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ConstructionCrane : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 speed;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotSpeed;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxVelocity;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRotVelocity;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftLimit;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightLimit;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float addOnX;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xA651EC", Offset = "0xA651EC", VA = "0xA651EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xA65244", Offset = "0xA65244", VA = "0xA65244")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA654BC", Offset = "0xA654BC", VA = "0xA654BC")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA654C4", Offset = "0xA654C4", VA = "0xA654C4")]
	public void SetRotation(float _speed)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA654D4", Offset = "0xA654D4", VA = "0xA654D4")]
	public ConstructionCrane()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ConstructionPanel : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] lamps;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite pending;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite done;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cameraHint;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastNum;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Timer timer;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lastDone;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int lastSoundNumDone;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lastSoundNumDoneIncOnly;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cooldownTimer;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float cooldown;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 vfxPos;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform fireworksSpawn;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool suppressInitAudioEvents;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ConstructionPanel _instance;

	[Token(Token = "0x17000031")]
	public static ConstructionPanel Instance
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xA65AD0", Offset = "0xA65AD0", VA = "0xA65AD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA654E8", Offset = "0xA654E8", VA = "0xA654E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA65520", Offset = "0xA65520", VA = "0xA65520")]
	public void LevelCompleteFX()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA6559C", Offset = "0xA6559C", VA = "0xA6559C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA65670", Offset = "0xA65670", VA = "0xA65670")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA65744", Offset = "0xA65744", VA = "0xA65744")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA65760", Offset = "0xA65760", VA = "0xA65760")]
	private void TargetChanges(int _done, int _needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA65A40", Offset = "0xA65A40", VA = "0xA65A40")]
	private void PlayTargetDoneAudio()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA6599C", Offset = "0xA6599C", VA = "0xA6599C")]
	private void SetCameraHint()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xA658E8", Offset = "0xA658E8", VA = "0xA658E8")]
	private void SetLamps(int _done, int _needed)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xA65C5C", Offset = "0xA65C5C", VA = "0xA65C5C")]
	public ConstructionPanel()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ConstructionResources : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ConstructionResources _instance;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material targetOutline;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material targetOutlineOK;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material removeOutline;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material targetOutlineEntityOK;

	[Token(Token = "0x17000032")]
	public static ConstructionResources Instance
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xA65C78", Offset = "0xA65C78", VA = "0xA65C78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xA65E04", Offset = "0xA65E04", VA = "0xA65E04")]
	public ConstructionResources()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ConstructionRocket : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject thrustObjects;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool boosterOn;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("needs to be set if burntime is -1 for factor calc")]
	public float forceCap;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentForce;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fullPowerReachedFactor;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float inc;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useGyro;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 target;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useLaunchOrientationAsTarget;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float uprightTorque;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxBurnTime;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float burnTime;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool explodeOnBurnout;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem explosionFX;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int delay;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool hasDelay;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable grabbable;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isArmed;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject blink;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material blinkMat;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material originalMat;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer blinkMeshRenderer;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool inWater;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool initialised;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool launchAssist;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float maxVelocity;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float forceFactor;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform ExhaustScale;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 minScale;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 maxScale;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minScaleExplosion;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float maxScaleExplosion;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion rot;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float minVel;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xA65E0C", Offset = "0xA65E0C", VA = "0xA65E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xA65F98", Offset = "0xA65F98", VA = "0xA65F98")]
	private void SetArmed()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA65FF4", Offset = "0xA65FF4", VA = "0xA65FF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA66180", Offset = "0xA66180", VA = "0xA66180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA66310", Offset = "0xA66310", VA = "0xA66310")]
	private void EnterWater(bool _inWater)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA65FD4", Offset = "0xA65FD4", VA = "0xA65FD4")]
	private void SetEngines(bool _which)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA66364", Offset = "0xA66364", VA = "0xA66364")]
	public void ToggleBooster()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA66400", Offset = "0xA66400", VA = "0xA66400")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA66344", Offset = "0xA66344", VA = "0xA66344")]
	public void SetBoosterOff()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA66484", Offset = "0xA66484", VA = "0xA66484")]
	public void SetBooster()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA6648C", Offset = "0xA6648C", VA = "0xA6648C")]
	[ContextMenu("Unarm")]
	public void UnarmRocket()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA66494", Offset = "0xA66494", VA = "0xA66494")]
	[ContextMenu("Arm")]
	public void ArmRocket()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA66500", Offset = "0xA66500", VA = "0xA66500")]
	[ContextMenu("ArmAndStart")]
	public void ArmAndStart()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA66410", Offset = "0xA66410", VA = "0xA66410")]
	public void StartBooster()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA66374", Offset = "0xA66374", VA = "0xA66374")]
	public void SetBooster(bool _mode = true)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA66518", Offset = "0xA66518", VA = "0xA66518")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA66BB8", Offset = "0xA66BB8", VA = "0xA66BB8")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xA6651C", Offset = "0xA6651C", VA = "0xA6651C")]
	private void EngineBooster()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA66E20", Offset = "0xA66E20", VA = "0xA66E20")]
	public ConstructionRocket()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ConstructionStabiliser : MonoBehaviour
{
	[Token(Token = "0x20000AB")]
	public enum StabilizeDirection
	{
		[Token(Token = "0x40003E0")]
		up,
		[Token(Token = "0x40003E1")]
		forward,
		[Token(Token = "0x40003E2")]
		right
	}

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 target;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float uprightTorque;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StabilizeDirection stabilizeDirection;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion rot;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool stabiliseActive;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool easeOutForce;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool useGlueScale;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Glue glue;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float forceUsed;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ForceMode forceMode;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool onlyStabiliseOverVelocity;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float stabiliseVelocity;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float factor;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 quatTarget;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xA66E74", Offset = "0xA66E74", VA = "0xA66E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xA66F6C", Offset = "0xA66F6C", VA = "0xA66F6C")]
	public void SetStabilise(bool _which)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA66F78", Offset = "0xA66F78", VA = "0xA66F78")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xA66F7C", Offset = "0xA66F7C", VA = "0xA66F7C")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xA671D0", Offset = "0xA671D0", VA = "0xA671D0")]
	public ConstructionStabiliser()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ConstructionTarget : Entity
{
	[Token(Token = "0x20000AD")]
	public enum rotationAngle
	{
		[Token(Token = "0x400042A")]
		right,
		[Token(Token = "0x400042B")]
		up,
		[Token(Token = "0x400042C")]
		forward
	}

	[Token(Token = "0x20000AE")]
	[CompilerGenerated]
	private sealed class <WrongEntityBlink>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConstructionTarget <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0xB49410", Offset = "0xB49410", VA = "0xB49410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0xB49458", Offset = "0xB49458", VA = "0xB49458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xB4861C", Offset = "0xB4861C", VA = "0xB4861C")]
		[DebuggerHidden]
		public <WrongEntityBlink>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xB49340", Offset = "0xB49340", VA = "0xB49340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xB49344", Offset = "0xB49344", VA = "0xB49344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xB49418", Offset = "0xB49418", VA = "0xB49418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<Rigidbody, List<Collider>> wrongEntityDict;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<Rigidbody, Grabbable> grabbables;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<Rigidbody, Entity> entities;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public TextMeshPro tm;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform attach;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool isPositionTarget;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Entity attachedEntity;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("---Setup:category needs to be set explicitly. not using myEntity.categoryDefinition")]
	public CategoryDefinition MyCategory;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useEntityCategory;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool locked;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("SET ON CORRECT")]
	public Entity triggerEntity;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public GameObject target;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int solutionScore;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool allowGrabbedComplete;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool doNotRegisterAsTarget;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	public bool ignoreIfInsideTarget;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	public bool doNotCountTowardsNeeded;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool noAutoInstancing;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[Header("---Positioning rules")]
	public bool allowMirroredCorrect;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool ignoreRotation;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public rotationAngle targetRotationAngle;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector3[] pointAngleVectors;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float rotationPrecision;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float distancePrecision;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool useGlueScale;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float glueScale;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float glueScaleTolerance;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public List<Entity> distanceRotationOK;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("---OOB")]
	public bool addToOOBDetection;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool doNotOOBConstructionTarget;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	[Header("---Photo rules")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool overwritePhotoRB;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Rigidbody targetRigidbodyForPhoto;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool isAutoCameraTarget;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool initialised;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	[Header("---Colliders")]
	private bool hasTargetCollider;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool useOverrideTrigger;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Collider overrideCollider;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider usedTargetCollider;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject successFX;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool solutionValueChangeOnDestroyTrackedEntity;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int collisionCount;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int targetValue;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int targetID;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float posDiff;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool tEntityIsGrabbed;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	private bool isPlacedPrecisely;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	private bool positionOK;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
	private bool rotationOK;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Entity lastEntity;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("---Feedback")]
	public bool playIndividualSound;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[EventRef]
	public string completeSFX;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool useOkFeedback;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float OKFeedbackScale;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool wrongEntityIndicator;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool hideVisual;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public List<Renderer> outlines;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("---After completion")]
	public bool makeKinematicOnComplete;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool forceToIdealPositionOnComplete;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool mergeWithRB;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool attachWithFixedJoint;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Rigidbody mergeRB;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Material[] sharedMaterials;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int count;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 forward;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 targetDir;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float angle;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int blinks;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool blockCheck;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB449C8", Offset = "0xB449C8", VA = "0xB449C8", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB449F0", Offset = "0xB449F0", VA = "0xB449F0", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB44A64", Offset = "0xB44A64", VA = "0xB44A64", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB44AD8", Offset = "0xB44AD8", VA = "0xB44AD8", Slot = "7")]
	public virtual void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB44DF0", Offset = "0xB44DF0", VA = "0xB44DF0", Slot = "8")]
	public virtual void MyEntityDestroyed()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB44DF4", Offset = "0xB44DF4", VA = "0xB44DF4", Slot = "9")]
	public virtual void ManualSetScore(int _which)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB44DFC", Offset = "0xB44DFC", VA = "0xB44DFC", Slot = "10")]
	public virtual Rigidbody PhotoRB()
	{
		return null;
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB44E90", Offset = "0xB44E90", VA = "0xB44E90")]
	private bool IsInsideTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB44F9C", Offset = "0xB44F9C", VA = "0xB44F9C")]
	private void DestroyInsideTarget()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB45020", Offset = "0xB45020", VA = "0xB45020")]
	private void DestroyInsideTargetEditor()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB45188", Offset = "0xB45188", VA = "0xB45188", Slot = "11")]
	[ContextMenu("EditorSetTarget")]
	public virtual void EditorSetTarget()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB45214", Offset = "0xB45214", VA = "0xB45214")]
	private void AttachTargetVisual()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB456A8", Offset = "0xB456A8", VA = "0xB456A8")]
	private void DeleteStuff()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB46D10", Offset = "0xB46D10", VA = "0xB46D10")]
	[ContextMenu("SetDefaultOutlines")]
	private void SetDefaultOutlines()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB46D1C", Offset = "0xB46D1C", VA = "0xB46D1C")]
	private void SetMaterialTo(Renderer mr, Material _material)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB46834", Offset = "0xB46834", VA = "0xB46834")]
	public void SetOutlines(bool showRenderer = true, int defaultOutline = 0)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB465C8", Offset = "0xB465C8", VA = "0xB465C8")]
	private void PrepareOutlines(UnityEngine.Object obj, bool showRenderer = true, bool defaultOutline = true)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB462EC", Offset = "0xB462EC", VA = "0xB462EC")]
	private void TurnToTriggers(Collider col, bool compForced = false)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB46264", Offset = "0xB46264", VA = "0xB46264")]
	private void DoDestroy(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB455C8", Offset = "0xB455C8", VA = "0xB455C8")]
	private void DeleteAttach()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB46EB0", Offset = "0xB46EB0", VA = "0xB46EB0", Slot = "12")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB47480", Offset = "0xB47480", VA = "0xB47480")]
	private void CheckGrabbables()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB47654", Offset = "0xB47654", VA = "0xB47654")]
	private void SuccessActions()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB47A04", Offset = "0xB47A04", VA = "0xB47A04", Slot = "13")]
	public virtual int GetCorrectEntitiesGroup()
	{
		return default(int);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB47DC4", Offset = "0xB47DC4", VA = "0xB47DC4", Slot = "14")]
	public virtual int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB47DCC", Offset = "0xB47DCC", VA = "0xB47DCC")]
	public void CreateDistanceRotationCheckEntitiesList()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB485A8", Offset = "0xB485A8", VA = "0xB485A8")]
	[IteratorStateMachine(typeof(<WrongEntityBlink>d__96))]
	private IEnumerator WrongEntityBlink()
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB48644", Offset = "0xB48644", VA = "0xB48644")]
	private void StartBlinking()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB47D84", Offset = "0xB47D84", VA = "0xB47D84")]
	public void IndividualSoundFeedback()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB47C20", Offset = "0xB47C20", VA = "0xB47C20")]
	public void SpawnOKFeedback(Vector3 _position)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB486E4", Offset = "0xB486E4", VA = "0xB486E4", Slot = "15")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB48DB4", Offset = "0xB48DB4", VA = "0xB48DB4", Slot = "16")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB490DC", Offset = "0xB490DC", VA = "0xB490DC")]
	public ConstructionTarget()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ConstructionTargetAngularVelocity : ConstructionTarget
{
	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Grabbable grabbable;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<float> speeds;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float angularVelocity;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float val;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB49460", Offset = "0xB49460", VA = "0xB49460", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xB49568", Offset = "0xB49568", VA = "0xB49568")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xB49990", Offset = "0xB49990", VA = "0xB49990", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xB49994", Offset = "0xB49994", VA = "0xB49994", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xB49998", Offset = "0xB49998", VA = "0xB49998")]
	public ConstructionTargetAngularVelocity()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ConstructionTargetBurnout : ConstructionTarget
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	private bool wasTriggered;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xB4999C", Offset = "0xB4999C", VA = "0xB4999C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB499A8", Offset = "0xB499A8", VA = "0xB499A8")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB49ADC", Offset = "0xB49ADC", VA = "0xB49ADC")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB49C10", Offset = "0xB49C10", VA = "0xB49C10")]
	private void BurnoutEvent(Glue _glue)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xB49F30", Offset = "0xB49F30", VA = "0xB49F30")]
	public ConstructionTargetBurnout()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ConstructionTargetCatch : ConstructionTarget
{
	[Token(Token = "0x20000B2")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	private bool wasTriggered;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool anyEntity;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	public bool takePicture;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool addTrail;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject trailPrefab;

	[Token(Token = "0x1400000D")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xB49F34", Offset = "0xB49F34", VA = "0xB49F34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xB49FEC", Offset = "0xB49FEC", VA = "0xB49FEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB4A0A4", Offset = "0xB4A0A4", VA = "0xB4A0A4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB4A0B0", Offset = "0xB4A0B0", VA = "0xB4A0B0", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB4A138", Offset = "0xB4A138", VA = "0xB4A138", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xB4A1C0", Offset = "0xB4A1C0", VA = "0xB4A1C0")]
	private void GrabEvent(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xB4A1EC", Offset = "0xB4A1EC", VA = "0xB4A1EC")]
	private void CheckCondition(GameObject _go)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xB4A3D4", Offset = "0xB4A3D4", VA = "0xB4A3D4")]
	public ConstructionTargetCatch()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ConstructionTargetClearArea : ConstructionTarget
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<Collider> colliders;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject visual;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<MeshRenderer> renderers;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool tentaclesAllowed;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB4A53C", Offset = "0xB4A53C", VA = "0xB4A53C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB4A608", Offset = "0xB4A608", VA = "0xB4A608")]
	private void GetRenderers()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB4AA44", Offset = "0xB4AA44", VA = "0xB4AA44", Slot = "14")]
	public override int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB4AA68", Offset = "0xB4AA68", VA = "0xB4AA68", Slot = "7")]
	public override void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB4ABD0", Offset = "0xB4ABD0", VA = "0xB4ABD0")]
	private void SetState()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB4A8EC", Offset = "0xB4A8EC", VA = "0xB4A8EC")]
	private void SetVisual()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB4AC28", Offset = "0xB4AC28", VA = "0xB4AC28", Slot = "15")]
	public override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB4ADF0", Offset = "0xB4ADF0", VA = "0xB4ADF0", Slot = "16")]
	public override void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB4AE9C", Offset = "0xB4AE9C", VA = "0xB4AE9C")]
	public ConstructionTargetClearArea()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ConstructionTargetCollider : MonoBehaviour
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider targetCollider;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB4AF28", Offset = "0xB4AF28", VA = "0xB4AF28")]
	public ConstructionTargetCollider()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ConstructionTargetConnectionBoosters : ConstructionTarget
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GlueConnections myConnection;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int connectionsRequired;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int grabbableCount;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public EntityDefinition requiredEntity;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<ConstructionRocket> boostersAttached;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ConstructionTargetManual boostersLaunchedTarget;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int frames;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ConstructionRocket booster;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int boostersLaunched;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB4AF30", Offset = "0xB4AF30", VA = "0xB4AF30", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB4B0A0", Offset = "0xB4B0A0", VA = "0xB4B0A0")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB4AF50", Offset = "0xB4AF50", VA = "0xB4AF50")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB4B144", Offset = "0xB4B144", VA = "0xB4B144", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB4B228", Offset = "0xB4B228", VA = "0xB4B228", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB4B30C", Offset = "0xB4B30C", VA = "0xB4B30C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB4B3EC", Offset = "0xB4B3EC", VA = "0xB4B3EC")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB4B794", Offset = "0xB4B794", VA = "0xB4B794")]
	public ConstructionTargetConnectionBoosters()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ConstructionTargetConnectionCount : ConstructionTarget
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Header("--Connection Rules")]
	public GlueConnections myConnection;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public int connectionsRequired;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int grabbableCount;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public bool glueCounts;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
	public bool requireEntity;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<EntityDefinition> requiredEntities;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool createSeparateTargets;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool triggerOnce;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	[Header("only works for requiredEntities without count")]
	public bool invertRule;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
	public bool noConnectionsAllowed;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool hasHadConnections;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB4B7A0", Offset = "0xB4B7A0", VA = "0xB4B7A0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB4B964", Offset = "0xB4B964", VA = "0xB4B964")]
	private void GetConnection()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB4B7F4", Offset = "0xB4B7F4", VA = "0xB4B7F4")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xB4BA08", Offset = "0xB4BA08", VA = "0xB4BA08", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xB4BAEC", Offset = "0xB4BAEC", VA = "0xB4BAEC", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB4BBD0", Offset = "0xB4BBD0", VA = "0xB4BBD0")]
	private void NoConnectionAllowed(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xB4BC50", Offset = "0xB4BC50", VA = "0xB4BC50")]
	private void ChainCheck(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xB4BFA8", Offset = "0xB4BFA8", VA = "0xB4BFA8")]
	private void ChainChangeCallback(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xB4BFC4", Offset = "0xB4BFC4", VA = "0xB4BFC4")]
	public ConstructionTargetConnectionCount()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ConstructionTargetContainerRescue : ConstructionTarget
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform perimeter;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool perimeterWasOK;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB4BFD8", Offset = "0xB4BFD8", VA = "0xB4BFD8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xB4BFDC", Offset = "0xB4BFDC", VA = "0xB4BFDC")]
	public void InitContainerRescue()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xB4C06C", Offset = "0xB4C06C", VA = "0xB4C06C")]
	public bool IsInWater()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB4C088", Offset = "0xB4C088", VA = "0xB4C088")]
	private void CheckSolution()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB4C0C8", Offset = "0xB4C0C8", VA = "0xB4C0C8")]
	private bool CheckPerimeter()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB4C220", Offset = "0xB4C220", VA = "0xB4C220", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB4C224", Offset = "0xB4C224", VA = "0xB4C224", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB4C228", Offset = "0xB4C228", VA = "0xB4C228")]
	public ConstructionTargetContainerRescue()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ConstructionTargetEntityLoad : ConstructionTarget
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool manualInitialisation;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool usePercentage;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int startEntities;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB4C22C", Offset = "0xB4C22C", VA = "0xB4C22C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB4C294", Offset = "0xB4C294", VA = "0xB4C294", Slot = "12")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB4C31C", Offset = "0xB4C31C", VA = "0xB4C31C", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB4C3A4", Offset = "0xB4C3A4", VA = "0xB4C3A4")]
	private void PercentageChange(int percentage)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB4C428", Offset = "0xB4C428", VA = "0xB4C428")]
	[ContextMenu("SetComplete")]
	private void SetComplete()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB4C460", Offset = "0xB4C460", VA = "0xB4C460")]
	[ContextMenu("SetInComplete")]
	private void SetInComplete()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB4C444", Offset = "0xB4C444", VA = "0xB4C444")]
	public void SetComplete(bool which)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB4C478", Offset = "0xB4C478", VA = "0xB4C478", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB4C47C", Offset = "0xB4C47C", VA = "0xB4C47C", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB4C480", Offset = "0xB4C480", VA = "0xB4C480")]
	public ConstructionTargetEntityLoad()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ConstructionTargetGForce : ConstructionTarget
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform gForceMeasurePoint;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform axisCenterPoint;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Rigidbody measureRB;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float worldFactor;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Grabbable grabbable;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Joint hinge;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<float> speeds;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float angularVelocity;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float val;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float angleChange;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float lastAngleChange;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float distance;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float gForce;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float otherGForce;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private Vector3 lastDir;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 currentDir;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float lastFrameVelocity;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float lastVelDelta;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB4C484", Offset = "0xB4C484", VA = "0xB4C484", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB4C5F0", Offset = "0xB4C5F0", VA = "0xB4C5F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xB4CEC0", Offset = "0xB4CEC0", VA = "0xB4CEC0", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xB4CEC4", Offset = "0xB4CEC4", VA = "0xB4CEC4", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xB4CEC8", Offset = "0xB4CEC8", VA = "0xB4CEC8")]
	public ConstructionTargetGForce()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ConstructionTargetGluedToEntity : ConstructionTarget
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Glued glued;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xB4CECC", Offset = "0xB4CECC", VA = "0xB4CECC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xB4CED8", Offset = "0xB4CED8", VA = "0xB4CED8")]
	private void OnGlueEvent(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xB4D080", Offset = "0xB4D080", VA = "0xB4D080")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xB4D1B8", Offset = "0xB4D1B8", VA = "0xB4D1B8")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xB4D2F0", Offset = "0xB4D2F0", VA = "0xB4D2F0")]
	public ConstructionTargetGluedToEntity()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
public class TargetSort
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public Entity triggerEntity;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float distance;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ConstructionTarget target;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xB4D2F4", Offset = "0xB4D2F4", VA = "0xB4D2F4")]
	public TargetSort()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ConstructionTargetManager : MonoBehaviour
{
	[Token(Token = "0x20000BD")]
	public delegate void OnLevelCompleteDelegate();

	[Token(Token = "0x20000BE")]
	public delegate void OnTargetPlacedDelegate(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true);

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int countDown;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Glue> glueUsedList;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ConstructionTarget> targets;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool gameDone;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<MeshRenderer, Material> MeshMaterials;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float completeTimer;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastCompletes;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool debugNoCountdown;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[HideInInspector]
	public bool timerPossible;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool invertGoals;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool noCompleteWait;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usePhotoCameraValidation;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool autoCamera;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool autoDropValidationCamera;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool cameraDropped;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] targetValues;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, string> targetDict;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float completeWait;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float photoDelay;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noLevelDoneEvent;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool missionFailed;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ConstructionTarget> targetsComplete;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<ConstructionTarget> newCompletes;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ConstructionTarget> removedCompletes;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TargetSort> targetSortList;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ConstructionTargetManager _instance;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int completes;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float maxTimer;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float newClosestDistance;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int roundCount;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastCheckTime;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int frame;

	[Token(Token = "0x17000035")]
	public static ConstructionTargetManager Instance
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xB470A0", Offset = "0xB470A0", VA = "0xB470A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000E")]
	public static event OnLevelCompleteDelegate OnLevelComplete
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xB4D2FC", Offset = "0xB4D2FC", VA = "0xB4D2FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xB4D3B4", Offset = "0xB4D3B4", VA = "0xB4D3B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event OnTargetPlacedDelegate OnTargetPlaced
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xB4D46C", Offset = "0xB4D46C", VA = "0xB4D46C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xB4D528", Offset = "0xB4D528", VA = "0xB4D528")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xB4D5E4", Offset = "0xB4D5E4", VA = "0xB4D5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB4D8A4", Offset = "0xB4D8A4", VA = "0xB4D8A4")]
	public void MissionFailed()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB4D750", Offset = "0xB4D750", VA = "0xB4D750")]
	public int GetTargetsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB4D8B0", Offset = "0xB4D8B0", VA = "0xB4D8B0")]
	public void CTMRules()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB4D8D0", Offset = "0xB4D8D0", VA = "0xB4D8D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB4721C", Offset = "0xB4721C", VA = "0xB4721C")]
	public void RegisterTargets(ConstructionTarget _target, int _targetID = 0, int _targetValue = 0)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB4DA18", Offset = "0xB4DA18", VA = "0xB4DA18")]
	[ContextMenu("ForceGameDone")]
	public void ForceGameDone()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB4DA84", Offset = "0xB4DA84", VA = "0xB4DA84")]
	public bool HasTriggerEnitityID(Entity _entity, int _targetID)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB49D8C", Offset = "0xB49D8C", VA = "0xB49D8C")]
	public bool HasTriggerEnitity(Entity _entity)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB4DC40", Offset = "0xB4DC40", VA = "0xB4DC40")]
	private void CheckTimerDone()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xB4DE44", Offset = "0xB4DE44", VA = "0xB4DE44")]
	private void TakePicture()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xB4E0A4", Offset = "0xB4E0A4", VA = "0xB4E0A4")]
	private Entity GetClosestInDistanceSorted(ConstructionTarget asker)
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xB4E45C", Offset = "0xB4E45C", VA = "0xB4E45C")]
	private void WriteSortList()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB4E890", Offset = "0xB4E890", VA = "0xB4E890")]
	private void ClosestFindAndPurge()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB4EB30", Offset = "0xB4EB30", VA = "0xB4EB30")]
	private void DistanceSort()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB4EB94", Offset = "0xB4EB94", VA = "0xB4EB94")]
	private void GroupCheck()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB4EBAC", Offset = "0xB4EBAC", VA = "0xB4EBAC")]
	public string TargetStatus()
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB4EC30", Offset = "0xB4EC30", VA = "0xB4EC30")]
	public bool AllTargetCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB4EC4C", Offset = "0xB4EC4C", VA = "0xB4EC4C")]
	private void TargetListCheck(ConstructionTarget t, int solutionScore)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xB4EE58", Offset = "0xB4EE58", VA = "0xB4EE58")]
	private void CheckTargets()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xB4F4AC", Offset = "0xB4F4AC", VA = "0xB4F4AC")]
	[ContextMenu("DropValidationCamera")]
	public void DropValidationCamera()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xB4F624", Offset = "0xB4F624", VA = "0xB4F624")]
	public float GetTimer()
	{
		return default(float);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xB4F66C", Offset = "0xB4F66C", VA = "0xB4F66C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xB4F6A4", Offset = "0xB4F6A4", VA = "0xB4F6A4")]
	public ConstructionTargetManager()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ConstructionTargetManual : ConstructionTarget
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool manualInitialisation;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xB4FB34", Offset = "0xB4FB34", VA = "0xB4FB34", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xB4FB4C", Offset = "0xB4FB4C", VA = "0xB4FB4C")]
	[ContextMenu("SetComplete")]
	private void SetComplete()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB4FB84", Offset = "0xB4FB84", VA = "0xB4FB84")]
	[ContextMenu("SetInComplete")]
	private void SetInComplete()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB4FB68", Offset = "0xB4FB68", VA = "0xB4FB68")]
	public void SetComplete(bool which)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB4FB9C", Offset = "0xB4FB9C", VA = "0xB4FB9C", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB4FBA0", Offset = "0xB4FBA0", VA = "0xB4FBA0", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB4FBA4", Offset = "0xB4FBA4", VA = "0xB4FBA4")]
	public ConstructionTargetManual()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ConstructionTargetNotGlued : ConstructionTarget
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public EntityDefinition targetEntityDefinition;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public CategoryDefinition targetEntityCategory;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public List<ConstructionTargetManual> manualTargets;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool useCategory;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int requiredUngluedEntities;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int ungluedEntities;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public List<Entity> gluedEntities;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB4FBA8", Offset = "0xB4FBA8", VA = "0xB4FBA8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB4FBD0", Offset = "0xB4FBD0", VA = "0xB4FBD0")]
	private void SpawnManualTargets()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB4FD20", Offset = "0xB4FD20", VA = "0xB4FD20")]
	private void UpdateTargets()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB4FDF0", Offset = "0xB4FDF0", VA = "0xB4FDF0", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB4FE74", Offset = "0xB4FE74", VA = "0xB4FE74", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB4FEF8", Offset = "0xB4FEF8", VA = "0xB4FEF8")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB4FF5C", Offset = "0xB4FF5C", VA = "0xB4FF5C")]
	private void CheckEntity(GameObject go, bool _isGlued)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB5006C", Offset = "0xB5006C", VA = "0xB5006C")]
	private void DoLists(Entity _entity, bool _isGlued)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB501A4", Offset = "0xB501A4", VA = "0xB501A4")]
	public ConstructionTargetNotGlued()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ConstructionTargetPeopleDestination : ConstructionTarget
{
	[Token(Token = "0x20000C2")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool grabAllowed;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	private bool wasGrabbed;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool doBumpIntoOtherHumanJump;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	private bool hasWaypoint;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionTarget waypointTriggerTarget;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParachuteRespawnTracker oobTracker;

	[Token(Token = "0x14000010")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xB50228", Offset = "0xB50228", VA = "0xB50228")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xB502E0", Offset = "0xB502E0", VA = "0xB502E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB50398", Offset = "0xB50398", VA = "0xB50398", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB50464", Offset = "0xB50464", VA = "0xB50464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB504B4", Offset = "0xB504B4", VA = "0xB504B4", Slot = "12")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB5064C", Offset = "0xB5064C", VA = "0xB5064C", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB5076C", Offset = "0xB5076C", VA = "0xB5076C")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB5090C", Offset = "0xB5090C", VA = "0xB5090C")]
	private void WaypointCheck()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB50A08", Offset = "0xB50A08", VA = "0xB50A08", Slot = "17")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB50B8C", Offset = "0xB50B8C", VA = "0xB50B8C")]
	private void GrabEvent(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB50834", Offset = "0xB50834", VA = "0xB50834")]
	private void NotAllowed()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB50C48", Offset = "0xB50C48", VA = "0xB50C48")]
	private void GrabOOB()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB50D60", Offset = "0xB50D60", VA = "0xB50D60")]
	private void DestinationReached(string _id)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB50DA4", Offset = "0xB50DA4", VA = "0xB50DA4", Slot = "14")]
	public override int GetCorrectEntities()
	{
		return default(int);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB50DBC", Offset = "0xB50DBC", VA = "0xB50DBC")]
	public ConstructionTargetPeopleDestination()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ConstructionTargetRecycleObject : ConstructionTarget
{
	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB50F1C", Offset = "0xB50F1C", VA = "0xB50F1C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB50F28", Offset = "0xB50F28", VA = "0xB50F28", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB50FB0", Offset = "0xB50FB0", VA = "0xB50FB0", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB51038", Offset = "0xB51038", VA = "0xB51038")]
	private void Recycled(GameObject _go)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB5114C", Offset = "0xB5114C", VA = "0xB5114C")]
	public ConstructionTargetRecycleObject()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ConstructionTargetRocket : ConstructionTarget
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool triggerOnce;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	private bool wasTriggered;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject visual;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool setCamTargetOnTrigger;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float radius;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float radiusFactor;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB51150", Offset = "0xB51150", VA = "0xB51150", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xB5115C", Offset = "0xB5115C", VA = "0xB5115C", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB51430", Offset = "0xB51430", VA = "0xB51430")]
	private void TakePicture()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB51510", Offset = "0xB51510", VA = "0xB51510", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xB51684", Offset = "0xB51684", VA = "0xB51684")]
	public ConstructionTargetRocket()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ConstructionTargetSpawnFreeze : ConstructionTarget
{
	[Token(Token = "0x6000430")]
	[Address(RVA = "0xB5169C", Offset = "0xB5169C", VA = "0xB5169C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xB516A8", Offset = "0xB516A8", VA = "0xB516A8", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB51730", Offset = "0xB51730", VA = "0xB51730", Slot = "6")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xB517B8", Offset = "0xB517B8", VA = "0xB517B8")]
	private void UnSpawnFreeze(Grabbable _grabbable)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xB518A0", Offset = "0xB518A0", VA = "0xB518A0")]
	public ConstructionTargetSpawnFreeze()
	{
	}
}
[Token(Token = "0x20000C6")]
public class ConstructionTargetSwitch : ConstructionTarget
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool OnIsCorrect;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	private bool buttonMode;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7")]
	public bool toggleMode;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB518A4", Offset = "0xB518A4", VA = "0xB518A4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xB518B0", Offset = "0xB518B0", VA = "0xB518B0")]
	public void ButtonMode(bool _on)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xB518E0", Offset = "0xB518E0", VA = "0xB518E0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xB518E4", Offset = "0xB518E4", VA = "0xB518E4", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xB518E8", Offset = "0xB518E8", VA = "0xB518E8", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xB518EC", Offset = "0xB518EC", VA = "0xB518EC")]
	public ConstructionTargetSwitch()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ConstructionTargetTriggersChainNoOnStay : ConstructionTarget
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public List<EntityDefinition> requiredConnectedEntities;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool triggerOnce;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject visual;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool wasTriggered;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	public bool multiTargetHideVisual;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int multiTargetHideVisualID;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private ConstructionTargetTriggersChainNoOnStay[] triggers;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB518F8", Offset = "0xB518F8", VA = "0xB518F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xB51960", Offset = "0xB51960", VA = "0xB51960")]
	private void OnRBEnter(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xB51E78", Offset = "0xB51E78", VA = "0xB51E78")]
	private void OnRBExit(Rigidbody colRB)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB51F44", Offset = "0xB51F44", VA = "0xB51F44", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xB521EC", Offset = "0xB521EC", VA = "0xB521EC", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xB523A0", Offset = "0xB523A0", VA = "0xB523A0")]
	public ConstructionTargetTriggersChainNoOnStay()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ConstructionTargetTriggersNoOnStay : ConstructionTarget
{
	[Token(Token = "0x20000C9")]
	public delegate void OnWrongEntityDelegate(ConstructionTargetTriggersNoOnStay me, EntityDefinition enDef);

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool triggerOnce;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
	public bool hideAfterTriggered;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject visual;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool wasTriggered;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool anyEntity;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	public bool bubbleTriggerEntity;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
	public bool multiTargetHideVisual;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public int multiTargetHideVisualID;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool deactivateTriggerEntityAfterComplete;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool targetsCannotTrigger;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Collider myCollider;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool refreshTriggerOnDestroyTriggerEntity;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private ConstructionTargetTriggersNoOnStay[] triggers;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Grabbable grabbable;

	[Token(Token = "0x14000011")]
	public static event OnWrongEntityDelegate OnWrongEntity
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xB523AC", Offset = "0xB523AC", VA = "0xB523AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xB52464", Offset = "0xB52464", VA = "0xB52464")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB5251C", Offset = "0xB5251C", VA = "0xB5251C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB525C4", Offset = "0xB525C4", VA = "0xB525C4", Slot = "8")]
	public override void MyEntityDestroyed()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB52654", Offset = "0xB52654", VA = "0xB52654")]
	private void OnRBEnter(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB52A50", Offset = "0xB52A50", VA = "0xB52A50")]
	private void OnRBExit(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB52B1C", Offset = "0xB52B1C", VA = "0xB52B1C", Slot = "15")]
	public override void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB52DC4", Offset = "0xB52DC4", VA = "0xB52DC4", Slot = "16")]
	public override void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB52F78", Offset = "0xB52F78", VA = "0xB52F78")]
	public ConstructionTargetTriggersNoOnStay()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ConstructionValidationPhotoCamera : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool readyToPhotograph;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 boundSize;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera photoCamera;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool tentacleInview;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool allTargetsVisible;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraDisplayController CameraDisplay;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isScanning;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject result;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject coneScan;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpawnPolaroidImage polaSpawner;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool freeInstantCamera;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject freeCameraButton;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string Click;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool useJoint;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent takePicture;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCount;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ConstructionValidationPhotoCamera _instance;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string checkText;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int numPhotoTargetsReq;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int targetsVisible;

	[Token(Token = "0x17000036")]
	public static ConstructionValidationPhotoCamera Instance
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xB4DEC8", Offset = "0xB4DEC8", VA = "0xB4DEC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB530E4", Offset = "0xB530E4", VA = "0xB530E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB5339C", Offset = "0xB5339C", VA = "0xB5339C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB534CC", Offset = "0xB534CC", VA = "0xB534CC")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB53530", Offset = "0xB53530", VA = "0xB53530")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB53C38", Offset = "0xB53C38", VA = "0xB53C38")]
	private void ShowCone()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB53CFC", Offset = "0xB53CFC", VA = "0xB53CFC")]
	private void SetScanning(bool which)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB53B88", Offset = "0xB53B88", VA = "0xB53B88")]
	private void CheckReadyToPhotograph()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB4E044", Offset = "0xB4E044", VA = "0xB4E044")]
	[ContextMenu("TakePicture")]
	public void TakePicture()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB534E0", Offset = "0xB534E0", VA = "0xB534E0")]
	public void TakeFreePicture()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xB514B8", Offset = "0xB514B8", VA = "0xB514B8")]
	public void TakePicture(bool freePicture)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xB53944", Offset = "0xB53944", VA = "0xB53944")]
	public void CheckTentacleInView()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xB5373C", Offset = "0xB5373C", VA = "0xB5373C")]
	public void CheckForTargetsInView()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xB53BEC", Offset = "0xB53BEC", VA = "0xB53BEC")]
	private void UpdateTargets()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xB53DDC", Offset = "0xB53DDC", VA = "0xB53DDC")]
	public ConstructionValidationPhotoCamera()
	{
	}
}
[Token(Token = "0x20000CB")]
public class Containment : MonoBehaviour
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint[] hinges;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContainmentEffect containmentEffect;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool switchOn;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool targetsDone;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool buildUpDone;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody lidRB;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialised;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetPosition;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool powerWasTurnedOn;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xB53EA4", Offset = "0xB53EA4", VA = "0xB53EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xB53EBC", Offset = "0xB53EBC", VA = "0xB53EBC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xB53F34", Offset = "0xB53F34", VA = "0xB53F34")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xB53FAC", Offset = "0xB53FAC", VA = "0xB53FAC")]
	[ContextMenu("TURN ON")]
	private void TurnOnPower()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xB54034", Offset = "0xB54034", VA = "0xB54034")]
	[ContextMenu("TURN OFF")]
	private void TurnOffPower()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xB53FB4", Offset = "0xB53FB4", VA = "0xB53FB4")]
	private void TurnOnPower(bool _which = true)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xB54180", Offset = "0xB54180", VA = "0xB54180")]
	public void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xB541AC", Offset = "0xB541AC", VA = "0xB541AC")]
	private void SetLatches(bool _on)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xB542D4", Offset = "0xB542D4", VA = "0xB542D4")]
	public void PullLever(bool _on)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xB54340", Offset = "0xB54340", VA = "0xB54340")]
	public Containment()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ContainmentEffect : MonoBehaviour
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform particles;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform particlesBuildUp;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float downForce;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool effectActive;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Rigidbody> inRangeRBs;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool buildUpDone;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ForceMode forceMode;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int buildUpLength;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float buildUpCounter;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxShake;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool particlesShown;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool pullIn;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frameCounter;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int skip;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject plasmaSFX;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Implosion starts or is running")]
	public GameObject pullInLoop;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("effect starts up")]
	public GameObject riseFX;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelDirector_base levelDirector;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float inverseForceRadius;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float inverseForceFactor;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool triggerImplosionManually;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 downVector;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float explosionPower;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 direction;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float forceInvFactor;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xB54348", Offset = "0xB54348", VA = "0xB54348")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xB54680", Offset = "0xB54680", VA = "0xB54680")]
	[ContextMenu("StartEffect")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xB54688", Offset = "0xB54688", VA = "0xB54688")]
	[ContextMenu("StopEffect")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB5403C", Offset = "0xB5403C", VA = "0xB5403C")]
	public void SetActive(bool _mode)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB54690", Offset = "0xB54690", VA = "0xB54690")]
	[ContextMenu("ExplodeAway")]
	public void ExplodeAway()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB54894", Offset = "0xB54894", VA = "0xB54894")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB55334", Offset = "0xB55334", VA = "0xB55334")]
	[ContextMenu("Implode")]
	public void Implode()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB54F54", Offset = "0xB54F54", VA = "0xB54F54")]
	private void BuildUp()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB55348", Offset = "0xB55348", VA = "0xB55348")]
	private void ImplosionFX()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xB55378", Offset = "0xB55378", VA = "0xB55378")]
	private float RND(float f)
	{
		return default(float);
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xB55388", Offset = "0xB55388", VA = "0xB55388")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xB55648", Offset = "0xB55648", VA = "0xB55648")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xB5564C", Offset = "0xB5564C", VA = "0xB5564C")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xB557AC", Offset = "0xB557AC", VA = "0xB557AC")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xB54468", Offset = "0xB54468", VA = "0xB54468")]
	private void SetParticles(bool _which, Transform _particles)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xB557B0", Offset = "0xB557B0", VA = "0xB557B0")]
	public ContainmentEffect()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	public enum directionEnum
	{
		[Token(Token = "0x4000510")]
		right,
		[Token(Token = "0x4000511")]
		up,
		[Token(Token = "0x4000512")]
		forward
	}

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public directionEnum speedDirection;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3[] pointAngleVectors;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Rigidbody> transportList;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frame;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int lastListClear;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 direction;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float gripTime;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float speedFactor;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Rigidbody, float> rbStayTime;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> colRBs;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 change;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float onCFactor;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xB557F4", Offset = "0xB557F4", VA = "0xB557F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xB55978", Offset = "0xB55978", VA = "0xB55978")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xB55EA0", Offset = "0xB55EA0", VA = "0xB55EA0", Slot = "4")]
	public virtual void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xB561D8", Offset = "0xB561D8", VA = "0xB561D8", Slot = "5")]
	public virtual void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB56410", Offset = "0xB56410", VA = "0xB56410")]
	public ConveyorBelt()
	{
	}
}
[Token(Token = "0x20000CF")]
[RequireComponent(typeof(Grabbable))]
public class DispenserWheelController : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DispenserWheelController <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xB5715C", Offset = "0xB5715C", VA = "0xB5715C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xB571A4", Offset = "0xB571A4", VA = "0xB571A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xB56D84", Offset = "0xB56D84", VA = "0xB56D84")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB570BC", Offset = "0xB570BC", VA = "0xB570BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xB570C0", Offset = "0xB570C0", VA = "0xB570C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xB57164", Offset = "0xB57164", VA = "0xB57164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsScaleWheel;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Threshold;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int IncreaseDelta;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float delta;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GluemachineSpawner Dispenser;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float originalDrag;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float stopSpeed;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastAngle;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool switchMode;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool firstDown;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float PrevAngle;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float CurrAngle;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasCollision;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Grabbable grabbable;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int timesPressed;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool useStopSpeed;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool doHapticFeedback;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool isInDispenser;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent leverForward;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent leverBackward;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float leverDiff;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRControllerMapper controller;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB56584", Offset = "0xB56584", VA = "0xB56584")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xB566C0", Offset = "0xB566C0", VA = "0xB566C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xB56B80", Offset = "0xB56B80", VA = "0xB56B80")]
	private void DoHapticFeedback(GameObject _go)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xB56D10", Offset = "0xB56D10", VA = "0xB56D10")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__27))]
	private IEnumerator ButtonHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xB56B20", Offset = "0xB56B20", VA = "0xB56B20")]
	private void SetState()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xB56DAC", Offset = "0xB56DAC", VA = "0xB56DAC")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB56F94", Offset = "0xB56F94", VA = "0xB56F94")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB570A0", Offset = "0xB570A0", VA = "0xB570A0")]
	public DispenserWheelController()
	{
	}
}
[Token(Token = "0x20000D1")]
public class EMP : MonoBehaviour
{
	[Token(Token = "0x20000D2")]
	public delegate void EMPDelegate(Glue empGlue, EMP me);

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> collisions;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody colRB;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool burnout;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool destroyAfterActivation;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float destructionWait;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool selftDestructActive;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Glue g;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] wrecks;

	[Token(Token = "0x14000012")]
	public static event EMPDelegate OnEMP
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xB571AC", Offset = "0xB571AC", VA = "0xB571AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB57264", Offset = "0xB57264", VA = "0xB57264")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xB5731C", Offset = "0xB5731C", VA = "0xB5731C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xB57398", Offset = "0xB57398", VA = "0xB57398")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xB57C88", Offset = "0xB57C88", VA = "0xB57C88")]
	public void SelfDestruct()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xB57E1C", Offset = "0xB57E1C", VA = "0xB57E1C")]
	private void OnCollisionEnterCheck(Collider collider)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xB57FD0", Offset = "0xB57FD0", VA = "0xB57FD0")]
	private void CollisionExitCheck(Collider collider)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB5812C", Offset = "0xB5812C", VA = "0xB5812C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB58130", Offset = "0xB58130", VA = "0xB58130")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xB58134", Offset = "0xB58134", VA = "0xB58134")]
	public EMP()
	{
	}
}
[Token(Token = "0x20000D3")]
public class FadeLighting : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material skyboxMat;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color originalSkyBoxTopColor;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalSkyBoxMiddleColor;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color originalSkyBoxBottomColor;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color origAmbientColor;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color origDirectionalColor;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color origFogColor;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float originalFogDensity;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Light sceneLight;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool initialised;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string topColorString;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string middleColorString;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string bottomColorString;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool useAmbientColor;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color fxAmbientLight;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool useSkyTop;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color fxSkyTop;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool useSkyHorizon;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Color fxSkyHorizon;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool useSkyBottom;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color fxSkyBottom;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool useDirectionalLight;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color fxDirectionalColor;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool useFogColor;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color fxFogColor;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Ease densityEase;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool useFogDensity;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float fxFogDensity;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string tweenID;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float duration;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Color currentTop;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Color currentMiddle;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Color currenBottom;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xB5832C", Offset = "0xB5832C", VA = "0xB5832C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xB58480", Offset = "0xB58480", VA = "0xB58480")]
	private Color CheckMaterials(Material mat, string keyword)
	{
		return default(Color);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xB584D8", Offset = "0xB584D8", VA = "0xB584D8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xB5865C", Offset = "0xB5865C", VA = "0xB5865C")]
	[ContextMenu("TURN ON")]
	public void FadeTo()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xB58678", Offset = "0xB58678", VA = "0xB58678")]
	[ContextMenu("TURN OFF")]
	public void FadeBack()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xB54158", Offset = "0xB54158", VA = "0xB54158")]
	public void FadeToColor(bool _which = true)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xB59260", Offset = "0xB59260", VA = "0xB59260")]
	private void ColorUpdate()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xB58694", Offset = "0xB58694", VA = "0xB58694")]
	private void ChangeLight(bool _which)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xB592FC", Offset = "0xB592FC", VA = "0xB592FC")]
	public FadeLighting()
	{
	}
}
[Token(Token = "0x20000D5")]
public class GenericChannelRemote : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	public delegate void RemoteEventDelegate(bool mode, int _channelID);

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int channelID;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string onSound;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string offSound;

	[Token(Token = "0x14000013")]
	public static event RemoteEventDelegate OnRemoteEvent
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xB532E4", Offset = "0xB532E4", VA = "0xB532E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xB53414", Offset = "0xB53414", VA = "0xB53414")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB59558", Offset = "0xB59558", VA = "0xB59558")]
	[ContextMenu("ButtonPressed")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xB59610", Offset = "0xB59610", VA = "0xB59610")]
	[ContextMenu("ButtonOffPressed")]
	public void ButtonOffPressed()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB596C8", Offset = "0xB596C8", VA = "0xB596C8")]
	public GenericChannelRemote()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Glue : ConnectedJointBase
{
	[Token(Token = "0x20000D8")]
	public delegate void BurnoutDelegate(Glue thisGlue);

	[Token(Token = "0x20000D9")]
	public delegate void OnGluedToDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x20000DA")]
	public delegate void OnGluedToInstanceDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x20000DB")]
	public enum JType
	{
		[Token(Token = "0x40005C5")]
		crazy,
		[Token(Token = "0x40005C6")]
		stiff,
		[Token(Token = "0x40005C7")]
		hinge,
		[Token(Token = "0x40005C8")]
		freeze,
		[Token(Token = "0x40005C9")]
		antiGrav,
		[Token(Token = "0x40005CA")]
		floppy,
		[Token(Token = "0x40005CB")]
		freeSpin
	}

	[Serializable]
	[Token(Token = "0x20000DC")]
	public class BurnoutEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB75F28", Offset = "0xB75F28", VA = "0xB75F28")]
		public BurnoutEvent()
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[CompilerGenerated]
	private sealed class <PullAwayRumble>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xB763AC", Offset = "0xB763AC", VA = "0xB763AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0xB763F4", Offset = "0xB763F4", VA = "0xB763F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xB75F70", Offset = "0xB75F70", VA = "0xB75F70")]
		[DebuggerHidden]
		public <PullAwayRumble>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xB75F98", Offset = "0xB75F98", VA = "0xB75F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xB75F9C", Offset = "0xB75F9C", VA = "0xB75F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xB763B4", Offset = "0xB763B4", VA = "0xB763B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DE")]
	[CompilerGenerated]
	private sealed class <RipCoolDown>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0xB76570", Offset = "0xB76570", VA = "0xB76570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0xB765B8", Offset = "0xB765B8", VA = "0xB765B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xB763FC", Offset = "0xB763FC", VA = "0xB763FC")]
		[DebuggerHidden]
		public <RipCoolDown>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xB76424", Offset = "0xB76424", VA = "0xB76424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xB76428", Offset = "0xB76428", VA = "0xB76428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xB76578", Offset = "0xB76578", VA = "0xB76578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DF")]
	[CompilerGenerated]
	private sealed class <ConnectRumble>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0xB768C4", Offset = "0xB768C4", VA = "0xB768C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0xB7690C", Offset = "0xB7690C", VA = "0xB7690C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xB765C0", Offset = "0xB765C0", VA = "0xB765C0")]
		[DebuggerHidden]
		public <ConnectRumble>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xB765E8", Offset = "0xB765E8", VA = "0xB765E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xB765EC", Offset = "0xB765EC", VA = "0xB765EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xB768CC", Offset = "0xB768CC", VA = "0xB768CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[CompilerGenerated]
	private sealed class <WaitReactivate>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glue <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0xB769F0", Offset = "0xB769F0", VA = "0xB769F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0xB76A38", Offset = "0xB76A38", VA = "0xB76A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xB76914", Offset = "0xB76914", VA = "0xB76914")]
		[DebuggerHidden]
		public <WaitReactivate>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xB7693C", Offset = "0xB7693C", VA = "0xB7693C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB76940", Offset = "0xB76940", VA = "0xB76940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xB769F8", Offset = "0xB769F8", VA = "0xB769F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Glue connectedJoint;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool grabConnected;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool unparentConnectedJoint;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool globalBlock;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isGrabbed;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("Glue")]
	public JType jointType;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VRControllerMapper controller;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject aura;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool toggleMagnetAura;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool magnetDeactivated;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VRControllerMapper lastUsedController;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float glueScale;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float magnetImpactDeactivationSpeed;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float nonTentacleMagnetImpactDeactivationSpeed;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Rigidbody> myJointConnectionsRBs;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Glued> myGluedIndexedList;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<Joint> myJointConnectionsJoints;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<Rigidbody, Collision> myCollisions;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<Rigidbody> anchorsAdjustedListRB;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<int> anchorsAdjustedListInt;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Glued> gluedList;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LayerMask nonStickyLayers;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool onlyStickToCertainLayers;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public LayerMask onlyStickyLayers;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool onlyStickToCertainOwnLayers;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LayerMask onlyStickyOwnLayers;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform inner;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Color OnValue;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Color OffValue;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeshRenderer rend;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Material mat;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool useCollision;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool preProcessing;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int frame;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int frameSoundDisable;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[HideInInspector]
	public bool noForceFeedback;

	[Token(Token = "0x400058B")]
	public const float maxPullForceForDisconnect = 0f;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	public bool ripCoolDown;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Transform trans;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool noGravResetGravity;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool burnedOut;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Rigidbody colRB;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool flaggedForRemoval;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<float> anchorDistanceFloat;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject fakeCollider;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool AdjustFakeCollider;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool AdjustFakeStaticOnly;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float AnchorBurnoutDistance;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float anchorDistanceOverFactor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool useAnchorDistanceOverTime;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
	public bool noUnglueAllowed;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float scaleBreakFactor;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool turnedOn;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject[] deactivateOnBurnout;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public bool replaceOnBurnout;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	public bool spawnRandomReplacement;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public EntityDefinition[] destroyedEntities;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool ignoreShockBurnout;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public bool burnoutDisconnects;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Collider[] colliders;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool disableAnchorCheck;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool disableBurnout;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool allowAutoConfigureAdjust;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool forceUnglueAllowed;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	public bool glueOnGlueAllowed;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int frameSkip;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Grabbable otherGrabbable;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float pullForce;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public int suckersConnected;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool auraActive;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private int genericIndex;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool lastUngluePressed;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Joint j;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float dist;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Glued glued;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ConfigurableJoint newJoint;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private SoftJointLimitSpring sls;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private SoftJointLimit sjl;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private JointDrive jd;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float globalBreakForce;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float globalBreakTorque;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Joint someJoint;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool checkJointBreak;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public BurnoutEvent Burnout;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private LayerMask explosionLayers;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private bool showDebugSphere;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float exploRadius;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float exploPower;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float exploUpForce;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Glue otherCollisionGlue;

	[Token(Token = "0x14000014")]
	public static event BurnoutDelegate OnBurnout
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xB49A24", Offset = "0xB49A24", VA = "0xB49A24")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xB49B58", Offset = "0xB49B58", VA = "0xB49B58")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event OnGluedToDelegate OnGluedTo
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xB4D0FC", Offset = "0xB4D0FC", VA = "0xB4D0FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xB4D234", Offset = "0xB4D234", VA = "0xB4D234")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event OnGluedToInstanceDelegate OnGluedToInstance
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xB597B0", Offset = "0xB597B0", VA = "0xB597B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xB5984C", Offset = "0xB5984C", VA = "0xB5984C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xB598E8", Offset = "0xB598E8", VA = "0xB598E8")]
	[ContextMenu("ResetInertiaTensor")]
	public void ResetInertiaTensor()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xB59904", Offset = "0xB59904", VA = "0xB59904")]
	[ContextMenu("Turn ON")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xB599C0", Offset = "0xB599C0", VA = "0xB599C0")]
	[ContextMenu("Turn OFF")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xB59A78", Offset = "0xB59A78", VA = "0xB59A78")]
	private void WriteAnchors()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xB59C74", Offset = "0xB59C74", VA = "0xB59C74")]
	[ContextMenu("ResetInertiaTensor")]
	private void ResetTensor()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB59C90", Offset = "0xB59C90", VA = "0xB59C90")]
	public static float GlueMass(float _scale)
	{
		return default(float);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB59CB8", Offset = "0xB59CB8", VA = "0xB59CB8")]
	public bool CheckUnglueAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB59D14", Offset = "0xB59D14", VA = "0xB59D14")]
	public void SetScale(float _scale)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB59FF0", Offset = "0xB59FF0", VA = "0xB59FF0")]
	public void DisableBurnout(bool disableConnected = false)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB5A024", Offset = "0xB5A024", VA = "0xB5A024")]
	public void DisableUnglue(bool disableConnected = false)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB59F68", Offset = "0xB59F68", VA = "0xB59F68")]
	private void NoSkipStep()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB5A058", Offset = "0xB5A058", VA = "0xB5A058")]
	private void SetFakeCollider(bool _which, [Optional] Rigidbody _rb)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB5A0EC", Offset = "0xB5A0EC", VA = "0xB5A0EC", Slot = "9")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB5A0F4", Offset = "0xB5A0F4", VA = "0xB5A0F4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB5A778", Offset = "0xB5A778", VA = "0xB5A778")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB5A8AC", Offset = "0xB5A8AC", VA = "0xB5A8AC")]
	public void DeactivateFF()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB5A8B8", Offset = "0xB5A8B8", VA = "0xB5A8B8")]
	public void DisableGlue()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB5A8C8", Offset = "0xB5A8C8", VA = "0xB5A8C8")]
	public int GetCollisionsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB5A910", Offset = "0xB5A910", VA = "0xB5A910")]
	public bool IsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB5A960", Offset = "0xB5A960", VA = "0xB5A960", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB5A988", Offset = "0xB5A988", VA = "0xB5A988", Slot = "10")]
	public override void ChainChange(GlueConnections originator, bool wasAdded)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB5AE18", Offset = "0xB5AE18", VA = "0xB5AE18", Slot = "8")]
	public override void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xB5AFA4", Offset = "0xB5AFA4", VA = "0xB5AFA4")]
	private void RipOff()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xB5A704", Offset = "0xB5A704", VA = "0xB5A704")]
	[IteratorStateMachine(typeof(<PullAwayRumble>d__109))]
	private IEnumerator PullAwayRumble()
	{
		return null;
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xB5B190", Offset = "0xB5B190", VA = "0xB5B190")]
	[IteratorStateMachine(typeof(<RipCoolDown>d__110))]
	private IEnumerator RipCoolDown()
	{
		return null;
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xB5B204", Offset = "0xB5B204", VA = "0xB5B204")]
	private void CheckPullForce()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xB5B264", Offset = "0xB5B264", VA = "0xB5B264", Slot = "7")]
	public override void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xB5B3AC", Offset = "0xB5B3AC", VA = "0xB5B3AC")]
	public void GlueRumble()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xB5B3DC", Offset = "0xB5B3DC", VA = "0xB5B3DC")]
	[IteratorStateMachine(typeof(<ConnectRumble>d__114))]
	private IEnumerator ConnectRumble()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB5B450", Offset = "0xB5B450", VA = "0xB5B450")]
	private void SetAura(bool which)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB5B588", Offset = "0xB5B588", VA = "0xB5B588")]
	public void GlueToolsClear(bool flagForRemoval)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB5AFC0", Offset = "0xB5AFC0", VA = "0xB5AFC0")]
	public void KillMyConnections(bool connectedCheck = true)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB5B614", Offset = "0xB5B614", VA = "0xB5B614")]
	public void RemoveConnectionWithGlued(Glued _glued, bool _internal = true)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xB5BBF4", Offset = "0xB5BBF4", VA = "0xB5BBF4")]
	private bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xB5BC5C", Offset = "0xB5BC5C", VA = "0xB5BC5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xB5BFCC", Offset = "0xB5BFCC", VA = "0xB5BFCC")]
	private void CheckConnections()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xB5D340", Offset = "0xB5D340", VA = "0xB5D340")]
	private void PostCollisionCheck(Collision collision)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xB5D380", Offset = "0xB5D380", VA = "0xB5D380")]
	[IteratorStateMachine(typeof(<WaitReactivate>d__126))]
	private IEnumerator WaitReactivate()
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB5D3F4", Offset = "0xB5D3F4", VA = "0xB5D3F4")]
	[ContextMenu("Activate")]
	public void MagnetReactivate()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB57C08", Offset = "0xB57C08", VA = "0xB57C08")]
	[ContextMenu("Deactivate")]
	public void MagnetDeactivation(bool autoActivate = true)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xB5C0BC", Offset = "0xB5C0BC", VA = "0xB5C0BC")]
	private void CheckJointDiff()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB5D3FC", Offset = "0xB5D3FC", VA = "0xB5D3FC")]
	private bool CheckInJointLists(Rigidbody _colRB)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB5C5DC", Offset = "0xB5C5DC", VA = "0xB5C5DC")]
	public void ConnectNewElement(Rigidbody _colRB, [Optional] JointData jointData, bool manualSetup = false)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB5D6F4", Offset = "0xB5D6F4", VA = "0xB5D6F4")]
	private void AddNewJoint(Rigidbody _rb, Joint _j, Glued _glued)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB5D4A4", Offset = "0xB5D4A4", VA = "0xB5D4A4")]
	private void SetAnchorsManually(Joint j, JointData jointData)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB5D514", Offset = "0xB5D514", VA = "0xB5D514")]
	private void SetAnchors(Rigidbody _colRB, Joint j, bool _autoanchors)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB5BE98", Offset = "0xB5BE98", VA = "0xB5BE98")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB5D928", Offset = "0xB5D928", VA = "0xB5D928")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xB5D934", Offset = "0xB5D934", VA = "0xB5D934")]
	public void ShockDeactivation(bool _disconnect = false)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xB5D9B8", Offset = "0xB5D9B8", VA = "0xB5D9B8")]
	public void BurnOutMagnetShock()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xB57538", Offset = "0xB57538", VA = "0xB57538")]
	[ContextMenu("bURNoUT")]
	public void BurnOutMagnet()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xB5D9C8", Offset = "0xB5D9C8", VA = "0xB5D9C8")]
	private void BurnoutExplosion()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB5E008", Offset = "0xB5E008", VA = "0xB5E008")]
	private void VisualBurnOut()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB5E1AC", Offset = "0xB5E1AC", VA = "0xB5E1AC")]
	private void OnCollisionEnterCheck(Collision collision)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB5E67C", Offset = "0xB5E67C", VA = "0xB5E67C")]
	private void CollisionExitCheck(Collision collision)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB5E9B4", Offset = "0xB5E9B4", VA = "0xB5E9B4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xB5BAA4", Offset = "0xB5BAA4", VA = "0xB5BAA4")]
	public void CollisionMagicExit()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xB5EA6C", Offset = "0xB5EA6C", VA = "0xB5EA6C")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xB5ED28", Offset = "0xB5ED28", VA = "0xB5ED28")]
	public Glue()
	{
	}
}
[Token(Token = "0x20000E1")]
public class Glued : ConnectedJointBase
{
	[Token(Token = "0x20000E2")]
	[CompilerGenerated]
	private sealed class <PullAwayRumble>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0xB77E04", Offset = "0xB77E04", VA = "0xB77E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000537")]
			[Address(RVA = "0xB77E4C", Offset = "0xB77E4C", VA = "0xB77E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xB76FA4", Offset = "0xB76FA4", VA = "0xB76FA4")]
		[DebuggerHidden]
		public <PullAwayRumble>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xB779F0", Offset = "0xB779F0", VA = "0xB779F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xB779F4", Offset = "0xB779F4", VA = "0xB779F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB77E0C", Offset = "0xB77E0C", VA = "0xB77E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E3")]
	[CompilerGenerated]
	private sealed class <ConnectGlue>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0xB78130", Offset = "0xB78130", VA = "0xB78130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0xB78178", Offset = "0xB78178", VA = "0xB78178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xB77040", Offset = "0xB77040", VA = "0xB77040")]
		[DebuggerHidden]
		public <ConnectGlue>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xB77E54", Offset = "0xB77E54", VA = "0xB77E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xB77E58", Offset = "0xB77E58", VA = "0xB77E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xB78138", Offset = "0xB78138", VA = "0xB78138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <RipCoolDown>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glued <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0xB78248", Offset = "0xB78248", VA = "0xB78248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xB78290", Offset = "0xB78290", VA = "0xB78290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xB772F4", Offset = "0xB772F4", VA = "0xB772F4")]
		[DebuggerHidden]
		public <RipCoolDown>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xB78180", Offset = "0xB78180", VA = "0xB78180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xB78184", Offset = "0xB78184", VA = "0xB78184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xB78250", Offset = "0xB78250", VA = "0xB78250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isGrabbed;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Grabbable grab;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Glue> connectedGlues;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public VRControllerMapper controller;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool ripCoolDown;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float magnetImpactDeactivationSpeed;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float nonTentacleMagnetImpactDeactivationSpeed;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool initialAntiGrav;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int frame;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float pullForce;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool freezeJointActive;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool isFrozen;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool isAntiGrav;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody colRB;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool flaggedForRemoval;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool noUnglueAllowed;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Glued connectedGlued;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool unglueConnectedJoint;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool simKinematicForBurnoutSimAttach;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool slingBurnoutBothAttached;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB76A40", Offset = "0xB76A40", VA = "0xB76A40", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB76AD8", Offset = "0xB76AD8", VA = "0xB76AD8")]
	public void CheckGrabbed()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB76BF4", Offset = "0xB76BF4", VA = "0xB76BF4", Slot = "8")]
	public override void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB76D44", Offset = "0xB76D44", VA = "0xB76D44", Slot = "7")]
	public override void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB76E18", Offset = "0xB76E18", VA = "0xB76E18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xB76F30", Offset = "0xB76F30", VA = "0xB76F30")]
	[IteratorStateMachine(typeof(<PullAwayRumble>d__26))]
	private IEnumerator PullAwayRumble()
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xB76FCC", Offset = "0xB76FCC", VA = "0xB76FCC")]
	[IteratorStateMachine(typeof(<ConnectGlue>d__27))]
	private IEnumerator ConnectGlue()
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xB76E58", Offset = "0xB76E58", VA = "0xB76E58")]
	private void CheckPullForce(bool propagate = true)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xB77068", Offset = "0xB77068", VA = "0xB77068")]
	private void RipOff()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xB77280", Offset = "0xB77280", VA = "0xB77280")]
	[IteratorStateMachine(typeof(<RipCoolDown>d__30))]
	private IEnumerator RipCoolDown()
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xB7731C", Offset = "0xB7731C", VA = "0xB7731C")]
	public void GluedBurnOutConnectedMagnets()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xB77324", Offset = "0xB77324", VA = "0xB77324")]
	public void GluedToolsClear(bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xB770B0", Offset = "0xB770B0", VA = "0xB770B0")]
	public void RemoveAllGlueConnections(bool _disconnectGlue = false)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xB77584", Offset = "0xB77584", VA = "0xB77584")]
	public void AddGlueConnection(Glue _glue)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xB77380", Offset = "0xB77380", VA = "0xB77380")]
	public void CheckForStatusEffects()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xB776D4", Offset = "0xB776D4", VA = "0xB776D4")]
	public void RemoveGlueConnection(Glue _glue)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xB77770", Offset = "0xB77770", VA = "0xB77770")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xB77904", Offset = "0xB77904", VA = "0xB77904")]
	public Glued()
	{
	}
}
[Token(Token = "0x20000E5")]
public class GluemachineSpawner : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	public enum BlockStatus
	{
		[Token(Token = "0x4000617")]
		none,
		[Token(Token = "0x4000618")]
		overload,
		[Token(Token = "0x4000619")]
		empty,
		[Token(Token = "0x400061A")]
		blocked,
		[Token(Token = "0x400061B")]
		locked
	}

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EightSegmentDisplay NumberDisplay;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnTip;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ScaleNeedle;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool hasScaleWheel;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scaleWheel;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public GameObject typeWheel;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EntityDefinition[] MagnetScriptableObjects;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int GlueAmount;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public EntityDefinition[] MagnetPrefabs;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] LockedMagnets;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] DipenserUpgrades;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image ScreenIMG;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image ScreenLocked;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentType;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool hasTypeWheel;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int glueCounter;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scaleMultiplier;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Glue glueScript;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject spawnPrefab;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isInitialized;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool isInSandbox;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject sizeWheelCover;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject sizeSelectBrokenVFX;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("-1 no override - 0 smallest - 1 biggest")]
	public float sizeOverrride;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DispenserSpawnCheck spawnTrigger;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject magnetDisplay;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject blockedDisplay;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro statusType;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BlockStatus blockStatus;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private BlockStatus lastBlockStatus;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string sfx;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool blocked;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xB78298", Offset = "0xB78298", VA = "0xB78298")]
	[ContextMenu("Init")]
	public void Init()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB78688", Offset = "0xB78688", VA = "0xB78688")]
	private void SetScaleFunctions()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB7879C", Offset = "0xB7879C", VA = "0xB7879C")]
	private void SetMagnetSwitchFunction()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB78980", Offset = "0xB78980", VA = "0xB78980")]
	private void DefaultInit()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB78AA4", Offset = "0xB78AA4", VA = "0xB78AA4")]
	public void ToggleMagnetType(int amount)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB78BA0", Offset = "0xB78BA0", VA = "0xB78BA0")]
	public void NextMagnet(bool forward)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xB78508", Offset = "0xB78508", VA = "0xB78508")]
	private void CheckBlocked()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB78BBC", Offset = "0xB78BBC", VA = "0xB78BBC")]
	[ContextMenu("DropMagnet")]
	public void PhysicalButtonPressed()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB78CC8", Offset = "0xB78CC8", VA = "0xB78CC8")]
	private void SpawnGlue()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xB78814", Offset = "0xB78814", VA = "0xB78814")]
	private void SetAmount()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xB79038", Offset = "0xB79038", VA = "0xB79038")]
	public void SizeWheelNext(bool forward)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xB79130", Offset = "0xB79130", VA = "0xB79130")]
	public void WheelsController(int amount, bool isScaleWheel)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xB78888", Offset = "0xB78888", VA = "0xB78888")]
	public void SetScaleNeedle(float n)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xB79134", Offset = "0xB79134", VA = "0xB79134")]
	public GluemachineSpawner()
	{
	}
}
[Token(Token = "0x20000E7")]
public class IntroUfoTouch : MonoBehaviour
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C0999 levelDir;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool canBeTouched;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xB791A4", Offset = "0xB791A4", VA = "0xB791A4")]
	public void CanBeTouched()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xB791B0", Offset = "0xB791B0", VA = "0xB791B0")]
	private void OnTriggerEnter(Collider _collider)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xB792BC", Offset = "0xB792BC", VA = "0xB792BC")]
	public IntroUfoTouch()
	{
	}
}
[Token(Token = "0x20000E8")]
public class MagnetDispenserScreenUI : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] AvailableItems;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] Images;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] Icons;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip PreviousAnimation;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip NextAnimation;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation ani;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentImg;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xB792C4", Offset = "0xB792C4", VA = "0xB792C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xB792C8", Offset = "0xB792C8", VA = "0xB792C8")]
	public void Next()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xB79320", Offset = "0xB79320", VA = "0xB79320")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xB79378", Offset = "0xB79378", VA = "0xB79378")]
	public void RearrageSprites()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xB79514", Offset = "0xB79514", VA = "0xB79514")]
	public MagnetDispenserScreenUI()
	{
	}
}
[Token(Token = "0x20000E9")]
public class MeasureAngularVelocity : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVel;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float targetValue;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EightSegmentDisplay digits;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay digitsTarget;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int targetID;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConstructionTargetAngularVelocity angularVelocityTarget;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xB7951C", Offset = "0xB7951C", VA = "0xB7951C")]
	private void Start()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xB79650", Offset = "0xB79650", VA = "0xB79650")]
	private void Update()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB796D8", Offset = "0xB796D8", VA = "0xB796D8")]
	public void SetVelocity(float _value)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB79790", Offset = "0xB79790", VA = "0xB79790")]
	public MeasureAngularVelocity()
	{
	}
}
[Token(Token = "0x20000EA")]
public class MeasureGForce : MonoBehaviour
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxVel;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string unit;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay digits;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EightSegmentDisplay digitsFloat;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EightSegmentDisplay digitsTarget;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EightSegmentDisplay digitsFloatTarget;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float targetValue;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int targetID;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConstructionTargetGForce gForceTarget;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB79798", Offset = "0xB79798", VA = "0xB79798")]
	private void Start()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB79A60", Offset = "0xB79A60", VA = "0xB79A60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB79AE8", Offset = "0xB79AE8", VA = "0xB79AE8")]
	public void SetVelocity(float _value)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB79CB0", Offset = "0xB79CB0", VA = "0xB79CB0")]
	public MeasureGForce()
	{
	}
}
[Token(Token = "0x20000EB")]
public class PowerSlingController : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <ResetSpring>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerSlingController <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0xB7B374", Offset = "0xB7B374", VA = "0xB7B374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0xB7B3BC", Offset = "0xB7B3BC", VA = "0xB7B3BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xB7AC3C", Offset = "0xB7AC3C", VA = "0xB7AC3C")]
		[DebuggerHidden]
		public <ResetSpring>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xB7B2A4", Offset = "0xB7B2A4", VA = "0xB7B2A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xB7B2A8", Offset = "0xB7B2A8", VA = "0xB7B2A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xB7B37C", Offset = "0xB7B37C", VA = "0xB7B37C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Glue mainJoint;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Glue subJoint;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable mainGrabbable;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable subGrabbable;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CrystalEnergyBase energyBaseMain;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CrystalEnergyBase energyBaseSub;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CrystalEnergyBase energyBase;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool powered;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpringJoint mainSpring;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpringJoint subSpring;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RubberBand slingShot;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Collider trigger;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool slingShotActive;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool shouldBeActive;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float width;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float initialSpring;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float initialDamper;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool crystalConnection;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EntityDefinition crystalEntity;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer[] lineRenderers;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material lineSling;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material lineConductor;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool retractAfterShot;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool isSlingshot;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool hasKinematic;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool isBurnedOut;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xB79D08", Offset = "0xB79D08", VA = "0xB79D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xB79F64", Offset = "0xB79F64", VA = "0xB79F64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB7A2E0", Offset = "0xB7A2E0", VA = "0xB7A2E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xB7A54C", Offset = "0xB7A54C", VA = "0xB7A54C")]
	private void EnergyEvent(CrystalEnergyBase crystalBase)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB7A678", Offset = "0xB7A678", VA = "0xB7A678")]
	private void SetCrystalConnection(bool which)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xB7AA24", Offset = "0xB7AA24", VA = "0xB7AA24")]
	[ContextMenu("SlingFired")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xB7A760", Offset = "0xB7A760", VA = "0xB7A760")]
	public void MakeSpringSoft(bool springStaysSoft = false)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xB7ABC8", Offset = "0xB7ABC8", VA = "0xB7ABC8")]
	[IteratorStateMachine(typeof(<ResetSpring>d__31))]
	private IEnumerator ResetSpring()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xB7AC64", Offset = "0xB7AC64", VA = "0xB7AC64")]
	private bool AnyMagnetGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xB7A8C0", Offset = "0xB7A8C0", VA = "0xB7A8C0")]
	private void MakeSpringHard(float factor = 1f)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xB7AE60", Offset = "0xB7AE60", VA = "0xB7AE60")]
	private void Burnout(Glue which)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xB7AFC4", Offset = "0xB7AFC4", VA = "0xB7AFC4")]
	private void CheckSpecialConnectedBurnout()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xB7B0DC", Offset = "0xB7B0DC", VA = "0xB7B0DC")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xB7B10C", Offset = "0xB7B10C", VA = "0xB7B10C")]
	private void DetachCheck()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB79E64", Offset = "0xB79E64", VA = "0xB79E64")]
	private void SetSlingshot()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xB7B294", Offset = "0xB7B294", VA = "0xB7B294")]
	public PowerSlingController()
	{
	}
}
[Token(Token = "0x20000ED")]
public class RocketRemote : MonoBehaviour
{
	[Token(Token = "0x20000EE")]
	public delegate void RocketRemotePressed();

	[Token(Token = "0x20000EF")]
	public delegate void RocketRemoteOff();

	[Token(Token = "0x14000017")]
	public static event RocketRemotePressed OnRocketRemotePressed
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xB7B3C4", Offset = "0xB7B3C4", VA = "0xB7B3C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xB7B47C", Offset = "0xB7B47C", VA = "0xB7B47C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event RocketRemoteOff OnRocketRemoteOffPressed
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xB7B534", Offset = "0xB7B534", VA = "0xB7B534")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xB7B5F0", Offset = "0xB7B5F0", VA = "0xB7B5F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB7B6AC", Offset = "0xB7B6AC", VA = "0xB7B6AC")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB7B710", Offset = "0xB7B710", VA = "0xB7B710")]
	public void ButtonOffPressed()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB7B780", Offset = "0xB7B780", VA = "0xB7B780")]
	public RocketRemote()
	{
	}
}
[Token(Token = "0x20000F0")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x20000F1")]
	private class Wrapper<T>
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Items;

		[Token(Token = "0x6000589")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x6000587")]
	public static T FromJson<T>(string json)
	{
		return (T)null;
	}

	[Token(Token = "0x6000588")]
	public static string ToJson<T>(T array)
	{
		return null;
	}
}
[Token(Token = "0x20000F2")]
public class ScenePhotoCamera : MonoBehaviour
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float photoDelay;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB7B958", Offset = "0xB7B958", VA = "0xB7B958")]
	private void Start()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xB7B9A8", Offset = "0xB7B9A8", VA = "0xB7B9A8")]
	private void TakePhoto()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB7BA28", Offset = "0xB7BA28", VA = "0xB7BA28")]
	public ScenePhotoCamera()
	{
	}
}
[Token(Token = "0x20000F3")]
public class SelectionSpawner : CreateVisualTarget
{
	[Token(Token = "0x20000F4")]
	public delegate void ObjectSpawned(GameObject gameObject);

	[Token(Token = "0x20000F5")]
	public delegate void ObjectRecycled(GameObject gameObject);

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Space]
	[Space]
	[Header("SelectionSpawner area------------------")]
	public List<Collider> colliders;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float wait;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float nextItemWait;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float spawnAgainWait;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float waitCounter;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool useSpawnerRotation;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int MaxElements;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int spawnedElements;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int itemID;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject currentSpawnPrefab;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject currentSpawnedGO;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody currentSpawnedRB;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider spawnCollider;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Collider deleteCollider;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float cleanUpTime;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float coolDown;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float coolDownTimer;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private EntityLookup entityLookup;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int categoryIDX;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject occupiedLight;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject occupiedLightOff;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject createSlot;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject destroySlot;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool editOffset;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool isPlaying;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool spawnSlotOccupied;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Space]
	public TextMeshProUGUI CategoryText;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image CategoryIcon;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite recycleIcon;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool createMode;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public CategoryDefinition people;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float rotationSpeed;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool debugGhostSpawnOnly;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool progressionSpawner;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	[HideInInspector]
	public bool tweakMode;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 spawnOffset;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Vector3 spawnEulerOffset;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 originalEulerAngles;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Grabbable grab;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool isMovableEditorSpanwer;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private FixedJoint editorFixedJoint;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float originalMass;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Entity entity;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool spanwnAreaEmpty;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Entity lastRecycled;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 axis;

	[Token(Token = "0x14000019")]
	public static event ObjectSpawned OnObjectSpawned
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xB7BA38", Offset = "0xB7BA38", VA = "0xB7BA38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xB7BAF0", Offset = "0xB7BAF0", VA = "0xB7BAF0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event ObjectRecycled OnObjectRecycled
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xB7BBA8", Offset = "0xB7BBA8", VA = "0xB7BBA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xB7BC64", Offset = "0xB7BC64", VA = "0xB7BC64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xB7BD20", Offset = "0xB7BD20", VA = "0xB7BD20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xB7C054", Offset = "0xB7C054", VA = "0xB7C054")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xB7C248", Offset = "0xB7C248", VA = "0xB7C248", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB7C330", Offset = "0xB7C330", VA = "0xB7C330", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB7C418", Offset = "0xB7C418", VA = "0xB7C418")]
	private void OnGrabObject(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB7C588", Offset = "0xB7C588", VA = "0xB7C588")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB7BEA8", Offset = "0xB7BEA8", VA = "0xB7BEA8")]
	public void SetMode(bool create)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB7C004", Offset = "0xB7C004", VA = "0xB7C004")]
	private void SetCategory()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB7C96C", Offset = "0xB7C96C", VA = "0xB7C96C")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB7CA9C", Offset = "0xB7CA9C", VA = "0xB7CA9C")]
	public void ChangeCategory(bool forward = true)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB7BF1C", Offset = "0xB7BF1C", VA = "0xB7BF1C")]
	private void SpawnCurrentItem()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB7C85C", Offset = "0xB7C85C", VA = "0xB7C85C")]
	public void DestroySpawned()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xB7D13C", Offset = "0xB7D13C", VA = "0xB7D13C")]
	public void ChangeItem(bool forward = true)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xB7C748", Offset = "0xB7C748", VA = "0xB7C748")]
	private void CheckSpawnSlots()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xB7D198", Offset = "0xB7D198", VA = "0xB7D198")]
	private void PositionObject()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xB7CFF8", Offset = "0xB7CFF8", VA = "0xB7CFF8")]
	private void PositionTargetGhost()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xB7D2DC", Offset = "0xB7D2DC", VA = "0xB7D2DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB7D8A8", Offset = "0xB7D8A8", VA = "0xB7D8A8")]
	private void Recycle(Collider col)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xB7DCAC", Offset = "0xB7DCAC", VA = "0xB7DCAC")]
	private void CleanColliders()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xB7DDA4", Offset = "0xB7DDA4", VA = "0xB7DDA4")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xB7DF48", Offset = "0xB7DF48", VA = "0xB7DF48")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xB7DFE4", Offset = "0xB7DFE4", VA = "0xB7DFE4")]
	public SelectionSpawner()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ShellBase : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addToOOBDetection;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ignorePrecisionScore;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xB7E27C", Offset = "0xB7E27C", VA = "0xB7E27C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB7E280", Offset = "0xB7E280", VA = "0xB7E280")]
	public ShellBase()
	{
	}
}
[Token(Token = "0x20000F7")]
[ExecuteInEditMode]
public class ShellConstructionTarget : MonoBehaviour
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition shellMyEntity;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTarget myTarget;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB7E288", Offset = "0xB7E288", VA = "0xB7E288")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xB7E3B4", Offset = "0xB7E3B4", VA = "0xB7E3B4")]
	public ShellConstructionTarget()
	{
	}
}
[Token(Token = "0x20000F8")]
[ExecuteInEditMode]
public class ShellConstructionTargetAngularVelocity : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shellTargetValue;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int shellTargetID;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetAngularVelocity myTarget;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xB7E3BC", Offset = "0xB7E3BC", VA = "0xB7E3BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xB7E4B4", Offset = "0xB7E4B4", VA = "0xB7E4B4")]
	public ShellConstructionTargetAngularVelocity()
	{
	}
}
[Token(Token = "0x20000F9")]
[ExecuteInEditMode]
public class ShellConstructionTargetGForce : MonoBehaviour
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int shellTargetValue;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int shellTargetID;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetGForce myTarget;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xB7E4C4", Offset = "0xB7E4C4", VA = "0xB7E4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB7E5BC", Offset = "0xB7E5BC", VA = "0xB7E5BC")]
	public ShellConstructionTargetGForce()
	{
	}
}
[Token(Token = "0x20000FA")]
[ExecuteInEditMode]
public class ShellConstructionTargetRocket : MonoBehaviour
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition shellMyEntity;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionTargetRocket myTarget;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manualTargetSelection;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addToOOBDetection;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool needsToBeInPhoto;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool triggerOnce;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideAfterTriggered;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB7E5CC", Offset = "0xB7E5CC", VA = "0xB7E5CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB7E708", Offset = "0xB7E708", VA = "0xB7E708")]
	public ShellConstructionTargetRocket()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Shell_MagnetDispenser : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool[] ActiveMagnet;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool[] LockedMagnet;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool progressionDispenser;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int amount;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasWheel;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GluemachineSpawner myTarget;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<bool> locked;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EntityDefinition> list;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Level sizeWheelUnlock;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB7E718", Offset = "0xB7E718", VA = "0xB7E718")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB7E84C", Offset = "0xB7E84C", VA = "0xB7E84C")]
	private void Init()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB7E8A4", Offset = "0xB7E8A4", VA = "0xB7E8A4")]
	private void ManualInit()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB7E85C", Offset = "0xB7E85C", VA = "0xB7E85C")]
	private void ProgressionInit()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB7EB98", Offset = "0xB7EB98", VA = "0xB7EB98")]
	public void GetProgressionPrefabList()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xB7E8CC", Offset = "0xB7E8CC", VA = "0xB7E8CC")]
	public void GetPrefabList()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xB7EDF0", Offset = "0xB7EDF0", VA = "0xB7EDF0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xB7EDF4", Offset = "0xB7EDF4", VA = "0xB7EDF4")]
	public Shell_MagnetDispenser()
	{
	}
}
[Token(Token = "0x20000FC")]
[ExecuteInEditMode]
public class Shell_tools_ValidationDevice : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool freeCamera;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool manualTargetSelection;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConstructionValidationPhotoCamera myTarget;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xB7EE04", Offset = "0xB7EE04", VA = "0xB7EE04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xB7EEE4", Offset = "0xB7EEE4", VA = "0xB7EEE4")]
	public Shell_tools_ValidationDevice()
	{
	}
}
[Token(Token = "0x20000FD")]
public class StabiliserHoming : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	public delegate void EMPMissileHitDelegate(StabiliserHoming missile);

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 diff;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform orientationTarget;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float uprightTorque;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool easeOutForce;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float easeOutFactor;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 torque;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ForceMode forceMode;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxVelocity;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ForceMode flightForceMode;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float flightForce;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float homingDelay;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float homingSpeedup;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHoming;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float homingAccelerationFactor;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 heading;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float velFactor;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject particles;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool inActive;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float maxBurntime;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float burntime;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EMP emp;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject fake;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool doExplosion;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BossController bossController;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastY;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool exploded;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float homingCounter;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float factor;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody colRB;

	[Token(Token = "0x1400001B")]
	public static event EMPMissileHitDelegate OnEMPMissileHit
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xB7EEEC", Offset = "0xB7EEEC", VA = "0xB7EEEC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xB7EFA4", Offset = "0xB7EFA4", VA = "0xB7EFA4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xB7F05C", Offset = "0xB7F05C", VA = "0xB7F05C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xB7F110", Offset = "0xB7F110", VA = "0xB7F110")]
	private void StartHoming()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xB7F150", Offset = "0xB7F150", VA = "0xB7F150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xB7F1D0", Offset = "0xB7F1D0", VA = "0xB7F1D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xB7F250", Offset = "0xB7F250", VA = "0xB7F250")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xB7F8F4", Offset = "0xB7F8F4", VA = "0xB7F8F4")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xB7FA1C", Offset = "0xB7FA1C", VA = "0xB7FA1C")]
	private void Remove()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xB7FAB0", Offset = "0xB7FAB0", VA = "0xB7FAB0")]
	private void EMPExplode(Glue thisGlue, EMP whichEMP)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xB7FB94", Offset = "0xB7FB94", VA = "0xB7FB94")]
	private void Explode()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xB7F254", Offset = "0xB7F254", VA = "0xB7F254")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xB7FCAC", Offset = "0xB7FCAC", VA = "0xB7FCAC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xB7FF24", Offset = "0xB7FF24", VA = "0xB7FF24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xB80008", Offset = "0xB80008", VA = "0xB80008")]
	public StabiliserHoming()
	{
	}
}
[Token(Token = "0x20000FF")]
public class Story_UFODiscovery : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	public delegate void OnLosenContainerDelegate(int _times);

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody[] rocksToRelease;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rubble;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doRelease;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody ripOffObject;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween tween;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particles;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ripRubbleSpawnPos;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int timesRippedOff;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject landSlideParticles;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ufoLoop;

	[Token(Token = "0x1400001C")]
	public event OnLosenContainerDelegate OnLosenContainer
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xB801AC", Offset = "0xB801AC", VA = "0xB801AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xB80248", Offset = "0xB80248", VA = "0xB80248")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xB802E4", Offset = "0xB802E4", VA = "0xB802E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xB80530", Offset = "0xB80530", VA = "0xB80530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xB805B0", Offset = "0xB805B0", VA = "0xB805B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xB80630", Offset = "0xB80630", VA = "0xB80630")]
	private void RipOff(List<GameObject> _grabbedStuff, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xB80AF0", Offset = "0xB80AF0", VA = "0xB80AF0")]
	private void ReleaseRocks(bool _mode)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xB80BE8", Offset = "0xB80BE8", VA = "0xB80BE8")]
	private float GetRnd(float rng)
	{
		return default(float);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xB80BF8", Offset = "0xB80BF8", VA = "0xB80BF8")]
	private void ShakeRocks()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xB8036C", Offset = "0xB8036C", VA = "0xB8036C")]
	private void DoReleaseRocks()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xB80D48", Offset = "0xB80D48", VA = "0xB80D48")]
	public Story_UFODiscovery()
	{
	}
}
[Token(Token = "0x2000101")]
public class TorqueSteering : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 target;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float uprightTorque;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetTrans;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion rot;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool stabiliseActive;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xB80EA4", Offset = "0xB80EA4", VA = "0xB80EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xB80F2C", Offset = "0xB80F2C", VA = "0xB80F2C")]
	public void SetStabilise(bool _which)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xB80F38", Offset = "0xB80F38", VA = "0xB80F38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xB80F3C", Offset = "0xB80F3C", VA = "0xB80F3C")]
	private void Stabilise()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xB810D0", Offset = "0xB810D0", VA = "0xB810D0")]
	public TorqueSteering()
	{
	}
}
[Token(Token = "0x2000102")]
public class BallMachine : MonoBehaviour
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wait;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float counter;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocity;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomOffsetX;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomOffsetY;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float randomOffsetZ;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 randomOffset;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] objects;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float scaleFactor;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject go;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xB810E8", Offset = "0xB810E8", VA = "0xB810E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xB810EC", Offset = "0xB810EC", VA = "0xB810EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xB81334", Offset = "0xB81334", VA = "0xB81334")]
	public BallMachine()
	{
	}
}
[Token(Token = "0x2000103")]
public class IntroSpawnUfo : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ufoPrefab;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ufo;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ufoVelocity;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool launchDone;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnDistance;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xB8135C", Offset = "0xB8135C", VA = "0xB8135C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xB81360", Offset = "0xB81360", VA = "0xB81360")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xB81364", Offset = "0xB81364", VA = "0xB81364")]
	private void CheckForlaunch()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xB8142C", Offset = "0xB8142C", VA = "0xB8142C")]
	private void SpawnUfo()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xB815F4", Offset = "0xB815F4", VA = "0xB815F4")]
	public IntroSpawnUfo()
	{
	}
}
[Token(Token = "0x2000104")]
public class WheelMechanic : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isTurning;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastAngle;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float diff;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angleDeltaSum;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConstructionTarget cTarget;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float myTimer;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xB8160C", Offset = "0xB8160C", VA = "0xB8160C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xB81708", Offset = "0xB81708", VA = "0xB81708")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xB81614", Offset = "0xB81614", VA = "0xB81614")]
	public void SetWheel(bool which)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xB81814", Offset = "0xB81814", VA = "0xB81814")]
	public WheelMechanic()
	{
	}
}
[Token(Token = "0x2000105")]
public class WheelSpeed : MonoBehaviour
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> speeds;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro tm;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint hinge;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float angularVelocity;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB8181C", Offset = "0xB8181C", VA = "0xB8181C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB81908", Offset = "0xB81908", VA = "0xB81908")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB81CBC", Offset = "0xB81CBC", VA = "0xB81CBC")]
	public WheelSpeed()
	{
	}
}
[Token(Token = "0x2000106")]
public class ConstructionTargetPeopleInArea : CollisionBase
{
	[Token(Token = "0x2000107")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConstructionTargetPeopleInArea <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0xB82518", Offset = "0xB82518", VA = "0xB82518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0xB82560", Offset = "0xB82560", VA = "0xB82560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xB81D38", Offset = "0xB81D38", VA = "0xB81D38")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xB82180", Offset = "0xB82180", VA = "0xB82180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xB82184", Offset = "0xB82184", VA = "0xB82184", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xB82520", Offset = "0xB82520", VA = "0xB82520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelDirector_C7000_sister_heistPrep mainLevelDirector;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LevelDirector_base> requiredLeveldirectors;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<bool> correctLevelDirectors;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HumanController> wrongLevelDirectors;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<ConstructionTargetManual> requiredTargets;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB81CC4", Offset = "0xB81CC4", VA = "0xB81CC4")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB81D60", Offset = "0xB81D60", VA = "0xB81D60", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB82044", Offset = "0xB82044", VA = "0xB82044")]
	private void CheckAllTargets()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB81EF8", Offset = "0xB81EF8", VA = "0xB81EF8")]
	private void WrongHuman(HumanController hc, bool added)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB82178", Offset = "0xB82178", VA = "0xB82178")]
	public ConstructionTargetPeopleInArea()
	{
	}
}
[Token(Token = "0x2000108")]
public class ContactTracing : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	[CompilerGenerated]
	private sealed class <Reset>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRender;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ContactTracing <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xB8283C", Offset = "0xB8283C", VA = "0xB8283C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060D")]
			[Address(RVA = "0xB82884", Offset = "0xB82884", VA = "0xB82884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xB82734", Offset = "0xB82734", VA = "0xB82734")]
		[DebuggerHidden]
		public <Reset>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xB82764", Offset = "0xB82764", VA = "0xB82764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xB82768", Offset = "0xB82768", VA = "0xB82768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xB82844", Offset = "0xB82844", VA = "0xB82844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material myMat;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB82568", Offset = "0xB82568", VA = "0xB82568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB825DC", Offset = "0xB825DC", VA = "0xB825DC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xB826A4", Offset = "0xB826A4", VA = "0xB826A4")]
	[IteratorStateMachine(typeof(<Reset>d__3))]
	private IEnumerator Reset(MeshRenderer meshRender)
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xB8275C", Offset = "0xB8275C", VA = "0xB8275C")]
	public ContactTracing()
	{
	}
}
[Token(Token = "0x200010A")]
public class ContainerRescueManager : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetsInMission;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ConstructionTargetContainerRescue> manualTargets;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform perimeter;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool checkForAchievement;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Achievement achievementAllContainers;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool achievementUnlocked;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelDirector_C122_Shipwreck levelDir;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int containersOutOfWater;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xB8288C", Offset = "0xB8288C", VA = "0xB8288C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xB8290C", Offset = "0xB8290C", VA = "0xB8290C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xB8298C", Offset = "0xB8298C", VA = "0xB8298C")]
	private void LevelComplete()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xB82998", Offset = "0xB82998", VA = "0xB82998")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xB82A2C", Offset = "0xB82A2C", VA = "0xB82A2C")]
	private void CheckLoadedAchievement()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xB82C54", Offset = "0xB82C54", VA = "0xB82C54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xB82C58", Offset = "0xB82C58", VA = "0xB82C58")]
	private void ScanContainers()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xB82E70", Offset = "0xB82E70", VA = "0xB82E70")]
	public ContainerRescueManager()
	{
	}
}
[Token(Token = "0x200010B")]
public class CopySandboxSave : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xB82E80", Offset = "0xB82E80", VA = "0xB82E80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xB82F5C", Offset = "0xB82F5C", VA = "0xB82F5C")]
	public void LevelToClipboard()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xB82FD4", Offset = "0xB82FD4", VA = "0xB82FD4")]
	public CopySandboxSave()
	{
	}
}
[Token(Token = "0x200010C")]
public class CraneWinchControl : MonoBehaviour
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float craneSpeed;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentSpeed;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topLimit;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bottomLimit;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool winchOn;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedSFXTreshold;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject winchSFX;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool craneDown;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xB82FDC", Offset = "0xB82FDC", VA = "0xB82FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xB82FFC", Offset = "0xB82FFC", VA = "0xB82FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xB8307C", Offset = "0xB8307C", VA = "0xB8307C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xB830FC", Offset = "0xB830FC", VA = "0xB830FC")]
	private void LeverUpdate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xB83104", Offset = "0xB83104", VA = "0xB83104")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xB832F4", Offset = "0xB832F4", VA = "0xB832F4")]
	public CraneWinchControl()
	{
	}
}
[Token(Token = "0x200010D")]
public class CreateVisualTarget : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[Header("CreateVisualTarget area------------------")]
	public GameObject target;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string colliderTag;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> outlines;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject spawnPrefab;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasTargetCollider;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Collider spawnColliderTarget;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[] sharedMaterials;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material ghostMaterial;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody targetRB;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xB8331C", Offset = "0xB8331C", VA = "0xB8331C")]
	public void SetPrefab(GameObject _prefab)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xB7CCAC", Offset = "0xB7CCAC", VA = "0xB7CCAC")]
	[ContextMenu("CreateGhost")]
	public void CreateGhost(bool useSpawnerOrientation = true, [Optional] Vector3 offset)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xB83FD4", Offset = "0xB83FD4", VA = "0xB83FD4")]
	private void ComponentDestroy(Transform _trans)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xB83324", Offset = "0xB83324", VA = "0xB83324")]
	private void DeleteStuff()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xB84738", Offset = "0xB84738", VA = "0xB84738")]
	[ContextMenu("SetDefaultOutlines")]
	private void SetDefaultOutlines()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xB84740", Offset = "0xB84740", VA = "0xB84740")]
	private void SetMaterialTo(Renderer mr, Material _material)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xB84518", Offset = "0xB84518", VA = "0xB84518")]
	public void SetOutlines(bool showRenderer = true)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB842AC", Offset = "0xB842AC", VA = "0xB842AC")]
	private void PrepareOutlines(UnityEngine.Object obj, bool showRenderer = true, bool defaultOutline = true)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB84080", Offset = "0xB84080", VA = "0xB84080")]
	private void TurnToTriggers(Collider col, bool compForced = false)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB83FF8", Offset = "0xB83FF8", VA = "0xB83FF8")]
	private void DoDestroy(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xB7CB78", Offset = "0xB7CB78", VA = "0xB7CB78")]
	public void DeleteAttach()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xB7E03C", Offset = "0xB7E03C", VA = "0xB7E03C")]
	public CreateVisualTarget()
	{
	}
}
[Token(Token = "0x200010E")]
public class CreditsFireworks : MonoBehaviour
{
	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] secondaryFireworks;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xB848D4", Offset = "0xB848D4", VA = "0xB848D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xB848D8", Offset = "0xB848D8", VA = "0xB848D8")]
	public void StartFireworks()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xB84CDC", Offset = "0xB84CDC", VA = "0xB84CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xB84CE0", Offset = "0xB84CE0", VA = "0xB84CE0")]
	public CreditsFireworks()
	{
	}
}
[Token(Token = "0x200010F")]
public class CreditsParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteMask spriteMask;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SortingGroup sortingGroup;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xB84CE8", Offset = "0xB84CE8", VA = "0xB84CE8")]
	public CreditsParticleSystem()
	{
	}
}
[Token(Token = "0x2000110")]
public class CrystalAntiGrav : CollisionBase
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxShake;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float gravityCounterFactor;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public ForceMode forceMode;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Rigidbody> rbsInRange;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xB84CF0", Offset = "0xB84CF0", VA = "0xB84CF0", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xB84E60", Offset = "0xB84E60", VA = "0xB84E60")]
	private float RND(float f)
	{
		return default(float);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB84E70", Offset = "0xB84E70", VA = "0xB84E70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB850D4", Offset = "0xB850D4", VA = "0xB850D4")]
	public CrystalAntiGrav()
	{
	}
}
[Token(Token = "0x2000111")]
public class CrystalEnergyBase : MonoBehaviour
{
	[Token(Token = "0x2000112")]
	public delegate void EnergySourceEventDelegate(CrystalEnergyBase energyBase);

	[Token(Token = "0x2000113")]
	public delegate void EnergyReceiverLevelChangeEventDelegate(int _energyLevel);

	[Token(Token = "0x2000114")]
	public delegate void ReceiverCheckDelegate();

	[Token(Token = "0x2000115")]
	public enum EnergyType
	{
		[Token(Token = "0x4000746")]
		source,
		[Token(Token = "0x4000747")]
		receiver
	}

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CrystalEnergyBase energyBaseRef;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CrystalEnergyBase> connections;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnergyType energyType;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isConnectorOnly;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool playEnergyFlowSound;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StudioEventEmitter studioEventEmitter;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string energyFlowSFX;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGlue;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Glue glue;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Glued glued;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnEvent;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OffEvent;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool chained;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CrystalEnergyBase chainObject;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int energyLevel;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int lastEnergyLevel;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string energyLoopSFX;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<CrystalEnergyBase> allConnections;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<CrystalEnergyBase> connectedSources;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<CrystalEnergyBase> connectorSources;

	[Token(Token = "0x1400001D")]
	public static event EnergySourceEventDelegate OnEnergySourceChangeEvent
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0xB7A228", Offset = "0xB7A228", VA = "0xB7A228")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xB7A494", Offset = "0xB7A494", VA = "0xB7A494")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event EnergyReceiverLevelChangeEventDelegate OnReceiverEnergyLevelChangeEvent
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xB85170", Offset = "0xB85170", VA = "0xB85170")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xB8520C", Offset = "0xB8520C", VA = "0xB8520C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ReceiverCheckDelegate OnReceiverCheck
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xB852A8", Offset = "0xB852A8", VA = "0xB852A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000639")]
		[Address(RVA = "0xB85364", Offset = "0xB85364", VA = "0xB85364")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB85420", Offset = "0xB85420", VA = "0xB85420")]
	[ContextMenu("TestDestroy")]
	public void TestDestroy()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB85438", Offset = "0xB85438", VA = "0xB85438", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xB8543C", Offset = "0xB8543C", VA = "0xB8543C", Slot = "5")]
	public virtual void SetEnergyLevel(int _eLevel)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xB85444", Offset = "0xB85444", VA = "0xB85444")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xB855E4", Offset = "0xB855E4", VA = "0xB855E4")]
	public List<CrystalEnergyBase> GetConnections()
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xB85874", Offset = "0xB85874", VA = "0xB85874", Slot = "6")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xB85A38", Offset = "0xB85A38", VA = "0xB85A38", Slot = "7")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xB85B54", Offset = "0xB85B54", VA = "0xB85B54")]
	public void AddConnection(CrystalEnergyBase crystalEnergy)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB85C3C", Offset = "0xB85C3C", VA = "0xB85C3C")]
	public void RemoveConnection(CrystalEnergyBase crystalEnergy)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB85CCC", Offset = "0xB85CCC", VA = "0xB85CCC", Slot = "8")]
	public virtual void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB85CD0", Offset = "0xB85CD0", VA = "0xB85CD0", Slot = "9")]
	public virtual void RemoveAllConnections()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB85DB8", Offset = "0xB85DB8", VA = "0xB85DB8", Slot = "10")]
	public virtual void CallReceiverEvent()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xB85E1C", Offset = "0xB85E1C", VA = "0xB85E1C", Slot = "11")]
	public virtual void ReceiversEvent()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xB86168", Offset = "0xB86168", VA = "0xB86168")]
	private void EnergySound(int _lastEnergy, int _energy)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB862F8", Offset = "0xB862F8", VA = "0xB862F8", Slot = "12")]
	public virtual void CallEnergyEvent()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xB86364", Offset = "0xB86364", VA = "0xB86364", Slot = "13")]
	public virtual void EnergyLevelEvent(CrystalEnergyBase _ceb)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xB86368", Offset = "0xB86368", VA = "0xB86368")]
	public CrystalEnergyBase()
	{
	}
}
[Token(Token = "0x2000116")]
public class CrystalEnergyPowerSling : CrystalEnergyBase
{
	[Token(Token = "0x2000117")]
	public delegate void EnergyConnectionDelegate(Glue _glue, Glued _glued);

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool onlyCertainLayersAllowed;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public LayerMask allowedLayers;

	[Token(Token = "0x14000020")]
	public static event EnergyConnectionDelegate OnEnergyConnection
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xB86650", Offset = "0xB86650", VA = "0xB86650")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xB86708", Offset = "0xB86708", VA = "0xB86708")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xB867C0", Offset = "0xB867C0", VA = "0xB867C0")]
	private bool LayerAllowed(Glue _glue, Glued _glued)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xB86988", Offset = "0xB86988", VA = "0xB86988", Slot = "8")]
	public override void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xB86C00", Offset = "0xB86C00", VA = "0xB86C00")]
	[ContextMenu("ConnectionsContainEnergyObject")]
	private void ConnectionsContainEnergyObject()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xB86D44", Offset = "0xB86D44", VA = "0xB86D44")]
	public CrystalEnergyPowerSling()
	{
	}
}
[Token(Token = "0x2000118")]
public class CrystalLaser : MonoBehaviour
{
	[Token(Token = "0x2000119")]
	public enum State
	{
		[Token(Token = "0x400076B")]
		empty,
		[Token(Token = "0x400076C")]
		charged,
		[Token(Token = "0x400076D")]
		cooldown
	}

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform laserTransform;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject laserVFX;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool laserActive;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit hit;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject colliderTriggerPrefab;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int maxDeflections;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> laserColliders;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<HazardTriggerLaserForces> hazardTriggerLaser;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 triggerScale;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LayerMask reflectionLayerMask;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int mirrorLayer;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 startPosition;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 startDir;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject activeEffects;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int crystalCharge;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int maxCharge;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public State laserState;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool switchedOn;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 chargeBarScale;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 nullVector;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform chargeBarRoot;

	[Token(Token = "0x4000762")]
	public const int batteryCharge = 2;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float reChargeFactor;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CrystalEnergyBase crystalEnergyBase;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 hitPosition;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float chargeFactor;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Ray ray;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool laserHit;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Vector3> lines;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xB86EA4", Offset = "0xB86EA4", VA = "0xB86EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xB872E4", Offset = "0xB872E4", VA = "0xB872E4")]
	public void AddCharge2()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xB872F0", Offset = "0xB872F0", VA = "0xB872F0")]
	public void ReduceCharge2()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xB872FC", Offset = "0xB872FC", VA = "0xB872FC")]
	[ContextMenu("UnCharge Laser")]
	public void UnChargeLaser()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB87268", Offset = "0xB87268", VA = "0xB87268")]
	public void ChargeLaser(int _charge)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xB873F0", Offset = "0xB873F0", VA = "0xB873F0")]
	private void SetRayEnergy()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xB87540", Offset = "0xB87540", VA = "0xB87540")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xB87638", Offset = "0xB87638", VA = "0xB87638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xB8776C", Offset = "0xB8776C", VA = "0xB8776C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xB878A0", Offset = "0xB878A0", VA = "0xB878A0")]
	private void RemoteEvent(bool which, int _channelID)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xB878BC", Offset = "0xB878BC", VA = "0xB878BC")]
	public void ToggleLaser()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xB878EC", Offset = "0xB878EC", VA = "0xB878EC")]
	[ContextMenu("DeActivateLaser")]
	public void DeActivateLaser()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xB878F8", Offset = "0xB878F8", VA = "0xB878F8")]
	[ContextMenu("ActivateLaser")]
	public void ActivateLaser()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xB87304", Offset = "0xB87304", VA = "0xB87304")]
	private void SetLaserActive(bool which)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xB86FAC", Offset = "0xB86FAC", VA = "0xB86FAC")]
	private void FillTriggerList()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xB87918", Offset = "0xB87918", VA = "0xB87918")]
	private void Update()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xB8791C", Offset = "0xB8791C", VA = "0xB8791C")]
	private void Laser()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xB88168", Offset = "0xB88168", VA = "0xB88168")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xB88230", Offset = "0xB88230", VA = "0xB88230")]
	public CrystalLaser()
	{
	}
}
[Token(Token = "0x200011A")]
public class CrystalShock : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrystalShock <>4__this;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <rot>5__2;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0xB896EC", Offset = "0xB896EC", VA = "0xB896EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xB89734", Offset = "0xB89734", VA = "0xB89734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xB89428", Offset = "0xB89428", VA = "0xB89428")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xB89458", Offset = "0xB89458", VA = "0xB89458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xB8945C", Offset = "0xB8945C", VA = "0xB8945C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB896F4", Offset = "0xB896F4", VA = "0xB896F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mesh;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xB893B4", Offset = "0xB893B4", VA = "0xB893B4")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xB89450", Offset = "0xB89450", VA = "0xB89450")]
	public CrystalShock()
	{
	}
}
[Token(Token = "0x200011C")]
public class CrystalShockExplosion : MonoBehaviour
{
	[Token(Token = "0x600067C")]
	[Address(RVA = "0xB8973C", Offset = "0xB8973C", VA = "0xB8973C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xB89790", Offset = "0xB89790", VA = "0xB89790")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xB89848", Offset = "0xB89848", VA = "0xB89848")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xB89850", Offset = "0xB89850", VA = "0xB89850")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xB89874", Offset = "0xB89874", VA = "0xB89874")]
	public CrystalShockExplosion()
	{
	}
}
[Token(Token = "0x200011D")]
public class CrystalThreatLevel : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int progressThreatLevel;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int loadedLevelThreatLevel;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuestSystem questSystem;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CrystalThreatLevel _instance;

	[Token(Token = "0x1700004F")]
	public static CrystalThreatLevel Instance
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xB8987C", Offset = "0xB8987C", VA = "0xB8987C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xB899F8", Offset = "0xB899F8", VA = "0xB899F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xB89A08", Offset = "0xB89A08", VA = "0xB89A08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xB89B40", Offset = "0xB89B40", VA = "0xB89B40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB89A00", Offset = "0xB89A00", VA = "0xB89A00")]
	[ContextMenu("ReadThreatLevel")]
	private void ReadThreatLevel()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB89C78", Offset = "0xB89C78", VA = "0xB89C78")]
	private void UpdateThreatLevel(bool editorLevelStart)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB8A140", Offset = "0xB8A140", VA = "0xB8A140")]
	public CrystalThreatLevel()
	{
	}
}
[Token(Token = "0x200011E")]
public class DeactivateLimits : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string limitsID;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB8A148", Offset = "0xB8A148", VA = "0xB8A148")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB8A154", Offset = "0xB8A154", VA = "0xB8A154")]
	public DeactivateLimits()
	{
	}
}
[Token(Token = "0x200011F")]
public class DebugCanvas : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	public enum Status
	{
		[Token(Token = "0x4000788")]
		none,
		[Token(Token = "0x4000789")]
		sdk,
		[Token(Token = "0x400078A")]
		headsetRemoved,
		[Token(Token = "0x400078B")]
		paused,
		[Token(Token = "0x400078C")]
		quit
	}

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvas;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject MainCanvas;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject debugGroup;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI tm;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject entitlementFeedback;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bugReporterButton;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool displayUserWatermark;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool punishEntitlementFail;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool displayEntitlementFeedback;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool useDebugFeedback;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject errorFeedback;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI errorTextMesh;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject quitButton;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Status currentStatus;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB8A15C", Offset = "0xB8A15C", VA = "0xB8A15C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xB8A29C", Offset = "0xB8A29C", VA = "0xB8A29C")]
	private void Start()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB8A38C", Offset = "0xB8A38C", VA = "0xB8A38C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB8A56C", Offset = "0xB8A56C", VA = "0xB8A56C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xB8A74C", Offset = "0xB8A74C", VA = "0xB8A74C")]
	private void GamePaused(bool isPaused)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB8AA2C", Offset = "0xB8AA2C", VA = "0xB8AA2C")]
	private void HeadsetRemoved()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB8AA38", Offset = "0xB8AA38", VA = "0xB8AA38")]
	private void QuitCalled()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB8A758", Offset = "0xB8A758", VA = "0xB8A758")]
	public void ShowStatusMsg(Status error, bool isActive)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB8AA44", Offset = "0xB8AA44", VA = "0xB8AA44")]
	public void FailedEntitlementCheck()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB8A268", Offset = "0xB8A268", VA = "0xB8A268")]
	public void SetEntitlementFeedback(bool isEntitled = false)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB8AAC4", Offset = "0xB8AAC4", VA = "0xB8AAC4")]
	private void DoQuit()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB8AACC", Offset = "0xB8AACC", VA = "0xB8AACC")]
	public static void SetCanvas(bool active)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB8AB28", Offset = "0xB8AB28", VA = "0xB8AB28")]
	public static void ToggleCanvas()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB8AB94", Offset = "0xB8AB94", VA = "0xB8AB94")]
	public static void DebuggerKeys()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB8AE90", Offset = "0xB8AE90", VA = "0xB8AE90")]
	public DebugCanvas()
	{
	}
}
[Token(Token = "0x2000121")]
public class DebugValues : MonoBehaviour
{
	[Token(Token = "0x2000122")]
	public enum Display
	{
		[Token(Token = "0x4000790")]
		timeScale,
		[Token(Token = "0x4000791")]
		fixedStep,
		[Token(Token = "0x4000792")]
		refreshRate
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Display displayMode;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro tmPro;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xB8AE98", Offset = "0xB8AE98", VA = "0xB8AE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xB8AEF0", Offset = "0xB8AEF0", VA = "0xB8AEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xB8AF64", Offset = "0xB8AF64", VA = "0xB8AF64")]
	public DebugValues()
	{
	}
}
[Token(Token = "0x2000123")]
public class DelayedHeistOOB : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanController humanController;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject nonHuman;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xB8AF6C", Offset = "0xB8AF6C", VA = "0xB8AF6C")]
	public void Init(HumanController controller, float delay)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xB8B004", Offset = "0xB8B004", VA = "0xB8B004")]
	private void OOBMe()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xB8B0D0", Offset = "0xB8B0D0", VA = "0xB8B0D0")]
	public static void InitOOB(HumanController trespasser, float delay = 1.5f)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xB8B1B8", Offset = "0xB8B1B8", VA = "0xB8B1B8")]
	public static void InitOOBNonHuman(GameObject go)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xB8B28C", Offset = "0xB8B28C", VA = "0xB8B28C")]
	public void InitNonHuman(GameObject go)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB8B2F8", Offset = "0xB8B2F8", VA = "0xB8B2F8")]
	private void OOBDel()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB8B350", Offset = "0xB8B350", VA = "0xB8B350")]
	public DelayedHeistOOB()
	{
	}
}
[Token(Token = "0x2000124")]
public class DeleteOnJointBreak : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FixedJoint myJoint;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject deleteOnBreak;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB8B358", Offset = "0xB8B358", VA = "0xB8B358")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB8B410", Offset = "0xB8B410", VA = "0xB8B410")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xB8B464", Offset = "0xB8B464", VA = "0xB8B464")]
	public DeleteOnJointBreak()
	{
	}
}
[Token(Token = "0x2000125")]
public class DemoUnlock : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Unlocks;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool visible;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB8B46C", Offset = "0xB8B46C", VA = "0xB8B46C")]
	public void ShowHide()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB8B4DC", Offset = "0xB8B4DC", VA = "0xB8B4DC")]
	public DemoUnlock()
	{
	}
}
[Token(Token = "0x2000126")]
public class Destroyer : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	public delegate void DestroyDelegate(GameObject _gameObject);

	[Token(Token = "0x14000021")]
	public static event DestroyDelegate OnDestroy
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xB8B4E4", Offset = "0xB8B4E4", VA = "0xB8B4E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB8B59C", Offset = "0xB8B59C", VA = "0xB8B59C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB8B654", Offset = "0xB8B654", VA = "0xB8B654")]
	public static void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB8B6E4", Offset = "0xB8B6E4", VA = "0xB8B6E4")]
	public static void DestroyerDestroyImmediate(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB8B774", Offset = "0xB8B774", VA = "0xB8B774")]
	public Destroyer()
	{
	}
}
[Token(Token = "0x2000128")]
public class DestroyOnBurnout : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Glue> trackedGlues;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB8B870", Offset = "0xB8B870", VA = "0xB8B870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB8B8F0", Offset = "0xB8B8F0", VA = "0xB8B8F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB8B970", Offset = "0xB8B970", VA = "0xB8B970")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB8BA1C", Offset = "0xB8BA1C", VA = "0xB8BA1C")]
	public DestroyOnBurnout()
	{
	}
}
[Token(Token = "0x2000129")]
public class DeviceBasedAction_base : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] deviceList;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("ACTION if NOT device in list")]
	public bool actionIfNotDevice;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB8BA24", Offset = "0xB8BA24", VA = "0xB8BA24", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB8BAE0", Offset = "0xB8BAE0", VA = "0xB8BAE0", Slot = "5")]
	public virtual void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB8BAE4", Offset = "0xB8BAE4", VA = "0xB8BAE4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB8BAE8", Offset = "0xB8BAE8", VA = "0xB8BAE8")]
	public DeviceBasedAction_base()
	{
	}
}
[Token(Token = "0x200012A")]
public class DeviceBasedFixedUpdate : MonoBehaviour
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] changeForDevice;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Set if NOT device in list")]
	public float fixedUpdate;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setIfNotDevice;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB8BAF0", Offset = "0xB8BAF0", VA = "0xB8BAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB8BBD4", Offset = "0xB8BBD4", VA = "0xB8BBD4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB8BBD8", Offset = "0xB8BBD8", VA = "0xB8BBD8")]
	public DeviceBasedFixedUpdate()
	{
	}
}
[Token(Token = "0x200012B")]
public class DeviceBasedFog : DeviceBasedAction_base
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fogDensity;

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB8BBE8", Offset = "0xB8BBE8", VA = "0xB8BBE8", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB8BBF4", Offset = "0xB8BBF4", VA = "0xB8BBF4")]
	public DeviceBasedFog()
	{
	}
}
[Token(Token = "0x200012C")]
public class DeviceBasedGPULevel : DeviceBasedAction_base
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int GPULevel;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB8BC08", Offset = "0xB8BC08", VA = "0xB8BC08", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB8BC0C", Offset = "0xB8BC0C", VA = "0xB8BC0C")]
	public DeviceBasedGPULevel()
	{
	}
}
[Token(Token = "0x200012D")]
public class DeviceBasedOversampling : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] changeForDevice;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Set if NOT device in list")]
	public float overSampling;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setIfNotDevice;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB8BC1C", Offset = "0xB8BC1C", VA = "0xB8BC1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB8BC20", Offset = "0xB8BC20", VA = "0xB8BC20")]
	public DeviceBasedOversampling()
	{
	}
}
[Token(Token = "0x200012E")]
public class DeviceBasedRemoval : MonoBehaviour
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] hideForDevice;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("HIDE if NOT device in list")]
	public bool hideIfNotDevice;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useOtherGameobject;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToHide;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useAwake;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayHideForGizmo;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB8BC30", Offset = "0xB8BC30", VA = "0xB8BC30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB8BD6C", Offset = "0xB8BD6C", VA = "0xB8BD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB8BC40", Offset = "0xB8BC40", VA = "0xB8BC40")]
	private void RemoveStuff()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB8BD7C", Offset = "0xB8BD7C", VA = "0xB8BD7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB8BD80", Offset = "0xB8BD80", VA = "0xB8BD80")]
	public DeviceBasedRemoval()
	{
	}
}
[Token(Token = "0x200012F")]
public class DeviceBasedRigidBody : MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformManager.deviceType[] addForDevice;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("HIDE if NOT device in list")]
	public bool addIfNotDevice;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useOtherGameobject;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToAddRB;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useAwake;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayAddForGizmo;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB8BD90", Offset = "0xB8BD90", VA = "0xB8BD90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB8BF48", Offset = "0xB8BF48", VA = "0xB8BF48")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB8BDA0", Offset = "0xB8BDA0", VA = "0xB8BDA0")]
	private void RemoveStuff()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB8BF58", Offset = "0xB8BF58", VA = "0xB8BF58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB8BF5C", Offset = "0xB8BF5C", VA = "0xB8BF5C")]
	public DeviceBasedRigidBody()
	{
	}
}
[Token(Token = "0x2000130")]
public class DeviceBasedSurfaceShader : DeviceBasedAction_base
{
	[Token(Token = "0x2000131")]
	public enum SurfaceShader
	{
		[Token(Token = "0x40007B3")]
		allNoise,
		[Token(Token = "0x40007B4")]
		foam,
		[Token(Token = "0x40007B5")]
		reflection,
		[Token(Token = "0x40007B6")]
		ricoNoise,
		[Token(Token = "0x40007B7")]
		noNoise
	}

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceShader surfaceShader;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB8BF6C", Offset = "0xB8BF6C", VA = "0xB8BF6C", Slot = "5")]
	public override void DeviceAction(bool doAction)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB8C014", Offset = "0xB8C014", VA = "0xB8C014")]
	public DeviceBasedSurfaceShader()
	{
	}
}
[Token(Token = "0x2000132")]
[ExecuteInEditMode]
public class DisableChildrensRenderers : MonoBehaviour
{
	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB8C01C", Offset = "0xB8C01C", VA = "0xB8C01C")]
	[ContextMenu("Disable Childrens Renderers")]
	public void DisableRenderers()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB8C0B8", Offset = "0xB8C0B8", VA = "0xB8C0B8")]
	[ContextMenu("Enable Childrens Renderers")]
	public void EnableRenderers()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB8C154", Offset = "0xB8C154", VA = "0xB8C154")]
	public DisableChildrensRenderers()
	{
	}
}
[Token(Token = "0x2000133")]
public class DisableCollisionAgainstRBs : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allColliders;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> disableRBs;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOnlyRBColliders;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRB;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xB8C15C", Offset = "0xB8C15C", VA = "0xB8C15C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xB8C464", Offset = "0xB8C464", VA = "0xB8C464")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xB8C610", Offset = "0xB8C610", VA = "0xB8C610")]
	public void IgnoreCollision(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xB8C230", Offset = "0xB8C230", VA = "0xB8C230")]
	private List<Collider> GetAllColliders(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB8C710", Offset = "0xB8C710", VA = "0xB8C710")]
	public DisableCollisionAgainstRBs()
	{
	}
}
[Token(Token = "0x2000134")]
public class DisableCollisionOnSlingshot : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allColliders;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Rigidbody> disableRBs;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOnlyRBColliders;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool disableTriggers;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody myRB;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB8C718", Offset = "0xB8C718", VA = "0xB8C718")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB8C9C4", Offset = "0xB8C9C4", VA = "0xB8C9C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB8CA78", Offset = "0xB8CA78", VA = "0xB8CA78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB8CB2C", Offset = "0xB8CB2C", VA = "0xB8CB2C")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB8CD48", Offset = "0xB8CD48", VA = "0xB8CD48")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB8CEF4", Offset = "0xB8CEF4", VA = "0xB8CEF4")]
	public void IgnoreCollision(bool which, Collider otherColliders)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xB8C790", Offset = "0xB8C790", VA = "0xB8C790")]
	private List<Collider> GetAllColliders(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xB8D044", Offset = "0xB8D044", VA = "0xB8D044")]
	public DisableCollisionOnSlingshot()
	{
	}
}
[Token(Token = "0x2000135")]
public class DisableEmitterOnPreload : MonoBehaviour
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter studioEmitter;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xB8D04C", Offset = "0xB8D04C", VA = "0xB8D04C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xB8D184", Offset = "0xB8D184", VA = "0xB8D184")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xB8D2BC", Offset = "0xB8D2BC", VA = "0xB8D2BC")]
	private void Load()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xB8D398", Offset = "0xB8D398", VA = "0xB8D398")]
	public DisableEmitterOnPreload()
	{
	}
}
[Token(Token = "0x2000136")]
public class DisableJointOnGrab : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xB8D3A0", Offset = "0xB8D3A0", VA = "0xB8D3A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xB8D420", Offset = "0xB8D420", VA = "0xB8D420")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xB8D4A0", Offset = "0xB8D4A0", VA = "0xB8D4A0")]
	private void RemoveJoint(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xB8D590", Offset = "0xB8D590", VA = "0xB8D590")]
	public DisableJointOnGrab()
	{
	}
}
[Token(Token = "0x2000137")]
public class DisableOnDistance : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxDistance;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform vrCam;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float wait;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xB8D598", Offset = "0xB8D598", VA = "0xB8D598")]
	public void SetMode(bool which)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xB8D63C", Offset = "0xB8D63C", VA = "0xB8D63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xB8D67C", Offset = "0xB8D67C", VA = "0xB8D67C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xB8D7E8", Offset = "0xB8D7E8", VA = "0xB8D7E8")]
	private void TestDistance()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xB8D98C", Offset = "0xB8D98C", VA = "0xB8D98C")]
	public DisableOnDistance()
	{
	}
}
[Token(Token = "0x2000138")]
public class DisableOObOnTargetComplete : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTarget constructionTarget;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParachuteRespawnTracker tracker;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xB8D9AC", Offset = "0xB8D9AC", VA = "0xB8D9AC")]
	private void Init()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xB8DB28", Offset = "0xB8DB28", VA = "0xB8DB28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xB8DBA8", Offset = "0xB8DBA8", VA = "0xB8DBA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xB8DC28", Offset = "0xB8DC28", VA = "0xB8DC28")]
	private void TargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xB8DD1C", Offset = "0xB8DD1C", VA = "0xB8DD1C")]
	public DisableOObOnTargetComplete()
	{
	}
}
[Token(Token = "0x2000139")]
public class DisableRBCollisionAgainstColliders : MonoBehaviour
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Collider> allMyColliders;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> disableTransforms;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody myRB;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xB8DD24", Offset = "0xB8DD24", VA = "0xB8DD24")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xB8DFD4", Offset = "0xB8DFD4", VA = "0xB8DFD4")]
	private void LoopThroughRBs()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xB8E17C", Offset = "0xB8E17C", VA = "0xB8E17C")]
	public void IgnoreCollision(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xB8DE08", Offset = "0xB8DE08", VA = "0xB8DE08")]
	private List<Collider> GetAllColliders(Transform _trans)
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xB8E27C", Offset = "0xB8E27C", VA = "0xB8E27C")]
	public DisableRBCollisionAgainstColliders()
	{
	}
}
[Token(Token = "0x200013A")]
public class DispenserSpawnCheck : CollisionBase
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool areaBlocked;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xB8E284", Offset = "0xB8E284", VA = "0xB8E284", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xB8E30C", Offset = "0xB8E30C", VA = "0xB8E30C", Slot = "5")]
	public override void CollisionDictChangedNonRB(Collider col, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xB8E394", Offset = "0xB8E394", VA = "0xB8E394")]
	public DispenserSpawnCheck()
	{
	}
}
[Token(Token = "0x200013B")]
public class DogController : SandboxInit_base
{
	[Token(Token = "0x200013C")]
	public enum Mode
	{
		[Token(Token = "0x40007E1")]
		bark,
		[Token(Token = "0x40007E2")]
		shake,
		[Token(Token = "0x40007E3")]
		growl
	}

	[Token(Token = "0x200013D")]
	[CompilerGenerated]
	private sealed class <MakeDogHappy>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogController <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0xB8F018", Offset = "0xB8F018", VA = "0xB8F018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0xB8F060", Offset = "0xB8F060", VA = "0xB8F060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xB8EC30", Offset = "0xB8EC30", VA = "0xB8EC30")]
		[DebuggerHidden]
		public <MakeDogHappy>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xB8EF0C", Offset = "0xB8EF0C", VA = "0xB8EF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xB8EF10", Offset = "0xB8EF10", VA = "0xB8EF10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xB8F020", Offset = "0xB8F020", VA = "0xB8F020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013E")]
	[CompilerGenerated]
	private sealed class <Shake>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DogController <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0xB8F338", Offset = "0xB8F338", VA = "0xB8F338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0xB8F380", Offset = "0xB8F380", VA = "0xB8F380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xB8EC58", Offset = "0xB8EC58", VA = "0xB8EC58")]
		[DebuggerHidden]
		public <Shake>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xB8F068", Offset = "0xB8F068", VA = "0xB8F068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xB8F06C", Offset = "0xB8F06C", VA = "0xB8F06C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xB8F340", Offset = "0xB8F340", VA = "0xB8F340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip HappyDog;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip Blink;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AchievementsCollectedObjectsID achievementsCollectedObjectsID;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip ShakingDog;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation ani;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject happyParticles;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject wetPartilces;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsHappy;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool dogsPettedAndFriendly;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string dogEmo;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Grabbable grabbable;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool tentacleIsClose;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Mode dogMode;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool sandboxDog;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject proximityTrigger;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTapped;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xB8E39C", Offset = "0xB8E39C", VA = "0xB8E39C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xB8E3BC", Offset = "0xB8E3BC", VA = "0xB8E3BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xB8E554", Offset = "0xB8E554", VA = "0xB8E554", Slot = "4")]
	public override void SandboxInit()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB8E3E4", Offset = "0xB8E3E4", VA = "0xB8E3E4")]
	private void StartBarkRepeat()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB8E558", Offset = "0xB8E558", VA = "0xB8E558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB8E658", Offset = "0xB8E658", VA = "0xB8E658")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB8E74C", Offset = "0xB8E74C", VA = "0xB8E74C")]
	public void TentacleProximity(bool isClose, Dictionary<Rigidbody, List<Collider>> _collisionDict)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB8E8D0", Offset = "0xB8E8D0", VA = "0xB8E8D0")]
	private void DogPettedBefore()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB8E478", Offset = "0xB8E478", VA = "0xB8E478")]
	private void DogTamed()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB8E8D4", Offset = "0xB8E8D4", VA = "0xB8E8D4")]
	private void Growl()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB8E968", Offset = "0xB8E968", VA = "0xB8E968")]
	private void Bark()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB8E944", Offset = "0xB8E944", VA = "0xB8E944")]
	private void Jump(float force = 2f)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB8E9A8", Offset = "0xB8E9A8", VA = "0xB8E9A8")]
	private void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB8EB48", Offset = "0xB8EB48", VA = "0xB8EB48")]
	[IteratorStateMachine(typeof(<MakeDogHappy>d__32))]
	private IEnumerator MakeDogHappy()
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB8EBBC", Offset = "0xB8EBBC", VA = "0xB8EBBC")]
	[IteratorStateMachine(typeof(<Shake>d__33))]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xB8EC80", Offset = "0xB8EC80", VA = "0xB8EC80", Slot = "5")]
	public virtual void NoPlayerFocus()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB8ECC4", Offset = "0xB8ECC4", VA = "0xB8ECC4", Slot = "6")]
	public virtual void PlayerFocus()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB8EE60", Offset = "0xB8EE60", VA = "0xB8EE60")]
	public DogController()
	{
	}
}
[Token(Token = "0x200013F")]
public class DogProximity : CollisionBase
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DogController dogController;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xB8F388", Offset = "0xB8F388", VA = "0xB8F388", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xB8F3F4", Offset = "0xB8F3F4", VA = "0xB8F3F4")]
	public DogProximity()
	{
	}
}
[Token(Token = "0x2000140")]
public class DogTrigger : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	public delegate void EnterAreaDelegate(List<HumanController> humanController, bool isDogMan, bool areaIsEmpty = false);

	[Token(Token = "0x40007EC")]
	public const string dogMan = "raylamp";

	[Token(Token = "0x40007ED")]
	public const string dogsOnly = "dogsOnly";

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject waypointPrefab;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HumanController> humansInTrigger;

	[Token(Token = "0x14000022")]
	public static event EnterAreaDelegate OnEnterArea
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0xB8F3FC", Offset = "0xB8F3FC", VA = "0xB8F3FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xB8F4B4", Offset = "0xB8F4B4", VA = "0xB8F4B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xB8F56C", Offset = "0xB8F56C", VA = "0xB8F56C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xB8F8A0", Offset = "0xB8F8A0", VA = "0xB8F8A0")]
	private void ManageHumansInTrigger()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xB8FB4C", Offset = "0xB8FB4C", VA = "0xB8FB4C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xB8FC54", Offset = "0xB8FC54", VA = "0xB8FC54")]
	public DogTrigger()
	{
	}
}
[Token(Token = "0x2000142")]
public class DroneRotors : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	public enum SpinMode
	{
		[Token(Token = "0x40007FF")]
		none,
		[Token(Token = "0x4000800")]
		spinning,
		[Token(Token = "0x4000801")]
		damaged
	}

	[Token(Token = "0x2000144")]
	[CompilerGenerated]
	private sealed class <ColliderRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneRotors <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xB9091C", Offset = "0xB9091C", VA = "0xB9091C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xB90964", Offset = "0xB90964", VA = "0xB90964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xB90464", Offset = "0xB90464", VA = "0xB90464")]
		[DebuggerHidden]
		public <ColliderRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xB906EC", Offset = "0xB906EC", VA = "0xB906EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xB906F0", Offset = "0xB906F0", VA = "0xB906F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xB90924", Offset = "0xB90924", VA = "0xB90924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpinMode spinMode;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Drone myDrone;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tween tween;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool replaceDamaged;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject regularRotors;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject damageRotors;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int spinDirection;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform axis;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider dangerTrigger;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float colliderRepeat;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float damage;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxDamage;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HazardTrigger hazardTrigger;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody colRB;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xB8FECC", Offset = "0xB8FECC", VA = "0xB8FECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xB8FFB4", Offset = "0xB8FFB4", VA = "0xB8FFB4")]
	[ContextMenu("DAMAGE")]
	public void DoDamage()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xB8FF7C", Offset = "0xB8FF7C", VA = "0xB8FF7C")]
	public void SetMode(SpinMode _mode, bool force = false)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xB8FFD0", Offset = "0xB8FFD0", VA = "0xB8FFD0")]
	private void DoNone()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xB903F0", Offset = "0xB903F0", VA = "0xB903F0")]
	[IteratorStateMachine(typeof(<ColliderRoutine>d__18))]
	private IEnumerator ColliderRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xB900E8", Offset = "0xB900E8", VA = "0xB900E8")]
	private void StartSpinning()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xB903B8", Offset = "0xB903B8", VA = "0xB903B8")]
	private void KillRween()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xB90234", Offset = "0xB90234", VA = "0xB90234")]
	private void DamageRotors()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xB9048C", Offset = "0xB9048C", VA = "0xB9048C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xB904E4", Offset = "0xB904E4", VA = "0xB904E4")]
	private void RotorHits(Collider other)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xB906C8", Offset = "0xB906C8", VA = "0xB906C8")]
	public DroneRotors()
	{
	}
}
[Token(Token = "0x2000145")]
public class EatObject : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	public enum ParticlePosition
	{
		[Token(Token = "0x4000811")]
		none,
		[Token(Token = "0x4000812")]
		attached,
		[Token(Token = "0x4000813")]
		mouth,
		[Token(Token = "0x4000814")]
		camera
	}

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementsCollectedObjects collectedObjectsScript;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AchievementsCollectedObjectsID collectedObjectsScriptID;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh eatenMesh;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EntityDefinition myEntityDefinition;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isThingEaten;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject eatFeedback;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eatFeedbackPrefab;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticlePosition particlePosition;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool hapticFeedback;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string eatSFX;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB9096C", Offset = "0xB9096C", VA = "0xB9096C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xB90A8C", Offset = "0xB90A8C", VA = "0xB90A8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xB90B0C", Offset = "0xB90B0C", VA = "0xB90B0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xB90B8C", Offset = "0xB90B8C", VA = "0xB90B8C")]
	public void ThingEaten(MouthSFXSet set, Entity entity, string ID, Transform mouth)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xB90F60", Offset = "0xB90F60", VA = "0xB90F60")]
	public EatObject()
	{
	}
}
[Token(Token = "0x2000147")]
public class EditorReplicatorManager : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject editorReplicator;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool editorReplicatorSpawned;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xB90F70", Offset = "0xB90F70", VA = "0xB90F70")]
	public static bool ReplicatorSpawned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xB91000", Offset = "0xB91000", VA = "0xB91000")]
	public static void ToggleEditorReplicator()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xB91278", Offset = "0xB91278", VA = "0xB91278")]
	public EditorReplicatorManager()
	{
	}
}
[Token(Token = "0x2000148")]
public class EditorShortcuts : MonoBehaviour
{
	[Token(Token = "0x600073B")]
	[Address(RVA = "0xB91280", Offset = "0xB91280", VA = "0xB91280")]
	public EditorShortcuts()
	{
	}
}
[Token(Token = "0x2000149")]
public class EnergyLevelVisualiser : MonoBehaviour
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CrystalEnergyBase energyBase;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int levelForActiveState;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject onState;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject offState;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xB91288", Offset = "0xB91288", VA = "0xB91288")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xB91374", Offset = "0xB91374", VA = "0xB91374")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB91400", Offset = "0xB91400", VA = "0xB91400")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xB91290", Offset = "0xB91290", VA = "0xB91290")]
	private void EnergyLevelChange(int energyLevel)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xB9148C", Offset = "0xB9148C", VA = "0xB9148C")]
	public EnergyLevelVisualiser()
	{
	}
}
[Serializable]
[Token(Token = "0x200014A")]
[CreateAssetMenu(fileName = "Category", menuName = "Category")]
public class CategoryDefinition : ScriptableObject
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string categoryName;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite Icon;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hideInSandbox;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool editorOnly;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xB9149C", Offset = "0xB9149C", VA = "0xB9149C")]
	public CategoryDefinition()
	{
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class Entity : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	public delegate void OnEntityLoadDelegate(Entity entity, bool added);

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Entity Base Settings")]
	public EntityDefinition MyEntity;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EntityDefinition SaveEntity;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string newEntityName;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectSaveData osd;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool blocked;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool savedOnExit;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public string ID;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool editorSpawnerSpawned;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool sandboxSpawned;

	[Token(Token = "0x14000023")]
	public static event OnEntityLoadDelegate OnEntityLoadChange
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xB914A4", Offset = "0xB914A4", VA = "0xB914A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xB9155C", Offset = "0xB9155C", VA = "0xB9155C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xB91614", Offset = "0xB91614", VA = "0xB91614")]
	public EntityDefinition GetSaveEntityDefinition()
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xB9168C", Offset = "0xB9168C", VA = "0xB9168C")]
	public void CreateNewID()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xB916F0", Offset = "0xB916F0", VA = "0xB916F0")]
	private void EntityLoadChange(bool added)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xB9176C", Offset = "0xB9176C", VA = "0xB9176C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xB91894", Offset = "0xB91894", VA = "0xB91894")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xB9189C", Offset = "0xB9189C", VA = "0xB9189C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xB917E4", Offset = "0xB917E4", VA = "0xB917E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB918A4", Offset = "0xB918A4", VA = "0xB918A4")]
	[ContextMenu("TestDestroy")]
	private void TestDestroy()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xB918B8", Offset = "0xB918B8", VA = "0xB918B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xB918BC", Offset = "0xB918BC", VA = "0xB918BC")]
	private void AddGrabbables()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xB919A8", Offset = "0xB919A8", VA = "0xB919A8")]
	public Entity GetEntity()
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB919AC", Offset = "0xB919AC", VA = "0xB919AC")]
	public static Entity GetEntityFromGO(GameObject _go)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xB91A44", Offset = "0xB91A44", VA = "0xB91A44")]
	public static Entity GetEntityFromRB(Rigidbody _colRB)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xB91B04", Offset = "0xB91B04", VA = "0xB91B04")]
	public static Entity GetEntityFromCollision(Collision _col)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xB91B2C", Offset = "0xB91B2C", VA = "0xB91B2C")]
	public static Entity GetEntityFromCollider(Collider _col)
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xB91B48", Offset = "0xB91B48", VA = "0xB91B48")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xB91BA8", Offset = "0xB91BA8", VA = "0xB91BA8")]
	public Entity()
	{
	}
}
[Token(Token = "0x200014D")]
public class EntityCheck : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CategoryDefinition matchEntity;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xB91DD8", Offset = "0xB91DD8", VA = "0xB91DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xB91DDC", Offset = "0xB91DDC", VA = "0xB91DDC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xB91FA0", Offset = "0xB91FA0", VA = "0xB91FA0")]
	public EntityCheck()
	{
	}
}
[Serializable]
[Token(Token = "0x200014E")]
public class EntityDefinition : ScriptableObject
{
	[Token(Token = "0x200014F")]
	public enum Kind
	{
		[Token(Token = "0x400083A")]
		None,
		[Token(Token = "0x400083B")]
		Progression,
		[Token(Token = "0x400083C")]
		Manual,
		[Token(Token = "0x400083D")]
		Always
	}

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string EntityName;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CategoryDefinition categoryDefinition;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string description;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prefab;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite Icon;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 spawnerOffset;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 spawnerEulerAngles;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool canRecycle;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Kind kind;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string customUnlockMessage;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("is this available in replicator")]
	public bool inSandbox;

	[Token(Token = "0x17000056")]
	public bool isProgressionUnlock
	{
		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB91FA8", Offset = "0xB91FA8", VA = "0xB91FA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public bool isUnlocked
	{
		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB9201C", Offset = "0xB9201C", VA = "0xB9201C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB920A0", Offset = "0xB920A0", VA = "0xB920A0")]
		set
		{
		}
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xB91FB8", Offset = "0xB91FB8", VA = "0xB91FB8")]
	[ContextMenu("CreateNewID")]
	public void CreateNewID()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xB92128", Offset = "0xB92128", VA = "0xB92128")]
	[ContextMenu("LockEntityDefinition")]
	private void LockEntityDefinition()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xB92154", Offset = "0xB92154", VA = "0xB92154")]
	[ContextMenu("ClearAllUnlocks")]
	private void ClearAllUnlocks()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xB921B4", Offset = "0xB921B4", VA = "0xB921B4")]
	public bool EntityAvailable(bool sandboxLoad = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB92224", Offset = "0xB92224", VA = "0xB92224")]
	public void AddEntityDefinitionToLookUp()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB92638", Offset = "0xB92638", VA = "0xB92638")]
	public void SaveSO()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xB9263C", Offset = "0xB9263C", VA = "0xB9263C")]
	[ContextMenu("Mark all EntityDefinition dirty")]
	public void SetAllDirty()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xB9267C", Offset = "0xB9267C", VA = "0xB9267C")]
	public EntityDefinition()
	{
	}
}
[Token(Token = "0x2000150")]
public class EntityDefinitionTriggerAchievement : CollisionBase
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EntityDefinition entityDefition;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CategoryDefinition categoryDefition;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useEntityDefinition;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int amountNeeded;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Achievement achievement;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int completionCount;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xB9271C", Offset = "0xB9271C", VA = "0xB9271C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xB927C0", Offset = "0xB927C0", VA = "0xB927C0", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xB92B20", Offset = "0xB92B20", VA = "0xB92B20")]
	public EntityDefinitionTriggerAchievement()
	{
	}
}
[Token(Token = "0x2000151")]
public class EntityGravityChangeTrigger : MonoBehaviour
{
	[Token(Token = "0x600076A")]
	[Address(RVA = "0xB92B34", Offset = "0xB92B34", VA = "0xB92B34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xB92C1C", Offset = "0xB92C1C", VA = "0xB92C1C")]
	public EntityGravityChangeTrigger()
	{
	}
}
[Token(Token = "0x2000152")]
public class EntityLoadDisplay : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EightSegmentDisplay display;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showPercentage;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isDigital;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform analogNeedle;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float needleMax;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject warning;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dialAngle;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xB92C24", Offset = "0xB92C24", VA = "0xB92C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xB92E04", Offset = "0xB92E04", VA = "0xB92E04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xB92F34", Offset = "0xB92F34", VA = "0xB92F34")]
	private void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xB92FD0", Offset = "0xB92FD0", VA = "0xB92FD0")]
	private void PercentageChange(int percentage)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xB930C8", Offset = "0xB930C8", VA = "0xB930C8")]
	public EntityLoadDisplay()
	{
	}
}
[Token(Token = "0x2000153")]
public class EntityLoadManager : MonoBehaviour
{
	[Token(Token = "0x2000154")]
	public delegate void OnEntityLoadPercentageDelegate(int percentage);

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entity> entitesInGame;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int maxEntitesInGame;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool limitEntites;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool GlobalSpawnBlocked;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int totalEntitesInGame;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int entitiesCount;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static EntityLoadManager _instance;

	[Token(Token = "0x17000058")]
	public static EntityLoadManager Instance
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0xB930E0", Offset = "0xB930E0", VA = "0xB930E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000024")]
	public static event OnEntityLoadPercentageDelegate OnEntityLoadPercentageChange
	{
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xB92D4C", Offset = "0xB92D4C", VA = "0xB92D4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xB92E7C", Offset = "0xB92E7C", VA = "0xB92E7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xB9325C", Offset = "0xB9325C", VA = "0xB9325C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB9345C", Offset = "0xB9345C", VA = "0xB9345C")]
	public List<Entity> GetEntitiesInGame()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xB933E0", Offset = "0xB933E0", VA = "0xB933E0")]
	public void ClearAll(bool editorLevelStart = false)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xB93464", Offset = "0xB93464", VA = "0xB93464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB93468", Offset = "0xB93468", VA = "0xB93468")]
	private void SceneLoaded()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB93550", Offset = "0xB93550", VA = "0xB93550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB93724", Offset = "0xB93724", VA = "0xB93724")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB938F8", Offset = "0xB938F8", VA = "0xB938F8")]
	private void EntityLoadChange(Entity entity, bool added)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xB93B7C", Offset = "0xB93B7C", VA = "0xB93B7C")]
	[ContextMenu("LogAllEntities")]
	private void LogAllEntities()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xB93C48", Offset = "0xB93C48", VA = "0xB93C48")]
	public EntityLoadManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class EntityElement
{
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int entityID;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int sandboxDisplayId;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB93CF4", Offset = "0xB93CF4", VA = "0xB93CF4")]
	public EntityElement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000156")]
public class CategoryList
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CategoryDefinition categoryDefinition;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<EntityDefinition> entityDefinitionList;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB93CFC", Offset = "0xB93CFC", VA = "0xB93CFC")]
	public CategoryList()
	{
	}
}
[Token(Token = "0x2000157")]
[CreateAssetMenu(fileName = "New EntityLookup", menuName = "EntityLookup", order = 1)]
public class EntityLookup : ScriptableObject
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CategoryDefinition magnets;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EntityLookup staticEntityLookup;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("THIS LIST DEFINES SANDBOX SPAWNER CATEGORIES ORDER")]
	public CategoryDefinition[] entityCategories;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("STUFF IN THIS LIST CAN BE SAVED IF NOT OVERRIDDEN BY A GRABBABLE")]
	public EntityElement[] entityDefs;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("THESE SUBLISTS DEFINE SANDBOX SPAWNER ITEMS ORDER")]
	public List<CategoryList> categoryList;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public QuestSystem questSystem;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<EntityDefinition> tempCatergoryEntityDefintionList;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string ghostErrorList;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB93D04", Offset = "0xB93D04", VA = "0xB93D04")]
	public void InitEntityLookup()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB944B8", Offset = "0xB944B8", VA = "0xB944B8")]
	public void UpdateUnlocks()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB946B0", Offset = "0xB946B0", VA = "0xB946B0")]
	public void UnlockAllEntities()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB944C8", Offset = "0xB944C8", VA = "0xB944C8")]
	public void ManageProgressionUnlocks(QuestSystem questSystem, bool _force = false, bool forceUnlocked = true)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB92464", Offset = "0xB92464", VA = "0xB92464")]
	public bool HasEntity(EntityDefinition entityDef)
	{
		return default(bool);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xB946C0", Offset = "0xB946C0", VA = "0xB946C0")]
	private void SaveSO()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xB92524", Offset = "0xB92524", VA = "0xB92524")]
	public void AddNewEntityToLookup(EntityDefinition newEntityDef)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xB946C4", Offset = "0xB946C4", VA = "0xB946C4")]
	public GameObject GetGameObjectFromID(int id)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xB94724", Offset = "0xB94724", VA = "0xB94724")]
	public EntityDefinition GetEntityDefinitionFromID(int id)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xB9477C", Offset = "0xB9477C", VA = "0xB9477C")]
	public int GetEntityDefID(EntityDefinition entityDef)
	{
		return default(int);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xB94864", Offset = "0xB94864", VA = "0xB94864")]
	public void SetSandboxID(EntityDefinition entityDef, int sbID)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xB94950", Offset = "0xB94950", VA = "0xB94950")]
	public int GetSandboxID(EntityDefinition entityDef)
	{
		return default(int);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xB92330", Offset = "0xB92330", VA = "0xB92330")]
	public static EntityLookup GetEntityLookUp()
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xB94A38", Offset = "0xB94A38", VA = "0xB94A38")]
	public static EntityLookup GetEntityLookUpRuntime()
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xB94B84", Offset = "0xB94B84", VA = "0xB94B84")]
	public int GetNextCategory(int _currentCategory, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xB94C08", Offset = "0xB94C08", VA = "0xB94C08")]
	public int GetNextAvailableItem(int _currentCategory, int _currentIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xB94C10", Offset = "0xB94C10", VA = "0xB94C10")]
	private List<EntityDefinition> GetCleanedUpEntityDefList(int _currentCategory)
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xB94E8C", Offset = "0xB94E8C", VA = "0xB94E8C")]
	public EntityDefinition GetEntityFromCleanedList(int _currentCategory, int _index)
	{
		return null;
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xB94F38", Offset = "0xB94F38", VA = "0xB94F38")]
	public EntityDefinition GetEntityFromFullList(int _currentCategory, int _index)
	{
		return null;
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xB95014", Offset = "0xB95014", VA = "0xB95014")]
	public int GetNextItem(int _currentCategory, int _currentItem, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xB950C0", Offset = "0xB950C0", VA = "0xB950C0")]
	public int GetNextItemUnlocked(int _currentCategory, int _currentItem, bool _forward)
	{
		return default(int);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xB93D08", Offset = "0xB93D08", VA = "0xB93D08")]
	public void CreateCategoryList()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xB951E8", Offset = "0xB951E8", VA = "0xB951E8")]
	private void GhostCheck()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xB952C4", Offset = "0xB952C4", VA = "0xB952C4")]
	private void CheckObject(EntityDefinition _entityDef)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xB95DB4", Offset = "0xB95DB4", VA = "0xB95DB4")]
	public EntityLookup()
	{
	}
}
[Token(Token = "0x2000158")]
public class EntityLookupProvider : MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityLookup entityLookup;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EntityLookupProvider _instance;

	[Token(Token = "0x17000059")]
	public static EntityLookupProvider Instance
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xB95DBC", Offset = "0xB95DBC", VA = "0xB95DBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xB95F48", Offset = "0xB95F48", VA = "0xB95F48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xB95F60", Offset = "0xB95F60", VA = "0xB95F60")]
	private void UpdateUnlocks()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xB95F84", Offset = "0xB95F84", VA = "0xB95F84")]
	public void EditorUpdateUnlocks()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xB95FB8", Offset = "0xB95FB8", VA = "0xB95FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xB96034", Offset = "0xB96034", VA = "0xB96034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xB960B0", Offset = "0xB960B0", VA = "0xB960B0")]
	public EntityLookupProvider()
	{
	}
}
[Token(Token = "0x2000159")]
public class ExplosionForce : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float exploRadius;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float exploPowerOffset;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float exploPower;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool spawnExplosion;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float upwardsModifier;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sourcePosFudge;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useMass;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> usedRBs;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyForceOncePerRB;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool notIfKinematic;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xB960B8", Offset = "0xB960B8", VA = "0xB960B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB964EC", Offset = "0xB964EC", VA = "0xB964EC")]
	public ExplosionForce()
	{
	}
}
[Token(Token = "0x200015A")]
public class FactoryPanel : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xB96524", Offset = "0xB96524", VA = "0xB96524")]
	public void SetAmount(int amount)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xB9657C", Offset = "0xB9657C", VA = "0xB9657C")]
	public void StartHide()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xB965CC", Offset = "0xB965CC", VA = "0xB965CC")]
	private void HideAmount()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB96628", Offset = "0xB96628", VA = "0xB96628")]
	public FactoryPanel()
	{
	}
}
[Token(Token = "0x200015B")]
public class FadeInOverride : MonoBehaviour
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeIn;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeInDelay;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xB96630", Offset = "0xB96630", VA = "0xB96630")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xB96660", Offset = "0xB96660", VA = "0xB96660")]
	public FadeInOverride()
	{
	}
}
[Token(Token = "0x200015C")]
public class FindMe : MonoBehaviour
{
	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string myID;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xB96674", Offset = "0xB96674", VA = "0xB96674")]
	public FindMe()
	{
	}
}
[Token(Token = "0x200015D")]
public class FireworksManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200015E")]
	public class Credit
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("-------------------------------------------------------------------------")]
		public Sprite sprite;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isEnd;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int amount;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doShouts;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Rocket rocket;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isCredit;

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xB979B0", Offset = "0xB979B0", VA = "0xB979B0")]
		public Credit()
		{
		}
	}

	[Token(Token = "0x200015F")]
	[CompilerGenerated]
	private sealed class <FinalVolleySequence>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireworksManager <>4__this;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <launches>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xB97D18", Offset = "0xB97D18", VA = "0xB97D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0xB97D60", Offset = "0xB97D60", VA = "0xB97D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xB96EF8", Offset = "0xB96EF8", VA = "0xB96EF8")]
		[DebuggerHidden]
		public <FinalVolleySequence>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xB97A0C", Offset = "0xB97A0C", VA = "0xB97A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xB97A10", Offset = "0xB97A10", VA = "0xB97A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xB97D20", Offset = "0xB97D20", VA = "0xB97D20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000160")]
	[CompilerGenerated]
	private sealed class <FinalSoundDown>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject _go;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0xB97EB8", Offset = "0xB97EB8", VA = "0xB97EB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0xB97F00", Offset = "0xB97F00", VA = "0xB97F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xB979C8", Offset = "0xB979C8", VA = "0xB979C8")]
		[DebuggerHidden]
		public <FinalSoundDown>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xB97D68", Offset = "0xB97D68", VA = "0xB97D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xB97D6C", Offset = "0xB97D6C", VA = "0xB97D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xB97EC0", Offset = "0xB97EC0", VA = "0xB97EC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject typePrefab;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject typePrefabFin;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] primaryFireworks;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] secondaryFireworks;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RocketSpawner rocketSpawner;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Credit> credits;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoFire;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] autoLauncher;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float sway;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float baseLaunchVelocity;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject endRocket;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rocket finalRocket;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentRocket;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelDirector_C3336_Fireworks levelDir;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform launcher;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isEnd;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool finalVolleyStarted;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite theEnd;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int sortingGroupInc;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int lastRocketPeopleAmount;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastCreditExplosion;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xB9667C", Offset = "0xB9667C", VA = "0xB9667C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB966C4", Offset = "0xB966C4", VA = "0xB966C4")]
	public void StartManual()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xB966E8", Offset = "0xB966E8", VA = "0xB966E8")]
	[ContextMenu("StartAutoFire")]
	public void StartAutoFire()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xB96750", Offset = "0xB96750", VA = "0xB96750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xB96878", Offset = "0xB96878", VA = "0xB96878")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xB969A0", Offset = "0xB969A0", VA = "0xB969A0")]
	[ContextMenu("FireRocket")]
	private void FireRocket()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xB96DE8", Offset = "0xB96DE8", VA = "0xB96DE8")]
	private void FinalVolley()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB96E84", Offset = "0xB96E84", VA = "0xB96E84")]
	[IteratorStateMachine(typeof(<FinalVolleySequence>d__30))]
	private IEnumerator FinalVolleySequence()
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xB96D4C", Offset = "0xB96D4C", VA = "0xB96D4C")]
	private void RocketSpawned(Rocket rocket)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xB96D50", Offset = "0xB96D50", VA = "0xB96D50")]
	private void UpdateSpawner()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xB96F20", Offset = "0xB96F20", VA = "0xB96F20")]
	private void RocketOutOfGame(Rocket rocket)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xB96F24", Offset = "0xB96F24", VA = "0xB96F24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xB96F94", Offset = "0xB96F94", VA = "0xB96F94")]
	private void RocketFireworksStart(Rocket rocket, bool doCredits)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xB97328", Offset = "0xB97328", VA = "0xB97328")]
	[IteratorStateMachine(typeof(<FinalSoundDown>d__36))]
	private IEnumerator FinalSoundDown(GameObject _go)
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xB9739C", Offset = "0xB9739C", VA = "0xB9739C")]
	public void StartFireworks(Credit credit, bool doType = true)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xB979F0", Offset = "0xB979F0", VA = "0xB979F0")]
	public FireworksManager()
	{
	}
}
[Token(Token = "0x2000161")]
public class FirstLaunchPerformanceChecker : MonoBehaviour
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float updateInterval;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float accum;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeleft;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float measureTime;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float waiter;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialised;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool redoTest;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minFPS;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FirstLaunchPerformanceChecker _instance;

	[Token(Token = "0x1700005E")]
	public static FirstLaunchPerformanceChecker Instance
	{
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xB97F08", Offset = "0xB97F08", VA = "0xB97F08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB98094", Offset = "0xB98094", VA = "0xB98094")]
	public void LaunchPerformanceCheck()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB98130", Offset = "0xB98130", VA = "0xB98130")]
	public void StartTest()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB98164", Offset = "0xB98164", VA = "0xB98164")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB98174", Offset = "0xB98174", VA = "0xB98174")]
	public void CheckPerformance()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB982E8", Offset = "0xB982E8", VA = "0xB982E8")]
	public FirstLaunchPerformanceChecker()
	{
	}
}
[Token(Token = "0x2000162")]
public class FirstLoad : MonoBehaviour
{
	[Token(Token = "0x2000163")]
	public enum State
	{
		[Token(Token = "0x40008AC")]
		none,
		[Token(Token = "0x40008AD")]
		SDKNotInitialised,
		[Token(Token = "0x40008AE")]
		headsetNotPresent,
		[Token(Token = "0x40008AF")]
		ready
	}

	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <CheckForHMDPresent>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstLoad <>4__this;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xB99140", Offset = "0xB99140", VA = "0xB99140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0xB99188", Offset = "0xB99188", VA = "0xB99188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB987A0", Offset = "0xB987A0", VA = "0xB987A0")]
		[DebuggerHidden]
		public <CheckForHMDPresent>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xB9902C", Offset = "0xB9902C", VA = "0xB9902C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xB99030", Offset = "0xB99030", VA = "0xB99030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xB99148", Offset = "0xB99148", VA = "0xB99148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <LoadVR>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _path;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0xB99238", Offset = "0xB99238", VA = "0xB99238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0xB99280", Offset = "0xB99280", VA = "0xB99280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xB98E00", Offset = "0xB98E00", VA = "0xB98E00")]
		[DebuggerHidden]
		public <LoadVR>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xB99190", Offset = "0xB99190", VA = "0xB99190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xB99194", Offset = "0xB99194", VA = "0xB99194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xB99240", Offset = "0xB99240", VA = "0xB99240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000166")]
	[CompilerGenerated]
	private sealed class <ShowLogos>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstLoad <>4__this;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0xB996C4", Offset = "0xB996C4", VA = "0xB996C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xB9970C", Offset = "0xB9970C", VA = "0xB9970C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xB98F30", Offset = "0xB98F30", VA = "0xB98F30")]
		[DebuggerHidden]
		public <ShowLogos>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xB99288", Offset = "0xB99288", VA = "0xB99288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xB9928C", Offset = "0xB9928C", VA = "0xB9928C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xB996CC", Offset = "0xB996CC", VA = "0xB996CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private QuestSystem questSystem;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool loaderStart;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool introDone;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer logoCycler;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logoHolder;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] logoSprites;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialised;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI tmPro;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject errorFeedback;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRControllerMapper[] unGlueMappers;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool firstRun;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool loaderPresent;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int logoNumber;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB9830C", Offset = "0xB9830C", VA = "0xB9830C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB98400", Offset = "0xB98400", VA = "0xB98400")]
	private void UnglueDown(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB98468", Offset = "0xB98468", VA = "0xB98468")]
	private void UnglueUp(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB984A4", Offset = "0xB984A4", VA = "0xB984A4")]
	private bool SkipPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xB98568", Offset = "0xB98568", VA = "0xB98568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xB98604", Offset = "0xB98604", VA = "0xB98604")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xB9872C", Offset = "0xB9872C", VA = "0xB9872C")]
	[IteratorStateMachine(typeof(<CheckForHMDPresent>d__19))]
	private IEnumerator CheckForHMDPresent()
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xB987C8", Offset = "0xB987C8", VA = "0xB987C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xB987E8", Offset = "0xB987E8", VA = "0xB987E8")]
	private void Init()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xB98ADC", Offset = "0xB98ADC", VA = "0xB98ADC")]
	private void InitVR()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xB988DC", Offset = "0xB988DC", VA = "0xB988DC")]
	private void DisplayStatus(State state)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xB98C3C", Offset = "0xB98C3C", VA = "0xB98C3C")]
	private void LoadFirst()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xB98D8C", Offset = "0xB98D8C", VA = "0xB98D8C")]
	[IteratorStateMachine(typeof(<LoadVR>d__25))]
	private IEnumerator LoadVR(string _path)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xB98E28", Offset = "0xB98E28", VA = "0xB98E28")]
	private void TentacleSystemInitialised(SetUpTentacleSystem tSystem)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xB98E78", Offset = "0xB98E78", VA = "0xB98E78")]
	private void HideTentacles()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xB98EBC", Offset = "0xB98EBC", VA = "0xB98EBC")]
	[IteratorStateMachine(typeof(<ShowLogos>d__29))]
	private IEnumerator ShowLogos()
	{
		return null;
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xB98F58", Offset = "0xB98F58", VA = "0xB98F58")]
	public void Quit()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xB98FC8", Offset = "0xB98FC8", VA = "0xB98FC8")]
	public FirstLoad()
	{
	}
}
[Token(Token = "0x2000167")]
public class FixedStepsReduction : MonoBehaviour
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fixedUpate;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB99714", Offset = "0xB99714", VA = "0xB99714")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB9978C", Offset = "0xB9978C", VA = "0xB9978C")]
	public FixedStepsReduction()
	{
	}
}
[Token(Token = "0x2000168")]
public class FlyCam : MonoBehaviour
{
	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 dir;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float forwardSpeed;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float riseSpeed;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float yawSpeed;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float pitchSpeed;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float tragetZ;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 rot;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB9979C", Offset = "0xB9979C", VA = "0xB9979C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB998C8", Offset = "0xB998C8", VA = "0xB998C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB99C68", Offset = "0xB99C68", VA = "0xB99C68")]
	public FlyCam()
	{
	}
}
[Token(Token = "0x2000169")]
public class FlyingIsland : MonoBehaviour
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FixedJoint[] pieces;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] heights;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB99C70", Offset = "0xB99C70", VA = "0xB99C70")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB99C74", Offset = "0xB99C74", VA = "0xB99C74")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB99D90", Offset = "0xB99D90", VA = "0xB99D90")]
	public FlyingIsland()
	{
	}
}
[Token(Token = "0x200016A")]
public class FontDefaults : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset fontAsset;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineHeight;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB99D98", Offset = "0xB99D98", VA = "0xB99D98")]
	[ContextMenu("SetBubbleDefaults")]
	private void SetBubbleDefaults()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB99D9C", Offset = "0xB99D9C", VA = "0xB99D9C")]
	public FontDefaults()
	{
	}
}
[Token(Token = "0x200016B")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200016C")]
	public delegate void OnPreResetDelegate(bool clear);

	[Token(Token = "0x200016D")]
	public delegate void OnPreLoadDelegate(bool editorLevelStart = false);

	[Token(Token = "0x200016E")]
	public delegate void OnLoadDelegate();

	[Token(Token = "0x200016F")]
	public delegate void OnPostLoadDelegate();

	[Token(Token = "0x2000170")]
	public delegate void OnQuitDelegate();

	[Token(Token = "0x2000171")]
	public delegate void OnShowTitleDelegate(TitleType.TitleMode titleMode);

	[Token(Token = "0x2000172")]
	public delegate void OnBubbleFadeDelegate(bool fadeOut);

	[Token(Token = "0x2000173")]
	public enum State
	{
		[Token(Token = "0x4000904")]
		none,
		[Token(Token = "0x4000905")]
		start,
		[Token(Token = "0x4000906")]
		complete,
		[Token(Token = "0x4000907")]
		fail
	}

	[Token(Token = "0x2000174")]
	public struct SceneStruct
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SceneReference Main;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SceneReference[] Dependecies;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneReference LightingSetup;
	}

	[Token(Token = "0x2000176")]
	[CompilerGenerated]
	private sealed class <LoadScenesAsync>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneStruct scenes;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <AsyncE>5__2;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation <AsyncM>5__3;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__4;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AsyncOperation <Async>5__5;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xB9EAA8", Offset = "0xB9EAA8", VA = "0xB9EAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xB9EAF0", Offset = "0xB9EAF0", VA = "0xB9EAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xB9E09C", Offset = "0xB9E09C", VA = "0xB9E09C")]
		[DebuggerHidden]
		public <LoadScenesAsync>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB9E0C4", Offset = "0xB9E0C4", VA = "0xB9E0C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB9E0C8", Offset = "0xB9E0C8", VA = "0xB9E0C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xB9EAB0", Offset = "0xB9EAB0", VA = "0xB9EAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000177")]
	[CompilerGenerated]
	private sealed class <PostLoadSequence>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rTime>5__2;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <wait>5__3;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xB9F154", Offset = "0xB9F154", VA = "0xB9F154", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xB9F19C", Offset = "0xB9F19C", VA = "0xB9F19C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xB9EAF8", Offset = "0xB9EAF8", VA = "0xB9EAF8")]
		[DebuggerHidden]
		public <PostLoadSequence>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xB9EB20", Offset = "0xB9EB20", VA = "0xB9EB20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xB9EB24", Offset = "0xB9EB24", VA = "0xB9EB24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xB9F15C", Offset = "0xB9F15C", VA = "0xB9F15C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <FadeSpeechBubble>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeOut;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <alphaTarget>5__3;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <alphaStart>5__4;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xB9F4C0", Offset = "0xB9F4C0", VA = "0xB9F4C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xB9F508", Offset = "0xB9F508", VA = "0xB9F508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB9F278", Offset = "0xB9F278", VA = "0xB9F278")]
		[DebuggerHidden]
		public <FadeSpeechBubble>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xB9F2A0", Offset = "0xB9F2A0", VA = "0xB9F2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xB9F2A4", Offset = "0xB9F2A4", VA = "0xB9F2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xB9F4C8", Offset = "0xB9F4C8", VA = "0xB9F4C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static GameManager Game;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static GameManager _instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Story introStory;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color FadeColor;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeInDelay;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeInDuration;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultFadeOutDuration;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float defaultFadeInDuration;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public QuestSystem GameQuestSystem;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool noTitleBeforeLevel;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool InMenuScene;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Level CurrentLevel;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Story CurrentStory;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isLoading;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject vortex;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool doMovementTransition;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool levelReset;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool levelResetIndicator;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool inTransition;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool inTransitionFade;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool inTransitionConvoBlocked;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Level currentMenu;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool newUnlocks;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool newSandbox;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string customUnlock;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool saveHappened;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private VRControllerMapper[] unGlueMappers;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool skipTitlePressed;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CameraFade cameraFade;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioManager AudioMNG;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static bool quitBlock;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float levelTime;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool noMovement;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Level backLevel;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Level replayIsland;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool triggerCustomActionOnNextLoad;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool customResettoAction;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public State gameState;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Level lastLevel;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool levelDoneSFXPlayed;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool endOfStoryLoad;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float completionTime;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int scenesLoaded;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Scene[] oldLoadedScenes;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int neededScenes;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<AsyncOperation> AsyncOps;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<AsyncOperation> sceneLoads;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Scene loadedMainScene;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private TitleType.TitleMode titleMode;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool objectsVisible;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float TypeAlpha;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static bool TypeFadeActive;

	[Token(Token = "0x17000065")]
	public static GameManager Instance
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0xB89FC4", Offset = "0xB89FC4", VA = "0xB89FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000025")]
	public static event OnPreResetDelegate OnPreReset
	{
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xB99DAC", Offset = "0xB99DAC", VA = "0xB99DAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xB99E64", Offset = "0xB99E64", VA = "0xB99E64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event OnPreLoadDelegate OnPreLoad
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xB89A84", Offset = "0xB89A84", VA = "0xB89A84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000801")]
		[Address(RVA = "0xB89BBC", Offset = "0xB89BBC", VA = "0xB89BBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event OnLoadDelegate OnLoad
	{
		[Token(Token = "0x6000802")]
		[Address(RVA = "0xB8D0C8", Offset = "0xB8D0C8", VA = "0xB8D0C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000803")]
		[Address(RVA = "0xB8D200", Offset = "0xB8D200", VA = "0xB8D200")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event OnPostLoadDelegate OnPostLoad
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xB93668", Offset = "0xB93668", VA = "0xB93668")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xB9383C", Offset = "0xB9383C", VA = "0xB9383C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event OnQuitDelegate OnQuit
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0xB8A4B0", Offset = "0xB8A4B0", VA = "0xB8A4B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000807")]
		[Address(RVA = "0xB8A690", Offset = "0xB8A690", VA = "0xB8A690")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event OnShowTitleDelegate OnShowTitle
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0xB99F1C", Offset = "0xB99F1C", VA = "0xB99F1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000809")]
		[Address(RVA = "0xB99FD8", Offset = "0xB99FD8", VA = "0xB99FD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public static event OnBubbleFadeDelegate OnBubbleFade
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0xB9A094", Offset = "0xB9A094", VA = "0xB9A094")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xB9A150", Offset = "0xB9A150", VA = "0xB9A150")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB9A20C", Offset = "0xB9A20C", VA = "0xB9A20C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB9A400", Offset = "0xB9A400", VA = "0xB9A400")]
	public void OverrideCurrentLevel(Level _level)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB9A440", Offset = "0xB9A440", VA = "0xB9A440")]
	public void LoadReplayIsland()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB9A44C", Offset = "0xB9A44C", VA = "0xB9A44C")]
	public bool IsReplayLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xB9A4F8", Offset = "0xB9A4F8", VA = "0xB9A4F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xB9A5CC", Offset = "0xB9A5CC", VA = "0xB9A5CC")]
	private void UnglueDown(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xB9A710", Offset = "0xB9A710", VA = "0xB9A710")]
	public bool NewUnlocks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xB9A648", Offset = "0xB9A648", VA = "0xB9A648")]
	private void SkipCheck()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xB9A718", Offset = "0xB9A718", VA = "0xB9A718")]
	private void UnglueUp(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xB9A3EC", Offset = "0xB9A3EC", VA = "0xB9A3EC")]
	public void SetDefaultGravity()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xB9A760", Offset = "0xB9A760", VA = "0xB9A760")]
	public void ResetAll(bool loadStartscene = false, int manualSlot = -1)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xB9A928", Offset = "0xB9A928", VA = "0xB9A928")]
	public void UnlockAll(bool resetOnly = false)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xB9ABB8", Offset = "0xB9ABB8", VA = "0xB9ABB8")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xB96658", Offset = "0xB96658", VA = "0xB96658")]
	public void OverrideFadeInDuration(float _fadeDuration, float _fadeDelay)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xB9AE80", Offset = "0xB9AE80", VA = "0xB9AE80")]
	private void DoQuit()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xB9AF1C", Offset = "0xB9AF1C", VA = "0xB9AF1C")]
	public Level GetCurrentLevel()
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xB9AF24", Offset = "0xB9AF24", VA = "0xB9AF24")]
	[ContextMenu("LogLevelsStatus")]
	public void LogLevelsStatus()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xB9B500", Offset = "0xB9B500", VA = "0xB9B500")]
	[ContextMenu("LoadOptions")]
	public void LoadOptions()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xB9B5EC", Offset = "0xB9B5EC", VA = "0xB9B5EC")]
	public bool IsOptionsScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB9B65C", Offset = "0xB9B65C", VA = "0xB9B65C")]
	public void BackFromOptions()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB9B6E0", Offset = "0xB9B6E0", VA = "0xB9B6E0")]
	public bool ShowNavigation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB9B768", Offset = "0xB9B768", VA = "0xB9B768")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB9B83C", Offset = "0xB9B83C", VA = "0xB9B83C")]
	public int GetCurrentLevelPosition()
	{
		return default(int);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB9B8C4", Offset = "0xB9B8C4", VA = "0xB9B8C4")]
	public int GetAmountLevelsInCurrentStory()
	{
		return default(int);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB9B94C", Offset = "0xB9B94C", VA = "0xB9B94C")]
	public void CurrentLevelCompleted()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB9B96C", Offset = "0xB9B96C", VA = "0xB9B96C")]
	public void LoadNextLevelForQuest(string _id)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB9B998", Offset = "0xB9B998", VA = "0xB9B998")]
	public void LoadNextLevel()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB9BC54", Offset = "0xB9BC54", VA = "0xB9BC54")]
	public void LoadPreviousLevel()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xB9BDBC", Offset = "0xB9BDBC", VA = "0xB9BDBC")]
	public void LevelComplete()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xB9C0BC", Offset = "0xB9C0BC", VA = "0xB9C0BC")]
	public void LevelEndOptions(bool forceBalloon = false, bool sfxPlayed = false)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xB9BE48", Offset = "0xB9BE48", VA = "0xB9BE48")]
	public void PlayLevelDoneSFX()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xB9C120", Offset = "0xB9C120", VA = "0xB9C120")]
	public void StartStory(Story _story)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xB9C1C4", Offset = "0xB9C1C4", VA = "0xB9C1C4")]
	public bool CurrentLevelIsMenuLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xB9C24C", Offset = "0xB9C24C", VA = "0xB9C24C")]
	public void MarkThisAsComplete()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xB9C2F4", Offset = "0xB9C2F4", VA = "0xB9C2F4")]
	public static float LevelPlayTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xB9BF5C", Offset = "0xB9BF5C", VA = "0xB9BF5C")]
	public void SetLevelProgession(bool triggerTimeTrial = true)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB9C4F8", Offset = "0xB9C4F8", VA = "0xB9C4F8")]
	public void LoadMainMenuScene()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB9AA80", Offset = "0xB9AA80", VA = "0xB9AA80")]
	public void LoadMenuScene(bool forceReload = false)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB9A9C4", Offset = "0xB9A9C4", VA = "0xB9A9C4")]
	public void Reset(bool _clear = true)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xB9CC2C", Offset = "0xB9CC2C", VA = "0xB9CC2C")]
	[IteratorStateMachine(typeof(<LoadScenesAsync>d__117))]
	private IEnumerator LoadScenesAsync(SceneStruct scenes)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xB9CCC8", Offset = "0xB9CCC8", VA = "0xB9CCC8")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xB9CED0", Offset = "0xB9CED0", VA = "0xB9CED0")]
	private void OnAllScenesLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB9D034", Offset = "0xB9D034", VA = "0xB9D034")]
	public void SetTitleMode(TitleType.TitleMode _titleMode)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xB9D03C", Offset = "0xB9D03C", VA = "0xB9D03C")]
	public void SetNoTitleBeforeLevel(bool _noTitleBeforeLevel)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB9D048", Offset = "0xB9D048", VA = "0xB9D048")]
	[IteratorStateMachine(typeof(<PostLoadSequence>d__124))]
	private IEnumerator PostLoadSequence()
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB9D0BC", Offset = "0xB9D0BC", VA = "0xB9D0BC")]
	public void TriggerTitle(TitleType.TitleMode _titleMode, bool which)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB9CE28", Offset = "0xB9CE28", VA = "0xB9CE28")]
	private void ClearOldscenes()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB98CE8", Offset = "0xB98CE8", VA = "0xB98CE8")]
	public void LoadStartScene()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB9A448", Offset = "0xB9A448", VA = "0xB9A448")]
	public void LoadLevel(Level level)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xB9C6E4", Offset = "0xB9C6E4", VA = "0xB9C6E4")]
	public void DoLoadLevel(Level level)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xB9C348", Offset = "0xB9C348", VA = "0xB9C348")]
	private void CompleteAnalytics()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB9D14C", Offset = "0xB9D14C", VA = "0xB9D14C")]
	private void StartAnalytics()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB9C528", Offset = "0xB9C528", VA = "0xB9C528")]
	private void FailAnalytics(string which)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB9D424", Offset = "0xB9D424", VA = "0xB9D424")]
	[ContextMenu("SaveProgress")]
	private void Save()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB9D44C", Offset = "0xB9D44C", VA = "0xB9D44C")]
	public void DebugTryFindSolution()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xB9D688", Offset = "0xB9D688", VA = "0xB9D688")]
	public void HideObjects()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xB9D73C", Offset = "0xB9D73C", VA = "0xB9D73C")]
	[IteratorStateMachine(typeof(<FadeSpeechBubble>d__140))]
	public IEnumerator FadeSpeechBubble(bool fadeOut, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xB9D7B8", Offset = "0xB9D7B8", VA = "0xB9D7B8")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200017A")]
public class SaveSystemState
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveDataGame state;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB9F510", Offset = "0xB9F510", VA = "0xB9F510")]
	public string SaveGamePath()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xB9F5E4", Offset = "0xB9F5E4", VA = "0xB9F5E4")]
	public static string SaveGameSlotPrefix()
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xB9F68C", Offset = "0xB9F68C", VA = "0xB9F68C")]
	public SaveSystemState()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB9F6B4", Offset = "0xB9F6B4", VA = "0xB9F6B4")]
	public void LoadSaveGame()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xB9F7D4", Offset = "0xB9F7D4", VA = "0xB9F7D4")]
	public void DeleteSave()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB9F83C", Offset = "0xB9F83C", VA = "0xB9F83C")]
	public void DeleteSaveFile()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB9FA34", Offset = "0xB9FA34", VA = "0xB9FA34")]
	public void SaveCurrentState()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xB9FEBC", Offset = "0xB9FEBC", VA = "0xB9FEBC")]
	internal bool GetUnlock(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xB9FF1C", Offset = "0xB9FF1C", VA = "0xB9FF1C")]
	public void SetUnlock(string ID)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xB9FFF4", Offset = "0xB9FFF4", VA = "0xB9FFF4")]
	[ContextMenu("ClearUnlocks")]
	public void ClearUnlocks()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xB9F6D4", Offset = "0xB9F6D4", VA = "0xB9F6D4")]
	public SaveDataGame LoadSaveDataToState()
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xBA0068", Offset = "0xBA0068", VA = "0xBA0068")]
	public bool IsQuestUnlocked(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xBA02BC", Offset = "0xBA02BC", VA = "0xBA02BC")]
	public bool IsLevelCompleted(Quest parentQuest, string levelID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xBA05EC", Offset = "0xBA05EC", VA = "0xBA05EC")]
	public void MarkLevelCompleted(string beatLevelID)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xBA0B0C", Offset = "0xBA0B0C", VA = "0xBA0B0C")]
	public void UnlockQuest(string ID)
	{
	}
}
[Token(Token = "0x200017E")]
internal class SaveSystem
{
	[Token(Token = "0x200017F")]
	[Flags]
	public enum ReadJsonBlobOption
	{
		[Token(Token = "0x400092B")]
		None = 0,
		[Token(Token = "0x400092C")]
		AllowMissingFile = 1
	}

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SaveSystemState instance;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool SuppressSave;

	[Token(Token = "0x1700006C")]
	public static string ZeroID
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0xBA0DA4", Offset = "0xBA0DA4", VA = "0xBA0DA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public static SaveSystemState Instance
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0xBA01F4", Offset = "0xBA01F4", VA = "0xBA01F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xBA0D78", Offset = "0xBA0D78", VA = "0xBA0D78")]
	public static string CreateID()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xBA0DFC", Offset = "0xBA0DFC", VA = "0xBA0DFC")]
	public static void WriteBackedFile(string path, bool backup, Action<FileStream> callback)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xBA0FC8", Offset = "0xBA0FC8", VA = "0xBA0FC8")]
	public static void SaveJsonBlob(string path, object data, bool backup = true)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB9FDC8", Offset = "0xB9FDC8", VA = "0xB9FDC8")]
	public static void SaveJsonBlobAbsolute(string path, object data, bool backup = true)
	{
	}

	[Token(Token = "0x6000897")]
	public static T ReadJsonBlob<T>(string path, ReadJsonBlobOption option = ReadJsonBlobOption.None) where T : class, new()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xBA103C", Offset = "0xBA103C", VA = "0xBA103C")]
	public static void DeleteFile(string path)
	{
	}

	[Token(Token = "0x6000899")]
	public static T ReadJsonBlobAbsolute<T>(string path, ReadJsonBlobOption option = ReadJsonBlobOption.None) where T : class, new()
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xBA1044", Offset = "0xBA1044", VA = "0xBA1044")]
	[ContextMenu("DeleteSaveFile")]
	public static void DeleteSave()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xBA109C", Offset = "0xBA109C", VA = "0xBA109C")]
	public static void SaveData()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBA10F4", Offset = "0xBA10F4", VA = "0xBA10F4")]
	public SaveSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000181")]
public class SaveDataGame
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GameVersion;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SaveDataQuest> SaveDataQuests;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> unlocks;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SaveDataAchievementProgress> achievementProgresses;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string date;

	[Token(Token = "0x1700006E")]
	public DateTime Date
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xBA13D4", Offset = "0xBA13D4", VA = "0xBA13D4")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xB9FAE4", Offset = "0xB9FAE4", VA = "0xB9FAE4")]
		set
		{
		}
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xB9F868", Offset = "0xB9F868", VA = "0xB9F868")]
	public SaveDataGame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000182")]
public class SaveDataAchievementProgress
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int counter;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool unlocked;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool synced;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string userString;

	[Token(Token = "0x60008A3")]
	public T GetUserObject<T>() where T : new()
	{
		return (T)null;
	}

	[Token(Token = "0x60008A4")]
	public void SetUserObject<T>(T obj) where T : new()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xBA1598", Offset = "0xBA1598", VA = "0xBA1598")]
	public SaveDataAchievementProgress()
	{
	}
}
[Serializable]
[Token(Token = "0x2000183")]
public class SaveDataQuest
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> beatLevels;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool unlocked;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xBA0A2C", Offset = "0xBA0A2C", VA = "0xBA0A2C")]
	public SaveDataQuest()
	{
	}
}
[Token(Token = "0x2000184")]
public class GaugeWheelsDisplay : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] Wheels;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Value;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string result;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotSpeed;

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xBA1600", Offset = "0xBA1600", VA = "0xBA1600")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xBA1670", Offset = "0xBA1670", VA = "0xBA1670")]
	public void SetValue(float n)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xBA1604", Offset = "0xBA1604", VA = "0xBA1604")]
	public void DispalyProgress()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xBA1678", Offset = "0xBA1678", VA = "0xBA1678")]
	[ContextMenu("SetDisplay")]
	public void SetDisplay()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xBA1944", Offset = "0xBA1944", VA = "0xBA1944")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xBA1A20", Offset = "0xBA1A20", VA = "0xBA1A20")]
	public GaugeWheelsDisplay()
	{
	}
}
[Token(Token = "0x2000185")]
public class GearMechanism : MonoBehaviour
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Axis TargetAxis;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis ThisAxis;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Multiplicator;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float amount;

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xBA1A34", Offset = "0xBA1A34", VA = "0xBA1A34")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xBA1BA8", Offset = "0xBA1BA8", VA = "0xBA1BA8")]
	public GearMechanism()
	{
	}
}
[Token(Token = "0x2000186")]
public enum Axis
{
	[Token(Token = "0x4000945")]
	X,
	[Token(Token = "0x4000946")]
	Y,
	[Token(Token = "0x4000947")]
	Z
}
[Token(Token = "0x2000187")]
public class GlueCollisionMagic : MonoBehaviour
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Glue myGlue;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnabled;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xBA1BB0", Offset = "0xBA1BB0", VA = "0xBA1BB0")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xBA1BDC", Offset = "0xBA1BDC", VA = "0xBA1BDC")]
	public GlueCollisionMagic()
	{
	}
}
[Token(Token = "0x2000188")]
public class GluedToDelegate : MonoBehaviour
{
	[Token(Token = "0x2000189")]
	public delegate void OnGluedToDelegate(Glue _glue, Glued _glued, bool _isGlued);

	[Token(Token = "0x1400002C")]
	public static event OnGluedToDelegate OnGluedTo
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xBA1BE4", Offset = "0xBA1BE4", VA = "0xBA1BE4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xBA1C9C", Offset = "0xBA1C9C", VA = "0xBA1C9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xBA1D54", Offset = "0xBA1D54", VA = "0xBA1D54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xBA1DD4", Offset = "0xBA1DD4", VA = "0xBA1DD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xBA1E54", Offset = "0xBA1E54", VA = "0xBA1E54")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xBA1F98", Offset = "0xBA1F98", VA = "0xBA1F98")]
	public GluedToDelegate()
	{
	}
}
[Token(Token = "0x200018A")]
public class GlueTools
{
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xBA2174", Offset = "0xBA2174", VA = "0xBA2174")]
	public static void GluedCleanUp(Transform _trans, bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xBA228C", Offset = "0xBA228C", VA = "0xBA228C")]
	public static void GlueCleanUp(Transform _trans, bool flagForRemoval = false)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xBA2340", Offset = "0xBA2340", VA = "0xBA2340")]
	public static void BurnOutConnected(Transform _trans)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xBA23EC", Offset = "0xBA23EC", VA = "0xBA23EC")]
	public static void BurnOutIfMagnet(Transform _trans)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xBA2498", Offset = "0xBA2498", VA = "0xBA2498")]
	public static bool BurnOutIfMagnetShock(Transform _trans)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xBA2548", Offset = "0xBA2548", VA = "0xBA2548")]
	public static void GlueCleanUpGroundWater(Transform _trans)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xBA2610", Offset = "0xBA2610", VA = "0xBA2610")]
	public static void FullGlueCleanup(Transform _trans)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xBA26DC", Offset = "0xBA26DC", VA = "0xBA26DC")]
	public static void CleanAndKill(Transform _trans)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xBA2810", Offset = "0xBA2810", VA = "0xBA2810")]
	public GlueTools()
	{
	}
}
[Token(Token = "0x200018B")]
public class GrinderGroup : MonoBehaviour
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool grinderRunning;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool grinderRunningLocal;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool init;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xBA2818", Offset = "0xBA2818", VA = "0xBA2818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xBA28C8", Offset = "0xBA28C8", VA = "0xBA28C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xBA294C", Offset = "0xBA294C", VA = "0xBA294C")]
	[ContextMenu("Start Grinder")]
	private void GrinderOn()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xBA2858", Offset = "0xBA2858", VA = "0xBA2858")]
	[ContextMenu("Stop Grinder")]
	private void GrinderOff()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xBA2A18", Offset = "0xBA2A18", VA = "0xBA2A18")]
	public GrinderGroup()
	{
	}
}
[Token(Token = "0x200018C")]
public class GrinderNumberOFTentacles : MonoBehaviour
{
	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetManual[] targets;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xBA2A2C", Offset = "0xBA2A2C", VA = "0xBA2A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xBA2A30", Offset = "0xBA2A30", VA = "0xBA2A30")]
	private void TentacleCheck()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xBA2B94", Offset = "0xBA2B94", VA = "0xBA2B94")]
	public GrinderNumberOFTentacles()
	{
	}
}
[Token(Token = "0x200018D")]
public class GrinderSystem : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <StopGrinder>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrinderSystem <>4__this;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0xBA3928", Offset = "0xBA3928", VA = "0xBA3928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xBA3970", Offset = "0xBA3970", VA = "0xBA3970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xBA2F24", Offset = "0xBA2F24", VA = "0xBA2F24")]
		[DebuggerHidden]
		public <StopGrinder>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xBA384C", Offset = "0xBA384C", VA = "0xBA384C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xBA3850", Offset = "0xBA3850", VA = "0xBA3850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xBA3930", Offset = "0xBA3930", VA = "0xBA3930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[CompilerGenerated]
	private sealed class <WaitTimer>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrinderSystem <>4__this;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TentacleLogic _tl;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xBA3E80", Offset = "0xBA3E80", VA = "0xBA3E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xBA3EC8", Offset = "0xBA3EC8", VA = "0xBA3EC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xBA3554", Offset = "0xBA3554", VA = "0xBA3554")]
		[DebuggerHidden]
		public <WaitTimer>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xBA3978", Offset = "0xBA3978", VA = "0xBA3978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xBA397C", Offset = "0xBA397C", VA = "0xBA397C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xBA3E88", Offset = "0xBA3E88", VA = "0xBA3E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000190")]
	[CompilerGenerated]
	private sealed class <ConnectRumble>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic _tl;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRControllerMapper <rumbleController>5__2;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xBA40A4", Offset = "0xBA40A4", VA = "0xBA40A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xBA40EC", Offset = "0xBA40EC", VA = "0xBA40EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xBA35F0", Offset = "0xBA35F0", VA = "0xBA35F0")]
		[DebuggerHidden]
		public <ConnectRumble>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xBA3ED0", Offset = "0xBA3ED0", VA = "0xBA3ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xBA3ED4", Offset = "0xBA3ED4", VA = "0xBA3ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xBA40AC", Offset = "0xBA40AC", VA = "0xBA40AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TentacleLogic> tentacleLogics;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SpawnPos;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TentacleLogic> tList;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConstructionTarget[] targets;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<TentacleLogic, int> bandagesRemoved;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] bandagePrefab;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject particleFX;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool grindStarted;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string grinderSFX;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string bandageSFX;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xBA2B9C", Offset = "0xBA2B9C", VA = "0xBA2B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xBA2CC0", Offset = "0xBA2CC0", VA = "0xBA2CC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xBA2D40", Offset = "0xBA2D40", VA = "0xBA2D40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xBA2DC0", Offset = "0xBA2DC0", VA = "0xBA2DC0")]
	private void GrinderButton(TentacleTriggerButton button, string id, bool buttonOn)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xBA2DCC", Offset = "0xBA2DCC", VA = "0xBA2DCC")]
	public void TurnOnGrinder()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xBA2EE0", Offset = "0xBA2EE0", VA = "0xBA2EE0")]
	[ContextMenu("TentacleHurt")]
	private void TentacleHurt()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xBA2E6C", Offset = "0xBA2E6C", VA = "0xBA2E6C")]
	[IteratorStateMachine(typeof(<StopGrinder>d__18))]
	private IEnumerator StopGrinder()
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xBA2F4C", Offset = "0xBA2F4C", VA = "0xBA2F4C")]
	private void CheckTentacleInGrinder()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xBA3454", Offset = "0xBA3454", VA = "0xBA3454")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xBA33E4", Offset = "0xBA33E4", VA = "0xBA33E4")]
	private int GetActiveBandageCount(TentacleLogic _tl)
	{
		return default(int);
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xBA34C4", Offset = "0xBA34C4", VA = "0xBA34C4")]
	[IteratorStateMachine(typeof(<WaitTimer>d__22))]
	private IEnumerator WaitTimer([Optional] TentacleLogic _tl)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xBA357C", Offset = "0xBA357C", VA = "0xBA357C")]
	[IteratorStateMachine(typeof(<ConnectRumble>d__23))]
	private IEnumerator ConnectRumble(TentacleLogic _tl)
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xBA3618", Offset = "0xBA3618", VA = "0xBA3618")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xBA37C4", Offset = "0xBA37C4", VA = "0xBA37C4")]
	public GrinderSystem()
	{
	}
}
[Token(Token = "0x2000191")]
public class GroundRemoveIgnore : MonoBehaviour
{
	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xBA40F4", Offset = "0xBA40F4", VA = "0xBA40F4")]
	public GroundRemoveIgnore()
	{
	}
}
[Token(Token = "0x2000192")]
public class HazardReceiver : MonoBehaviour
{
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lastEventTimeTalking;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lastEventTimeForces;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("how quick an object burns/damages from fire")]
	public float burnFactor;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("how quick an object damages from laser")]
	public float laserFactor;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 direction;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xBA40FC", Offset = "0xBA40FC", VA = "0xBA40FC", Slot = "4")]
	public virtual void HazardEventEnd(HazardTrigger hazard, GameObject go, float factor = 1f)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xBA4100", Offset = "0xBA4100", VA = "0xBA4100", Slot = "5")]
	public virtual void HazardEvent(bool started, HazardTrigger.Hazard hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xBA4280", Offset = "0xBA4280", VA = "0xBA4280", Slot = "6")]
	public virtual void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xBA42A4", Offset = "0xBA42A4", VA = "0xBA42A4")]
	private void RotorHazard(bool started, HazardTrigger.Hazard hazard, GameObject go, float power, float timeStep)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xBA42A8", Offset = "0xBA42A8", VA = "0xBA42A8")]
	public HazardReceiver()
	{
	}
}
[Token(Token = "0x2000193")]
public class HazardReceiverCrystal : HazardReceiver
{
	[Token(Token = "0x2000194")]
	public delegate void CrystaGrowDelegate(HazardReceiver _crystal);

	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <ScaleIt>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HazardReceiverCrystal <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xBA5234", Offset = "0xBA5234", VA = "0xBA5234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xBA527C", Offset = "0xBA527C", VA = "0xBA527C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xBA49E4", Offset = "0xBA49E4", VA = "0xBA49E4")]
		[DebuggerHidden]
		public <ScaleIt>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xBA4F4C", Offset = "0xBA4F4C", VA = "0xBA4F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xBA4F50", Offset = "0xBA4F50", VA = "0xBA4F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xBA523C", Offset = "0xBA523C", VA = "0xBA523C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <EnergyBlast>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HazardReceiverCrystal <>4__this;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <magnetsDestroyed>5__2;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> <rbHits>5__3;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> <colliderList>5__4;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xBA56FC", Offset = "0xBA56FC", VA = "0xBA56FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0xBA5744", Offset = "0xBA5744", VA = "0xBA5744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xBA4A80", Offset = "0xBA4A80", VA = "0xBA4A80")]
		[DebuggerHidden]
		public <EnergyBlast>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xBA5284", Offset = "0xBA5284", VA = "0xBA5284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xBA5288", Offset = "0xBA5288", VA = "0xBA5288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xBA5704", Offset = "0xBA5704", VA = "0xBA5704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LayerMask explosionLayers;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startscale;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("start at 1 because crystals always have energy")]
	public int energyLevel;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float hitRadius;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float laserTime;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float damageTime;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float targetScale;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween scaleTween;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool damage;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float suckInDelay;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject visual;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Tween visualTween;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CrystalEnergyBase crystalEnergy;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CrystalAntiGrav crystalAntiGrav;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject regularCrystal;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject dangerCrystal;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float crystalDestructionTime;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int energyBlastMaxMagnets;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool blastReaction;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool scaleChange;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody rb;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int maxEnergyLevel;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 reduction;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool growthTriggered;

	[Token(Token = "0x1400002D")]
	public event CrystaGrowDelegate OnCrystalGrow
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xBA42B8", Offset = "0xBA42B8", VA = "0xBA42B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xBA4354", Offset = "0xBA4354", VA = "0xBA4354")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xBA43F0", Offset = "0xBA43F0", VA = "0xBA43F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBA4674", Offset = "0xBA4674", VA = "0xBA4674")]
	public void SetCrystalDestructionTime(float _newTime)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBA467C", Offset = "0xBA467C", VA = "0xBA467C")]
	public float GetLaserTime()
	{
		return default(float);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBA4684", Offset = "0xBA4684", VA = "0xBA4684")]
	private void LimitLevel()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBA45A4", Offset = "0xBA45A4", VA = "0xBA45A4")]
	private void CheckScale()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBA46C4", Offset = "0xBA46C4", VA = "0xBA46C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBA4710", Offset = "0xBA4710", VA = "0xBA4710")]
	[ContextMenu("IncScaleHit")]
	private void IncScaleHit()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBA4764", Offset = "0xBA4764", VA = "0xBA4764")]
	public void ScaleHit(bool bounceBack = false)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xBA4608", Offset = "0xBA4608", VA = "0xBA4608")]
	private void CrystalPhase()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xBA4970", Offset = "0xBA4970", VA = "0xBA4970")]
	[IteratorStateMachine(typeof(<ScaleIt>d__36))]
	private IEnumerator ScaleIt()
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xBA4A0C", Offset = "0xBA4A0C", VA = "0xBA4A0C")]
	[IteratorStateMachine(typeof(<EnergyBlast>d__37))]
	private IEnumerator EnergyBlast()
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xBA4AA8", Offset = "0xBA4AA8", VA = "0xBA4AA8")]
	private void ScaleDone()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xBA4AE0", Offset = "0xBA4AE0", VA = "0xBA4AE0", Slot = "4")]
	public override void HazardEventEnd(HazardTrigger hazard, GameObject go, float factor = 1f)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xBA4B2C", Offset = "0xBA4B2C", VA = "0xBA4B2C")]
	private void DestroyCrystal()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xBA4928", Offset = "0xBA4928", VA = "0xBA4928")]
	private void StopTween(Tween tween)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xBA4B40", Offset = "0xBA4B40", VA = "0xBA4B40", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep = 1f, float factor = 1f)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xBA4DBC", Offset = "0xBA4DBC", VA = "0xBA4DBC")]
	public HazardReceiverCrystal()
	{
	}
}
[Token(Token = "0x2000197")]
public class HazardReceiverHuman : HazardReceiver
{
	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fireJumpFactor;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 upAdder;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float shoutWait;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xBA574C", Offset = "0xBA574C", VA = "0xBA574C")]
	private void NewHurtShoutTime()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xBA5770", Offset = "0xBA5770", VA = "0xBA5770", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeFactor, float factor)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xBA5EE8", Offset = "0xBA5EE8", VA = "0xBA5EE8")]
	private void RotorHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xBA58B8", Offset = "0xBA58B8", VA = "0xBA58B8")]
	private void FireHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xBA5BD0", Offset = "0xBA5BD0", VA = "0xBA5BD0")]
	private void LaserHazard(bool started, HazardTrigger hazard, GameObject go, float timeStep, float factor)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xBA6204", Offset = "0xBA6204", VA = "0xBA6204")]
	public HazardReceiverHuman()
	{
	}
}
[Token(Token = "0x2000198")]
public class HazardReceiverMagnet : HazardReceiver
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Glue glue;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float laserTime;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float laserBurnoutTime;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xBA6228", Offset = "0xBA6228", VA = "0xBA6228", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float power, float timeStep)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xBA634C", Offset = "0xBA634C", VA = "0xBA634C")]
	public HazardReceiverMagnet()
	{
	}
}
[Token(Token = "0x2000199")]
public class HazardReceiverTentacle : HazardReceiver
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TentacleLogic tentacleLogic;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xBA6368", Offset = "0xBA6368", VA = "0xBA6368", Slot = "6")]
	public override void HazardEvent(bool started, HazardTrigger hazard, GameObject go, float timeStep, float power)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xBA6474", Offset = "0xBA6474", VA = "0xBA6474")]
	public HazardReceiverTentacle()
	{
	}
}
[Token(Token = "0x200019A")]
public class HazardTrigger : CollisionBase
{
	[Token(Token = "0x200019B")]
	public enum Hazard
	{
		[Token(Token = "0x40009A1")]
		none,
		[Token(Token = "0x40009A2")]
		fire,
		[Token(Token = "0x40009A3")]
		laser,
		[Token(Token = "0x40009A4")]
		explosion,
		[Token(Token = "0x40009A5")]
		rotor,
		[Token(Token = "0x40009A6")]
		burnout,
		[Token(Token = "0x40009A7")]
		booster,
		[Token(Token = "0x40009A8")]
		crystalEMP
	}

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float damageFactor;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float repeatRate;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject origin;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float genericFactor1;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<HazardReceiver> hazardReceiverList;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Hazard hazardType;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HazardReceiver hazardReceiver;

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xBA6484", Offset = "0xBA6484", VA = "0xBA6484", Slot = "8")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xBA6520", Offset = "0xBA6520", VA = "0xBA6520")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xBA66C8", Offset = "0xBA66C8", VA = "0xBA66C8", Slot = "9")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xBA67A8", Offset = "0xBA67A8", VA = "0xBA67A8", Slot = "10")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xBA68C8", Offset = "0xBA68C8", VA = "0xBA68C8", Slot = "11")]
	public virtual void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xBA65BC", Offset = "0xBA65BC", VA = "0xBA65BC")]
	private void TellReceiversDisable()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xBA6A10", Offset = "0xBA6A10", VA = "0xBA6A10", Slot = "12")]
	public virtual void StayEvents()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xBA6B50", Offset = "0xBA6B50", VA = "0xBA6B50", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xBA6D5C", Offset = "0xBA6D5C", VA = "0xBA6D5C")]
	public HazardTrigger()
	{
	}
}
[Token(Token = "0x200019C")]
public class HazardTriggerBooster : HazardTrigger
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform trans;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float laserForce;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float laserRotationForce;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 dir;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform originTrans;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float powerFactor;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ConstructionRocket myBooster;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ForceMode forceMode;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool useLiveBoosterFactor;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float boosterFactor;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int steps;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int maxSteps;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xBA6DF0", Offset = "0xBA6DF0", VA = "0xBA6DF0", Slot = "8")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xBA6E68", Offset = "0xBA6E68", VA = "0xBA6E68")]
	private void UseLayer()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xBA6F88", Offset = "0xBA6F88", VA = "0xBA6F88")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xBA736C", Offset = "0xBA736C", VA = "0xBA736C")]
	public HazardTriggerBooster()
	{
	}
}
[Token(Token = "0x200019D")]
public class HazardTriggerLaserForces : HazardTrigger
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform trans;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float laserForce;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float laserRotationForce;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer meshRender;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ForceMode forceMode;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material startMaterial;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform laserDamageFeedbackFX;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CrystalLaser myLaser;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float originalDamageFactor;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float minChargeFactor;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float maxChargeFactor;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float chargeFactor;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 fxScale;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xBA7394", Offset = "0xBA7394", VA = "0xBA7394")]
	public void SetMyLaser(CrystalLaser laser)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xBA739C", Offset = "0xBA739C", VA = "0xBA739C", Slot = "9")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xBA7458", Offset = "0xBA7458", VA = "0xBA7458", Slot = "8")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xBA7538", Offset = "0xBA7538", VA = "0xBA7538")]
	public void EnergyMaxCharge(int charge, int maxCharge)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xBA7670", Offset = "0xBA7670", VA = "0xBA7670")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xBA7A64", Offset = "0xBA7A64", VA = "0xBA7A64")]
	public HazardTriggerLaserForces()
	{
	}
}
[Token(Token = "0x200019E")]
public class HeistElevatorControl : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	[CompilerGenerated]
	private sealed class <ElevatorRide>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeistElevatorControl <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xBA8148", Offset = "0xBA8148", VA = "0xBA8148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xBA8190", Offset = "0xBA8190", VA = "0xBA8190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xBA7B08", Offset = "0xBA7B08", VA = "0xBA7B08")]
		[DebuggerHidden]
		public <ElevatorRide>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xBA7DC0", Offset = "0xBA7DC0", VA = "0xBA7DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xBA7DC4", Offset = "0xBA7DC4", VA = "0xBA7DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xBA8150", Offset = "0xBA8150", VA = "0xBA8150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumanController scupPorgy;

	[Token(Token = "0x40009C3")]
	public const string scupPorgyID = "scupporgy";

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform elevatorTargetPosition;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Tween tween;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform scupTarget;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StudioEventEmitter elevatorSFX;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool elevatorStarted;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xBA7A94", Offset = "0xBA7A94", VA = "0xBA7A94")]
	[IteratorStateMachine(typeof(<ElevatorRide>d__8))]
	private IEnumerator ElevatorRide()
	{
		return null;
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xBA7B30", Offset = "0xBA7B30", VA = "0xBA7B30")]
	private void TargetReached()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xBA7BA4", Offset = "0xBA7BA4", VA = "0xBA7BA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xBA7DB8", Offset = "0xBA7DB8", VA = "0xBA7DB8")]
	public HeistElevatorControl()
	{
	}
}
[Token(Token = "0x20001A0")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject on;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject off;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float wait;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isON;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xBA8198", Offset = "0xBA8198", VA = "0xBA8198")]
	private void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xBA8204", Offset = "0xBA8204", VA = "0xBA8204")]
	private void DoBlink()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xBA8254", Offset = "0xBA8254", VA = "0xBA8254")]
	public Blink()
	{
	}
}
[Token(Token = "0x20001A1")]
public class BoundsGizmo : MonoBehaviour
{
	[Token(Token = "0x600093F")]
	[Address(RVA = "0xBA8264", Offset = "0xBA8264", VA = "0xBA8264")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xBA82DC", Offset = "0xBA82DC", VA = "0xBA82DC")]
	public BoundsGizmo()
	{
	}
}
[Token(Token = "0x20001A2")]
public static class ConfigurableJointExtensions
{
	[Token(Token = "0x6000941")]
	[Address(RVA = "0xBA82E4", Offset = "0xBA82E4", VA = "0xBA82E4")]
	public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xBA8870", Offset = "0xBA8870", VA = "0xBA8870")]
	public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xBA83D8", Offset = "0xBA83D8", VA = "0xBA83D8")]
	private static void SetTargetRotationInternal(ConfigurableJoint joint, Quaternion targetRotation, Quaternion startRotation, Space space)
	{
	}
}
[Token(Token = "0x20001A3")]
public class DeparentOnAwake : MonoBehaviour
{
	[Token(Token = "0x6000944")]
	[Address(RVA = "0xBA8964", Offset = "0xBA8964", VA = "0xBA8964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xBA8988", Offset = "0xBA8988", VA = "0xBA8988")]
	public DeparentOnAwake()
	{
	}
}
[Token(Token = "0x20001A4")]
public class DestroyOnStart : MonoBehaviour
{
	[Token(Token = "0x6000946")]
	[Address(RVA = "0xBA8990", Offset = "0xBA8990", VA = "0xBA8990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xBA89FC", Offset = "0xBA89FC", VA = "0xBA89FC")]
	public DestroyOnStart()
	{
	}
}
[Token(Token = "0x20001A5")]
public class DestroyOnTouch : MonoBehaviour
{
	[Token(Token = "0x6000948")]
	[Address(RVA = "0xBA8A04", Offset = "0xBA8A04", VA = "0xBA8A04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xBA8A78", Offset = "0xBA8A78", VA = "0xBA8A78")]
	public DestroyOnTouch()
	{
	}
}
[Token(Token = "0x20001A6")]
public static class DrawArrow
{
	[Token(Token = "0x600094A")]
	[Address(RVA = "0xBA8A80", Offset = "0xBA8A80", VA = "0xBA8A80")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xBA8CF0", Offset = "0xBA8CF0", VA = "0xBA8CF0")]
	public static void ForGizmo(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xBA8FA4", Offset = "0xBA8FA4", VA = "0xBA8FA4")]
	public static void ForDebug(Vector3 pos, Vector3 direction, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xBA9270", Offset = "0xBA9270", VA = "0xBA9270")]
	public static void ForDebug(Vector3 pos, Vector3 direction, Color color, float arrowHeadLength = 0.25f, float arrowHeadAngle = 20f)
	{
	}
}
[Token(Token = "0x20001A7")]
[ExecuteInEditMode]
public class DrawBones : MonoBehaviour
{
	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer m_Renderer;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xBA9594", Offset = "0xBA9594", VA = "0xBA9594")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xBA96A4", Offset = "0xBA96A4", VA = "0xBA96A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xBA98BC", Offset = "0xBA98BC", VA = "0xBA98BC")]
	public DrawBones()
	{
	}
}
[Token(Token = "0x20001A8")]
public class DrawLine : MonoBehaviour
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joint joint;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool attachToJoint;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetTransform;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useTargetArray;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] targetArray;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform trans;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float upOffset;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform physicsLine;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xBA98C4", Offset = "0xBA98C4", VA = "0xBA98C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xBA98E8", Offset = "0xBA98E8", VA = "0xBA98E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xBA9BA4", Offset = "0xBA9BA4", VA = "0xBA9BA4")]
	public DrawLine()
	{
	}
}
[Token(Token = "0x20001A9")]
public class FollowObject : MonoBehaviour
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform follower;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera cam;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xBA9BB4", Offset = "0xBA9BB4", VA = "0xBA9BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xBA9BB8", Offset = "0xBA9BB8", VA = "0xBA9BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xBA9DC8", Offset = "0xBA9DC8", VA = "0xBA9DC8")]
	public FollowObject()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Gizmo : MonoBehaviour
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float size;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color gizmoColor;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xBA9DD8", Offset = "0xBA9DD8", VA = "0xBA9DD8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xBA9E1C", Offset = "0xBA9E1C", VA = "0xBA9E1C")]
	public Gizmo()
	{
	}
}
[Token(Token = "0x20001AB")]
public class Hack_RB_onOff : MonoBehaviour
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xBA9E38", Offset = "0xBA9E38", VA = "0xBA9E38")]
	public Hack_RB_onOff()
	{
	}
}
[Token(Token = "0x20001AC")]
public class HiderCamera : MonoBehaviour
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject go;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xBA9E40", Offset = "0xBA9E40", VA = "0xBA9E40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xBA9EA4", Offset = "0xBA9EA4", VA = "0xBA9EA4")]
	public static void HideCamera()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xBA9F4C", Offset = "0xBA9F4C", VA = "0xBA9F4C")]
	public HiderCamera()
	{
	}
}
[Token(Token = "0x20001AD")]
public class HideRenderer : MonoBehaviour
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer myRenderer;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xBA9F54", Offset = "0xBA9F54", VA = "0xBA9F54")]
	private void Start()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xBAA05C", Offset = "0xBAA05C", VA = "0xBAA05C")]
	public HideRenderer()
	{
	}
}
[Token(Token = "0x20001AE")]
public class HingeJointFix : MonoBehaviour
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion initialLocalRotation;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialLocalPosition;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotationOnDisable;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 localPositionOnDisable;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDisabled;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xBAA064", Offset = "0xBAA064", VA = "0xBAA064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xBAA0B4", Offset = "0xBAA0B4", VA = "0xBAA0B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xBAA14C", Offset = "0xBAA14C", VA = "0xBAA14C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xBAA1AC", Offset = "0xBAA1AC", VA = "0xBAA1AC")]
	public HingeJointFix()
	{
	}
}
[Token(Token = "0x20001AF")]
public class HingeSnap : MonoBehaviour
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint joint;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minAngle;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAngle;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float treshold;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float targetAngle;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private JointSpring jointSpring;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool justSwitched;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float switchAngle;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool playIndividualSound;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string completeSFX;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent Open;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent Close;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool toggleOnStart;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xBAA1B4", Offset = "0xBAA1B4", VA = "0xBAA1B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xBAA284", Offset = "0xBAA284", VA = "0xBAA284")]
	public void IndividualSoundFeedback()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xBAA234", Offset = "0xBAA234", VA = "0xBAA234")]
	[ContextMenu("ToggleSwitch")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xBAA2C4", Offset = "0xBAA2C4", VA = "0xBAA2C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xBAA414", Offset = "0xBAA414", VA = "0xBAA414")]
	public HingeSnap()
	{
	}
}
[Token(Token = "0x20001B0")]
public class JointAnchorScale : MonoBehaviour
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint[] joints;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] anchor;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] connectedAnchor;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool getJointsOnStart;

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xBAA428", Offset = "0xBAA428", VA = "0xBAA428")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xBAA42C", Offset = "0xBAA42C", VA = "0xBAA42C")]
	private void StoreAnchors()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xBAA5B8", Offset = "0xBAA5B8", VA = "0xBAA5B8")]
	private void ScaleUpdateAnchors()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xBAA6F8", Offset = "0xBAA6F8", VA = "0xBAA6F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xBAA6FC", Offset = "0xBAA6FC", VA = "0xBAA6FC")]
	public JointAnchorScale()
	{
	}
}
[Token(Token = "0x20001B1")]
[ExecuteInEditMode]
public class JointAnchorsPosition : MonoBehaviour
{
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint joint;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xBAA704", Offset = "0xBAA704", VA = "0xBAA704")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xBAA708", Offset = "0xBAA708", VA = "0xBAA708")]
	private void SetAnchor()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xBAA794", Offset = "0xBAA794", VA = "0xBAA794")]
	public JointAnchorsPosition()
	{
	}
}
[Token(Token = "0x20001B2")]
public class JointGizmos : MonoBehaviour
{
	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xBAA79C", Offset = "0xBAA79C", VA = "0xBAA79C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xBAA9B4", Offset = "0xBAA9B4", VA = "0xBAA9B4")]
	public JointGizmos()
	{
	}
}
[Token(Token = "0x20001B3")]
public class JointTorque : MonoBehaviour
{
	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool readTorque;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint[] joints;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xBAA9BC", Offset = "0xBAA9BC", VA = "0xBAA9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xBAAB68", Offset = "0xBAAB68", VA = "0xBAAB68")]
	public JointTorque()
	{
	}
}
[Token(Token = "0x20001B4")]
public static class MathHelp
{
	[Token(Token = "0x6000974")]
	[Address(RVA = "0xB9F4A4", Offset = "0xB9F4A4", VA = "0xB9F4A4")]
	public static float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xBAAB70", Offset = "0xBAAB70", VA = "0xBAAB70")]
	public static Quaternion GetXAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xBAAB90", Offset = "0xBAAB90", VA = "0xBAAB90")]
	public static Quaternion GetYAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xBAABB0", Offset = "0xBAABB0", VA = "0xBAABB0")]
	public static Quaternion GetZAxisRotation(this Quaternion quaternion)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xBAABD0", Offset = "0xBAABD0", VA = "0xBAABD0")]
	public static void AddToFloat(List<float> li, float val, int len)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xBAACC4", Offset = "0xBAACC4", VA = "0xBAACC4")]
	public static float MiddleFloats(List<float> li)
	{
		return default(float);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xBAAE30", Offset = "0xBAAE30", VA = "0xBAAE30")]
	public static Vector2 MiddleVectors(List<Vector2> li)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xBAAFD4", Offset = "0xBAAFD4", VA = "0xBAAFD4")]
	public static Vector3 Middle3Vectors(List<Vector3> li)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xBAB180", Offset = "0xBAB180", VA = "0xBAB180")]
	public static void AddToVector3(List<Vector3> li, Vector3 val, int len)
	{
	}
}
[Token(Token = "0x20001B5")]
public static class MeshExtension
{
	[Token(Token = "0x600097D")]
	[Address(RVA = "0xBAB298", Offset = "0xBAB298", VA = "0xBAB298")]
	public static bool IsPointInside(this Mesh aMesh, Vector3 aLocalPoint)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001B6")]
[ExecuteInEditMode]
public class NonConvexMeshCollider : MonoBehaviour
{
	[Token(Token = "0x20001B7")]
	public class Box
	{
		[Token(Token = "0x20001B8")]
		[CompilerGenerated]
		private sealed class <get_Parents>d__17 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Box <b>5__2;

			[Token(Token = "0x1700008F")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009A0")]
				[Address(RVA = "0xBAE410", Offset = "0xBAE410", VA = "0xBAE410", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000090")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A2")]
				[Address(RVA = "0xBAE458", Offset = "0xBAE458", VA = "0xBAE458", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600099D")]
			[Address(RVA = "0xBAD748", Offset = "0xBAD748", VA = "0xBAD748")]
			[DebuggerHidden]
			public <get_Parents>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0xBAE384", Offset = "0xBAE384", VA = "0xBAE384", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0xBAE388", Offset = "0xBAE388", VA = "0xBAE388", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xBAE418", Offset = "0xBAE418", VA = "0xBAE418", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xBAE460", Offset = "0xBAE460", VA = "0xBAE460", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xBAE50C", Offset = "0xBAE50C", VA = "0xBAE50C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001B9")]
		[CompilerGenerated]
		private sealed class <get_SelfAndParents>d__19 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Box> <>7__wrap1;

			[Token(Token = "0x17000091")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009A9")]
				[Address(RVA = "0xBAE8C0", Offset = "0xBAE8C0", VA = "0xBAE8C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000092")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009AB")]
				[Address(RVA = "0xBAE908", Offset = "0xBAE908", VA = "0xBAE908", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xBAD800", Offset = "0xBAD800", VA = "0xBAD800")]
			[DebuggerHidden]
			public <get_SelfAndParents>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xBAE510", Offset = "0xBAE510", VA = "0xBAE510", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0xBAE52C", Offset = "0xBAE52C", VA = "0xBAE52C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xBAE810", Offset = "0xBAE810", VA = "0xBAE810")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xBAE8C8", Offset = "0xBAE8C8", VA = "0xBAE8C8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xBAE910", Offset = "0xBAE910", VA = "0xBAE910", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xBAE9BC", Offset = "0xBAE9BC", VA = "0xBAE9BC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001BA")]
		[CompilerGenerated]
		private sealed class <get_ChildrenRecursive>d__24 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Box[] <>7__wrap1;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Box <c>5__4;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Box> <>7__wrap4;

			[Token(Token = "0x17000093")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009B2")]
				[Address(RVA = "0xBAEE1C", Offset = "0xBAEE1C", VA = "0xBAEE1C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000094")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009B4")]
				[Address(RVA = "0xBAEE64", Offset = "0xBAEE64", VA = "0xBAEE64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xBADA94", Offset = "0xBADA94", VA = "0xBADA94")]
			[DebuggerHidden]
			public <get_ChildrenRecursive>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xBAE9C0", Offset = "0xBAE9C0", VA = "0xBAE9C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xBAE9DC", Offset = "0xBAE9DC", VA = "0xBAE9DC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xBAED6C", Offset = "0xBAED6C", VA = "0xBAED6C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xBAEE24", Offset = "0xBAEE24", VA = "0xBAEE24", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009B5")]
			[Address(RVA = "0xBAEE6C", Offset = "0xBAEE6C", VA = "0xBAEE6C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009B6")]
			[Address(RVA = "0xBAEF18", Offset = "0xBAEF18", VA = "0xBAEF18", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001BB")]
		[CompilerGenerated]
		private sealed class <get_SelfAndChildrenRecursive>d__26 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Box <>2__current;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Box <>4__this;

			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Box> <>7__wrap1;

			[Token(Token = "0x17000095")]
			private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
			{
				[Token(Token = "0x60009BB")]
				[Address(RVA = "0xBAF2CC", Offset = "0xBAF2CC", VA = "0xBAF2CC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000096")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009BD")]
				[Address(RVA = "0xBAF314", Offset = "0xBAF314", VA = "0xBAF314", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xBADB4C", Offset = "0xBADB4C", VA = "0xBADB4C")]
			[DebuggerHidden]
			public <get_SelfAndChildrenRecursive>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60009B8")]
			[Address(RVA = "0xBAEF1C", Offset = "0xBAEF1C", VA = "0xBAEF1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xBAEF38", Offset = "0xBAEF38", VA = "0xBAEF38", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009BA")]
			[Address(RVA = "0xBAF21C", Offset = "0xBAF21C", VA = "0xBAF21C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009BC")]
			[Address(RVA = "0xBAF2D4", Offset = "0xBAF2D4", VA = "0xBAF2D4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xBAF31C", Offset = "0xBAF31C", VA = "0xBAF31C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xBAF3C8", Offset = "0xBAF3C8", VA = "0xBAF3C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Box[,,] boxes;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3Int lastLevelGridPos;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Box[] lastLevelBoxes;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3Int minGridPos;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3Int maxGridPos;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3Int gridSize;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3? center;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3? size;

		[Token(Token = "0x1700007B")]
		public Vector3 Center
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0xBAC754", Offset = "0xBAC754", VA = "0xBAC754")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700007C")]
		public Vector3 Size
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0xBAC5D4", Offset = "0xBAC5D4", VA = "0xBAC5D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700007D")]
		public Box Parent
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xBAD6A4", Offset = "0xBAD6A4", VA = "0xBAD6A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xBAD6AC", Offset = "0xBAD6AC", VA = "0xBAD6AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Box[] Children
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xBAD6B4", Offset = "0xBAD6B4", VA = "0xBAD6B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xBAD6BC", Offset = "0xBAD6BC", VA = "0xBAD6BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public IEnumerable<Box> Parents
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xBAD6C4", Offset = "0xBAD6C4", VA = "0xBAD6C4")]
			[IteratorStateMachine(typeof(<get_Parents>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public IEnumerable<Box> SelfAndParents
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xBAD77C", Offset = "0xBAD77C", VA = "0xBAD77C")]
			[IteratorStateMachine(typeof(<get_SelfAndParents>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		public Box Root
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xBAD834", Offset = "0xBAD834", VA = "0xBAD834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		public IEnumerable<Box> ChildrenRecursive
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xBADA10", Offset = "0xBADA10", VA = "0xBADA10")]
			[IteratorStateMachine(typeof(<get_ChildrenRecursive>d__24))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public IEnumerable<Box> SelfAndChildrenRecursive
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xBADAC8", Offset = "0xBADAC8", VA = "0xBADAC8")]
			[IteratorStateMachine(typeof(<get_SelfAndChildrenRecursive>d__26))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public Box[] LastLevelBoxes
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xBAD230", Offset = "0xBAD230", VA = "0xBAD230")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private IEnumerable<Vector3Int> CoveredGridPositions
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xBAD848", Offset = "0xBAD848", VA = "0xBAD848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private int MinGridPosX
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xBADB80", Offset = "0xBADB80", VA = "0xBADB80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000087")]
		private int MinGridPosY
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0xBADCB8", Offset = "0xBADCB8", VA = "0xBADCB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000088")]
		private int MinGridPosZ
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xBADDF0", Offset = "0xBADDF0", VA = "0xBADDF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000089")]
		private int MaxGridPosX
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xBADF28", Offset = "0xBADF28", VA = "0xBADF28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008A")]
		private int MaxGridPosY
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xBAE060", Offset = "0xBAE060", VA = "0xBAE060")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008B")]
		private int MaxGridPosZ
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xBAE198", Offset = "0xBAE198", VA = "0xBAE198")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008C")]
		private Vector3Int MinGridPos
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xBAD95C", Offset = "0xBAD95C", VA = "0xBAD95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private Vector3Int MaxGridPos
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xBAE2D0", Offset = "0xBAE2D0", VA = "0xBAE2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private Vector3Int GridSize
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0xBAD384", Offset = "0xBAD384", VA = "0xBAD384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xBAD1C0", Offset = "0xBAD1C0", VA = "0xBAD1C0")]
		public Box(Box[,,] boxes, [Optional] Vector3? center, [Optional] Vector3? size, [Optional] Vector3Int lastLevelGridPos)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xBAD4C0", Offset = "0xBAD4C0", VA = "0xBAD4C0")]
		private void MergeWith(Box other)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xBAC948", Offset = "0xBAC948", VA = "0xBAC948")]
		public bool TryMerge(Vector3Int direction)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001BD")]
	public class Vector3Int
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3Int One;

		[Token(Token = "0x17000097")]
		public int X
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xBAF50C", Offset = "0xBAF50C", VA = "0xBAF50C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xBAF514", Offset = "0xBAF514", VA = "0xBAF514")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public int Y
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xBAF51C", Offset = "0xBAF51C", VA = "0xBAF51C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xBAF524", Offset = "0xBAF524", VA = "0xBAF524")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public int Z
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xBAF52C", Offset = "0xBAF52C", VA = "0xBAF52C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0xBAF534", Offset = "0xBAF534", VA = "0xBAF534")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xBAC90C", Offset = "0xBAC90C", VA = "0xBAC90C")]
		public Vector3Int(int x, int y, int z)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xBAF53C", Offset = "0xBAF53C", VA = "0xBAF53C")]
		protected bool Equals(Vector3Int other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xBAF588", Offset = "0xBAF588", VA = "0xBAF588", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xBAF694", Offset = "0xBAF694", VA = "0xBAF694", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xBAF6B4", Offset = "0xBAF6B4", VA = "0xBAF6B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private sealed class <CreateMeshIntersectingBoxes>d__6 : IEnumerable<Box>, IEnumerable, IEnumerator<Box>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Box <>2__current;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject colliderGo;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject <>3__colliderGo;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NonConvexMeshCollider <>4__this;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Bounds <bounds>5__2;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Box[,,] <boxes>5__3;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool[,,] <boxColliderPositions>5__4;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <s>5__5;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int <x>5__6;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int <y>5__7;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int <z>5__8;

		[Token(Token = "0x1700009A")]
		private Box System.Collections.Generic.IEnumerator<NonConvexMeshCollider.Box>.Current
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xBAFFFC", Offset = "0xBAFFFC", VA = "0xBAFFFC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xBB0044", Offset = "0xBB0044", VA = "0xBB0044", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xBACFBC", Offset = "0xBACFBC", VA = "0xBACFBC")]
		[DebuggerHidden]
		public <CreateMeshIntersectingBoxes>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xBAF938", Offset = "0xBAF938", VA = "0xBAF938", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xBAF93C", Offset = "0xBAF93C", VA = "0xBAF93C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xBB0004", Offset = "0xBB0004", VA = "0xBB0004", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xBB004C", Offset = "0xBB004C", VA = "0xBB004C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Box> System.Collections.Generic.IEnumerable<NonConvexMeshCollider.Box>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xBB0108", Offset = "0xBB0108", VA = "0xBB0108", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldMerge;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool createColliderChildGameObject;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int boxesPerEdge;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xBAB430", Offset = "0xBAB430", VA = "0xBAB430")]
	public void Calculate()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xBAC0E8", Offset = "0xBAC0E8", VA = "0xBAC0E8")]
	private Box[] MergeBoxes(Box[] boxes)
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xBABBDC", Offset = "0xBABBDC", VA = "0xBABBDC")]
	private static GameObject CreateColliderChildGameObject(GameObject go, MeshFilter meshFilter)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xBAC048", Offset = "0xBAC048", VA = "0xBAC048")]
	[IteratorStateMachine(typeof(<CreateMeshIntersectingBoxes>d__6))]
	private IEnumerable<Box> CreateMeshIntersectingBoxes(GameObject colliderGo)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xBACFF0", Offset = "0xBACFF0", VA = "0xBACFF0")]
	private static Bounds CalculateLocalBounds(GameObject go)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xBAD1A8", Offset = "0xBAD1A8", VA = "0xBAD1A8")]
	public NonConvexMeshCollider()
	{
	}
}
[Token(Token = "0x20001C1")]
public class ScaleJointsHelper : MonoBehaviour
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] children;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _connectedAnchor;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _anchor;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xBB010C", Offset = "0xBB010C", VA = "0xBB010C")]
	private void StoreAnchors()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xBB0334", Offset = "0xBB0334", VA = "0xBB0334")]
	private void UpdateAnchors()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xBB04B4", Offset = "0xBB04B4", VA = "0xBB04B4")]
	public ScaleJointsHelper()
	{
	}
}
[Token(Token = "0x20001C2")]
public class TextFPSCounter : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool show;

	[Token(Token = "0x4000A46")]
	private const int targetFPS = 60;

	[Token(Token = "0x4000A47")]
	private const float updateInterval = 0.1f;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int framesCount;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float framesTime;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBB04BC", Offset = "0xBB04BC", VA = "0xBB04BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xBB05A0", Offset = "0xBB05A0", VA = "0xBB05A0")]
	public void GetGrip(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xBB05B0", Offset = "0xBB05B0", VA = "0xBB05B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xBB07D4", Offset = "0xBB07D4", VA = "0xBB07D4")]
	public TextFPSCounter()
	{
	}
}
[Token(Token = "0x20001C3")]
public class UGUI_ImageColorFlickrRT : MonoBehaviour
{
	[Token(Token = "0x20001C4")]
	public enum Mode
	{
		[Token(Token = "0x4000A5B")]
		sprite,
		[Token(Token = "0x4000A5C")]
		text,
		[Token(Token = "0x4000A5D")]
		spriteRenderer
	}

	[Token(Token = "0x20001C5")]
	public enum CycleType
	{
		[Token(Token = "0x4000A5F")]
		blink,
		[Token(Token = "0x4000A60")]
		twoColors,
		[Token(Token = "0x4000A61")]
		random,
		[Token(Token = "0x4000A62")]
		randomBlink
	}

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode cycleMode;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CycleType cycleType;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color firstColor;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color secondColor;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color transparentColor;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color a;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color b;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool doCycle;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color initialColor;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float wait;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int blink;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float waitCounter;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TMP_Text tm;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Image ts;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SpriteRenderer tr;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBB07DC", Offset = "0xBB07DC", VA = "0xBB07DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xBB09C4", Offset = "0xBB09C4", VA = "0xBB09C4")]
	public void StartFlickr()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xBB09C8", Offset = "0xBB09C8", VA = "0xBB09C8")]
	public void StopFlickr()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xBB09CC", Offset = "0xBB09CC", VA = "0xBB09CC")]
	public void ResetColor()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBB0AE8", Offset = "0xBB0AE8", VA = "0xBB0AE8")]
	public void ForceInitialColor(Color32 col)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xBB08B0", Offset = "0xBB08B0", VA = "0xBB08B0")]
	public void SetStartColor()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBB0B24", Offset = "0xBB0B24", VA = "0xBB0B24")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBB0D90", Offset = "0xBB0D90", VA = "0xBB0D90")]
	public UGUI_ImageColorFlickrRT()
	{
	}
}
[Token(Token = "0x20001C6")]
public class WeightExclude : MonoBehaviour
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xBB0DB0", Offset = "0xBB0DB0", VA = "0xBB0DB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xBB0E90", Offset = "0xBB0E90", VA = "0xBB0E90")]
	public WeightExclude()
	{
	}
}
[Token(Token = "0x20001C7")]
public class WheelColliderHack : MonoBehaviour
{
	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xBB0E98", Offset = "0xBB0E98", VA = "0xBB0E98")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xBB0EF8", Offset = "0xBB0EF8", VA = "0xBB0EF8")]
	public WheelColliderHack()
	{
	}
}
[Token(Token = "0x20001C8")]
public class HelpTimer : MonoBehaviour
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetConnectionCount[] targets;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ConstructionTargetConnectionCount> targetsList;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xBB0F00", Offset = "0xBB0F00", VA = "0xBB0F00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xBB0F80", Offset = "0xBB0F80", VA = "0xBB0F80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xBB1000", Offset = "0xBB1000", VA = "0xBB1000")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xBB1080", Offset = "0xBB1080", VA = "0xBB1080")]
	private void SearchForTargets()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xBB112C", Offset = "0xBB112C", VA = "0xBB112C")]
	private void PickHuman()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xBB1388", Offset = "0xBB1388", VA = "0xBB1388")]
	private void TargetPlaced(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xBB14B8", Offset = "0xBB14B8", VA = "0xBB14B8")]
	public HelpTimer()
	{
	}
}
[Token(Token = "0x20001C9")]
public class HideGameObjects : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xBB24C0", Offset = "0xBB24C0", VA = "0xBB24C0")]
	public void HideObjects(bool _hide = true)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xBB2738", Offset = "0xBB2738", VA = "0xBB2738")]
	public HideGameObjects()
	{
	}
}
[Token(Token = "0x20001CA")]
public class HideIfAchievementUnlocked : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xBB2740", Offset = "0xBB2740", VA = "0xBB2740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xBB27E8", Offset = "0xBB27E8", VA = "0xBB27E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xBB2868", Offset = "0xBB2868", VA = "0xBB2868")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xBB28E8", Offset = "0xBB28E8", VA = "0xBB28E8")]
	private void AchievementUnlockedEvent(Achievement _achievement)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xBB2744", Offset = "0xBB2744", VA = "0xBB2744")]
	private void UnlockedActionCheck()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xBB2970", Offset = "0xBB2970", VA = "0xBB2970")]
	public HideIfAchievementUnlocked()
	{
	}
}
[Token(Token = "0x20001CB")]
public class HideIfBuild : MonoBehaviour
{
	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xBB2978", Offset = "0xBB2978", VA = "0xBB2978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xBB299C", Offset = "0xBB299C", VA = "0xBB299C")]
	public HideIfBuild()
	{
	}
}
[Token(Token = "0x20001CC")]
public class HideIfMenu : MonoBehaviour
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool invert;

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xBB29A4", Offset = "0xBB29A4", VA = "0xBB29A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xBB2A68", Offset = "0xBB2A68", VA = "0xBB2A68")]
	public HideIfMenu()
	{
	}
}
[Token(Token = "0x20001CD")]
public class HideIfReplay : MonoBehaviour
{
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool invert;

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xBB2A70", Offset = "0xBB2A70", VA = "0xBB2A70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xBB2B38", Offset = "0xBB2B38", VA = "0xBB2B38")]
	public HideIfReplay()
	{
	}
}
[Token(Token = "0x20001CE")]
public class HingeDetachPrevention : MonoBehaviour
{
	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <CollisionDisable>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HingeDetachPrevention <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xBB356C", Offset = "0xBB356C", VA = "0xBB356C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xBB35B4", Offset = "0xBB35B4", VA = "0xBB35B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xBB2DA8", Offset = "0xBB2DA8", VA = "0xBB2DA8")]
		[DebuggerHidden]
		public <CollisionDisable>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xBB32B0", Offset = "0xBB32B0", VA = "0xBB32B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xBB32B4", Offset = "0xBB32B4", VA = "0xBB32B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xBB3574", Offset = "0xBB3574", VA = "0xBB3574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint joint;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceLimit;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator collisionTimeout;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float invokeUpdate;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable grabbale;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool disableCollisionOnOverpower;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool unglueOnOverpower;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool cooldown;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator collisionCoroutine;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool logging;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool onlyDetachIfGrabbed;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool useTorque;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float torqueLimit;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xBB2B40", Offset = "0xBB2B40", VA = "0xBB2B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xBB2D34", Offset = "0xBB2D34", VA = "0xBB2D34")]
	[IteratorStateMachine(typeof(<CollisionDisable>d__14))]
	private IEnumerator CollisionDisable()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xBB2DD0", Offset = "0xBB2DD0", VA = "0xBB2DD0")]
	private void SetCollision(bool which)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xBB2E8C", Offset = "0xBB2E8C", VA = "0xBB2E8C")]
	private void ForceCheck()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xBB328C", Offset = "0xBB328C", VA = "0xBB328C")]
	public HingeDetachPrevention()
	{
	}
}
[Token(Token = "0x20001D0")]
public class HingeSFX : MonoBehaviour
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HingeJoint myHingeJoint;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float counter;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float squeekTime;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float triggerVelocity;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lastDirection;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useIntermittent;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool onlyOncePerDirectionChange;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool triggerCooldownOnLowVelocity;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xBB35BC", Offset = "0xBB35BC", VA = "0xBB35BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xBB366C", Offset = "0xBB366C", VA = "0xBB366C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xBB378C", Offset = "0xBB378C", VA = "0xBB378C")]
	public HingeSFX()
	{
	}
}
[Token(Token = "0x20001D1")]
public class HugeRocketFlyAway : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 velocityStore;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool gameDone;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject thrustFX;

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xBB37B0", Offset = "0xBB37B0", VA = "0xBB37B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xBB37D0", Offset = "0xBB37D0", VA = "0xBB37D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xBB3888", Offset = "0xBB3888", VA = "0xBB3888")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xBB3908", Offset = "0xBB3908", VA = "0xBB3908")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xBB3940", Offset = "0xBB3940", VA = "0xBB3940")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xBB3984", Offset = "0xBB3984", VA = "0xBB3984")]
	public HugeRocketFlyAway()
	{
	}
}
[Token(Token = "0x20001D2")]
public class HumanDamage : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction humansInteraction;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BubbleToCharacter characterBubble;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xBB398C", Offset = "0xBB398C", VA = "0xBB398C")]
	public HumanDamage()
	{
	}
}
[Token(Token = "0x20001D3")]
public class HumanOverrideHit : MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool humanHitEnabled;

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xBB3994", Offset = "0xBB3994", VA = "0xBB3994")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xBB3A38", Offset = "0xBB3A38", VA = "0xBB3A38")]
	public HumanOverrideHit()
	{
	}
}
[Token(Token = "0x20001D4")]
public class HumanRecycler : MonoBehaviour
{
	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HumansInteraction hi;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool recycleStarted;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xBB3A40", Offset = "0xBB3A40", VA = "0xBB3A40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xBB3DCC", Offset = "0xBB3DCC", VA = "0xBB3DCC")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xBB3EC4", Offset = "0xBB3EC4", VA = "0xBB3EC4")]
	private void RecycleHuman()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xBB41C4", Offset = "0xBB41C4", VA = "0xBB41C4")]
	public HumanRecycler()
	{
	}
}
[Token(Token = "0x20001D5")]
public class BubbleToCharacter : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	public delegate void ConversationDone(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001D7")]
	public delegate void ConversationSayNext(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001D8")]
	public delegate void ConversationStarted(string _convoID, BubbleToCharacter bubble);

	[Token(Token = "0x20001D9")]
	public delegate void BabbleStartedDelegate(bool babbleStart, BubbleToCharacter bubble);

	[Token(Token = "0x20001DA")]
	public delegate void QuestionAnswered(string _convoID, int resultID, BubbleToCharacter bubble);

	[Token(Token = "0x20001DB")]
	public delegate void QuestionOpened(GameObject _go);

	[Token(Token = "0x20001DC")]
	public enum ConvoType
	{
		[Token(Token = "0x4000B0E")]
		none,
		[Token(Token = "0x4000B0F")]
		insert,
		[Token(Token = "0x4000B10")]
		task,
		[Token(Token = "0x4000B11")]
		question,
		[Token(Token = "0x4000B12")]
		noIcon
	}

	[Token(Token = "0x20001DD")]
	[CompilerGenerated]
	private sealed class <TextReveal>d__222 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xBBAA24", Offset = "0xBBAA24", VA = "0xBBAA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xBBAA6C", Offset = "0xBBAA6C", VA = "0xBBAA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xBB8B94", Offset = "0xBB8B94", VA = "0xBB8B94")]
		[DebuggerHidden]
		public <TextReveal>d__222(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xBBA1BC", Offset = "0xBBA1BC", VA = "0xBBA1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xBBA1C0", Offset = "0xBBA1C0", VA = "0xBBA1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xBBAA2C", Offset = "0xBBAA2C", VA = "0xBBAA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <ExtraWait>d__224 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xBBAE60", Offset = "0xBBAE60", VA = "0xBBAE60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xBBAEA8", Offset = "0xBBAEA8", VA = "0xBBAEA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xBB8C30", Offset = "0xBB8C30", VA = "0xBB8C30")]
		[DebuggerHidden]
		public <ExtraWait>d__224(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xBBAA74", Offset = "0xBBAA74", VA = "0xBBAA74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xBBAA78", Offset = "0xBBAA78", VA = "0xBBAA78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xBBAE68", Offset = "0xBBAE68", VA = "0xBBAE68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[CompilerGenerated]
	private sealed class <BubbleChange>d__225 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BubbleToCharacter <>4__this;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _wait;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xBBAFF8", Offset = "0xBBAFF8", VA = "0xBBAFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xBBB040", Offset = "0xBBB040", VA = "0xBBB040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xBB8CDC", Offset = "0xBB8CDC", VA = "0xBB8CDC")]
		[DebuggerHidden]
		public <BubbleChange>d__225(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xBBAEB0", Offset = "0xBBAEB0", VA = "0xBBAEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xBBAEB4", Offset = "0xBBAEB4", VA = "0xBBAEB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xBBB000", Offset = "0xBBB000", VA = "0xBBB000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetCharacter;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody currentCharacter;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RelativeAttach[] relativeAttachList;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DOTweenAnimation bubbleTween;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bubbleInner;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HumansInteraction humansInteraction;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabbable grabbable;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool wasGrabbed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isGrabbed;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool initialised;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentTalk;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> chatList;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> markupList;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string mainConvoString;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro dots;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool bubbleHidden;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool touchBlocked;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public ConvoType currentConvoType;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ConvoType mainConvoType;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] convoIcons;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool currentConvoDone;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject convoIconRoot;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool animateTextOnBubble;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float perCharacterRevealDelay;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float newReadWaitAddonPerCharacter;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float newReadWaitAddonMinWait;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int timingIDX;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float bubbleHide;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float specialEndWait;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool doSpecialEndWait;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string mainConvoID;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int convoInterruptedAt;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool continueNeeded;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool blockTapSkip;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool isVisibleInCamera;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	private bool allSeen;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Questions")]
	public GameObject answerContainer;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float questionEndWait;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool questionWait;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool answerBlocked;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] defaultAnswers;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro[] answerType;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool useQuestLabel;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform questLabel;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshPro questLabelInfo;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool suppressIcons;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public HumanController humanController;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Camera VRCamera;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string reactionID;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float tappedReactionChance;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string flyingAwayReactionID;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string interruptedReactionID;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string shakeReactionID;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string[] tappedReactionID;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string hurtReactionID;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string babbleCharactersID;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string babbleWordsID;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string endBabbleID;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool useDefaultTappedReactions;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool interruptedReaction;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool useRepeatInject;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int tapReactions;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool pauseAfterInsert;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string manualInsert;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool useDefaultBlankColor;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string blankColor;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string customBlankColor;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string fullColor;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string highlightColor;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Dictionary<string, string> replaceDict;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Dictionary<string, string> replaceClearDict;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Vector3 regularBubbleScale;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public bool useLossyStartScale;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool debugNoWaitForPlayerFocus;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	public bool doHitReaction;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
	public bool doHurtReaction;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
	public bool isBabbleMode;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool isBabbleProof;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool doBabbleEndReaction;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	[Header("object start gameframe = 0")]
	public bool suppressInitBabble;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject babbleFX;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float lastHurtTime;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float hurtShoutWait;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool emoSFXPlayed;

	[Token(Token = "0x4000AE6")]
	public const string startTapSymbol = "!";

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float talkTimingFactor;

	[Token(Token = "0x4000AE8")]
	public const float talkSpeedAddon = 0.5f;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private string reactionType;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool unparent;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public DisableOnDistance disableOnDistance;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int revealFactor;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool convoStarted;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool alwaysConvoIcon;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool mainConvoSeen;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool isNav;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool isCompleted;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
	private bool isCouncil;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x216")]
	private bool isCouncilSatisfied;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public string characterIdentifier;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int nextBabbleBreak;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int babbleCounter;

	[Token(Token = "0x4000AF7")]
	public const string pattern = "(?<=[.!?#。！？])";

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float hitTrigger;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float maxHitTrigger;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool humanHurt;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	public bool manualBlock;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int gameFrame;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int textPos;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool questionAllowed;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string currentTXT;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float talkSpeed;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private string partA;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private string partB;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private string c;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string emoSym;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Color[] colorArray;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Color tweenerColor;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private string lastEmo;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private int currentTextPos;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float calculatedReadWaitAddon;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 boundSize;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private Bounds bounds;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Plane[] planes;

	[Token(Token = "0x1700009E")]
	public float PerCharacterRevealDelay
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xBB4E64", Offset = "0xBB4E64", VA = "0xBB4E64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xBB4E6C", Offset = "0xBB4E6C", VA = "0xBB4E6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public float ReadWaitAddon
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xBB4E74", Offset = "0xBB4E74", VA = "0xBB4E74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xBB4E7C", Offset = "0xBB4E7C", VA = "0xBB4E7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float ReadWaitAddonPerCharacter
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xBB4E84", Offset = "0xBB4E84", VA = "0xBB4E84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xBB4E8C", Offset = "0xBB4E8C", VA = "0xBB4E8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float BubbleHide
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xBB4E94", Offset = "0xBB4E94", VA = "0xBB4E94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xBB4E9C", Offset = "0xBB4E9C", VA = "0xBB4E9C")]
		set
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public static event ConversationDone OnConversationDone
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xBB41CC", Offset = "0xBB41CC", VA = "0xBB41CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xBB42A4", Offset = "0xBB42A4", VA = "0xBB42A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public static event ConversationSayNext OnConversationSayNext
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xBB437C", Offset = "0xBB437C", VA = "0xBB437C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xBB4458", Offset = "0xBB4458", VA = "0xBB4458")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public static event ConversationStarted OnConversationStarted
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xBB4534", Offset = "0xBB4534", VA = "0xBB4534")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xBB4610", Offset = "0xBB4610", VA = "0xBB4610")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public static event BabbleStartedDelegate OnBabbleStarted
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xBB46EC", Offset = "0xBB46EC", VA = "0xBB46EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xBB47C8", Offset = "0xBB47C8", VA = "0xBB47C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public static event QuestionAnswered OnQuestionAnswered
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xBB48A4", Offset = "0xBB48A4", VA = "0xBB48A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xBB4980", Offset = "0xBB4980", VA = "0xBB4980")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public static event QuestionOpened OnQuestionOpened
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xBB4A5C", Offset = "0xBB4A5C", VA = "0xBB4A5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xBB4B38", Offset = "0xBB4B38", VA = "0xBB4B38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xBB4C14", Offset = "0xBB4C14", VA = "0xBB4C14")]
	public void SetDefaultTimingValues()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xBB4C84", Offset = "0xBB4C84", VA = "0xBB4C84")]
	public static void GetTalkTiming()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xBB4DF8", Offset = "0xBB4DF8", VA = "0xBB4DF8")]
	public static void SlideTalkSpeed(float _which)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xBB4EA4", Offset = "0xBB4EA4", VA = "0xBB4EA4")]
	public void CharacterID(string cID)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xBB4EB4", Offset = "0xBB4EB4", VA = "0xBB4EB4")]
	public void SetQuestLabel(string _header, string _info, bool _complete = false)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xBB4EE8", Offset = "0xBB4EE8", VA = "0xBB4EE8")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xBB5378", Offset = "0xBB5378", VA = "0xBB5378")]
	private void MyQuestionOpened(GameObject _go)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xBB5658", Offset = "0xBB5658", VA = "0xBB5658")]
	public void SetBabble(bool which = true)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xBB5668", Offset = "0xBB5668", VA = "0xBB5668")]
	[ContextMenu("StartBabble")]
	public void StartBabble()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xBB5740", Offset = "0xBB5740", VA = "0xBB5740")]
	public void EndBabble(bool _forceEnd = false)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xBB5834", Offset = "0xBB5834", VA = "0xBB5834")]
	private void DoReplaceBabble(bool _pauseAfter = true)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xBB58CC", Offset = "0xBB58CC", VA = "0xBB58CC")]
	private void DoInsertBabble(bool _pauseAfter = true)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xBB5B1C", Offset = "0xBB5B1C", VA = "0xBB5B1C")]
	private string CreateBabbleString(int _chars, int minBabbleLength, int maxBabbleLength, int _maxCharsBabbleBubble = 20)
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xBB5DB4", Offset = "0xBB5DB4", VA = "0xBB5DB4")]
	[ContextMenu("TestBabbleGen")]
	private void TestBabbleGen()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xBB266C", Offset = "0xBB266C", VA = "0xBB266C")]
	public void CleanUp(bool _which, bool hideBubbleSetup = false)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xBB5F90", Offset = "0xBB5F90", VA = "0xBB5F90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xBB60F8", Offset = "0xBB60F8", VA = "0xBB60F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xBB6224", Offset = "0xBB6224", VA = "0xBB6224")]
	public void AnswerGiven(int _answerID)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xBB5DA8", Offset = "0xBB5DA8", VA = "0xBB5DA8")]
	public void PauseMainConvoAfterInsert()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xBB62E8", Offset = "0xBB62E8", VA = "0xBB62E8")]
	public void PauseMainConvoAfterInsert(bool fullPause = false)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xBB5030", Offset = "0xBB5030", VA = "0xBB5030")]
	public void InitCharacter(Transform _transform)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xBB51A8", Offset = "0xBB51A8", VA = "0xBB51A8")]
	public void EmptyConversation()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xBB6C08", Offset = "0xBB6C08", VA = "0xBB6C08")]
	public void BlockTapSkip(bool _which)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xBB6C14", Offset = "0xBB6C14", VA = "0xBB6C14")]
	public void SetAnswers(string _answerNo, string _answerYes)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xBB6C8C", Offset = "0xBB6C8C", VA = "0xBB6C8C")]
	public void SetCouncil(bool isSatisfied)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xBB6D04", Offset = "0xBB6D04", VA = "0xBB6D04")]
	public void SetNav()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xBB6D74", Offset = "0xBB6D74", VA = "0xBB6D74")]
	public void SetCompleted()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xBB6DE4", Offset = "0xBB6DE4", VA = "0xBB6DE4")]
	public void StartTaskAndLocaliseRandomize(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xBB769C", Offset = "0xBB769C", VA = "0xBB769C")]
	public void StartTaskAndLocalise(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xBB7784", Offset = "0xBB7784", VA = "0xBB7784")]
	public void StartTask(string _what, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xBB77C4", Offset = "0xBB77C4", VA = "0xBB77C4")]
	public void StartQuestionAndLocalise(string _locaID, string _mainConvoID = "", bool sayImmediately = false)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xBB78AC", Offset = "0xBB78AC", VA = "0xBB78AC")]
	public void StartQuestion(string _what, string _mainConvoID = "")
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xBB6ECC", Offset = "0xBB6ECC", VA = "0xBB6ECC")]
	public void StartConversation(string _what, ConvoType _convoType = ConvoType.task, string _mainConvoID = "", bool _newConvo = true)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xBB78BC", Offset = "0xBB78BC", VA = "0xBB78BC")]
	private void AddInsertStartEMOSFX()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xBB7A24", Offset = "0xBB7A24", VA = "0xBB7A24")]
	public void SuppressIcon(bool _which)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xBB6AA4", Offset = "0xBB6AA4", VA = "0xBB6AA4")]
	public void SetConvoIcons(bool forceIcon = false, ConvoType forceConvoType = ConvoType.noIcon)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xBB6400", Offset = "0xBB6400", VA = "0xBB6400")]
	public static List<string> ParseNewChat(string _newText, BubbleToCharacter myBubble, bool parseDotDotDot = true)
	{
		return null;
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xBB7A38", Offset = "0xBB7A38", VA = "0xBB7A38")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xBB6300", Offset = "0xBB6300", VA = "0xBB6300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xBB7B00", Offset = "0xBB7B00", VA = "0xBB7B00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xBB7CAC", Offset = "0xBB7CAC", VA = "0xBB7CAC")]
	private void UnBlockTouch()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xBB3CF8", Offset = "0xBB3CF8", VA = "0xBB3CF8")]
	public void InsertVerbalReactionAndLocalise(string _locaID, string _reactionID = "", bool _noInterruptionInjection = true, string _reactionType = "")
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xBB5964", Offset = "0xBB5964", VA = "0xBB5964")]
	public void InsertVerbalReaction(string _what, string _reactionID = "", bool _noInterruption = true, string _reactionType = "")
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xBB7CB4", Offset = "0xBB7CB4", VA = "0xBB7CB4")]
	public void HumanHit(Collision _collision)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xBB7D78", Offset = "0xBB7D78", VA = "0xBB7D78")]
	public bool HitVelocity(Collision _collision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xBB8224", Offset = "0xBB8224", VA = "0xBB8224")]
	[ContextMenu("HumanHitReaction")]
	private void HumanHitReactionTest()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xBB7FA8", Offset = "0xBB7FA8", VA = "0xBB7FA8")]
	public void HumanHitReaction(float _velocity = 0f)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xBB8450", Offset = "0xBB8450", VA = "0xBB8450")]
	public bool IsFullConvoShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xBB8458", Offset = "0xBB8458", VA = "0xBB8458")]
	public bool IsFullMainConvoShown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xBB8460", Offset = "0xBB8460", VA = "0xBB8460")]
	[ContextMenu("OOBsed")]
	public void OOBsed()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xBB5E3C", Offset = "0xBB5E3C", VA = "0xBB5E3C")]
	public void HideBubble()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xBB848C", Offset = "0xBB848C", VA = "0xBB848C")]
	public void OnGrabbed(Grabbable _grabbable)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xBB8520", Offset = "0xBB8520", VA = "0xBB8520")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xBB8530", Offset = "0xBB8530", VA = "0xBB8530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xBB85A4", Offset = "0xBB85A4", VA = "0xBB85A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xBB85B8", Offset = "0xBB85B8", VA = "0xBB85B8")]
	[ContextMenu("FlyAway")]
	public void FlyingAwayReaction()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xBB5414", Offset = "0xBB5414", VA = "0xBB5414")]
	public void ContinueMainConvo(bool isQuestionOpenHideOthers = false)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xBB8634", Offset = "0xBB8634", VA = "0xBB8634")]
	public static void TypewriterMode(bool active)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xBB86B0", Offset = "0xBB86B0", VA = "0xBB86B0")]
	private void RedoConversation()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xBB8758", Offset = "0xBB8758", VA = "0xBB8758")]
	public void HumanTouched(bool _which)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xBB8A3C", Offset = "0xBB8A3C", VA = "0xBB8A3C")]
	public void SayNextNew()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xBB79CC", Offset = "0xBB79CC", VA = "0xBB79CC")]
	private void ActivateInView()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xBB71CC", Offset = "0xBB71CC", VA = "0xBB71CC")]
	public void SayNext()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xBB8890", Offset = "0xBB8890", VA = "0xBB8890")]
	private void ReadDoneActions(bool _tapped = false)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xBB8A44", Offset = "0xBB8A44", VA = "0xBB8A44")]
	private bool RevealDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xBB8B20", Offset = "0xBB8B20", VA = "0xBB8B20")]
	[IteratorStateMachine(typeof(<TextReveal>d__222))]
	private IEnumerator TextReveal()
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xBB8BBC", Offset = "0xBB8BBC", VA = "0xBB8BBC")]
	[IteratorStateMachine(typeof(<ExtraWait>d__224))]
	private IEnumerator ExtraWait()
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xBB8C58", Offset = "0xBB8C58", VA = "0xBB8C58")]
	[IteratorStateMachine(typeof(<BubbleChange>d__225))]
	private IEnumerator BubbleChange(float _wait = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xBB8D04", Offset = "0xBB8D04", VA = "0xBB8D04")]
	private void IsVisible()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xBB8EE4", Offset = "0xBB8EE4", VA = "0xBB8EE4")]
	public static void EmoTest(string emo)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xBB91A8", Offset = "0xBB91A8", VA = "0xBB91A8")]
	public static void EmptyAllBubbles()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xBB9268", Offset = "0xBB9268", VA = "0xBB9268")]
	public static BubbleToCharacter GetClosestCharacterFromViewCenter(Vector3 lookPosition, Vector3 lookAxis, bool needsConvo = false)
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xBB9578", Offset = "0xBB9578", VA = "0xBB9578")]
	public BubbleToCharacter()
	{
	}
}
[Token(Token = "0x20001E0")]
public class HumanController : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	[CompilerGenerated]
	private sealed class <JumpPhases>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HumanController <>4__this;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _value;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xBBE4DC", Offset = "0xBBE4DC", VA = "0xBBE4DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xBBE524", Offset = "0xBBE524", VA = "0xBBE524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xBBE294", Offset = "0xBBE294", VA = "0xBBE294")]
		[DebuggerHidden]
		public <JumpPhases>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xBBE3B0", Offset = "0xBBE3B0", VA = "0xBBE3B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xBBE3B4", Offset = "0xBBE3B4", VA = "0xBBE3B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xBBE4E4", Offset = "0xBBE4E4", VA = "0xBBE4E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera VRCamera;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float uprightTorque;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defaultUprightTorque;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion rot;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float jumpForce;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float jumpForceUp;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float baseHopWait;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Grabbable grabbable;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool turnedOver;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 forward;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float signed;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 cross;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 tmpTarget;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float signedB;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float turnTresh;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform humanTrans;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Human human;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool forceMove;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject humanPrefab;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HumansInteraction humanInteractions;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VoiceProvider voiceProvider;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool cameraIsTarget;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool cameraIsTargetInitially;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform lookToTarget;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool alwaysPlayerFocused;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool tempPlayerFocus;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float hopWait;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float hopWaitRepeat;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float deFocusWait;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform lookToHelper;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool enableFallParachute;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool parachuteOnlyOnce;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float overWriteParaFallFactor;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastYPos;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float freeFallDistance;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 origHeading;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform nonCameraTarget;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool useDefaultHeading;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool hasVRCamera;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool canMove;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool communicationBlock;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float deFocusMaxWait;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float defaultDefocusMaxWait;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform[] rayOrigin;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform[] groundRayOrigin;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform groundRayOriginRoot;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int raySwitch;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HumanWaypointController hwpController;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform lastTarget;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool raycastForPath;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool lastTargetIfBlockedAllowed;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float maxFallDistance;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float defaultFallDistance;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool tapTouchBlocked;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private LayerMask layerMask;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool turnBackAllowed;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool nonHuman;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool doBumpIntoOtherHumanJump;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public HumanAesthetic look;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool blockHeadIdle;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool movingAllowed;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool alwaysTurnToTorque;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Entity myEntity;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int jumps;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int insideJumps;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool isReallyParachuting;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public _g_Piece myWaypoint;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_base levelDirector;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool ignoreCommBlock;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private GameObject hackLookAt;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool jumpBlocked;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ParachuteStandalone para;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int timesChecked;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float torqueValue;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 jumpForceVec;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int timesBlocked;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 lastPos;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3[] groundNormalStore;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool isParachuting;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Ray myRay;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 dir;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 safeWalkNormal;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 rayStart;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private RaycastHit hit;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float checkDistance;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Transform checkSensor;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Vehicle vehicleInFront;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 walkDir;

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xBBB048", Offset = "0xBBB048", VA = "0xBBB048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xBBB57C", Offset = "0xBBB57C", VA = "0xBBB57C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xBBB638", Offset = "0xBBB638", VA = "0xBBB638")]
	public void MovementSettings(float _jumpForce, float _jumpForceUp, float _hopWaitRepeat)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xBBB408", Offset = "0xBBB408", VA = "0xBBB408")]
	public void DefaultMovementSettings()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xBBB6F0", Offset = "0xBBB6F0", VA = "0xBBB6F0")]
	public void SetFallDistance(float _fallDist)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xBBB710", Offset = "0xBBB710", VA = "0xBBB710")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xBBB93C", Offset = "0xBBB93C", VA = "0xBBB93C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xBBBAB8", Offset = "0xBBBAB8", VA = "0xBBBAB8")]
	private void OnParachuteChange(ParachuteStandalone _parachute, bool _which)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xBBBB44", Offset = "0xBBBB44", VA = "0xBBBB44")]
	private void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _grabbed)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xBB4004", Offset = "0xBB4004", VA = "0xBB4004")]
	public void HitJump(Vector3 _otherPosition, bool forceIt = false, float modifier = 1f)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xBBBD44", Offset = "0xBBBD44", VA = "0xBBBD44")]
	public void UpJump(float modifier = 1f)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xBB8470", Offset = "0xBB8470", VA = "0xBB8470")]
	public void SetCommunicationBlock(bool _which)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xBBB554", Offset = "0xBBB554", VA = "0xBBB554")]
	public void SetCameraTarget(bool tempFocus = false)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xBBBD9C", Offset = "0xBBBD9C", VA = "0xBBBD9C")]
	private void SearchCamera()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xBBBF50", Offset = "0xBBBF50", VA = "0xBBBF50")]
	public void LookAtCameraTempWhileMoving(bool _allowWalking = false, float _waitTime = -1f)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xBBB528", Offset = "0xBBB528", VA = "0xBBB528")]
	public void MoveToTarget(bool _which, bool _forceMove = false)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xBBBFA8", Offset = "0xBBBFA8", VA = "0xBBBFA8")]
	[ContextMenu("NoTargetAtAll")]
	public void NoTargetAtAll()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xBBBFE0", Offset = "0xBBBFE0", VA = "0xBBBFE0")]
	public void DeFocusCheck(bool forceDefocus = false)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xBBC184", Offset = "0xBBC184", VA = "0xBBC184")]
	public bool IsPlayerFocused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xBB8838", Offset = "0xBB8838", VA = "0xBB8838")]
	[ContextMenu("CharacterTapped")]
	public void CharacterTapped()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xBBC19C", Offset = "0xBBC19C", VA = "0xBBC19C")]
	public void CleanUp(bool _which)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xBBB384", Offset = "0xBBB384", VA = "0xBBB384")]
	private void DefaultHeading()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xBBB48C", Offset = "0xBBB48C", VA = "0xBBB48C")]
	public void InitNonCameraTarget([Optional] Transform _target)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xBBC138", Offset = "0xBBC138", VA = "0xBBC138")]
	public void SetTarget()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xBBC248", Offset = "0xBBC248", VA = "0xBBC248")]
	[ContextMenu("SetForwardTarget")]
	public void SetAlwaysForwardTarget()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xBBC424", Offset = "0xBBC424", VA = "0xBBC424")]
	public void IsAlwaysPlayerFocused(bool _playerfocused)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xBBBE60", Offset = "0xBBBE60", VA = "0xBBBE60")]
	public void SetTargetTransform(Transform _targetTrans)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xBBC434", Offset = "0xBBC434", VA = "0xBBC434")]
	public void InitNewHuman(HumanAestheticScriptableObject _humanSObject)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xBBC560", Offset = "0xBBC560", VA = "0xBBC560")]
	private void CheckTurnedOver()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xBBC7F8", Offset = "0xBBC7F8", VA = "0xBBC7F8")]
	[ContextMenu("NoOrientationAtAll")]
	private void NoOrientationAtAll()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xBBC81C", Offset = "0xBBC81C", VA = "0xBBC81C")]
	public void NoOrientationAtAll(bool which)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xBBC858", Offset = "0xBBC858", VA = "0xBBC858")]
	public void BlockJump(bool which)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xBBC8CC", Offset = "0xBBC8CC", VA = "0xBBC8CC")]
	private void ParachuteCheck()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xBBCB38", Offset = "0xBBCB38", VA = "0xBBCB38")]
	private void TurnToCamera()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xBBD1F0", Offset = "0xBBD1F0", VA = "0xBBD1F0")]
	private void Jump()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xBBE1FC", Offset = "0xBBE1FC", VA = "0xBBE1FC")]
	[IteratorStateMachine(typeof(<JumpPhases>d__121))]
	private IEnumerator JumpPhases(Vector3 _value)
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xBBE2BC", Offset = "0xBBE2BC", VA = "0xBBE2BC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xBBDD68", Offset = "0xBBDD68", VA = "0xBBDD68")]
	private Vector3 CheckForCollision()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xBBE320", Offset = "0xBBE320", VA = "0xBBE320")]
	public HumanController()
	{
	}
}
[Token(Token = "0x20001E2")]
public class HumanControllerSetter : MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setCameraTarget;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enableParachute;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool focusOnStart;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xBBE52C", Offset = "0xBBE52C", VA = "0xBBE52C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xBBE634", Offset = "0xBBE634", VA = "0xBBE634")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xBBE6B4", Offset = "0xBBE6B4", VA = "0xBBE6B4")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xBBE7E8", Offset = "0xBBE7E8", VA = "0xBBE7E8")]
	public HumanControllerSetter()
	{
	}
}
[Token(Token = "0x20001E3")]
public class HumanEntitySpawnerChanger : MonoBehaviour
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition entityDefinition;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xBBE7F8", Offset = "0xBBE7F8", VA = "0xBBE7F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xBBE900", Offset = "0xBBE900", VA = "0xBBE900")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xBBE980", Offset = "0xBBE980", VA = "0xBBE980")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xBBEAA4", Offset = "0xBBEAA4", VA = "0xBBEAA4")]
	public HumanEntitySpawnerChanger()
	{
	}
}
[Token(Token = "0x20001E4")]
public class HumansInteraction : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	public enum EventType
	{
		[Token(Token = "0x4000BA5")]
		inWater,
		[Token(Token = "0x4000BA6")]
		outOfWater,
		[Token(Token = "0x4000BA7")]
		hit,
		[Token(Token = "0x4000BA8")]
		tap,
		[Token(Token = "0x4000BA9")]
		grab,
		[Token(Token = "0x4000BAA")]
		squished,
		[Token(Token = "0x4000BAB")]
		humanHitHuman,
		[Token(Token = "0x4000BAC")]
		hurt
	}

	[Token(Token = "0x20001E6")]
	public delegate void CharacterEvent(EventType _which, Collision _collision, bool _grabbed);

	[Token(Token = "0x20001E7")]
	public delegate void CharacterEventGlobal(EventType _which, Collision _collision, bool _grabbed, BubbleToCharacter _bubble);

	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <UnSlap>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _time;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HumansInteraction <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xBC0AFC", Offset = "0xBC0AFC", VA = "0xBC0AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xBC0B44", Offset = "0xBC0B44", VA = "0xBC0B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xBBF5F4", Offset = "0xBBF5F4", VA = "0xBBF5F4")]
		[DebuggerHidden]
		public <UnSlap>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xBC0920", Offset = "0xBC0920", VA = "0xBC0920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xBC0924", Offset = "0xBC0924", VA = "0xBC0924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xBC0B04", Offset = "0xBC0B04", VA = "0xBC0B04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGrabbed;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool inWater;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool inWaterDelayed;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitEventTreshold;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grabbable;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DOTweenAnimation raftAni;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DOTweenAnimation raftAniOut;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool raftVisible;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool lifeSaverEnabled;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool noLifeSaverIfCollisions;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform headPos;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HumanController humanController;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool doSquishing;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool flyingAwayReaction;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string vestSFX;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string mushSFX;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string plopSFX;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BubbleToCharacter characterBubble;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool stopMovementOnGrab;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float flyAwayTriggerVelocity;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Dictionary<Rigidbody, TentacleLogic> myCollisionTentacleDict;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float vel;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool blockBubbleTap;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool flyingReactionTempLocked;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private bool slapped;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	private bool doHitCallback;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody colRB;

	[Token(Token = "0x14000034")]
	public event CharacterEvent OnCharacterEvent
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xBBB8A0", Offset = "0xBBB8A0", VA = "0xBBB8A0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xBBBA1C", Offset = "0xBBBA1C", VA = "0xBBBA1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event CharacterEventGlobal OnCharacterEventGlobal
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xBBEAAC", Offset = "0xBBEAAC", VA = "0xBBEAAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xBBEB64", Offset = "0xBBEB64", VA = "0xBBEB64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xBBEC1C", Offset = "0xBBEC1C", VA = "0xBBEC1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xBBEE74", Offset = "0xBBEE74", VA = "0xBBEE74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xBBEEA0", Offset = "0xBBEEA0", VA = "0xBBEEA0")]
	private void CheckFlyingAway()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xBBEF84", Offset = "0xBBEF84", VA = "0xBBEF84")]
	private void CheckWaterLifeSaver()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xBBF0C0", Offset = "0xBBF0C0", VA = "0xBBF0C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xBBF2C0", Offset = "0xBBF2C0", VA = "0xBBF2C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xBBF4C0", Offset = "0xBBF4C0", VA = "0xBBF4C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xBBF568", Offset = "0xBBF568", VA = "0xBBF568")]
	private void UnSlapDone()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xBB83B4", Offset = "0xBB83B4", VA = "0xBB83B4")]
	public void CallHurtReaction()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xBB8244", Offset = "0xBB8244", VA = "0xBB8244")]
	public void SlappedHard()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xBBF570", Offset = "0xBBF570", VA = "0xBBF570")]
	[IteratorStateMachine(typeof(<UnSlap>d__47))]
	private IEnumerator UnSlap(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xBBBD18", Offset = "0xBBBD18", VA = "0xBBBD18")]
	public void TellHumanHitHuman(Collision _collision, bool _grabbed)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xBBF61C", Offset = "0xBBF61C", VA = "0xBBF61C")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xBBF770", Offset = "0xBBF770", VA = "0xBBF770")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xBBF8B8", Offset = "0xBBF8B8", VA = "0xBBF8B8")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xBBF9D0", Offset = "0xBBF9D0", VA = "0xBBF9D0")]
	[ContextMenu("LogCollisions")]
	private void LogCollisions()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xBBEF94", Offset = "0xBBEF94", VA = "0xBBEF94")]
	private void InitLifeRaft()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xBBF088", Offset = "0xBBF088", VA = "0xBBF088")]
	private void RemoveLifeRaft()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xBBFEC0", Offset = "0xBBFEC0", VA = "0xBBFEC0")]
	public void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xBBCAE8", Offset = "0xBBCAE8", VA = "0xBBCAE8")]
	public int GetCollisions()
	{
		return default(int);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xBC0010", Offset = "0xBC0010", VA = "0xBC0010")]
	public void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xBC040C", Offset = "0xBC040C", VA = "0xBC040C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xBC0448", Offset = "0xBC0448", VA = "0xBC0448")]
	private void CheckExit(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xBC0654", Offset = "0xBC0654", VA = "0xBC0654")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xBC0680", Offset = "0xBC0680", VA = "0xBC0680")]
	public HumansInteraction()
	{
	}
}
[Token(Token = "0x20001E9")]
public class HumanSpawnerChanger : MonoBehaviour
{
	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanAestheticScriptableObject[] humanTypes;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AutoSpawn autoSpawn;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AutoSpawn.ID spawnerID;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xBC0B4C", Offset = "0xBC0B4C", VA = "0xBC0B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xBC0C54", Offset = "0xBC0C54", VA = "0xBC0C54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xBC0D4C", Offset = "0xBC0D4C", VA = "0xBC0D4C")]
	public void OnHumanSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xBC0E70", Offset = "0xBC0E70", VA = "0xBC0E70")]
	public HumanSpawnerChanger()
	{
	}
}
[Token(Token = "0x20001EA")]
public class LanguageSchool : MonoBehaviour
{
	[Token(Token = "0x20001EB")]
	[CompilerGenerated]
	private sealed class <RefreshInputField>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageSchool <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xBC16A8", Offset = "0xBC16A8", VA = "0xBC16A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xBC16F0", Offset = "0xBC16F0", VA = "0xBC16F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xBC109C", Offset = "0xBC109C", VA = "0xBC109C")]
		[DebuggerHidden]
		public <RefreshInputField>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xBC15BC", Offset = "0xBC15BC", VA = "0xBC15BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xBC15C0", Offset = "0xBC15C0", VA = "0xBC15C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xBC16B0", Offset = "0xBC16B0", VA = "0xBC16B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text languageText;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField input;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BubbleToCharacter.ConvoType convoType;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xBC0E78", Offset = "0xBC0E78", VA = "0xBC0E78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xBC0EF8", Offset = "0xBC0EF8", VA = "0xBC0EF8")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xBC1028", Offset = "0xBC1028", VA = "0xBC1028")]
	[IteratorStateMachine(typeof(<RefreshInputField>d__6))]
	private IEnumerator RefreshInputField()
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xBC10C4", Offset = "0xBC10C4", VA = "0xBC10C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xBC1334", Offset = "0xBC1334", VA = "0xBC1334")]
	public void ButtonFill()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xBC1364", Offset = "0xBC1364", VA = "0xBC1364")]
	public void ButtonSay()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xBC1390", Offset = "0xBC1390", VA = "0xBC1390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xBC1534", Offset = "0xBC1534", VA = "0xBC1534")]
	public void DoQuit()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xBC153C", Offset = "0xBC153C", VA = "0xBC153C")]
	public void DoEnglish()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xBC1548", Offset = "0xBC1548", VA = "0xBC1548")]
	public void DoGerman()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xBC1554", Offset = "0xBC1554", VA = "0xBC1554")]
	public void DoFrench()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xBC1560", Offset = "0xBC1560", VA = "0xBC1560")]
	public void DoChinese()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xBC156C", Offset = "0xBC156C", VA = "0xBC156C")]
	public void DoJapanese()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xBC1578", Offset = "0xBC1578", VA = "0xBC1578")]
	public void DoKorean()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xBC1584", Offset = "0xBC1584", VA = "0xBC1584")]
	public void DoRussian()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xBC1590", Offset = "0xBC1590", VA = "0xBC1590")]
	public void DoSpanish()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xBC159C", Offset = "0xBC159C", VA = "0xBC159C")]
	public void DoTraditionalChinese()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xBC15A8", Offset = "0xBC15A8", VA = "0xBC15A8")]
	public void DoBrazilianPortuguese()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xBC15B4", Offset = "0xBC15B4", VA = "0xBC15B4")]
	public LanguageSchool()
	{
	}
}
[Token(Token = "0x20001EC")]
public static class LayerExtensions
{
	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xBC16F8", Offset = "0xBC16F8", VA = "0xBC16F8")]
	public static bool LayerContains(this LayerMask mask, int layer)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001ED")]
public class LevelDirectorRockets_base : LevelDirector_base
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool isUnsolvable;

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xBC1744", Offset = "0xBC1744", VA = "0xBC1744", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xBC1B98", Offset = "0xBC1B98", VA = "0xBC1B98", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xBC1FE8", Offset = "0xBC1FE8", VA = "0xBC1FE8", Slot = "29")]
	public virtual void OutOfRocketsCallback()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xBC200C", Offset = "0xBC200C", VA = "0xBC200C", Slot = "30")]
	public virtual void OutOfRockets()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xBC2114", Offset = "0xBC2114", VA = "0xBC2114", Slot = "31")]
	public virtual void UnSolvable()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xBC2138", Offset = "0xBC2138", VA = "0xBC2138")]
	public LevelDirectorRockets_base()
	{
	}
}
[Token(Token = "0x20001EE")]
public class LevelDirectorRockets_help1 : LevelDirectorRockets_base
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject rocketSlingshot;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool blocked;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private LevelDirector_Resetti resetti;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool helpReceived;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xBC2250", Offset = "0xBC2250", VA = "0xBC2250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xBC23D0", Offset = "0xBC23D0", VA = "0xBC23D0", Slot = "12")]
	public override void CustomResettiAction(LevelDirector_Resetti _resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xBC24C4", Offset = "0xBC24C4", VA = "0xBC24C4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xBC26AC", Offset = "0xBC26AC", VA = "0xBC26AC")]
	public LevelDirectorRockets_help1()
	{
	}
}
[Token(Token = "0x20001EF")]
public class LevelDirector_base : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	public delegate void HostEventDelegate(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara);

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Level myLevel;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumansInteraction levelHost;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public HumanController humanController;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject characterLook;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool initialised;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Header("INFO ONLY NO EDITING")]
	public bool sceneHasTargetManager;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[Header("SETTINGS CHANGED IN CONSTRUCTION TARGET MANAGER")]
	public bool usePhotoCameraValidation;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool autoDropCameraOnTargetsDone;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noCompleteWaitTimer;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[Header("default convos disabled")]
	public bool noAutoMessages;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[Space]
	[Space]
	public bool delayIntroChats;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float introChatsDelayTime;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool startTap;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool suppressIcons;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[Space]
	public bool useIntro;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string introText;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool useBriefing;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string briefingText;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool popUpBriefing;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool pauseAfterIntro;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[Space]
	[Space]
	public bool useTargetDone;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string targetsDoneText;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool popUpTargetDone;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[Space]
	[Space]
	public bool useLevelDoneReaction;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string levelDoneReactionText;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useLevelDone;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string levelDoneText;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool popUpLevelDone;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool pauseAfterLevelDoneReaction;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[Header("changes Level settings for Gamemanager. no auto call without targetManagers ")]
	[Space]
	[Space]
	public bool sceneControllingHost;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool spawnNextButtonAfterLevelDone;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool autoLoadNextLevelAfterLevelDone;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[Header("scene change options (zep/auto) after final convo not before")]
	public bool levelLeaveAfterLevelDoneConvo;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	[Space]
	public bool autoOOB;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	private bool defaultOOBRespawnAfterLevelDone;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color infoColor;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string boxTitle;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string boxResettoTitle;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string boxlevelTitlesTitle;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int timesHostOOBsed;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public int gluedTo;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int tapsOutsideConvo;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public bool targetsDoneHintShown;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public int currentState;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int targetsPlaced;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public string lastEventType;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Space]
	public bool noInitialPlayerFocus;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string characterIdentifier;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("overrides useStartPosition")]
	public bool moveWithPlayer;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool initialStartTapHappened;

	[Token(Token = "0x4000BF3")]
	private const string genericKeyword = "DEF_";

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool hideResettoInfo;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool resettiAsksQuestion;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool resettiMakesDrawing;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string resettiChitChat;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string resetti_hint_question;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string resetti_hint_question_yes;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string resetti_hint_question_no;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string resetti_hint_ready;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string resetti_hint_waiting;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool hideTitleInfo;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool noTitleBeforeLevel;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Title from Story localisationID -> intro-> parsed to m_intro_storyTitle")]
	public string currentTitleMain;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string currentTitleMainID;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string currentTitleTip;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string currentTitleTipID;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Header("Location from Story default titlePlaceID -> city-> parsed to titlePlaceID_city")]
	public string overrideTitleLocationID;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string currentTitleLocation;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string currentTitleLocationID;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public ParachuteRespawnTracker parachuteRespawnTracker;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ConstructionTargetManager ctm;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool levelLeaveAfterLevelDoneConvoHappened;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int updateData;

	[Token(Token = "0x14000036")]
	public static event HostEventDelegate OnHostEvent
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xBC26B0", Offset = "0xBC26B0", VA = "0xBC26B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xBC2768", Offset = "0xBC2768", VA = "0xBC2768")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xBC2820", Offset = "0xBC2820", VA = "0xBC2820")]
	private bool FindCTM()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xBC28F4", Offset = "0xBC28F4", VA = "0xBC28F4")]
	private void TogglePhotoCameraValidationRequired()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xBC2924", Offset = "0xBC2924", VA = "0xBC2924")]
	private void ToggleAutoDropValidationCamera()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xBC2954", Offset = "0xBC2954", VA = "0xBC2954")]
	private void ToggleNoCompleteWaitTimer()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xBC2984", Offset = "0xBC2984", VA = "0xBC2984")]
	private void ToggleResettiAsksQuestion()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xBC2A04", Offset = "0xBC2A04", VA = "0xBC2A04")]
	private void ToggleResettiMakesDrawing()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xBC2A84", Offset = "0xBC2A84", VA = "0xBC2A84")]
	private void TogglenNoTitleBeforeLevel()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xBC2B34", Offset = "0xBC2B34", VA = "0xBC2B34")]
	private void ToggleSpawnNextButtonAfterLevelDone()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xBC2BB4", Offset = "0xBC2BB4", VA = "0xBC2BB4")]
	private void ToggleAutoLoadNextLevelAfterLevelDone()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xBC2B1C", Offset = "0xBC2B1C", VA = "0xBC2B1C")]
	[ContextMenu("InitAssembleConversation")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xBC2C34", Offset = "0xBC2C34", VA = "0xBC2C34")]
	public void InitAssembleConversation()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xBC2FA8", Offset = "0xBC2FA8", VA = "0xBC2FA8")]
	private void RigMoved(RigPosition _rigPosition)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xBC2FE0", Offset = "0xBC2FE0", VA = "0xBC2FE0")]
	public void SimTap()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xBC2FFC", Offset = "0xBC2FFC", VA = "0xBC2FFC", Slot = "4")]
	public virtual void NoPlayerFocus()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xBC3028", Offset = "0xBC3028", VA = "0xBC3028", Slot = "5")]
	public virtual void PlayerFocus()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xBC30DC", Offset = "0xBC30DC", VA = "0xBC30DC", Slot = "6")]
	public virtual void CallHostEvent(string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xBC3160", Offset = "0xBC3160", VA = "0xBC3160", Slot = "7")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xBC3544", Offset = "0xBC3544", VA = "0xBC3544", Slot = "8")]
	public virtual void InitStartTap()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xBC35BC", Offset = "0xBC35BC", VA = "0xBC35BC", Slot = "9")]
	public virtual void InitialTalk()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xBC3660", Offset = "0xBC3660", VA = "0xBC3660")]
	private void DelayStart()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xBC1748", Offset = "0xBC1748", VA = "0xBC1748", Slot = "10")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xBC1B9C", Offset = "0xBC1B9C", VA = "0xBC1B9C", Slot = "11")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xBC38AC", Offset = "0xBC38AC", VA = "0xBC38AC", Slot = "12")]
	public virtual void CustomResettiAction(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xBC38B0", Offset = "0xBC38B0", VA = "0xBC38B0", Slot = "13")]
	public virtual void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xBC38B4", Offset = "0xBC38B4", VA = "0xBC38B4", Slot = "14")]
	public virtual void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xBC2580", Offset = "0xBC2580", VA = "0xBC2580", Slot = "15")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xBC38B8", Offset = "0xBC38B8", VA = "0xBC38B8", Slot = "16")]
	public virtual void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xBC396C", Offset = "0xBC396C", VA = "0xBC396C", Slot = "17")]
	public virtual void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xBC39DC", Offset = "0xBC39DC", VA = "0xBC39DC", Slot = "18")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xBC39E0", Offset = "0xBC39E0", VA = "0xBC39E0", Slot = "19")]
	public virtual void OnWaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xBC39E4", Offset = "0xBC39E4", VA = "0xBC39E4", Slot = "20")]
	public virtual void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xBC3B74", Offset = "0xBC3B74", VA = "0xBC3B74", Slot = "21")]
	public virtual void OnRocketTargetComplete(int done, int needed)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xBC3B8C", Offset = "0xBC3B8C", VA = "0xBC3B8C", Slot = "22")]
	public virtual void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xBC3CDC", Offset = "0xBC3CDC", VA = "0xBC3CDC", Slot = "23")]
	public virtual void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xBC3CE0", Offset = "0xBC3CE0", VA = "0xBC3CE0", Slot = "24")]
	public virtual void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xBC3D30", Offset = "0xBC3D30", VA = "0xBC3D30", Slot = "25")]
	public virtual void SaveAndLoadNextLevel()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xBC3DC8", Offset = "0xBC3DC8", VA = "0xBC3DC8", Slot = "26")]
	public virtual void SaveAndUseLevelEndOption()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xBC3E08", Offset = "0xBC3E08", VA = "0xBC3E08", Slot = "27")]
	public virtual void SaveAndShowNextBalloon()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xBC3E48", Offset = "0xBC3E48", VA = "0xBC3E48", Slot = "28")]
	public virtual void LevelEndOptions()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xBC2DF4", Offset = "0xBC2DF4", VA = "0xBC2DF4")]
	private void CheckTitles()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xBC213C", Offset = "0xBC213C", VA = "0xBC213C")]
	public LevelDirector_base()
	{
	}
}
[Token(Token = "0x20001F1")]
public class LevelDirector_C0000_template : LevelDirector_base
{
	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xBC3EBC", Offset = "0xBC3EBC", VA = "0xBC3EBC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xBC3EC0", Offset = "0xBC3EC0", VA = "0xBC3EC0")]
	public LevelDirector_C0000_template()
	{
	}
}
[Token(Token = "0x20001F2")]
public class LevelDirector_C0015_tripod : LevelDirector_base
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool briefingDone;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool resettoAsked;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int hintsGiven;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int hintWait;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xBC3EC4", Offset = "0xBC3EC4", VA = "0xBC3EC4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xBC3EC8", Offset = "0xBC3EC8", VA = "0xBC3EC8", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xBC3F50", Offset = "0xBC3F50", VA = "0xBC3F50", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xBC3FD8", Offset = "0xBC3FD8", VA = "0xBC3FD8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xBC40D8", Offset = "0xBC40D8", VA = "0xBC40D8")]
	private void ResettoHint()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xBC41F0", Offset = "0xBC41F0", VA = "0xBC41F0")]
	private void ResettoAskedForHelp(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xBC4268", Offset = "0xBC4268", VA = "0xBC4268")]
	public LevelDirector_C0015_tripod()
	{
	}
}
[Token(Token = "0x20001F3")]
public class LevelDirector_C0049_ResettoHelp : LevelDirector_base
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool isHelpLevel;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelResetti;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_Resetti defaultResetti;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool resettiPlaced;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Level helpLevelToLoad;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Level originalLevel;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool helpQuestionAnswered;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Achievement achievement;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Achievement achievementTimeTrial;

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xBC4274", Offset = "0xBC4274", VA = "0xBC4274", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xBC4318", Offset = "0xBC4318", VA = "0xBC4318", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xBC43A0", Offset = "0xBC43A0", VA = "0xBC43A0", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xBC4428", Offset = "0xBC4428", VA = "0xBC4428")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xBC4488", Offset = "0xBC4488", VA = "0xBC4488", Slot = "12")]
	public override void CustomResettiAction(LevelDirector_Resetti _resetti, LevelDirector_Resetti.ResettiState resettiState)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xBC44FC", Offset = "0xBC44FC", VA = "0xBC44FC")]
	private void LoadHelpLevel()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xBC4524", Offset = "0xBC4524", VA = "0xBC4524", Slot = "20")]
	[ContextMenu("OnGameComplete")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xBC4604", Offset = "0xBC4604", VA = "0xBC4604")]
	public LevelDirector_C0049_ResettoHelp()
	{
	}
}
[Token(Token = "0x20001F4")]
public class LevelDirector_C0050_satellite2 : LevelDirector_base
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject chopper;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform targetWaypoint;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool assistantArrived;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool levelComplete;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xBC4608", Offset = "0xBC4608", VA = "0xBC4608")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xBC469C", Offset = "0xBC469C", VA = "0xBC469C")]
	public void WaypointReached(Transform _waypoint)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xBC4750", Offset = "0xBC4750", VA = "0xBC4750")]
	private void AssistantSpeaks()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xBC4920", Offset = "0xBC4920", VA = "0xBC4920", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xBC49A8", Offset = "0xBC49A8", VA = "0xBC49A8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xBC4A84", Offset = "0xBC4A84", VA = "0xBC4A84", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xBC4A8C", Offset = "0xBC4A8C", VA = "0xBC4A8C", Slot = "20")]
	[ContextMenu("GameComplete")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xBC4AC4", Offset = "0xBC4AC4", VA = "0xBC4AC4")]
	public LevelDirector_C0050_satellite2()
	{
	}
}
[Token(Token = "0x20001F5")]
public class LevelDirector_C0062_molluskParty : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <PartySequence>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0062_molluskParty <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xBC56BC", Offset = "0xBC56BC", VA = "0xBC56BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xBC5704", Offset = "0xBC5704", VA = "0xBC5704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xBC4BCC", Offset = "0xBC4BCC", VA = "0xBC4BCC")]
		[DebuggerHidden]
		public <PartySequence>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xBC4F9C", Offset = "0xBC4F9C", VA = "0xBC4F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xBC4FA0", Offset = "0xBC4FA0", VA = "0xBC4FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xBC56C4", Offset = "0xBC56C4", VA = "0xBC56C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base employee1;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base employee2;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base employee3;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base employee4;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<string> chatterDone;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private List<string> chatterRequired;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool talkedToAllEmployees;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float beatTimer;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector3 danceForce;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public HumanController[] dancers;

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xBC4AC8", Offset = "0xBC4AC8", VA = "0xBC4AC8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xBC4B58", Offset = "0xBC4B58", VA = "0xBC4B58")]
	[IteratorStateMachine(typeof(<PartySequence>d__12))]
	private IEnumerator PartySequence()
	{
		return null;
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xBC4BF4", Offset = "0xBC4BF4", VA = "0xBC4BF4")]
	private void Dance()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xBC4CF0", Offset = "0xBC4CF0", VA = "0xBC4CF0")]
	public void WinTheLevelFadeout()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xBC4D78", Offset = "0xBC4D78", VA = "0xBC4D78", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xBC4ED8", Offset = "0xBC4ED8", VA = "0xBC4ED8")]
	public LevelDirector_C0062_molluskParty()
	{
	}
}
[Token(Token = "0x20001F7")]
public class LevelDirector_C0102 : LevelDirector_base
{
	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction[] workers;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AlertAntenna alert;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Cannon cannon;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool buttonPressed;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool isDisqualified;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievementCatchAll;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xBC570C", Offset = "0xBC570C", VA = "0xBC570C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xBC57EC", Offset = "0xBC57EC", VA = "0xBC57EC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xBC58CC", Offset = "0xBC58CC", VA = "0xBC58CC")]
	private void Disqualified(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xBC58D8", Offset = "0xBC58D8", VA = "0xBC58D8")]
	public void CannonDepleted()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xBC5990", Offset = "0xBC5990", VA = "0xBC5990", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xBC59C0", Offset = "0xBC59C0", VA = "0xBC59C0")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xBC5A0C", Offset = "0xBC5A0C", VA = "0xBC5A0C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xBC5AB8", Offset = "0xBC5AB8", VA = "0xBC5AB8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xBC5BF4", Offset = "0xBC5BF4", VA = "0xBC5BF4")]
	public LevelDirector_C0102()
	{
	}
}
[Token(Token = "0x20001F8")]
public class LevelDirector_C0111 : LevelDirector_base
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject specialResetti;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public BirthdayCake cake;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool resettiPlaced;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Achievement achievement;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Drone chopper;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public HumansInteraction mayorAssistant;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int sceneState;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool moveToHouseStarted;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xBC5BFC", Offset = "0xBC5BFC", VA = "0xBC5BFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xBC5C7C", Offset = "0xBC5C7C", VA = "0xBC5C7C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xBC5D08", Offset = "0xBC5D08", VA = "0xBC5D08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xBC5D68", Offset = "0xBC5D68", VA = "0xBC5D68", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xBC5E00", Offset = "0xBC5E00", VA = "0xBC5E00")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xBC5ED4", Offset = "0xBC5ED4", VA = "0xBC5ED4")]
	[ContextMenu("SpawnMayorAssistant")]
	public void SpawnMayorAssistant()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xBC5F00", Offset = "0xBC5F00", VA = "0xBC5F00")]
	private void SpawnAssistant()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xBC5F78", Offset = "0xBC5F78", VA = "0xBC5F78")]
	private void AssistantTalks()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xBC60A4", Offset = "0xBC60A4", VA = "0xBC60A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xBC6254", Offset = "0xBC6254", VA = "0xBC6254", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xBC6258", Offset = "0xBC6258", VA = "0xBC6258")]
	private void IntroChat()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xBC6378", Offset = "0xBC6378", VA = "0xBC6378", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xBC6C7C", Offset = "0xBC6C7C", VA = "0xBC6C7C")]
	private void BackFade()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xBC6CBC", Offset = "0xBC6CBC", VA = "0xBC6CBC", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xBC6E08", Offset = "0xBC6E08", VA = "0xBC6E08")]
	private void DestinationReachedHouse(string _id)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xBC6B74", Offset = "0xBC6B74", VA = "0xBC6B74")]
	private void MoveToHouse()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xBC6FD8", Offset = "0xBC6FD8", VA = "0xBC6FD8", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xBC72C0", Offset = "0xBC72C0", VA = "0xBC72C0")]
	public LevelDirector_C0111()
	{
	}
}
[Token(Token = "0x20001F9")]
public class LevelDirector_C0127_Host : LevelDirector_base
{
	[Token(Token = "0x20001FA")]
	private enum State
	{
		[Token(Token = "0x4000C43")]
		None,
		[Token(Token = "0x4000C44")]
		WaitForConvo,
		[Token(Token = "0x4000C45")]
		WaitForConvoDone,
		[Token(Token = "0x4000C46")]
		WaitForRemote,
		[Token(Token = "0x4000C47")]
		WaitForRemoteDone,
		[Token(Token = "0x4000C48")]
		WaitForWave,
		[Token(Token = "0x4000C49")]
		WaitForWaveDone
	}

	[Token(Token = "0x20001FB")]
	[CompilerGenerated]
	private sealed class <MayorConvo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0127_Host <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xBC8224", Offset = "0xBC8224", VA = "0xBC8224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xBC826C", Offset = "0xBC826C", VA = "0xBC826C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xBC7828", Offset = "0xBC7828", VA = "0xBC7828")]
		[DebuggerHidden]
		public <MayorConvo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xBC7AB8", Offset = "0xBC7AB8", VA = "0xBC7AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xBC7ABC", Offset = "0xBC7ABC", VA = "0xBC7ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xBC822C", Offset = "0xBC822C", VA = "0xBC822C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject heloGroup;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject unveilThis;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Achievement achievement;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private State state;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private BubbleToCharacter convoDoneBubble;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string convoID;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float timer;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xBC72D0", Offset = "0xBC72D0", VA = "0xBC72D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xBC7308", Offset = "0xBC7308", VA = "0xBC7308", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xBC73B0", Offset = "0xBC73B0", VA = "0xBC73B0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xBC743C", Offset = "0xBC743C", VA = "0xBC743C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xBC74C8", Offset = "0xBC74C8", VA = "0xBC74C8")]
	private bool WaitForWaveDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xBC75DC", Offset = "0xBC75DC", VA = "0xBC75DC")]
	private bool WaitForConvoMayorDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xBC767C", Offset = "0xBC767C", VA = "0xBC767C")]
	private bool WaitForConvoSistDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xBC76B4", Offset = "0xBC76B4", VA = "0xBC76B4")]
	private bool WaitForConvoLuskDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xBC760C", Offset = "0xBC760C", VA = "0xBC760C")]
	private bool _WaitForConvoDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xBC76EC", Offset = "0xBC76EC", VA = "0xBC76EC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xBC778C", Offset = "0xBC778C", VA = "0xBC778C")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xBC77AC", Offset = "0xBC77AC", VA = "0xBC77AC")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xBC733C", Offset = "0xBC733C", VA = "0xBC733C")]
	[IteratorStateMachine(typeof(<MayorConvo>d__23))]
	private IEnumerator MayorConvo()
	{
		return null;
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xBC7850", Offset = "0xBC7850", VA = "0xBC7850")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xBC78B8", Offset = "0xBC78B8", VA = "0xBC78B8")]
	private void TalkSist(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xBC794C", Offset = "0xBC794C", VA = "0xBC794C")]
	private void TalkLusk(string key)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xBC79D4", Offset = "0xBC79D4", VA = "0xBC79D4")]
	private void TalkMayor(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xBC7A60", Offset = "0xBC7A60", VA = "0xBC7A60")]
	public LevelDirector_C0127_Host()
	{
	}
}
[Token(Token = "0x20001FC")]
public class LevelDirector_C0128_CrystalCrisis : LevelDirector_base
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool levelDone;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool roofIsOpen;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumanEmoSFX angryMayorEMOSFX;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool firstBabbleDone;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool over;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xBC8274", Offset = "0xBC8274", VA = "0xBC8274", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xBC8314", Offset = "0xBC8314", VA = "0xBC8314")]
	private void PostBabbleTalk()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xBC838C", Offset = "0xBC838C", VA = "0xBC838C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xBC843C", Offset = "0xBC843C", VA = "0xBC843C")]
	public void OpenRoof()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xBC84B4", Offset = "0xBC84B4", VA = "0xBC84B4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xBC8564", Offset = "0xBC8564", VA = "0xBC8564")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xBC8698", Offset = "0xBC8698", VA = "0xBC8698", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xBC877C", Offset = "0xBC877C", VA = "0xBC877C")]
	public LevelDirector_C0128_CrystalCrisis()
	{
	}
}
[Token(Token = "0x20001FD")]
public class LevelDirector_C0129_salty_lusk : LevelDirector_Cutscene
{
	[Token(Token = "0x20001FE")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0129_salty_lusk <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xBC92D8", Offset = "0xBC92D8", VA = "0xBC92D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xBC9320", Offset = "0xBC9320", VA = "0xBC9320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xBC8B8C", Offset = "0xBC8B8C", VA = "0xBC8B8C")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xBC8BBC", Offset = "0xBC8BBC", VA = "0xBC8BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xBC8BC0", Offset = "0xBC8BC0", VA = "0xBC8BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xBC92E0", Offset = "0xBC92E0", VA = "0xBC92E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public NoTrespassing droneTrigger;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Grabbable drone;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool laserArmed;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	private bool droneGrabbed;

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xBC8784", Offset = "0xBC8784", VA = "0xBC8784", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xBC8824", Offset = "0xBC8824", VA = "0xBC8824", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xBC88BC", Offset = "0xBC88BC", VA = "0xBC88BC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xBC8954", Offset = "0xBC8954", VA = "0xBC8954")]
	private void OnGrabbed(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xBC8AD8", Offset = "0xBC8AD8", VA = "0xBC8AD8")]
	private void DropMe()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xBC8A68", Offset = "0xBC8A68", VA = "0xBC8A68")]
	private void HurtRB(Rigidbody _rb)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xBC8B04", Offset = "0xBC8B04", VA = "0xBC8B04")]
	private void ZapRandomTip()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xBC87B0", Offset = "0xBC87B0", VA = "0xBC87B0")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__11))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xBC8BB4", Offset = "0xBC8BB4", VA = "0xBC8BB4")]
	public LevelDirector_C0129_salty_lusk()
	{
	}
}
[Token(Token = "0x20001FF")]
public class LevelDirector_C0140_notExtinct : LevelDirector_Cutscene
{
	[Token(Token = "0x2000200")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0140_notExtinct <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xBC9764", Offset = "0xBC9764", VA = "0xBC9764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xBC97AC", Offset = "0xBC97AC", VA = "0xBC97AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xBC93D0", Offset = "0xBC93D0", VA = "0xBC93D0")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xBC9400", Offset = "0xBC9400", VA = "0xBC9400", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xBC9404", Offset = "0xBC9404", VA = "0xBC9404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xBC976C", Offset = "0xBC976C", VA = "0xBC976C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xBC9328", Offset = "0xBC9328", VA = "0xBC9328", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xBC9330", Offset = "0xBC9330", VA = "0xBC9330", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xBC935C", Offset = "0xBC935C", VA = "0xBC935C")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__2))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xBC93F8", Offset = "0xBC93F8", VA = "0xBC93F8")]
	public LevelDirector_C0140_notExtinct()
	{
	}
}
[Token(Token = "0x2000201")]
public class LevelDirector_C0200_AntiGravExperiment : LevelDirector_base
{
	[Token(Token = "0x2000202")]
	public delegate void PostSpawnResettiDelegate(LevelDirector_Resetti resettiLevelDir);

	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <FinalSequence>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0200_AntiGravExperiment <>4__this;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <targetScaleWhite>5__2;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <blackHoleSFXPlayed>5__4;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xBCB614", Offset = "0xBCB614", VA = "0xBCB614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xBCB65C", Offset = "0xBCB65C", VA = "0xBCB65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xBCA248", Offset = "0xBCA248", VA = "0xBCA248")]
		[DebuggerHidden]
		public <FinalSequence>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xBCB090", Offset = "0xBCB090", VA = "0xBCB090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xBCB094", Offset = "0xBCB094", VA = "0xBCB094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xBCB61C", Offset = "0xBCB61C", VA = "0xBCB61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget reactorTarget;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget reactorChargedTarget;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget connectMachineTarget;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public CrystalEnergyBase reactorEnergyBase;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject inPlaceIndicator;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public EightSegmentDisplay reactorCharge;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Glue slingConnector;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public int fullCharge;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Rigidbody reactorRB;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float pullInFactor;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ContainmentEffect containmentEffects;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float lastEnergy;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool hasImploded;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
	private bool finalSequence;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject connectExplosion;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[EventRef]
	public string connectToReactor;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public AlertAntenna alert;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Animation connectorLatch;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float originalDrag;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject connectedParticles;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Transform whiteField;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Transform blackField;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float outOfCenterCounter;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Vector3 dir;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int convoState;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private int currentEnergy;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool connectLatchOpen;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public AnimationCurve blackFieldScale;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x14000037")]
	public static event PostSpawnResettiDelegate OnPostSpawnResetti
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xBC9ACC", Offset = "0xBC9ACC", VA = "0xBC9ACC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xBC9B84", Offset = "0xBC9B84", VA = "0xBC9B84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xBC97B4", Offset = "0xBC97B4", VA = "0xBC97B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xBC98B0", Offset = "0xBC98B0", VA = "0xBC98B0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xBC9970", Offset = "0xBC9970", VA = "0xBC9970")]
	private void StartConversation()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xBC9C3C", Offset = "0xBC9C3C", VA = "0xBC9C3C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xBC9D30", Offset = "0xBC9D30", VA = "0xBC9D30", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xBC9E24", Offset = "0xBC9E24", VA = "0xBC9E24")]
	private void CallSpawnResetti(LevelDirector_Resetti resettiLevelDir)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xBC9A54", Offset = "0xBC9A54", VA = "0xBC9A54")]
	private void BriefingReactorPosition()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xBC9E34", Offset = "0xBC9E34", VA = "0xBC9E34")]
	private void BriefingConnectCrystals()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xBC9EAC", Offset = "0xBC9EAC", VA = "0xBC9EAC")]
	private void ConnectCrystalsReaction()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xBCA010", Offset = "0xBCA010", VA = "0xBCA010")]
	private void LatchRemovedConnectBriefing()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xBCA0C8", Offset = "0xBCA0C8", VA = "0xBCA0C8")]
	[ContextMenu("StartAntiGravCreation")]
	private void StartAntiGravCreation()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xBCA1D4", Offset = "0xBCA1D4", VA = "0xBCA1D4")]
	[IteratorStateMachine(typeof(<FinalSequence>d__45))]
	private IEnumerator FinalSequence()
	{
		return null;
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xBCA270", Offset = "0xBCA270", VA = "0xBCA270")]
	[ContextMenu("FinalSequence")]
	private void DebugFinalSequence()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xBCA2BC", Offset = "0xBCA2BC", VA = "0xBCA2BC")]
	[ContextMenu("StartConnectMachine")]
	private void StartConnectMachine()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xBCA36C", Offset = "0xBCA36C", VA = "0xBCA36C")]
	private void LatchRemove()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xBCA4A8", Offset = "0xBCA4A8", VA = "0xBCA4A8")]
	private void DoPullin()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xBCA568", Offset = "0xBCA568", VA = "0xBCA568")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xBCA654", Offset = "0xBCA654", VA = "0xBCA654", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xBCA794", Offset = "0xBCA794", VA = "0xBCA794")]
	[ContextMenu("FullCharge")]
	private void FullPower()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xBCA79C", Offset = "0xBCA79C", VA = "0xBCA79C")]
	private void CrystalEnergyChange(int _energy)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xBCAD7C", Offset = "0xBCAD7C", VA = "0xBCAD7C")]
	[ContextMenu("Start Pull In")]
	private void AllCrystalsConnected()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xBCAA74", Offset = "0xBCAA74", VA = "0xBCAA74")]
	private void DisableBurnoutDisconnect(bool which, bool noUnglueAllowed = false)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xBCAB1C", Offset = "0xBCAB1C", VA = "0xBCAB1C")]
	private void LockSlingsAttachedToCrystals()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xBCA610", Offset = "0xBCA610", VA = "0xBCA610")]
	private bool LatchReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xBCAE3C", Offset = "0xBCAE3C", VA = "0xBCAE3C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xBCAF28", Offset = "0xBCAF28", VA = "0xBCAF28")]
	public LevelDirector_C0200_AntiGravExperiment()
	{
	}
}
[Token(Token = "0x2000204")]
public class LevelDirector_C0201_AntiGravReveal : LevelDirector_base
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform attractTo;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Rigidbody reactor;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Rigidbody reactorLid;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Glue antiGravMagnet;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float pullInFactor;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ConstructionTarget grabReactor;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ConstructionTarget connectionTargetAntiGrav;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionTarget noConnectionTargetAntiGrav;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public ConstructionTarget connectionTargetHost;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 dir;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool failed;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	private bool allTargetsAttached;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Achievement achievement;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool levelDone;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	private bool molluskAttached;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	private bool stickMolluskActive;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
	private bool magnetDisconnected;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xBCB664", Offset = "0xBCB664", VA = "0xBCB664", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xBCB6F0", Offset = "0xBCB6F0", VA = "0xBCB6F0")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xBCB7A4", Offset = "0xBCB7A4", VA = "0xBCB7A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xBCB7A8", Offset = "0xBCB7A8", VA = "0xBCB7A8")]
	private void DoPullin()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xBCB8F0", Offset = "0xBCB8F0", VA = "0xBCB8F0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xBCB9D0", Offset = "0xBCB9D0", VA = "0xBCB9D0", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xBCBAB0", Offset = "0xBCBAB0", VA = "0xBCBAB0")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xBCBB34", Offset = "0xBCBB34", VA = "0xBCBB34")]
	private void FailLevel()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xBCBBC0", Offset = "0xBCBBC0", VA = "0xBCBBC0")]
	private void ObjectGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xBCBDA0", Offset = "0xBCBDA0", VA = "0xBCBDA0")]
	private void StickMollusk()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xBCBE2C", Offset = "0xBCBE2C", VA = "0xBCBE2C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xBCC124", Offset = "0xBCC124", VA = "0xBCC124")]
	private void TakePhoto()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xBCC1D4", Offset = "0xBCC1D4", VA = "0xBCC1D4", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xBCC34C", Offset = "0xBCC34C", VA = "0xBCC34C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xBCC410", Offset = "0xBCC410", VA = "0xBCC410")]
	public LevelDirector_C0201_AntiGravReveal()
	{
	}
}
[Token(Token = "0x2000205")]
public class LevelDirector_C0203_fishingShips : LevelDirector_base
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<GameObject> ships;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public CategoryDefinition category;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool failed;

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xBCC420", Offset = "0xBCC420", VA = "0xBCC420", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xBCC43C", Offset = "0xBCC43C", VA = "0xBCC43C")]
	private void FindShips()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xBCC6AC", Offset = "0xBCC6AC", VA = "0xBCC6AC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xBCC78C", Offset = "0xBCC78C", VA = "0xBCC78C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xBCC86C", Offset = "0xBCC86C", VA = "0xBCC86C")]
	private void BeforeDestroy(GameObject _go)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xBCC9A4", Offset = "0xBCC9A4", VA = "0xBCC9A4")]
	private void VehicleDamageStatusChange(VehicleDamage vehic, VehicleDamage.Status damageStatus)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xBCC870", Offset = "0xBCC870", VA = "0xBCC870")]
	private void CheckShipsList(GameObject _go)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xBCC9E0", Offset = "0xBCC9E0", VA = "0xBCC9E0")]
	public LevelDirector_C0203_fishingShips()
	{
	}
}
[Token(Token = "0x2000206")]
public class LevelDirector_C0204_sisterReconcilation : LevelDirector_Cutscene
{
	[Token(Token = "0x2000207")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0204_sisterReconcilation <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xBCDA34", Offset = "0xBCDA34", VA = "0xBCDA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xBCDA7C", Offset = "0xBCDA7C", VA = "0xBCDA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xBCCA88", Offset = "0xBCCA88", VA = "0xBCCA88")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xBCCBC8", Offset = "0xBCCBC8", VA = "0xBCCBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xBCCBCC", Offset = "0xBCCBCC", VA = "0xBCCBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xBCDA3C", Offset = "0xBCDA3C", VA = "0xBCDA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool hugCheck;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool hugHappened;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xBCC9E8", Offset = "0xBCC9E8", VA = "0xBCC9E8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xBCCA14", Offset = "0xBCCA14", VA = "0xBCCA14")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__3))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xBCCAB0", Offset = "0xBCCAB0", VA = "0xBCCAB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xBCCBC0", Offset = "0xBCCBC0", VA = "0xBCCBC0")]
	public LevelDirector_C0204_sisterReconcilation()
	{
	}
}
[Token(Token = "0x2000208")]
public class LevelDirector_C0555_Host : LevelDirector_base
{
	[Token(Token = "0x2000209")]
	private enum State
	{
		[Token(Token = "0x4000CA9")]
		None,
		[Token(Token = "0x4000CAA")]
		WaitForConvo,
		[Token(Token = "0x4000CAB")]
		WaitForConvoDone,
		[Token(Token = "0x4000CAC")]
		WaitForRemote,
		[Token(Token = "0x4000CAD")]
		WaitForRemoteDone
	}

	[Token(Token = "0x200020A")]
	[CompilerGenerated]
	private sealed class <ProfConvo>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0555_Host <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xBCF27C", Offset = "0xBCF27C", VA = "0xBCF27C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0xBCF2C4", Offset = "0xBCF2C4", VA = "0xBCF2C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xBCDF88", Offset = "0xBCDF88", VA = "0xBCDF88")]
		[DebuggerHidden]
		public <ProfConvo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xBCE498", Offset = "0xBCE498", VA = "0xBCE498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xBCE49C", Offset = "0xBCE49C", VA = "0xBCE49C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xBCF284", Offset = "0xBCF284", VA = "0xBCF284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform focus;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Light directionalLight;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SpriteRenderer slideTarget;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite[] slides;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int currentSlide;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string convoID;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Achievement achievement;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string convoIDProf;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string convoIDLusk;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private string convoIDSister;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private State state;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private BubbleToCharacter convoDoneBubble;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xBCDA84", Offset = "0xBCDA84", VA = "0xBCDA84", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xBCDA8C", Offset = "0xBCDA8C", VA = "0xBCDA8C", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xBCDBA4", Offset = "0xBCDBA4", VA = "0xBCDBA4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xBCDC30", Offset = "0xBCDC30", VA = "0xBCDC30")]
	private bool WaitForConvoProfDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xBCDCE0", Offset = "0xBCDCE0", VA = "0xBCDCE0")]
	private bool WaitForConvoSistDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xBCDD28", Offset = "0xBCDD28", VA = "0xBCDD28")]
	private bool WaitForConvoLuskDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xBCDC70", Offset = "0xBCDC70", VA = "0xBCDC70")]
	private bool _WaitForConvoDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xBCDD70", Offset = "0xBCDD70", VA = "0xBCDD70", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xBCDE10", Offset = "0xBCDE10", VA = "0xBCDE10")]
	private void LookAtScreen()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xBCDE58", Offset = "0xBCDE58", VA = "0xBCDE58")]
	private void PlayerFocusBoth()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xBCDE90", Offset = "0xBCDE90", VA = "0xBCDE90")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xBCDEB0", Offset = "0xBCDEB0", VA = "0xBCDEB0")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xBCDF2C", Offset = "0xBCDF2C", VA = "0xBCDF2C")]
	private void NextSlide()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xBCDB30", Offset = "0xBCDB30", VA = "0xBCDB30")]
	[IteratorStateMachine(typeof(<ProfConvo>d__28))]
	private IEnumerator ProfConvo()
	{
		return null;
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xBCDFB0", Offset = "0xBCDFB0", VA = "0xBCDFB0")]
	private void LightFLick()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xBCE17C", Offset = "0xBCE17C", VA = "0xBCE17C")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xBCE1E4", Offset = "0xBCE1E4", VA = "0xBCE1E4")]
	private void TalkSist(string key)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xBCE264", Offset = "0xBCE264", VA = "0xBCE264")]
	private void TalkLusk(string key)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xBCE2E4", Offset = "0xBCE2E4", VA = "0xBCE2E4")]
	private void TalkProf(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xBCE368", Offset = "0xBCE368", VA = "0xBCE368")]
	public LevelDirector_C0555_Host()
	{
	}
}
[Token(Token = "0x200020B")]
public class LevelDirector_C0556_Host : LevelDirector_base
{
	[Token(Token = "0x200020C")]
	private enum State
	{
		[Token(Token = "0x4000CC0")]
		None,
		[Token(Token = "0x4000CC1")]
		WaitForConvo,
		[Token(Token = "0x4000CC2")]
		WaitForConvoDone,
		[Token(Token = "0x4000CC3")]
		WaitForRemote,
		[Token(Token = "0x4000CC4")]
		WaitForRemoteDone,
		[Token(Token = "0x4000CC5")]
		WaitForTarget,
		[Token(Token = "0x4000CC6")]
		WaitForTargetDone
	}

	[Token(Token = "0x200020D")]
	[CompilerGenerated]
	private sealed class <ProfConvo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0556_Host <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xBD0D84", Offset = "0xBD0D84", VA = "0xBD0D84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xBD0DCC", Offset = "0xBD0DCC", VA = "0xBD0DCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xBCF668", Offset = "0xBCF668", VA = "0xBCF668")]
		[DebuggerHidden]
		public <ProfConvo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xBCFC90", Offset = "0xBCFC90", VA = "0xBCFC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xBCFC94", Offset = "0xBCFC94", VA = "0xBCFC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xBD0D8C", Offset = "0xBD0D8C", VA = "0xBD0D8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base lusk;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base mullet;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public LevelDirector_base assi;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject assiObject;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Rigidbody dome;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Rigidbody mulletRigidBody;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SpriteRenderer slideTarget;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite[] slides;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject babbleField;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform focus;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Light directionalLight;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int currentSlide;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private string waitFormconvoID;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private State state;

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xBCF2CC", Offset = "0xBCF2CC", VA = "0xBCF2CC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xBCF2F4", Offset = "0xBCF2F4", VA = "0xBCF2F4", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xBCF420", Offset = "0xBCF420", VA = "0xBCF420", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xBCF4AC", Offset = "0xBCF4AC", VA = "0xBCF4AC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xBCF4E0", Offset = "0xBCF4E0", VA = "0xBCF4E0")]
	private void GenericChannelRemote_OnRemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xBCF500", Offset = "0xBCF500", VA = "0xBCF500", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xBCF51C", Offset = "0xBCF51C", VA = "0xBCF51C")]
	private bool WaitForRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xBCF598", Offset = "0xBCF598", VA = "0xBCF598")]
	private bool WaitForTargetComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xBCF614", Offset = "0xBCF614", VA = "0xBCF614")]
	private void NextSlide()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xBCF3AC", Offset = "0xBCF3AC", VA = "0xBCF3AC")]
	[IteratorStateMachine(typeof(<ProfConvo>d__24))]
	private IEnumerator ProfConvo()
	{
		return null;
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xBCF690", Offset = "0xBCF690", VA = "0xBCF690")]
	private void LightFLick()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xBCF85C", Offset = "0xBCF85C", VA = "0xBCF85C")]
	private void TalkMull(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xBCF8D8", Offset = "0xBCF8D8", VA = "0xBCF8D8")]
	private void TalkLusk(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xBCF954", Offset = "0xBCF954", VA = "0xBCF954")]
	private void TalkProf(string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xBCF9C8", Offset = "0xBCF9C8", VA = "0xBCF9C8")]
	private bool WaitForConvoProfDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xBCFAC8", Offset = "0xBCFAC8", VA = "0xBCFAC8")]
	private bool WaitForConvoMullDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xBCFAE8", Offset = "0xBCFAE8", VA = "0xBCFAE8")]
	private bool WaitForConvoLuskDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xBCFB08", Offset = "0xBCFB08", VA = "0xBCFB08")]
	private bool WaitForConvoAssiDone(string key, bool immediate = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xBCFB28", Offset = "0xBCFB28", VA = "0xBCFB28")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xBCF9D4", Offset = "0xBCF9D4", VA = "0xBCF9D4")]
	private bool WaitForConvoDone(string key, bool immediate, HumansInteraction host)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xBCFB90", Offset = "0xBCFB90", VA = "0xBCFB90")]
	public LevelDirector_C0556_Host()
	{
	}
}
[Token(Token = "0x200020E")]
public class LevelDirector_C0557_BigReveal2_ChezLusk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x200020F")]
	[CompilerGenerated]
	private sealed class <MainConversation>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C0557_BigReveal2_ChezLusk <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xBD122C", Offset = "0xBD122C", VA = "0xBD122C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xBD1274", Offset = "0xBD1274", VA = "0xBD1274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xBD0E8C", Offset = "0xBD0E8C", VA = "0xBD0E8C")]
		[DebuggerHidden]
		public <MainConversation>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xBD0F90", Offset = "0xBD0F90", VA = "0xBD0F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xBD0F94", Offset = "0xBD0F94", VA = "0xBD0F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xBD1234", Offset = "0xBD1234", VA = "0xBD1234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000210")]
	[CompilerGenerated]
	private sealed class <DemoEndOfLevel>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xBD14D0", Offset = "0xBD14D0", VA = "0xBD14D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xBD1518", Offset = "0xBD1518", VA = "0xBD1518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xBD0F14", Offset = "0xBD0F14", VA = "0xBD0F14")]
		[DebuggerHidden]
		public <DemoEndOfLevel>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xBD127C", Offset = "0xBD127C", VA = "0xBD127C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xBD1280", Offset = "0xBD1280", VA = "0xBD1280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xBD14D8", Offset = "0xBD14D8", VA = "0xBD14D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject sharks;

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xBD0DD4", Offset = "0xBD0DD4", VA = "0xBD0DD4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xBD0E18", Offset = "0xBD0E18", VA = "0xBD0E18")]
	[IteratorStateMachine(typeof(<MainConversation>d__2))]
	private IEnumerator MainConversation()
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xBD0EB4", Offset = "0xBD0EB4", VA = "0xBD0EB4")]
	[IteratorStateMachine(typeof(<DemoEndOfLevel>d__3))]
	private IEnumerator DemoEndOfLevel()
	{
		return null;
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xBD0F3C", Offset = "0xBD0F3C", VA = "0xBD0F3C")]
	[ContextMenu("StartDemoEndOfLevel")]
	private void StartDemoEndOfLevel()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xBD0F88", Offset = "0xBD0F88", VA = "0xBD0F88")]
	public LevelDirector_C0557_BigReveal2_ChezLusk()
	{
	}
}
[Token(Token = "0x2000211")]
public class LevelDirector_C0999 : LevelDirector_base
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Story_UFODiscovery ufoRip;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int excavState;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public IntroUfoTouch ufo;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<string> introWords;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string _words;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Level customLevel;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject conveyorBrokenParticles;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject conveyorSFX;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject touchFX;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Color lightTargetColor;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject craneSFX;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject tipSmokeL;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject tipSmokeR;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SmokingTips tipsOnFire;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Achievement achievement;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Light[] sceneLights;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int containerHint;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool getOutCrystalCalled;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	private bool craneDown;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float craneSpeed;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool tentacleContainerTouch;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float intensity;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool wasTouched;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Tween tweenPos;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Tween tweenRot;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xBD1520", Offset = "0xBD1520", VA = "0xBD1520", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xBD1648", Offset = "0xBD1648", VA = "0xBD1648")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xBD1DD0", Offset = "0xBD1DD0", VA = "0xBD1DD0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xBD1EF4", Offset = "0xBD1EF4", VA = "0xBD1EF4")]
	private void IntroBriefing()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xBD2020", Offset = "0xBD2020", VA = "0xBD2020", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xBD22E8", Offset = "0xBD22E8", VA = "0xBD22E8")]
	private void KeepPullingChatter()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xBD23B8", Offset = "0xBD23B8", VA = "0xBD23B8")]
	private void UFODiscoveredChatter()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xBD2478", Offset = "0xBD2478", VA = "0xBD2478")]
	private void FoundChatter()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xBD2538", Offset = "0xBD2538", VA = "0xBD2538")]
	private void ContainerChatter()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xBD1D18", Offset = "0xBD1D18", VA = "0xBD1D18")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xBD26B0", Offset = "0xBD26B0", VA = "0xBD26B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xBD27DC", Offset = "0xBD27DC", VA = "0xBD27DC")]
	public void TentacleTouchContainer()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xBD296C", Offset = "0xBD296C", VA = "0xBD296C")]
	private void LosenContainer(int _times)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xBD2AE0", Offset = "0xBD2AE0", VA = "0xBD2AE0")]
	private void CaveIn()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xBD2D68", Offset = "0xBD2D68", VA = "0xBD2D68")]
	private void CaveInNext()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xBD2C78", Offset = "0xBD2C78", VA = "0xBD2C78")]
	private void ChangeLights()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xBD2E4C", Offset = "0xBD2E4C", VA = "0xBD2E4C")]
	private void MakeAllSloppy()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xBD2EC0", Offset = "0xBD2EC0", VA = "0xBD2EC0")]
	public void Touched()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xBD30D8", Offset = "0xBD30D8", VA = "0xBD30D8")]
	private void TouchedReaction()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xBD3268", Offset = "0xBD3268", VA = "0xBD3268")]
	private void TouchedWords()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xBD336C", Offset = "0xBD336C", VA = "0xBD336C")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xBD33A4", Offset = "0xBD33A4", VA = "0xBD33A4")]
	private void PreLoad(bool editorStart)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xBD3418", Offset = "0xBD3418", VA = "0xBD3418")]
	public LevelDirector_C0999()
	{
	}
}
[Token(Token = "0x2000212")]
public class LevelDirector_C1 : LevelDirector_base
{
	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <GlueSpawn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C1 <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xBD4428", Offset = "0xBD4428", VA = "0xBD4428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xBD4470", Offset = "0xBD4470", VA = "0xBD4470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xBD3C78", Offset = "0xBD3C78", VA = "0xBD3C78")]
		[DebuggerHidden]
		public <GlueSpawn>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xBD41A8", Offset = "0xBD41A8", VA = "0xBD41A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xBD41AC", Offset = "0xBD41AC", VA = "0xBD41AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xBD4430", Offset = "0xBD4430", VA = "0xBD4430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C1 <>4__this;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xBD456C", Offset = "0xBD456C", VA = "0xBD456C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xBD45B4", Offset = "0xBD45B4", VA = "0xBD45B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xBD4178", Offset = "0xBD4178", VA = "0xBD4178")]
		[DebuggerHidden]
		public <DelayedReaction>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xBD4478", Offset = "0xBD4478", VA = "0xBD4478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xBD447C", Offset = "0xBD447C", VA = "0xBD447C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xBD4574", Offset = "0xBD4574", VA = "0xBD4574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform humanFirstSpawn;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject targets;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform magnetsSpawn;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject magnetPrefab;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject constructionCameraPrefab;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform cameraSpawn;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject airplane;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool dropped;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int lastTargetsPlace;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xBD343C", Offset = "0xBD343C", VA = "0xBD343C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xBD3474", Offset = "0xBD3474", VA = "0xBD3474", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xBD34F4", Offset = "0xBD34F4", VA = "0xBD34F4")]
	private void ActivateHost()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xBD3698", Offset = "0xBD3698", VA = "0xBD3698")]
	private void DoBriefing()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xBD373C", Offset = "0xBD373C", VA = "0xBD373C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xBD38AC", Offset = "0xBD38AC", VA = "0xBD38AC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xBD3A24", Offset = "0xBD3A24", VA = "0xBD3A24")]
	private void TargetBriefing()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xBD3B3C", Offset = "0xBD3B3C", VA = "0xBD3B3C", Slot = "14")]
	public override void OnGluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xBD3AC8", Offset = "0xBD3AC8", VA = "0xBD3AC8")]
	[IteratorStateMachine(typeof(<GlueSpawn>d__16))]
	private IEnumerator GlueSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xBD3CA0", Offset = "0xBD3CA0", VA = "0xBD3CA0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xBD3FD0", Offset = "0xBD3FD0", VA = "0xBD3FD0", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xBD40D8", Offset = "0xBD40D8", VA = "0xBD40D8")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__20))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xBD41A0", Offset = "0xBD41A0", VA = "0xBD41A0")]
	public LevelDirector_C1()
	{
	}
}
[Token(Token = "0x2000215")]
public class LevelDirector_C100 : LevelDirector_base
{
	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject helo;

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xBD45BC", Offset = "0xBD45BC", VA = "0xBD45BC")]
	[ContextMenu("TestPhotoLines")]
	private void TestPhotoLines()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xBD4638", Offset = "0xBD4638", VA = "0xBD4638")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xBD466C", Offset = "0xBD466C", VA = "0xBD466C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xBD4720", Offset = "0xBD4720", VA = "0xBD4720", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xBD4798", Offset = "0xBD4798", VA = "0xBD4798")]
	public LevelDirector_C100()
	{
	}
}
[Token(Token = "0x2000216")]
public class LevelDirector_C101_simpleThrowing_resetto : LevelDirector_base
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTargetManual resettoChatTarget;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject throwingTargets;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject resettoHintArrow;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool askedForHint;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xBD47A0", Offset = "0xBD47A0", VA = "0xBD47A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xBD47C0", Offset = "0xBD47C0", VA = "0xBD47C0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xBD4804", Offset = "0xBD4804", VA = "0xBD4804", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xBD4910", Offset = "0xBD4910", VA = "0xBD4910")]
	private void SpawnResetti_OnPostSpawnResetti(LevelDirector_Resetti resettiLevelDir)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xBD4920", Offset = "0xBD4920", VA = "0xBD4920", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xBD4A2C", Offset = "0xBD4A2C", VA = "0xBD4A2C")]
	private void ConversationSayNext(string _convoID, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xBD4B24", Offset = "0xBD4B24", VA = "0xBD4B24")]
	private void ResettoAsked()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xBD4C3C", Offset = "0xBD4C3C", VA = "0xBD4C3C")]
	private void ResettoHop()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xBD4D68", Offset = "0xBD4D68", VA = "0xBD4D68", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xBD4E4C", Offset = "0xBD4E4C", VA = "0xBD4E4C")]
	public LevelDirector_C101_simpleThrowing_resetto()
	{
	}
}
[Token(Token = "0x2000217")]
public class LevelDirector_C103 : LevelDirector_base
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private LevelDirector_Resetti resetto;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool anomalyHappened;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool lockedDown;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject themeMusic;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xBD5E54", Offset = "0xBD5E54", VA = "0xBD5E54", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xBD5EF4", Offset = "0xBD5EF4", VA = "0xBD5EF4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xBD5F80", Offset = "0xBD5F80", VA = "0xBD5F80")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xBD5F90", Offset = "0xBD5F90", VA = "0xBD5F90", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xBD616C", Offset = "0xBD616C", VA = "0xBD616C")]
	public void AnomalyHappened()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xBD6080", Offset = "0xBD6080", VA = "0xBD6080")]
	public void LockedDown()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xBD6318", Offset = "0xBD6318", VA = "0xBD6318")]
	public LevelDirector_C103()
	{
	}
}
[Token(Token = "0x2000218")]
public class LevelDirector_C104_Bridging : LevelDirector_base
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject Trophy;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public EntityDefinition Def;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string[] introKeys;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int convoIDX;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool levelDone;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
	private bool grabbed;

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xBD6320", Offset = "0xBD6320", VA = "0xBD6320", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xBD6374", Offset = "0xBD6374", VA = "0xBD6374")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xBD633C", Offset = "0xBD633C", VA = "0xBD633C")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xBD643C", Offset = "0xBD643C", VA = "0xBD643C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xBD6688", Offset = "0xBD6688", VA = "0xBD6688", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xBD6710", Offset = "0xBD6710", VA = "0xBD6710", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xBD683C", Offset = "0xBD683C", VA = "0xBD683C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xBD68C8", Offset = "0xBD68C8", VA = "0xBD68C8", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xBD6954", Offset = "0xBD6954", VA = "0xBD6954")]
	private void GrabTrophy(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xBD6AB4", Offset = "0xBD6AB4", VA = "0xBD6AB4")]
	public LevelDirector_C104_Bridging()
	{
	}
}
[Token(Token = "0x2000219")]
public class LevelDirector_C105_Slingshot : LevelDirector_base
{
	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float completeSafetyCounter;

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xBD70BC", Offset = "0xBD70BC", VA = "0xBD70BC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xBD70EC", Offset = "0xBD70EC", VA = "0xBD70EC")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xBD718C", Offset = "0xBD718C", VA = "0xBD718C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xBD71B8", Offset = "0xBD71B8", VA = "0xBD71B8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xBD7624", Offset = "0xBD7624", VA = "0xBD7624", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xBD7828", Offset = "0xBD7828", VA = "0xBD7828", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xBD78EC", Offset = "0xBD78EC", VA = "0xBD78EC")]
	public LevelDirector_C105_Slingshot()
	{
	}
}
[Token(Token = "0x200021A")]
public class LevelDirector_C1111 : LevelDirector_base
{
	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C1111 <>4__this;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xBD82F8", Offset = "0xBD82F8", VA = "0xBD82F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xBD8340", Offset = "0xBD8340", VA = "0xBD8340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xBD8184", Offset = "0xBD8184", VA = "0xBD8184")]
		[DebuggerHidden]
		public <DelayedReaction>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xBD8204", Offset = "0xBD8204", VA = "0xBD8204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xBD8208", Offset = "0xBD8208", VA = "0xBD8208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xBD8300", Offset = "0xBD8300", VA = "0xBD8300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Level customLevel;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string symbolToShow;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool initFocus;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool loadingInit;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xBD78F4", Offset = "0xBD78F4", VA = "0xBD78F4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xBD7914", Offset = "0xBD7914", VA = "0xBD7914")]
	private void CharacterInit()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xBD7948", Offset = "0xBD7948", VA = "0xBD7948", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xBD79CC", Offset = "0xBD79CC", VA = "0xBD79CC", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xBD7B5C", Offset = "0xBD7B5C", VA = "0xBD7B5C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xBD7E5C", Offset = "0xBD7E5C", VA = "0xBD7E5C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xBD7DA0", Offset = "0xBD7DA0", VA = "0xBD7DA0")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xBD7FE8", Offset = "0xBD7FE8", VA = "0xBD7FE8", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xBD80E4", Offset = "0xBD80E4", VA = "0xBD80E4")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__12))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xBD81AC", Offset = "0xBD81AC", VA = "0xBD81AC")]
	public LevelDirector_C1111()
	{
	}
}
[Token(Token = "0x200021C")]
public class LevelDirector_C1112 : LevelDirector_base
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EntityDefinition concreteBlock;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool unsolvable;

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xBD8348", Offset = "0xBD8348", VA = "0xBD8348", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xBD840C", Offset = "0xBD840C", VA = "0xBD840C")]
	private void Task()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xBD856C", Offset = "0xBD856C", VA = "0xBD856C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xBD869C", Offset = "0xBD869C", VA = "0xBD869C", Slot = "18")]
	public override void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xBD8838", Offset = "0xBD8838", VA = "0xBD8838", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xBD8A38", Offset = "0xBD8A38", VA = "0xBD8A38", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xBD8C48", Offset = "0xBD8C48", VA = "0xBD8C48")]
	public LevelDirector_C1112()
	{
	}
}
[Token(Token = "0x200021D")]
public class LevelDirector_C1113 : LevelDirector_base
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool introStarted;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool missionDone;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
	private bool levelDone;

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xBD8C50", Offset = "0xBD8C50", VA = "0xBD8C50")]
	[ContextMenu("Start Grinder")]
	private void GrinderOn()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xBD8C9C", Offset = "0xBD8C9C", VA = "0xBD8C9C")]
	[ContextMenu("Stop Grinder")]
	private void GrinderOff()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xBD8CE4", Offset = "0xBD8CE4", VA = "0xBD8CE4")]
	public void LeverAction(bool _which)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xBD8D30", Offset = "0xBD8D30", VA = "0xBD8D30", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xBD8D6C", Offset = "0xBD8D6C", VA = "0xBD8D6C", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xBD8D70", Offset = "0xBD8D70", VA = "0xBD8D70", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xBD8F9C", Offset = "0xBD8F9C", VA = "0xBD8F9C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xBD9100", Offset = "0xBD9100", VA = "0xBD9100", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xBD9238", Offset = "0xBD9238", VA = "0xBD9238")]
	public LevelDirector_C1113()
	{
	}
}
[Token(Token = "0x200021E")]
public class LevelDirector_C1113_Doc : LevelDirector_base
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base nurse;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool endCalled;

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xBD9240", Offset = "0xBD9240", VA = "0xBD9240", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xBD9368", Offset = "0xBD9368", VA = "0xBD9368", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xBD936C", Offset = "0xBD936C", VA = "0xBD936C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xBD9448", Offset = "0xBD9448", VA = "0xBD9448", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xBD9518", Offset = "0xBD9518", VA = "0xBD9518")]
	public LevelDirector_C1113_Doc()
	{
	}
}
[Token(Token = "0x200021F")]
public class LevelDirector_C1114_UFO_lab : LevelDirector_base
{
	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget armForSFX;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumansInteraction assistantHost;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject UFO;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool assistantIsBabble;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject stuffOn;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject stuffOff;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[EventRef]
	public string armClank;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool grabbedMsg;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool allTargetsDone;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	private bool levelEndSpawned;

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xBD9520", Offset = "0xBD9520", VA = "0xBD9520", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xBD9568", Offset = "0xBD9568", VA = "0xBD9568")]
	private void IntroQuestion()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xBD95F0", Offset = "0xBD95F0", VA = "0xBD95F0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xBD96F4", Offset = "0xBD96F4", VA = "0xBD96F4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xBD97F8", Offset = "0xBD97F8", VA = "0xBD97F8")]
	private void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xBD991C", Offset = "0xBD991C", VA = "0xBD991C")]
	private void ProfessorConcerned()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xBD99C8", Offset = "0xBD99C8", VA = "0xBD99C8")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xBD9CD4", Offset = "0xBD9CD4", VA = "0xBD9CD4", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xBD9E94", Offset = "0xBD9E94", VA = "0xBD9E94", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xBDA090", Offset = "0xBDA090", VA = "0xBDA090", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xBDA2D8", Offset = "0xBDA2D8", VA = "0xBDA2D8")]
	public LevelDirector_C1114_UFO_lab()
	{
	}
}
[Token(Token = "0x2000220")]
public class LevelDirector_C1115_SisterBoat : LevelDirector_base
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject waypoints;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Vehicle boat;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget humanTarget;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<ConstructionTarget> barrels;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int barrelsRequired;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool humanOnBoat;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int barrelsOnBoat;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ParachuteRespawnTracker[] barrelTrackers;

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xBDA2E0", Offset = "0xBDA2E0", VA = "0xBDA2E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xBDA300", Offset = "0xBDA300", VA = "0xBDA300")]
	private void CheckHumanOnBoat()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xBDA384", Offset = "0xBDA384", VA = "0xBDA384", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xBDA490", Offset = "0xBDA490", VA = "0xBDA490", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xBDA70C", Offset = "0xBDA70C", VA = "0xBDA70C")]
	private string AssembleQuestion(bool removePrefix = false)
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xBDA7D8", Offset = "0xBDA7D8", VA = "0xBDA7D8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xBDA600", Offset = "0xBDA600", VA = "0xBDA600")]
	private void AskLoadedQuestion()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xBDA680", Offset = "0xBDA680", VA = "0xBDA680")]
	private void DoBriefing(bool removePrefix = false)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xBDA95C", Offset = "0xBDA95C", VA = "0xBDA95C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xBDAAC8", Offset = "0xBDAAC8", VA = "0xBDAAC8")]
	private void StartBoat()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xBDAC8C", Offset = "0xBDAC8C", VA = "0xBDAC8C")]
	private void DriveOff()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xBDAC9C", Offset = "0xBDAC9C", VA = "0xBDAC9C")]
	public LevelDirector_C1115_SisterBoat()
	{
	}
}
[Token(Token = "0x2000221")]
public class LevelDirector_C1116_SisterCrystals : LevelDirector_base
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Grabbable letter;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xBDAD2C", Offset = "0xBDAD2C", VA = "0xBDAD2C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xBDADC8", Offset = "0xBDADC8", VA = "0xBDADC8", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xBDAE78", Offset = "0xBDAE78", VA = "0xBDAE78", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xBDAF28", Offset = "0xBDAF28", VA = "0xBDAF28")]
	private void Babble(bool which, BubbleToCharacter bubble)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xBDB1C8", Offset = "0xBDB1C8", VA = "0xBDB1C8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xBDB594", Offset = "0xBDB594", VA = "0xBDB594")]
	private void ExitScene()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xBDB5B4", Offset = "0xBDB5B4", VA = "0xBDB5B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xBDB674", Offset = "0xBDB674", VA = "0xBDB674")]
	private void CloserPlease()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xBDB0FC", Offset = "0xBDB0FC", VA = "0xBDB0FC")]
	private void DestinationReachedHouse(string _id)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xBDB4B0", Offset = "0xBDB4B0", VA = "0xBDB4B0")]
	[ContextMenu("MoveToWP")]
	private void MoveToWP()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xBDB6EC", Offset = "0xBDB6EC", VA = "0xBDB6EC", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xBDB75C", Offset = "0xBDB75C", VA = "0xBDB75C")]
	public LevelDirector_C1116_SisterCrystals()
	{
	}
}
[Token(Token = "0x2000222")]
public class LevelDirector_C1118_EnterLusk : LevelDirector_base
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Drone chopper;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool briefingHappend;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool empFeedbackGiven;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievement;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool slingfired;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool luskIsIn;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xBDB764", Offset = "0xBDB764", VA = "0xBDB764")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xBDB7A0", Offset = "0xBDB7A0", VA = "0xBDB7A0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xBDB880", Offset = "0xBDB880", VA = "0xBDB880", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xBDB960", Offset = "0xBDB960", VA = "0xBDB960")]
	private void SlingFired(GlueConnections _glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xBDB96C", Offset = "0xBDB96C", VA = "0xBDB96C")]
	private void EMPHappened(Glue glue, EMP emp)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xBDBA34", Offset = "0xBDBA34", VA = "0xBDBA34", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xBDBABC", Offset = "0xBDBABC", VA = "0xBDBABC")]
	private void SendOffChopper()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xBDBAD8", Offset = "0xBDBAD8", VA = "0xBDBAD8")]
	private void LuskIn()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xBDBB68", Offset = "0xBDBB68", VA = "0xBDBB68", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xBDC0A8", Offset = "0xBDC0A8", VA = "0xBDC0A8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xBDC134", Offset = "0xBDC134", VA = "0xBDC134", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xBDC268", Offset = "0xBDC268", VA = "0xBDC268")]
	public LevelDirector_C1118_EnterLusk()
	{
	}
}
[Token(Token = "0x2000223")]
public class LevelDirector_C1120_SandboxTutorial : LevelDirector_base
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget[] phase1Targets;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTargetManual phase3SaveTarget;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HumansInteraction assistant;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int goal;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int destroyed;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool containersPlaced;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xBDC270", Offset = "0xBDC270", VA = "0xBDC270", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xBDC2FC", Offset = "0xBDC2FC", VA = "0xBDC2FC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xBDC388", Offset = "0xBDC388", VA = "0xBDC388")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xBDC3D0", Offset = "0xBDC3D0", VA = "0xBDC3D0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xBDC550", Offset = "0xBDC550", VA = "0xBDC550")]
	private void ShowPhase1()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xBDC7D8", Offset = "0xBDC7D8", VA = "0xBDC7D8")]
	private void ShowPhase3()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xBDC858", Offset = "0xBDC858", VA = "0xBDC858")]
	[ContextMenu("Saved")]
	public void Saved()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xBDC918", Offset = "0xBDC918", VA = "0xBDC918")]
	[ContextMenu("Test")]
	private void Test()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xBDC938", Offset = "0xBDC938", VA = "0xBDC938", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xBDCA04", Offset = "0xBDCA04", VA = "0xBDCA04", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xBDCB14", Offset = "0xBDCB14", VA = "0xBDCB14")]
	public LevelDirector_C1120_SandboxTutorial()
	{
	}
}
[Token(Token = "0x2000224")]
public class LevelDirector_C112_assistantMayor : LevelDirector_base
{
	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool endConvo;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool closeEnough;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 camPos;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 hostPos;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xBDCB24", Offset = "0xBDCB24", VA = "0xBDCB24", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xBDCB80", Offset = "0xBDCB80", VA = "0xBDCB80")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xBDCBBC", Offset = "0xBDCBBC", VA = "0xBDCBBC")]
	private void Closer()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xBDCC84", Offset = "0xBDCC84", VA = "0xBDCC84")]
	private void CloseEnough()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xBDCD24", Offset = "0xBDCD24", VA = "0xBDCD24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xBDCE5C", Offset = "0xBDCE5C", VA = "0xBDCE5C")]
	public LevelDirector_C112_assistantMayor()
	{
	}
}
[Token(Token = "0x2000225")]
public class LevelDirector_C112_Mayor : LevelDirector_base
{
	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <CouncilComplaints>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C112_Mayor <>4__this;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<HumansInteraction>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HumansInteraction <humanI>5__3;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xBDEBEC", Offset = "0xBDEBEC", VA = "0xBDEBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xBDEC34", Offset = "0xBDEC34", VA = "0xBDEC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xBDE278", Offset = "0xBDE278", VA = "0xBDE278")]
		[DebuggerHidden]
		public <CouncilComplaints>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xBDE7EC", Offset = "0xBDE7EC", VA = "0xBDE7EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xBDE808", Offset = "0xBDE808", VA = "0xBDE808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xBDEB9C", Offset = "0xBDEB9C", VA = "0xBDEB9C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xBDEBF4", Offset = "0xBDEBF4", VA = "0xBDEBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int peopleAsked;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<HumansInteraction> councilMembers;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<HumansInteraction> councilMembersAsked;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<string> councilComplaints;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject pledgeEmitter;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int maxComplaints;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_C112_assistantMayor assistant;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_musician conductor;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool moveAndTalkAllowed;

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xBDCE64", Offset = "0xBDCE64", VA = "0xBDCE64", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xBDCF14", Offset = "0xBDCF14", VA = "0xBDCF14", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xBDCFC4", Offset = "0xBDCFC4", VA = "0xBDCFC4")]
	[ContextMenu("TestStopMusic")]
	private void TestStopMusic()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xBDD044", Offset = "0xBDD044", VA = "0xBDD044", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xBDD6B8", Offset = "0xBDD6B8", VA = "0xBDD6B8")]
	public void InitSpeech()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xBDD160", Offset = "0xBDD160", VA = "0xBDD160")]
	private void InitComplaints()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xBDD648", Offset = "0xBDD648", VA = "0xBDD648")]
	private void MoveAndTalk(bool _which)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xBDD774", Offset = "0xBDD774", VA = "0xBDD774")]
	private void StartSpeech()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xBDD894", Offset = "0xBDD894", VA = "0xBDD894", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xBDDC58", Offset = "0xBDDC58", VA = "0xBDDC58", Slot = "23")]
	public override void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xBDDF8C", Offset = "0xBDDF8C", VA = "0xBDDF8C")]
	private void EndComplaints()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xBDDC0C", Offset = "0xBDDC0C", VA = "0xBDDC0C")]
	[ContextMenu("InitCouncilComplaints")]
	private void ActivateCouncilComplaints()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xBDE204", Offset = "0xBDE204", VA = "0xBDE204")]
	[IteratorStateMachine(typeof(<CouncilComplaints>d__22))]
	private IEnumerator CouncilComplaints()
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xBDE2A0", Offset = "0xBDE2A0", VA = "0xBDE2A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xBDE4F0", Offset = "0xBDE4F0", VA = "0xBDE4F0")]
	private void MonsterTalk()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xBDE554", Offset = "0xBDE554", VA = "0xBDE554")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xBDE6B8", Offset = "0xBDE6B8", VA = "0xBDE6B8")]
	private void Higher()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xBDE75C", Offset = "0xBDE75C", VA = "0xBDE75C")]
	public LevelDirector_C112_Mayor()
	{
	}
}
[Token(Token = "0x2000227")]
public class LevelDirector_C112_WasteDump : LevelDirector_base
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Story story;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool loadStarted;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xBDEC3C", Offset = "0xBDEC3C", VA = "0xBDEC3C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xBDED50", Offset = "0xBDED50", VA = "0xBDED50")]
	public void StartWasteDumpMission()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xBDED78", Offset = "0xBDED78", VA = "0xBDED78", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xBDEE80", Offset = "0xBDEE80", VA = "0xBDEE80")]
	public LevelDirector_C112_WasteDump()
	{
	}
}
[Token(Token = "0x2000228")]
public class LevelDirector_C115_sizeWheel : LevelDirector_base
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction assistantLevelHost;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xBDEE88", Offset = "0xBDEE88", VA = "0xBDEE88", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xBDEE90", Offset = "0xBDEE90", VA = "0xBDEE90")]
	public LevelDirector_C115_sizeWheel()
	{
	}
}
[Token(Token = "0x2000229")]
public class LevelDirector_C116_WeightWatchers : LevelDirector_base
{
	[Token(Token = "0x200022A")]
	[CompilerGenerated]
	private sealed class <DelayedReaction>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C116_WeightWatchers <>4__this;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _reaction;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xBDF72C", Offset = "0xBDF72C", VA = "0xBDF72C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xBDF774", Offset = "0xBDF774", VA = "0xBDF774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xBDF5B8", Offset = "0xBDF5B8", VA = "0xBDF5B8")]
		[DebuggerHidden]
		public <DelayedReaction>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xBDF638", Offset = "0xBDF638", VA = "0xBDF638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xBDF63C", Offset = "0xBDF63C", VA = "0xBDF63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xBDF734", Offset = "0xBDF734", VA = "0xBDF734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public WeightGame WeightGame;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string generalTask;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xBDEE98", Offset = "0xBDEE98", VA = "0xBDEE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xBDEE9C", Offset = "0xBDEE9C", VA = "0xBDEE9C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xBDF030", Offset = "0xBDF030", VA = "0xBDF030", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xBDF108", Offset = "0xBDF108", VA = "0xBDF108", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xBDF204", Offset = "0xBDF204", VA = "0xBDF204")]
	public void Wrong()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xBDF290", Offset = "0xBDF290", VA = "0xBDF290", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xBDF518", Offset = "0xBDF518", VA = "0xBDF518")]
	[IteratorStateMachine(typeof(<DelayedReaction>d__8))]
	private IEnumerator DelayedReaction(string _reaction, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xBDF5E0", Offset = "0xBDF5E0", VA = "0xBDF5E0")]
	public LevelDirector_C116_WeightWatchers()
	{
	}
}
[Token(Token = "0x200022B")]
public class LevelDirector_C117_AMT_part1 : LevelDirector_base
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AMTanimations AMTmachineFX;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform audioPosition;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter ambienceEmitter;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool machineReady;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool fistPushed;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xBDF77C", Offset = "0xBDF77C", VA = "0xBDF77C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xBDF82C", Offset = "0xBDF82C", VA = "0xBDF82C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xBDF8DC", Offset = "0xBDF8DC", VA = "0xBDF8DC")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xBDF94C", Offset = "0xBDF94C", VA = "0xBDF94C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xBDFA30", Offset = "0xBDFA30", VA = "0xBDFA30")]
	public void SpeakButtonPressed()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xBDFA78", Offset = "0xBDFA78", VA = "0xBDFA78")]
	private void MachineOn()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBDFB8C", Offset = "0xBDFB8C", VA = "0xBDFB8C", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBDFD20", Offset = "0xBDFD20", VA = "0xBDFD20", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBDFE10", Offset = "0xBDFE10", VA = "0xBDFE10")]
	private void DoIdle()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xBDFEA0", Offset = "0xBDFEA0", VA = "0xBDFEA0")]
	private void StartIdle()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xBDFEBC", Offset = "0xBDFEBC", VA = "0xBDFEBC", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xBE05C8", Offset = "0xBE05C8", VA = "0xBE05C8")]
	public LevelDirector_C117_AMT_part1()
	{
	}
}
[Token(Token = "0x200022C")]
public class LevelDirector_C117_Beamter_part1 : LevelDirector_base
{
	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xBE05D0", Offset = "0xBE05D0", VA = "0xBE05D0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xBE065C", Offset = "0xBE065C", VA = "0xBE065C")]
	public void StartConvo()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xBE07E4", Offset = "0xBE07E4", VA = "0xBE07E4", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xBE07FC", Offset = "0xBE07FC", VA = "0xBE07FC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xBE09A8", Offset = "0xBE09A8", VA = "0xBE09A8", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xBE0A30", Offset = "0xBE0A30", VA = "0xBE0A30", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xBE0BE8", Offset = "0xBE0BE8", VA = "0xBE0BE8")]
	public LevelDirector_C117_Beamter_part1()
	{
	}
}
[Token(Token = "0x200022D")]
public class LevelDirector_C118_SisterRepair : LevelDirector_base
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LightHouseTurn lighthouseMechanic;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget target;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string task3;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTarget crank;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ConstructionTarget repairDone;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ConstructionTarget manualTarget;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float crankVelocity;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject staticPadLock;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Rigidbody cover;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Padlock padlock;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float requiredSpeed;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float lastFaster;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool tooSlow;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool speedReached;

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xBE0BF0", Offset = "0xBE0BF0", VA = "0xBE0BF0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xBE0CC0", Offset = "0xBE0CC0", VA = "0xBE0CC0")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xBE0DF8", Offset = "0xBE0DF8", VA = "0xBE0DF8")]
	public void PadlockOpen()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBE0E08", Offset = "0xBE0E08", VA = "0xBE0E08")]
	public void CrankAttached()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xBE0F38", Offset = "0xBE0F38", VA = "0xBE0F38", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xBE0FA8", Offset = "0xBE0FA8", VA = "0xBE0FA8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xBE12E0", Offset = "0xBE12E0", VA = "0xBE12E0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget _target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xBE154C", Offset = "0xBE154C", VA = "0xBE154C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xBE17C4", Offset = "0xBE17C4", VA = "0xBE17C4", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xBE19E8", Offset = "0xBE19E8", VA = "0xBE19E8")]
	public LevelDirector_C118_SisterRepair()
	{
	}
}
[Token(Token = "0x200022E")]
public class LevelDirector_C119_AMT_part2 : LevelDirector_base
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AMTanimations AMTmachineFX;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform audioPosition;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter ambienceEmitter;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float regReadWait;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float regPerCharacterWait;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float bubbleHide;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int slaps;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool slapsAllowed;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float lastHit;

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xBE19F8", Offset = "0xBE19F8", VA = "0xBE19F8", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xBE1AA8", Offset = "0xBE1AA8", VA = "0xBE1AA8", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xBE1B58", Offset = "0xBE1B58", VA = "0xBE1B58")]
	private void ConversationSayNext(string _id, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xBE1BC8", Offset = "0xBE1BC8", VA = "0xBE1BC8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xBE1CD8", Offset = "0xBE1CD8", VA = "0xBE1CD8")]
	public void SpeakButtonPressed()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xBE1F10", Offset = "0xBE1F10", VA = "0xBE1F10")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xBE1DB4", Offset = "0xBE1DB4", VA = "0xBE1DB4")]
	private void StartEval()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xBE212C", Offset = "0xBE212C", VA = "0xBE212C", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xBE21E0", Offset = "0xBE21E0", VA = "0xBE21E0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xBE2594", Offset = "0xBE2594", VA = "0xBE2594", Slot = "23")]
	public override void CharacterEventGlobal(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xBE2840", Offset = "0xBE2840", VA = "0xBE2840")]
	public LevelDirector_C119_AMT_part2()
	{
	}
}
[Token(Token = "0x200022F")]
public class LevelDirector_C119_Beamter_part2 : LevelDirector_base
{
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xBE2848", Offset = "0xBE2848", VA = "0xBE2848", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xBE2864", Offset = "0xBE2864", VA = "0xBE2864")]
	public void StartConvo()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xBE2984", Offset = "0xBE2984", VA = "0xBE2984", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xBE2D04", Offset = "0xBE2D04", VA = "0xBE2D04", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xBE2FC4", Offset = "0xBE2FC4", VA = "0xBE2FC4")]
	public LevelDirector_C119_Beamter_part2()
	{
	}
}
[Token(Token = "0x2000230")]
public class LevelDirector_C120_Restaurant : LevelDirector_base
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHostSub;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xBE2FCC", Offset = "0xBE2FCC", VA = "0xBE2FCC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xBE3054", Offset = "0xBE3054", VA = "0xBE3054", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xBE33C8", Offset = "0xBE33C8", VA = "0xBE33C8")]
	private void RandomShouts()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xBE34EC", Offset = "0xBE34EC", VA = "0xBE34EC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xBE35D4", Offset = "0xBE35D4", VA = "0xBE35D4", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xBE36B0", Offset = "0xBE36B0", VA = "0xBE36B0")]
	public LevelDirector_C120_Restaurant()
	{
	}
}
[Token(Token = "0x2000231")]
public class LevelDirector_C122_Shipwreck : LevelDirector_base
{
	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public int timeToPolice;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool missionFailed;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool gameDone;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int shouts;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject police;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private BubbleToCharacter copBubble;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public C_HelicopterManagerDeliverMagnets waypointChopperManager;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Drone chopper;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool endStarted;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xBE36B8", Offset = "0xBE36B8", VA = "0xBE36B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xBE3780", Offset = "0xBE3780", VA = "0xBE3780", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xBE38CC", Offset = "0xBE38CC", VA = "0xBE38CC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xBE3A8C", Offset = "0xBE3A8C", VA = "0xBE3A8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xBE3BFC", Offset = "0xBE3BFC", VA = "0xBE3BFC")]
	private void Shouts()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xBE3AE8", Offset = "0xBE3AE8", VA = "0xBE3AE8")]
	[ContextMenu("TimeOut")]
	private void TimeOut()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xBE3D58", Offset = "0xBE3D58", VA = "0xBE3D58")]
	private void DroneSpawned(Drone _drone)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xBE3E00", Offset = "0xBE3E00", VA = "0xBE3E00")]
	private void TargetReached(Transform _target)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xBE3F64", Offset = "0xBE3F64", VA = "0xBE3F64")]
	private void EndScene()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xBE3F88", Offset = "0xBE3F88", VA = "0xBE3F88", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xBE4084", Offset = "0xBE4084", VA = "0xBE4084", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xBE4104", Offset = "0xBE4104", VA = "0xBE4104")]
	public LevelDirector_C122_Shipwreck()
	{
	}
}
[Token(Token = "0x2000232")]
public class LevelDirector_C123_Villa : LevelDirector_base
{
	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xBE4114", Offset = "0xBE4114", VA = "0xBE4114", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xBE4130", Offset = "0xBE4130", VA = "0xBE4130", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xBE422C", Offset = "0xBE422C", VA = "0xBE422C")]
	private void RandomShouts()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xBE43A0", Offset = "0xBE43A0", VA = "0xBE43A0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xBE4410", Offset = "0xBE4410", VA = "0xBE4410", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xBE4430", Offset = "0xBE4430", VA = "0xBE4430")]
	public LevelDirector_C123_Villa()
	{
	}
}
[Token(Token = "0x2000233")]
public class LevelDirector_C124_highrise : LevelDirector_base
{
	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_base sisterLevelDir;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public VehicleWaypoint finalDestination;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public FixedJoint joint;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool levelEndTriggered;

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xBE4438", Offset = "0xBE4438", VA = "0xBE4438", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xBE4470", Offset = "0xBE4470", VA = "0xBE4470", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xBE44FC", Offset = "0xBE44FC", VA = "0xBE44FC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xBE4588", Offset = "0xBE4588", VA = "0xBE4588")]
	[ContextMenu("SisterArrives")]
	private void SisterArrives()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xBE4600", Offset = "0xBE4600", VA = "0xBE4600")]
	private void BlockSister()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xBE4628", Offset = "0xBE4628", VA = "0xBE4628")]
	[ContextMenu("SisterEnd")]
	private void SisterEnd()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xBE4724", Offset = "0xBE4724", VA = "0xBE4724")]
	private void WaypointReached(Vehicle vehicle, VehicleWaypoint vehicleWaypoint)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xBE47AC", Offset = "0xBE47AC", VA = "0xBE47AC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xBE48BC", Offset = "0xBE48BC", VA = "0xBE48BC", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xBE48D8", Offset = "0xBE48D8", VA = "0xBE48D8")]
	public LevelDirector_C124_highrise()
	{
	}
}
[Token(Token = "0x2000234")]
public class LevelDirector_C125_CannonStability : LevelDirector_base
{
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction levelHost2;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LevelDirector_base levelBaseHost2;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget humanTarget;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTarget cannonTarget;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Achievement achievement;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private BubbleToCharacter targetBubble;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int lastTargets;

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xBE48E0", Offset = "0xBE48E0", VA = "0xBE48E0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xBE4950", Offset = "0xBE4950", VA = "0xBE4950")]
	private void StartScene()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xBE49D8", Offset = "0xBE49D8", VA = "0xBE49D8")]
	private void StepConvo(string _locaID, bool isProfessor, bool hasFocus = false)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xBE4AC8", Offset = "0xBE4AC8", VA = "0xBE4AC8", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xBE4F2C", Offset = "0xBE4F2C", VA = "0xBE4F2C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xBE51B8", Offset = "0xBE51B8", VA = "0xBE51B8", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xBE526C", Offset = "0xBE526C", VA = "0xBE526C")]
	public LevelDirector_C125_CannonStability()
	{
	}
}
[Token(Token = "0x2000235")]
public class LevelDirector_C15_unused : LevelDirector_base
{
	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xBE5274", Offset = "0xBE5274", VA = "0xBE5274")]
	public LevelDirector_C15_unused()
	{
	}
}
[Token(Token = "0x2000236")]
public class LevelDirector_C1999_MolluskDump : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x2000237")]
	[CompilerGenerated]
	private sealed class <Convo>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C1999_MolluskDump <>4__this;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xBE5AB4", Offset = "0xBE5AB4", VA = "0xBE5AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xBE5AFC", Offset = "0xBE5AFC", VA = "0xBE5AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xBE5448", Offset = "0xBE5448", VA = "0xBE5448")]
		[DebuggerHidden]
		public <Convo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xBE55C0", Offset = "0xBE55C0", VA = "0xBE55C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xBE55C4", Offset = "0xBE55C4", VA = "0xBE55C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xBE5ABC", Offset = "0xBE5ABC", VA = "0xBE5ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int excavState;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public IntroUfoTouch ufo;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject conveyorBrokenParticles;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject conveyorSFX;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public ParticleSystem particles;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SpringJoint[] craneHinges;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool craneDown;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float craneSpeed;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject craneSFX;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xBE527C", Offset = "0xBE527C", VA = "0xBE527C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xBE5364", Offset = "0xBE5364", VA = "0xBE5364", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xBE53D4", Offset = "0xBE53D4", VA = "0xBE53D4")]
	[IteratorStateMachine(typeof(<Convo>d__14))]
	private IEnumerator Convo()
	{
		return null;
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xBE52AC", Offset = "0xBE52AC", VA = "0xBE52AC")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xBE5470", Offset = "0xBE5470", VA = "0xBE5470")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xBE559C", Offset = "0xBE559C", VA = "0xBE559C")]
	public LevelDirector_C1999_MolluskDump()
	{
	}
}
[Token(Token = "0x2000238")]
public class LevelDirector_C202_foodDelivery : LevelDirector_base
{
	[Token(Token = "0x4000DA4")]
	private const int positiveRatingsRequired = 3;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int currentpositiveRatings;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<ConstructionTargetManual> ratingsTargets;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<LevelDirector_foodCustomer> foodCustomers;

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xBE5B04", Offset = "0xBE5B04", VA = "0xBE5B04", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xBE5B20", Offset = "0xBE5B20", VA = "0xBE5B20")]
	private void InitManualTargets()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xBE5C58", Offset = "0xBE5C58", VA = "0xBE5C58", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xBE5D38", Offset = "0xBE5D38", VA = "0xBE5D38", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xBE5E18", Offset = "0xBE5E18", VA = "0xBE5E18")]
	private void FoodCustomerInit(LevelDirector_foodCustomer customer)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xBE5F00", Offset = "0xBE5F00", VA = "0xBE5F00")]
	private void FoodCustomerResult(LevelDirector_foodCustomer customer, bool which)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xBE5F98", Offset = "0xBE5F98", VA = "0xBE5F98")]
	private void ChangeRatings(bool which)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xBE6158", Offset = "0xBE6158", VA = "0xBE6158")]
	public LevelDirector_C202_foodDelivery()
	{
	}
}
[Token(Token = "0x2000239")]
public class LevelDirector_C20_Burnout : LevelDirector_base
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool targetsAllDone;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool briefingDoneOnce;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xBE61E0", Offset = "0xBE61E0", VA = "0xBE61E0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xBE61E8", Offset = "0xBE61E8", VA = "0xBE61E8")]
	private void YankHarder()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xBE628C", Offset = "0xBE628C", VA = "0xBE628C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xBE6380", Offset = "0xBE6380", VA = "0xBE6380", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xBE63E4", Offset = "0xBE63E4", VA = "0xBE63E4")]
	public LevelDirector_C20_Burnout()
	{
	}
}
[Token(Token = "0x200023A")]
public class LevelDirector_C2222 : LevelDirector_base
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool loadTriggered;

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xBE63EC", Offset = "0xBE63EC", VA = "0xBE63EC", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xBE6480", Offset = "0xBE6480", VA = "0xBE6480", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xBE666C", Offset = "0xBE666C", VA = "0xBE666C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xBE6738", Offset = "0xBE6738", VA = "0xBE6738")]
	private void LoadNextLevel()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xBE6770", Offset = "0xBE6770", VA = "0xBE6770")]
	public LevelDirector_C2222()
	{
	}
}
[Token(Token = "0x200023B")]
public class LevelDirector_C3333_Resetto : LevelDirector_base
{
	[Token(Token = "0x200023C")]
	private enum State
	{
		[Token(Token = "0x4000DDB")]
		None,
		[Token(Token = "0x4000DDC")]
		WaitForConvo,
		[Token(Token = "0x4000DDD")]
		WaitForConvoDone
	}

	[Token(Token = "0x200023D")]
	public enum Phase
	{
		[Token(Token = "0x4000DDF")]
		intro,
		[Token(Token = "0x4000DE0")]
		start,
		[Token(Token = "0x4000DE1")]
		h1,
		[Token(Token = "0x4000DE2")]
		b1,
		[Token(Token = "0x4000DE3")]
		h2,
		[Token(Token = "0x4000DE4")]
		b2,
		[Token(Token = "0x4000DE5")]
		h3,
		[Token(Token = "0x4000DE6")]
		b3
	}

	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceIntro>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xBE8AF8", Offset = "0xBE8AF8", VA = "0xBE8AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xBE8B40", Offset = "0xBE8B40", VA = "0xBE8B40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xBE8534", Offset = "0xBE8534", VA = "0xBE8534")]
		[DebuggerHidden]
		public <BossFightSequenceIntro>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xBE855C", Offset = "0xBE855C", VA = "0xBE855C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xBE8560", Offset = "0xBE8560", VA = "0xBE8560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xBE8B00", Offset = "0xBE8B00", VA = "0xBE8B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceStart>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xBE8D3C", Offset = "0xBE8D3C", VA = "0xBE8D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xBE8D84", Offset = "0xBE8D84", VA = "0xBE8D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xBE8B48", Offset = "0xBE8B48", VA = "0xBE8B48")]
		[DebuggerHidden]
		public <BossFightSequenceStart>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xBE8B70", Offset = "0xBE8B70", VA = "0xBE8B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xBE8B74", Offset = "0xBE8B74", VA = "0xBE8B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xBE8D44", Offset = "0xBE8D44", VA = "0xBE8D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH1>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xBE8EF8", Offset = "0xBE8EF8", VA = "0xBE8EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xBE8F40", Offset = "0xBE8F40", VA = "0xBE8F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xBE8D8C", Offset = "0xBE8D8C", VA = "0xBE8D8C")]
		[DebuggerHidden]
		public <BossFightSequenceH1>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xBE8DB4", Offset = "0xBE8DB4", VA = "0xBE8DB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xBE8DB8", Offset = "0xBE8DB8", VA = "0xBE8DB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xBE8F00", Offset = "0xBE8F00", VA = "0xBE8F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB1>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xBE91C0", Offset = "0xBE91C0", VA = "0xBE91C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xBE9208", Offset = "0xBE9208", VA = "0xBE9208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xBE8F48", Offset = "0xBE8F48", VA = "0xBE8F48")]
		[DebuggerHidden]
		public <BossFightSequenceB1>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xBE8F70", Offset = "0xBE8F70", VA = "0xBE8F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xBE8F74", Offset = "0xBE8F74", VA = "0xBE8F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xBE91C8", Offset = "0xBE91C8", VA = "0xBE91C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000242")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH2>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xBE937C", Offset = "0xBE937C", VA = "0xBE937C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xBE93C4", Offset = "0xBE93C4", VA = "0xBE93C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xBE9210", Offset = "0xBE9210", VA = "0xBE9210")]
		[DebuggerHidden]
		public <BossFightSequenceH2>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xBE9238", Offset = "0xBE9238", VA = "0xBE9238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xBE923C", Offset = "0xBE923C", VA = "0xBE923C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xBE9384", Offset = "0xBE9384", VA = "0xBE9384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000243")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB2>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xBE98E0", Offset = "0xBE98E0", VA = "0xBE98E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xBE9928", Offset = "0xBE9928", VA = "0xBE9928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xBE93CC", Offset = "0xBE93CC", VA = "0xBE93CC")]
		[DebuggerHidden]
		public <BossFightSequenceB2>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xBE93F4", Offset = "0xBE93F4", VA = "0xBE93F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xBE93F8", Offset = "0xBE93F8", VA = "0xBE93F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xBE98E8", Offset = "0xBE98E8", VA = "0xBE98E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceH3>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xBE9B2C", Offset = "0xBE9B2C", VA = "0xBE9B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xBE9B74", Offset = "0xBE9B74", VA = "0xBE9B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xBE9930", Offset = "0xBE9930", VA = "0xBE9930")]
		[DebuggerHidden]
		public <BossFightSequenceH3>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xBE9958", Offset = "0xBE9958", VA = "0xBE9958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xBE995C", Offset = "0xBE995C", VA = "0xBE995C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xBE9B34", Offset = "0xBE9B34", VA = "0xBE9B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <BossFightSequenceB3>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xBEA04C", Offset = "0xBEA04C", VA = "0xBEA04C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xBEA094", Offset = "0xBEA094", VA = "0xBEA094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xBE9B7C", Offset = "0xBE9B7C", VA = "0xBE9B7C")]
		[DebuggerHidden]
		public <BossFightSequenceB3>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xBE9BA4", Offset = "0xBE9BA4", VA = "0xBE9BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xBE9BA8", Offset = "0xBE9BA8", VA = "0xBE9BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xBEA054", Offset = "0xBEA054", VA = "0xBEA054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000246")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass72_0
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float wavesHeightTween;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xBEA09C", Offset = "0xBEA09C", VA = "0xBEA09C")]
		public <>c__DisplayClass72_0()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xBEA0A4", Offset = "0xBEA0A4", VA = "0xBEA0A4")]
		internal float <ChangeSea>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xBEA0AC", Offset = "0xBEA0AC", VA = "0xBEA0AC")]
		internal void <ChangeSea>b__1(float x)
		{
		}
	}

	[Token(Token = "0x2000247")]
	[CompilerGenerated]
	private sealed class <ChangeSea>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass72_0 <>8__1;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xBEA318", Offset = "0xBEA318", VA = "0xBEA318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xBEA360", Offset = "0xBEA360", VA = "0xBEA360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xBEA0B4", Offset = "0xBEA0B4", VA = "0xBEA0B4")]
		[DebuggerHidden]
		public <ChangeSea>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xBEA0DC", Offset = "0xBEA0DC", VA = "0xBEA0DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xBEA0E0", Offset = "0xBEA0E0", VA = "0xBEA0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xBEA320", Offset = "0xBEA320", VA = "0xBEA320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float waterHeightTween;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xBEA368", Offset = "0xBEA368", VA = "0xBEA368")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xBEA370", Offset = "0xBEA370", VA = "0xBEA370")]
		internal float <ChangeSealevel>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xBEA378", Offset = "0xBEA378", VA = "0xBEA378")]
		internal void <ChangeSealevel>b__1(float x)
		{
		}
	}

	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <ChangeSealevel>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C3333_Resetto <>4__this;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass74_0 <>8__1;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float targetHeight;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float duration;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Ease ease;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startTime>5__2;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <islandsPosition>5__3;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xBEA6F0", Offset = "0xBEA6F0", VA = "0xBEA6F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xBEA738", Offset = "0xBEA738", VA = "0xBEA738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xBEA380", Offset = "0xBEA380", VA = "0xBEA380")]
		[DebuggerHidden]
		public <ChangeSealevel>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xBEA3A8", Offset = "0xBEA3A8", VA = "0xBEA3A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xBEA3AC", Offset = "0xBEA3AC", VA = "0xBEA3AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xBEA6F8", Offset = "0xBEA6F8", VA = "0xBEA6F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public BossController bossController;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base sister;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base professor;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base mayor;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base scupPorgy;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base rayLamp;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base flossenhammer;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private IEnumerator bossfightSequence;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private IEnumerator seaLevelEnumerator;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Phase sequencePhase;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool resettiPlaced;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
	private bool resettoActivated;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
	private bool boosterActive;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EF")]
	private bool resettoArrived;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool tentacleUnchained;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	private bool EMPMissileHit;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
	private bool empBlastCharging;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
	private bool moveToLastBoosterDone;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool centerReached;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AutoSpawn[] spawners;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject smokePipes;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject poolWaterOverride;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public BossLimits bossLimits;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public SetSeaWaves setSeaWaves;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform distantIslands;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ShakeObject[] shakeObjects;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject speedStripes;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Rigidbody[] pipeCovers;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject underwaterCrystals;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Transform resettoFactoryTrigger;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public bool smoothCam;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject liftIslandLoop;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Achievement achievement;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Animation Gears;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Animation Pistons;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject FactoryFX;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public MeshRenderer groundVisual;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Material buildingsA_Uber;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Material surfaceNoCull;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelDirector_C3333_Resetto _instance;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float lowSeaLevel;

	[Token(Token = "0x170000CE")]
	public static LevelDirector_C3333_Resetto Instance
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xBE6778", Offset = "0xBE6778", VA = "0xBE6778")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xBE6904", Offset = "0xBE6904", VA = "0xBE6904", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xBE6BF0", Offset = "0xBE6BF0", VA = "0xBE6BF0")]
	private void BlockOptions()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xBE6C14", Offset = "0xBE6C14", VA = "0xBE6C14")]
	[ContextMenu("ShortcutToStart")]
	public void ShortcutToStart()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xBE6DEC", Offset = "0xBE6DEC", VA = "0xBE6DEC")]
	[ContextMenu("ShortcutToH1")]
	public void ShortcutToH1()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xBE6EBC", Offset = "0xBE6EBC", VA = "0xBE6EBC")]
	[ContextMenu("ShortcutToB1")]
	public void ShortcutToB1()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xBE6FAC", Offset = "0xBE6FAC", VA = "0xBE6FAC")]
	[ContextMenu("ShortcutToH2")]
	public void ShortcutToH2()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xBE70AC", Offset = "0xBE70AC", VA = "0xBE70AC")]
	[ContextMenu("ShortcutToB2")]
	public void ShortcutToB2()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xBE71C8", Offset = "0xBE71C8", VA = "0xBE71C8")]
	[ContextMenu("ShortcutToH3")]
	public void ShortcutToH3()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xBE72F4", Offset = "0xBE72F4", VA = "0xBE72F4")]
	[ContextMenu("ShortcutToB3")]
	public void ShortcutToB3()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xBE6CCC", Offset = "0xBE6CCC", VA = "0xBE6CCC")]
	private void IntroDebug()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xBE6B2C", Offset = "0xBE6B2C", VA = "0xBE6B2C")]
	[IteratorStateMachine(typeof(<BossFightSequenceIntro>d__60))]
	private IEnumerator BossFightSequenceIntro()
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xBE75E4", Offset = "0xBE75E4", VA = "0xBE75E4")]
	private void RepeatUnchainedBriefing()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xBE6D78", Offset = "0xBE6D78", VA = "0xBE6D78")]
	[IteratorStateMachine(typeof(<BossFightSequenceStart>d__62))]
	private IEnumerator BossFightSequenceStart()
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xBE6E48", Offset = "0xBE6E48", VA = "0xBE6E48")]
	[IteratorStateMachine(typeof(<BossFightSequenceH1>d__63))]
	private IEnumerator BossFightSequenceH1()
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xBE6F38", Offset = "0xBE6F38", VA = "0xBE6F38")]
	[IteratorStateMachine(typeof(<BossFightSequenceB1>d__64))]
	private IEnumerator BossFightSequenceB1()
	{
		return null;
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xBE7038", Offset = "0xBE7038", VA = "0xBE7038")]
	[IteratorStateMachine(typeof(<BossFightSequenceH2>d__65))]
	private IEnumerator BossFightSequenceH2()
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xBE7154", Offset = "0xBE7154", VA = "0xBE7154")]
	[IteratorStateMachine(typeof(<BossFightSequenceB2>d__66))]
	private IEnumerator BossFightSequenceB2()
	{
		return null;
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xBE7280", Offset = "0xBE7280", VA = "0xBE7280")]
	[IteratorStateMachine(typeof(<BossFightSequenceH3>d__67))]
	private IEnumerator BossFightSequenceH3()
	{
		return null;
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xBE73C8", Offset = "0xBE73C8", VA = "0xBE73C8")]
	[IteratorStateMachine(typeof(<BossFightSequenceB3>d__68))]
	private IEnumerator BossFightSequenceB3()
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xBE7610", Offset = "0xBE7610", VA = "0xBE7610")]
	[ContextMenu("DropIsland")]
	private void DropIsland()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xBE762C", Offset = "0xBE762C", VA = "0xBE762C")]
	[ContextMenu("StartLiftIsland")]
	private void StartLiftIsland()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xBE76C8", Offset = "0xBE76C8", VA = "0xBE76C8")]
	public void SetShake(bool which)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xBE77D0", Offset = "0xBE77D0", VA = "0xBE77D0")]
	[IteratorStateMachine(typeof(<ChangeSea>d__72))]
	private IEnumerator ChangeSea()
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xBE7728", Offset = "0xBE7728", VA = "0xBE7728")]
	[IteratorStateMachine(typeof(<ChangeSealevel>d__74))]
	private IEnumerator ChangeSealevel(float targetHeight, float duration, float delay = 1f, Ease ease = Ease.InOutSine)
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xBE7830", Offset = "0xBE7830", VA = "0xBE7830")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xBE793C", Offset = "0xBE793C", VA = "0xBE793C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xBE7A70", Offset = "0xBE7A70", VA = "0xBE7A70", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xBE7BA4", Offset = "0xBE7BA4", VA = "0xBE7BA4")]
	[ContextMenu("ResettoStart")]
	public void ResettoStart()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xBE7D24", Offset = "0xBE7D24", VA = "0xBE7D24")]
	private void ResettoNotArrivedCheck()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xBE7D38", Offset = "0xBE7D38", VA = "0xBE7D38")]
	private void ResettoRants()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xBE7E0C", Offset = "0xBE7E0C", VA = "0xBE7E0C")]
	private void ResettoAsksForHelp()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xBE743C", Offset = "0xBE743C", VA = "0xBE743C")]
	public void DebugWarpResettoToFactory(bool force = false)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xBE7E8C", Offset = "0xBE7E8C", VA = "0xBE7E8C")]
	private void ResettoBriefing()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xBE7FE0", Offset = "0xBE7FE0", VA = "0xBE7FE0")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xBE6C54", Offset = "0xBE6C54", VA = "0xBE6C54")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xBE8014", Offset = "0xBE8014", VA = "0xBE8014")]
	private void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xBE808C", Offset = "0xBE808C", VA = "0xBE808C")]
	private bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xBE8208", Offset = "0xBE8208", VA = "0xBE8208", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xBE6ABC", Offset = "0xBE6ABC", VA = "0xBE6ABC")]
	private void SetPipeCoversKinematic(bool which)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xBE82E4", Offset = "0xBE82E4", VA = "0xBE82E4")]
	public void TentacleUnchained()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xBE830C", Offset = "0xBE830C", VA = "0xBE830C")]
	public void BoostersActivated()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xBE8318", Offset = "0xBE8318", VA = "0xBE8318")]
	public void EMPBlastChargeStart()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xBE6A74", Offset = "0xBE6A74", VA = "0xBE6A74")]
	public void SetSpawners(bool which)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xBE8324", Offset = "0xBE8324", VA = "0xBE8324")]
	private void EMPMissileHitEvent(StabiliserHoming missile)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xBE8330", Offset = "0xBE8330", VA = "0xBE8330")]
	public void MoveToLastBoosterDone()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xBE833C", Offset = "0xBE833C", VA = "0xBE833C")]
	public void CenterReached()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xBE8348", Offset = "0xBE8348", VA = "0xBE8348")]
	public void BoosterDestroyed(int which)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xBE8458", Offset = "0xBE8458", VA = "0xBE8458")]
	public void BossWeakpointHit(int which)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xBE6BA0", Offset = "0xBE6BA0", VA = "0xBE6BA0")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xBE84D4", Offset = "0xBE84D4", VA = "0xBE84D4")]
	public LevelDirector_C3333_Resetto()
	{
	}
}
[Token(Token = "0x200024A")]
public class LevelDirector_C3334_Sister : LevelDirector_base
{
	[Token(Token = "0x200024B")]
	private enum State
	{
		[Token(Token = "0x4000E24")]
		None,
		[Token(Token = "0x4000E25")]
		WaitForConvo,
		[Token(Token = "0x4000E26")]
		WaitForConvoDone
	}

	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private sealed class <SavingMollusk>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3334_Sister <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xBEB988", Offset = "0xBEB988", VA = "0xBEB988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xBEB9D0", Offset = "0xBEB9D0", VA = "0xBEB9D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xBEACD4", Offset = "0xBEACD4", VA = "0xBEACD4")]
		[DebuggerHidden]
		public <SavingMollusk>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xBEB228", Offset = "0xBEB228", VA = "0xBEB228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xBEB22C", Offset = "0xBEB22C", VA = "0xBEB22C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xBEB990", Offset = "0xBEB990", VA = "0xBEB990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<LevelDirector_base> convoClearLevelDirectors;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_C3334_Sister sister;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public FixedJoint molluskJoint;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Rigidbody weight;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool molluskIsSaved;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] attaches;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SphericalExplosions sphericalExplosions;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool molluskGrabAllowed;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Rigidbody robot;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject burnSizzleSFX;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TadaPostBossfight tarantellaTada;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int rantIDX;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private string rantKey;

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xBEA740", Offset = "0xBEA740", VA = "0xBEA740")]
	private void ClearAllConvos()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xBEA8B0", Offset = "0xBEA8B0", VA = "0xBEA8B0")]
	public void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xBEA928", Offset = "0xBEA928", VA = "0xBEA928")]
	public bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xBEAAA4", Offset = "0xBEAAA4", VA = "0xBEAAA4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xBEAB80", Offset = "0xBEAB80", VA = "0xBEAB80")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xBEABD0", Offset = "0xBEABD0", VA = "0xBEABD0")]
	[ContextMenu("PlayTadaTest")]
	private void PlayTadaTest()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xBEABF0", Offset = "0xBEABF0", VA = "0xBEABF0", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xBEAC60", Offset = "0xBEAC60", VA = "0xBEAC60")]
	[IteratorStateMachine(typeof(<SavingMollusk>d__27))]
	private IEnumerator SavingMollusk()
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xBEACFC", Offset = "0xBEACFC", VA = "0xBEACFC")]
	private void ThrowHim()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xBEADA4", Offset = "0xBEADA4", VA = "0xBEADA4")]
	private void MolluskFinishMe()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xBEAE28", Offset = "0xBEAE28", VA = "0xBEAE28")]
	private void LoopKey()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xBEAF20", Offset = "0xBEAF20", VA = "0xBEAF20", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xBEB000", Offset = "0xBEB000", VA = "0xBEB000", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xBEB0E0", Offset = "0xBEB0E0", VA = "0xBEB0E0")]
	private void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xBEB19C", Offset = "0xBEB19C", VA = "0xBEB19C")]
	public void MolluskSaved()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xBEB1A8", Offset = "0xBEB1A8", VA = "0xBEB1A8")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xBEB1C0", Offset = "0xBEB1C0", VA = "0xBEB1C0")]
	public LevelDirector_C3334_Sister()
	{
	}
}
[Token(Token = "0x200024D")]
public class LevelDirector_C3335_Celebration : LevelDirector_Cutscene
{
	[Token(Token = "0x200024E")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3335_Celebration <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xBEC5E0", Offset = "0xBEC5E0", VA = "0xBEC5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xBEC628", Offset = "0xBEC628", VA = "0xBEC628", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xBEBBC4", Offset = "0xBEBBC4", VA = "0xBEBBC4")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xBEBBF4", Offset = "0xBEBBF4", VA = "0xBEBBF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xBEBBF8", Offset = "0xBEBBF8", VA = "0xBEBBF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xBEC5E8", Offset = "0xBEC5E8", VA = "0xBEC5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public ShoutTimer shoutTimerHosts;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Story chefStory;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Story mobStory;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool resettiPlaced;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xBEB9D8", Offset = "0xBEB9D8", VA = "0xBEB9D8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xBEBA78", Offset = "0xBEBA78", VA = "0xBEBA78", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xBEBB04", Offset = "0xBEBB04", VA = "0xBEBB04", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xBEBB90", Offset = "0xBEBB90", VA = "0xBEBB90")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xBEBA04", Offset = "0xBEBA04", VA = "0xBEBA04")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__9))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xBEBBEC", Offset = "0xBEBBEC", VA = "0xBEBBEC")]
	public LevelDirector_C3335_Celebration()
	{
	}
}
[Token(Token = "0x200024F")]
public class LevelDirector_C3336_Fireworks : LevelDirector_Cutscene
{
	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <Fireworks>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C3336_Fireworks <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0xBECCF4", Offset = "0xBECCF4", VA = "0xBECCF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xBECD3C", Offset = "0xBECD3C", VA = "0xBECD3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xBEC970", Offset = "0xBEC970", VA = "0xBEC970")]
		[DebuggerHidden]
		public <Fireworks>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xBECA50", Offset = "0xBECA50", VA = "0xBECA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xBECA54", Offset = "0xBECA54", VA = "0xBECA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xBECCFC", Offset = "0xBECCFC", VA = "0xBECCFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool resettiHidden;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public FireworksManager fireworksManager;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool fireworksDone;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	private bool autoEndStarted;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xBEC630", Offset = "0xBEC630", VA = "0xBEC630", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xBEC6BC", Offset = "0xBEC6BC", VA = "0xBEC6BC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xBEC748", Offset = "0xBEC748", VA = "0xBEC748")]
	private void SpawnSpecialResetti(SpawnResetti resetti)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xBEC77C", Offset = "0xBEC77C", VA = "0xBEC77C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xBEC798", Offset = "0xBEC798", VA = "0xBEC798", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xBEC838", Offset = "0xBEC838", VA = "0xBEC838")]
	public void ButtonAuto()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xBEC8D4", Offset = "0xBEC8D4", VA = "0xBEC8D4")]
	public void ButtonManual()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xBEC7C4", Offset = "0xBEC7C4", VA = "0xBEC7C4")]
	[IteratorStateMachine(typeof(<Fireworks>d__11))]
	private IEnumerator Fireworks()
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xBEC998", Offset = "0xBEC998", VA = "0xBEC998")]
	public void AutoEnd()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xBEC9D0", Offset = "0xBEC9D0", VA = "0xBEC9D0")]
	public void FireworksDone()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xBECA48", Offset = "0xBECA48", VA = "0xBECA48")]
	public LevelDirector_C3336_Fireworks()
	{
	}
}
[Token(Token = "0x2000251")]
public class LevelDirector_C51_Stacking_Cactus : LevelDirector_base
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xBECD44", Offset = "0xBECD44", VA = "0xBECD44", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xBECD98", Offset = "0xBECD98", VA = "0xBECD98")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xBECD60", Offset = "0xBECD60", VA = "0xBECD60")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xBECE60", Offset = "0xBECE60", VA = "0xBECE60", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xBECFD8", Offset = "0xBECFD8", VA = "0xBECFD8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xBED060", Offset = "0xBED060", VA = "0xBED060", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xBED108", Offset = "0xBED108", VA = "0xBED108")]
	public LevelDirector_C51_Stacking_Cactus()
	{
	}
}
[Token(Token = "0x2000252")]
public class LevelDirector_C52_CannonBuilding : LevelDirector_base
{
	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xBED938", Offset = "0xBED938", VA = "0xBED938", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xBED98C", Offset = "0xBED98C", VA = "0xBED98C")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xBED954", Offset = "0xBED954", VA = "0xBED954")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xBEDA54", Offset = "0xBEDA54", VA = "0xBEDA54", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xBEDBCC", Offset = "0xBEDBCC", VA = "0xBEDBCC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xBEDC54", Offset = "0xBEDC54", VA = "0xBEDC54", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xBEDCFC", Offset = "0xBEDCFC", VA = "0xBEDCFC")]
	public LevelDirector_C52_CannonBuilding()
	{
	}
}
[Token(Token = "0x2000253")]
public class LevelDirector_C53_ShipToShore2Barges : LevelDirector_base
{
	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xBEE080", Offset = "0xBEE080", VA = "0xBEE080", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xBEE0D4", Offset = "0xBEE0D4", VA = "0xBEE0D4")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xBEE09C", Offset = "0xBEE09C", VA = "0xBEE09C")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xBEE19C", Offset = "0xBEE19C", VA = "0xBEE19C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xBEE314", Offset = "0xBEE314", VA = "0xBEE314", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xBEE39C", Offset = "0xBEE39C", VA = "0xBEE39C", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xBEE444", Offset = "0xBEE444", VA = "0xBEE444")]
	public LevelDirector_C53_ShipToShore2Barges()
	{
	}
}
[Token(Token = "0x2000254")]
public class LevelDirector_C6000_lasers_battery : LevelDirector_base
{
	[Token(Token = "0x2000255")]
	[CompilerGenerated]
	private sealed class <HatchOpen>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C6000_lasers_battery <>4__this;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody[] <>7__wrap1;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody <_rb>5__4;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xBEEFF8", Offset = "0xBEEFF8", VA = "0xBEEFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xBEF040", Offset = "0xBEF040", VA = "0xBEF040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xBEED34", Offset = "0xBEED34", VA = "0xBEED34")]
		[DebuggerHidden]
		public <HatchOpen>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xBEEE38", Offset = "0xBEEE38", VA = "0xBEEE38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xBEEE3C", Offset = "0xBEEE3C", VA = "0xBEEE3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xBEF000", Offset = "0xBEF000", VA = "0xBEF000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget battery;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget manualTarget;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public CrystalEnergyBase laserEnergyBase;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public VehicleDamage chopper;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool useBatteryGhost;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Rigidbody[] hatches;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool isCharged;

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xBEE710", Offset = "0xBEE710", VA = "0xBEE710", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xBEE844", Offset = "0xBEE844", VA = "0xBEE844", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xBEE8DC", Offset = "0xBEE8DC", VA = "0xBEE8DC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xBEE988", Offset = "0xBEE988", VA = "0xBEE988")]
	private void ChargeLaser(int _energyLevel)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xBEEA2C", Offset = "0xBEEA2C", VA = "0xBEEA2C")]
	[ContextMenu("LaserCharge")]
	private void LaserCharge()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xBEEAEC", Offset = "0xBEEAEC", VA = "0xBEEAEC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xBEEC74", Offset = "0xBEEC74", VA = "0xBEEC74")]
	[ContextMenu("openHatches")]
	private void OpenHatchesAfterBatterySet()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xBEECC0", Offset = "0xBEECC0", VA = "0xBEECC0")]
	[IteratorStateMachine(typeof(<HatchOpen>d__14))]
	private IEnumerator HatchOpen()
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xBEED5C", Offset = "0xBEED5C", VA = "0xBEED5C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xBEEE30", Offset = "0xBEEE30", VA = "0xBEEE30")]
	public LevelDirector_C6000_lasers_battery()
	{
	}
}
[Token(Token = "0x2000256")]
public class LevelDirector_C6001_crystals_explode : LevelDirector_base
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Rigidbody[] hatch;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HazardReceiverCrystal crystalNear;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HazardReceiverCrystal crystalFar;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ConstructionTargetManual crystalTargetNear;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ConstructionTargetManual crystalTargetFar;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject shipDelivery1;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject shipDelivery2;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool isCharged;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xBEF048", Offset = "0xBEF048", VA = "0xBEF048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xBEF068", Offset = "0xBEF068", VA = "0xBEF068", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xBEF0C4", Offset = "0xBEF0C4", VA = "0xBEF0C4")]
	private void StartConversation()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xBEF158", Offset = "0xBEF158", VA = "0xBEF158")]
	[ContextMenu("OpenHatch")]
	private void OpenHatch()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xBEF1E0", Offset = "0xBEF1E0", VA = "0xBEF1E0")]
	public void StartShip2()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xBEF200", Offset = "0xBEF200", VA = "0xBEF200", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xBEF2D8", Offset = "0xBEF2D8", VA = "0xBEF2D8", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xBEF3B0", Offset = "0xBEF3B0", VA = "0xBEF3B0")]
	private void StartCrystalFar()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xBEF438", Offset = "0xBEF438", VA = "0xBEF438")]
	private void CrystalHit(HazardReceiver crystal)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xBEF80C", Offset = "0xBEF80C", VA = "0xBEF80C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xBEF818", Offset = "0xBEF818", VA = "0xBEF818")]
	public LevelDirector_C6001_crystals_explode()
	{
	}
}
[Token(Token = "0x2000257")]
public class LevelDirector_C6002_lasers_slingCharge : LevelDirector_base
{
	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HazardReceiverCrystal mainCrystal;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ConstructionTarget targetLaserCannon;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTargetManual targetCrystalDestroyed;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public CrystalLaser crystalLaser;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public CrystalEnergyBase crystalEnergyBase;

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xBEF820", Offset = "0xBEF820", VA = "0xBEF820", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xBEF8FC", Offset = "0xBEF8FC", VA = "0xBEF8FC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xBEF994", Offset = "0xBEF994", VA = "0xBEF994", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xBEFA2C", Offset = "0xBEFA2C", VA = "0xBEFA2C")]
	public void ChargeLaser(int _charge)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xBEFA80", Offset = "0xBEFA80", VA = "0xBEFA80", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xBEFBC0", Offset = "0xBEFBC0", VA = "0xBEFBC0")]
	public LevelDirector_C6002_lasers_slingCharge()
	{
	}
}
[Token(Token = "0x2000258")]
public class LevelDirector_C6003_lasers_scrapMilitary : LevelDirector_base
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<ConstructionTargetManual> constructionsTargets;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ConstructionTargetManual crystalTarget;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Glue battery;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject[] waves;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int maxWaves;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<GameObject> currentTargets;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int targetsRequired;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int targetsDestroyed;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform coastalGun;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 coastalGunStart;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 coastalOffset;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public HazardReceiverCrystal mainCrystal;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float laserTime;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float laserTimerRequired;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xBEFBC8", Offset = "0xBEFBC8", VA = "0xBEFBC8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xBF004C", Offset = "0xBF004C", VA = "0xBF004C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xBF01E8", Offset = "0xBF01E8", VA = "0xBF01E8")]
	[ContextMenu("StartCoastalGun")]
	private void StartCoastalGun()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xBF0384", Offset = "0xBF0384", VA = "0xBF0384")]
	private void SetWave(int wave)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xBEFE60", Offset = "0xBEFE60", VA = "0xBEFE60")]
	private void NextWave()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xBF00EC", Offset = "0xBF00EC", VA = "0xBF00EC")]
	[ContextMenu("LevelSuccess")]
	private void LevelSuccess()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xBF03CC", Offset = "0xBF03CC", VA = "0xBF03CC")]
	private void EvalChange(GameObject _go)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xBF04CC", Offset = "0xBF04CC", VA = "0xBF04CC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xBF05AC", Offset = "0xBF05AC", VA = "0xBF05AC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xBF068C", Offset = "0xBF068C", VA = "0xBF068C")]
	private void StatusChange(VehicleDamage vehicleDamage, VehicleDamage.Status status)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xBF07E8", Offset = "0xBF07E8", VA = "0xBF07E8")]
	private void DestroyerDestroyed(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xBF07EC", Offset = "0xBF07EC", VA = "0xBF07EC", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xBF07F0", Offset = "0xBF07F0", VA = "0xBF07F0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xBF0860", Offset = "0xBF0860", VA = "0xBF0860")]
	public LevelDirector_C6003_lasers_scrapMilitary()
	{
	}
}
[Token(Token = "0x2000259")]
public class LevelDirector_C60_ShipToShore1BargeHard : LevelDirector_base
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xBF0964", Offset = "0xBF0964", VA = "0xBF0964", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xBF09B8", Offset = "0xBF09B8", VA = "0xBF09B8")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xBF0980", Offset = "0xBF0980", VA = "0xBF0980")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xBF0A80", Offset = "0xBF0A80", VA = "0xBF0A80", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xBF0BF8", Offset = "0xBF0BF8", VA = "0xBF0BF8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xBF0C80", Offset = "0xBF0C80", VA = "0xBF0C80", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xBF0D28", Offset = "0xBF0D28", VA = "0xBF0D28")]
	public LevelDirector_C60_ShipToShore1BargeHard()
	{
	}
}
[Token(Token = "0x200025A")]
public class LevelDirector_C61_DiagonalHard : LevelDirector_base
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumansInteraction secondSister;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] introKeys;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string[] levelDoneKeys;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int convoIDX;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool levelDone;

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xBF0F3C", Offset = "0xBF0F3C", VA = "0xBF0F3C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xBF0F90", Offset = "0xBF0F90", VA = "0xBF0F90")]
	private void SisterConvo(bool firstIsMain, string _key)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xBF0F58", Offset = "0xBF0F58", VA = "0xBF0F58")]
	private void StartConvo()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xBF1058", Offset = "0xBF1058", VA = "0xBF1058", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xBF11D0", Offset = "0xBF11D0", VA = "0xBF11D0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xBF1258", Offset = "0xBF1258", VA = "0xBF1258", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xBF1300", Offset = "0xBF1300", VA = "0xBF1300")]
	public LevelDirector_C61_DiagonalHard()
	{
	}
}
[Token(Token = "0x200025B")]
public class LevelDirector_C7000_sister_heistPrep : LevelDirector_Cutscene
{
	[Token(Token = "0x200025C")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7000_sister_heistPrep <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xBF2834", Offset = "0xBF2834", VA = "0xBF2834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xBF287C", Offset = "0xBF287C", VA = "0xBF287C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xBF18F0", Offset = "0xBF18F0", VA = "0xBF18F0")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xBF1920", Offset = "0xBF1920", VA = "0xBF1920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xBF1924", Offset = "0xBF1924", VA = "0xBF1924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xBF283C", Offset = "0xBF283C", VA = "0xBF283C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool teamAssembled;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	private bool partyFeedbackActive;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private BubbleToCharacter lastPartyFeedbackBubble;

	[Token(Token = "0x170000EB")]
	public bool TeamAssembled
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xBF1514", Offset = "0xBF1514", VA = "0xBF1514")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xBF151C", Offset = "0xBF151C", VA = "0xBF151C")]
		set
		{
		}
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xBF1528", Offset = "0xBF1528", VA = "0xBF1528", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xBF1530", Offset = "0xBF1530", VA = "0xBF1530")]
	public void HumanPlacement(HumanController humanController, bool requiredHuman, bool added)
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xBF1850", Offset = "0xBF1850", VA = "0xBF1850", Slot = "9")]
	public override void InitialTalk()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xBF187C", Offset = "0xBF187C", VA = "0xBF187C")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__9))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xBF1918", Offset = "0xBF1918", VA = "0xBF1918")]
	public LevelDirector_C7000_sister_heistPrep()
	{
	}
}
[Token(Token = "0x200025D")]
public class LevelDirector_C7001_flossenhammer : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x200025E")]
	[CompilerGenerated]
	private sealed class <ReleaseSedative>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_flossenhammer <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xBF2CE4", Offset = "0xBF2CE4", VA = "0xBF2CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xBF2D2C", Offset = "0xBF2D2C", VA = "0xBF2D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xBF2948", Offset = "0xBF2948", VA = "0xBF2948")]
		[DebuggerHidden]
		public <ReleaseSedative>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xBF2AA8", Offset = "0xBF2AA8", VA = "0xBF2AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xBF2AAC", Offset = "0xBF2AAC", VA = "0xBF2AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xBF2CEC", Offset = "0xBF2CEC", VA = "0xBF2CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject sedative;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float timer;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool isInArea;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	private bool sedativesReleased;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	private bool firstTimeInPosition;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject noTrespassingPool;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SharkController[] sharks;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject overPoolTrigger;

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xBF2884", Offset = "0xBF2884", VA = "0xBF2884", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xBF28B4", Offset = "0xBF28B4", VA = "0xBF28B4")]
	[ContextMenu("DebugReleaseSedative")]
	public void DebugSedative()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xBF28D4", Offset = "0xBF28D4", VA = "0xBF28D4")]
	[IteratorStateMachine(typeof(<ReleaseSedative>d__10))]
	private IEnumerator ReleaseSedative()
	{
		return null;
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xBF2970", Offset = "0xBF2970", VA = "0xBF2970")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xBF29E0", Offset = "0xBF29E0", VA = "0xBF29E0", Slot = "30")]
	public override void PositionOverPoolReached(bool enter)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xBF2A88", Offset = "0xBF2A88", VA = "0xBF2A88")]
	public LevelDirector_C7001_flossenhammer()
	{
	}
}
[Token(Token = "0x200025F")]
public class LevelDirector_C7001_gamberino : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xBF2D34", Offset = "0xBF2D34", VA = "0xBF2D34", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xBF2D3C", Offset = "0xBF2D3C", VA = "0xBF2D3C")]
	public LevelDirector_C7001_gamberino()
	{
	}
}
[Token(Token = "0x2000260")]
public class LevelDirector_C7001_Guarddog : LevelDirector_base
{
	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject waypointCrane;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject waypointRayLamp;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int targetWaypointID;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int idleWaypointID;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool huntRandomPerson;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	public bool patrolOnStart;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	public bool onlyChaseRayLamp;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int dogVoice;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_C7001_Sister mainHost;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool isAlarmed;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool rayLampIsIn;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string lastCharacterID;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int characterHits;

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xBF2D4C", Offset = "0xBF2D4C", VA = "0xBF2D4C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xBF2E2C", Offset = "0xBF2E2C", VA = "0xBF2E2C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xBF2F0C", Offset = "0xBF2F0C", VA = "0xBF2F0C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xBF2F90", Offset = "0xBF2F90", VA = "0xBF2F90")]
	private void MovementSettings()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xBF3260", Offset = "0xBF3260", VA = "0xBF3260")]
	[ContextMenu("LookForWaypoint")]
	private void LookForWaypoint()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xBF2F64", Offset = "0xBF2F64", VA = "0xBF2F64")]
	private void DisableMoving()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xBF32A4", Offset = "0xBF32A4", VA = "0xBF32A4", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xBF2FDC", Offset = "0xBF2FDC", VA = "0xBF2FDC")]
	public void HumanEntersTrigger(List<HumanController> humanController, bool isDogMan, bool areaIsEmpty)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xBF3674", Offset = "0xBF3674", VA = "0xBF3674")]
	private void Alarm(HumanController hc)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xBF3700", Offset = "0xBF3700", VA = "0xBF3700")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xBF380C", Offset = "0xBF380C", VA = "0xBF380C")]
	public LevelDirector_C7001_Guarddog()
	{
	}
}
[Token(Token = "0x2000261")]
public class LevelDirector_C7001_guardEntrance : LevelDirector_C7001_guardGeneric
{
	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <HouseEnd>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_guardEntrance <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0xBF47E4", Offset = "0xBF47E4", VA = "0xBF47E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xBF482C", Offset = "0xBF482C", VA = "0xBF482C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xBF3EE8", Offset = "0xBF3EE8", VA = "0xBF3EE8")]
		[DebuggerHidden]
		public <HouseEnd>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xBF4710", Offset = "0xBF4710", VA = "0xBF4710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xBF4714", Offset = "0xBF4714", VA = "0xBF4714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xBF47EC", Offset = "0xBF47EC", VA = "0xBF47EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ConstructionTargetManual target;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool gateLocked;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	private bool needsToPee;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject trespassingTriggers;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool goToHouseStarted;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject houseEntryWaypoint;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool guardRemoved;

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xBF3824", Offset = "0xBF3824", VA = "0xBF3824", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xBF38F0", Offset = "0xBF38F0", VA = "0xBF38F0")]
	public void ActivateGuard()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xBF3984", Offset = "0xBF3984", VA = "0xBF3984")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xBF3BFC", Offset = "0xBF3BFC", VA = "0xBF3BFC")]
	private void RemoveGuard()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xBF3E1C", Offset = "0xBF3E1C", VA = "0xBF3E1C")]
	private void GoToHouse()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xBF3E74", Offset = "0xBF3E74", VA = "0xBF3E74")]
	[IteratorStateMachine(typeof(<HouseEnd>d__12))]
	private IEnumerator HouseEnd()
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xBF3F10", Offset = "0xBF3F10", VA = "0xBF3F10")]
	[ContextMenu("NeedForPee")]
	private void StartNeedForPee()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xBF3FA8", Offset = "0xBF3FA8", VA = "0xBF3FA8", Slot = "29")]
	public override void Trespasser(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xBF4034", Offset = "0xBF4034", VA = "0xBF4034")]
	private void TrespassingInsert()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xBF4128", Offset = "0xBF4128", VA = "0xBF4128", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xBF42F4", Offset = "0xBF42F4", VA = "0xBF42F4", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xBF4434", Offset = "0xBF4434", VA = "0xBF4434", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xBF4548", Offset = "0xBF4548", VA = "0xBF4548", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xBF46A0", Offset = "0xBF46A0", VA = "0xBF46A0", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xBF46A4", Offset = "0xBF46A4", VA = "0xBF46A4")]
	public LevelDirector_C7001_guardEntrance()
	{
	}
}
[Token(Token = "0x2000263")]
public class LevelDirector_C7001_guardGeneric : LevelDirector_base
{
	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string trespassingReactionID;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string grabbedReactionID;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<string> trespassingID;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string emoSFXOnTrespass;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool reactionOnGrab;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xBF4834", Offset = "0xBF4834", VA = "0xBF4834", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xBF48B4", Offset = "0xBF48B4", VA = "0xBF48B4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xBF4934", Offset = "0xBF4934", VA = "0xBF4934", Slot = "29")]
	public virtual void Trespasser(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xBF4B10", Offset = "0xBF4B10", VA = "0xBF4B10", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xBF46B0", Offset = "0xBF46B0", VA = "0xBF46B0")]
	public LevelDirector_C7001_guardGeneric()
	{
	}
}
[Token(Token = "0x2000264")]
public class LevelDirector_C7001_guardShip : LevelDirector_C7001_guardGeneric
{
	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Rigidbody[] shipDisasterBS;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject humanAttach;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public FloatRigidbody shipFloatRB;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float angleBetweenShip;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject restrictedArea;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool shipLose;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool shipInWater;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool shipIsSinking;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	private bool areaLocked;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject explosions;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool reactionOnSlap;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Rigidbody gangway;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[EventRef]
	public string shipSinksSFX;

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xBF4C10", Offset = "0xBF4C10", VA = "0xBF4C10", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xBF4D7C", Offset = "0xBF4D7C", VA = "0xBF4D7C")]
	public void SetReactions(bool which)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xBF4D8C", Offset = "0xBF4D8C", VA = "0xBF4D8C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xBF4E6C", Offset = "0xBF4E6C", VA = "0xBF4E6C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xBF4F4C", Offset = "0xBF4F4C", VA = "0xBF4F4C")]
	[ContextMenu("ReleaseShip")]
	private void ReleaseShip()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xBF51A8", Offset = "0xBF51A8", VA = "0xBF51A8")]
	private void LockArea(bool mode)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xBF51B4", Offset = "0xBF51B4", VA = "0xBF51B4", Slot = "30")]
	public virtual void Grabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xBF5278", Offset = "0xBF5278", VA = "0xBF5278")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xBF538C", Offset = "0xBF538C", VA = "0xBF538C")]
	private void WaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xBF53A8", Offset = "0xBF53A8", VA = "0xBF53A8")]
	private void FollowShip()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xBF4C7C", Offset = "0xBF4C7C", VA = "0xBF4C7C")]
	private void SetShipRBs(bool mode)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xBF5454", Offset = "0xBF5454", VA = "0xBF5454")]
	public void UnlockArea()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xBF545C", Offset = "0xBF545C", VA = "0xBF545C")]
	private void TapReact()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xBF550C", Offset = "0xBF550C", VA = "0xBF550C", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xBF55AC", Offset = "0xBF55AC", VA = "0xBF55AC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xBF561C", Offset = "0xBF561C", VA = "0xBF561C")]
	public LevelDirector_C7001_guardShip()
	{
	}
}
[Token(Token = "0x2000265")]
public class LevelDirector_C7001_heistHeroes : LevelDirector_base
{
	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool elevatorReset;

	[Token(Token = "0x4000EB8")]
	private const string flossenhammerTrigger = "flossenhammerTrigger";

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xBF5620", Offset = "0xBF5620", VA = "0xBF5620", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xBF56E4", Offset = "0xBF56E4", VA = "0xBF56E4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xBF57A8", Offset = "0xBF57A8", VA = "0xBF57A8", Slot = "29")]
	public virtual void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xBF58A0", Offset = "0xBF58A0", VA = "0xBF58A0", Slot = "30")]
	public virtual void PositionOverPoolReached(bool enter)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xBF5930", Offset = "0xBF5930", VA = "0xBF5930", Slot = "31")]
	public virtual void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xBF2A98", Offset = "0xBF2A98", VA = "0xBF2A98")]
	public LevelDirector_C7001_heistHeroes()
	{
	}
}
[Token(Token = "0x2000266")]
public class LevelDirector_C7001_mayor : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Animation Gears;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Animation Pistons;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject FactoryFX;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool factoryIsOn;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base workerFactory;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject factoryLock;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AutoSpawn[] spawners;

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xBF5B58", Offset = "0xBF5B58", VA = "0xBF5B58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xBF5C2C", Offset = "0xBF5C2C", VA = "0xBF5C2C")]
	public void UnlockFactoryWindow(bool which)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xBF5B84", Offset = "0xBF5B84", VA = "0xBF5B84")]
	[ContextMenu("factoryOn")]
	private void SetFactory(bool which)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xBF5C50", Offset = "0xBF5C50", VA = "0xBF5C50", Slot = "31")]
	public override void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xBF5DD0", Offset = "0xBF5DD0", VA = "0xBF5DD0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xBF5D58", Offset = "0xBF5D58", VA = "0xBF5D58")]
	public void MayorOnTarget()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xBF5FC0", Offset = "0xBF5FC0", VA = "0xBF5FC0")]
	[ContextMenu("FactoryStart")]
	private void FactoryStart()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xBF6038", Offset = "0xBF6038", VA = "0xBF6038")]
	public LevelDirector_C7001_mayor()
	{
	}
}
[Token(Token = "0x2000267")]
public class LevelDirector_C7001_professor : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform professorAttach;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform amtMachine;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform jitterRoot;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base amtLeveldirector;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public FadeLighting fadeLighting;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform LuskCabin;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject bossCore;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] GasEmitters;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool gas;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Animation ani;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool inPosition;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xBF6048", Offset = "0xBF6048", VA = "0xBF6048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xBF604C", Offset = "0xBF604C", VA = "0xBF604C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xBF6098", Offset = "0xBF6098", VA = "0xBF6098", Slot = "31")]
	public override void Trespassing(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xBF61A8", Offset = "0xBF61A8", VA = "0xBF61A8")]
	public void PositionReached()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xBF62D4", Offset = "0xBF62D4", VA = "0xBF62D4")]
	public void RevealLusk()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xBF62F8", Offset = "0xBF62F8", VA = "0xBF62F8")]
	[ContextMenu("TestAmtReveal")]
	private void TestAmtReveal()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xBF6304", Offset = "0xBF6304", VA = "0xBF6304")]
	public void TriggerAMTReveal(float _duration = 8f, float _delay = 0f)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xBF63EC", Offset = "0xBF63EC", VA = "0xBF63EC")]
	[ContextMenu("AnimateRobot")]
	public void AnimateRobot()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xBF6408", Offset = "0xBF6408", VA = "0xBF6408")]
	[ContextMenu("ToggleGas")]
	public void ToggleGas()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xBF6414", Offset = "0xBF6414", VA = "0xBF6414")]
	public void ToggleGas(float delayLight, float lightDuration)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xBF650C", Offset = "0xBF650C", VA = "0xBF650C")]
	private void StartCough()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xBF6530", Offset = "0xBF6530", VA = "0xBF6530")]
	private void StartElviraHurt()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xBF6618", Offset = "0xBF6618", VA = "0xBF6618")]
	private void FadeLight()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xBF6634", Offset = "0xBF6634", VA = "0xBF6634")]
	public LevelDirector_C7001_professor()
	{
	}
}
[Token(Token = "0x2000268")]
public class LevelDirector_C7001_raylamp : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rayisOutside;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject elevatorBlock;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int characterHits;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xBF6644", Offset = "0xBF6644", VA = "0xBF6644", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xBF6704", Offset = "0xBF6704", VA = "0xBF6704", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xBF67A0", Offset = "0xBF67A0", VA = "0xBF67A0")]
	private void DestinationReached(string _id)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xBF68DC", Offset = "0xBF68DC", VA = "0xBF68DC", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xBF6B20", Offset = "0xBF6B20", VA = "0xBF6B20")]
	public LevelDirector_C7001_raylamp()
	{
	}
}
[Token(Token = "0x2000269")]
public class LevelDirector_C7001_scupporgy : LevelDirector_C7001_heistHeroes
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Rigidbody[] craneControl;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform[] LatchRings;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject Led_ON;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject Led_OFF;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject gangwayWaypoint;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool boxOpen;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xBF6B30", Offset = "0xBF6B30", VA = "0xBF6B30", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xBF6C4C", Offset = "0xBF6C4C", VA = "0xBF6C4C")]
	[ContextMenu("EnableCrane")]
	public void EnableCrane()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xBF6B7C", Offset = "0xBF6B7C", VA = "0xBF6B7C")]
	private void LockCraneControl(bool mode)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xBF6C94", Offset = "0xBF6C94", VA = "0xBF6C94", Slot = "13")]
	public override void HostEvent(BubbleToCharacter bubble, string eventString, UnityEngine.Object objPara)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xBF6EA0", Offset = "0xBF6EA0", VA = "0xBF6EA0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xBF6DD0", Offset = "0xBF6DD0", VA = "0xBF6DD0")]
	private void OpenBoxBriefing()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xBF6F94", Offset = "0xBF6F94", VA = "0xBF6F94")]
	public void JointBreak()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xBF71AC", Offset = "0xBF71AC", VA = "0xBF71AC")]
	public LevelDirector_C7001_scupporgy()
	{
	}
}
[Token(Token = "0x200026A")]
public class LevelDirector_C7001_Sister : LevelDirector_base
{
	[Token(Token = "0x200026B")]
	private enum State
	{
		[Token(Token = "0x4000F07")]
		None,
		[Token(Token = "0x4000F08")]
		WaitForConvo,
		[Token(Token = "0x4000F09")]
		WaitForConvoDone
	}

	[Token(Token = "0x200026C")]
	public enum Phase
	{
		[Token(Token = "0x4000F0B")]
		intro,
		[Token(Token = "0x4000F0C")]
		entranceGuardRemoved,
		[Token(Token = "0x4000F0D")]
		gangwaySnatched,
		[Token(Token = "0x4000F0E")]
		gangwayPositioned,
		[Token(Token = "0x4000F0F")]
		rayLampPositioned,
		[Token(Token = "0x4000F10")]
		scupPorgyInElevator,
		[Token(Token = "0x4000F11")]
		craneControlReady,
		[Token(Token = "0x4000F12")]
		factoryStarted,
		[Token(Token = "0x4000F13")]
		sharksSedated,
		[Token(Token = "0x4000F14")]
		plugPulled,
		[Token(Token = "0x4000F15")]
		computerAccessed
	}

	[Token(Token = "0x200026D")]
	[CompilerGenerated]
	private sealed class <Intro>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xBF8888", Offset = "0xBF8888", VA = "0xBF8888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xBF88D0", Offset = "0xBF88D0", VA = "0xBF88D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xBF7460", Offset = "0xBF7460", VA = "0xBF7460")]
		[DebuggerHidden]
		public <Intro>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xBF8500", Offset = "0xBF8500", VA = "0xBF8500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xBF8504", Offset = "0xBF8504", VA = "0xBF8504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xBF8890", Offset = "0xBF8890", VA = "0xBF8890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[CompilerGenerated]
	private sealed class <Entrance>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xBF89E8", Offset = "0xBF89E8", VA = "0xBF89E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xBF8A30", Offset = "0xBF8A30", VA = "0xBF8A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xBF74FC", Offset = "0xBF74FC", VA = "0xBF74FC")]
		[DebuggerHidden]
		public <Entrance>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xBF88D8", Offset = "0xBF88D8", VA = "0xBF88D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xBF88DC", Offset = "0xBF88DC", VA = "0xBF88DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xBF89F0", Offset = "0xBF89F0", VA = "0xBF89F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[CompilerGenerated]
	private sealed class <ShipGangway>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xBF8B54", Offset = "0xBF8B54", VA = "0xBF8B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xBF8B9C", Offset = "0xBF8B9C", VA = "0xBF8B9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xBF7598", Offset = "0xBF7598", VA = "0xBF7598")]
		[DebuggerHidden]
		public <ShipGangway>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xBF8A38", Offset = "0xBF8A38", VA = "0xBF8A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xBF8A3C", Offset = "0xBF8A3C", VA = "0xBF8A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xBF8B5C", Offset = "0xBF8B5C", VA = "0xBF8B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[CompilerGenerated]
	private sealed class <GangwayEntrance>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xBF8DDC", Offset = "0xBF8DDC", VA = "0xBF8DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xBF8E24", Offset = "0xBF8E24", VA = "0xBF8E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xBF7634", Offset = "0xBF7634", VA = "0xBF7634")]
		[DebuggerHidden]
		public <GangwayEntrance>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xBF8BA4", Offset = "0xBF8BA4", VA = "0xBF8BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xBF8BA8", Offset = "0xBF8BA8", VA = "0xBF8BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xBF8DE4", Offset = "0xBF8DE4", VA = "0xBF8DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[CompilerGenerated]
	private sealed class <DogsCrane>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xBF8F0C", Offset = "0xBF8F0C", VA = "0xBF8F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xBF8F54", Offset = "0xBF8F54", VA = "0xBF8F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xBF76D0", Offset = "0xBF76D0", VA = "0xBF76D0")]
		[DebuggerHidden]
		public <DogsCrane>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xBF8E2C", Offset = "0xBF8E2C", VA = "0xBF8E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xBF8E30", Offset = "0xBF8E30", VA = "0xBF8E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xBF8F14", Offset = "0xBF8F14", VA = "0xBF8F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <Factory>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xBF914C", Offset = "0xBF914C", VA = "0xBF914C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xBF9194", Offset = "0xBF9194", VA = "0xBF9194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xBF776C", Offset = "0xBF776C", VA = "0xBF776C")]
		[DebuggerHidden]
		public <Factory>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xBF8F5C", Offset = "0xBF8F5C", VA = "0xBF8F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xBF8F60", Offset = "0xBF8F60", VA = "0xBF8F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xBF9154", Offset = "0xBF9154", VA = "0xBF9154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[CompilerGenerated]
	private sealed class <Sharks>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xBF927C", Offset = "0xBF927C", VA = "0xBF927C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xBF92C4", Offset = "0xBF92C4", VA = "0xBF92C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xBF7808", Offset = "0xBF7808", VA = "0xBF7808")]
		[DebuggerHidden]
		public <Sharks>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xBF919C", Offset = "0xBF919C", VA = "0xBF919C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xBF91A0", Offset = "0xBF91A0", VA = "0xBF91A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xBF9284", Offset = "0xBF9284", VA = "0xBF9284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[CompilerGenerated]
	private sealed class <Pool>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xA67318", Offset = "0xA67318", VA = "0xA67318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xA67360", Offset = "0xA67360", VA = "0xA67360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xA671F0", Offset = "0xA671F0", VA = "0xA671F0")]
		[DebuggerHidden]
		public <Pool>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xA67218", Offset = "0xA67218", VA = "0xA67218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xA6721C", Offset = "0xA6721C", VA = "0xA6721C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA67320", Offset = "0xA67320", VA = "0xA67320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <Vault>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xA6747C", Offset = "0xA6747C", VA = "0xA6747C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xA674C4", Offset = "0xA674C4", VA = "0xA674C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA67368", Offset = "0xA67368", VA = "0xA67368")]
		[DebuggerHidden]
		public <Vault>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xA67390", Offset = "0xA67390", VA = "0xA67390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xA67394", Offset = "0xA67394", VA = "0xA67394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xA67484", Offset = "0xA67484", VA = "0xA67484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[CompilerGenerated]
	private sealed class <AMT>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C7001_Sister <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xA67F04", Offset = "0xA67F04", VA = "0xA67F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xA67F4C", Offset = "0xA67F4C", VA = "0xA67F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xA674CC", Offset = "0xA674CC", VA = "0xA674CC")]
		[DebuggerHidden]
		public <AMT>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xA674F4", Offset = "0xA674F4", VA = "0xA674F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xA674F8", Offset = "0xA674F8", VA = "0xA674F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xA67F0C", Offset = "0xA67F0C", VA = "0xA67F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public LevelDirector_base resetto;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public LevelDirector_C7001_Sister sister;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_C7001_professor professor;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_C7001_mayor mayor;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base scupPorgy;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base rayLamp;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base flossenhammer;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_C7001_guardShip shipGuard;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_C7001_guardEntrance gateGuard;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LevelDirector_base amtLeveldirector;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Phase sequencePhase;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool entranceGuardRemoved;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
	public bool gangwaySnatched;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
	public bool gangwayPositioned;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FB")]
	public bool rayLampPositioned;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public bool scupPorgyInElevator;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
	public bool craneControlReady;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
	public bool factoryStarted;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FF")]
	public bool sharksSedated;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool plugPulled;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	public bool computerAccessed;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
	public bool introTrespassing;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
	private bool gangwayGrabCheck;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool gangwayGrabbed;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ConstructionTargetManual target_sharkTestExplosion;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public ConstructionTargetManual target_entranceGuardRemoved;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public ConstructionTargetManual target_gangwaySnatched;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public ConstructionTarget target_gangwayPositioned;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ConstructionTargetManual target_rayLampPositioned;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public ConstructionTargetManual target_scupPorgyInElevator;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public ConstructionTargetManual target_craneControlReady;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ConstructionTargetManual target_factoryStarted;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public ConstructionTargetManual target_sharksSedated;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public ConstructionTargetManual target_plugPulled;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public ConstructionTargetManual target_computerAccessed;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public PoolPlugLogic plugLogic;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject gangway;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public MolluskWebcam webcam;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelDirector_C7001_Sister _instance;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private bool debugCraneEnabled;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	private bool debugfactoryStarted;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
	private bool debugSharksSedated;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27B")]
	private bool debugPlugPulled;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private bool debugVaultReached;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
	private bool debugGasToggled;

	[Token(Token = "0x170000F2")]
	public static LevelDirector_C7001_Sister Instance
	{
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xBF71BC", Offset = "0xBF71BC", VA = "0xBF71BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xBF7348", Offset = "0xBF7348", VA = "0xBF7348", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xBF739C", Offset = "0xBF739C", VA = "0xBF739C")]
	[IteratorStateMachine(typeof(<Intro>d__48))]
	private IEnumerator Intro()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xBF7488", Offset = "0xBF7488", VA = "0xBF7488")]
	[IteratorStateMachine(typeof(<Entrance>d__49))]
	private IEnumerator Entrance()
	{
		return null;
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xBF7524", Offset = "0xBF7524", VA = "0xBF7524")]
	[IteratorStateMachine(typeof(<ShipGangway>d__50))]
	private IEnumerator ShipGangway()
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xBF75C0", Offset = "0xBF75C0", VA = "0xBF75C0")]
	[IteratorStateMachine(typeof(<GangwayEntrance>d__51))]
	private IEnumerator GangwayEntrance()
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xBF765C", Offset = "0xBF765C", VA = "0xBF765C")]
	[IteratorStateMachine(typeof(<DogsCrane>d__52))]
	private IEnumerator DogsCrane()
	{
		return null;
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xBF76F8", Offset = "0xBF76F8", VA = "0xBF76F8")]
	[IteratorStateMachine(typeof(<Factory>d__53))]
	private IEnumerator Factory()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xBF7794", Offset = "0xBF7794", VA = "0xBF7794")]
	[IteratorStateMachine(typeof(<Sharks>d__54))]
	private IEnumerator Sharks()
	{
		return null;
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xBF7830", Offset = "0xBF7830", VA = "0xBF7830")]
	[IteratorStateMachine(typeof(<Pool>d__55))]
	private IEnumerator Pool()
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xBF78A4", Offset = "0xBF78A4", VA = "0xBF78A4")]
	[IteratorStateMachine(typeof(<Vault>d__56))]
	private IEnumerator Vault()
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xBF7918", Offset = "0xBF7918", VA = "0xBF7918")]
	[IteratorStateMachine(typeof(<AMT>d__57))]
	private IEnumerator AMT()
	{
		return null;
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xBF798C", Offset = "0xBF798C", VA = "0xBF798C", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xBF7A6C", Offset = "0xBF7A6C", VA = "0xBF7A6C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xBF7B4C", Offset = "0xBF7B4C", VA = "0xBF7B4C")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xBF4610", Offset = "0xBF4610", VA = "0xBF4610")]
	public void PauseConvo([Optional] LevelDirector_base _levelDirector)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xBF7BD8", Offset = "0xBF7BD8", VA = "0xBF7BD8")]
	private void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xBF7C50", Offset = "0xBF7C50", VA = "0xBF7C50")]
	private bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xBF7DCC", Offset = "0xBF7DCC", VA = "0xBF7DCC", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xBF7410", Offset = "0xBF7410", VA = "0xBF7410")]
	private void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xBF7EA8", Offset = "0xBF7EA8", VA = "0xBF7EA8", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xBF7FF4", Offset = "0xBF7FF4", VA = "0xBF7FF4")]
	private void Trespasser(Rigidbody _trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xBF3DCC", Offset = "0xBF3DCC", VA = "0xBF3DCC")]
	public void EntranceGuardRemoved()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xBF5158", Offset = "0xBF5158", VA = "0xBF5158")]
	public void GangwaySnatched()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xBF7F40", Offset = "0xBF7F40", VA = "0xBF7F40")]
	public void GangwayPositioned()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xBF68A0", Offset = "0xBF68A0", VA = "0xBF68A0")]
	public void RayLampPositioned()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xBF6D94", Offset = "0xBF6D94", VA = "0xBF6D94")]
	public void ScupPorgyInElevator()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xBF715C", Offset = "0xBF715C", VA = "0xBF715C")]
	public void CraneControlReady()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xBF5FE8", Offset = "0xBF5FE8", VA = "0xBF5FE8")]
	public void FactoryStarted()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xBF2C40", Offset = "0xBF2C40", VA = "0xBF2C40")]
	public void SharksSedated()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xBF8074", Offset = "0xBF8074", VA = "0xBF8074")]
	public void PlugPulled()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xBF6284", Offset = "0xBF6284", VA = "0xBF6284")]
	[ContextMenu("ComputerAccessed")]
	public void ComputerAccessed()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xBF80C4", Offset = "0xBF80C4", VA = "0xBF80C4")]
	public void DebugEnableCrane()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xBF817C", Offset = "0xBF817C", VA = "0xBF817C")]
	public void DebugStartFactory()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xBF822C", Offset = "0xBF822C", VA = "0xBF822C")]
	public void DebugSedateSharks()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xBF82EC", Offset = "0xBF82EC", VA = "0xBF82EC")]
	public void DebugPullPlug()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xBF8390", Offset = "0xBF8390", VA = "0xBF8390")]
	public void DebugVaultReached()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xBF8418", Offset = "0xBF8418", VA = "0xBF8418")]
	public void DebugStartGas()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xBF84A8", Offset = "0xBF84A8", VA = "0xBF84A8")]
	public LevelDirector_C7001_Sister()
	{
	}
}
[Token(Token = "0x2000277")]
public class LevelDirector_C8001_IslandBooster_Mollusk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x2000278")]
	public enum Marker
	{
		[Token(Token = "0x4000F5A")]
		none,
		[Token(Token = "0x4000F5B")]
		briefing,
		[Token(Token = "0x4000F5C")]
		targetsDone,
		[Token(Token = "0x4000F5D")]
		poseQuestion,
		[Token(Token = "0x4000F5E")]
		answerYes
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <IslandBooster>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Marker marker;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelDirector_C8001_IslandBooster_Mollusk <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xA6A304", Offset = "0xA6A304", VA = "0xA6A304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xA6A34C", Offset = "0xA6A34C", VA = "0xA6A34C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xA68250", Offset = "0xA68250", VA = "0xA68250")]
		[DebuggerHidden]
		public <IslandBooster>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xA6973C", Offset = "0xA6973C", VA = "0xA6973C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xA69740", Offset = "0xA69740", VA = "0xA69740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xA6A30C", Offset = "0xA6A30C", VA = "0xA6A30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[CompilerGenerated]
	private sealed class <ExplodeClamps>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C8001_IslandBooster_Mollusk <>4__this;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform[] <>7__wrap1;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xA6A4FC", Offset = "0xA6A4FC", VA = "0xA6A4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xA6A544", Offset = "0xA6A544", VA = "0xA6A544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xA694A8", Offset = "0xA694A8", VA = "0xA694A8")]
		[DebuggerHidden]
		public <ExplodeClamps>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xA6A354", Offset = "0xA6A354", VA = "0xA6A354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xA6A358", Offset = "0xA6A358", VA = "0xA6A358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xA6A504", Offset = "0xA6A504", VA = "0xA6A504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform[] clamps;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ConstructionRocket mainBooster;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public CrystalEnergyBase catalyser;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GlueConnections boosterGlued;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject exploPrefab;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base mollusk;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int energyLevel;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Glued LandMass;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3 landMassStartPos;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Rigidbody landmassRB;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Glued leftAttach;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Glued rightAttach;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool boosterArmed;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public EntityDefinition powerSlingEntityDef;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int connectedPowerslingsRequired;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public EntityDefinition[] connectedEntityDefsNeeded;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public ConstructionTargetManual[] slingTargets;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ConstructionTargetManual boosterArmedTarget;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int connectedSlingsToLandmass;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 boosterPosition;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float timerAfterFullPower;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public StayInPlace quadcopterController;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Transform quadcopterLaunchTarget;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Transform luskHover;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject rubble;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform luskLeave;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public WeightCounterForce weightCounterForce;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject limits;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool luskbeforeBreakOff;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float nextJumpOff;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float shakeOffset;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private bool helpShoutTriggered;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AD")]
	private bool landmassReleased;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AE")]
	private bool released;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private int questionAnswered;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private bool wasDone;

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xA67F54", Offset = "0xA67F54", VA = "0xA67F54", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xA6817C", Offset = "0xA6817C", VA = "0xA6817C")]
	[IteratorStateMachine(typeof(<IslandBooster>d__31))]
	private IEnumerator IslandBooster(Marker marker = Marker.none)
	{
		return null;
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xA68278", Offset = "0xA68278", VA = "0xA68278", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xA683CC", Offset = "0xA683CC", VA = "0xA683CC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xA68520", Offset = "0xA68520", VA = "0xA68520")]
	private void EnergyLevelChange(int _level)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xA68824", Offset = "0xA68824", VA = "0xA68824")]
	private void ChainChange(List<GlueConnections> connectionChain)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xA6883C", Offset = "0xA6883C", VA = "0xA6883C")]
	private int CheckAttach(Glued whichAttach)
	{
		return default(int);
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xA6878C", Offset = "0xA6878C", VA = "0xA6878C")]
	private void CheckConnectionsToIsland()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xA6853C", Offset = "0xA6853C", VA = "0xA6853C")]
	private void CheckEnergyFlow()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xA68B5C", Offset = "0xA68B5C", VA = "0xA68B5C")]
	private float GetRND(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xA68B64", Offset = "0xA68B64", VA = "0xA68B64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xA68ED4", Offset = "0xA68ED4", VA = "0xA68ED4")]
	private void JumpOff()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xA68E84", Offset = "0xA68E84", VA = "0xA68E84")]
	private void ReleaseLandmass()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xA69154", Offset = "0xA69154", VA = "0xA69154")]
	private void RemoteEvent(bool mode, int _channelID)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xA69168", Offset = "0xA69168", VA = "0xA69168")]
	[ContextMenu("ReleaseBooster")]
	public void ReleaseBoosterAndLaunch()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xA691DC", Offset = "0xA691DC", VA = "0xA691DC")]
	private void DisableUnglueBurnout()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xA69434", Offset = "0xA69434", VA = "0xA69434")]
	[IteratorStateMachine(typeof(<ExplodeClamps>d__52))]
	private IEnumerator ExplodeClamps()
	{
		return null;
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xA694D0", Offset = "0xA694D0", VA = "0xA694D0")]
	[ContextMenu("open")]
	public void OpenClamps()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xA69598", Offset = "0xA69598", VA = "0xA69598", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xA6964C", Offset = "0xA6964C", VA = "0xA6964C", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xA696B8", Offset = "0xA696B8", VA = "0xA696B8")]
	public LevelDirector_C8001_IslandBooster_Mollusk()
	{
	}
}
[Token(Token = "0x200027B")]
public class LevelDirector_C9001_chitChat : LevelDirector_base
{
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xA6A54C", Offset = "0xA6A54C", VA = "0xA6A54C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xA6A5D0", Offset = "0xA6A5D0", VA = "0xA6A5D0")]
	public LevelDirector_C9001_chitChat()
	{
	}
}
[Token(Token = "0x200027C")]
public class LevelDirector_C9001_tutorial : LevelDirector_Cutscene
{
	[Token(Token = "0x200027D")]
	[CompilerGenerated]
	private sealed class <Convo>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9001_tutorial <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xA6AD7C", Offset = "0xA6AD7C", VA = "0xA6AD7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xA6ADC4", Offset = "0xA6ADC4", VA = "0xA6ADC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xA6A678", Offset = "0xA6A678", VA = "0xA6A678")]
		[DebuggerHidden]
		public <Convo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xA6A704", Offset = "0xA6A704", VA = "0xA6A704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xA6A708", Offset = "0xA6A708", VA = "0xA6A708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xA6AD84", Offset = "0xA6AD84", VA = "0xA6AD84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xA6A5D8", Offset = "0xA6A5D8", VA = "0xA6A5D8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xA6A604", Offset = "0xA6A604", VA = "0xA6A604")]
	[IteratorStateMachine(typeof(<Convo>d__1))]
	private IEnumerator Convo()
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xA6A6A0", Offset = "0xA6A6A0", VA = "0xA6A6A0")]
	public LevelDirector_C9001_tutorial()
	{
	}
}
[Token(Token = "0x200027E")]
public class LevelDirector_C9100_Fitness_ConcreteBlock : LevelDirector_base
{
	[Token(Token = "0x200027F")]
	public enum State
	{
		[Token(Token = "0x4000F7F")]
		none,
		[Token(Token = "0x4000F80")]
		minimum,
		[Token(Token = "0x4000F81")]
		maximum
	}

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EntityDefinition concreteBlockDefinition;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float minDistance;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float targetDistance;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<ConstructionTargetManual> targets;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int distanceStepsRequired;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int currentDistanceSteps;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int maxDistance;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Achievement achivement400;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Achievement achivement200;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public AutoSpawn spawner;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int steps;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int blocksLost;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public State stateReached;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<GameObject> blocksLostList;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float diff;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform throwMeasureRoot;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform angleMeasureRoot;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform distanceMarkerRoot;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool levelDone;

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xA6ADCC", Offset = "0xA6ADCC", VA = "0xA6ADCC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xA6B144", Offset = "0xA6B144", VA = "0xA6B144", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xA6B278", Offset = "0xA6B278", VA = "0xA6B278", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xA6B3AC", Offset = "0xA6B3AC", VA = "0xA6B3AC")]
	private void DestroyIt(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xA6B5E0", Offset = "0xA6B5E0", VA = "0xA6B5E0")]
	private void ObjectSpawned(GameObject spawnObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xA6B6B8", Offset = "0xA6B6B8", VA = "0xA6B6B8")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xA6BAF8", Offset = "0xA6BAF8", VA = "0xA6BAF8")]
	private void ShowProgress()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xA6BB10", Offset = "0xA6BB10", VA = "0xA6BB10")]
	private void AddStep()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xA6BE80", Offset = "0xA6BE80", VA = "0xA6BE80")]
	[ContextMenu("DebugNextDistance")]
	private void DebugNextDistance()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xA6B060", Offset = "0xA6B060", VA = "0xA6B060")]
	private void NextDistance()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xA6BE98", Offset = "0xA6BE98", VA = "0xA6BE98", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xA6BEA4", Offset = "0xA6BEA4", VA = "0xA6BEA4")]
	public LevelDirector_C9100_Fitness_ConcreteBlock()
	{
	}
}
[Token(Token = "0x2000280")]
public class LevelDirector_C9101_workout_peanutbutter : LevelDirector_Cutscene
{
	[Token(Token = "0x2000281")]
	[CompilerGenerated]
	private sealed class <ConvoCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9101_workout_peanutbutter <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xA6C7D0", Offset = "0xA6C7D0", VA = "0xA6C7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xA6C818", Offset = "0xA6C818", VA = "0xA6C818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xA6C110", Offset = "0xA6C110", VA = "0xA6C110")]
		[DebuggerHidden]
		public <ConvoCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xA6C13C", Offset = "0xA6C13C", VA = "0xA6C13C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xA6C140", Offset = "0xA6C140", VA = "0xA6C140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xA6C7D8", Offset = "0xA6C7D8", VA = "0xA6C7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public ParachuteRespawnTracker barrelTracker;

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xA6BF44", Offset = "0xA6BF44", VA = "0xA6BF44", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xA6C09C", Offset = "0xA6C09C", VA = "0xA6C09C")]
	[IteratorStateMachine(typeof(<ConvoCoroutine>d__2))]
	private IEnumerator ConvoCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xA6C138", Offset = "0xA6C138", VA = "0xA6C138")]
	public LevelDirector_C9101_workout_peanutbutter()
	{
	}
}
[Token(Token = "0x2000282")]
public class LevelDirector_C9102_bloodSample : LevelDirector_Cutscene
{
	[Token(Token = "0x2000283")]
	[CompilerGenerated]
	private sealed class <ConvoSequence>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_C9102_bloodSample <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xA6D618", Offset = "0xA6D618", VA = "0xA6D618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xA6D660", Offset = "0xA6D660", VA = "0xA6D660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xA6CD00", Offset = "0xA6CD00", VA = "0xA6CD00")]
		[DebuggerHidden]
		public <ConvoSequence>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xA6CEB4", Offset = "0xA6CEB4", VA = "0xA6CEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xA6CEB8", Offset = "0xA6CEB8", VA = "0xA6CEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xA6D620", Offset = "0xA6D620", VA = "0xA6D620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Rigidbody hospitalRB;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool syringeAttachedToHospital;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	private bool syringeInserted;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool syringeUnloaded;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool syringeFilled;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject shipDelivery;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public ConstructionTargetManual syringeInsertedTarget;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public ConstructionTargetManual syringeFilledTarget;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public ConstructionTargetManual syringeUnloadedTarget;

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xA6C820", Offset = "0xA6C820", VA = "0xA6C820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xA6C840", Offset = "0xA6C840", VA = "0xA6C840", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xA6C8E0", Offset = "0xA6C8E0", VA = "0xA6C8E0", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xA6CAF0", Offset = "0xA6CAF0", VA = "0xA6CAF0", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xA6C86C", Offset = "0xA6C86C", VA = "0xA6C86C")]
	[IteratorStateMachine(typeof(<ConvoSequence>d__13))]
	private IEnumerator ConvoSequence()
	{
		return null;
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xA6CD28", Offset = "0xA6CD28", VA = "0xA6CD28")]
	private void SyringeInserted(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xA6CD60", Offset = "0xA6CD60", VA = "0xA6CD60")]
	private void SyringeFilled(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xA6CD98", Offset = "0xA6CD98", VA = "0xA6CD98")]
	private void SyringeUnloadStarted(TentacleSyringe syringe)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xA6CEB0", Offset = "0xA6CEB0", VA = "0xA6CEB0")]
	public LevelDirector_C9102_bloodSample()
	{
	}
}
[Token(Token = "0x2000284")]
public class LevelDirector_C9999_SandboxTutorial2 : LevelDirector_base
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConstructionTarget[] recylceTargets;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HumanController assistant;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public ConstructionTarget entityLoadTarget;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public StayInPlace balloon;

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xA6D668", Offset = "0xA6D668", VA = "0xA6D668")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xA6D670", Offset = "0xA6D670", VA = "0xA6D670")]
	private void LockTargets(bool which = true)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xA6D6B8", Offset = "0xA6D6B8", VA = "0xA6D6B8", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xA6D73C", Offset = "0xA6D73C", VA = "0xA6D73C")]
	[ContextMenu("SetBalloon")]
	private void SetBalloon()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xA6D75C", Offset = "0xA6D75C", VA = "0xA6D75C", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xA6D960", Offset = "0xA6D960", VA = "0xA6D960", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xA6DBC8", Offset = "0xA6DBC8", VA = "0xA6DBC8", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xA6DBF4", Offset = "0xA6DBF4", VA = "0xA6DBF4")]
	public LevelDirector_C9999_SandboxTutorial2()
	{
	}
}
[Token(Token = "0x2000285")]
public class LevelDirector_ClearProgress : LevelDirector_base
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool deleteInitialised;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SaveSlotManager saveSlotManager;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool blocked;

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xA6DBFC", Offset = "0xA6DBFC", VA = "0xA6DBFC", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xA6DC88", Offset = "0xA6DC88", VA = "0xA6DC88", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xA6DD14", Offset = "0xA6DD14", VA = "0xA6DD14")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xA6DD38", Offset = "0xA6DD38", VA = "0xA6DD38")]
	public void DeleteInit()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xA6DE0C", Offset = "0xA6DE0C", VA = "0xA6DE0C", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xA6E040", Offset = "0xA6E040", VA = "0xA6E040")]
	public void ResetQuit()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xA6E078", Offset = "0xA6E078", VA = "0xA6E078")]
	private void DeleteProgress()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xA6E09C", Offset = "0xA6E09C", VA = "0xA6E09C")]
	public LevelDirector_ClearProgress()
	{
	}
}
[Token(Token = "0x2000286")]
public class LevelDirector_Cutscene : LevelDirector_base
{
	[Token(Token = "0x2000287")]
	public enum Actor
	{
		[Token(Token = "0x4000FB1")]
		None = 0,
		[Token(Token = "0x4000FB2")]
		DocFlossenhammer = 1,
		[Token(Token = "0x4000FB3")]
		ScupPorgy = 2,
		[Token(Token = "0x4000FB4")]
		Prowfish = 3,
		[Token(Token = "0x4000FB5")]
		Professor = 3,
		[Token(Token = "0x4000FB6")]
		RayLamp = 4,
		[Token(Token = "0x4000FB7")]
		Sister = 5,
		[Token(Token = "0x4000FB8")]
		Mayor = 6,
		[Token(Token = "0x4000FB9")]
		Lusk = 7,
		[Token(Token = "0x4000FBA")]
		CraneSisters = 8,
		[Token(Token = "0x4000FBB")]
		CraneSistersB = 9,
		[Token(Token = "0x4000FBC")]
		MadameGurnard = 10,
		[Token(Token = "0x4000FBD")]
		DonGamberino = 11,
		[Token(Token = "0x4000FBE")]
		Resetto = 12
	}

	[Token(Token = "0x2000288")]
	public enum State
	{
		[Token(Token = "0x4000FC0")]
		None,
		[Token(Token = "0x4000FC1")]
		WaitForAnyConvo,
		[Token(Token = "0x4000FC2")]
		WaitForConvo,
		[Token(Token = "0x4000FC3")]
		WaitForConvoDone,
		[Token(Token = "0x4000FC4")]
		WaitForQuestion,
		[Token(Token = "0x4000FC5")]
		WaitForQuestionDone,
		[Token(Token = "0x4000FC6")]
		WaitForRemote,
		[Token(Token = "0x4000FC7")]
		WaitForRemoteDone
	}

	[Token(Token = "0x4000F99")]
	public const int ANSWER_NO = 0;

	[Token(Token = "0x4000F9A")]
	public const int ANSWER_YES = 1;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Actor wait_question_actor;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Actor wait_convo_actor;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Actor active_actor;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private State state;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string active_convoID;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool toolboxGrabbed;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool toolboxempty;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int wait_question_answer_result;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Grabbable toolBox;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public LevelDirector_base actor_flossenhammer;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base actor_prowfish;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base actor_sister;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base actor_mayor;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base actor_lusk;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base actor_scup;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base actor_ray;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public LevelDirector_base actor_craneSisters;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LevelDirector_base actor_craneSistersB;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public LevelDirector_base actor_madameGurnard;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public LevelDirector_base actor_donGamberino;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public LevelDirector_base actor_levelResetto;

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xA6CA10", Offset = "0xA6CA10", VA = "0xA6CA10", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xA6CC20", Offset = "0xA6CC20", VA = "0xA6CC20", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xA6E0A4", Offset = "0xA6E0A4", VA = "0xA6E0A4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xA6AD2C", Offset = "0xA6AD2C", VA = "0xA6AD2C")]
	public int GetAnswer()
	{
		return default(int);
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xA6E168", Offset = "0xA6E168", VA = "0xA6E168", Slot = "17")]
	public override void QuestionAnswered(string _convoID, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xA6BFD0", Offset = "0xA6BFD0", VA = "0xA6BFD0")]
	public LevelDirector_base getLevelDirector(Actor actor)
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xA6ABF8", Offset = "0xA6ABF8", VA = "0xA6ABF8")]
	public void Ask(Actor actor, string key, bool immediate = true, bool clearLast = true)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xA6AD3C", Offset = "0xA6AD3C", VA = "0xA6AD3C")]
	public void ClearLast(bool clearLast)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xA6AAC0", Offset = "0xA6AAC0", VA = "0xA6AAC0")]
	public void Talk(Actor actor, string key, bool immediate = true, bool clearLast = true)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xA6AB78", Offset = "0xA6AB78", VA = "0xA6AB78")]
	public bool WaitForConvoDone(Actor actor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xA6ACAC", Offset = "0xA6ACAC", VA = "0xA6ACAC")]
	public bool WaitForQuestionDone(Actor actor)
	{
		return default(bool);
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xA6E22C", Offset = "0xA6E22C", VA = "0xA6E22C")]
	private void OnGrabToolbox(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xA6E238", Offset = "0xA6E238", VA = "0xA6E238", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xA6E244", Offset = "0xA6E244", VA = "0xA6E244")]
	public bool WaitForToolboxGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xA6E254", Offset = "0xA6E254", VA = "0xA6E254")]
	[ContextMenu("WinTheLevelFadeout")]
	public void WinTheLevelFadeout(float fadeTime = 1.5f)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA6A6A4", Offset = "0xA6A6A4", VA = "0xA6A6A4")]
	public LevelDirector_Cutscene()
	{
	}
}
[Token(Token = "0x2000289")]
public class LevelDirector_CutsceneSimon : LevelDirector_base
{
	[Token(Token = "0x200028A")]
	private enum State
	{
		[Token(Token = "0x4000FCF")]
		None,
		[Token(Token = "0x4000FD0")]
		WaitForConvo,
		[Token(Token = "0x4000FD1")]
		WaitForConvoDone
	}

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waitFormconvoID;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private State state;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private LevelDirector_base activeLevelDirector;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private IEnumerator levelSequence;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<LevelDirector_base> convoClearLevelDirectors;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool autoAddMeToClearList;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA68084", Offset = "0xA68084", VA = "0xA68084", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xA6A11C", Offset = "0xA6A11C", VA = "0xA6A11C")]
	public void ClearAllConvos()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xA6A28C", Offset = "0xA6A28C", VA = "0xA6A28C")]
	public void Talk(LevelDirector_base _levelDirector, string key, bool immediate = true)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xA69FA0", Offset = "0xA69FA0", VA = "0xA69FA0")]
	public bool WaitForConvoDone(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xA6E330", Offset = "0xA6E330", VA = "0xA6E330")]
	public bool WaitForConvoDoneNoTranslate(LevelDirector_base levelDir, string key, bool immediate = true, bool clearLast = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA6E4B0", Offset = "0xA6E4B0", VA = "0xA6E4B0", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA68200", Offset = "0xA68200", VA = "0xA68200")]
	public void StopCurrentSequenceAndStart(IEnumerator sequenceToStart)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xA696DC", Offset = "0xA696DC", VA = "0xA696DC")]
	public LevelDirector_CutsceneSimon()
	{
	}
}
[Token(Token = "0x200028B")]
public class LevelDirector_foodCustomer : LevelDirector_base
{
	[Token(Token = "0x200028C")]
	public delegate void InitFoodCustomerDelegate(LevelDirector_foodCustomer customer);

	[Token(Token = "0x200028D")]
	public delegate void FoodCustomerResultDelegate(LevelDirector_foodCustomer customer, bool result);

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject foodTarget;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<EntityDefinition> foodOrderOptionsList;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string[] foodSymbols;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int currentfoodID;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public List<ConstructionTarget> myOrderTargets;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float orderTimer;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float orderAmount;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float orderTimerStep;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float maxOrderTime;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool customerDone;

	[Token(Token = "0x14000038")]
	public static event InitFoodCustomerDelegate OnInitFoodCustomer
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0xA6E58C", Offset = "0xA6E58C", VA = "0xA6E58C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001025")]
		[Address(RVA = "0xA6E644", Offset = "0xA6E644", VA = "0xA6E644")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public static event FoodCustomerResultDelegate OnFoodCustomerResult
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0xA6E6FC", Offset = "0xA6E6FC", VA = "0xA6E6FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001027")]
		[Address(RVA = "0xA6E7B8", Offset = "0xA6E7B8", VA = "0xA6E7B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xA6E874", Offset = "0xA6E874", VA = "0xA6E874", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xA6ECCC", Offset = "0xA6ECCC", VA = "0xA6ECCC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xA6E90C", Offset = "0xA6E90C", VA = "0xA6E90C")]
	[ContextMenu("NEW ORDER")]
	public void NewOrder()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xA6ED58", Offset = "0xA6ED58", VA = "0xA6ED58")]
	private void OrderBubble()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xA6EE04", Offset = "0xA6EE04", VA = "0xA6EE04")]
	private void OrderTimer()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xA6EE48", Offset = "0xA6EE48", VA = "0xA6EE48")]
	private void OrderFailed()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xA6EEEC", Offset = "0xA6EEEC", VA = "0xA6EEEC")]
	private void OrderSuccesful()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xA6EF90", Offset = "0xA6EF90", VA = "0xA6EF90", Slot = "22")]
	public override void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xA6F01C", Offset = "0xA6F01C", VA = "0xA6F01C")]
	private void WrongDelivery(ConstructionTargetTriggersNoOnStay target, EntityDefinition wrongEntityDef)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xA6F0E4", Offset = "0xA6F0E4", VA = "0xA6F0E4")]
	public LevelDirector_foodCustomer()
	{
	}
}
[Token(Token = "0x200028E")]
public class LevelDirector_MayorMenu : LevelDirector_base
{
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int counter;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HingeSnap hingeSnap;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool openTriggered;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool wasJustCompleted;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Story introStory;

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xA6F424", Offset = "0xA6F424", VA = "0xA6F424", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xA6F428", Offset = "0xA6F428", VA = "0xA6F428")]
	private void MayorStatusUpdate()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xA6F42C", Offset = "0xA6F42C", VA = "0xA6F42C")]
	public LevelDirector_MayorMenu()
	{
	}
}
[Token(Token = "0x200028F")]
public class LevelDirector_musician : LevelDirector_base
{
	[Token(Token = "0x2000290")]
	public delegate void MusicStateDelegate(LevelDirector_musician conductor, State _state);

	[Token(Token = "0x2000291")]
	public enum State
	{
		[Token(Token = "0x4000FFF")]
		stop,
		[Token(Token = "0x4001000")]
		play,
		[Token(Token = "0x4001001")]
		pause
	}

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public State musicState;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Animation myAnimation;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public StudioEventEmitter studioEmitter;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[EventRef]
	public string musicTrack;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int ID;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public bool isConductor;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
	public bool playOnStart;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float pauseDuration;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public bool slapToSilence;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	public bool searchWaypointOnStart;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
	private bool isInterrupted;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
	public bool playInterruptedSFX;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[EventRef]
	public string interruptedSFX;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool hopToTheBeat;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float hopStartOffset;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float beatTimer;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public Vector3 danceForce;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Header("cannot dance without ignoring")]
	public bool playInterruptsAlsoOnTaps;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float minVelForHitsDetection;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool ignoreStaticRBHits;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool ignoreNonRbHits;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool musicEnded;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	public bool checkForMusicEnded;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float hitCoolDown;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float lastHit;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool hitSFX;

	[Token(Token = "0x1400003A")]
	public static event MusicStateDelegate OnMusicState
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0xA6F434", Offset = "0xA6F434", VA = "0xA6F434")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600103E")]
		[Address(RVA = "0xA6F4EC", Offset = "0xA6F4EC", VA = "0xA6F4EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xA6F5A4", Offset = "0xA6F5A4", VA = "0xA6F5A4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xA6F804", Offset = "0xA6F804", VA = "0xA6F804")]
	[ContextMenu("StartMusicians")]
	public void StopMusicians()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA6F874", Offset = "0xA6F874", VA = "0xA6F874")]
	[ContextMenu("StartMusicians")]
	public void StartMusicians()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA6F8E4", Offset = "0xA6F8E4", VA = "0xA6F8E4")]
	private void MusicEvent(LevelDirector_musician conductor, State _state)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xA6FB34", Offset = "0xA6FB34", VA = "0xA6FB34")]
	private void Timed()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xA6FD00", Offset = "0xA6FD00", VA = "0xA6FD00", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xA6FEEC", Offset = "0xA6FEEC", VA = "0xA6FEEC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xA70008", Offset = "0xA70008", VA = "0xA70008")]
	private void PreLoad(bool what)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xA70080", Offset = "0xA70080", VA = "0xA70080", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xA702C4", Offset = "0xA702C4", VA = "0xA702C4")]
	private void Interrupt()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xA70444", Offset = "0xA70444", VA = "0xA70444")]
	private void ResetMusic()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xA6FC68", Offset = "0xA6FC68", VA = "0xA6FC68")]
	private void EndPlaying()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xA70524", Offset = "0xA70524", VA = "0xA70524")]
	public LevelDirector_musician()
	{
	}
}
[Token(Token = "0x2000292")]
public class LevelDirector_Quit : LevelDirector_base
{
	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ConfigurableJoint quitJoint;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public FixedJoint optionsJoint;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject optionsAttach;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool quitInitialised;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float levelLeaveWarning;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject nextButton;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject prevButton;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool wasPulled;

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xA7061C", Offset = "0xA7061C", VA = "0xA7061C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xA70750", Offset = "0xA70750", VA = "0xA70750", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xA707DC", Offset = "0xA707DC", VA = "0xA707DC", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xA70868", Offset = "0xA70868", VA = "0xA70868")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xA7088C", Offset = "0xA7088C", VA = "0xA7088C")]
	public void OptionsPulled()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA70C04", Offset = "0xA70C04", VA = "0xA70C04")]
	public void QuitInit()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA70CB0", Offset = "0xA70CB0", VA = "0xA70CB0", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA70BE4", Offset = "0xA70BE4", VA = "0xA70BE4")]
	private void GoOptions()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA70EC4", Offset = "0xA70EC4", VA = "0xA70EC4")]
	private void QuitGame()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA70EE4", Offset = "0xA70EE4", VA = "0xA70EE4")]
	public LevelDirector_Quit()
	{
	}
}
[Token(Token = "0x2000293")]
public class LevelDirector_R1 : LevelDirectorRockets_base
{
	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA70EF4", Offset = "0xA70EF4", VA = "0xA70EF4")]
	public LevelDirector_R1()
	{
	}
}
[Token(Token = "0x2000294")]
public class LevelDirector_Resetti : LevelDirector_base
{
	[Token(Token = "0x2000295")]
	public enum ResettiState
	{
		[Token(Token = "0x400100F")]
		start,
		[Token(Token = "0x4001010")]
		customAction
	}

	[Token(Token = "0x2000296")]
	public delegate void AskedForHintDelegate(LevelDirector_Resetti resetti);

	[Token(Token = "0x2000297")]
	public delegate void TalkedToResettoDelegate(LevelDirector_Resetti resetti, string convoID);

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Level level;

	[Token(Token = "0x17000111")]
	public SpawnResetti spawnResetti
	{
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xA711E4", Offset = "0xA711E4", VA = "0xA711E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xA711EC", Offset = "0xA711EC", VA = "0xA711EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public static event AskedForHintDelegate OnAskedForHint
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xA70EFC", Offset = "0xA70EFC", VA = "0xA70EFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xA70FB4", Offset = "0xA70FB4", VA = "0xA70FB4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event TalkedToResettoDelegate OnResettoConversationStarted
	{
		[Token(Token = "0x600105D")]
		[Address(RVA = "0xA7106C", Offset = "0xA7106C", VA = "0xA7106C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xA71128", Offset = "0xA71128", VA = "0xA71128")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xA711FC", Offset = "0xA711FC", VA = "0xA711FC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xA714A4", Offset = "0xA714A4", VA = "0xA714A4", Slot = "15")]
	public override void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xA71514", Offset = "0xA71514", VA = "0xA71514", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xA718EC", Offset = "0xA718EC", VA = "0xA718EC")]
	private void WaitComments()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xA719E8", Offset = "0xA719E8", VA = "0xA719E8")]
	private void DrawingDone()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xA71B00", Offset = "0xA71B00", VA = "0xA71B00")]
	private void DrawingDoneAttract()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xA71C04", Offset = "0xA71C04", VA = "0xA71C04", Slot = "16")]
	public override void ConversationStarted(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xA71CD0", Offset = "0xA71CD0", VA = "0xA71CD0", Slot = "20")]
	public override void OnGameComplete()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xA71D78", Offset = "0xA71D78", VA = "0xA71D78")]
	public LevelDirector_Resetti()
	{
	}
}
[Token(Token = "0x2000298")]
public class LevelDirector_Sandbox : LevelDirector_base
{
	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool actionBlock;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float lastSaveWait;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool saveOnExit;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xA7202C", Offset = "0xA7202C", VA = "0xA7202C", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xA72070", Offset = "0xA72070", VA = "0xA72070")]
	private void SaveFeedback()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xA72048", Offset = "0xA72048", VA = "0xA72048")]
	private void DefaultSandboxChatter()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xA72128", Offset = "0xA72128", VA = "0xA72128")]
	public void ButtonSave()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xA72160", Offset = "0xA72160", VA = "0xA72160")]
	public void ButtonReset()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xA72204", Offset = "0xA72204", VA = "0xA72204")]
	public void ButtonMenu()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xA72318", Offset = "0xA72318", VA = "0xA72318", Slot = "17")]
	public override void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xA722D4", Offset = "0xA722D4", VA = "0xA722D4")]
	private void ToMenu()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xA72568", Offset = "0xA72568", VA = "0xA72568")]
	private void Reset()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xA725A0", Offset = "0xA725A0", VA = "0xA725A0")]
	private void SaveReload()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xA725DC", Offset = "0xA725DC", VA = "0xA725DC")]
	public LevelDirector_Sandbox()
	{
	}
}
[Token(Token = "0x2000299")]
public class LevelDirector_TalkSpeed : LevelDirector_base
{
	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float updateVal;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float levelStart;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float lastValue;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float currentVal;

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xA725EC", Offset = "0xA725EC", VA = "0xA725EC", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xA72690", Offset = "0xA72690", VA = "0xA72690", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xA7271C", Offset = "0xA7271C", VA = "0xA7271C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xA727A8", Offset = "0xA727A8", VA = "0xA727A8")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xA72618", Offset = "0xA72618", VA = "0xA72618")]
	private void InitWords()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xA727AC", Offset = "0xA727AC", VA = "0xA727AC")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xA72878", Offset = "0xA72878", VA = "0xA72878")]
	private void Speak()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xA728CC", Offset = "0xA728CC", VA = "0xA728CC")]
	public LevelDirector_TalkSpeed()
	{
	}
}
[Token(Token = "0x200029A")]
public class LevelDirector_TypewriterDemo : LevelDirector_base
{
	[Token(Token = "0x6001085")]
	[Address(RVA = "0xA728D4", Offset = "0xA728D4", VA = "0xA728D4", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xA72958", Offset = "0xA72958", VA = "0xA72958", Slot = "10")]
	public override void Init()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xA729E4", Offset = "0xA729E4", VA = "0xA729E4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xA72A70", Offset = "0xA72A70", VA = "0xA72A70")]
	private void LanguageChanged()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xA72AE8", Offset = "0xA72AE8", VA = "0xA72AE8")]
	public void SetSwitch(bool which)
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA72BA0", Offset = "0xA72BA0", VA = "0xA72BA0")]
	public LevelDirector_TypewriterDemo()
	{
	}
}
[Token(Token = "0x200029B")]
public class MenuDirector_base : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	public enum StoryState
	{
		[Token(Token = "0x4001048")]
		done,
		[Token(Token = "0x4001049")]
		active,
		[Token(Token = "0x400104A")]
		locked
	}

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction levelHost;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public HumanController humanController;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanAestheticScriptableObject characterLook;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject alternativeCharacterLook;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool initialised;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Story myStory;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Level menuLevel;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quest myQuest;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Level myLevel;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isQuestion;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool popupInitialTalk;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool alwaysPlayerFocused;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool showAnswerFeedback;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool useQuestLabel;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentLevelNum;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isNavigation;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool onlyShowIfActive;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool sideQuestUnlockedDependency;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Story sideQuestUnlockedDependencyStory;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool alwaysShowHost;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool alwaysShowNavIconWhenNav;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool useDefaultOOBPosition;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool useRaycastJustCompletedCheck;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool onlyShowInMenu;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string storyIntroText;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string storyQuestionText;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string activeStoryIntro;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string activeNavIntro;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string storyAnswer0Text;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string storyAnswer1Text;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string storyAnswer0FeedbackText;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string storyAnswer1FeedbackText;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string storyTitleText;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string placeID;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private StoryState storyState;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform vrCamera;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool cameraVisible;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string councilDialogue;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string characterIdentifier;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool dummies;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool doAttractHello;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float attractJumpForce;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float attractTimeModifier;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool doAttractJump;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public int timesHostOOBsed;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string menuQ;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private BubbleToCharacter.ConvoType cType;

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA72BA8", Offset = "0xA72BA8", VA = "0xA72BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA72BAC", Offset = "0xA72BAC", VA = "0xA72BAC")]
	private void NavigationStoryCheck()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA72F58", Offset = "0xA72F58", VA = "0xA72F58")]
	private void StoryCheck()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA73130", Offset = "0xA73130", VA = "0xA73130", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA73840", Offset = "0xA73840", VA = "0xA73840")]
	public void StopAttractJump()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xA7384C", Offset = "0xA7384C", VA = "0xA7384C", Slot = "5")]
	public virtual void SetupConversation()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xA74174", Offset = "0xA74174", VA = "0xA74174", Slot = "6")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA7433C", Offset = "0xA7433C", VA = "0xA7433C", Slot = "7")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xA7450C", Offset = "0xA7450C", VA = "0xA7450C", Slot = "8")]
	public virtual void QuestionAnswered(string _id, int _result, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xA746A0", Offset = "0xA746A0", VA = "0xA746A0")]
	private Level GetNavLevel()
	{
		return null;
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xA74728", Offset = "0xA74728", VA = "0xA74728", Slot = "9")]
	public virtual void CallLoadNext()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xA74790", Offset = "0xA74790", VA = "0xA74790", Slot = "10")]
	public virtual void OnConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xA74800", Offset = "0xA74800", VA = "0xA74800", Slot = "11")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xA74804", Offset = "0xA74804", VA = "0xA74804", Slot = "12")]
	public virtual void OnWaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xA74808", Offset = "0xA74808", VA = "0xA74808", Slot = "13")]
	public virtual void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xA7480C", Offset = "0xA7480C", VA = "0xA7480C")]
	[ContextMenu("AttractJump")]
	private void AttractJump()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xA7364C", Offset = "0xA7364C", VA = "0xA7364C")]
	private void AssembleLocaIDS()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xA748F0", Offset = "0xA748F0", VA = "0xA748F0")]
	private void StoryStateTranslation()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xA74998", Offset = "0xA74998", VA = "0xA74998")]
	private string ReadTranslation(string _convoType, bool useGeneric = true)
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xA74AA0", Offset = "0xA74AA0", VA = "0xA74AA0")]
	public MenuDirector_base()
	{
	}
}
[Token(Token = "0x200029D")]
[CreateAssetMenu(fileName = "DialogList", menuName = "DialogNPClist", order = 1)]
public class NPCDialogListScriptableObject : ScriptableObject
{
	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Entry> Entries;

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xA74B34", Offset = "0xA74B34", VA = "0xA74B34")]
	public NPCDialogListScriptableObject()
	{
	}
}
[Serializable]
[Token(Token = "0x200029E")]
public class Entry
{
	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Id;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Text;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TextDB;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AssetPath;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Level;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Gameobject;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Comment;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime Creationdate;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JustUploaded;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool SaveThese;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool DifferentThanDB;

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xA74B3C", Offset = "0xA74B3C", VA = "0xA74B3C")]
	public Entry(string _id, string _text, string _textDB, string _comment)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xA74C0C", Offset = "0xA74C0C", VA = "0xA74C0C")]
	public Entry(string _id, string _text)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xA74CAC", Offset = "0xA74CAC", VA = "0xA74CAC")]
	public string DateToString()
	{
		return null;
	}
}
[Token(Token = "0x200029F")]
public class ObjectsUsedAchievement : MonoBehaviour
{
	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> grabbedObjects;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxGrabbedObjectsForAchievement;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EntityDefinition objectEntity;

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xA74CF8", Offset = "0xA74CF8", VA = "0xA74CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xA74D74", Offset = "0xA74D74", VA = "0xA74D74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xA74E90", Offset = "0xA74E90", VA = "0xA74E90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xA74FAC", Offset = "0xA74FAC", VA = "0xA74FAC")]
	private void OnGrabbed(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xA75174", Offset = "0xA75174", VA = "0xA75174")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xA751E0", Offset = "0xA751E0", VA = "0xA751E0")]
	public ObjectsUsedAchievement()
	{
	}
}
[Token(Token = "0x20002A0")]
public class RelativeAttach : MonoBehaviour
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform relAttach;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 targetPos;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offset;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float vel;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 movePosTarget;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dist;

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xA751F0", Offset = "0xA751F0", VA = "0xA751F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xA75214", Offset = "0xA75214", VA = "0xA75214")]
	public void SetTarget(Transform _target)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xA752C8", Offset = "0xA752C8", VA = "0xA752C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xA75630", Offset = "0xA75630", VA = "0xA75630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xA7536C", Offset = "0xA7536C", VA = "0xA7536C")]
	private void SetPosition(bool initPositioning = false)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xA75638", Offset = "0xA75638", VA = "0xA75638")]
	public RelativeAttach()
	{
	}
}
[Token(Token = "0x20002A1")]
public class RocketsUsedAchievement : MonoBehaviour
{
	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> grabbedObjects;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EntityDefinition objectEntity;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AchievementsPerfectRunsRockets rocketRunsSO;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool cannotComplete;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA75658", Offset = "0xA75658", VA = "0xA75658")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA756D4", Offset = "0xA756D4", VA = "0xA756D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA75844", Offset = "0xA75844", VA = "0xA75844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xA759B4", Offset = "0xA759B4", VA = "0xA759B4")]
	private void OnRocketFLight(bool mode, Transform target)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xA75B84", Offset = "0xA75B84", VA = "0xA75B84")]
	private void OnGameComplete()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xA75BEC", Offset = "0xA75BEC", VA = "0xA75BEC")]
	private void SlingFired(GlueConnections glueConnection, RubberBand rubberband)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xA75D10", Offset = "0xA75D10", VA = "0xA75D10")]
	public RocketsUsedAchievement()
	{
	}
}
[Token(Token = "0x20002A2")]
public class SaySomething : MonoBehaviour
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sayThis;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BubbleToCharacter bubble;

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xA75D18", Offset = "0xA75D18", VA = "0xA75D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xA75DB0", Offset = "0xA75DB0", VA = "0xA75DB0")]
	public SaySomething()
	{
	}
}
[Token(Token = "0x20002A3")]
public class ShellHuman : MonoBehaviour
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanAestheticScriptableObject[] humanTypes;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BubbleToCharacter.ConvoType convoType;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ID;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool sayImmediately;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool suppressIcons;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool manualIconSelect;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BubbleToCharacter.ConvoType manualIconType;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool setCameraTarget;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float sayTimed;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookForWaypoints;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool autoRespawn;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool clearAfterConvo;

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xA75DB8", Offset = "0xA75DB8", VA = "0xA75DB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xA75E70", Offset = "0xA75E70", VA = "0xA75E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xA75F28", Offset = "0xA75F28", VA = "0xA75F28")]
	private void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xA75FD8", Offset = "0xA75FD8", VA = "0xA75FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xA7605C", Offset = "0xA7605C", VA = "0xA7605C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xA7621C", Offset = "0xA7621C", VA = "0xA7621C")]
	private void QuickSay()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xA761B4", Offset = "0xA761B4", VA = "0xA761B4")]
	public void ChangeHuman()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xA7630C", Offset = "0xA7630C", VA = "0xA7630C")]
	public ShellHuman()
	{
	}
}
[Token(Token = "0x20002A4")]
public class SpeechBubbleQuestionTouch : MonoBehaviour
{
	[Token(Token = "0x20002A5")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechBubbleQuestionTouch <>4__this;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool longer;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xA7798C", Offset = "0xA7798C", VA = "0xA7798C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xA779D4", Offset = "0xA779D4", VA = "0xA779D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xA772AC", Offset = "0xA772AC", VA = "0xA772AC")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xA77574", Offset = "0xA77574", VA = "0xA77574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xA77578", Offset = "0xA77578", VA = "0xA77578", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xA77994", Offset = "0xA77994", VA = "0xA77994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGrabbed;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable grabbable;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<Rigidbody, TentacleLogic> myCollisionTentacleDict;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRControllerMapper controller;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject holder;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int answerID;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BubbleToCharacter myBubbleScript;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useBubbleGrab;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject physicalButton;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform root;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject bubble;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bubbleHilight;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform vrCamera;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool cameraLookingAtBubble;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool buttonHighlighted;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 localStartPos;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion localStartRotation;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool posRead;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpeechBubbleQuestionTouch otherBubble;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LayerMask layerMask;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tween tween;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool tweenRunning;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xA76314", Offset = "0xA76314", VA = "0xA76314")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xA76594", Offset = "0xA76594", VA = "0xA76594")]
	private void GetPos()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xA765F4", Offset = "0xA765F4", VA = "0xA765F4")]
	private void SetPos()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA76640", Offset = "0xA76640", VA = "0xA76640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xA76A88", Offset = "0xA76A88", VA = "0xA76A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xA76C58", Offset = "0xA76C58", VA = "0xA76C58")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xA76DCC", Offset = "0xA76DCC", VA = "0xA76DCC")]
	private void UnobstructedViewToVRCamera()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xA77020", Offset = "0xA77020", VA = "0xA77020")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xA76D48", Offset = "0xA76D48", VA = "0xA76D48")]
	public void AnswerQuestion()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xA77024", Offset = "0xA77024", VA = "0xA77024")]
	private void AnswerQuestionAction()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xA77200", Offset = "0xA77200", VA = "0xA77200")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA77178", Offset = "0xA77178", VA = "0xA77178")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__33))]
	private IEnumerator ButtonHapticFeedback(bool longer = false)
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xA768B8", Offset = "0xA768B8", VA = "0xA768B8")]
	private void SetSpriteFeedback()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xA772D4", Offset = "0xA772D4", VA = "0xA772D4")]
	private void CheckEnter(Collider collider, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xA77450", Offset = "0xA77450", VA = "0xA77450")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xA77454", Offset = "0xA77454", VA = "0xA77454")]
	private void CheckExit(Collider collider)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xA77560", Offset = "0xA77560", VA = "0xA77560")]
	private void OnTriggerExit(Collider Collider)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xA77564", Offset = "0xA77564", VA = "0xA77564")]
	public SpeechBubbleQuestionTouch()
	{
	}
}
[Token(Token = "0x20002A6")]
[ExecuteInEditMode]
public class TurnToDirection : MonoBehaviour
{
	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform realTarget;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool turnToDirectionEnabled;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 upVector;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetRot;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 offset;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 diff;

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xA779DC", Offset = "0xA779DC", VA = "0xA779DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xA77B14", Offset = "0xA77B14", VA = "0xA77B14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xA77EF8", Offset = "0xA77EF8", VA = "0xA77EF8")]
	public TurnToDirection()
	{
	}
}
[Token(Token = "0x20002A7")]
public class TurnToDirectionBubble : MonoBehaviour
{
	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform realTarget;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool turnToDirectionEnabled;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 diff;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform visRoot;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 distanceDiff;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform distanceTarget;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform helperTrans;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xA77F2C", Offset = "0xA77F2C", VA = "0xA77F2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xA7805C", Offset = "0xA7805C", VA = "0xA7805C")]
	private void CheckForCamera()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xA78108", Offset = "0xA78108", VA = "0xA78108")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xA7810C", Offset = "0xA7810C", VA = "0xA7810C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xA787F8", Offset = "0xA787F8", VA = "0xA787F8")]
	public TurnToDirectionBubble()
	{
	}
}
[Token(Token = "0x20002A8")]
public class VoiceProvider : MonoBehaviour
{
	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string conversation;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HumanController humanController;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanEmoSFX humanEmoSFX;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanEmoSFX humanEmoSFX_male;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HumanEmoSFX defaultEMOSFX;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HumanEmoSFX elviraEmoSFX;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool suppressEmoSFX;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool stopPreviousSound;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventInstance FMODinstance;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string parameter;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string thingToSay;

	[Token(Token = "0x40010B0")]
	public const string musicstatesParameterName = "Musicstates";

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, int> musicParameters;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool emoSFXSet;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string origTxt;

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xA7980C", Offset = "0xA7980C", VA = "0xA7980C")]
	public string MusicTriggerSearch(string _txt)
	{
		return null;
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA79CF8", Offset = "0xA79CF8", VA = "0xA79CF8")]
	public static void SetGlobalMusicParameter(int parameter)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA79D64", Offset = "0xA79D64", VA = "0xA79D64")]
	public string ElviraTriggerSearch(string _txt)
	{
		return null;
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xA79EB4", Offset = "0xA79EB4", VA = "0xA79EB4")]
	public static void PlayElviraEmoSFX(string _emo)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xA79B58", Offset = "0xA79B58", VA = "0xA79B58")]
	private void CheckMusicLookup()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xA79FF0", Offset = "0xA79FF0", VA = "0xA79FF0")]
	public void StopTalking()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xA79FF4", Offset = "0xA79FF4", VA = "0xA79FF4")]
	private void GetEMOSFX()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xA7A17C", Offset = "0xA7A17C", VA = "0xA7A17C")]
	public void PlayReactionSFX(string _reactionType)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xA7A3D4", Offset = "0xA7A3D4", VA = "0xA7A3D4")]
	public string GetEmoStringForSymbol(string _reactionTypeSymbol)
	{
		return null;
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xA7A45C", Offset = "0xA7A45C", VA = "0xA7A45C")]
	public void PlayReactionSFXSymbol(string _reactionTypeSymbol)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xA7A508", Offset = "0xA7A508", VA = "0xA7A508")]
	public void SetParameter(string _parameter = "")
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xA7A1E4", Offset = "0xA7A1E4", VA = "0xA7A1E4")]
	private void PlayEmo(string _thingToSay)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xA7A510", Offset = "0xA7A510", VA = "0xA7A510")]
	public VoiceProvider()
	{
	}
}
[Token(Token = "0x20002A9")]
public static class GeneralHelper
{
	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xA7A5A4", Offset = "0xA7A5A4", VA = "0xA7A5A4")]
	public static object GetPropValue(object src, string propName)
	{
		return null;
	}

	[Token(Token = "0x60010EE")]
	public static T RandomElement<T>(T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x60010EF")]
	public static T RandomElement<T>(List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xA7A5F8", Offset = "0xA7A5F8", VA = "0xA7A5F8")]
	public static Vector2 RandomPosition(this Rect rect, float distance = 0f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xA7A694", Offset = "0xA7A694", VA = "0xA7A694")]
	public static Rect RandomSubRect(this Rect rect, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60010F2")]
	public static void Swap<T>(ref T a, ref T b)
	{
	}

	[Token(Token = "0x60010F3")]
	public static List<T> Shuffle<T>(this List<T> list)
	{
		return null;
	}
}
[Token(Token = "0x20002AA")]
public static class IListExtensions
{
	[Token(Token = "0x60010F4")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x20002AB")]
public class HumanWaypointController : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	public delegate void DestinationReachedDelegate(string waypointID = "");

	[Token(Token = "0x20002AD")]
	public delegate void WaypointReachedDelegate(string waypointID = "");

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public _g_Piece currentWaypoint;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public _g_Piece lastWaypoint;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autoSelectClosestNodeOnStart;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HumanController humanController;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultDistanceTreshhold;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceTreshold;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool noWaypointMoveInWater;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool stopAtNextWaypoint;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool travelling;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool inWater;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useWaterExits;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int waypointForceID;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool waterExitActive;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool isPaused;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool noRegularWalkBacktrack;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool isGrabbed;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int wpChecks;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool movingAllowed;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool rescanWaypointsOnDefocus;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool movementSetupOnStart;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool logging;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("DO NOT SET MANUALLY")]
	public bool lookingForClosestWaypoint;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool forceWaterExit;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waterExitStarted;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int sequence;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> nodes;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private _g_Piece closestPiece;

	[Token(Token = "0x1400003D")]
	public event DestinationReachedDelegate OnDestinationReached
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xA7A794", Offset = "0xA7A794", VA = "0xA7A794")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xA7A830", Offset = "0xA7A830", VA = "0xA7A830")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public event WaypointReachedDelegate OnWaypointReached
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xA7A8CC", Offset = "0xA7A8CC", VA = "0xA7A8CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xA7A968", Offset = "0xA7A968", VA = "0xA7A968")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xA7AA04", Offset = "0xA7AA04", VA = "0xA7AA04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xA7AAD8", Offset = "0xA7AAD8", VA = "0xA7AAD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xA7ABAC", Offset = "0xA7ABAC", VA = "0xA7ABAC")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xA7AC50", Offset = "0xA7AC50", VA = "0xA7AC50")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xA7ACD8", Offset = "0xA7ACD8", VA = "0xA7ACD8")]
	public void SearchClosestWaypoint()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xA7B444", Offset = "0xA7B444", VA = "0xA7B444")]
	private void Start()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xA7B460", Offset = "0xA7B460", VA = "0xA7B460")]
	public void NoMoving()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xA7B524", Offset = "0xA7B524", VA = "0xA7B524")]
	public void CleanUpCarryOver()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xA7B554", Offset = "0xA7B554", VA = "0xA7B554")]
	public void RescanOnPickUp()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xA7B5F4", Offset = "0xA7B5F4", VA = "0xA7B5F4")]
	public void DistanceCheck()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xA7BDF8", Offset = "0xA7BDF8", VA = "0xA7BDF8")]
	private void SetNextRandomWaypoint()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xA7BCD4", Offset = "0xA7BCD4", VA = "0xA7BCD4")]
	private void CheckDestination()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xA7BC14", Offset = "0xA7BC14", VA = "0xA7BC14")]
	public void ContinueWaypoint()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xA7C6F4", Offset = "0xA7C6F4", VA = "0xA7C6F4")]
	private bool PauseCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xA7C7D0", Offset = "0xA7C7D0", VA = "0xA7C7D0")]
	private void EndPause()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xA7C7D8", Offset = "0xA7C7D8", VA = "0xA7C7D8")]
	public void GotoWayppoint(string _ID)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xA7AD64", Offset = "0xA7AD64", VA = "0xA7AD64")]
	public void SearchClosestNode(bool _inWater = false, bool notCurrent = false)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xA7C5B0", Offset = "0xA7C5B0", VA = "0xA7C5B0")]
	public void SetWaypoint(GameObject _go)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xA7CA08", Offset = "0xA7CA08", VA = "0xA7CA08")]
	public void SetWaypoint(_g_Piece _wp)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xA7C544", Offset = "0xA7C544", VA = "0xA7C544")]
	public void DestinationReached()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xA7C7AC", Offset = "0xA7C7AC", VA = "0xA7C7AC")]
	public void StopTravelling()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xA7CAE0", Offset = "0xA7CAE0", VA = "0xA7CAE0")]
	public void SetLastWaypoint()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xA7CC18", Offset = "0xA7CC18", VA = "0xA7CC18")]
	public HumanWaypointController()
	{
	}
}
[Token(Token = "0x20002AE")]
public static class CTransform
{
	[Token(Token = "0x6001118")]
	[Address(RVA = "0xA7CE34", Offset = "0xA7CE34", VA = "0xA7CE34")]
	public static void SetX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xA7CE80", Offset = "0xA7CE80", VA = "0xA7CE80")]
	public static void SetY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xA7CECC", Offset = "0xA7CECC", VA = "0xA7CECC")]
	public static void SetZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xA7CF18", Offset = "0xA7CF18", VA = "0xA7CF18")]
	public static void SetLocalX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xA7CF64", Offset = "0xA7CF64", VA = "0xA7CF64")]
	public static void SetLocalY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xA7CFB0", Offset = "0xA7CFB0", VA = "0xA7CFB0")]
	public static void SetLocalZ(this Transform transform, float z)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xA7CFFC", Offset = "0xA7CFFC", VA = "0xA7CFFC")]
	public static void SetLocalScaleX(this Transform transform, float x)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xA7D048", Offset = "0xA7D048", VA = "0xA7D048")]
	public static void SetLocalScaleY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xA7D094", Offset = "0xA7D094", VA = "0xA7D094")]
	public static void SetLocalScaleZ(this Transform transform, float z)
	{
	}
}
[Token(Token = "0x20002AF")]
public static class TrigoFunctions
{
	[Token(Token = "0x6001121")]
	[Address(RVA = "0xA7D0E0", Offset = "0xA7D0E0", VA = "0xA7D0E0")]
	public static void SetAlpha(this Material material, float value)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xA7D118", Offset = "0xA7D118", VA = "0xA7D118")]
	public static float PointToAngle(Vector2 tPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xA7D14C", Offset = "0xA7D14C", VA = "0xA7D14C")]
	public static Vector2 AngleToNormal(float tAngle)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20002B0")]
[ExecuteInEditMode]
public class _g_Piece : MonoBehaviour
{
	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<_g_Piece> waypointPieces;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject[] connectedPieces;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject[] connectCubes;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> connectedList;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fakeLine;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool destinationWaypoint;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ID;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distanceTreshold;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float defaultDistanceTreshold;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool waitCheckpoint;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float chanceOfWait;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float waitMin;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float waitMax;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int waypointID;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool waterExitSystemWayPoint;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool waterExitStart;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool waterExitEnd;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool noEntrySearchClosest;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int sequence;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool useSequence;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool rescanClosestCheckpoint;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float allowedFallingDistance;

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xA7D168", Offset = "0xA7D168", VA = "0xA7D168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xA7D4FC", Offset = "0xA7D4FC", VA = "0xA7D4FC")]
	public void SetTreshold(float treshold)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xA7D2B8", Offset = "0xA7D2B8", VA = "0xA7D2B8")]
	public void Scale()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xA7D32C", Offset = "0xA7D32C", VA = "0xA7D32C")]
	private void CreateConnectedList()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xA7D504", Offset = "0xA7D504", VA = "0xA7D504")]
	public List<GameObject> ConnectedNodes()
	{
		return null;
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xA7D50C", Offset = "0xA7D50C", VA = "0xA7D50C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xA7D68C", Offset = "0xA7D68C", VA = "0xA7D68C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xA7D748", Offset = "0xA7D748", VA = "0xA7D748")]
	public _g_Piece()
	{
	}
}
[Token(Token = "0x20002B1")]
public class ExplodOnImpact : MonoBehaviour
{
	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Rocket> rockets;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool unKinematicOnImpact;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xA7D820", Offset = "0xA7D820", VA = "0xA7D820")]
	private void Start()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xA7D878", Offset = "0xA7D878", VA = "0xA7D878")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xA7DA10", Offset = "0xA7DA10", VA = "0xA7DA10")]
	public ExplodOnImpact()
	{
	}
}
[Token(Token = "0x20002B2")]
public class MagnetMatAnimate : MonoBehaviour
{
	[Token(Token = "0x600112F")]
	[Address(RVA = "0xA7DA18", Offset = "0xA7DA18", VA = "0xA7DA18")]
	public MagnetMatAnimate()
	{
	}
}
[Token(Token = "0x20002B3")]
public class RandomMesh : MonoBehaviour
{
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter mf;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] meshList;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialManager MaterialMan;

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xA7DA20", Offset = "0xA7DA20", VA = "0xA7DA20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA7DC94", Offset = "0xA7DC94", VA = "0xA7DC94")]
	public RandomMesh()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B4")]
public class SceneReference : ISerializationCallbackReceiver
{
	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string scenePath;

	[Token(Token = "0x17000114")]
	public string ScenePath
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xA7DC9C", Offset = "0xA7DC9C", VA = "0xA7DC9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0xA7DCA4", Offset = "0xA7DCA4", VA = "0xA7DCA4")]
		set
		{
		}
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA7DCAC", Offset = "0xA7DCAC", VA = "0xA7DCAC")]
	public static implicit operator string(SceneReference sceneReference)
	{
		return null;
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA7DCC4", Offset = "0xA7DCC4", VA = "0xA7DCC4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA7DCC8", Offset = "0xA7DCC8", VA = "0xA7DCC8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA7DCCC", Offset = "0xA7DCCC", VA = "0xA7DCCC")]
	public SceneReference()
	{
	}
}
[Token(Token = "0x20002B5")]
public class IslandBoosterShaderChange : MonoBehaviour
{
	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA7DD2C", Offset = "0xA7DD2C", VA = "0xA7DD2C")]
	public IslandBoosterShaderChange()
	{
	}
}
[Token(Token = "0x20002B6")]
public class IslandSlices : MonoBehaviour
{
	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bigChunks;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject smallerSlices;

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA7DD34", Offset = "0xA7DD34", VA = "0xA7DD34")]
	private void SetToChunks(bool which)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA7DD7C", Offset = "0xA7DD7C", VA = "0xA7DD7C")]
	public static void SetToChunksStatic(bool which)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA7DE18", Offset = "0xA7DE18", VA = "0xA7DE18")]
	public IslandSlices()
	{
	}
}
[Token(Token = "0x20002B7")]
public class JointBreakCallback : MonoBehaviour
{
	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent JointBreak;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint myJoint;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isTriggered;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xA7DE20", Offset = "0xA7DE20", VA = "0xA7DE20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xA7DF1C", Offset = "0xA7DF1C", VA = "0xA7DF1C")]
	private void CheckBreak()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xA7DFC0", Offset = "0xA7DFC0", VA = "0xA7DFC0")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xA7E034", Offset = "0xA7E034", VA = "0xA7E034")]
	public JointBreakCallback()
	{
	}
}
[Token(Token = "0x20002B8")]
public class KeepChainClear : MonoBehaviour
{
	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float levelStart;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool doCheck;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frames;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int framesNeeded;

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xA7E03C", Offset = "0xA7E03C", VA = "0xA7E03C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xA7E0D4", Offset = "0xA7E0D4", VA = "0xA7E0D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xA7E118", Offset = "0xA7E118", VA = "0xA7E118")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xA7E280", Offset = "0xA7E280", VA = "0xA7E280")]
	public KeepChainClear()
	{
	}
}
[Token(Token = "0x20002B9")]
public class LanguageBasedRemoval : MonoBehaviour
{
	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Languages[] hideForLanguage;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("HIDE if NOT language in list")]
	public bool hideIfNotLanguage;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useOtherGameobject;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToHide;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useAwake;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayHideForGizmo;

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xA7E290", Offset = "0xA7E290", VA = "0xA7E290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xA7E3AC", Offset = "0xA7E3AC", VA = "0xA7E3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xA7E2A0", Offset = "0xA7E2A0", VA = "0xA7E2A0")]
	private void RemoveStuff()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xA7E3BC", Offset = "0xA7E3BC", VA = "0xA7E3BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xA7E3C0", Offset = "0xA7E3C0", VA = "0xA7E3C0")]
	public LanguageBasedRemoval()
	{
	}
}
[Token(Token = "0x20002BA")]
[ExecuteInEditMode]
public class LegRootOrientation : MonoBehaviour
{
	[Token(Token = "0x6001149")]
	[Address(RVA = "0xA7E3D0", Offset = "0xA7E3D0", VA = "0xA7E3D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xA7E434", Offset = "0xA7E434", VA = "0xA7E434")]
	public LegRootOrientation()
	{
	}
}
[Token(Token = "0x20002BB")]
public class LevelDirector_TeamTalk : LevelDirector_CutsceneSimon
{
	[Token(Token = "0x20002BC")]
	[CompilerGenerated]
	private sealed class <Conversation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDirector_TeamTalk <>4__this;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0xA7EC28", Offset = "0xA7EC28", VA = "0xA7EC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xA7EC70", Offset = "0xA7EC70", VA = "0xA7EC70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xA7E794", Offset = "0xA7E794", VA = "0xA7E794")]
		[DebuggerHidden]
		public <Conversation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xA7E7C4", Offset = "0xA7E7C4", VA = "0xA7E7C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xA7E7C8", Offset = "0xA7E7C8", VA = "0xA7E7C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xA7EC30", Offset = "0xA7EC30", VA = "0xA7EC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public LevelDirector_base alessandro;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public LevelDirector_base almut;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public LevelDirector_base dennis;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public LevelDirector_base luca;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LevelDirector_base marcel;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public LevelDirector_base rico;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private LevelDirector_base simon;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public ShoutTimer shoutTimer;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool startTalk;

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xA7E43C", Offset = "0xA7E43C", VA = "0xA7E43C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xA7E4BC", Offset = "0xA7E4BC", VA = "0xA7E4BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xA7E53C", Offset = "0xA7E53C", VA = "0xA7E53C")]
	private void TakeShot(VRControllerMapper vrMapper)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xA7E548", Offset = "0xA7E548", VA = "0xA7E548", Slot = "7")]
	public override void Start()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xA7E5F8", Offset = "0xA7E5F8", VA = "0xA7E5F8", Slot = "24")]
	public override void CharacterEvent(HumansInteraction.EventType _which, Collision _collision, bool _isGrabbed)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xA7E584", Offset = "0xA7E584", VA = "0xA7E584")]
	[IteratorStateMachine(typeof(<Conversation>d__14))]
	private IEnumerator Conversation()
	{
		return null;
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA7E60C", Offset = "0xA7E60C", VA = "0xA7E60C")]
	private void FocusPlayer(bool which)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA7E7BC", Offset = "0xA7E7BC", VA = "0xA7E7BC")]
	public LevelDirector_TeamTalk()
	{
	}
}
[Token(Token = "0x20002BD")]
public class LevelShowHide : MonoBehaviour
{
	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("if showIfDone=false gameobject hidden for level complete")]
	public bool showIfDone;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Level myLevel;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ignoreIfReplay;

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xA7EC78", Offset = "0xA7EC78", VA = "0xA7EC78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xA7ED54", Offset = "0xA7ED54", VA = "0xA7ED54")]
	public LevelShowHide()
	{
	}
}
[Token(Token = "0x20002BE")]
public class LevelWaterOverride : MonoBehaviour
{
	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Length;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Height;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaterInterface waterInterface;

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xA7ED64", Offset = "0xA7ED64", VA = "0xA7ED64")]
	private void Start()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xA7EDBC", Offset = "0xA7EDBC", VA = "0xA7EDBC")]
	public LevelWaterOverride()
	{
	}
}
[Token(Token = "0x20002BF")]
public class LeverRef : MonoBehaviour
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical[] button;

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xA7EDC4", Offset = "0xA7EDC4", VA = "0xA7EDC4")]
	public LeverRef()
	{
	}
}
[Token(Token = "0x20002C0")]
public class LightCurveAnimation : MonoBehaviour
{
	[Token(Token = "0x20002C1")]
	[CompilerGenerated]
	private sealed class <TimeAnimation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightCurveAnimation <>4__this;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <stillThere>5__3;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsed>5__4;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xA7F01C", Offset = "0xA7F01C", VA = "0xA7F01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xA7F064", Offset = "0xA7F064", VA = "0xA7F064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xA7EE60", Offset = "0xA7EE60", VA = "0xA7EE60")]
		[DebuggerHidden]
		public <TimeAnimation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xA7EEB8", Offset = "0xA7EEB8", VA = "0xA7EEB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xA7EEBC", Offset = "0xA7EEBC", VA = "0xA7EEBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xA7F024", Offset = "0xA7F024", VA = "0xA7F024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightIntensity;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loop;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Light;

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xA7EDCC", Offset = "0xA7EDCC", VA = "0xA7EDCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xA7EDEC", Offset = "0xA7EDEC", VA = "0xA7EDEC")]
	[IteratorStateMachine(typeof(<TimeAnimation>d__5))]
	private IEnumerator TimeAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA7EE88", Offset = "0xA7EE88", VA = "0xA7EE88")]
	private void Update()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA7EEB0", Offset = "0xA7EEB0", VA = "0xA7EEB0")]
	public LightCurveAnimation()
	{
	}
}
[Token(Token = "0x20002C2")]
public class LightHouseTurn : MonoBehaviour
{
	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C118_SisterRepair levelDirector;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody crankShaftRB;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HingeJoint lightHouse;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HingeJoint crankShaft;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject FXgeneratorRunning;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FXShortCircuit;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Joint crankJoint;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private JointMotor motor;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float factor;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool crankAttached;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float mass;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float counter;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float squeekTime;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string sfxCrankAttach;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string sfxCrankTurning;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EventInstance instanceCrankTurning;

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xA7F06C", Offset = "0xA7F06C", VA = "0xA7F06C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xA7F1F4", Offset = "0xA7F1F4", VA = "0xA7F1F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xA7F3BC", Offset = "0xA7F3BC", VA = "0xA7F3BC")]
	public void SetMotorLighthouse(bool which)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xA7F1D4", Offset = "0xA7F1D4", VA = "0xA7F1D4")]
	public void ShortCircuit(bool which)
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xA7F0C8", Offset = "0xA7F0C8", VA = "0xA7F0C8")]
	public void SetMotor(bool which)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xA7F3DC", Offset = "0xA7F3DC", VA = "0xA7F3DC")]
	public void DestroyCrankJoint()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xA7F46C", Offset = "0xA7F46C", VA = "0xA7F46C")]
	public void FixCrankHandle()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xA7F594", Offset = "0xA7F594", VA = "0xA7F594")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xA7F790", Offset = "0xA7F790", VA = "0xA7F790")]
	public LightHouseTurn()
	{
	}
}
[Token(Token = "0x20002C3")]
public class LimitConnections : MonoBehaviour
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Glued glued;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int connectionsAllowed;

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xA7F7A8", Offset = "0xA7F7A8", VA = "0xA7F7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xA7F800", Offset = "0xA7F800", VA = "0xA7F800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA7F880", Offset = "0xA7F880", VA = "0xA7F880")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA7F900", Offset = "0xA7F900", VA = "0xA7F900")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA7FA10", Offset = "0xA7FA10", VA = "0xA7FA10")]
	public LimitConnections()
	{
	}
}
[Token(Token = "0x20002C4")]
public class LimitNode : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isWaterNode;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xA7FA20", Offset = "0xA7FA20", VA = "0xA7FA20")]
	public LimitNode()
	{
	}
}
[Token(Token = "0x20002C5")]
public class LimitNodeVisual : MonoBehaviour
{
	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lineAttach;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLowPerf;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform trans;

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xA7FA30", Offset = "0xA7FA30", VA = "0xA7FA30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xA7FAA4", Offset = "0xA7FAA4", VA = "0xA7FAA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xA7FB00", Offset = "0xA7FB00", VA = "0xA7FB00")]
	public LimitNodeVisual()
	{
	}
}
[Token(Token = "0x20002C6")]
[RequireComponent(typeof(LineRenderer))]
public class LineRenderBetweenObjects : MonoBehaviour
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform P1;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform P2;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer line;

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xA7FB08", Offset = "0xA7FB08", VA = "0xA7FB08")]
	private void Start()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xA7FB60", Offset = "0xA7FB60", VA = "0xA7FB60")]
	private void Update()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xA7FBC8", Offset = "0xA7FBC8", VA = "0xA7FBC8")]
	[ContextMenu("Draw now")]
	public void DrawLine()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA7FCBC", Offset = "0xA7FCBC", VA = "0xA7FCBC")]
	public LineRenderBetweenObjects()
	{
	}
}
[Token(Token = "0x20002C7")]
public class AssembleDefaultConversations : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string genericBriefingID;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string genericInsertID;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int briefingID;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string gamePrefix;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string sceneType;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool wrongFormat;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int[] targetValues;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Dictionary<string, string> lookUpDict;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int[] amountValues;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int runs;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string introText;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string briefingText;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string targetsDoneText;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string targetsDoneReactionText;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string levelDoneText;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string levelDoneReactionText;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string levelDoneAddonText;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string fail;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string outOfTries;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string unSolvable;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string locaPhoto;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string titleTipLevelSpecific;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string titleTipLevelSpecificID;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string resettiChitChat;

	[Token(Token = "0x4001150")]
	public const string resettiChitChatKey = "resetti_chitchat";

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string resetti_hint_question;

	[Token(Token = "0x4001152")]
	public const string resetti_hint_questionKey = "resetti_hint_question";

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string resetti_hint_questionRevert;

	[Token(Token = "0x4001154")]
	public const string resetti_hint_questionRevertKey = "resetti_hint_questionRevert";

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string resetti_hint_question_yes;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string resetti_hint_question_no;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string resetti_hint_ready;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string resetti_hint_waiting;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string mainSceneName;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject actualGameObject;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static bool noGeneric;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public static bool initialised;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public static bool returnIDs;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string prefixIfGeneric;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string currentID;

	[Token(Token = "0x4001160")]
	public const string genericKeyword = "generic";

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static Dictionary<string, bool> lookupLevelLocaFound;

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xA7FCC4", Offset = "0xA7FCC4", VA = "0xA7FCC4")]
	public static void EditorInit(string _scenePath, bool _returnIDs = false, string _prefixIfGeneric = "DEF_")
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA7FE68", Offset = "0xA7FE68", VA = "0xA7FE68")]
	public static void ExternalInit(string _scenePath)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xA7FD50", Offset = "0xA7FD50", VA = "0xA7FD50")]
	public static void Init(string _scenePath)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xA806CC", Offset = "0xA806CC", VA = "0xA806CC")]
	public static void SetTargetValues(int idx, int _value, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xA807CC", Offset = "0xA807CC", VA = "0xA807CC")]
	public static void SetAmountValues(int idx, int _value, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA808CC", Offset = "0xA808CC", VA = "0xA808CC")]
	public static void IncrementAmountValues(int idx, GameObject sceneObject)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA80224", Offset = "0xA80224", VA = "0xA80224")]
	public static void FillDefaultIDs(bool createDict = true)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA81690", Offset = "0xA81690", VA = "0xA81690")]
	public static string LocaPhotoPath(string _convoType)
	{
		return null;
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA80130", Offset = "0xA80130", VA = "0xA80130")]
	public static void ParseLevelID()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA7FEF8", Offset = "0xA7FEF8", VA = "0xA7FEF8")]
	public static void SetGameID()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xA80074", Offset = "0xA80074", VA = "0xA80074")]
	public static void ClearValues()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA809C8", Offset = "0xA809C8", VA = "0xA809C8")]
	public static void CreateDict()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xA8119C", Offset = "0xA8119C", VA = "0xA8119C")]
	public static string ReadTranslation(string _convoType, bool useGamePrefix = true)
	{
		return null;
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xA81B34", Offset = "0xA81B34", VA = "0xA81B34")]
	public AssembleDefaultConversations()
	{
	}
}
[Token(Token = "0x20002C8")]
public static class ExtensionMethods
{
	[Token(Token = "0x600118D")]
	public static T[] AddtoArray<T>(T[] Org, T New_Value)
	{
		return null;
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xA81C50", Offset = "0xA81C50", VA = "0xA81C50")]
	public static Transform FindDeepChild(this Transform _parent, string _name, bool _toLower = false, bool _findHidden = false)
	{
		return null;
	}

	[Token(Token = "0x600118F")]
	public static T GetRandom<T>(this T[] self)
	{
		return (T)null;
	}

	[Token(Token = "0x6001190")]
	public static T GetRandom<T>(this List<T> self)
	{
		return (T)null;
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xA81D54", Offset = "0xA81D54", VA = "0xA81D54")]
	public static string ReplaceParameters(this string text, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xA81F0C", Offset = "0xA81F0C", VA = "0xA81F0C")]
	public static string RegularReplaceParameters(this string text, Dictionary<string, string> parameters)
	{
		return null;
	}
}
[Token(Token = "0x20002C9")]
public class PropertyReader
{
	[Token(Token = "0x20002CA")]
	public struct Variable
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type type;
	}

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Variable[] _fields_cache;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Variable[] _props_cache;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xA82090", Offset = "0xA82090", VA = "0xA82090")]
	public Variable[] getFields()
	{
		return null;
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xA82200", Offset = "0xA82200", VA = "0xA82200")]
	public Variable[] getProperties()
	{
		return null;
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xA82370", Offset = "0xA82370", VA = "0xA82370")]
	public object getValue(string name)
	{
		return null;
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xA823C0", Offset = "0xA823C0", VA = "0xA823C0")]
	public void setValue(string name, object value)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xA820D8", Offset = "0xA820D8", VA = "0xA820D8")]
	public static Variable[] getFields(Type type)
	{
		return null;
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xA82248", Offset = "0xA82248", VA = "0xA82248")]
	public static Variable[] getProperties(Type type)
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xA82418", Offset = "0xA82418", VA = "0xA82418")]
	public PropertyReader()
	{
	}
}
[Token(Token = "0x20002CB")]
public class StepAllLocalisationKeys : MonoBehaviour
{
	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalizationDataSO locaSO;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	[Space]
	[Space]
	public Languages language;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int locaIDX;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxKeys;

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xA82420", Offset = "0xA82420", VA = "0xA82420")]
	public StepAllLocalisationKeys()
	{
	}
}
[Token(Token = "0x20002CC")]
public class TranslatedText : MonoBehaviour
{
	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro _textMeshPro;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI _textMeshProUGUI;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _translationId;

	[Token(Token = "0x17000119")]
	private TextMeshPro textMeshPro
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xA82428", Offset = "0xA82428", VA = "0xA82428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	private TextMeshProUGUI textMeshProUGUI
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xA824D0", Offset = "0xA824D0", VA = "0xA824D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public string translationId
	{
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xA82578", Offset = "0xA82578", VA = "0xA82578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xA82580", Offset = "0xA82580", VA = "0xA82580")]
	private void Start()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xA82584", Offset = "0xA82584", VA = "0xA82584")]
	private void TrySelfRegistration()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xA82898", Offset = "0xA82898", VA = "0xA82898")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xA829D4", Offset = "0xA829D4", VA = "0xA829D4")]
	public void SetTranslatedText(string text)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xA82AC4", Offset = "0xA82AC4", VA = "0xA82AC4")]
	public TranslatedText()
	{
	}
}
[Token(Token = "0x20002CD")]
public class TranslationManager : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	public delegate void OnLanguageChangeDelegate();

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Languages CurrentLanguage;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool initialised;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizationDataSO localizationDataSO;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static LocalizationDataSO LocalizationDataSO;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool fontAnimationAllowedByLanguage;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<Languages, string> debugStringDict;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<TranslatedText> texts;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool languageLoaded;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static TranslationManager _instance;

	[Token(Token = "0x1700011C")]
	public static TranslationManager Instance
	{
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xA82610", Offset = "0xA82610", VA = "0xA82610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400003F")]
	public static event OnLanguageChangeDelegate OnLanguageChange
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xA82ACC", Offset = "0xA82ACC", VA = "0xA82ACC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xA82B84", Offset = "0xA82B84", VA = "0xA82B84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xA82C3C", Offset = "0xA82C3C", VA = "0xA82C3C")]
	public static void DisplayMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xA82E70", Offset = "0xA82E70", VA = "0xA82E70")]
	public static string ConcatMessages(List<string> msg)
	{
		return null;
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xA82FD0", Offset = "0xA82FD0", VA = "0xA82FD0")]
	private void MyInspectorGUI()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xA830B8", Offset = "0xA830B8", VA = "0xA830B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xA831D8", Offset = "0xA831D8", VA = "0xA831D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xA834D0", Offset = "0xA834D0", VA = "0xA834D0")]
	public static void CallLanguageChangedDelegate()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xA83578", Offset = "0xA83578", VA = "0xA83578")]
	[ContextMenu("DEBUG set english")]
	private void SetEnglish()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xA83650", Offset = "0xA83650", VA = "0xA83650")]
	[ContextMenu("DEBUG set german")]
	private void SetSpanish()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xA832E0", Offset = "0xA832E0", VA = "0xA832E0")]
	public static void LoadLanguageSettings()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xA83658", Offset = "0xA83658", VA = "0xA83658")]
	public static Languages CheckSystemLanguage()
	{
		return default(Languages);
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xA83580", Offset = "0xA83580", VA = "0xA83580")]
	public static void SetLanguage(Languages language)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xA83738", Offset = "0xA83738", VA = "0xA83738")]
	private void LookupTranslation(TranslatedText text)
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xA83760", Offset = "0xA83760", VA = "0xA83760")]
	public static string GetUITranslation(string translationId)
	{
		return null;
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xA837F4", Offset = "0xA837F4", VA = "0xA837F4")]
	public static string GetUITranslation(string translationId, Languages _language)
	{
		return null;
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xA83894", Offset = "0xA83894", VA = "0xA83894")]
	public static bool TryGetUITranslation(string translationId, out string translation)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xA81930", Offset = "0xA81930", VA = "0xA81930")]
	public static string GetRandomUITranslation(string translationId)
	{
		return null;
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xA83960", Offset = "0xA83960", VA = "0xA83960")]
	public static string GetUITranslation(string translationId, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xA81918", Offset = "0xA81918", VA = "0xA81918")]
	public static string GetRandomUITranslation(string translationId, Dictionary<string, string> parameters)
	{
		return null;
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xA83978", Offset = "0xA83978", VA = "0xA83978")]
	public void LanguageChanged()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xA83AD0", Offset = "0xA83AD0", VA = "0xA83AD0")]
	public static void LanguageSpecificFontChanges()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xA83DA8", Offset = "0xA83DA8", VA = "0xA83DA8")]
	public static string TranslationExchange(string translationId, string scriptString)
	{
		return null;
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xA83DE0", Offset = "0xA83DE0", VA = "0xA83DE0")]
	private void RegisterExistingTexts()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xA8278C", Offset = "0xA8278C", VA = "0xA8278C")]
	public void RegisterText(TranslatedText text)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xA82924", Offset = "0xA82924", VA = "0xA82924")]
	public void UnregisterText(TranslatedText text)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xA83EA0", Offset = "0xA83EA0", VA = "0xA83EA0")]
	public TranslationManager()
	{
	}
}
[Token(Token = "0x20002CF")]
public class LockRBTrigger : CollisionBase
{
	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody RBToLock;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rigidbody triggerRB;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string onSound;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xA83EE8", Offset = "0xA83EE8", VA = "0xA83EE8", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xA83FA8", Offset = "0xA83FA8", VA = "0xA83FA8")]
	public LockRBTrigger()
	{
	}
}
[Token(Token = "0x20002D0")]
public class LogoScreenUFO : MonoBehaviour
{
	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cameraRig;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attachTrans;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ropeTrans;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rope;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 diff;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody ufo;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPos;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 upForce;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform startFade;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform endFade;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool targetReached;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool firstFadeReached;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject chainSFX;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool chainMoving;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 pos;

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xA83FB0", Offset = "0xA83FB0", VA = "0xA83FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xA840B4", Offset = "0xA840B4", VA = "0xA840B4")]
	private void ReleaseRope()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xA84128", Offset = "0xA84128", VA = "0xA84128")]
	private void TargetReached()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xA8422C", Offset = "0xA8422C", VA = "0xA8422C")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xA84264", Offset = "0xA84264", VA = "0xA84264")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xA843C4", Offset = "0xA843C4", VA = "0xA843C4")]
	private void PlayerClimbPositionCheck()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xA844B0", Offset = "0xA844B0", VA = "0xA844B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xA847BC", Offset = "0xA847BC", VA = "0xA847BC")]
	public LogoScreenUFO()
	{
	}
}
[Token(Token = "0x20002D1")]
public class LogosScreenSpawn : MonoBehaviour
{
	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawnPrefabs;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleOffsetMin;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleOffsetMax;

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xA847D4", Offset = "0xA847D4", VA = "0xA847D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xA84ACC", Offset = "0xA84ACC", VA = "0xA84ACC")]
	private float GetRnd(float rng)
	{
		return default(float);
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xA84ADC", Offset = "0xA84ADC", VA = "0xA84ADC")]
	public LogosScreenSpawn()
	{
	}
}
[Token(Token = "0x20002D2")]
public class LogPanel : MonoBehaviour
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tm;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject LogObject;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string myLog;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string oldLog;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxlines;

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xA84AF0", Offset = "0xA84AF0", VA = "0xA84AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xA84BAC", Offset = "0xA84BAC", VA = "0xA84BAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xA84C2C", Offset = "0xA84C2C", VA = "0xA84C2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xA84CAC", Offset = "0xA84CAC", VA = "0xA84CAC")]
	public static void SetLog(bool which)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xA84D64", Offset = "0xA84D64", VA = "0xA84D64")]
	public static bool GetState()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xA84DB8", Offset = "0xA84DB8", VA = "0xA84DB8")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xA84E50", Offset = "0xA84E50", VA = "0xA84E50")]
	private void RemoveExcessLinesFromStart()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xA84F68", Offset = "0xA84F68", VA = "0xA84F68")]
	public LogPanel()
	{
	}
}
[Token(Token = "0x20002D3")]
public class MakeFloatRBsSinky : MonoBehaviour
{
	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sinkOverride;

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xA84FD8", Offset = "0xA84FD8", VA = "0xA84FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xA84FDC", Offset = "0xA84FDC", VA = "0xA84FDC")]
	private void Sinky()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xA85110", Offset = "0xA85110", VA = "0xA85110")]
	public MakeFloatRBsSinky()
	{
	}
}
[Token(Token = "0x20002D4")]
public class MakeNonKinematic : MonoBehaviour
{
	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xA85120", Offset = "0xA85120", VA = "0xA85120")]
	public void DoAction()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xA85174", Offset = "0xA85174", VA = "0xA85174")]
	public MakeNonKinematic()
	{
	}
}
[Token(Token = "0x20002D5")]
public class ManualUnlockEntityDefiniton : MonoBehaviour
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition[] entityDefinitions;

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xA8517C", Offset = "0xA8517C", VA = "0xA8517C")]
	public void ManualUnlock()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xA851E0", Offset = "0xA851E0", VA = "0xA851E0")]
	public ManualUnlockEntityDefiniton()
	{
	}
}
[Token(Token = "0x20002D6")]
public class ManualWaterSurfaceTrigger : CollisionBase
{
	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool changeSkipStep;

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xA851E8", Offset = "0xA851E8", VA = "0xA851E8", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xA852CC", Offset = "0xA852CC", VA = "0xA852CC")]
	public ManualWaterSurfaceTrigger()
	{
	}
}
[Token(Token = "0x20002D7")]
public class MarkLevelComplete : MonoBehaviour
{
	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xA852D4", Offset = "0xA852D4", VA = "0xA852D4")]
	public void MarkAsComplete()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xA852F8", Offset = "0xA852F8", VA = "0xA852F8")]
	public MarkLevelComplete()
	{
	}
}
[Token(Token = "0x20002D8")]
public class MatchOrientation : MonoBehaviour
{
	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 PosOffset;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 RotOffset;

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xA85300", Offset = "0xA85300", VA = "0xA85300")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xA85324", Offset = "0xA85324", VA = "0xA85324")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xA8544C", Offset = "0xA8544C", VA = "0xA8544C")]
	public MatchOrientation()
	{
	}
}
[Token(Token = "0x20002D9")]
public class MaterialManager : MonoBehaviour
{
	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public Palette palette;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool randomColor;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Renderer> renders;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<MeshFilter> MeshFilters;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool externalColorChangeAllowed;

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xA854C0", Offset = "0xA854C0", VA = "0xA854C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xA7DB48", Offset = "0xA7DB48", VA = "0xA7DB48")]
	public void Change()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xA857D0", Offset = "0xA857D0", VA = "0xA857D0")]
	public void SetColor()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xA857DC", Offset = "0xA857DC", VA = "0xA857DC")]
	public void SetColorExternal(Color col)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xA857CC", Offset = "0xA857CC", VA = "0xA857CC")]
	public void SetColor(Color col)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xA85A78", Offset = "0xA85A78", VA = "0xA85A78")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xA857F4", Offset = "0xA857F4", VA = "0xA857F4")]
	private void ChangeMeshVertexColor(Color col)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xA85538", Offset = "0xA85538", VA = "0xA85538")]
	private void SearchRenderersAndMeshFilters()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xA85B14", Offset = "0xA85B14", VA = "0xA85B14")]
	public MaterialManager()
	{
	}
}
[Token(Token = "0x20002DA")]
public class MolluskWebcam : MonoBehaviour
{
	[Token(Token = "0x20002DB")]
	public enum Mood
	{
		[Token(Token = "0x40011A4")]
		neutral,
		[Token(Token = "0x40011A5")]
		mean,
		[Token(Token = "0x40011A6")]
		hurt,
		[Token(Token = "0x40011A7")]
		angry,
		[Token(Token = "0x40011A8")]
		angryEyesClosed
	}

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] moodSprites;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer webcam;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mood mood;

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xA85B24", Offset = "0xA85B24", VA = "0xA85B24")]
	public void SetCam(bool which)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xA85B54", Offset = "0xA85B54", VA = "0xA85B54")]
	public void SetMood(Mood _mood, bool showSprites = false)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xA85BD4", Offset = "0xA85BD4", VA = "0xA85BD4")]
	public MolluskWebcam()
	{
	}
}
[Token(Token = "0x20002DC")]
public class Movement : MonoBehaviour
{
	[Token(Token = "0x20002DD")]
	public delegate void BlinderEventDelegate(bool blinderOn);

	[Token(Token = "0x20002DE")]
	public delegate void MoveEventDelegate();

	[Token(Token = "0x20002DF")]
	[CompilerGenerated]
	private sealed class <SnapTurn>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool rightTurn;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Movement <>4__this;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <dir>5__2;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xA879F8", Offset = "0xA879F8", VA = "0xA879F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xA87A40", Offset = "0xA87A40", VA = "0xA87A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xA873F4", Offset = "0xA873F4", VA = "0xA873F4")]
		[DebuggerHidden]
		public <SnapTurn>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xA877DC", Offset = "0xA877DC", VA = "0xA877DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xA877E0", Offset = "0xA877E0", VA = "0xA877E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xA87A00", Offset = "0xA87A00", VA = "0xA87A00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float snapTurnStickThreshold;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float smoothTurnTurnStickThreshold;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float snapTurnDuration;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float snapTurnRotationMax;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float smoothTurnSpeed;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float verticalSpeedFactor;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float verticalHeightFactor;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float verticalHeight;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool factorChanged;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool AllowMovement;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool AllowTurning;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool UseLimits;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public static bool FastMove;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] verticalLimits;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTurning;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float increment;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float turnStarted;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastTurned;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float turned;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool snapStickCentered;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool smoothTurning;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool snapTurningUsesSteps;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool leftHandMoves;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform cameraRig;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 camForward;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] directions;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 input;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform camHelper;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool useVignetting;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Tween vignettingTween;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isVignetting;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool forceVignetting;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material blinderMaterial;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string blinder;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 lastPosition;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion lastEulerAngles;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Movement _instance;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float UVPosition;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float currentUVPosition;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool needsVignetting;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float vignetteSpeedIn;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float vignetteSpeedOut;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float blindersStrength;

	[Token(Token = "0x1700011D")]
	public static Movement Instance
	{
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xA84618", Offset = "0xA84618", VA = "0xA84618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000040")]
	public static event BlinderEventDelegate OnBlinderEvent
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xA85BDC", Offset = "0xA85BDC", VA = "0xA85BDC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xA85C94", Offset = "0xA85C94", VA = "0xA85C94")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000041")]
	public static event MoveEventDelegate OnMoveEvent
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xA85D4C", Offset = "0xA85D4C", VA = "0xA85D4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xA85E08", Offset = "0xA85E08", VA = "0xA85E08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xA85EC4", Offset = "0xA85EC4", VA = "0xA85EC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xA86140", Offset = "0xA86140", VA = "0xA86140")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xA860B8", Offset = "0xA860B8", VA = "0xA860B8")]
	public void SetSmoothTurnSpeed()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xA86110", Offset = "0xA86110", VA = "0xA86110")]
	public void SetSmoothTurning()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xA86174", Offset = "0xA86174", VA = "0xA86174")]
	public void SetVignetting(bool which)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xA86180", Offset = "0xA86180", VA = "0xA86180")]
	public void SetForceVignetting(bool which)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xA8618C", Offset = "0xA8618C", VA = "0xA8618C")]
	private void LastPos()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xA86200", Offset = "0xA86200", VA = "0xA86200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xA86384", Offset = "0xA86384", VA = "0xA86384")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xA86500", Offset = "0xA86500", VA = "0xA86500")]
	private void ControllerActive(int _id, bool _which)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xA8656C", Offset = "0xA8656C", VA = "0xA8656C")]
	private void GamePaused(bool which)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xA8657C", Offset = "0xA8657C", VA = "0xA8657C")]
	private void PreLoad(bool editorPreLoadCall)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xA86510", Offset = "0xA86510", VA = "0xA86510")]
	public void VerticalChange(bool force = false)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xA86598", Offset = "0xA86598", VA = "0xA86598")]
	public static void ToggleMovement()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xA865E8", Offset = "0xA865E8", VA = "0xA865E8")]
	public static void ToggleLimits()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xA86658", Offset = "0xA86658", VA = "0xA86658")]
	public static void SetLimits(bool which)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xA866C4", Offset = "0xA866C4", VA = "0xA866C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xA86BDC", Offset = "0xA86BDC", VA = "0xA86BDC")]
	private void UpdateMovement(int _ID)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xA872C0", Offset = "0xA872C0", VA = "0xA872C0")]
	private void Move(VRControllerMapper mapper, Vector2 stickDirection)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xA8736C", Offset = "0xA8736C", VA = "0xA8736C")]
	[IteratorStateMachine(typeof(<SnapTurn>d__67))]
	private IEnumerator SnapTurn(bool rightTurn)
	{
		return null;
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xA86744", Offset = "0xA86744", VA = "0xA86744")]
	private void VignettingChange(bool which)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xA8606C", Offset = "0xA8606C", VA = "0xA8606C")]
	private void CalcBlinders()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xA84794", Offset = "0xA84794", VA = "0xA84794")]
	public void VignettingTick(bool which = true)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xA8741C", Offset = "0xA8741C", VA = "0xA8741C")]
	private void UpdateVignetting()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xA87444", Offset = "0xA87444", VA = "0xA87444")]
	private void EndVignetting()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xA874AC", Offset = "0xA874AC", VA = "0xA874AC")]
	public Movement()
	{
	}
}
[Token(Token = "0x20002E0")]
public class MovementLimits : MonoBehaviour
{
	[Token(Token = "0x20002E1")]
	public delegate void OnMovementLimitsInitDelegate(MovementLimits movementLimits, bool active);

	[Token(Token = "0x20002E2")]
	public delegate void MovementLimitsDeactivateDelegate(string id);

	[Token(Token = "0x20002E3")]
	public enum Mode
	{
		[Token(Token = "0x400120D")]
		regular,
		[Token(Token = "0x400120E")]
		lowPerformance
	}

	[Token(Token = "0x20002E4")]
	public static class Poly
	{
		[Token(Token = "0x6001240")]
		[Address(RVA = "0xA8957C", Offset = "0xA8957C", VA = "0xA8957C")]
		public static bool ContainsPoint(Vector3[] polyPoints, Vector3 p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> limitNodes;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LimitNode> limitNodesComp;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] limitNodesArray;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] closestPointOnLine;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nodes;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform editorPlayer;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool drawEditorDebugLines;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[Header("is limits part of shared prefab")]
	[Space]
	public bool isDefaultLimits;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[Header("replaces default limits")]
	public bool overrideDefault;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform rig;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform playerHead;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool initialised;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int idx2;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 distanceVector;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Header("player must stay inside or outside (obstacle) ")]
	public bool stayInside;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool isOnCorrectSideOfPolygon;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 playerHeadPosition;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isActive;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<LimitNodeVisual> limitNodesVisual;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool showLimitNodes;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool showLimitNodeConnections;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lineWidth;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float limitPullFactorOverride;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float limitPullFactor;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Mode performanceMode;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int visibleNodes;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static MovementLimits masterLimits;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool useLimitBell;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string ID;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float totalDistance;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int lineCount;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastB;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool lineHasEnded;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float dist;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float closestDistance;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int closestDistanceIDX;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float closestsBuoyDistance;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform closestsBuoy;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float buoyDist;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float minDistBell;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool bellCanRing;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float distCounter;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 distanceForce;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float nextRing;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int reScanCount;

	[Token(Token = "0x14000042")]
	public static event OnMovementLimitsInitDelegate OnMovementLimitsInit
	{
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xA87A48", Offset = "0xA87A48", VA = "0xA87A48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xA87B00", Offset = "0xA87B00", VA = "0xA87B00")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public static event MovementLimitsDeactivateDelegate OnMovementLimitsDeactivate
	{
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xA87BB8", Offset = "0xA87BB8", VA = "0xA87BB8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001226")]
		[Address(RVA = "0xA87C74", Offset = "0xA87C74", VA = "0xA87C74")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xA87D30", Offset = "0xA87D30", VA = "0xA87D30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xA87D34", Offset = "0xA87D34", VA = "0xA87D34")]
	private void Init()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xA88918", Offset = "0xA88918", VA = "0xA88918")]
	private void InitLimits(MovementLimits movementLimits, bool active)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xA889E4", Offset = "0xA889E4", VA = "0xA889E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xA88C70", Offset = "0xA88C70", VA = "0xA88C70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xA88D34", Offset = "0xA88D34", VA = "0xA88D34")]
	public static void CallDeactivate(string _whichID)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xA88DA0", Offset = "0xA88DA0", VA = "0xA88DA0")]
	private void Deactivate(string id)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xA88740", Offset = "0xA88740", VA = "0xA88740")]
	private void HideVisualNodes()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xA88E90", Offset = "0xA88E90", VA = "0xA88E90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xA897F4", Offset = "0xA897F4", VA = "0xA897F4")]
	public bool InsidePolygon(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xA897FC", Offset = "0xA897FC", VA = "0xA897FC")]
	public static Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xA8917C", Offset = "0xA8917C", VA = "0xA8917C")]
	public void CollidePolygon(Transform _rig, Vector3 _playerHead)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xA8998C", Offset = "0xA8998C", VA = "0xA8998C")]
	private void RingBellClosestBuoy(float distance)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xA8963C", Offset = "0xA8963C", VA = "0xA8963C")]
	private void FindClosestEntry()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xA883A8", Offset = "0xA883A8", VA = "0xA883A8")]
	private void GetNodes()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xA89C7C", Offset = "0xA89C7C", VA = "0xA89C7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xA8A230", Offset = "0xA8A230", VA = "0xA8A230")]
	public MovementLimits()
	{
	}
}
[Token(Token = "0x20002E5")]
public class MoveRotationPosition : MonoBehaviour
{
	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float power;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parentTo;

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xA8A37C", Offset = "0xA8A37C", VA = "0xA8A37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xA8A3F4", Offset = "0xA8A3F4", VA = "0xA8A3F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xA8A4BC", Offset = "0xA8A4BC", VA = "0xA8A4BC")]
	public MoveRotationPosition()
	{
	}
}
[Token(Token = "0x20002E6")]
public class NativeLanguageLabel : MonoBehaviour
{
	[Token(Token = "0x6001244")]
	[Address(RVA = "0xA8A4CC", Offset = "0xA8A4CC", VA = "0xA8A4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xA8A674", Offset = "0xA8A674", VA = "0xA8A674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xA8A6EC", Offset = "0xA8A6EC", VA = "0xA8A6EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xA8A4D0", Offset = "0xA8A4D0", VA = "0xA8A4D0")]
	private void SetLabels()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xA8A764", Offset = "0xA8A764", VA = "0xA8A764")]
	public NativeLanguageLabel()
	{
	}
}
[Token(Token = "0x20002E7")]
public class NoSleep : MonoBehaviour
{
	[Token(Token = "0x6001249")]
	[Address(RVA = "0xA8A76C", Offset = "0xA8A76C", VA = "0xA8A76C")]
	private void Start()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xA8A7C8", Offset = "0xA8A7C8", VA = "0xA8A7C8")]
	public NoSleep()
	{
	}
}
[Token(Token = "0x20002E8")]
public class NoTrespassing : MonoBehaviour
{
	[Token(Token = "0x20002E9")]
	public delegate void TrespasserDelegate(Rigidbody _trespasser, string _areaID, Type _type);

	[Token(Token = "0x20002EA")]
	public enum Type
	{
		[Token(Token = "0x4001230")]
		human,
		[Token(Token = "0x4001231")]
		otherRB,
		[Token(Token = "0x4001232")]
		tentacle,
		[Token(Token = "0x4001233")]
		none
	}

	[Token(Token = "0x20002EB")]
	[CompilerGenerated]
	private sealed class <Blink>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NoTrespassing <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xA8BA94", Offset = "0xA8BA94", VA = "0xA8BA94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xA8BADC", Offset = "0xA8BADC", VA = "0xA8BADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xA8AB3C", Offset = "0xA8AB3C", VA = "0xA8AB3C")]
		[DebuggerHidden]
		public <Blink>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xA8B888", Offset = "0xA8B888", VA = "0xA8B888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xA8B88C", Offset = "0xA8B88C", VA = "0xA8B88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xA8BA9C", Offset = "0xA8BA9C", VA = "0xA8BA9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[CompilerGenerated]
	private sealed class <ExplodeStuff>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody colRB;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _delay;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool destroyThis;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <trackRB>5__2;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xA8BD84", Offset = "0xA8BD84", VA = "0xA8BD84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xA8BDCC", Offset = "0xA8BDCC", VA = "0xA8BDCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xA8B64C", Offset = "0xA8B64C", VA = "0xA8B64C")]
		[DebuggerHidden]
		public <ExplodeStuff>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xA8BAE4", Offset = "0xA8BAE4", VA = "0xA8BAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xA8BAE8", Offset = "0xA8BAE8", VA = "0xA8BAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xA8BD8C", Offset = "0xA8BD8C", VA = "0xA8BD8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string areaID;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlyTriggerDelegate;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[Space]
	[Header("Humans")]
	[Space]
	public bool trackHumans;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool activateForEveryone;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool doNotActivateForID;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> characterID;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hurtHumans;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool OOBHumans;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float humanOOBDelay;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool humanExplosionEnabled;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Space]
	[Header("Objects")]
	[Space]
	public bool trackOtherRB;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool explosionEnabled;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float explosionDelay;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool removeObject;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Header("Tentacles")]
	[Space]
	[Space]
	public bool trackTentacles;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool hurtTentacles;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool tentacleExplosionEnabled;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float tentacleExplosionDelay;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[Space]
	public bool refreshCollider;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float refreshTime;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider myCollider;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public bool flashBorder;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject viusualBorder;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HumanController trespasser;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool playAlarmSFX;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IEnumerator blinkCoroutine;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator explodeCoroutine;

	[Token(Token = "0x14000044")]
	public static event TrespasserDelegate OnTrespasser
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0xA8A7D0", Offset = "0xA8A7D0", VA = "0xA8A7D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xA8A888", Offset = "0xA8A888", VA = "0xA8A888")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xA8A940", Offset = "0xA8A940", VA = "0xA8A940")]
	private void Awake()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xA8AA90", Offset = "0xA8AA90", VA = "0xA8AA90")]
	[ContextMenu("DoRefreshCollider")]
	public void DoRefreshCollider()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xA8AAC8", Offset = "0xA8AAC8", VA = "0xA8AAC8")]
	[IteratorStateMachine(typeof(<Blink>d__34))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xA8AB64", Offset = "0xA8AB64", VA = "0xA8AB64")]
	public void CallManualTrespass(Rigidbody _Rb)
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xA8AB68", Offset = "0xA8AB68", VA = "0xA8AB68")]
	public void CeckRB(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xA8B494", Offset = "0xA8B494", VA = "0xA8B494")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xA8B2A4", Offset = "0xA8B2A4", VA = "0xA8B2A4")]
	private void TrackTentacles(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xA8B5C0", Offset = "0xA8B5C0", VA = "0xA8B5C0")]
	private void PlayAlarm(Vector3 pos)
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xA8B060", Offset = "0xA8B060", VA = "0xA8B060")]
	private void TrackOtherRB(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xA8AD58", Offset = "0xA8AD58", VA = "0xA8AD58")]
	private void TrackHumans(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xA8B528", Offset = "0xA8B528", VA = "0xA8B528")]
	[IteratorStateMachine(typeof(<ExplodeStuff>d__42))]
	private IEnumerator ExplodeStuff(Rigidbody colRB, float _delay = 0.25f, bool destroyThis = false)
	{
		return null;
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xA8B674", Offset = "0xA8B674", VA = "0xA8B674")]
	public NoTrespassing()
	{
	}
}
[Token(Token = "0x20002ED")]
public class OceanAmbience : MonoBehaviour
{
	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("0:calm | 1:medium | 2:heavy | 3:off")]
	public int wavesParameter;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int windParameter;

	[Token(Token = "0x400123F")]
	public const string windParameterName = "Wind";

	[Token(Token = "0x4001240")]
	public const string wavesParameterName = "Waves";

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xA8BDD4", Offset = "0xA8BDD4", VA = "0xA8BDD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xA8BE80", Offset = "0xA8BE80", VA = "0xA8BE80")]
	public OceanAmbience()
	{
	}
}
[Token(Token = "0x20002EE")]
public class AddToOOb : MonoBehaviour
{
	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool replaceOOB;

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xA8BE88", Offset = "0xA8BE88", VA = "0xA8BE88")]
	private void Start()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xA8C234", Offset = "0xA8C234", VA = "0xA8C234")]
	public AddToOOb()
	{
	}
}
[Token(Token = "0x20002EF")]
public class ParachuteRespawnManager : MonoBehaviour
{
	[Token(Token = "0x20002F0")]
	public delegate void OutOfBoundsDelegate(ParachuteRespawnTracker tracker, bool _adddebris = false, bool _useReplacer = true);

	[Token(Token = "0x20002F1")]
	[CompilerGenerated]
	private sealed class <CollisionCheat>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody _colRB;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0xA8E638", Offset = "0xA8E638", VA = "0xA8E638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xA8E680", Offset = "0xA8E680", VA = "0xA8E680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xA8E4E4", Offset = "0xA8E4E4", VA = "0xA8E4E4")]
		[DebuggerHidden]
		public <CollisionCheat>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xA8E50C", Offset = "0xA8E50C", VA = "0xA8E50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xA8E510", Offset = "0xA8E510", VA = "0xA8E510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xA8E640", Offset = "0xA8E640", VA = "0xA8E640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> outOfBoundsRBs;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> insideBoundsRBs;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParachuteRespawnTracker> trackedObjects;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<FloatRigidbody> outOfBoundsFloats;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatRigidbody> insideBoundsFloats;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<ParachuteRespawnTracker, float> outOfReachSphereDict;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<RigPosition> safeZoneList;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> safeZoneRBs;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform oob;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform waterOOB;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool useDistanceCheck;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool useSafeZoneWithPosition0;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ParachuteRespawnManager _instance;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 waterpos;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParachuteRespawnTracker prt;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float maxDistance;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float maxTimeOutside;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cleanedPosition;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int lastRB;

	[Token(Token = "0x17000124")]
	public static ParachuteRespawnManager Instance
	{
		[Token(Token = "0x600126F")]
		[Address(RVA = "0xA8C0B8", Offset = "0xA8C0B8", VA = "0xA8C0B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000045")]
	public static event OutOfBoundsDelegate OnOutOfBounds
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0xA8C23C", Offset = "0xA8C23C", VA = "0xA8C23C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600126E")]
		[Address(RVA = "0xA8C2F4", Offset = "0xA8C2F4", VA = "0xA8C2F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xA8C3AC", Offset = "0xA8C3AC", VA = "0xA8C3AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xA8C404", Offset = "0xA8C404", VA = "0xA8C404")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xA8C484", Offset = "0xA8C484", VA = "0xA8C484")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xA8C504", Offset = "0xA8C504", VA = "0xA8C504")]
	public void RegisterSafeZone(RigPosition rigPosition)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xA8C5EC", Offset = "0xA8C5EC", VA = "0xA8C5EC")]
	[IteratorStateMachine(typeof(<CollisionCheat>d__23))]
	private IEnumerator CollisionCheat(Rigidbody _colRB)
	{
		return null;
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xA8C660", Offset = "0xA8C660", VA = "0xA8C660")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xA8C730", Offset = "0xA8C730", VA = "0xA8C730")]
	public void AddTrackedObjectWithScript(ParachuteRespawnTracker _prt, Entity _entityScript)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xA8C818", Offset = "0xA8C818", VA = "0xA8C818")]
	public void RemoveTrackedObject(GameObject _go)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xA8C8C4", Offset = "0xA8C8C4", VA = "0xA8C8C4")]
	public void RemoveTrackedObject(ParachuteRespawnTracker _prt)
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xA8C954", Offset = "0xA8C954", VA = "0xA8C954")]
	public void AddTrackedObject(GameObject _go, Entity _entityScript)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xA8CAEC", Offset = "0xA8CAEC", VA = "0xA8CAEC")]
	public void DoOOBCalls(ParachuteRespawnTracker _prt)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xA8CB74", Offset = "0xA8CB74", VA = "0xA8CB74")]
	public void OOBCheck(Rigidbody colRB, bool fromBurnout = false, [Optional] Glue glue)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xA8CF78", Offset = "0xA8CF78", VA = "0xA8CF78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xA8D07C", Offset = "0xA8D07C", VA = "0xA8D07C")]
	private void Burnout(Glue glue)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xA8D098", Offset = "0xA8D098", VA = "0xA8D098")]
	public ParachuteRespawnManager()
	{
	}
}
[Token(Token = "0x20002F2")]
public class ParachuteRespawnTracker : SandboxInit_base
{
	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Entity entityScript;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoRegister;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool reuseGameobject;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool useStartPosition;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool useClosestSpawnArea;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RigPosition closestAreaOnStart;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 startPosition;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useSpawnerRotation;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody myTriggerRB;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startPositionYOffset;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool spanwPosSet;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool trackOnly;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool respawnAfterLevelDone;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool respawnLock;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool noParachute;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool OOBOnBurnout;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("use this to manu add a type of object to respawn")]
	public bool hideAfterRegister;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GameObject> connectedObjects;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector3> connectedOffsets;

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xA8E688", Offset = "0xA8E688", VA = "0xA8E688")]
	private void Awake()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xA8E700", Offset = "0xA8E700", VA = "0xA8E700")]
	private void Start()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xA8E8C8", Offset = "0xA8E8C8", VA = "0xA8E8C8")]
	public void SetSpawnPos()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xA8ECE8", Offset = "0xA8ECE8", VA = "0xA8ECE8")]
	public void OutOfBounds()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xA8ECEC", Offset = "0xA8ECEC", VA = "0xA8ECEC")]
	public Vector3 GetSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xA8E7F0", Offset = "0xA8E7F0", VA = "0xA8E7F0")]
	public void AutoRegister()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xA8ED0C", Offset = "0xA8ED0C", VA = "0xA8ED0C", Slot = "4")]
	public override void SandboxInit()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xA8ED10", Offset = "0xA8ED10", VA = "0xA8ED10")]
	public void Unregister()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xA8EDAC", Offset = "0xA8EDAC", VA = "0xA8EDAC")]
	public ParachuteRespawnTracker()
	{
	}
}
[Token(Token = "0x20002F3")]
public class ParachuteStandalone : MonoBehaviour
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isColliding;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int collisions;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isGrabbed;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasGrabbed;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool chuteDeployed;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deployEffectFactor;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float velocityCounterFactor;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gravityCounterFactor;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool userRandomness;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject parachuteVisual;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastY;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform chutePoint;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minDeploySpeed;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minDeployHeight;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float deployForce;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool removeAfterLanded;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool parachuteOnly;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float openParachuteBelow;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float visualScaleFactor;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject colliders;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool clearStarted;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool autoInit;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject fallingClothSFX;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float oDrag;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float oAngularDrag;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int velKillCount;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float speedBaseHeight;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 velocity;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float forceAdded;

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xA8EDC4", Offset = "0xA8EDC4", VA = "0xA8EDC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xA8EE98", Offset = "0xA8EE98", VA = "0xA8EE98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xA8EF6C", Offset = "0xA8EF6C", VA = "0xA8EF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xA8F094", Offset = "0xA8F094", VA = "0xA8F094")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xA8EFD4", Offset = "0xA8EFD4", VA = "0xA8EFD4")]
	public void Init(Rigidbody _rb, bool _killVelocity = true)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xA8F3A8", Offset = "0xA8F3A8", VA = "0xA8F3A8")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xA8F494", Offset = "0xA8F494", VA = "0xA8F494")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xA8F538", Offset = "0xA8F538", VA = "0xA8F538")]
	private void CheckHeight()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xA8F82C", Offset = "0xA8F82C", VA = "0xA8F82C")]
	private void DeployChute()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xA8F16C", Offset = "0xA8F16C", VA = "0xA8F16C")]
	public void GroundReset()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xA8FA64", Offset = "0xA8FA64", VA = "0xA8FA64")]
	private void ReallyDestroy()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xA8F6D8", Offset = "0xA8F6D8", VA = "0xA8F6D8")]
	private void Parachuting()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xA8FB20", Offset = "0xA8FB20", VA = "0xA8FB20")]
	public ParachuteStandalone()
	{
	}
}
[Token(Token = "0x20002F4")]
public class SpawnPointParachuteDeploy : MonoBehaviour
{
	[Token(Token = "0x20002F5")]
	public delegate void OnParachuteDelegate(ParachuteStandalone _parachute, bool _which);

	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <KeepInPlace>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody _newRB;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _position;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <countInPlace>5__2;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xA9177C", Offset = "0xA9177C", VA = "0xA9177C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xA917C4", Offset = "0xA917C4", VA = "0xA917C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xA90DD0", Offset = "0xA90DD0", VA = "0xA90DD0")]
		[DebuggerHidden]
		public <KeepInPlace>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xA915CC", Offset = "0xA915CC", VA = "0xA915CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xA915D0", Offset = "0xA915D0", VA = "0xA915D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xA91784", Offset = "0xA91784", VA = "0xA91784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject replacerPrefab;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject puffPrefab;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parachutePrefab;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 spawnPosition;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool noTracker;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool randomRotation;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject debrisPrefab;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ParachuteStandalone> activeParachutes;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Rigidbody> respawnedRBs;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool levelDone;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool useReplacerOnReuse;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool noParachute;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool addAndInitTracker;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IEnumerator keepInPlaceCoroutine;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SpawnPointParachuteDeploy _instance;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParachuteRespawnTracker currentSpawn;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float closest;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentDistance;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RigPosition closestRigPosition;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool addDebris;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 forceRot;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject currentSpawnGameObject;

	[Token(Token = "0x17000127")]
	public static SpawnPointParachuteDeploy Instance
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xA8E990", Offset = "0xA8E990", VA = "0xA8E990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000046")]
	public static event OnParachuteDelegate OnParachute
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0xA8FB5C", Offset = "0xA8FB5C", VA = "0xA8FB5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xA8FC14", Offset = "0xA8FC14", VA = "0xA8FC14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xA8FCCC", Offset = "0xA8FCCC", VA = "0xA8FCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xA8FD98", Offset = "0xA8FD98", VA = "0xA8FD98")]
	public void RemoveParachute(GameObject _para)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xA8F954", Offset = "0xA8F954", VA = "0xA8F954")]
	public void RemoveParachute(ParachuteStandalone _para)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xA8FF48", Offset = "0xA8FF48", VA = "0xA8FF48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xA900B4", Offset = "0xA900B4", VA = "0xA900B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xA90220", Offset = "0xA90220", VA = "0xA90220")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xA903D8", Offset = "0xA903D8", VA = "0xA903D8")]
	private void LevelDone()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xA903E4", Offset = "0xA903E4", VA = "0xA903E4")]
	private void SpawnEntity()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xA90A48", Offset = "0xA90A48", VA = "0xA90A48")]
	[IteratorStateMachine(typeof(<KeepInPlace>d__30))]
	private IEnumerator KeepInPlace(Rigidbody _newRB, Vector3 _position)
	{
		return null;
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xA90DF8", Offset = "0xA90DF8", VA = "0xA90DF8")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xA9106C", Offset = "0xA9106C", VA = "0xA9106C")]
	public RigPosition GetRigFromEnum(RigPosition.PositionEnum _enum)
	{
		return null;
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xA8EB0C", Offset = "0xA8EB0C", VA = "0xA8EB0C")]
	public RigPosition GetClosestRigPosition()
	{
		return null;
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xA911D8", Offset = "0xA911D8", VA = "0xA911D8")]
	public void ParachuteSpawnAt(ParachuteRespawnTracker _tracker, Vector3 _position, bool rndRot = true, [Optional] Vector3 _rotation, bool _addDebris = false)
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xA91284", Offset = "0xA91284", VA = "0xA91284")]
	public void NoTrackerParachuteSpawnAt(GameObject _prefab, Vector3 _position, bool rndRot = true, [Optional] Vector3 _rotation, bool _addDebris = false)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xA8F9E4", Offset = "0xA8F9E4", VA = "0xA8F9E4")]
	public void ParachuteEvent(ParachuteStandalone _para, bool _which)
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xA912F0", Offset = "0xA912F0", VA = "0xA912F0")]
	public ParachuteStandalone ReturnParachuteRoot(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xA90AE0", Offset = "0xA90AE0", VA = "0xA90AE0")]
	public ParachuteStandalone AttachParachute(GameObject _gameObject, bool _killVelocity = true)
	{
		return null;
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xA90DC0", Offset = "0xA90DC0", VA = "0xA90DC0")]
	public static float RND(float range)
	{
		return default(float);
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xA913E8", Offset = "0xA913E8", VA = "0xA913E8")]
	public SpawnPointParachuteDeploy()
	{
	}
}
[Token(Token = "0x20002F7")]
public class OptionsProgressGauge : MonoBehaviour
{
	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxAngle;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform needleRoot;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aniRoot;

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xA917CC", Offset = "0xA917CC", VA = "0xA917CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xA918D4", Offset = "0xA918D4", VA = "0xA918D4")]
	public OptionsProgressGauge()
	{
	}
}
[Token(Token = "0x20002F8")]
public class OverlayType : MonoBehaviour
{
	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OverlayType _instance;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject content;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material titleTMProMat;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mode;

	[Token(Token = "0x1700012A")]
	public static OverlayType Instance
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xA918E4", Offset = "0xA918E4", VA = "0xA918E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xA91A70", Offset = "0xA91A70", VA = "0xA91A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xA91A90", Offset = "0xA91A90", VA = "0xA91A90")]
	public void ShowTitle(bool which = true)
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xA91AB8", Offset = "0xA91AB8", VA = "0xA91AB8")]
	public OverlayType()
	{
	}
}
[Token(Token = "0x20002F9")]
public class OverrideSetTentacleConfig : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverrideSetTentacleConfig <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xA91C94", Offset = "0xA91C94", VA = "0xA91C94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xA91CDC", Offset = "0xA91CDC", VA = "0xA91CDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xA91B34", Offset = "0xA91B34", VA = "0xA91B34")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xA91B64", Offset = "0xA91B64", VA = "0xA91B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xA91B68", Offset = "0xA91B68", VA = "0xA91B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xA91C9C", Offset = "0xA91C9C", VA = "0xA91C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleSettings overrideTentacleSettings;

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xA91AC0", Offset = "0xA91AC0", VA = "0xA91AC0")]
	[ContextMenu("DoSettings")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xA91B5C", Offset = "0xA91B5C", VA = "0xA91B5C")]
	public OverrideSetTentacleConfig()
	{
	}
}
[Token(Token = "0x20002FB")]
public class Padlock : MonoBehaviour
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint fixedJoint;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject closedLock;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject openLock;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelDirector_C118_SisterRepair levelDir;

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xA91CE4", Offset = "0xA91CE4", VA = "0xA91CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xA91D1C", Offset = "0xA91D1C", VA = "0xA91D1C")]
	public void AllowPullOff(LevelDirector_C118_SisterRepair _levelDir)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xA91D50", Offset = "0xA91D50", VA = "0xA91D50")]
	public void JointBreakCallback()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xA91E30", Offset = "0xA91E30", VA = "0xA91E30")]
	public Padlock()
	{
	}
}
[Token(Token = "0x20002FC")]
public class ParachuteSpawnPrefab : MonoBehaviour
{
	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnPrefab;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openParachuteBelow;

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xA91E38", Offset = "0xA91E38", VA = "0xA91E38")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xA91F64", Offset = "0xA91F64", VA = "0xA91F64")]
	public ParachuteSpawnPrefab()
	{
	}
}
[Token(Token = "0x20002FD")]
public class ParentTo : MonoBehaviour
{
	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform myParent;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool worldPositionStays;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setToLocalZero;

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xA91F74", Offset = "0xA91F74", VA = "0xA91F74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xA92014", Offset = "0xA92014", VA = "0xA92014")]
	public ParentTo()
	{
	}
}
[Token(Token = "0x20002FE")]
public class PeanutButterDial : MonoBehaviour
{
	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Dial;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievement achievement;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro text;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float MaxRot;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float MinRot;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PhysicalSlider sizeSlider;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xA9201C", Offset = "0xA9201C", VA = "0xA9201C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xA92220", Offset = "0xA92220", VA = "0xA92220")]
	public void Set()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xA92380", Offset = "0xA92380", VA = "0xA92380")]
	public void SetDial(float n)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xA923D0", Offset = "0xA923D0", VA = "0xA923D0")]
	public PeanutButterDial()
	{
	}
}
[Token(Token = "0x20002FF")]
public class PeanutbutterLevelIndicator : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeanutbutterLevelIndicator <>4__this;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xA92838", Offset = "0xA92838", VA = "0xA92838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xA92880", Offset = "0xA92880", VA = "0xA92880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xA92758", Offset = "0xA92758", VA = "0xA92758")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xA92788", Offset = "0xA92788", VA = "0xA92788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xA9278C", Offset = "0xA9278C", VA = "0xA9278C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xA92840", Offset = "0xA92840", VA = "0xA92840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityDefinition peanutbutterEntityDef;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lampOn;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lampOff;

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xA923E4", Offset = "0xA923E4", VA = "0xA923E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xA92464", Offset = "0xA92464", VA = "0xA92464")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xA924E4", Offset = "0xA924E4", VA = "0xA924E4")]
	private void ObjectCollected(AchievementsCollectedObjectsID achievementsCollectedObjectsID)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xA926E4", Offset = "0xA926E4", VA = "0xA926E4")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xA924E8", Offset = "0xA924E8", VA = "0xA924E8")]
	private void FindAllPeanutbutter()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xA92780", Offset = "0xA92780", VA = "0xA92780")]
	public PeanutbutterLevelIndicator()
	{
	}
}
[Token(Token = "0x2000301")]
public class PedestrianLadder : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[CompilerGenerated]
	private sealed class <CoolOff>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PedestrianLadder <>4__this;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xA92BB0", Offset = "0xA92BB0", VA = "0xA92BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xA92BF8", Offset = "0xA92BF8", VA = "0xA92BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xA92ABC", Offset = "0xA92ABC", VA = "0xA92ABC")]
		[DebuggerHidden]
		public <CoolOff>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xA92AF4", Offset = "0xA92AF4", VA = "0xA92AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xA92AF8", Offset = "0xA92AF8", VA = "0xA92AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xA92BB8", Offset = "0xA92BB8", VA = "0xA92BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 dir;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool cooldown;

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xA92888", Offset = "0xA92888", VA = "0xA92888")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xA9288C", Offset = "0xA9288C", VA = "0xA9288C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xA92A48", Offset = "0xA92A48", VA = "0xA92A48")]
	[IteratorStateMachine(typeof(<CoolOff>d__4))]
	private IEnumerator CoolOff()
	{
		return null;
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xA92AE4", Offset = "0xA92AE4", VA = "0xA92AE4")]
	public PedestrianLadder()
	{
	}
}
[Token(Token = "0x2000303")]
public class PerformanceTests : MonoBehaviour
{
	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PerformanceTests _instance;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool NOFLOATING;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MyCanvas;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject VirtualConsole;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material BuildingsMaterial;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material VehiclesMaterial;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material WaterSurfaceMaterial;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Shader NewUberShader;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Shader NewUberNoFoamlineShader;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Shader WaterSurfaceShader;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shader WaterSurfaceFoamShader;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Shader WaterSurfaceReflectionShader;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Shader WaterSurfaceNoNoiseShader;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Shader WaterSurfaceShaderNoCull;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Shader WaterSurfaceShaderQuestTest;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material speechBubbleTypeMat;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material speechBubbleBackgroundMat;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Material lastSkyBox;

	[Token(Token = "0x17000131")]
	public static PerformanceTests Instance
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xA92C00", Offset = "0xA92C00", VA = "0xA92C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xA92D8C", Offset = "0xA92D8C", VA = "0xA92D8C")]
	[ContextMenu("destroy")]
	public void KillCanvas()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xA931C8", Offset = "0xA931C8", VA = "0xA931C8")]
	public static void ToggleSkybox()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xA9321C", Offset = "0xA9321C", VA = "0xA9321C")]
	public static void ClearSkybox()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xA93254", Offset = "0xA93254", VA = "0xA93254")]
	public void SetDefaultWaterSurface()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xA93278", Offset = "0xA93278", VA = "0xA93278")]
	public void SetSurfaceFoamNoise()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xA9329C", Offset = "0xA9329C", VA = "0xA9329C")]
	public void SetSurfaceReflectionNoise()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xA932C0", Offset = "0xA932C0", VA = "0xA932C0")]
	public void SetSurfaceNoNoise()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xA932E4", Offset = "0xA932E4", VA = "0xA932E4")]
	public void SetSurfaceNoCull()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xA93308", Offset = "0xA93308", VA = "0xA93308")]
	public void SetSurfaceQuestNoise()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xA9332C", Offset = "0xA9332C", VA = "0xA9332C")]
	public void ToggleFoamline()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xA933E8", Offset = "0xA933E8", VA = "0xA933E8")]
	public PerformanceTests()
	{
	}
}
[Token(Token = "0x2000304")]
public class PhysicalRotors : MonoBehaviour
{
	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint[] rotors;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int dir;

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xA933F0", Offset = "0xA933F0", VA = "0xA933F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xA934F8", Offset = "0xA934F8", VA = "0xA934F8")]
	public void DestroyHinges()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xA93620", Offset = "0xA93620", VA = "0xA93620")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0xA936F4", Offset = "0xA936F4", VA = "0xA936F4")]
	public PhysicalRotors()
	{
	}
}
[Serializable]
[Token(Token = "0x2000305")]
public class SliderEvent : UnityEvent<float>
{
	[Token(Token = "0x60012FF")]
	[Address(RVA = "0xA93704", Offset = "0xA93704", VA = "0xA93704")]
	public SliderEvent()
	{
	}
}
[Token(Token = "0x2000306")]
public class PhysicalSlider : MonoBehaviour
{
	[Token(Token = "0x2000307")]
	public delegate void OnSliderUpdateDelegate(float _handOverValue);

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ID;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable sliderGrabbable;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool grabbableOnlyOperation;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ConfigurableJoint myJoint;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform limitMax;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform limitMin;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float range;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float startFactor;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool setStartFactor;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastFactor;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentFactor;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 debugTargetPosition;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startposition;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float segmentLength;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool debugMe;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float limitModifier;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool suppressCalls;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool callbackOnRelaseOnly;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SliderEvent sliderEvent;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool segmentHapticFeedback;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lastHapticSegmentValue;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastNewSnapSegmentValue;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool newSnap;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int sliderSegments;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int hapticSnappingMultiplier;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool doReleaseAdjust;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool releaseOnSegmentSnap;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float unlockTime;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string snapSFX;

	[Token(Token = "0x14000047")]
	public event OnSliderUpdateDelegate OnSliderUpdate
	{
		[Token(Token = "0x6001300")]
		[Address(RVA = "0xA9374C", Offset = "0xA9374C", VA = "0xA9374C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001301")]
		[Address(RVA = "0xA937E8", Offset = "0xA937E8", VA = "0xA937E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xA93884", Offset = "0xA93884", VA = "0xA93884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xA93B1C", Offset = "0xA93B1C", VA = "0xA93B1C")]
	public bool SliderGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xA93A90", Offset = "0xA93A90", VA = "0xA93A90")]
	[ContextMenu("SetDebugFactorPosition")]
	private void SetStartFactorPosition()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xA92194", Offset = "0xA92194", VA = "0xA92194")]
	public void SetSlider(float factor, bool noCall = false)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xA93B38", Offset = "0xA93B38", VA = "0xA93B38")]
	private void SetPositionForFactor(float factor)
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xA92104", Offset = "0xA92104", VA = "0xA92104")]
	public float GetFactorForPosition()
	{
		return default(float);
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xA93A98", Offset = "0xA93A98", VA = "0xA93A98")]
	private void GrabLock()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xA93C10", Offset = "0xA93C10", VA = "0xA93C10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xA93C9C", Offset = "0xA93C9C", VA = "0xA93C9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xA93D28", Offset = "0xA93D28", VA = "0xA93D28")]
	private void GrabEvent(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xA921A0", Offset = "0xA921A0", VA = "0xA921A0")]
	public void ForceCall()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xA93D2C", Offset = "0xA93D2C", VA = "0xA93D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xA941E8", Offset = "0xA941E8", VA = "0xA941E8")]
	private void Unlock()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xA9426C", Offset = "0xA9426C", VA = "0xA9426C")]
	public PhysicalSlider()
	{
	}
}
[Token(Token = "0x2000308")]
public class PlayerPrefsX
{
	[Token(Token = "0x2000309")]
	private enum ArrayType
	{
		[Token(Token = "0x4001305")]
		Float,
		[Token(Token = "0x4001306")]
		Int32,
		[Token(Token = "0x4001307")]
		Bool,
		[Token(Token = "0x4001308")]
		String,
		[Token(Token = "0x4001309")]
		Vector2,
		[Token(Token = "0x400130A")]
		Vector3,
		[Token(Token = "0x400130B")]
		Quaternion,
		[Token(Token = "0x400130C")]
		Color
	}

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int endianDiff1;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int endianDiff2;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int idx;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static byte[] byteBlock;

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xA94448", Offset = "0xA94448", VA = "0xA94448")]
	public static string GetString(string name, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xA94498", Offset = "0xA94498", VA = "0xA94498")]
	public static void SetString(string name, string value)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xA944A0", Offset = "0xA944A0", VA = "0xA944A0")]
	public static bool SetBool(string name, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xA94530", Offset = "0xA94530", VA = "0xA94530")]
	public static bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xA9454C", Offset = "0xA9454C", VA = "0xA9454C")]
	public static bool GetBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xA9456C", Offset = "0xA9456C", VA = "0xA9456C")]
	public static long GetLong(string key, long defaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xA94628", Offset = "0xA94628", VA = "0xA94628")]
	public static long GetLong(string key)
	{
		return default(long);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xA94618", Offset = "0xA94618", VA = "0xA94618")]
	private static void SplitLong(long input, out int lowBits, out int highBits)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xA946C4", Offset = "0xA946C4", VA = "0xA946C4")]
	public static void SetLong(string key, long value)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xA9475C", Offset = "0xA9475C", VA = "0xA9475C")]
	public static bool SetVector2(string key, Vector2 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xA94894", Offset = "0xA94894", VA = "0xA94894")]
	private static Vector2 GetVector2(string key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xA94A0C", Offset = "0xA94A0C", VA = "0xA94A0C")]
	public static Vector2 GetVector2(string key, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xA94A50", Offset = "0xA94A50", VA = "0xA94A50")]
	public static bool SetVector3(string key, Vector3 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xA94AF0", Offset = "0xA94AF0", VA = "0xA94AF0")]
	public static Vector3 GetVector3(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xA94B68", Offset = "0xA94B68", VA = "0xA94B68")]
	public static Vector3 GetVector3(string key, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xA94BC0", Offset = "0xA94BC0", VA = "0xA94BC0")]
	public static bool SetQuaternion(string key, Quaternion vector)
	{
		return default(bool);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xA94C70", Offset = "0xA94C70", VA = "0xA94C70")]
	public static Quaternion GetQuaternion(string key)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xA94CF4", Offset = "0xA94CF4", VA = "0xA94CF4")]
	public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xA94D58", Offset = "0xA94D58", VA = "0xA94D58")]
	public static bool SetColor(string key, Color color)
	{
		return default(bool);
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xA94E08", Offset = "0xA94E08", VA = "0xA94E08")]
	public static Color GetColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xA94E44", Offset = "0xA94E44", VA = "0xA94E44")]
	public static Color GetColor(string key, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xA94EA8", Offset = "0xA94EA8", VA = "0xA94EA8")]
	public static bool SetBoolArray(string key, bool[] boolArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xA95268", Offset = "0xA95268", VA = "0xA95268")]
	public static bool[] GetBoolArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xA95504", Offset = "0xA95504", VA = "0xA95504")]
	public static bool[] GetBoolArray(string key, bool defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xA955C4", Offset = "0xA955C4", VA = "0xA955C4")]
	public static bool SetStringArray(string key, string[] stringArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xA958A4", Offset = "0xA958A4", VA = "0xA958A4")]
	public static string[] GetStringArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xA95BC4", Offset = "0xA95BC4", VA = "0xA95BC4")]
	public static string[] GetStringArray(string key, string defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xA95CCC", Offset = "0xA95CCC", VA = "0xA95CCC")]
	public static bool SetIntArray(string key, int[] intArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xA947E4", Offset = "0xA947E4", VA = "0xA947E4")]
	public static bool SetFloatArray(string key, float[] floatArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xA95D7C", Offset = "0xA95D7C", VA = "0xA95D7C")]
	public static bool SetVector2Array(string key, Vector2[] vector2Array)
	{
		return default(bool);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xA95E2C", Offset = "0xA95E2C", VA = "0xA95E2C")]
	public static bool SetVector3Array(string key, Vector3[] vector3Array)
	{
		return default(bool);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xA95EDC", Offset = "0xA95EDC", VA = "0xA95EDC")]
	public static bool SetQuaternionArray(string key, Quaternion[] quaternionArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xA95F8C", Offset = "0xA95F8C", VA = "0xA95F8C")]
	public static bool SetColorArray(string key, Color[] colorArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6001335")]
	private static bool SetValue<T>(string key, T array, ArrayType arrayType, int vectorNumber, Action<T, byte[], int> convert) where T : IList
	{
		return default(bool);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xA9603C", Offset = "0xA9603C", VA = "0xA9603C")]
	private static void ConvertFromInt(int[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xA96068", Offset = "0xA96068", VA = "0xA96068")]
	private static void ConvertFromFloat(float[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xA96130", Offset = "0xA96130", VA = "0xA96130")]
	private static void ConvertFromVector2(Vector2[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xA96194", Offset = "0xA96194", VA = "0xA96194")]
	private static void ConvertFromVector3(Vector3[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xA96228", Offset = "0xA96228", VA = "0xA96228")]
	private static void ConvertFromQuaternion(Quaternion[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xA962C8", Offset = "0xA962C8", VA = "0xA962C8")]
	private static void ConvertFromColor(Color[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xA96368", Offset = "0xA96368", VA = "0xA96368")]
	public static int[] GetIntArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xA96474", Offset = "0xA96474", VA = "0xA96474")]
	public static int[] GetIntArray(string key, int defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xA94900", Offset = "0xA94900", VA = "0xA94900")]
	public static float[] GetFloatArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xA96530", Offset = "0xA96530", VA = "0xA96530")]
	public static float[] GetFloatArray(string key, float defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xA965EC", Offset = "0xA965EC", VA = "0xA965EC")]
	public static Vector2[] GetVector2Array(string key)
	{
		return null;
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xA966F8", Offset = "0xA966F8", VA = "0xA966F8")]
	public static Vector2[] GetVector2Array(string key, Vector2 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xA967BC", Offset = "0xA967BC", VA = "0xA967BC")]
	public static Vector3[] GetVector3Array(string key)
	{
		return null;
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xA968C8", Offset = "0xA968C8", VA = "0xA968C8")]
	public static Vector3[] GetVector3Array(string key, Vector3 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xA9699C", Offset = "0xA9699C", VA = "0xA9699C")]
	public static Quaternion[] GetQuaternionArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xA96AA8", Offset = "0xA96AA8", VA = "0xA96AA8")]
	public static Quaternion[] GetQuaternionArray(string key, Quaternion defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xA96B84", Offset = "0xA96B84", VA = "0xA96B84")]
	public static Color[] GetColorArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xA96C90", Offset = "0xA96C90", VA = "0xA96C90")]
	public static Color[] GetColorArray(string key, Color defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	private static void GetValue<T>(string key, T list, ArrayType arrayType, int vectorNumber, Action<T, byte[]> convert) where T : IList
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xA96D6C", Offset = "0xA96D6C", VA = "0xA96D6C")]
	private static void ConvertToInt(List<int> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xA96E1C", Offset = "0xA96E1C", VA = "0xA96E1C")]
	private static void ConvertToFloat(List<float> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xA96F54", Offset = "0xA96F54", VA = "0xA96F54")]
	private static void ConvertToVector2(List<Vector2> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xA97020", Offset = "0xA97020", VA = "0xA97020")]
	private static void ConvertToVector3(List<Vector3> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xA97104", Offset = "0xA97104", VA = "0xA97104")]
	private static void ConvertToQuaternion(List<Quaternion> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0xA97200", Offset = "0xA97200", VA = "0xA97200")]
	private static void ConvertToColor(List<Color> list, byte[] bytes)
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0xA972FC", Offset = "0xA972FC", VA = "0xA972FC")]
	public static void ShowArrayType(string key)
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xA95004", Offset = "0xA95004", VA = "0xA95004")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xA95174", Offset = "0xA95174", VA = "0xA95174")]
	private static bool SaveBytes(string key, byte[] bytes)
	{
		return default(bool);
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xA96098", Offset = "0xA96098", VA = "0xA96098")]
	private static void ConvertFloatToBytes(float f, byte[] bytes)
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xA96EC8", Offset = "0xA96EC8", VA = "0xA96EC8")]
	private static float ConvertBytesToFloat(byte[] bytes)
	{
		return default(float);
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xA950DC", Offset = "0xA950DC", VA = "0xA950DC")]
	private static void ConvertInt32ToBytes(int i, byte[] bytes)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xA95478", Offset = "0xA95478", VA = "0xA95478")]
	private static int ConvertBytesToInt32(byte[] bytes)
	{
		return default(int);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xA97440", Offset = "0xA97440", VA = "0xA97440")]
	private static void ConvertTo4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xA975C0", Offset = "0xA975C0", VA = "0xA975C0")]
	private static void ConvertFrom4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xA97740", Offset = "0xA97740", VA = "0xA97740")]
	public PlayerPrefsX()
	{
	}
}
[Token(Token = "0x200030A")]
public class PlayOneShot : MonoBehaviour
{
	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string EventReference;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance EventInstance;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xA97748", Offset = "0xA97748", VA = "0xA97748")]
	private void Start()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xA9774C", Offset = "0xA9774C", VA = "0xA9774C")]
	public void PlayOnce()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xA97770", Offset = "0xA97770", VA = "0xA97770")]
	public PlayOneShot()
	{
	}
}
[Token(Token = "0x200030B")]
public class PointAtVRCamera : MonoBehaviour
{
	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xA977C8", Offset = "0xA977C8", VA = "0xA977C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xA977EC", Offset = "0xA977EC", VA = "0xA977EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xA978A0", Offset = "0xA978A0", VA = "0xA978A0")]
	public PointAtVRCamera()
	{
	}
}
[Token(Token = "0x200030C")]
public class PoolPlugLogic : MonoBehaviour
{
	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform waterLevel;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waterLevelTargetY;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject vaultFlodded;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vaultClear;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Joint joint;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool draining;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CollisionBase collisionBase;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform drainTarget;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float drainForce;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LevelDirector_C7001_Sister controllingLevelDirector;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool unlocked;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Grabbable grabbable;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 dir;

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xA978A8", Offset = "0xA978A8", VA = "0xA978A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xA97918", Offset = "0xA97918", VA = "0xA97918")]
	private void OnGrabbed(bool _isGrabbed, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xA9790C", Offset = "0xA9790C", VA = "0xA9790C")]
	public void UnLockPlug(bool which)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xA97940", Offset = "0xA97940", VA = "0xA97940")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xA97950", Offset = "0xA97950", VA = "0xA97950")]
	private void DoDrain()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xA97C88", Offset = "0xA97C88", VA = "0xA97C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xA97D68", Offset = "0xA97D68", VA = "0xA97D68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xA97E48", Offset = "0xA97E48", VA = "0xA97E48")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xA97FAC", Offset = "0xA97FAC", VA = "0xA97FAC")]
	public void UnlockPlug()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xA98038", Offset = "0xA98038", VA = "0xA98038")]
	private void WaterDrained()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xA98040", Offset = "0xA98040", VA = "0xA98040")]
	[ContextMenu("Drain the pool")]
	public void PlugJointBreak()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xA98194", Offset = "0xA98194", VA = "0xA98194")]
	public PoolPlugLogic()
	{
	}
}
[Token(Token = "0x200030D")]
public class ProgrammerSounds : MonoBehaviour
{
	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EVENT_CALLBACK dialogueCallback;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string fmodEvent;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventInstance dialogueInstance;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isPlaying;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float volume;

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xA981B0", Offset = "0xA981B0", VA = "0xA981B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xA9823C", Offset = "0xA9823C", VA = "0xA9823C")]
	public void PlayDialogue(string key, Rigidbody _rb, float _pitch = 1f)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xA983A4", Offset = "0xA983A4", VA = "0xA983A4")]
	public void StopDialogue()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xA983EC", Offset = "0xA983EC", VA = "0xA983EC")]
	private static RESULT DialogueEventCallback(EVENT_CALLBACK_TYPE type, IntPtr instancePtr, IntPtr parameterPtr)
	{
		return default(RESULT);
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xA986F4", Offset = "0xA986F4", VA = "0xA986F4")]
	public void StopSound()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xA98704", Offset = "0xA98704", VA = "0xA98704")]
	private void PlayingCheck()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xA98734", Offset = "0xA98734", VA = "0xA98734")]
	public ProgrammerSounds()
	{
	}
}
[Token(Token = "0x200030E")]
public class PropellerSpin : MonoBehaviour
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Direction;

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xA9873C", Offset = "0xA9873C", VA = "0xA9873C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xA98740", Offset = "0xA98740", VA = "0xA98740")]
	private void Update()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xA9879C", Offset = "0xA9879C", VA = "0xA9879C")]
	public PropellerSpin()
	{
	}
}
[Token(Token = "0x200030F")]
public class PushAway : CollisionBase
{
	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody boss;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool bossInRange;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform trans;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float force;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ForceMode forceMode;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 direction;

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xA987A4", Offset = "0xA987A4", VA = "0xA987A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xA987C8", Offset = "0xA987C8", VA = "0xA987C8", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xA98848", Offset = "0xA98848", VA = "0xA98848")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xA988F0", Offset = "0xA988F0", VA = "0xA988F0")]
	public PushAway()
	{
	}
}
[Token(Token = "0x2000310")]
public class QualityManager : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	[CompilerGenerated]
	private sealed class <OversamplingFade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <wait>5__2;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xA99584", Offset = "0xA99584", VA = "0xA99584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xA995CC", Offset = "0xA995CC", VA = "0xA995CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xA99388", Offset = "0xA99388", VA = "0xA99388")]
		[DebuggerHidden]
		public <OversamplingFade>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xA99424", Offset = "0xA99424", VA = "0xA99424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xA99428", Offset = "0xA99428", VA = "0xA99428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xA9958C", Offset = "0xA9958C", VA = "0xA9958C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400132B")]
	public const float defaultShadowDistance = 15f;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool lightProbesEnabled;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static QualityManager _instance;

	[Token(Token = "0x17000132")]
	public static QualityManager Instance
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xA98900", Offset = "0xA98900", VA = "0xA98900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public static float ShadowQuality
	{
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xA990B4", Offset = "0xA990B4", VA = "0xA990B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001380")]
		[Address(RVA = "0xA98D64", Offset = "0xA98D64", VA = "0xA98D64")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public static float AntiAliasing
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xA993B0", Offset = "0xA993B0", VA = "0xA993B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xA98B38", Offset = "0xA98B38", VA = "0xA98B38")]
		set
		{
		}
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xA98AB8", Offset = "0xA98AB8", VA = "0xA98AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xA98CF0", Offset = "0xA98CF0", VA = "0xA98CF0")]
	public void ApplyCurrentQualitySettings()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xA98FB4", Offset = "0xA98FB4", VA = "0xA98FB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xA99034", Offset = "0xA99034", VA = "0xA99034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xA98FA8", Offset = "0xA98FA8", VA = "0xA98FA8")]
	private void SetDefaultShadowDistance()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0xA990D4", Offset = "0xA990D4", VA = "0xA990D4")]
	public static void SetOverSampling(float sliderValue, PhysicalSlider slider)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xA99308", Offset = "0xA99308", VA = "0xA99308")]
	public void ChangeOversampling()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xA99328", Offset = "0xA99328", VA = "0xA99328")]
	[IteratorStateMachine(typeof(<OversamplingFade>d__15))]
	private IEnumerator OversamplingFade()
	{
		return null;
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xA99210", Offset = "0xA99210", VA = "0xA99210")]
	public static float SnapValue(float newValue, int segments)
	{
		return default(float);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xA98E00", Offset = "0xA98E00", VA = "0xA98E00")]
	private void RefreshShadows()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xA993D0", Offset = "0xA993D0", VA = "0xA993D0")]
	public QualityManager()
	{
	}
}
[Token(Token = "0x2000312")]
public class QuestOpti : MonoBehaviour
{
	[Token(Token = "0x6001390")]
	[Address(RVA = "0xA995D4", Offset = "0xA995D4", VA = "0xA995D4")]
	public QuestOpti()
	{
	}
}
[Token(Token = "0x2000313")]
public class RandomGroupSelection : MonoBehaviour
{
	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("one object selected to be active")]
	public GameObject[] groups;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("chance to be visible 0-1")]
	public float chanceToBeVisible;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useDelay;

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xA995DC", Offset = "0xA995DC", VA = "0xA995DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xA99648", Offset = "0xA99648", VA = "0xA99648")]
	[ContextMenu("SelectGroup")]
	private void SelectGroup()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xA99750", Offset = "0xA99750", VA = "0xA99750")]
	public RandomGroupSelection()
	{
	}
}
[Token(Token = "0x2000314")]
public class RapController : MonoBehaviour
{
	[Token(Token = "0x2000315")]
	[CompilerGenerated]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapController <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xA99CD0", Offset = "0xA99CD0", VA = "0xA99CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xA99D18", Offset = "0xA99D18", VA = "0xA99D18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xA99BA4", Offset = "0xA99BA4", VA = "0xA99BA4")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xA99C14", Offset = "0xA99C14", VA = "0xA99C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xA99C18", Offset = "0xA99C18", VA = "0xA99C18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xA99CD8", Offset = "0xA99CD8", VA = "0xA99CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sisterAVocals;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sisterBVocals;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HumanAestheticScriptableObject characterLookSisterA;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HumanAestheticScriptableObject characterLookSisterB;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject track;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int stateOnStart;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int stateTargetsDone;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int stateGameDone;

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xA99760", Offset = "0xA99760", VA = "0xA99760")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xA99828", Offset = "0xA99828", VA = "0xA99828")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0xA998F0", Offset = "0xA998F0", VA = "0xA998F0")]
	private void SearchHuman()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0xA99B30", Offset = "0xA99B30", VA = "0xA99B30")]
	[IteratorStateMachine(typeof(<Start>d__11))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xA99BCC", Offset = "0xA99BCC", VA = "0xA99BCC", Slot = "4")]
	public virtual void OnTargetComplete(int done, int needed, [Optional] ConstructionTarget target, bool isPlaced = true)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xA99BEC", Offset = "0xA99BEC", VA = "0xA99BEC")]
	private void GameComplete()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xA99C04", Offset = "0xA99C04", VA = "0xA99C04")]
	public RapController()
	{
	}
}
[Token(Token = "0x2000316")]
public class RaycastCapsuleTest : MonoBehaviour
{
	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xA99D20", Offset = "0xA99D20", VA = "0xA99D20")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xA99D24", Offset = "0xA99D24", VA = "0xA99D24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xA99DFC", Offset = "0xA99DFC", VA = "0xA99DFC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xA99ED8", Offset = "0xA99ED8", VA = "0xA99ED8")]
	public RaycastCapsuleTest()
	{
	}
}
[Token(Token = "0x2000317")]
public class RemoveFromEntitiesLoadCount : MonoBehaviour
{
	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xA99EE0", Offset = "0xA99EE0", VA = "0xA99EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xA99F8C", Offset = "0xA99F8C", VA = "0xA99F8C")]
	public RemoveFromEntitiesLoadCount()
	{
	}
}
[Token(Token = "0x2000318")]
public class RemoveIfNotDemo : MonoBehaviour
{
	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool remove;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xA99F94", Offset = "0xA99F94", VA = "0xA99F94")]
	public RemoveIfNotDemo()
	{
	}
}
[Token(Token = "0x2000319")]
public class RemoveTeleportForBuild : MonoBehaviour
{
	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xA99FA4", Offset = "0xA99FA4", VA = "0xA99FA4")]
	public RemoveTeleportForBuild()
	{
	}
}
[Token(Token = "0x200031A")]
public class ReplayCartridge : MonoBehaviour
{
	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Story story;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string myStoryTitle;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string myStoryID;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xA99FAC", Offset = "0xA99FAC", VA = "0xA99FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xA9A134", Offset = "0xA9A134", VA = "0xA9A134")]
	public ReplayCartridge()
	{
	}
}
[Token(Token = "0x200031B")]
public class ReplayCartridgeReader : CollisionBase
{
	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EntityDefinition cartridgeEntityDefinition;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform attachPosition;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CollisionBase slotCrowdedTrigger;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform ejectPosition;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasCartridge;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Entity currentEntity;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string inserCartridgeSFX;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string ejectCartridgeSFX;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Grabbable grabbable;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Entity collisionEntity;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isEjecting;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float ejectForce;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float ejectForceFun;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LevelDirector_base consoleLeveldirector;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ReplayCartridge replayCartridge;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isPlaying;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xA9A13C", Offset = "0xA9A13C", VA = "0xA9A13C", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xA9A2BC", Offset = "0xA9A2BC", VA = "0xA9A2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xA9A36C", Offset = "0xA9A36C", VA = "0xA9A36C")]
	private void StartInvoke()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xA9A2E8", Offset = "0xA9A2E8", VA = "0xA9A2E8")]
	private void InsertCartridge()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xA9A3C0", Offset = "0xA9A3C0", VA = "0xA9A3C0")]
	public void StartButton()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xA9A464", Offset = "0xA9A464", VA = "0xA9A464")]
	public void EjectPressed()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xA9A5FC", Offset = "0xA9A5FC", VA = "0xA9A5FC")]
	private void Insert()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xA9AC7C", Offset = "0xA9AC7C", VA = "0xA9AC7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xA9A468", Offset = "0xA9A468", VA = "0xA9A468")]
	public void Eject()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xA9ACFC", Offset = "0xA9ACFC", VA = "0xA9ACFC")]
	private void EjectDone()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xA9ADBC", Offset = "0xA9ADBC", VA = "0xA9ADBC")]
	public ReplayCartridgeReader()
	{
	}
}
[Token(Token = "0x200031C")]
public class ReplicatorReference : MonoBehaviour
{
	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectionSpawner replicator;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEditorReplicator;

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xA9ADD0", Offset = "0xA9ADD0", VA = "0xA9ADD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xA9AE64", Offset = "0xA9AE64", VA = "0xA9AE64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xA9AEF8", Offset = "0xA9AEF8", VA = "0xA9AEF8")]
	private void PreLoad(bool editorLevelStart)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xA9AF1C", Offset = "0xA9AF1C", VA = "0xA9AF1C")]
	public ReplicatorReference()
	{
	}
}
[Token(Token = "0x200031D")]
public class RescanWPTriggerHumans : MonoBehaviour
{
	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xA9AF24", Offset = "0xA9AF24", VA = "0xA9AF24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xA9B00C", Offset = "0xA9B00C", VA = "0xA9B00C")]
	public RescanWPTriggerHumans()
	{
	}
}
[Token(Token = "0x200031E")]
public class ResetCOM : MonoBehaviour
{
	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xA9B014", Offset = "0xA9B014", VA = "0xA9B014")]
	[ContextMenu("Reset COM")]
	private void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xA9B06C", Offset = "0xA9B06C", VA = "0xA9B06C")]
	public ResetCOM()
	{
	}
}
[Token(Token = "0x200031F")]
public class ResettiDoNoTouch : MonoBehaviour
{
	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumansInteraction levelHost;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HumanController humanController;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool block;

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xA9B074", Offset = "0xA9B074", VA = "0xA9B074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xA9B10C", Offset = "0xA9B10C", VA = "0xA9B10C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xA9B1A4", Offset = "0xA9B1A4", VA = "0xA9B1A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xA9B1A8", Offset = "0xA9B1A8", VA = "0xA9B1A8", Slot = "4")]
	public virtual void ConversationDone(string _convoID, BubbleToCharacter eventBubble)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xA9B258", Offset = "0xA9B258", VA = "0xA9B258")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xA9B440", Offset = "0xA9B440", VA = "0xA9B440")]
	public ResettiDoNoTouch()
	{
	}
}
[Token(Token = "0x2000320")]
public class ResettoDream : MonoBehaviour
{
	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_base levelResetti;

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xA9B448", Offset = "0xA9B448", VA = "0xA9B448")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xA9B4C8", Offset = "0xA9B4C8", VA = "0xA9B4C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xA9B548", Offset = "0xA9B548", VA = "0xA9B548")]
	private void SpawnSpecialResetti(LevelDirector_Resetti resetti)
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xA9B624", Offset = "0xA9B624", VA = "0xA9B624")]
	public ResettoDream()
	{
	}
}
[Token(Token = "0x2000321")]
public class RigPosition : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	public enum PositionEnum
	{
		[Token(Token = "0x4001376")]
		pos0,
		[Token(Token = "0x4001377")]
		pos1,
		[Token(Token = "0x4001378")]
		pos2,
		[Token(Token = "0x4001379")]
		pos3,
		[Token(Token = "0x400137A")]
		pos4
	}

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionEnum myPosition;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool dropped;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider safeZone;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 respawnAreaLeeway;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform respawnRoot;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform optionsZeppelinPosition;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform gameDoneBalloonPosition;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("relative to orientation of transform")]
	public Vector3 optionsZeppelinPositionStartOffset;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("relative to orientation of transform")]
	public Vector3 gameDoneBalloonStartOffset;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Dummy Dispenser attached to this")]
	public Transform dispenserPosition;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform replicatorPosition;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject positionDispenserPrefab;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject sharedPositionsDispenser;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool autoPositionsDispenser;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject positionReplicatorxPrefab;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject sharedPositionsReplicator;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SelectionSpawner replicatorShared;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool autoPositionsReplicator;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject playSpaceVisual;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Level level;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public StudioEventEmitter wavesFront;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public StudioEventEmitter wavesBack;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StudioEventEmitter wavesLeft;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public StudioEventEmitter wavesRight;

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xA9B62C", Offset = "0xA9B62C", VA = "0xA9B62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xA9B648", Offset = "0xA9B648", VA = "0xA9B648")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xA9B7CC", Offset = "0xA9B7CC", VA = "0xA9B7CC")]
	private void AutoPlacements()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xA9BB14", Offset = "0xA9BB14", VA = "0xA9BB14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xA9BD54", Offset = "0xA9BD54", VA = "0xA9BD54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xA9BE84", Offset = "0xA9BE84", VA = "0xA9BE84")]
	private void CheckPosition(RigPositionLever caller)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xA9C118", Offset = "0xA9C118", VA = "0xA9C118")]
	[ContextMenu("spawn")]
	private void DebugSpawnArea()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xA9C23C", Offset = "0xA9C23C", VA = "0xA9C23C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xA9C3A8", Offset = "0xA9C3A8", VA = "0xA9C3A8")]
	public RigPosition()
	{
	}
}
[Token(Token = "0x2000323")]
public class RigPositionLever : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	public delegate void ReportPositionDelegate(RigPositionLever rigPositionLever);

	[Token(Token = "0x2000325")]
	public delegate void RigMovedDelegate(RigPosition _rigPosition);

	[Token(Token = "0x2000326")]
	[CompilerGenerated]
	private sealed class <ResetTentacles>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xA9CB28", Offset = "0xA9CB28", VA = "0xA9CB28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xA9CB70", Offset = "0xA9CB70", VA = "0xA9CB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xA9C810", Offset = "0xA9C810", VA = "0xA9C810")]
		[DebuggerHidden]
		public <ResetTentacles>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xA9CA08", Offset = "0xA9CA08", VA = "0xA9CA08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xA9CA0C", Offset = "0xA9CA0C", VA = "0xA9CA0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xA9CB30", Offset = "0xA9CB30", VA = "0xA9CB30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigPosition.PositionEnum targetRigPosition;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RigPosition rigPosition;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isBlocked;

	[Token(Token = "0x14000048")]
	public static event ReportPositionDelegate OnReportPosition
	{
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xA9BC9C", Offset = "0xA9BC9C", VA = "0xA9BC9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xA9BDCC", Offset = "0xA9BDCC", VA = "0xA9BDCC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public static event RigMovedDelegate OnRigMoved
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xA9C3E0", Offset = "0xA9C3E0", VA = "0xA9C3E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xA9C49C", Offset = "0xA9C49C", VA = "0xA9C49C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xA9C558", Offset = "0xA9C558", VA = "0xA9C558")]
	public void MoveToRigPositon()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xA9C080", Offset = "0xA9C080", VA = "0xA9C080")]
	public void ReportPosition(RigPosition _rigPosition)
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xA9C5D4", Offset = "0xA9C5D4", VA = "0xA9C5D4")]
	private void SetRigPosition()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xA9C7B0", Offset = "0xA9C7B0", VA = "0xA9C7B0")]
	[IteratorStateMachine(typeof(<ResetTentacles>d__14))]
	private IEnumerator ResetTentacles()
	{
		return null;
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xA9C838", Offset = "0xA9C838", VA = "0xA9C838")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xA9C870", Offset = "0xA9C870", VA = "0xA9C870")]
	public RigPositionLever()
	{
	}
}
[Token(Token = "0x2000327")]
public class RigPositionPositionalAudio : MonoBehaviour
{
	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigPosition.PositionEnum rigPositionEnum;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wavesFront;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool wavesRight;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool wavesBack;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool wavesLeft;

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xA9CB78", Offset = "0xA9CB78", VA = "0xA9CB78")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xA9CC70", Offset = "0xA9CC70", VA = "0xA9CC70")]
	public RigPositionPositionalAudio()
	{
	}
}
[Token(Token = "0x2000328")]
public class DartGameController : RocketTargetManager
{
	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("DART GAME MANAGER")]
	public GameObject dartTargetPrefab;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int round;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float offset;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float xOffset;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int maxPoints;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TargetDisplay[] roundsDisplay;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentScore;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool noSpawning;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool pause;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int roundsDisplayType;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool resetRocketsAfterRound;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float movingOffset;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool doOffset;

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xA9CC80", Offset = "0xA9CC80", VA = "0xA9CC80", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xA9CE8C", Offset = "0xA9CE8C", VA = "0xA9CE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xA9D040", Offset = "0xA9D040", VA = "0xA9D040")]
	private void CheckForActiveRockets()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xA9D194", Offset = "0xA9D194", VA = "0xA9D194")]
	private void InGameResetRockets()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xA9D1B0", Offset = "0xA9D1B0", VA = "0xA9D1B0", Slot = "5")]
	public override void TellScore(int _score, GameObject _rocket, DartTarget _currenttarget, int _rocketScore)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xA9D348", Offset = "0xA9D348", VA = "0xA9D348", Slot = "6")]
	public override void TargetDone(GameObject _rocket)
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xA9D454", Offset = "0xA9D454", VA = "0xA9D454")]
	private void SpawnNext()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xA9D5D0", Offset = "0xA9D5D0", VA = "0xA9D5D0")]
	public DartGameController()
	{
	}
}
[Token(Token = "0x2000329")]
public class DartSegment : MonoBehaviour
{
	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int segmentScore;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DartTarget dartTarget;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material blinkMaterial;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material startMaterial;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int blinkCounter;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 hitPos;

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xA9D5FC", Offset = "0xA9D5FC", VA = "0xA9D5FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xA9D67C", Offset = "0xA9D67C", VA = "0xA9D67C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xA9D6FC", Offset = "0xA9D6FC", VA = "0xA9D6FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xA9D7F0", Offset = "0xA9D7F0", VA = "0xA9D7F0")]
	public void GetDartTarget(DartTarget dt)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xA9D7F8", Offset = "0xA9D7F8", VA = "0xA9D7F8")]
	private void GlueTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xA9DBD4", Offset = "0xA9DBD4", VA = "0xA9DBD4")]
	public void StartBlink()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xA9DCA8", Offset = "0xA9DCA8", VA = "0xA9DCA8")]
	public void SegmentHit()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xA9DD5C", Offset = "0xA9DD5C", VA = "0xA9DD5C")]
	public DartSegment()
	{
	}
}
[Token(Token = "0x200032A")]
public class DartTarget : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	public enum EventType
	{
		[Token(Token = "0x40013AA")]
		appear,
		[Token(Token = "0x40013AB")]
		complete,
		[Token(Token = "0x40013AC")]
		levelOver,
		[Token(Token = "0x40013AD")]
		hit
	}

	[Token(Token = "0x200032C")]
	public delegate void TargetTargetDelegate(EventType _which, [Optional] DartSegment _segment);

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DartSegment> segments;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalScore;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> rocketsScored;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RocketTargetManager dartGameController;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool deactivated;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DOTweenAnimation[] tweens;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EightSegmentDisplay score;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EightSegmentDisplay target;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool removeRockets;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DartTarget dartTarget;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rotateAxis;

	[Token(Token = "0x1400004A")]
	public event TargetTargetDelegate OnTargetTargetEvent
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xA9DD6C", Offset = "0xA9DD6C", VA = "0xA9DD6C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xA9DE08", Offset = "0xA9DE08", VA = "0xA9DE08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xA9DEA4", Offset = "0xA9DEA4", VA = "0xA9DEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xA9E1B8", Offset = "0xA9E1B8", VA = "0xA9E1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xA9E068", Offset = "0xA9E068", VA = "0xA9E068")]
	public void RegisterSegment()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xA9E2D4", Offset = "0xA9E2D4", VA = "0xA9E2D4")]
	public void RemoveRockets()
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xA9E224", Offset = "0xA9E224", VA = "0xA9E224")]
	private void TargetIn()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xA9D244", Offset = "0xA9D244", VA = "0xA9D244")]
	public void TargetOut()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xA9E4E0", Offset = "0xA9E4E0", VA = "0xA9E4E0")]
	public void Remove()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xA9D144", Offset = "0xA9D144", VA = "0xA9D144")]
	public static void CallGameOver()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xA9E4F8", Offset = "0xA9E4F8", VA = "0xA9E4F8")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xA9E590", Offset = "0xA9E590", VA = "0xA9E590")]
	public int ReturnUsedRockets()
	{
		return default(int);
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xA9D8F8", Offset = "0xA9D8F8", VA = "0xA9D8F8")]
	public void AddScore(GameObject rocket, int _score, DartSegment _segment)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xA9E5D8", Offset = "0xA9E5D8", VA = "0xA9E5D8")]
	public DartTarget()
	{
	}
}
[Token(Token = "0x200032D")]
public class RocketWatchUI : MonoBehaviour
{
	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject needle;

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xA9E7C8", Offset = "0xA9E7C8", VA = "0xA9E7C8")]
	public RocketWatchUI()
	{
	}
}
[Token(Token = "0x200032E")]
public class Rocket : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	public delegate void OnRocketFLightDelegate(bool mode, Transform target);

	[Token(Token = "0x2000330")]
	public delegate void OnRocketFireworksDelegate(Rocket rocket, bool noCredits);

	[Token(Token = "0x2000331")]
	public enum State
	{
		[Token(Token = "0x40013FB")]
		none,
		[Token(Token = "0x40013FC")]
		parachuting,
		[Token(Token = "0x40013FD")]
		landed,
		[Token(Token = "0x40013FE")]
		aborted,
		[Token(Token = "0x40013FF")]
		disassembled,
		[Token(Token = "0x4001400")]
		landedFail,
		[Token(Token = "0x4001401")]
		sunken
	}

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int collisions;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isGrabbed;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool peakReached;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float highestPoint;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform chutePoint;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float deployEffectFactor;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float minDeploySpeed;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float highestSpeed;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float highestYSpeed;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minDeployHeight;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minSpeedForOrientation;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float deployForce;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float gravityFactor;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float forceAppliedBelowFactor;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minDescentSpeed;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minSpeedDieFactor;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float waterForgivenessFactor;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialised;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public State paraState;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float podWeight;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float horizontalSDFactor;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float pureFallTime;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int lastCollisions;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool disAssembleOnEnterWaterBeforeFlight;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool autoFired;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RocketStage[] stages;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform assembled;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject podParticles;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject trail;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject landingPod;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool seperateStages;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool fireworksRocket;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool noDisassembleOnImpact;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float lastYVel;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 lastVel;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool deployed;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float debugLaunchForce;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float debugLaunchVelocityFactor;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<GameObject> tentacleCollisions;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Rocket currentRocket;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<GameObject> collisionList;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int noCollisionCount;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float landTimer;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float debugLaunchWait;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VRControllerMapper controller;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<SuckerGrabber> mySuckerGrabber;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject landingPodFloat;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject landingPodSink;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float realTimeSplashWait;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RocketTracker rocketTracker;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Grabbable myGrabbable;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool rocketFlight;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject visualLandingIndicatorOK;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject visualLandingIndicatorFAIL;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int passengers;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool useFloaterInWaterDetection;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	private bool isInWater;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[EventRef]
	public string parachuteSFX;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[EventRef]
	public string explosionSFX;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[EventRef]
	public string breakSFX;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool astronautsEjected;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool successReactionShown;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	private bool wasDebugLaunched;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float fallFactor;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float chuteActive;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool doChuting;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool landingOK;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 rotDir;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool rocketFlightHappened;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float timeRocketFlightEnded;

	[Token(Token = "0x1400004B")]
	public static event OnRocketFLightDelegate OnRocketFlight
	{
		[Token(Token = "0x600140E")]
		[Address(RVA = "0xA9E7D0", Offset = "0xA9E7D0", VA = "0xA9E7D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600140F")]
		[Address(RVA = "0xA9E888", Offset = "0xA9E888", VA = "0xA9E888")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public static event OnRocketFireworksDelegate OnRocketFireworks
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xA9E940", Offset = "0xA9E940", VA = "0xA9E940")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001411")]
		[Address(RVA = "0xA9E9FC", Offset = "0xA9E9FC", VA = "0xA9E9FC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xA9EAB8", Offset = "0xA9EAB8", VA = "0xA9EAB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xA9EC2C", Offset = "0xA9EC2C", VA = "0xA9EC2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xA9F200", Offset = "0xA9F200", VA = "0xA9F200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xA9F37C", Offset = "0xA9F37C", VA = "0xA9F37C")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xA9F020", Offset = "0xA9F020", VA = "0xA9F020")]
	private void PrepareStages(RocketStage _stage)
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xA9F564", Offset = "0xA9F564", VA = "0xA9F564")]
	private void DropAstronautPayload()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xA9F570", Offset = "0xA9F570", VA = "0xA9F570")]
	private void DropAstronautPayload(bool _isSuccess = true, bool _isCheating = false)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xA9F8B0", Offset = "0xA9F8B0", VA = "0xA9F8B0")]
	private void Aborted()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xA9F9C8", Offset = "0xA9F9C8", VA = "0xA9F9C8")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xA9FBEC", Offset = "0xA9FBEC", VA = "0xA9FBEC")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xA9FC74", Offset = "0xA9FC74", VA = "0xA9FC74")]
	private void CheckForSunken()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xA9FD40", Offset = "0xA9FD40", VA = "0xA9FD40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xAA0540", Offset = "0xAA0540", VA = "0xAA0540")]
	private void CheckHeight()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xAA0ECC", Offset = "0xAA0ECC", VA = "0xAA0ECC")]
	private bool LandingSpeedOK(bool _isWaterLanding = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xAA0F04", Offset = "0xAA0F04", VA = "0xAA0F04")]
	private void CheckWaterLanding()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xAA0C0C", Offset = "0xAA0C0C", VA = "0xAA0C0C")]
	private void DoFireworks(bool doCredits = true)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xAA0C8C", Offset = "0xAA0C8C", VA = "0xAA0C8C")]
	private void DeployChute()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xAA1250", Offset = "0xAA1250", VA = "0xAA1250")]
	private void DecoupleStage(RocketStage _stage)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xAA1130", Offset = "0xAA1130", VA = "0xAA1130")]
	private void Landed()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xA9EFD8", Offset = "0xA9EFD8", VA = "0xA9EFD8")]
	private void LandingIndicatorsOff()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xAA0008", Offset = "0xAA0008", VA = "0xAA0008")]
	private void LandedFail()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xAA1460", Offset = "0xAA1460", VA = "0xAA1460")]
	private void OkLandingIndicator()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xAA0928", Offset = "0xAA0928", VA = "0xAA0928")]
	private void Parachuting()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xA9FAE4", Offset = "0xA9FAE4", VA = "0xA9FAE4")]
	private void RocketFlight(bool _which)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xAA0248", Offset = "0xAA0248", VA = "0xAA0248")]
	private void NoneBreakApart()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xAA0650", Offset = "0xAA0650", VA = "0xAA0650")]
	private void OrientToVelocityVector()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xAA14EC", Offset = "0xAA14EC", VA = "0xAA14EC")]
	private void CheckCollisionForceBreak(Collision collision)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xAA10C8", Offset = "0xAA10C8", VA = "0xAA10C8")]
	private void MakePodSink()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xA9F3B0", Offset = "0xA9F3B0", VA = "0xA9F3B0")]
	private void HitWater()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xAA1858", Offset = "0xAA1858", VA = "0xAA1858")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xAA1920", Offset = "0xAA1920", VA = "0xAA1920")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xAA1C54", Offset = "0xAA1C54", VA = "0xAA1C54")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xAA1E4C", Offset = "0xAA1E4C", VA = "0xAA1E4C")]
	public Rocket()
	{
	}
}
[Token(Token = "0x2000332")]
public class RocketLatch : MonoBehaviour
{
	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionRocket rocket;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint joint;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DOTweenAnimation tween;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float latchShrink;

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xAA21FC", Offset = "0xAA21FC", VA = "0xAA21FC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xAA22D0", Offset = "0xAA22D0", VA = "0xAA22D0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xAA23A4", Offset = "0xAA23A4", VA = "0xAA23A4")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xAA2588", Offset = "0xAA2588", VA = "0xAA2588")]
	private void ObjectLoaded(Rigidbody _rb)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xAA2654", Offset = "0xAA2654", VA = "0xAA2654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xAA278C", Offset = "0xAA278C", VA = "0xAA278C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xAA27B0", Offset = "0xAA27B0", VA = "0xAA27B0")]
	private void CheckConnectedBody()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xAA28D0", Offset = "0xAA28D0", VA = "0xAA28D0")]
	private void DestroyLatch()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xAA28F8", Offset = "0xAA28F8", VA = "0xAA28F8")]
	private void Drop()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xAA246C", Offset = "0xAA246C", VA = "0xAA246C")]
	public void RemoveLatch()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xAA29B4", Offset = "0xAA29B4", VA = "0xAA29B4")]
	public void TweenDone()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xAA2A38", Offset = "0xAA2A38", VA = "0xAA2A38")]
	public RocketLatch()
	{
	}
}
[Token(Token = "0x2000333")]
public class RocketPanel : MonoBehaviour
{
	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EightSegmentDisplay leftSide;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EightSegmentDisplay rightSide;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] targetsDone;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] runsSprites;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rocketsPanel;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject targetsPanel;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform fireworksSpawn;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RocketPanel _instance;

	[Token(Token = "0x1700013B")]
	public static RocketPanel Instance
	{
		[Token(Token = "0x6001447")]
		[Address(RVA = "0xA9CEB4", Offset = "0xA9CEB4", VA = "0xA9CEB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xAA2A48", Offset = "0xAA2A48", VA = "0xAA2A48")]
	public void LevelCompleteFX()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xAA2AC4", Offset = "0xAA2AC4", VA = "0xAA2AC4")]
	public void SetRockets(int _spawned, int _max)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xAA2B2C", Offset = "0xAA2B2C", VA = "0xAA2B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xAA2B54", Offset = "0xAA2B54", VA = "0xAA2B54")]
	public void SetTargets(int _needed, int _done)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xAA2C6C", Offset = "0xAA2C6C", VA = "0xAA2C6C")]
	public RocketPanel()
	{
	}
}
[Token(Token = "0x2000334")]
public class RocketSpawner : MonoBehaviour
{
	[Token(Token = "0x2000335")]
	public delegate void OnRocketSpawnedDelegate(Rocket rocket);

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] myPrefab;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float wait;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float waitCounter;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool makeKinematicAfterSpawn;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaxElements;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int spawnedElements;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool lastRocketRemoved;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Collider> colliders;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> spawnedRockets;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialised;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cleanUpTime;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spawnPosition;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool rumblePlayed;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool blocked;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RocketSpawner _instance;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider spawnCollider;

	[Token(Token = "0x1700013C")]
	public static RocketSpawner Instance
	{
		[Token(Token = "0x600144F")]
		[Address(RVA = "0xAA2DE4", Offset = "0xAA2DE4", VA = "0xAA2DE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400004D")]
	public static event OnRocketSpawnedDelegate OnRocketSpawned
	{
		[Token(Token = "0x600144D")]
		[Address(RVA = "0xAA2C74", Offset = "0xAA2C74", VA = "0xAA2C74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600144E")]
		[Address(RVA = "0xAA2D2C", Offset = "0xAA2D2C", VA = "0xAA2D2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xAA2F60", Offset = "0xAA2F60", VA = "0xAA2F60")]
	[ContextMenu("InitRocketPad")]
	public void Init()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0xAA30D4", Offset = "0xAA30D4", VA = "0xAA30D4")]
	private void ResetTrigger()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xAA317C", Offset = "0xAA317C", VA = "0xAA317C")]
	public int ActiveSpawnedRockets()
	{
		return default(int);
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xAA32D8", Offset = "0xAA32D8", VA = "0xAA32D8")]
	[ContextMenu("ResetSpanwed")]
	public void ResetSpanwed()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xAA32E4", Offset = "0xAA32E4", VA = "0xAA32E4")]
	public void SetSpawnRockets(GameObject[] _rocketPrefabs)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xAA32F4", Offset = "0xAA32F4", VA = "0xAA32F4")]
	public void SetMaxRockets(int _max)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xAA32FC", Offset = "0xAA32FC", VA = "0xAA32FC")]
	[ContextMenu("UnBlock")]
	public void Block(bool which)
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xAA3308", Offset = "0xAA3308", VA = "0xAA3308")]
	private void Update()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xAA3B68", Offset = "0xAA3B68", VA = "0xAA3B68", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xAA3BE8", Offset = "0xAA3BE8", VA = "0xAA3BE8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xAA3C68", Offset = "0xAA3C68", VA = "0xAA3C68")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xAA3DC8", Offset = "0xAA3DC8", VA = "0xAA3DC8")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xAA3F40", Offset = "0xAA3F40", VA = "0xAA3F40")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xAA3FD0", Offset = "0xAA3FD0", VA = "0xAA3FD0")]
	public RocketSpawner()
	{
	}
}
[Token(Token = "0x2000336")]
public class RocketStage : MonoBehaviour
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particleFX;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject floatMesh;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool waterHit;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public FloatingObject.FLOATTYPE floatType;

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xAA41C8", Offset = "0xAA41C8", VA = "0xAA41C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xAA4238", Offset = "0xAA4238", VA = "0xAA4238")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xAA4300", Offset = "0xAA4300", VA = "0xAA4300")]
	private void HitWater()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xAA4394", Offset = "0xAA4394", VA = "0xAA4394")]
	public RocketStage()
	{
	}
}
[Token(Token = "0x2000337")]
public class RocketTarget : Entity
{
	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<RocketTracker> collisions;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int resultScore;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int groupID;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IDTriggereableOnce;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<RocketTracker> triggerRockets;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isBonusTarget;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[HideInInspector]
	public bool removeBonusOnComplete;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool triggerOnly;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool useIDLock;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool groupHideIfDone;

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xAA439C", Offset = "0xAA439C", VA = "0xAA439C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xAA45AC", Offset = "0xAA45AC", VA = "0xAA45AC")]
	public void HideTarget(int _groupID)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xAA45EC", Offset = "0xAA45EC", VA = "0xAA45EC")]
	public void ClearRocketTracker(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xAA4684", Offset = "0xAA4684", VA = "0xAA4684", Slot = "5")]
	public virtual void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xAA4820", Offset = "0xAA4820", VA = "0xAA4820", Slot = "6")]
	public virtual void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xAA4964", Offset = "0xAA4964", VA = "0xAA4964", Slot = "7")]
	public virtual void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xAA4AEC", Offset = "0xAA4AEC", VA = "0xAA4AEC", Slot = "8")]
	public virtual void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xAA4C1C", Offset = "0xAA4C1C", VA = "0xAA4C1C")]
	public RocketTarget()
	{
	}
}
[Token(Token = "0x2000338")]
public class RocketTargetCatch : RocketTarget
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isGrabbed;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRControllerMapper controller;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool needsClearing;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<RocketTracker> trackedRockets;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject currentGrabbed;

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xAA4CAC", Offset = "0xAA4CAC", VA = "0xAA4CAC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xAA4DD8", Offset = "0xAA4DD8", VA = "0xAA4DD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xAA4EAC", Offset = "0xAA4EAC", VA = "0xAA4EAC")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xAA56F8", Offset = "0xAA56F8", VA = "0xAA56F8")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xAA5A00", Offset = "0xAA5A00", VA = "0xAA5A00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xAA5B28", Offset = "0xAA5B28", VA = "0xAA5B28")]
	public RocketTargetCatch()
	{
	}
}
[Token(Token = "0x2000339")]
public class RocketTargetDartSingle : MonoBehaviour
{
	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wasTriggered;

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xAA5B2C", Offset = "0xAA5B2C", VA = "0xAA5B2C")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xAA6018", Offset = "0xAA6018", VA = "0xAA6018")]
	public RocketTargetDartSingle()
	{
	}
}
[Token(Token = "0x200033A")]
public class RocketTargetFlyThrough : RocketTarget
{
	[Token(Token = "0x6001476")]
	[Address(RVA = "0xAA6020", Offset = "0xAA6020", VA = "0xAA6020", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xAA6024", Offset = "0xAA6024", VA = "0xAA6024")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xAA6028", Offset = "0xAA6028", VA = "0xAA6028")]
	private void CheckCondition()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xAA6360", Offset = "0xAA6360", VA = "0xAA6360")]
	public RocketTargetFlyThrough()
	{
	}
}
[Token(Token = "0x200033B")]
public class RocketTargetLand : RocketTarget
{
	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject visual;

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xAA6364", Offset = "0xAA6364", VA = "0xAA6364", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xAA6368", Offset = "0xAA6368", VA = "0xAA6368")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0xAA636C", Offset = "0xAA636C", VA = "0xAA636C")]
	private void CheckCondition()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0xAA65AC", Offset = "0xAA65AC", VA = "0xAA65AC")]
	public RocketTargetLand()
	{
	}
}
[Token(Token = "0x200033C")]
public class RocketTargetManager : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	public delegate void OnLevelCompleteDelegate();

	[Token(Token = "0x200033E")]
	public delegate void OnTargetCompleteDelegate(int done, int needed);

	[Token(Token = "0x200033F")]
	public delegate void OnOutOfRocketsDelegate();

	[Token(Token = "0x2000340")]
	public delegate void OnUnSolvableDelegate();

	[Token(Token = "0x2000341")]
	public delegate void OnRocketOutOfGameDelegate(Rocket rocket);

	[Token(Token = "0x4001438")]
	public const int maxIDs = 10;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxRocketPerLevel;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int successfullRunsNeeded;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int rocketsUsed;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int targetScore;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string missionBriefing;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] spawnRocketTypes;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool outOfRockets;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public int succesfullRuns;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public RocketTracker currentRocketTry;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<RocketTracker> rockets;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<RocketTracker> outOfGameRockets;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<RocketTarget> targetsRequiredPerLevel;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<RocketTarget> bonusTargets;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<RocketTarget> bonusTargetsComplete;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<List<RocketTracker>> idsCompletedList;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int[] idsRequired;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool[] IDsDone;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool gameDone;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject successFX;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool countTargetGroupsAsOne;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool unSolvable;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool showTargetsPanel;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static RocketTargetManager _instance;

	[Token(Token = "0x1700013D")]
	public static RocketTargetManager Instance
	{
		[Token(Token = "0x6001488")]
		[Address(RVA = "0xAA395C", Offset = "0xAA395C", VA = "0xAA395C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400004E")]
	public static event OnLevelCompleteDelegate OnLevelComplete
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0xAA65B0", Offset = "0xAA65B0", VA = "0xAA65B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600147F")]
		[Address(RVA = "0xAA6668", Offset = "0xAA6668", VA = "0xAA6668")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004F")]
	public static event OnTargetCompleteDelegate OnTargetComplete
	{
		[Token(Token = "0x6001480")]
		[Address(RVA = "0xAA6720", Offset = "0xAA6720", VA = "0xAA6720")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001481")]
		[Address(RVA = "0xAA67DC", Offset = "0xAA67DC", VA = "0xAA67DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000050")]
	public static event OnOutOfRocketsDelegate OnOutOfRockets
	{
		[Token(Token = "0x6001482")]
		[Address(RVA = "0xAA6898", Offset = "0xAA6898", VA = "0xAA6898")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001483")]
		[Address(RVA = "0xAA6954", Offset = "0xAA6954", VA = "0xAA6954")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000051")]
	public static event OnUnSolvableDelegate OnUnSolvable
	{
		[Token(Token = "0x6001484")]
		[Address(RVA = "0xAA6A10", Offset = "0xAA6A10", VA = "0xAA6A10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001485")]
		[Address(RVA = "0xAA6ACC", Offset = "0xAA6ACC", VA = "0xAA6ACC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000052")]
	public static event OnRocketOutOfGameDelegate OnRocketOutOfGame
	{
		[Token(Token = "0x6001486")]
		[Address(RVA = "0xAA6B88", Offset = "0xAA6B88", VA = "0xAA6B88")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001487")]
		[Address(RVA = "0xAA6C44", Offset = "0xAA6C44", VA = "0xAA6C44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xAA6D00", Offset = "0xAA6D00", VA = "0xAA6D00", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xAA70CC", Offset = "0xAA70CC", VA = "0xAA70CC")]
	public void ResetRocketsSpawned()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xAA7194", Offset = "0xAA7194", VA = "0xAA7194")]
	public void ReportRocketsOutOfGame(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xAA7334", Offset = "0xAA7334", VA = "0xAA7334")]
	private void CheckConditions()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xAA73E8", Offset = "0xAA73E8", VA = "0xAA73E8")]
	public void RegisterRockets(RocketTracker _rocket)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xAA58A4", Offset = "0xAA58A4", VA = "0xAA58A4")]
	public void ClearTrackerFromTargets(RocketTracker _rocketTracker)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xAA4468", Offset = "0xAA4468", VA = "0xAA4468")]
	public void RegisterTargets(RocketTarget _target)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xAA75B4", Offset = "0xAA75B4", VA = "0xAA75B4")]
	public void BonusTargetComplete(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xAA76B4", Offset = "0xAA76B4", VA = "0xAA76B4")]
	private void ClearTargetsForGroup(int _groupID)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xAA5D18", Offset = "0xAA5D18", VA = "0xAA5D18")]
	public void CheckLevelComplete(Vector3 _position, RocketTarget _rocketTarget, bool _forceTargetOK = false)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xAA7804", Offset = "0xAA7804", VA = "0xAA7804")]
	private void ShowResultSuccess(Vector3 _position)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xAA3AD8", Offset = "0xAA3AD8", VA = "0xAA3AD8")]
	public void UpdatePanel()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xAA798C", Offset = "0xAA798C", VA = "0xAA798C", Slot = "5")]
	public virtual void TellScore(int _score, GameObject _rocket, DartTarget _currenttarget, int _targetScore)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xAA7990", Offset = "0xAA7990", VA = "0xAA7990", Slot = "6")]
	public virtual void TargetDone(GameObject _rocket)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xAA7994", Offset = "0xAA7994", VA = "0xAA7994")]
	public RocketTargetManager()
	{
	}
}
[Token(Token = "0x2000342")]
public class RocketTracker : Entity
{
	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int perTryTargetsDone;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int perLevelTargetsDone;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int runScore;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isGrabbed;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isRegistered;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rocket myRocket;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool conditionsMet;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<RocketTarget> myTargets;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int[] conditionIDSMet;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int idLock;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool outOfGame;

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0xAA809C", Offset = "0xAA809C", VA = "0xAA809C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0xAA82CC", Offset = "0xAA82CC", VA = "0xAA82CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0xAA83A0", Offset = "0xAA83A0", VA = "0xAA83A0")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0xAA8444", Offset = "0xAA8444", VA = "0xAA8444")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xAA8230", Offset = "0xAA8230", VA = "0xAA8230")]
	public void RegisterRocket()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xAA7538", Offset = "0xAA7538", VA = "0xAA7538")]
	public void ClearMyTargets()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xAA84CC", Offset = "0xAA84CC", VA = "0xAA84CC")]
	private void BonusComplete(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xAA5238", Offset = "0xAA5238", VA = "0xAA5238")]
	public void ConditionSuccess(RocketTarget _rocketTarget)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xAA85F4", Offset = "0xAA85F4", VA = "0xAA85F4")]
	public void ConditionFeedbackFX()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xAA8520", Offset = "0xAA8520", VA = "0xAA8520")]
	public void BonusFeedbackFX()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xAA8730", Offset = "0xAA8730", VA = "0xAA8730")]
	public RocketTracker()
	{
	}
}
[Token(Token = "0x2000343")]
public class TargetDisplay : MonoBehaviour
{
	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] targetsDone;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] runsSprites;

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xAA8740", Offset = "0xAA8740", VA = "0xAA8740")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xAA874C", Offset = "0xAA874C", VA = "0xAA874C")]
	public void SetTargets(int _needed, int _done)
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xAA8864", Offset = "0xAA8864", VA = "0xAA8864")]
	public TargetDisplay()
	{
	}
}
[Token(Token = "0x2000344")]
public class WindSack : MonoBehaviour
{
	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forcePoint;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float factor;

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xAA886C", Offset = "0xAA886C", VA = "0xAA886C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xAA88E4", Offset = "0xAA88E4", VA = "0xAA88E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xAA8A20", Offset = "0xAA8A20", VA = "0xAA8A20")]
	public WindSack()
	{
	}
}
[Token(Token = "0x2000345")]
public class WindZone : MonoBehaviour
{
	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 windSpeed;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 WindSpeedStatic;

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xAA8A30", Offset = "0xAA8A30", VA = "0xAA8A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xAA8AC8", Offset = "0xAA8AC8", VA = "0xAA8AC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xAA8C8C", Offset = "0xAA8C8C", VA = "0xAA8C8C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xAA8FC4", Offset = "0xAA8FC4", VA = "0xAA8FC4")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xAA919C", Offset = "0xAA919C", VA = "0xAA919C")]
	public WindZone()
	{
	}
}
[Token(Token = "0x2000346")]
public enum SlingState
{
	[Token(Token = "0x400146B")]
	Rest,
	[Token(Token = "0x400146C")]
	Loading,
	[Token(Token = "0x400146D")]
	Shoot,
	[Token(Token = "0x400146E")]
	Cooldown
}
[Token(Token = "0x2000347")]
public class RubberBand : MonoBehaviour
{
	[Token(Token = "0x2000348")]
	public delegate void SlingFiredDelegate(GlueConnections _glueConnection, RubberBand rubberBand);

	[Token(Token = "0x2000349")]
	public delegate void SlingLoadedDelegate(GlueConnections _glueConnection, RubberBand rubberBand);

	[Token(Token = "0x200034A")]
	[CompilerGenerated]
	private sealed class <TestDelayedFire>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RubberBand <>4__this;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fire;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xAAC29C", Offset = "0xAAC29C", VA = "0xAAC29C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xAAC2E4", Offset = "0xAAC2E4", VA = "0xAAC2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xAAAF64", Offset = "0xAAAF64", VA = "0xAAAF64")]
		[DebuggerHidden]
		public <TestDelayedFire>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xAABC6C", Offset = "0xAABC6C", VA = "0xAABC6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xAABC70", Offset = "0xAABC70", VA = "0xAABC70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xAAC2A4", Offset = "0xAAC2A4", VA = "0xAAC2A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform end;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 middle;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer line;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer backLine;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConfigurableJoint spring;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConfigurableJoint springSub;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform Projectile;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LineRenderer path;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SlingState state;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody projectileRB;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float dist;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Collider box;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float span;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float distancePowerFactor;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool legacySlignShot;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PowerSlingController slingController;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material powerSlingMaterial;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material powerSlingAttachedMaterial;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer powerSlingCenter;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float coolDownTime;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float counterForceFactor;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ForceMode counterForceMode;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float distForceFactor;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float nonFireDistance;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<Vector3> fireDirection;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 middledDirection;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float spanStrechFactor;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float triggerSize;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[EventRef]
	public string customSlingSFX;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool useUpdate;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float shotTentacleCollisionCooldown;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool rescanCollidersOnShoot;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ConfigurableJoint cJoint;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 attachPos;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 pullCounterforce;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool canFire;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 shootVelocity;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<GlueConnections, Grabbable> glueGrabDict;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Grabbable _grabbale;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool anyInChainGrabbed;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GlueConnections checkConnection;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float stretchSFXFactor;

	[Token(Token = "0x400149D")]
	private const string stretchtForceParameter = "Stretch";

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private EventInstance stretchSFXInstance;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string stretchSFX;

	[Token(Token = "0x40014A0")]
	private const string shotForceParameter = "VelocityFactor";

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string shotSFX;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Grabbable grabbableProjectile;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool wasMother;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GlueConnections glueConnection;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool isShootable;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float minMassTensorCheat;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int numSteps;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float widthFactor;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float timeDelta;

	[Token(Token = "0x14000053")]
	public static event SlingFiredDelegate OnSlingFired
	{
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xAA9224", Offset = "0xAA9224", VA = "0xAA9224")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xAA92DC", Offset = "0xAA92DC", VA = "0xAA92DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000054")]
	public static event SlingFiredDelegate OnSlingLoaded
	{
		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xAA9394", Offset = "0xAA9394", VA = "0xAA9394")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xAA9450", Offset = "0xAA9450", VA = "0xAA9450")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xAA950C", Offset = "0xAA950C", VA = "0xAA950C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xAA9654", Offset = "0xAA9654", VA = "0xAA9654")]
	private ConfigurableJoint CreateSlingSpring(Rigidbody _rb)
	{
		return null;
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xAA9804", Offset = "0xAA9804", VA = "0xAA9804")]
	public void DetachSling()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xAA9C30", Offset = "0xAA9C30", VA = "0xAA9C30")]
	private float MassToForceFactor(float dist)
	{
		return default(float);
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xAA9C98", Offset = "0xAA9C98", VA = "0xAA9C98")]
	private void Update()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xAAA6F8", Offset = "0xAAA6F8", VA = "0xAAA6F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0xAA9CA8", Offset = "0xAA9CA8", VA = "0xAA9CA8")]
	private void UpdateSlingshot()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0xAA9960", Offset = "0xAA9960", VA = "0xAA9960")]
	private void StretchSFX(float _dist)
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xAAA97C", Offset = "0xAAA97C", VA = "0xAAA97C")]
	private bool CheckAniInChainGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xAAAD08", Offset = "0xAAAD08", VA = "0xAAAD08")]
	private void Fire()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xAAAEDC", Offset = "0xAAAEDC", VA = "0xAAAEDC")]
	[IteratorStateMachine(typeof(<TestDelayedFire>d__67))]
	private IEnumerator TestDelayedFire(bool fire)
	{
		return null;
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xAAAF8C", Offset = "0xAAAF8C", VA = "0xAAAF8C")]
	private void MakeActive()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xAAAF98", Offset = "0xAAAF98", VA = "0xAAAF98")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xAAA708", Offset = "0xAAA708", VA = "0xAAA708")]
	private void UpdateTrajectory(Vector3 initialPosition, Vector3 initialVelocity)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xAAB814", Offset = "0xAAB814", VA = "0xAAB814")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xAAB82C", Offset = "0xAAB82C", VA = "0xAAB82C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xAAB854", Offset = "0xAAB854", VA = "0xAAB854")]
	public RubberBand()
	{
	}
}
[Token(Token = "0x200034B")]
public class RustyRandomizer : MonoBehaviour
{
	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xAAC2EC", Offset = "0xAAC2EC", VA = "0xAAC2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xAAC348", Offset = "0xAAC348", VA = "0xAAC348")]
	private void ChangeMaterial()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xAAC430", Offset = "0xAAC430", VA = "0xAAC430")]
	public RustyRandomizer()
	{
	}
}
[Token(Token = "0x200034C")]
public class SandboxDemoLoad : MonoBehaviour
{
	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string loadableJSon;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int JSONIndex;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> listOfSaveEntities;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xAAC438", Offset = "0xAAC438", VA = "0xAAC438")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xAAC4B8", Offset = "0xAAC4B8", VA = "0xAAC4B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xAAC538", Offset = "0xAAC538", VA = "0xAAC538")]
	private void Start()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0xAAC5BC", Offset = "0xAAC5BC", VA = "0xAAC5BC")]
	private void LoadSO()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xAAC610", Offset = "0xAAC610", VA = "0xAAC610")]
	private void PreReset(bool _clear)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xAAC678", Offset = "0xAAC678", VA = "0xAAC678")]
	public void LoadNext()
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xAAC758", Offset = "0xAAC758", VA = "0xAAC758")]
	public SandboxDemoLoad()
	{
	}
}
[Token(Token = "0x200034D")]
public class SandboxInit_base : MonoBehaviour
{
	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xAAC760", Offset = "0xAAC760", VA = "0xAAC760", Slot = "4")]
	public virtual void SandboxInit()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xAAC764", Offset = "0xAAC764", VA = "0xAAC764")]
	public SandboxInit_base()
	{
	}
}
[Token(Token = "0x200034E")]
public class SandBoxLimitSet : MonoBehaviour
{
	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xAAC76C", Offset = "0xAAC76C", VA = "0xAAC76C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xAAC81C", Offset = "0xAAC81C", VA = "0xAAC81C")]
	public SandBoxLimitSet()
	{
	}
}
[Token(Token = "0x200034F")]
public class SandboxSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000350")]
	public class SandboxSettings
	{
		[Token(Token = "0x2000351")]
		public enum Mode
		{
			[Token(Token = "0x40014BD")]
			story,
			[Token(Token = "0x40014BE")]
			level
		}

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode unlockMode;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Level unlockOnLevelDone;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Story unlockOnStoryDone;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level sandbox;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isAvailable;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xAACDF0", Offset = "0xAACDF0", VA = "0xAACDF0")]
		public SandboxSettings()
		{
		}
	}

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMeshProDestination;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject navigationButtons;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<SandboxSettings> sandboxes;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SandboxSettings> availableSandboxesList;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int idx;

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xAAC82C", Offset = "0xAAC82C", VA = "0xAAC82C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xAAC830", Offset = "0xAAC830", VA = "0xAAC830")]
	private void CheckForMenu()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xAAC8E4", Offset = "0xAAC8E4", VA = "0xAAC8E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xAAC990", Offset = "0xAAC990", VA = "0xAAC990")]
	private void AvailableSandboxes()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xAACC48", Offset = "0xAACC48", VA = "0xAACC48")]
	private void SetDestination()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xAACCDC", Offset = "0xAACCDC", VA = "0xAACCDC")]
	public void LeverPressed()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xAACD58", Offset = "0xAACD58", VA = "0xAACD58")]
	public void NextPlayground(bool forward)
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xAACDE8", Offset = "0xAACDE8", VA = "0xAACDE8")]
	public SandboxSelector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000352")]
public class ObjectSaveData
{
	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string debugName;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int RigidbodyID;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int entityDefinitionID;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doNotCountTowardsLimit;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 entityPosition;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 entityRotation;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 entityScale;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGlue;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JointData[] jointData;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool hasConnectedJoint;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public JointData connectedJointConfig;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int connectedGlueJointRBID;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ObjectSaveData loadedConnectedJoint;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isSecondary;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool hasColor;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color color;

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xAACDF8", Offset = "0xAACDF8", VA = "0xAACDF8")]
	public ObjectSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000353")]
public class JointData
{
	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool autoConfigure;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 anchor;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 connectedAnchor;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 secondaryAxis;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int connectedRBID;

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xAACE00", Offset = "0xAACE00", VA = "0xAACE00")]
	public JointData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000354")]
public class ConstructionData
{
	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ObjectSaveData[] constructionData;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string version;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int entitiesUsed;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxEntities;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string device;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string levelName;

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xAACE08", Offset = "0xAACE08", VA = "0xAACE08")]
	public ConstructionData()
	{
	}
}
[Token(Token = "0x2000355")]
public class SaveID : MonoBehaviour
{
	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int saveID;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isStaticSaveID;

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0xAACE10", Offset = "0xAACE10", VA = "0xAACE10")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xAACE80", Offset = "0xAACE80", VA = "0xAACE80")]
	private void CheckManualSaveID()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xAACF90", Offset = "0xAACF90", VA = "0xAACF90")]
	public SaveID()
	{
	}
}
[Token(Token = "0x2000356")]
public class SaveBelow : MonoBehaviour
{
	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideAfterSave;

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xAACF98", Offset = "0xAACF98", VA = "0xAACF98")]
	[ContextMenu("SaveBelow")]
	private void Save()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xAAD1AC", Offset = "0xAAD1AC", VA = "0xAAD1AC")]
	public SaveBelow()
	{
	}
}
[Token(Token = "0x2000357")]
public class SaveSlotManager : MonoBehaviour
{
	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro[] percentages;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] activeLamp;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int activeSaveSlot;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int debugSaveSlot;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhysicalSlider slider;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maxSlots;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelDirector_ClearProgress levelDir;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rangeTresh;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool canSwitchReset;

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xAAD1BC", Offset = "0xAAD1BC", VA = "0xAAD1BC")]
	[ContextMenu("SaveDebugSlot")]
	public void SaveDebugSlot()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xAAD508", Offset = "0xAAD508", VA = "0xAAD508")]
	[ContextMenu("SetSliderToDebug")]
	public void SetSliderToDebug()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xAAD5D4", Offset = "0xAAD5D4", VA = "0xAAD5D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xAAD394", Offset = "0xAAD394", VA = "0xAAD394")]
	private void SetStatus()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xAAD604", Offset = "0xAAD604", VA = "0xAAD604")]
	public void SwitchPressed()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xAAD6F8", Offset = "0xAAD6F8", VA = "0xAAD6F8")]
	public static void SwitchToSaveAndReload(int saveSlot)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xAAD794", Offset = "0xAAD794", VA = "0xAAD794")]
	public bool ResetAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xAAD79C", Offset = "0xAAD79C", VA = "0xAAD79C")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xAAD9E8", Offset = "0xAAD9E8", VA = "0xAAD9E8")]
	public bool ReloadRequired()
	{
		return default(bool);
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0xAADA18", Offset = "0xAADA18", VA = "0xAADA18")]
	public void ResetSelectedSlot()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xAAD244", Offset = "0xAAD244", VA = "0xAAD244")]
	public static void SavePercentage()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xAADB18", Offset = "0xAADB18", VA = "0xAADB18")]
	public SaveSlotManager()
	{
	}
}
[Token(Token = "0x2000358")]
public class SaveSlotPlate : MonoBehaviour
{
	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] numberMesh;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter meshFilter;

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xAADB3C", Offset = "0xAADB3C", VA = "0xAADB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xAADBC8", Offset = "0xAADBC8", VA = "0xAADBC8")]
	public SaveSlotPlate()
	{
	}
}
[Token(Token = "0x2000359")]
public class SceneLighting : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[CompilerGenerated]
	private sealed class <LateLight>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLighting <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xAAE398", Offset = "0xAAE398", VA = "0xAAE398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xAAE3E0", Offset = "0xAAE3E0", VA = "0xAAE3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xAAE0A4", Offset = "0xAAE0A4", VA = "0xAAE0A4")]
		[DebuggerHidden]
		public <LateLight>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xAAE240", Offset = "0xAAE240", VA = "0xAAE240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xAAE244", Offset = "0xAAE244", VA = "0xAAE244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xAAE3A0", Offset = "0xAAE3A0", VA = "0xAAE3A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("LOCK FOR DEFAULT PREFABS")]
	public bool lockApplyPrefab;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Skybox;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color AmbientColor;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool FogEnabled;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public FogMode SceneFogMode;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color FogColor;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Density;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private LightmapBakeType bakeType;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shadowDistanceOverride;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Light directionalLight;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool overrideDirectionalLight;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color directionalLightColor;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float directionalLightIntensity;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool lateOverrideLighting;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneLighting _instance;

	[Token(Token = "0x17000140")]
	public static SceneLighting Instance
	{
		[Token(Token = "0x6001512")]
		[Address(RVA = "0xAADBD0", Offset = "0xAADBD0", VA = "0xAADBD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xAADD5C", Offset = "0xAADD5C", VA = "0xAADD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xAAE030", Offset = "0xAAE030", VA = "0xAAE030")]
	[IteratorStateMachine(typeof(<LateLight>d__18))]
	private IEnumerator LateLight()
	{
		return null;
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xAAE0CC", Offset = "0xAAE0CC", VA = "0xAAE0CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xAADD8C", Offset = "0xAADD8C", VA = "0xAADD8C")]
	[ContextMenu("LoadLightingSettings")]
	public void LoadLightingSettings()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xAAE12C", Offset = "0xAAE12C", VA = "0xAAE12C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xAAE130", Offset = "0xAAE130", VA = "0xAAE130")]
	public void SaveLightingSettings()
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xAAE21C", Offset = "0xAAE21C", VA = "0xAAE21C")]
	public SceneLighting()
	{
	}
}
[Token(Token = "0x200035B")]
public class SeafoodGrinder : MonoBehaviour
{
	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float realSpeed;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotAxis;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speedInc;

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xAAE3E8", Offset = "0xAAE3E8", VA = "0xAAE3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xAAE43C", Offset = "0xAAE43C", VA = "0xAAE43C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xAAE544", Offset = "0xAAE544", VA = "0xAAE544")]
	public SeafoodGrinder()
	{
	}
}
[Token(Token = "0x200035C")]
public class SeagullsSFX : MonoBehaviour
{
	[Token(Token = "0x6001523")]
	[Address(RVA = "0xAAE55C", Offset = "0xAAE55C", VA = "0xAAE55C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xAAE64C", Offset = "0xAAE64C", VA = "0xAAE64C")]
	public SeagullsSFX()
	{
	}
}
[Token(Token = "0x200035D")]
public class SetBreakforceOnGrab : MonoBehaviour
{
	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Joint myJoint;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float breakforceToSet;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xAAE654", Offset = "0xAAE654", VA = "0xAAE654")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xAAE758", Offset = "0xAAE758", VA = "0xAAE758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xAAE7D8", Offset = "0xAAE7D8", VA = "0xAAE7D8")]
	private void Grab(Grabbable grabbedObject, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xAAEA20", Offset = "0xAAEA20", VA = "0xAAEA20")]
	public SetBreakforceOnGrab()
	{
	}
}
[Token(Token = "0x200035E")]
public class SetCenterOfMassToTransform : MonoBehaviour
{
	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody targetRB;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform COMTransform;

	[Token(Token = "0x6001529")]
	[Address(RVA = "0xAAEA28", Offset = "0xAAEA28", VA = "0xAAEA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xAAEA88", Offset = "0xAAEA88", VA = "0xAAEA88")]
	public SetCenterOfMassToTransform()
	{
	}
}
[Token(Token = "0x200035F")]
public class SetComplete : MonoBehaviour
{
	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("check level bool for Start completion - or use ManualCall")]
	public bool level;

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xAAEA90", Offset = "0xAAEA90", VA = "0xAAEA90")]
	private void Start()
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xAAEAC4", Offset = "0xAAEAC4", VA = "0xAAEAC4")]
	public void ManualCall()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xAAEAE8", Offset = "0xAAEAE8", VA = "0xAAEAE8")]
	public SetComplete()
	{
	}
}
[Token(Token = "0x2000360")]
[ExecuteInEditMode]
public class SetSeaWaves : MonoBehaviour
{
	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaterInterface.WATER waves;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private WaterInterface.WATER lastWaves;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool customWaterHeight;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waterOffset;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defaultWaterHeight;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastWaterOffset;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideDefaultWavesParameter;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int wavesParameter;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool overrideDefaultWindParameter;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int windParameter;

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xAAEAF0", Offset = "0xAAEAF0", VA = "0xAAEAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xAAEB14", Offset = "0xAAEB14", VA = "0xAAEB14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xAAEAF4", Offset = "0xAAEAF4", VA = "0xAAEAF4")]
	private void SetOcean()
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xAAEBC8", Offset = "0xAAEBC8", VA = "0xAAEBC8")]
	private void SetOceanSFX()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xAAEB18", Offset = "0xAAEB18", VA = "0xAAEB18")]
	private void SetWaves()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xAAEB4C", Offset = "0xAAEB4C", VA = "0xAAEB4C")]
	public void SetHeight()
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xAAEC80", Offset = "0xAAEC80", VA = "0xAAEC80")]
	public SetSeaWaves()
	{
	}
}
[Token(Token = "0x2000361")]
public class SetupDemoTentacle : MonoBehaviour
{
	[Token(Token = "0x2000362")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetupDemoTentacle <>4__this;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xAAF028", Offset = "0xAAF028", VA = "0xAAF028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xAAF070", Offset = "0xAAF070", VA = "0xAAF070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xAAED10", Offset = "0xAAED10", VA = "0xAAED10")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xAAEF08", Offset = "0xAAEF08", VA = "0xAAEF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xAAEF0C", Offset = "0xAAEF0C", VA = "0xAAEF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xAAF030", Offset = "0xAAF030", VA = "0xAAF030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tentacle;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glove;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Joint concreteBlock;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody concreteBlockRB;

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xAAEC9C", Offset = "0xAAEC9C", VA = "0xAAEC9C")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xAAED38", Offset = "0xAAED38", VA = "0xAAED38")]
	private void ShowDemoTentacle()
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xAAED84", Offset = "0xAAED84", VA = "0xAAED84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xAAEF00", Offset = "0xAAEF00", VA = "0xAAEF00")]
	public SetupDemoTentacle()
	{
	}
}
[Token(Token = "0x2000363")]
public class ShakeObject : MonoBehaviour
{
	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <ShakeEnumerator>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShakeObject <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0xAAF488", Offset = "0xAAF488", VA = "0xAAF488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0xAAF4D0", Offset = "0xAAF4D0", VA = "0xAAF4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xAAF244", Offset = "0xAAF244", VA = "0xAAF244")]
		[DebuggerHidden]
		public <ShakeEnumerator>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xAAF2A4", Offset = "0xAAF2A4", VA = "0xAAF2A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xAAF2A8", Offset = "0xAAF2A8", VA = "0xAAF2A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xAAF490", Offset = "0xAAF490", VA = "0xAAF490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isActive;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 shakeOffset;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useStartPosition;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform shakeTarget;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float strength;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float duration;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator shakeEnumerator;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool GlobalShakeDeactivated;

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xAAF078", Offset = "0xAAF078", VA = "0xAAF078")]
	private void Start()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xAAF088", Offset = "0xAAF088", VA = "0xAAF088")]
	[ContextMenu("StartShake")]
	public void StartShake()
	{
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xAAF1D0", Offset = "0xAAF1D0", VA = "0xAAF1D0")]
	[IteratorStateMachine(typeof(<ShakeEnumerator>d__12))]
	private IEnumerator ShakeEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0xAAF26C", Offset = "0xAAF26C", VA = "0xAAF26C")]
	private float GetRND(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xAAF274", Offset = "0xAAF274", VA = "0xAAF274")]
	public ShakeObject()
	{
	}
}
[Token(Token = "0x2000365")]
public class SharkBait : MonoBehaviour
{
	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vehicle myVehicle;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool attackHumans;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetSpeedFactor;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allowTriggerChange;

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xAAF4D8", Offset = "0xAAF4D8", VA = "0xAAF4D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xAAF558", Offset = "0xAAF558", VA = "0xAAF558")]
	private void WaterStatusChange(GameObject _gameObjectInWater, bool _which)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xAAF640", Offset = "0xAAF640", VA = "0xAAF640")]
	public SharkBait()
	{
	}
}
[Token(Token = "0x2000366")]
public class SharkController : MonoBehaviour
{
	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackerORB laserORB;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fake;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fakeBellyUp;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator sharkAnimator;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vehicle myVehicle;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rb;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatRigidbody floatRB;

	[Token(Token = "0x600154D")]
	[Address(RVA = "0xAAF650", Offset = "0xAAF650", VA = "0xAAF650")]
	[ContextMenu("Deactivate Shark")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0xAAF6AC", Offset = "0xAAF6AC", VA = "0xAAF6AC")]
	private void DoDeactivate()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0xAAF750", Offset = "0xAAF750", VA = "0xAAF750")]
	public SharkController()
	{
	}
}
[Token(Token = "0x2000367")]
public class SharkVehicleAnimation : MonoBehaviour
{
	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vehicle myVehicle;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator sharkAnimator;

	[Token(Token = "0x6001550")]
	[Address(RVA = "0xAAF758", Offset = "0xAAF758", VA = "0xAAF758")]
	private void Start()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0xAAF7B4", Offset = "0xAAF7B4", VA = "0xAAF7B4")]
	private void AnimCheck()
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0xAAF80C", Offset = "0xAAF80C", VA = "0xAAF80C")]
	public SharkVehicleAnimation()
	{
	}
}
[Token(Token = "0x2000368")]
public class ShoutTimer : CollisionBase
{
	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BubbleToCharacter> bubblesList;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<HumansInteraction> excludeList;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool belowThisTransformOnly;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool useTrigger;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool isInsert;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("key for loc")]
	public string shoutID;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string emoString;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float startWait;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minWait;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxWait;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float duration;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float startTime;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool isActive;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float perCharacterRevealDelay;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool changeBubbleScale;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 bubbleScale;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool clearConvosOnDeactivate;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool clearConvosOnActivate;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string emoSFX;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool doHop;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float hopForceMin;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float hopForceMax;

	[Token(Token = "0x6001553")]
	[Address(RVA = "0xAAF814", Offset = "0xAAF814", VA = "0xAAF814")]
	private void Start()
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0xAAF914", Offset = "0xAAF914", VA = "0xAAF914")]
	[ContextMenu("Activate")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0xAAFCC0", Offset = "0xAAFCC0", VA = "0xAAFCC0")]
	private void ClearConvos()
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0xAAFD4C", Offset = "0xAAFD4C", VA = "0xAAFD4C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0xAAFD84", Offset = "0xAAFD84", VA = "0xAAFD84", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0xAAF8A4", Offset = "0xAAF8A4", VA = "0xAAF8A4")]
	private void NewWait(float offset = -1f)
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0xAAF958", Offset = "0xAAF958", VA = "0xAAF958")]
	private void SearchForTargets()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0xAAFF6C", Offset = "0xAAFF6C", VA = "0xAAFF6C")]
	public void RemoveBubble(HumansInteraction hi)
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0xAB0000", Offset = "0xAB0000", VA = "0xAB0000")]
	private void PickHuman()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xAB026C", Offset = "0xAB026C", VA = "0xAB026C")]
	public ShoutTimer()
	{
	}
}
[Token(Token = "0x2000369")]
public class ShowIfNewStuffPlayground : MonoBehaviour
{
	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToShow;

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xAB037C", Offset = "0xAB037C", VA = "0xAB037C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xAB0484", Offset = "0xAB0484", VA = "0xAB0484")]
	private void Start()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xAB0380", Offset = "0xAB0380", VA = "0xAB0380")]
	private void DoUnlocks()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xAB0488", Offset = "0xAB0488", VA = "0xAB0488")]
	public ShowIfNewStuffPlayground()
	{
	}
}
[Token(Token = "0x200036A")]
public class SizeAdjustMovement : MonoBehaviour
{
	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicalSlider Slider;

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xAB0490", Offset = "0xAB0490", VA = "0xAB0490")]
	private void Start()
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0xAB0494", Offset = "0xAB0494", VA = "0xAB0494")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0xAB054C", Offset = "0xAB054C", VA = "0xAB054C")]
	public SizeAdjustMovement()
	{
	}
}
[Token(Token = "0x200036B")]
public class SlingshotDisabled : MonoBehaviour
{
	[Token(Token = "0x6001564")]
	[Address(RVA = "0xAB0554", Offset = "0xAB0554", VA = "0xAB0554")]
	private void Start()
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xAB0558", Offset = "0xAB0558", VA = "0xAB0558")]
	private void Update()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xAB055C", Offset = "0xAB055C", VA = "0xAB055C")]
	public SlingshotDisabled()
	{
	}
}
[Token(Token = "0x200036C")]
public class SmokingTips : MonoBehaviour
{
	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject tipSmokeL;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject tipSmokeR;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject putOnTips;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEnabled;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool initialised;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scale;

	[Token(Token = "0x6001567")]
	[Address(RVA = "0xAB0564", Offset = "0xAB0564", VA = "0xAB0564")]
	private void Init()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xAB0664", Offset = "0xAB0664", VA = "0xAB0664")]
	private void Update()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0xAB06F8", Offset = "0xAB06F8", VA = "0xAB06F8")]
	public SmokingTips()
	{
	}
}
[Token(Token = "0x200036D")]
public class SolutionBase : MonoBehaviour
{
	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] neededObjects;

	[Token(Token = "0x600156A")]
	[Address(RVA = "0xAB0708", Offset = "0xAB0708", VA = "0xAB0708", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xAB07CC", Offset = "0xAB07CC", VA = "0xAB07CC")]
	public SolutionBase()
	{
	}
}
[Token(Token = "0x200036E")]
public class SpawnerMouth : MonoBehaviour
{
	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform animationRoot;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoSpawn.ID spanwerID;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string spawnedSFX;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float aniDuration;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tween tween;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tween dialTween;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float addLocalForce;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dialNeedle;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float dialTweenDuration;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float aniScale;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AutoSpawn mySpawner;

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xAB07D4", Offset = "0xAB07D4", VA = "0xAB07D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xAB0854", Offset = "0xAB0854", VA = "0xAB0854")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xAB08D4", Offset = "0xAB08D4", VA = "0xAB08D4")]
	private void ObjectSpawned(GameObject spawnedObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xAB0B8C", Offset = "0xAB0B8C", VA = "0xAB0B8C")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xAB0900", Offset = "0xAB0900", VA = "0xAB0900")]
	private void Spawned(GameObject spawnedObject, AutoSpawn spawner)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xAB0C10", Offset = "0xAB0C10", VA = "0xAB0C10")]
	private void CancelTween(Tween _tween)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xAB0C58", Offset = "0xAB0C58", VA = "0xAB0C58")]
	public SpawnerMouth()
	{
	}
}
[Token(Token = "0x200036F")]
public class SpawnPeopleOnTargetCompleted : MonoBehaviour
{
	[Token(Token = "0x2000370")]
	[CompilerGenerated]
	private sealed class <PeopleSpawn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPeopleOnTargetCompleted <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xAB12A4", Offset = "0xAB12A4", VA = "0xAB12A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xAB12EC", Offset = "0xAB12EC", VA = "0xAB12EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xAB0DF4", Offset = "0xAB0DF4", VA = "0xAB0DF4")]
		[DebuggerHidden]
		public <PeopleSpawn>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xAB0E38", Offset = "0xAB0E38", VA = "0xAB0E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xAB0E3C", Offset = "0xAB0E3C", VA = "0xAB0E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xAB12AC", Offset = "0xAB12AC", VA = "0xAB12AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTarget target;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnDelay;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool peopleSpawned;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject peoplePrefab;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] tools;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dist;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float height;

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xAB0C80", Offset = "0xAB0C80", VA = "0xAB0C80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xAB0C84", Offset = "0xAB0C84", VA = "0xAB0C84")]
	private void TargetPlacedCheck()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xAB0D70", Offset = "0xAB0D70", VA = "0xAB0D70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xAB0D80", Offset = "0xAB0D80", VA = "0xAB0D80")]
	[IteratorStateMachine(typeof(<PeopleSpawn>d__11))]
	private IEnumerator PeopleSpawn()
	{
		return null;
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xAB0E1C", Offset = "0xAB0E1C", VA = "0xAB0E1C")]
	public SpawnPeopleOnTargetCompleted()
	{
	}
}
[Token(Token = "0x2000371")]
public class SpawnPrefab : MonoBehaviour
{
	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool atOriginalPosition;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPosition;

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xAB12F4", Offset = "0xAB12F4", VA = "0xAB12F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xAB1324", Offset = "0xAB1324", VA = "0xAB1324")]
	public void DoSpawnPrefab()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xAB1454", Offset = "0xAB1454", VA = "0xAB1454")]
	public SpawnPrefab()
	{
	}
}
[Token(Token = "0x2000372")]
public class SpawnResetti : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	public delegate void CustomActionDelegate(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resState);

	[Token(Token = "0x2000374")]
	public delegate void SpawnResettiDelegate(SpawnResetti resetti);

	[Token(Token = "0x2000375")]
	public delegate void PostSpawnResettiDelegate(LevelDirector_Resetti resettiLevelDir);

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject resettiPrefab;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnResetti;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] spawnPositions;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject drawingPrefab;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody myRigidBody;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool defaultResettoSpawned;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LevelDirector_Resetti levelDirector_Resetti;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ConfigurableJoint myConfigurableJoint;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody myRB;

	[Token(Token = "0x14000055")]
	public static event CustomActionDelegate OnCustomResettiAction
	{
		[Token(Token = "0x6001581")]
		[Address(RVA = "0xAB145C", Offset = "0xAB145C", VA = "0xAB145C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001582")]
		[Address(RVA = "0xAB1514", Offset = "0xAB1514", VA = "0xAB1514")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000056")]
	public static event SpawnResettiDelegate OnSpawnResetti
	{
		[Token(Token = "0x6001583")]
		[Address(RVA = "0xAB15CC", Offset = "0xAB15CC", VA = "0xAB15CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001584")]
		[Address(RVA = "0xAB1688", Offset = "0xAB1688", VA = "0xAB1688")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000057")]
	public static event PostSpawnResettiDelegate OnPostSpawnResetti
	{
		[Token(Token = "0x6001585")]
		[Address(RVA = "0xAB1744", Offset = "0xAB1744", VA = "0xAB1744")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001586")]
		[Address(RVA = "0xAB1800", Offset = "0xAB1800", VA = "0xAB1800")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xAB18BC", Offset = "0xAB18BC", VA = "0xAB18BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xAB1B2C", Offset = "0xAB1B2C", VA = "0xAB1B2C")]
	public void HideDefaultResetto()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xAB1B74", Offset = "0xAB1B74", VA = "0xAB1B74")]
	public void CallCustomAction(LevelDirector_Resetti resetti, LevelDirector_Resetti.ResettiState resState)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xAB1BF4", Offset = "0xAB1BF4", VA = "0xAB1BF4")]
	public Transform GetInHouseTransform()
	{
		return null;
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xAB1924", Offset = "0xAB1924", VA = "0xAB1924")]
	private void Spawn()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xAB1C1C", Offset = "0xAB1C1C", VA = "0xAB1C1C")]
	[ContextMenu("SpawnDrawing")]
	public void SpawnDrawing()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xAB1C24", Offset = "0xAB1C24", VA = "0xAB1C24")]
	public void SpawnDrawing(Texture2D drawingTexture)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xAB1E5C", Offset = "0xAB1E5C", VA = "0xAB1E5C")]
	public SpawnResetti()
	{
	}
}
[Token(Token = "0x2000376")]
public class SphericalExplosions : MonoBehaviour
{
	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float totalRange;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deadzone;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayMin;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayMax;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool changeScale;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleMin;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleMax;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] prefabs;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float scale;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject go;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 position;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startTime;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject prefabPicked;

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xAB22D4", Offset = "0xAB22D4", VA = "0xAB22D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xAB230C", Offset = "0xAB230C", VA = "0xAB230C")]
	[ContextMenu("StartExplosions")]
	public void StartExplosions()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xAB2334", Offset = "0xAB2334", VA = "0xAB2334")]
	private void Explode()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xAB2564", Offset = "0xAB2564", VA = "0xAB2564")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xAB25B8", Offset = "0xAB25B8", VA = "0xAB25B8")]
	public SphericalExplosions()
	{
	}
}
[Token(Token = "0x2000377")]
public class SprayCanTool : MonoBehaviour
{
	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollisionBase collisionBase;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<Rigidbody, MaterialManager> rbToMaterialManagerDict;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MaterialManager> materialManagersInRange;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialManager matManager;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable myGrabbable;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color sprayColor;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sprayFXVisual;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider myCollider;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isSpraying;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem sprayFX;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MaterialManager myMaterialManager;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool debugOn;

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xAB25F0", Offset = "0xAB25F0", VA = "0xAB25F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xAB26C0", Offset = "0xAB26C0", VA = "0xAB26C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xAB2714", Offset = "0xAB2714", VA = "0xAB2714")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xAB27A0", Offset = "0xAB27A0", VA = "0xAB27A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xAB282C", Offset = "0xAB282C", VA = "0xAB282C")]
	private void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xAB2698", Offset = "0xAB2698", VA = "0xAB2698")]
	private void SetSpraying(bool isOn)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xAB26C4", Offset = "0xAB26C4", VA = "0xAB26C4")]
	[ContextMenu("RandomColor")]
	public void SetRandomColor()
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xAB2A80", Offset = "0xAB2A80", VA = "0xAB2A80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xAB2C40", Offset = "0xAB2C40", VA = "0xAB2C40")]
	public SprayCanTool()
	{
	}
}
[Token(Token = "0x2000378")]
public class StabilizerCore : MonoBehaviour
{
	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xAB2D18", Offset = "0xAB2D18", VA = "0xAB2D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xAB2D3C", Offset = "0xAB2D3C", VA = "0xAB2D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xAB2D9C", Offset = "0xAB2D9C", VA = "0xAB2D9C")]
	public StabilizerCore()
	{
	}
}
[Token(Token = "0x2000379")]
public class CollisionKeeper : MonoBehaviour
{
	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMother;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CollisionKeeper> myCollisionRBs;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CollisionKeeper> myConnectionsChecked;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CollisionKeeper colKeeper;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCollision;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<Rigidbody, List<Collider>> collisionsDict;

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xAB2DA4", Offset = "0xAB2DA4", VA = "0xAB2DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xAB2EA4", Offset = "0xAB2EA4", VA = "0xAB2EA4")]
	private void MotherCheck()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xAB309C", Offset = "0xAB309C", VA = "0xAB309C")]
	public bool WasChecked(CollisionKeeper _reporter)
	{
		return default(bool);
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xAB31BC", Offset = "0xAB31BC", VA = "0xAB31BC")]
	public void ConnectionCheck(CollisionKeeper _original)
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xAB3378", Offset = "0xAB3378", VA = "0xAB3378")]
	private void CleanUp()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xAB2EB4", Offset = "0xAB2EB4", VA = "0xAB2EB4")]
	private void SourceCheckConnections()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xAB3470", Offset = "0xAB3470", VA = "0xAB3470")]
	private void OnCollisionEnterCheck(Rigidbody colRB)
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xAB3614", Offset = "0xAB3614", VA = "0xAB3614")]
	private void CollisionExitCheck(Rigidbody colRB)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xAB3720", Offset = "0xAB3720", VA = "0xAB3720")]
	public void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xAB39FC", Offset = "0xAB39FC", VA = "0xAB39FC")]
	public void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xAB3BDC", Offset = "0xAB3BDC", VA = "0xAB3BDC")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xAB3EEC", Offset = "0xAB3EEC", VA = "0xAB3EEC")]
	public void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xAB4100", Offset = "0xAB4100", VA = "0xAB4100")]
	public CollisionKeeper()
	{
	}
}
[Token(Token = "0x200037A")]
public class GlueConnections : MonoBehaviour
{
	[Token(Token = "0x200037B")]
	public delegate void OnChangeDelegate(GlueConnections which, bool wasAdded);

	[Token(Token = "0x200037C")]
	public delegate void OnChainChangeDelegate(List<GlueConnections> connectionChain);

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isMother;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GlueConnections> myConnections;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GlueConnections> myConnectionsChecked;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GlueConnections> wasConnected;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Glue myGlue;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable myGrabbable;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int theLength;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GlueConnections myMother;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GlueConnections> mothers;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int connectionsHash;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float combinedMass;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float combinedDrag;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Entity entity;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool delegateAdded;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int lastCheck;

	[Token(Token = "0x14000058")]
	public static event OnChangeDelegate OnConnectionChange
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xAB4214", Offset = "0xAB4214", VA = "0xAB4214")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xAB42CC", Offset = "0xAB42CC", VA = "0xAB42CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000059")]
	public event OnChainChangeDelegate OnChainChange
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xAB4384", Offset = "0xAB4384", VA = "0xAB4384")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xAB4420", Offset = "0xAB4420", VA = "0xAB4420")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xAB44BC", Offset = "0xAB44BC", VA = "0xAB44BC", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xAB4600", Offset = "0xAB4600", VA = "0xAB4600", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xAB46EC", Offset = "0xAB46EC", VA = "0xAB46EC", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xAB47A4", Offset = "0xAB47A4", VA = "0xAB47A4", Slot = "7")]
	public virtual void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xAB47A8", Offset = "0xAB47A8", VA = "0xAB47A8", Slot = "8")]
	public virtual void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xAB47AC", Offset = "0xAB47AC", VA = "0xAB47AC", Slot = "9")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xAA9B34", Offset = "0xAA9B34", VA = "0xAA9B34")]
	public void ActivateMother(bool _isMother)
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xAB48C4", Offset = "0xAB48C4", VA = "0xAB48C4")]
	public void AddConnection(GlueConnections _connection)
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xAB4A18", Offset = "0xAB4A18", VA = "0xAB4A18")]
	public void RemoveConnection(GlueConnections _connection)
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xAB4B18", Offset = "0xAB4B18", VA = "0xAB4B18", Slot = "10")]
	public virtual void ChainChange(GlueConnections originator, bool wasAdded)
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xAB4E04", Offset = "0xAB4E04", VA = "0xAB4E04", Slot = "11")]
	public virtual void DoChainChangeCallback()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xAB4E24", Offset = "0xAB4E24", VA = "0xAB4E24")]
	public void ClearAllConnections()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xAB4E9C", Offset = "0xAB4E9C", VA = "0xAB4E9C")]
	public bool WasChecked(GlueConnections _reporter)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xAB50CC", Offset = "0xAB50CC", VA = "0xAB50CC")]
	public void ConnectionCheck(GlueConnections _original)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xAAB6B0", Offset = "0xAAB6B0", VA = "0xAAB6B0")]
	public void SourceCheckConnections([Optional] GlueConnections _originator, bool wasAdded = true)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xAB51C0", Offset = "0xAB51C0", VA = "0xAB51C0")]
	public GlueConnections()
	{
	}
}
[Token(Token = "0x200037D")]
public class ShipSpawnEmpty : MonoBehaviour
{
	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnFreeTimer;

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xAB54D4", Offset = "0xAB54D4", VA = "0xAB54D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xAB54D8", Offset = "0xAB54D8", VA = "0xAB54D8")]
	public bool SpanwIsFree()
	{
		return default(bool);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xAB54F0", Offset = "0xAB54F0", VA = "0xAB54F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xAB551C", Offset = "0xAB551C", VA = "0xAB551C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xAB5548", Offset = "0xAB5548", VA = "0xAB5548")]
	public ShipSpawnEmpty()
	{
	}
}
[Token(Token = "0x200037E")]
public class StayInPlace : MonoBehaviour
{
	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useTarget;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float force;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distFactor;

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xAB5550", Offset = "0xAB5550", VA = "0xAB5550")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xAB55EC", Offset = "0xAB55EC", VA = "0xAB55EC")]
	public void SetStartPosition(Vector3 _pos)
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xAB55F8", Offset = "0xAB55F8", VA = "0xAB55F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xAB5780", Offset = "0xAB5780", VA = "0xAB5780")]
	public StayInPlace()
	{
	}
}
[Token(Token = "0x200037F")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000149")]
	public static bool Initialized
	{
		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xAB5790", Offset = "0xAB5790", VA = "0xAB5790")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xAB5798", Offset = "0xAB5798", VA = "0xAB5798")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000380")]
public class StoryShowHide : MonoBehaviour
{
	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showIfDone;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showIfActive;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showIfLocked;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool ignoreIfReplay;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetObject;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Story myStory;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuDirector_base.StoryState storyState;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("use start or awake")]
	public bool checkStatusOnStart;

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xAB57A0", Offset = "0xAB57A0", VA = "0xAB57A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xAB5B4C", Offset = "0xAB5B4C", VA = "0xAB5B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xAB57B0", Offset = "0xAB57B0", VA = "0xAB57B0")]
	private void CheckStatus()
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xAB5B5C", Offset = "0xAB5B5C", VA = "0xAB5B5C")]
	public StoryShowHide()
	{
	}
}
[Token(Token = "0x2000381")]
public class DoNoDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xAB5B74", Offset = "0xAB5B74", VA = "0xAB5B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xAB5BE0", Offset = "0xAB5BE0", VA = "0xAB5BE0")]
	public DoNoDestroyOnLoad()
	{
	}
}
[Token(Token = "0x2000382")]
public class Haptics : MonoBehaviour
{
	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionReference action;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _amplitude;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _duration;

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xAB5BE8", Offset = "0xAB5BE8", VA = "0xAB5BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xAB5CA4", Offset = "0xAB5CA4", VA = "0xAB5CA4")]
	private void Rumble(UnityEngine.InputSystem.InputDevice device)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xAB5D5C", Offset = "0xAB5D5C", VA = "0xAB5D5C")]
	private void RumbleRight()
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xAB5DFC", Offset = "0xAB5DFC", VA = "0xAB5DFC")]
	private void RumbleLeft()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xAB5E9C", Offset = "0xAB5E9C", VA = "0xAB5E9C")]
	public Haptics()
	{
	}
}
[Token(Token = "0x2000383")]
public class LeverLoadAction : MonoBehaviour
{
	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical Lever;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NavigationOptions Action;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level customLevel;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Story customStory;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultDelay;

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xAB5F4C", Offset = "0xAB5F4C", VA = "0xAB5F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xAB5FFC", Offset = "0xAB5FFC", VA = "0xAB5FFC")]
	private void DoAction()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xAB614C", Offset = "0xAB614C", VA = "0xAB614C")]
	public void LeverAction()
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xAB619C", Offset = "0xAB619C", VA = "0xAB619C")]
	public LeverLoadAction()
	{
	}
}
[Token(Token = "0x2000384")]
public enum NavigationOptions
{
	[Token(Token = "0x40015C4")]
	Next,
	[Token(Token = "0x40015C5")]
	Reset,
	[Token(Token = "0x40015C6")]
	Menu,
	[Token(Token = "0x40015C7")]
	Start,
	[Token(Token = "0x40015C8")]
	Previous,
	[Token(Token = "0x40015C9")]
	Custom,
	[Token(Token = "0x40015CA")]
	Options,
	[Token(Token = "0x40015CB")]
	BackFromOptions,
	[Token(Token = "0x40015CC")]
	startStory,
	[Token(Token = "0x40015CD")]
	MainMenu
}
[Token(Token = "0x2000385")]
public class LeverOptionsAction : MonoBehaviour
{
	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButtonPhysical Lever;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicalSlider Slider;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OptionsActions Action;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float defaultDelay;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Languages language;

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xAB61B0", Offset = "0xAB61B0", VA = "0xAB61B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xAB62BC", Offset = "0xAB62BC", VA = "0xAB62BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xAB62C0", Offset = "0xAB62C0", VA = "0xAB62C0")]
	private void InitValues()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xAB6580", Offset = "0xAB6580", VA = "0xAB6580")]
	public void DoAction(bool _which)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xAB6710", Offset = "0xAB6710", VA = "0xAB6710")]
	public void DoLanguageAction()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xAB671C", Offset = "0xAB671C", VA = "0xAB671C")]
	public void DoIntAction(int _which)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xAB6720", Offset = "0xAB6720", VA = "0xAB6720")]
	public void DoFloatAction(float _which)
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xAB6A40", Offset = "0xAB6A40", VA = "0xAB6A40")]
	public void LeverAction()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xAB6A90", Offset = "0xAB6A90", VA = "0xAB6A90")]
	public LeverOptionsAction()
	{
	}
}
[Token(Token = "0x2000386")]
public enum OptionsActions
{
	[Token(Token = "0x40015D4")]
	TentacleScaleAdjust = 0,
	[Token(Token = "0x40015D5")]
	QualityShadows = 2,
	[Token(Token = "0x40015D6")]
	QualityAO = 3,
	[Token(Token = "0x40015D7")]
	UnlockAll = 4,
	[Token(Token = "0x40015D8")]
	SizeAdjust = 5,
	[Token(Token = "0x40015D9")]
	Music = 6,
	[Token(Token = "0x40015DA")]
	SFX = 7,
	[Token(Token = "0x40015DB")]
	Ambience = 8,
	[Token(Token = "0x40015DC")]
	Language = 9,
	[Token(Token = "0x40015DD")]
	Typewriter = 10,
	[Token(Token = "0x40015DE")]
	TalkSpeed = 11,
	[Token(Token = "0x40015DF")]
	QualityShadowsLevel = 12,
	[Token(Token = "0x40015E0")]
	AA = 13,
	[Token(Token = "0x40015E1")]
	OverSampling = 14,
	[Token(Token = "0x40015E2")]
	VerticalMove = 15,
	[Token(Token = "0x40015E3")]
	SmoothTurning = 16,
	[Token(Token = "0x40015E4")]
	SmoothTurningSpeed = 17,
	[Token(Token = "0x40015E5")]
	Vignetting = 18,
	[Token(Token = "0x40015E6")]
	VignettingStrength = 19,
	[Token(Token = "0x40015E7")]
	SaveSlot = 20
}
[Token(Token = "0x2000387")]
public class NavigationManager : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	public enum NavType
	{
		[Token(Token = "0x40015FA")]
		menu,
		[Token(Token = "0x40015FB")]
		levelEnd,
		[Token(Token = "0x40015FC")]
		debug,
		[Token(Token = "0x40015FD")]
		storyDone
	}

	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private sealed class <LevelCompleteBalloonSpawnCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavigationManager <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xAB7A28", Offset = "0xAB7A28", VA = "0xAB7A28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xAB7A70", Offset = "0xAB7A70", VA = "0xAB7A70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xAB70B0", Offset = "0xAB70B0", VA = "0xAB70B0")]
		[DebuggerHidden]
		public <LevelCompleteBalloonSpawnCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xAB7790", Offset = "0xAB7790", VA = "0xAB7790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xAB7794", Offset = "0xAB7794", VA = "0xAB7794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xAB7A30", Offset = "0xAB7A30", VA = "0xAB7A30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool menuDown;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 offset;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavType navType;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextBalloonPrefab;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nextBalloonOffset;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject optionsVehiclePrefab;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float optionsVehicleOffset;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SwitchButtonPhysical> buttons;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float optionsCooldown;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject resetHouse;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool blockOptions;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float timeInLevel;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NavigationManager _instance;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool balloonSpawned;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject navBalloon;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject optionsZeppelin;

	[Token(Token = "0x1700014A")]
	public static NavigationManager Instance
	{
		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xAB6AA4", Offset = "0xAB6AA4", VA = "0xAB6AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xAB6C30", Offset = "0xAB6C30", VA = "0xAB6C30")]
	private void Start()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xAB6C74", Offset = "0xAB6C74", VA = "0xAB6C74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xAB6EB8", Offset = "0xAB6EB8", VA = "0xAB6EB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xAB6FEC", Offset = "0xAB6FEC", VA = "0xAB6FEC")]
	public void LevelCompleteBalloonSpawn()
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xAB703C", Offset = "0xAB703C", VA = "0xAB703C")]
	[IteratorStateMachine(typeof(<LevelCompleteBalloonSpawnCoroutine>d__22))]
	[ContextMenu("SpawnBallon")]
	private IEnumerator LevelCompleteBalloonSpawnCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xAB70D8", Offset = "0xAB70D8", VA = "0xAB70D8")]
	private void SpawnPoofEffects(Vector3 pos, float scale = 1f)
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xAB73B0", Offset = "0xAB73B0", VA = "0xAB73B0")]
	public void MenuDown(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xAB7454", Offset = "0xAB7454", VA = "0xAB7454")]
	public void DeleteOptionsZep(bool doFX = true)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xAB7554", Offset = "0xAB7554", VA = "0xAB7554")]
	[ContextMenu("SpawnZeppelin")]
	private void SpawnOptionsZep()
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xAB7764", Offset = "0xAB7764", VA = "0xAB7764")]
	public NavigationManager()
	{
	}
}
[Token(Token = "0x200038A")]
public class NextLeverConstruction : MonoBehaviour
{
	[Token(Token = "0x600160A")]
	[Address(RVA = "0xAB7A78", Offset = "0xAB7A78", VA = "0xAB7A78")]
	public void LeverActivated()
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xAB7AE0", Offset = "0xAB7AE0", VA = "0xAB7AE0")]
	public NextLeverConstruction()
	{
	}
}
[Token(Token = "0x200038B")]
public class MaterialProvider : MonoBehaviour
{
	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MaterialProvider _instance;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] people;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosion;

	[Token(Token = "0x1700014D")]
	public static MaterialProvider Instance
	{
		[Token(Token = "0x600160C")]
		[Address(RVA = "0xAB7AE8", Offset = "0xAB7AE8", VA = "0xAB7AE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xAB7C74", Offset = "0xAB7C74", VA = "0xAB7C74")]
	public MaterialProvider()
	{
	}
}
[Token(Token = "0x200038C")]
[CreateAssetMenu(fileName = "Palette", menuName = "Palette", order = 1)]
public class Palette : ScriptableObject
{
	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] Colors;

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xAB7C7C", Offset = "0xAB7C7C", VA = "0xAB7C7C")]
	public Palette()
	{
	}
}
[Token(Token = "0x200038D")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x200038E")]
	public delegate void GamePausedDelegate(bool isPaused);

	[Token(Token = "0x200038F")]
	public delegate void HeadsetRemovedDelegate();

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gameActive;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pauseGameInEditor;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool isPaused;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool ignorePause;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool appFocus;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool appPause;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PauseManager _instance;

	[Token(Token = "0x1700014E")]
	public static PauseManager Instance
	{
		[Token(Token = "0x6001613")]
		[Address(RVA = "0xAB7F6C", Offset = "0xAB7F6C", VA = "0xAB7F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400005A")]
	public static event GamePausedDelegate OnGamePaused
	{
		[Token(Token = "0x600160F")]
		[Address(RVA = "0xAB7C84", Offset = "0xAB7C84", VA = "0xAB7C84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001610")]
		[Address(RVA = "0xAB7D3C", Offset = "0xAB7D3C", VA = "0xAB7D3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005B")]
	public static event HeadsetRemovedDelegate OnHeadsetRemoved
	{
		[Token(Token = "0x6001611")]
		[Address(RVA = "0xAB7DF4", Offset = "0xAB7DF4", VA = "0xAB7DF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001612")]
		[Address(RVA = "0xAB7EB0", Offset = "0xAB7EB0", VA = "0xAB7EB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xAB80E8", Offset = "0xAB80E8", VA = "0xAB80E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xAB8294", Offset = "0xAB8294", VA = "0xAB8294")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xAB82A0", Offset = "0xAB82A0", VA = "0xAB82A0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xAB82AC", Offset = "0xAB82AC", VA = "0xAB82AC")]
	public bool GameActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xAB82B4", Offset = "0xAB82B4", VA = "0xAB82B4")]
	private void PauseGame(bool paused = true)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xAB814C", Offset = "0xAB814C", VA = "0xAB814C")]
	private void PauseCheck()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xAB83E4", Offset = "0xAB83E4", VA = "0xAB83E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xAB84CC", Offset = "0xAB84CC", VA = "0xAB84CC")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x2000390")]
public interface IOptions
{
	[Token(Token = "0x1700014F")]
	bool LimitsEnabled
	{
		[Token(Token = "0x6001624")]
		get;
		[Token(Token = "0x6001625")]
		set;
	}

	[Token(Token = "0x17000150")]
	float TentacleScale
	{
		[Token(Token = "0x6001626")]
		get;
		[Token(Token = "0x6001627")]
		set;
	}

	[Token(Token = "0x17000151")]
	float CameraHeight
	{
		[Token(Token = "0x6001628")]
		get;
		[Token(Token = "0x6001629")]
		set;
	}

	[Token(Token = "0x17000152")]
	bool VerticalMove
	{
		[Token(Token = "0x600162A")]
		get;
		[Token(Token = "0x600162B")]
		set;
	}

	[Token(Token = "0x17000153")]
	float MusicVolume
	{
		[Token(Token = "0x600162C")]
		get;
		[Token(Token = "0x600162D")]
		set;
	}

	[Token(Token = "0x17000154")]
	float SFXVolume
	{
		[Token(Token = "0x600162E")]
		get;
		[Token(Token = "0x600162F")]
		set;
	}

	[Token(Token = "0x17000155")]
	float AmbienceVolume
	{
		[Token(Token = "0x6001630")]
		get;
		[Token(Token = "0x6001631")]
		set;
	}

	[Token(Token = "0x17000156")]
	float ShadowsQuality
	{
		[Token(Token = "0x6001632")]
		get;
		[Token(Token = "0x6001633")]
		set;
	}

	[Token(Token = "0x17000157")]
	float AA
	{
		[Token(Token = "0x6001634")]
		get;
		[Token(Token = "0x6001635")]
		set;
	}

	[Token(Token = "0x17000158")]
	float OverSampling
	{
		[Token(Token = "0x6001636")]
		get;
		[Token(Token = "0x6001637")]
		set;
	}

	[Token(Token = "0x17000159")]
	string Language
	{
		[Token(Token = "0x6001638")]
		get;
		[Token(Token = "0x6001639")]
		set;
	}

	[Token(Token = "0x1700015A")]
	string Version
	{
		[Token(Token = "0x600163A")]
		get;
		[Token(Token = "0x600163B")]
		set;
	}

	[Token(Token = "0x1700015B")]
	bool PerformanceChecked
	{
		[Token(Token = "0x600163C")]
		get;
		[Token(Token = "0x600163D")]
		set;
	}

	[Token(Token = "0x1700015C")]
	bool FirstRun
	{
		[Token(Token = "0x600163E")]
		get;
		[Token(Token = "0x600163F")]
		set;
	}

	[Token(Token = "0x1700015D")]
	bool RollLock
	{
		[Token(Token = "0x6001640")]
		get;
		[Token(Token = "0x6001641")]
		set;
	}

	[Token(Token = "0x1700015E")]
	bool PitchLock
	{
		[Token(Token = "0x6001642")]
		get;
		[Token(Token = "0x6001643")]
		set;
	}

	[Token(Token = "0x1700015F")]
	float RotationFollowSpeed
	{
		[Token(Token = "0x6001644")]
		get;
		[Token(Token = "0x6001645")]
		set;
	}

	[Token(Token = "0x17000160")]
	float PositionFollowSpeed
	{
		[Token(Token = "0x6001646")]
		get;
		[Token(Token = "0x6001647")]
		set;
	}

	[Token(Token = "0x17000161")]
	float SmoothCamFOV
	{
		[Token(Token = "0x6001648")]
		get;
		[Token(Token = "0x6001649")]
		set;
	}

	[Token(Token = "0x17000162")]
	float FlyCamSpeed
	{
		[Token(Token = "0x600164A")]
		get;
		[Token(Token = "0x600164B")]
		set;
	}

	[Token(Token = "0x17000163")]
	float FlyCamYawSpeed
	{
		[Token(Token = "0x600164C")]
		get;
		[Token(Token = "0x600164D")]
		set;
	}

	[Token(Token = "0x17000164")]
	float FlyCamPitchSpeed
	{
		[Token(Token = "0x600164E")]
		get;
		[Token(Token = "0x600164F")]
		set;
	}

	[Token(Token = "0x17000165")]
	float FlyCamRiseSpeed
	{
		[Token(Token = "0x6001650")]
		get;
		[Token(Token = "0x6001651")]
		set;
	}

	[Token(Token = "0x17000166")]
	bool TextRevealAnimation
	{
		[Token(Token = "0x6001652")]
		get;
		[Token(Token = "0x6001653")]
		set;
	}

	[Token(Token = "0x17000167")]
	float TalkSpeed
	{
		[Token(Token = "0x6001654")]
		get;
		[Token(Token = "0x6001655")]
		set;
	}

	[Token(Token = "0x17000168")]
	float SmoothTurningSpeed
	{
		[Token(Token = "0x6001656")]
		get;
		[Token(Token = "0x6001657")]
		set;
	}

	[Token(Token = "0x17000169")]
	bool SmoothTurning
	{
		[Token(Token = "0x6001658")]
		get;
		[Token(Token = "0x6001659")]
		set;
	}

	[Token(Token = "0x1700016A")]
	bool Vignetting
	{
		[Token(Token = "0x600165A")]
		get;
		[Token(Token = "0x600165B")]
		set;
	}

	[Token(Token = "0x1700016B")]
	float VignettingStrength
	{
		[Token(Token = "0x600165C")]
		get;
		[Token(Token = "0x600165D")]
		set;
	}

	[Token(Token = "0x1700016C")]
	int SaveSlot
	{
		[Token(Token = "0x600165E")]
		get;
		[Token(Token = "0x600165F")]
		set;
	}

	[Token(Token = "0x1700016D")]
	float[] Percentages
	{
		[Token(Token = "0x6001660")]
		get;
		[Token(Token = "0x6001661")]
		set;
	}
}
[Serializable]
[Token(Token = "0x2000391")]
public class Options
{
	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool LimitsEnabled;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TentacleScale;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CameraHeight;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool VerticalMove;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MusicVolume;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SFXVolume;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AmbienceVolume;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ShadowsQuality;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float AA;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OverSampling;

	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Language;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Version;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool SmoothTurning;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float SmoothTurningSpeed;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Vignetting;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VignettingStrength;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool PerformanceChecked;

	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool FirstRun;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool RollLock;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool PitchLock;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RotationFollowSpeed;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float PositionFollowSpeed;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SmoothCamFOV;

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FlyCamSpeed;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FlyCamYawSpeed;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float FlyCamPitchSpeed;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float FlyCamRiseSpeed;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool TextRevealAnimation;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float TalkSpeed;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int SaveSlot;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float[] Percentages;

	[Token(Token = "0x6001662")]
	[Address(RVA = "0xAB8718", Offset = "0xAB8718", VA = "0xAB8718")]
	public Options()
	{
	}
}
[Token(Token = "0x2000392")]
public class PersistentOptionsManager : IOptions
{
	[Token(Token = "0x2000393")]
	public delegate void ChangeEventHandler(object sender);

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PersistentOptionsManager instance;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Options state;

	[Token(Token = "0x1700016E")]
	public static PersistentOptionsManager Instance
	{
		[Token(Token = "0x6001663")]
		[Address(RVA = "0xAB8824", Offset = "0xAB8824", VA = "0xAB8824")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016F")]
	public bool LimitsEnabled
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xAB8C8C", Offset = "0xAB8C8C", VA = "0xAB8C8C", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600166C")]
		[Address(RVA = "0xAB8CA8", Offset = "0xAB8CA8", VA = "0xAB8CA8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public float TentacleScale
	{
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xAB8CC8", Offset = "0xAB8CC8", VA = "0xAB8CC8", Slot = "6")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xAB8CE4", Offset = "0xAB8CE4", VA = "0xAB8CE4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float CameraHeight
	{
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xAB8D00", Offset = "0xAB8D00", VA = "0xAB8D00", Slot = "8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001670")]
		[Address(RVA = "0xAB8D1C", Offset = "0xAB8D1C", VA = "0xAB8D1C", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public bool VerticalMove
	{
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xAB8D38", Offset = "0xAB8D38", VA = "0xAB8D38", Slot = "10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001672")]
		[Address(RVA = "0xAB8D54", Offset = "0xAB8D54", VA = "0xAB8D54", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public float MusicVolume
	{
		[Token(Token = "0x6001673")]
		[Address(RVA = "0xAB8D74", Offset = "0xAB8D74", VA = "0xAB8D74", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001674")]
		[Address(RVA = "0xAB8D90", Offset = "0xAB8D90", VA = "0xAB8D90", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public float SFXVolume
	{
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xAB8DAC", Offset = "0xAB8DAC", VA = "0xAB8DAC", Slot = "14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xAB8DC8", Offset = "0xAB8DC8", VA = "0xAB8DC8", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public float AmbienceVolume
	{
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xAB8DE4", Offset = "0xAB8DE4", VA = "0xAB8DE4", Slot = "16")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xAB8E00", Offset = "0xAB8E00", VA = "0xAB8E00", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public float ShadowsQuality
	{
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xAB8E1C", Offset = "0xAB8E1C", VA = "0xAB8E1C", Slot = "18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xAB8E38", Offset = "0xAB8E38", VA = "0xAB8E38", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public float AA
	{
		[Token(Token = "0x600167B")]
		[Address(RVA = "0xAB8E54", Offset = "0xAB8E54", VA = "0xAB8E54", Slot = "20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600167C")]
		[Address(RVA = "0xAB8E70", Offset = "0xAB8E70", VA = "0xAB8E70", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public float OverSampling
	{
		[Token(Token = "0x600167D")]
		[Address(RVA = "0xAB8E8C", Offset = "0xAB8E8C", VA = "0xAB8E8C", Slot = "22")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600167E")]
		[Address(RVA = "0xAB8EA8", Offset = "0xAB8EA8", VA = "0xAB8EA8", Slot = "23")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public string Language
	{
		[Token(Token = "0x600167F")]
		[Address(RVA = "0xAB8EC4", Offset = "0xAB8EC4", VA = "0xAB8EC4", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001680")]
		[Address(RVA = "0xAB8EE0", Offset = "0xAB8EE0", VA = "0xAB8EE0", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public string Version
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0xAB8F08", Offset = "0xAB8F08", VA = "0xAB8F08", Slot = "26")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001682")]
		[Address(RVA = "0xAB8F24", Offset = "0xAB8F24", VA = "0xAB8F24", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public bool PerformanceChecked
	{
		[Token(Token = "0x6001683")]
		[Address(RVA = "0xAB8F4C", Offset = "0xAB8F4C", VA = "0xAB8F4C", Slot = "28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001684")]
		[Address(RVA = "0xAB8F68", Offset = "0xAB8F68", VA = "0xAB8F68", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public bool FirstRun
	{
		[Token(Token = "0x6001685")]
		[Address(RVA = "0xAB8F88", Offset = "0xAB8F88", VA = "0xAB8F88", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001686")]
		[Address(RVA = "0xAB8FA4", Offset = "0xAB8FA4", VA = "0xAB8FA4", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public bool RollLock
	{
		[Token(Token = "0x6001687")]
		[Address(RVA = "0xAB8FC4", Offset = "0xAB8FC4", VA = "0xAB8FC4", Slot = "32")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xAB8FE0", Offset = "0xAB8FE0", VA = "0xAB8FE0", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public bool PitchLock
	{
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xAB9000", Offset = "0xAB9000", VA = "0xAB9000", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xAB901C", Offset = "0xAB901C", VA = "0xAB901C", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public float RotationFollowSpeed
	{
		[Token(Token = "0x600168B")]
		[Address(RVA = "0xAB903C", Offset = "0xAB903C", VA = "0xAB903C", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xAB9058", Offset = "0xAB9058", VA = "0xAB9058", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public float PositionFollowSpeed
	{
		[Token(Token = "0x600168D")]
		[Address(RVA = "0xAB9074", Offset = "0xAB9074", VA = "0xAB9074", Slot = "38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600168E")]
		[Address(RVA = "0xAB9090", Offset = "0xAB9090", VA = "0xAB9090", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public float SmoothCamFOV
	{
		[Token(Token = "0x600168F")]
		[Address(RVA = "0xAB90AC", Offset = "0xAB90AC", VA = "0xAB90AC", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xAB90C8", Offset = "0xAB90C8", VA = "0xAB90C8", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public float FlyCamSpeed
	{
		[Token(Token = "0x6001691")]
		[Address(RVA = "0xAB90E4", Offset = "0xAB90E4", VA = "0xAB90E4", Slot = "42")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001692")]
		[Address(RVA = "0xAB9100", Offset = "0xAB9100", VA = "0xAB9100", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public float FlyCamYawSpeed
	{
		[Token(Token = "0x6001693")]
		[Address(RVA = "0xAB911C", Offset = "0xAB911C", VA = "0xAB911C", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001694")]
		[Address(RVA = "0xAB9138", Offset = "0xAB9138", VA = "0xAB9138", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public float FlyCamPitchSpeed
	{
		[Token(Token = "0x6001695")]
		[Address(RVA = "0xAB9154", Offset = "0xAB9154", VA = "0xAB9154", Slot = "46")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001696")]
		[Address(RVA = "0xAB9170", Offset = "0xAB9170", VA = "0xAB9170", Slot = "47")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public float FlyCamRiseSpeed
	{
		[Token(Token = "0x6001697")]
		[Address(RVA = "0xAB918C", Offset = "0xAB918C", VA = "0xAB918C", Slot = "48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001698")]
		[Address(RVA = "0xAB91A8", Offset = "0xAB91A8", VA = "0xAB91A8", Slot = "49")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public bool TextRevealAnimation
	{
		[Token(Token = "0x6001699")]
		[Address(RVA = "0xAB91C4", Offset = "0xAB91C4", VA = "0xAB91C4", Slot = "50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600169A")]
		[Address(RVA = "0xAB91E0", Offset = "0xAB91E0", VA = "0xAB91E0", Slot = "51")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public float TalkSpeed
	{
		[Token(Token = "0x600169B")]
		[Address(RVA = "0xAB9200", Offset = "0xAB9200", VA = "0xAB9200", Slot = "52")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600169C")]
		[Address(RVA = "0xAB921C", Offset = "0xAB921C", VA = "0xAB921C", Slot = "53")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public bool SmoothTurning
	{
		[Token(Token = "0x600169D")]
		[Address(RVA = "0xAB9238", Offset = "0xAB9238", VA = "0xAB9238", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600169E")]
		[Address(RVA = "0xAB9254", Offset = "0xAB9254", VA = "0xAB9254", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public float SmoothTurningSpeed
	{
		[Token(Token = "0x600169F")]
		[Address(RVA = "0xAB9274", Offset = "0xAB9274", VA = "0xAB9274", Slot = "54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xAB9290", Offset = "0xAB9290", VA = "0xAB9290", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public bool Vignetting
	{
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xAB92AC", Offset = "0xAB92AC", VA = "0xAB92AC", Slot = "58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xAB92C8", Offset = "0xAB92C8", VA = "0xAB92C8", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public float VignettingStrength
	{
		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xAB92E8", Offset = "0xAB92E8", VA = "0xAB92E8", Slot = "60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xAB9304", Offset = "0xAB9304", VA = "0xAB9304", Slot = "61")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public int SaveSlot
	{
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xAB9320", Offset = "0xAB9320", VA = "0xAB9320", Slot = "62")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xAB933C", Offset = "0xAB933C", VA = "0xAB933C", Slot = "63")]
		set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public float[] Percentages
	{
		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xAB9358", Offset = "0xAB9358", VA = "0xAB9358", Slot = "64")]
		get
		{
			return null;
		}
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xAB9374", Offset = "0xAB9374", VA = "0xAB9374", Slot = "65")]
		set
		{
		}
	}

	[Token(Token = "0x1400005C")]
	public event ChangeEventHandler OnChange
	{
		[Token(Token = "0x6001664")]
		[Address(RVA = "0xAB8948", Offset = "0xAB8948", VA = "0xAB8948")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001665")]
		[Address(RVA = "0xAB89E4", Offset = "0xAB89E4", VA = "0xAB89E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xAB88B0", Offset = "0xAB88B0", VA = "0xAB88B0")]
	private PersistentOptionsManager()
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xAB8B48", Offset = "0xAB8B48", VA = "0xAB8B48")]
	private void AnnounceChange()
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xAB8B7C", Offset = "0xAB8B7C", VA = "0xAB8B7C")]
	private void Save()
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xAB8A80", Offset = "0xAB8A80", VA = "0xAB8A80")]
	private string GetOptionsFilePath()
	{
		return null;
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xAB8BEC", Offset = "0xAB8BEC", VA = "0xAB8BEC")]
	[ContextMenu("DeleteAndReset")]
	public void DeleteAndReset()
	{
	}
}
[Token(Token = "0x2000394")]
public class PlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000395")]
	public enum deviceType
	{
		[Token(Token = "0x4001643")]
		none,
		[Token(Token = "0x4001644")]
		htcvive,
		[Token(Token = "0x4001645")]
		htcvivePro,
		[Token(Token = "0x4001646")]
		oculusRift,
		[Token(Token = "0x4001647")]
		oculusRiftS,
		[Token(Token = "0x4001648")]
		psvr2,
		[Token(Token = "0x4001649")]
		quest,
		[Token(Token = "0x400164A")]
		valveIndex,
		[Token(Token = "0x400164B")]
		quest2,
		[Token(Token = "0x400164C")]
		cosmos,
		[Token(Token = "0x400164D")]
		PCVR,
		[Token(Token = "0x400164E")]
		HPReverb,
		[Token(Token = "0x400164F")]
		pico3
	}

	[Token(Token = "0x2000396")]
	public enum deviceController
	{
		[Token(Token = "0x4001651")]
		none,
		[Token(Token = "0x4001652")]
		viveWand,
		[Token(Token = "0x4001653")]
		oculusTouchLegacy,
		[Token(Token = "0x4001654")]
		oculusTouchNew,
		[Token(Token = "0x4001655")]
		indexKnuckles,
		[Token(Token = "0x4001656")]
		cosmos,
		[Token(Token = "0x4001657")]
		oculusTouchWhite,
		[Token(Token = "0x4001658")]
		HPReverb,
		[Token(Token = "0x4001659")]
		picoNeo3,
		[Token(Token = "0x400165A")]
		psvr2,
		[Token(Token = "0x400165B")]
		pico4
	}

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static deviceType device;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static deviceType realDevice;

	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool IsQuestPlatform;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static deviceController controllers;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float FixedTimeFactor;

	[Token(Token = "0x4001635")]
	public const float FixedTimeFactor90 = 90.008995f;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private deviceType debugDevice;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private deviceController debugController;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static deviceController DebugController;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static deviceType DebugDevice;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string foundXRDeviceName;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static PlatformManager _instance;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool VRInputFocus;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static readonly bool IsSteamVR;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public static readonly bool IsOculus;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public static readonly bool IsPSVR2;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static readonly bool IsPico;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string PlatformFilePrefix;

	[Token(Token = "0x1700018E")]
	public static PlatformManager Instance
	{
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xAB94EC", Offset = "0xAB94EC", VA = "0xAB94EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xAB96A4", Offset = "0xAB96A4", VA = "0xAB96A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0xAB987C", Offset = "0xAB987C", VA = "0xAB987C")]
	private void CheckDevices()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xABA038", Offset = "0xABA038", VA = "0xABA038")]
	public static void DebugSetup()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xAB9830", Offset = "0xAB9830", VA = "0xAB9830")]
	public static string LoadedXRDevice()
	{
		return null;
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0xAB83DC", Offset = "0xAB83DC", VA = "0xAB83DC")]
	public static bool HeadsetConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0xABA090", Offset = "0xABA090", VA = "0xABA090")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0xABA094", Offset = "0xABA094", VA = "0xABA094")]
	private void OnVRInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0xAB8370", Offset = "0xAB8370", VA = "0xAB8370")]
	public static bool HeadsetAndInputFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0xABA1CC", Offset = "0xABA1CC", VA = "0xABA1CC")]
	public static void SetLowFixedUpdate(float fixedUpdate = 0.025f)
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0xABA294", Offset = "0xABA294", VA = "0xABA294")]
	public static void ChangeFixedUpdate(float increment)
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0xAB9FB4", Offset = "0xAB9FB4", VA = "0xAB9FB4")]
	public static void SetDefaultFixedUpdate()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0xABA320", Offset = "0xABA320", VA = "0xABA320")]
	public PlatformManager()
	{
	}
}
[Token(Token = "0x2000397")]
public class SpawnResources : MonoBehaviour
{
	[Token(Token = "0x2000398")]
	public enum HumanType
	{
		[Token(Token = "0x40016A7")]
		all,
		[Token(Token = "0x40016A8")]
		regular,
		[Token(Token = "0x40016A9")]
		workers,
		[Token(Token = "0x40016AA")]
		astronauts,
		[Token(Token = "0x40016AB")]
		sailors,
		[Token(Token = "0x40016AC")]
		scientists,
		[Token(Token = "0x40016AD")]
		guards,
		[Token(Token = "0x40016AE")]
		police
	}

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnResources _instance;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject starsFXPrefab;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject okFXPrefab;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject conditionOKFXPrefab;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bonusFXPrefab;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject exploFXPrefab;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject carExploFXPrefab;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject quarterExploFXPrefab;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject smallExploBlastComponentFXPrefab;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject smokeFXPrefab;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject fireTinyFXPrefab;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject poofTinyFXPrefab;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject poofMagicTinyFXPrefab;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject poofMagicMediumFXPrefab;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject fallingRubbleFXPrefab;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject cartoonSmokeFXPrefab;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject smokeTipsPrefab;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material burntVehicles;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material damagedVehicles;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material houseMaterial;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject boom;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rocketSuccess;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject validationCamera;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject redHitSmall;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject magnetBurnoutFXPrefab;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject softStarFXPrefab;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject flashFXPrefab;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject successConfetti1;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject labelType;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject debugSphere;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject crystalsEnergySuckIn;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject crystalShockMaxLevel;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject factoryPanel;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject limitBuoy;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject limitBuoyLowPerformance;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject limitLineRenderer;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject limitLineRendererLowPerformance;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject energyConnectFX;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject pipeSpawnerMouth;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject editorReplicator;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material heliCable;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material laserMaxCharge;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material factoryGhost;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject ImpactPoof;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[Header("Human stuff")]
	public GameObject peopleGeneric;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject astronauts;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HumanAestheticScriptableObject resettiHuman;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("SFX")]
	[EventRef]
	public string targetDoneSFX;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[EventRef]
	public string levelCompleteSFX;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[EventRef]
	public string bullseyeSFX;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[EventRef]
	public string tentacleMeatSFX;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[EventRef]
	public string tentacleMeatHarderSFX;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[EventRef]
	public string leverSFX;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[EventRef]
	public string leverSnapSFX;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[EventRef]
	public string carExplosion;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[EventRef]
	public string carGlassHit;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[EventRef]
	public string carHit;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[EventRef]
	public string carTouch;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[EventRef]
	public string boosterArm;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[EventRef]
	public string boomImpactSFX;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[EventRef]
	public string wrongGameplay;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[EventRef]
	public string parachuteOpen;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[EventRef]
	public string[] carEngineSFX;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[EventRef]
	public string[] carHornSFX;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[Header("Flickering Test")]
	public Material building;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Texture2D nearText4k;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Texture2D nearText8k;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Texture2D nearText;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Texture2D farText;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Texture2D redText;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Texture2D greenText;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public HumanType humanTypes;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public HumanAestheticScriptableObject[] humanTypeList;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public UniqHumansCollection uniqHumansCollections;

	[Token(Token = "0x1700018F")]
	public static SpawnResources Instance
	{
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xAB71A0", Offset = "0xAB71A0", VA = "0xAB71A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0xABA398", Offset = "0xABA398", VA = "0xABA398")]
	public void PlaySFX(string soundFX, GameObject attachTo)
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0xABA3A8", Offset = "0xABA3A8", VA = "0xABA3A8")]
	public GameObject SpawnFXFeedback(Vector3 _position, GameObject _fxPrefab, Vector3 _euler, float scale = 0f)
	{
		return null;
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0xAB732C", Offset = "0xAB732C", VA = "0xAB732C")]
	public GameObject SpawnFXFeedback(Vector3 _position, GameObject _fxPrefab, float scale = 0f)
	{
		return null;
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0xABA4D4", Offset = "0xABA4D4", VA = "0xABA4D4")]
	public GameObject SpawnUniqHuman(HumanType _type)
	{
		return null;
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xABA5C8", Offset = "0xABA5C8", VA = "0xABA5C8")]
	public SpawnResources()
	{
	}
}
[Token(Token = "0x2000399")]
public class VRControllerMapper : MonoBehaviour
{
	[Token(Token = "0x200039A")]
	public enum actionType
	{
		[Token(Token = "0x40016D0")]
		grab,
		[Token(Token = "0x40016D1")]
		unGlue,
		[Token(Token = "0x40016D2")]
		menu,
		[Token(Token = "0x40016D3")]
		move,
		[Token(Token = "0x40016D4")]
		secondButton,
		[Token(Token = "0x40016D5")]
		thumbPress,
		[Token(Token = "0x40016D6")]
		forward,
		[Token(Token = "0x40016D7")]
		backward,
		[Token(Token = "0x40016D8")]
		left,
		[Token(Token = "0x40016D9")]
		right
	}

	[Token(Token = "0x200039B")]
	public delegate void OnGrabDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039C")]
	public delegate void OnGrabUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039D")]
	public delegate void OnMenuDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039E")]
	public delegate void OnMenuUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x200039F")]
	public delegate void OnUnGlueDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A0")]
	public delegate void OnUnGlueUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A1")]
	public delegate void OnSecondButtonDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A2")]
	public delegate void OnSecondButtonUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A3")]
	public delegate void OnThumbDownDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A4")]
	public delegate void OnThumbUpDelegate(VRControllerMapper controller);

	[Token(Token = "0x20003A5")]
	public delegate void OnMoveStickDelegate(VRControllerMapper controller, Vector2 direction);

	[Token(Token = "0x20003A6")]
	public delegate void OnForwardDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A7")]
	public delegate void OnBackwardDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A8")]
	public delegate void OnLeftDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x20003A9")]
	public delegate void OnRightDelegate(VRControllerMapper controller, bool isDown);

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerID;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SetUpTentacleSystem setUp;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool initialised;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool controllerActive;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRControllerMapperSub myVRControllerMapperSub;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TentacleLogic tentacleLogic;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody velocityRB;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool grabDown;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool unGlueDown;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool menuDown;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool secondButtonDown;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool thumbPress;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool forward;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool backward;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool left;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool right;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 stickDirection;

	[Token(Token = "0x1400005D")]
	public static event OnGrabDownDelegate OnTriggerDown
	{
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xABA5D0", Offset = "0xABA5D0", VA = "0xABA5D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xABA688", Offset = "0xABA688", VA = "0xABA688")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005E")]
	public static event OnGrabUpDelegate OnTriggerUp
	{
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xABA740", Offset = "0xABA740", VA = "0xABA740")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xABA7FC", Offset = "0xABA7FC", VA = "0xABA7FC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400005F")]
	public static event OnMenuDownDelegate OnMenuDown
	{
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xAB6DFC", Offset = "0xAB6DFC", VA = "0xAB6DFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xAB6F30", Offset = "0xAB6F30", VA = "0xAB6F30")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000060")]
	public static event OnMenuUpDelegate OnMenuUp
	{
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xABA8B8", Offset = "0xABA8B8", VA = "0xABA8B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xABA974", Offset = "0xABA974", VA = "0xABA974")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000061")]
	public static event OnUnGlueDownDelegate OnUnGlueDown
	{
		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xABAA30", Offset = "0xABAA30", VA = "0xABAA30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xABAAEC", Offset = "0xABAAEC", VA = "0xABAAEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000062")]
	public static event OnUnGlueUpDelegate OnUnGlueUp
	{
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xABABA8", Offset = "0xABABA8", VA = "0xABABA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xABAC64", Offset = "0xABAC64", VA = "0xABAC64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000063")]
	public static event OnSecondButtonDownDelegate OnSecondButtonDown
	{
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xABAD20", Offset = "0xABAD20", VA = "0xABAD20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xABADDC", Offset = "0xABADDC", VA = "0xABADDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000064")]
	public static event OnSecondButtonUpDelegate OnSecondButtonUp
	{
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xABAE98", Offset = "0xABAE98", VA = "0xABAE98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xABAF54", Offset = "0xABAF54", VA = "0xABAF54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000065")]
	public static event OnThumbDownDelegate OnThumbDown
	{
		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xABB010", Offset = "0xABB010", VA = "0xABB010")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xABB0CC", Offset = "0xABB0CC", VA = "0xABB0CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000066")]
	public static event OnThumbUpDelegate OnThumbUp
	{
		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xABB188", Offset = "0xABB188", VA = "0xABB188")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xABB244", Offset = "0xABB244", VA = "0xABB244")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000067")]
	public static event OnMoveStickDelegate OnMoveStick
	{
		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xABB300", Offset = "0xABB300", VA = "0xABB300")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xABB3BC", Offset = "0xABB3BC", VA = "0xABB3BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000068")]
	public static event OnForwardDelegate OnForward
	{
		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xABB478", Offset = "0xABB478", VA = "0xABB478")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xABB534", Offset = "0xABB534", VA = "0xABB534")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000069")]
	public static event OnBackwardDelegate OnBackward
	{
		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xABB5F0", Offset = "0xABB5F0", VA = "0xABB5F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xABB6AC", Offset = "0xABB6AC", VA = "0xABB6AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006A")]
	public static event OnLeftDelegate OnLeft
	{
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xABB768", Offset = "0xABB768", VA = "0xABB768")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xABB824", Offset = "0xABB824", VA = "0xABB824")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006B")]
	public static event OnRightDelegate OnRight
	{
		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xABB8E0", Offset = "0xABB8E0", VA = "0xABB8E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xABB99C", Offset = "0xABB99C", VA = "0xABB99C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0xABBA58", Offset = "0xABBA58", VA = "0xABBA58")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0xABBBA0", Offset = "0xABBBA0", VA = "0xABBBA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0xABBC18", Offset = "0xABBC18", VA = "0xABBC18")]
	private void Pause(bool isTrue)
	{
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0xABBB1C", Offset = "0xABBB1C", VA = "0xABBB1C")]
	private void InitPlatform()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0xABBF20", Offset = "0xABBF20", VA = "0xABBF20")]
	public void ControllerAction(actionType _action, Vector2 _dir)
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0xABBFB8", Offset = "0xABBFB8", VA = "0xABBFB8")]
	public void ControllerAction(actionType _action, bool _which)
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xABC17C", Offset = "0xABC17C", VA = "0xABC17C")]
	public Vector3 GetControllerVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xABC19C", Offset = "0xABC19C", VA = "0xABC19C")]
	public bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xABC1A4", Offset = "0xABC1A4", VA = "0xABC1A4")]
	public bool MenuPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xABC1AC", Offset = "0xABC1AC", VA = "0xABC1AC")]
	public void HapticFeedback(ushort _frequency)
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xABC1CC", Offset = "0xABC1CC", VA = "0xABC1CC")]
	public VRControllerMapper()
	{
	}
}
[Token(Token = "0x20003AA")]
public class VRControllerMapperSub : MonoBehaviour
{
	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hand;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool lastControllerActive;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerMapper myMapper;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.XR.InputDevice handDevice;

	[Token(Token = "0x6001726")]
	[Address(RVA = "0xABD6F4", Offset = "0xABD6F4", VA = "0xABD6F4", Slot = "4")]
	public virtual void Init(VRControllerMapper mapper)
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0xABD73C", Offset = "0xABD73C", VA = "0xABD73C", Slot = "5")]
	public virtual Vector3 GetControllerVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0xABD760", Offset = "0xABD760", VA = "0xABD760", Slot = "6")]
	public virtual void InitPlatformSpecific()
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xABD764", Offset = "0xABD764", VA = "0xABD764", Slot = "7")]
	public virtual void InputDevicePresent()
	{
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xABD850", Offset = "0xABD850", VA = "0xABD850", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xABDA5C", Offset = "0xABDA5C", VA = "0xABDA5C", Slot = "9")]
	public virtual void HapticFeedback(ushort _frequency)
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0xABDAD0", Offset = "0xABDAD0", VA = "0xABDAD0")]
	public VRControllerMapperSub()
	{
	}
}
[Token(Token = "0x20003AB")]
public class VRControllerMapperSubPico : VRControllerMapperSub
{
	[Token(Token = "0x600172D")]
	[Address(RVA = "0xABDAD8", Offset = "0xABDAD8", VA = "0xABDAD8", Slot = "6")]
	public override void InitPlatformSpecific()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xABDF7C", Offset = "0xABDF7C", VA = "0xABDF7C", Slot = "9")]
	public override void HapticFeedback(ushort _frequency)
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xABE050", Offset = "0xABE050", VA = "0xABE050")]
	public VRControllerMapperSubPico()
	{
	}
}
[Token(Token = "0x20003AD")]
public class VRInputManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class ControllerInputSet
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public InputActionReference inputTrigger;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public InputActionReference inputButtonOne;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public InputActionReference inputButtonTwo;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public InputActionReference inputMovement;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public InputActionReference inputMenu;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public InputActionReference thumbDown;

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xABE274", Offset = "0xABE274", VA = "0xABE274")]
		public ControllerInputSet()
		{
		}
	}

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ControllerInputSet> controllerInputSet;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionAsset actionAsset;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRInputManager _instance;

	[Token(Token = "0x17000192")]
	public static VRInputManager Instance
	{
		[Token(Token = "0x6001738")]
		[Address(RVA = "0xABDDF0", Offset = "0xABDDF0", VA = "0xABDDF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xABE1A4", Offset = "0xABE1A4", VA = "0xABE1A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xABE26C", Offset = "0xABE26C", VA = "0xABE26C")]
	public VRInputManager()
	{
	}
}
[Token(Token = "0x20003AF")]
public class XRDevice
{
	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.XR.InputDevice headDevice;

	[Token(Token = "0x600173B")]
	[Address(RVA = "0xABE27C", Offset = "0xABE27C", VA = "0xABE27C")]
	public XRDevice()
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0xABA0F0", Offset = "0xABA0F0", VA = "0xABA0F0")]
	public static bool IsHMDMounted()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003B0")]
public class TadaPostBossfight : MonoBehaviour
{
	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_musician[] musicians;

	[Token(Token = "0x600173D")]
	[Address(RVA = "0xABE2BC", Offset = "0xABE2BC", VA = "0xABE2BC")]
	public void PlayTada(bool play)
	{
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0xABE490", Offset = "0xABE490", VA = "0xABE490")]
	private void StopAnimation()
	{
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0xABE498", Offset = "0xABE498", VA = "0xABE498")]
	public TadaPostBossfight()
	{
	}
}
[Token(Token = "0x20003B1")]
public class TakeScreenshot : MonoBehaviour
{
	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TakeScreenshots;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CameraToPNG screenshotTaker;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool thumbUp;

	[Token(Token = "0x6001740")]
	[Address(RVA = "0xABE4A0", Offset = "0xABE4A0", VA = "0xABE4A0")]
	public static void ToggleScreenshots()
	{
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0xABE5F0", Offset = "0xABE5F0", VA = "0xABE5F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0xABE668", Offset = "0xABE668", VA = "0xABE668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0xABE6E0", Offset = "0xABE6E0", VA = "0xABE6E0")]
	private void TakeShot(VRControllerMapper vrMapper)
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xABE78C", Offset = "0xABE78C", VA = "0xABE78C")]
	public TakeScreenshot()
	{
	}
}
[Token(Token = "0x20003B2")]
public class TargetShippingPerimeter : MonoBehaviour
{
	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject placementPrefab;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wpDummy;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float amountToPlace;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer renderer;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> buoys;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> gaps;

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xABE79C", Offset = "0xABE79C", VA = "0xABE79C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xABED00", Offset = "0xABED00", VA = "0xABED00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xABE7C8", Offset = "0xABE7C8", VA = "0xABE7C8")]
	private void PlaceBuoys()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xABED44", Offset = "0xABED44", VA = "0xABED44")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xABEEB0", Offset = "0xABEEB0", VA = "0xABEEB0")]
	public TargetShippingPerimeter()
	{
	}
}
[Token(Token = "0x20003B3")]
public class TentacleBeastMouth : CollisionBase
{
	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MouthSFXScriptableObject mouthSFX;

	[Token(Token = "0x600174A")]
	[Address(RVA = "0xABEEC0", Offset = "0xABEEC0", VA = "0xABEEC0", Slot = "5")]
	public override void CollisionDictChangedNonRB(Collider collider, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0xABEFB0", Offset = "0xABEFB0", VA = "0xABEFB0")]
	public TentacleBeastMouth()
	{
	}
}
[Token(Token = "0x20003B4")]
public class TentacleSFX : MonoBehaviour
{
	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic tentacleLogic;

	[Token(Token = "0x600174C")]
	[Address(RVA = "0xABEFB8", Offset = "0xABEFB8", VA = "0xABEFB8")]
	private void OnCollisionEnter(Collision _collision)
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0xABF068", Offset = "0xABF068", VA = "0xABF068")]
	private void OnCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0xABF114", Offset = "0xABF114", VA = "0xABF114")]
	public TentacleSFX()
	{
	}
}
[Token(Token = "0x20003B5")]
public class TentacleSFXGenerator : MonoBehaviour
{
	[Token(Token = "0x20003B6")]
	[CompilerGenerated]
	private sealed class <HapticFeedback>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleSFXGenerator <>4__this;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitForce;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <num>5__2;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <forceFactor>5__3;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ushort <val>5__4;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xABFAD8", Offset = "0xABFAD8", VA = "0xABFAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xABFB20", Offset = "0xABFB20", VA = "0xABFB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xABF808", Offset = "0xABF808", VA = "0xABF808")]
		[DebuggerHidden]
		public <HapticFeedback>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xABF8DC", Offset = "0xABF8DC", VA = "0xABF8DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xABF8E0", Offset = "0xABF8E0", VA = "0xABF8E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xABFAE0", Offset = "0xABFAE0", VA = "0xABFAE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float CoolTime;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float globalCoolDown;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] LastTimePlayed;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float globalLastTimePlayed;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] ImpactForceRange;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastImpact;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string[] InputSound;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EventInstance[] impactInstances;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventDescription[] impactEventDescriptions;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PARAMETER_ID[] impactParameterIds;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TentacleLogic tentacleLogic;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float strongest;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastTimeRetriggerSFX;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool bypass;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int instanceCount;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool collisionEvents;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float minHaptic;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float hapticInc;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int hapticRounds;

	[Token(Token = "0x600174F")]
	[Address(RVA = "0xABF11C", Offset = "0xABF11C", VA = "0xABF11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0xABF30C", Offset = "0xABF30C", VA = "0xABF30C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0xABF404", Offset = "0xABF404", VA = "0xABF404")]
	public void BoneCollisionEvent(Collision _collision, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0xABF774", Offset = "0xABF774", VA = "0xABF774")]
	public void BoneCollisionExit(Collision _collision, TentacleLogic _tentacleLogic)
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0xABF784", Offset = "0xABF784", VA = "0xABF784")]
	[IteratorStateMachine(typeof(<HapticFeedback>d__23))]
	private IEnumerator HapticFeedback(float hitForce)
	{
		return null;
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0xABF830", Offset = "0xABF830", VA = "0xABF830")]
	public TentacleSFXGenerator()
	{
	}
}
[Token(Token = "0x20003B7")]
public class Grabbable : MonoBehaviour
{
	[Token(Token = "0x20003B8")]
	public delegate void OnGrabObjectDelegate(bool _isGrabbed, VRControllerMapper controller);

	[Token(Token = "0x20003B9")]
	public delegate void OnSpawnFreezeGrabDelegate(Grabbable _grabbable);

	[Token(Token = "0x20003BA")]
	[CompilerGenerated]
	private sealed class <CollisionToggleTimer>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable <>4__this;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xAC23C8", Offset = "0xAC23C8", VA = "0xAC23C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xAC2410", Offset = "0xAC2410", VA = "0xAC2410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xAC18EC", Offset = "0xAC18EC", VA = "0xAC18EC")]
		[DebuggerHidden]
		public <CollisionToggleTimer>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xAC21CC", Offset = "0xAC21CC", VA = "0xAC21CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xAC21D0", Offset = "0xAC21D0", VA = "0xAC21D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xAC23D0", Offset = "0xAC23D0", VA = "0xAC23D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initialKinematic;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsGrabbed;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool spawnFreeze;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SuckerGrabber> MySuckerGrabber;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerMapper controller;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rb;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool usePullFeedback;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float disableCollisionReleaseVelocity;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static VRControllerMapper lastUsedGrabbableController;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool stopDetachCall;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool initialHasGravity;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool wasGrabbed;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool carryingOver;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useDebugIsGrabbed;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool debugIsGrabbed;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CollisionDetectionMode originalCollisionDetectionMode;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int layerTentaclePhobic;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Collider> allColliders;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool disableTentacleCollisionsOnGrab;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Grabbable[] ChainedGrabbables;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initDone;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<TentacleLogic> connectedTentacles;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CarryOver_base carryOver;

	[Token(Token = "0x1400006C")]
	public event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x600175B")]
		[Address(RVA = "0xABFB28", Offset = "0xABFB28", VA = "0xABFB28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600175C")]
		[Address(RVA = "0xABFBC4", Offset = "0xABFBC4", VA = "0xABFBC4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006D")]
	public static event OnSpawnFreezeGrabDelegate OnSpawnFreezeGrab
	{
		[Token(Token = "0x600175D")]
		[Address(RVA = "0xABFC60", Offset = "0xABFC60", VA = "0xABFC60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600175E")]
		[Address(RVA = "0xABFD18", Offset = "0xABFD18", VA = "0xABFD18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0xABFDD0", Offset = "0xABFDD0", VA = "0xABFDD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0xAC0180", Offset = "0xAC0180", VA = "0xAC0180")]
	public void Init()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0xAC02C8", Offset = "0xAC02C8", VA = "0xAC02C8")]
	public void SpawnerInit()
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0xAC0384", Offset = "0xAC0384", VA = "0xAC0384")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0xAC038C", Offset = "0xAC038C", VA = "0xAC038C")]
	private void CheckPhysicsProperties()
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0xAC05B0", Offset = "0xAC05B0", VA = "0xAC05B0")]
	public void ToggleCollidersCollisionAgainst(bool which, Collider tentacleCollider)
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0xABFF4C", Offset = "0xABFF4C", VA = "0xABFF4C")]
	public void GetAllColliders()
	{
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0xAC06F0", Offset = "0xAC06F0", VA = "0xAC06F0")]
	public bool GetIsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0xAC070C", Offset = "0xAC070C", VA = "0xAC070C")]
	public void GrabbedAllergy(float _duration)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0xAC0A10", Offset = "0xAC0A10", VA = "0xAC0A10")]
	public void DropMe()
	{
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0xAC0B88", Offset = "0xAC0B88", VA = "0xAC0B88")]
	public static void DetachTentaclesFor(GameObject _go)
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34")]
	public bool UnGluePressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0xAC01BC", Offset = "0xAC01BC", VA = "0xAC01BC")]
	public static void RBKinematicHack(Rigidbody _rb, bool _isKinematic)
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0xAC0DB0", Offset = "0xAC0DB0", VA = "0xAC0DB0")]
	public void SetStatus(bool _isGrabbed, SuckerGrabber _mySuckerGrabber, VRControllerMapper _controller, bool chainTrigger = false)
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0xAC1578", Offset = "0xAC1578", VA = "0xAC1578")]
	public void SwooshSFX(Vector3 vel)
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0xAC12AC", Offset = "0xAC12AC", VA = "0xAC12AC")]
	private void VelocityCorrection()
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xAC1178", Offset = "0xAC1178", VA = "0xAC1178")]
	private void DisableCollisionReleaseCheck(TentacleLogic tLogic)
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xAC17C8", Offset = "0xAC17C8", VA = "0xAC17C8")]
	public void DisableTentacleCollision(float duration = 0.2f)
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xAC1868", Offset = "0xAC1868", VA = "0xAC1868")]
	[IteratorStateMachine(typeof(<CollisionToggleTimer>d__47))]
	private IEnumerator CollisionToggleTimer(float duration)
	{
		return null;
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xAC1914", Offset = "0xAC1914", VA = "0xAC1914")]
	public void HapticFeedbackAttachedTentacles(TentacleLogic.HapticType type = TentacleLogic.HapticType.prettyShort)
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xAC1BBC", Offset = "0xAC1BBC", VA = "0xAC1BBC")]
	public bool HasSuckersAttached()
	{
		return default(bool);
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xAC1C0C", Offset = "0xAC1C0C", VA = "0xAC1C0C")]
	public void StartLoad(bool carrOverActive = false)
	{
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xAC1D28", Offset = "0xAC1D28", VA = "0xAC1D28")]
	public void EndLoad()
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xAC1E18", Offset = "0xAC1E18", VA = "0xAC1E18")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x20003BB")]
public class GrabberControll : MonoBehaviour
{
	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool grabbing;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grabbed;

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xAC2418", Offset = "0xAC2418", VA = "0xAC2418")]
	public GrabberControll()
	{
	}
}
[Token(Token = "0x20003BC")]
public class SetupChain : MonoBehaviour
{
	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lastElement;

	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer skin;

	[Token(Token = "0x4001733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] tipBones;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] WirstBones;

	[Token(Token = "0x6001786")]
	[Address(RVA = "0xAC2420", Offset = "0xAC2420", VA = "0xAC2420")]
	public void SetUpwards()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0xAC2758", Offset = "0xAC2758", VA = "0xAC2758")]
	public void SetDownwards()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0xAC2B5C", Offset = "0xAC2B5C", VA = "0xAC2B5C")]
	public void SetupColliders()
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0xAC2DA4", Offset = "0xAC2DA4", VA = "0xAC2DA4")]
	public void ResetCenterOfMass()
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0xAC2E3C", Offset = "0xAC2E3C", VA = "0xAC2E3C")]
	public void SetupStretchyJoints()
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0xAC3340", Offset = "0xAC3340", VA = "0xAC3340")]
	public SetupChain()
	{
	}
}
[Token(Token = "0x20003BD")]
public class VRControllerGestureTracker : MonoBehaviour
{
	[Token(Token = "0x4001735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody controllerA;

	[Token(Token = "0x4001736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody controllerB;

	[Token(Token = "0x4001737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeForPose;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float poseTimer;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float controllerVSAngles;

	[Token(Token = "0x600178C")]
	[Address(RVA = "0xAC3348", Offset = "0xAC3348", VA = "0xAC3348")]
	private void Start()
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0xAC334C", Offset = "0xAC334C", VA = "0xAC334C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0xAC3420", Offset = "0xAC3420", VA = "0xAC3420")]
	private void TrackNO()
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0xAC3510", Offset = "0xAC3510", VA = "0xAC3510")]
	private void TrackOK()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0xAC3674", Offset = "0xAC3674", VA = "0xAC3674")]
	public VRControllerGestureTracker()
	{
	}
}
[Token(Token = "0x20003BE")]
public class SetUpTentacleSystem : MonoBehaviour
{
	[Token(Token = "0x20003BF")]
	public delegate void ChangeRigPositionDelegate(Vector3 rigPos);

	[Token(Token = "0x20003C0")]
	public delegate void VRSetupIntialisedDelegate(SetUpTentacleSystem tSystem);

	[Token(Token = "0x20003C1")]
	public delegate void ControllerActiveDelegate(int _id, bool active);

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic rightTentacle;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TentacleLogic leftTentacle;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftController;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightController;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRControllerMapper helperLeft;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRControllerMapper helperRight;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool leftControllerActive;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool rightControllerActive;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 deviceOffset;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 deviceRotation;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float sizeCompensation;

	[Token(Token = "0x4001749")]
	public const float sizeCompDefault = 0.25f;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float tentacleScale;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform cameraRig;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 startPosition;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 basePosition;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 startRotation;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera VRCamera;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool initialised;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject headFloatDetector;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject headFloatGo;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject SmoothCamPrefab;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool smoothCamMode;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool carryOverEnabled;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SetUpTentacleSystem _instance;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] minMax;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CameraSmooth smoothCam;

	[Token(Token = "0x17000197")]
	public static SetUpTentacleSystem Instance
	{
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xABBC4C", Offset = "0xABBC4C", VA = "0xABBC4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400006E")]
	public static event ChangeRigPositionDelegate OnChangeRigPosition
	{
		[Token(Token = "0x6001791")]
		[Address(RVA = "0xAC3684", Offset = "0xAC3684", VA = "0xAC3684")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001792")]
		[Address(RVA = "0xAC373C", Offset = "0xAC373C", VA = "0xAC373C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400006F")]
	public static event VRSetupIntialisedDelegate OnTentacleSystemInitialised
	{
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xAC37F4", Offset = "0xAC37F4", VA = "0xAC37F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001794")]
		[Address(RVA = "0xAC38B0", Offset = "0xAC38B0", VA = "0xAC38B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000070")]
	public static event ControllerActiveDelegate OnControllerActive
	{
		[Token(Token = "0x6001795")]
		[Address(RVA = "0xAC396C", Offset = "0xAC396C", VA = "0xAC396C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xAC3A28", Offset = "0xAC3A28", VA = "0xAC3A28")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0xAC3AE4", Offset = "0xAC3AE4", VA = "0xAC3AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0xAC3D60", Offset = "0xAC3D60", VA = "0xAC3D60")]
	private VRControllerMapper InitTentacle(TentacleLogic _tentacleLogic, VRControllerMapper _helper, Transform _controller, int _id)
	{
		return null;
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xAC4CC4", Offset = "0xAC4CC4", VA = "0xAC4CC4")]
	private void DoAttach(TentacleLogic _tentacleLogic, Transform _controller)
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xAC4EC8", Offset = "0xAC4EC8", VA = "0xAC4EC8")]
	public void EndLoadCarryOverCleanUp()
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xAC5064", Offset = "0xAC5064", VA = "0xAC5064")]
	public void LevelResetSizeCompensation()
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xAC5214", Offset = "0xAC5214", VA = "0xAC5214")]
	public void RepositionRig()
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xAC3E50", Offset = "0xAC3E50", VA = "0xAC3E50")]
	public void SetTentacleScale(float _which)
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xAC530C", Offset = "0xAC530C", VA = "0xAC530C")]
	public void SetCollision(bool _which)
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xAC5348", Offset = "0xAC5348", VA = "0xAC5348")]
	public float[] GetMinMaxHeight()
	{
		return null;
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xAC53E0", Offset = "0xAC53E0", VA = "0xAC53E0")]
	public float GetHeightForFactor(float _sizeCompensation)
	{
		return default(float);
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xAC53F8", Offset = "0xAC53F8", VA = "0xAC53F8")]
	public float GetFactorForheight(float _height)
	{
		return default(float);
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xAC5084", Offset = "0xAC5084", VA = "0xAC5084")]
	public void SetSizeCompensation(bool _resetPositionAndRotation = true)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xAC5460", Offset = "0xAC5460", VA = "0xAC5460")]
	public Vector3 GetRigPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xAC5488", Offset = "0xAC5488", VA = "0xAC5488")]
	public void DebugToggleTentacles(int whichTentacle)
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xAC54D8", Offset = "0xAC54D8", VA = "0xAC54D8")]
	public void DebugSetTentacles(int whichTentacle, bool isActive)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xAC5514", Offset = "0xAC5514", VA = "0xAC5514")]
	public void LevelResetTentacles()
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0xAC3D4C", Offset = "0xAC3D4C", VA = "0xAC3D4C")]
	private void DeviceAdjust()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0xABBDC8", Offset = "0xABBDC8", VA = "0xABBDC8")]
	public void VisualSetTentacles(int _id, bool _which)
	{
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0xAC5658", Offset = "0xAC5658", VA = "0xAC5658")]
	public int GetActiveControllers()
	{
		return default(int);
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0xABD8F8", Offset = "0xABD8F8", VA = "0xABD8F8")]
	public void SetTentacles(int _id, bool _which)
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0xAC5678", Offset = "0xAC5678", VA = "0xAC5678")]
	[ContextMenu("TestFullResetTentacle")]
	public void TestFullResetTentacle()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xAC56A4", Offset = "0xAC56A4", VA = "0xAC56A4")]
	[ContextMenu("InGameResetTentacle")]
	public void InGameResetTentacle()
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xAC558C", Offset = "0xAC558C", VA = "0xAC558C")]
	public void ResetTentacle(int _controllerID, bool inGameReset = false)
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xAC56D0", Offset = "0xAC56D0", VA = "0xAC56D0")]
	private void DoResetTentacle(TentacleLogic _tentacleLogic, Transform _controller, bool _controllerActive, bool inGameReset = false)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xAC5E1C", Offset = "0xAC5E1C", VA = "0xAC5E1C")]
	public void ToggleSmoothCam()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xAC609C", Offset = "0xAC609C", VA = "0xAC609C")]
	public void ToggleFlyCam()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xAC60C8", Offset = "0xAC60C8", VA = "0xAC60C8")]
	public bool GetFlyCam()
	{
		return default(bool);
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xAC5E2C", Offset = "0xAC5E2C", VA = "0xAC5E2C")]
	[ContextMenu("SmoothCam")]
	public void SetSmoothCam(bool active)
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xAC60FC", Offset = "0xAC60FC", VA = "0xAC60FC")]
	public void CarryOverCheck()
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xAC3F2C", Offset = "0xAC3F2C", VA = "0xAC3F2C")]
	private void HeadWaterDetector()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0xAC629C", Offset = "0xAC629C", VA = "0xAC629C")]
	public SetUpTentacleSystem()
	{
	}
}
[Token(Token = "0x20003C2")]
public class SloppyTentacleInfection : MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> collisions;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float newDuration;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody colRB;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float overrideDuration;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isGrabbed;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable grab;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ignoreGrabbing;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool ignoreTriggers;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRControllerMapper controller;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isCrystal;

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0xAC6740", Offset = "0xAC6740", VA = "0xAC6740")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0xAC6864", Offset = "0xAC6864", VA = "0xAC6864")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0xAC699C", Offset = "0xAC699C", VA = "0xAC699C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xAC6AD4", Offset = "0xAC6AD4", VA = "0xAC6AD4")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xAC6C2C", Offset = "0xAC6C2C", VA = "0xAC6C2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xAC6C34", Offset = "0xAC6C34", VA = "0xAC6C34")]
	private void TentacleCheck(bool doSound = false)
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xAC6EA8", Offset = "0xAC6EA8", VA = "0xAC6EA8")]
	private void OnCollisionEnterCheck(Collider collider)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xAC6F84", Offset = "0xAC6F84", VA = "0xAC6F84")]
	private void CollisionExitCheck(Collider collider)
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xAC71D4", Offset = "0xAC71D4", VA = "0xAC71D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xAC73AC", Offset = "0xAC73AC", VA = "0xAC73AC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xAC74BC", Offset = "0xAC74BC", VA = "0xAC74BC")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xAC75E8", Offset = "0xAC75E8", VA = "0xAC75E8")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xAC76F0", Offset = "0xAC76F0", VA = "0xAC76F0")]
	public SloppyTentacleInfection()
	{
	}
}
[Token(Token = "0x20003C3")]
public class SloppyTentacleInfectionTriggers : MonoBehaviour
{
	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float durationOverride;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float newDuration;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCrystal;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody colRB;

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xAC7780", Offset = "0xAC7780", VA = "0xAC7780")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xAC7918", Offset = "0xAC7918", VA = "0xAC7918")]
	public SloppyTentacleInfectionTriggers()
	{
	}
}
[Token(Token = "0x20003C4")]
public class SuckerGrabber : MonoBehaviour
{
	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TentacleLogic Tentacle;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJoint ConnectedJoint;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Grabbing;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool grabPress;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool contracted;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startScale;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRControllerMapper controller;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool grabsGlue;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool Injuried;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween tween;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Collider> myColliders;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Joint> myJoints;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody myRB;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable grab;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Glue glue;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SoftJointLimitSpring lim;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JointDrive jd;

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xAC792C", Offset = "0xAC792C", VA = "0xAC792C")]
	private void Start()
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xAC79B8", Offset = "0xAC79B8", VA = "0xAC79B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xAC79B4", Offset = "0xAC79B4", VA = "0xAC79B4")]
	private void SetSuckerScale()
	{
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0xAC79CC", Offset = "0xAC79CC", VA = "0xAC79CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0xAC8178", Offset = "0xAC8178", VA = "0xAC8178")]
	private bool InjuryIssues()
	{
		return default(bool);
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0xAC7B68", Offset = "0xAC7B68", VA = "0xAC7B68")]
	private void Grab(Collider col)
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0xAC8300", Offset = "0xAC8300", VA = "0xAC8300")]
	public void ReleaseObject(GameObject _releaseObject)
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0xAC8774", Offset = "0xAC8774", VA = "0xAC8774")]
	public void TriggerUp()
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xAC8368", Offset = "0xAC8368", VA = "0xAC8368")]
	private void ReleaseAllJoints(bool nonGlueRelease = false, [Optional] GameObject specificGameObject)
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0xAC8878", Offset = "0xAC8878", VA = "0xAC8878")]
	public void NonGlueRelease()
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0xAC8884", Offset = "0xAC8884", VA = "0xAC8884")]
	public void TriggerDown()
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0xAC8890", Offset = "0xAC8890", VA = "0xAC8890")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0xAC89A4", Offset = "0xAC89A4", VA = "0xAC89A4")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0xAC8A34", Offset = "0xAC8A34", VA = "0xAC8A34")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0xAC8B84", Offset = "0xAC8B84", VA = "0xAC8B84")]
	private Vector3 GetMeanVector(Vector3[] positions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0xAC8C2C", Offset = "0xAC8C2C", VA = "0xAC8C2C")]
	public SuckerGrabber()
	{
	}
}
[Token(Token = "0x20003C5")]
public class TentacleConfig : MonoBehaviour
{
	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TentacleJointHelper> jointHelpers;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TentacleSettings tentacleSettings;

	[Token(Token = "0x400177B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve weightCurve;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve fakeColliderCurve;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lifeEditing;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Tween> weightTweens;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tween scaleTween;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<Rigidbody, float> massesDict;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string fileName;

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0xAC8D04", Offset = "0xAC8D04", VA = "0xAC8D04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0xAC9618", Offset = "0xAC9618", VA = "0xAC9618")]
	public void SetTentacleConfig(TentacleSettings tSettings, float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0xAC8D30", Offset = "0xAC8D30", VA = "0xAC8D30")]
	public void GetSettings()
	{
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0xAC9694", Offset = "0xAC9694", VA = "0xAC9694")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0xAC9730", Offset = "0xAC9730", VA = "0xAC9730")]
	private void UpdateTweenValues()
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0xAC9054", Offset = "0xAC9054", VA = "0xAC9054")]
	public void SetRegularWeightCurve(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xAC93B0", Offset = "0xAC93B0", VA = "0xAC93B0")]
	public void SetFakeColliderCurve(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xAC8E60", Offset = "0xAC8E60", VA = "0xAC8E60")]
	private void GetJointHelpers()
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xAC98D0", Offset = "0xAC98D0", VA = "0xAC98D0")]
	public TentacleConfig()
	{
	}
}
[Token(Token = "0x20003C7")]
public class TentacleInjured : MonoBehaviour
{
	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xAC9BCC", Offset = "0xAC9BCC", VA = "0xAC9BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xAC9BD4", Offset = "0xAC9BD4", VA = "0xAC9BD4")]
	private void SetInjured(bool injured)
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xAC9C1C", Offset = "0xAC9C1C", VA = "0xAC9C1C")]
	public TentacleInjured()
	{
	}
}
[Token(Token = "0x20003C8")]
public class TentacleJointHelper : MonoBehaviour
{
	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint MyJoint;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool RepositionGameObject;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MyJointAttach;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MyReceiverAttach;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TentacleJointHelper NextJointHelper;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FakeCollider;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody RB;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DoNotAdjust;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TentacleJointHelper lastJointHelper;

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xAC9C24", Offset = "0xAC9C24", VA = "0xAC9C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xAC9CD8", Offset = "0xAC9CD8", VA = "0xAC9CD8")]
	private void Repo()
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xAC9FC8", Offset = "0xAC9FC8", VA = "0xAC9FC8")]
	[ContextMenu("REFRESH HELPER")]
	public void GetNextJointHelper()
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xACA054", Offset = "0xACA054", VA = "0xACA054")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xACA058", Offset = "0xACA058", VA = "0xACA058")]
	public TentacleJointHelper()
	{
	}
}
[Token(Token = "0x20003C9")]
public class TentacleLogic : MonoBehaviour
{
	[Token(Token = "0x20003CA")]
	public enum HapticType
	{
		[Token(Token = "0x40017EE")]
		prettyShort,
		[Token(Token = "0x40017EF")]
		weird,
		[Token(Token = "0x40017F0")]
		tick
	}

	[Token(Token = "0x20003CB")]
	public delegate void OnGrabObjectDelegate(Grabbable grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x20003CC")]
	public delegate void OnUnGrabObjectDelegate(GameObject grabbedObject, VRControllerMapper controller);

	[Token(Token = "0x20003CD")]
	public delegate void OnTooStretchyRipOffDelegate(List<GameObject> _grabbedStuff, TentacleLogic _tentacleLogic);

	[Token(Token = "0x20003CE")]
	[CompilerGenerated]
	private sealed class <SloppyHapticFeedback>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xACE008", Offset = "0xACE008", VA = "0xACE008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xACE050", Offset = "0xACE050", VA = "0xACE050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xACDB3C", Offset = "0xACDB3C", VA = "0xACDB3C")]
		[DebuggerHidden]
		public <SloppyHapticFeedback>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xACDB64", Offset = "0xACDB64", VA = "0xACDB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xACDB68", Offset = "0xACDB68", VA = "0xACDB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xACE010", Offset = "0xACE010", VA = "0xACE010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CF")]
	[CompilerGenerated]
	private sealed class <HapticFeedbackShort>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xACE1CC", Offset = "0xACE1CC", VA = "0xACE1CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xACE214", Offset = "0xACE214", VA = "0xACE214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xACE058", Offset = "0xACE058", VA = "0xACE058")]
		[DebuggerHidden]
		public <HapticFeedbackShort>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xACE080", Offset = "0xACE080", VA = "0xACE080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xACE084", Offset = "0xACE084", VA = "0xACE084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xACE1D4", Offset = "0xACE1D4", VA = "0xACE1D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[CompilerGenerated]
	private sealed class <HapticFeedbackWeird>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xACE664", Offset = "0xACE664", VA = "0xACE664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xACE6AC", Offset = "0xACE6AC", VA = "0xACE6AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xACE21C", Offset = "0xACE21C", VA = "0xACE21C")]
		[DebuggerHidden]
		public <HapticFeedbackWeird>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xACE244", Offset = "0xACE244", VA = "0xACE244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xACE248", Offset = "0xACE248", VA = "0xACE248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xACE66C", Offset = "0xACE66C", VA = "0xACE66C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	[CompilerGenerated]
	private sealed class <ReEnableCollision>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xACE790", Offset = "0xACE790", VA = "0xACE790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xACE7D8", Offset = "0xACE7D8", VA = "0xACE7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xACE6B4", Offset = "0xACE6B4", VA = "0xACE6B4")]
		[DebuggerHidden]
		public <ReEnableCollision>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xACE6DC", Offset = "0xACE6DC", VA = "0xACE6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xACE6E0", Offset = "0xACE6E0", VA = "0xACE6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xACE798", Offset = "0xACE798", VA = "0xACE798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D2")]
	[CompilerGenerated]
	private sealed class <BusyGrab>d__155 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xACE8E4", Offset = "0xACE8E4", VA = "0xACE8E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xACE92C", Offset = "0xACE92C", VA = "0xACE92C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xACE7E0", Offset = "0xACE7E0", VA = "0xACE7E0")]
		[DebuggerHidden]
		public <BusyGrab>d__155(int <>1__state)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xACE808", Offset = "0xACE808", VA = "0xACE808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xACE80C", Offset = "0xACE80C", VA = "0xACE80C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xACE8EC", Offset = "0xACE8EC", VA = "0xACE8EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	[CompilerGenerated]
	private sealed class <PullHapticFeedback>d__163 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleLogic <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0xACEB44", Offset = "0xACEB44", VA = "0xACEB44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xACEB8C", Offset = "0xACEB8C", VA = "0xACEB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xACE934", Offset = "0xACE934", VA = "0xACE934")]
		[DebuggerHidden]
		public <PullHapticFeedback>d__163(int <>1__state)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xACE95C", Offset = "0xACE95C", VA = "0xACE95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xACE960", Offset = "0xACE960", VA = "0xACE960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xACEB4C", Offset = "0xACEB4C", VA = "0xACEB4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int controllerID;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TentacleObject;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody[] Bones;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] BonesJoints;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] BonesSizes;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] originalRot;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] originalPosition;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] originalJointRotation;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] lastRotations;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] lastRotationsAccum;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] lastPositions;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] lastVelocities;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] lastPositionDifs;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int totalBones;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int totalBonesJoints;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ConfigurableJoint ControllerAttachJoint;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Rigidbody BoneRBWithControllerAttachJoint;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody ControllerAttachedKinematicRB;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SuckerGrabber[] Suckers;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool BusyGrabbing;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool grabStaySticky;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float maxStretchFactor;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxStretchFactorTotal;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool sloppyTentacles;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool sloppyFeedback;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sloppyDuration;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<GameObject> grabbedStuff;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SkinnedMeshRenderer tentacleMeshRenderer;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VRControllerMapper myControllerHelper;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Material tentacleMat;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float sloppyWait;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float tentacleLength;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool ignoreCollisionsAgainstGrabbed;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public LayerMask penetrationTest;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Rigidbody, TentacleLogic> tentacleBonesLookup;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LayerMask TentacleLayerRight;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public LayerMask TentacleLayerLeft;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool scaleUpdateAnchors;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform trans;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int tentacleScale;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3[] anchor;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3[] connectedAnchor;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float scaleStore;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int glueGrabbed;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static TentacleLogic tentacleLogic;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TentacleSFXGenerator soundGen;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float stretchFactor;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool suckerScaling;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[EventRef]
	public string GrabSound;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[EventRef]
	public string SnapSound;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[EventRef]
	public string ReleaseSound;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject[] Bandages;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TentacleConfig tentacleConfig;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float controllerBoneStartDistance;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject soundEmitterPrefab;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool hideRenderers;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TentacleSettings tentacleSettingsOriginal;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TentacleSettings tentacleSettingsDefault;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TentacleSettings tentacleSettingsSloppy;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool logThis;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float rumbleForce;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float ripDistance;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float size;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float maxErractic;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float distSqr;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float erraticMaximum;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float fullSize;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float rumbleFactor;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool initialised;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
	private bool busyGrabRunning;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float erraticReset;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public List<Collider> myColliders;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int frameCounter;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float penetrationScaleFudge;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool penetrationCheck;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AlignToBezierCurve tentacleGlove;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public HumanEmoSFX elviraEmoSFX;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool noPenetration;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Collider[] hitColliders;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool useForces;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float minSloppy;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float maxSloppy;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int crazyCount;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float maxTime;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float minTime;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float frequency;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float maxPullForceForDisconnect;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float minRumbleDistance;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private bool rumbleRunning;

	[Token(Token = "0x14000071")]
	public static event OnGrabObjectDelegate OnGrab
	{
		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xAC68E0", Offset = "0xAC68E0", VA = "0xAC68E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xAC6A18", Offset = "0xAC6A18", VA = "0xAC6A18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000072")]
	public static event OnUnGrabObjectDelegate OnUnGrab
	{
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xACA068", Offset = "0xACA068", VA = "0xACA068")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xACA124", Offset = "0xACA124", VA = "0xACA124")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000073")]
	public static event OnTooStretchyRipOffDelegate OnTooStretchyRipOff
	{
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xACA1E0", Offset = "0xACA1E0", VA = "0xACA1E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xACA29C", Offset = "0xACA29C", VA = "0xACA29C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xACA358", Offset = "0xACA358", VA = "0xACA358")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xACA46C", Offset = "0xACA46C", VA = "0xACA46C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0xACA57C", Offset = "0xACA57C", VA = "0xACA57C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xACA640", Offset = "0xACA640", VA = "0xACA640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xAC57B4", Offset = "0xAC57B4", VA = "0xAC57B4")]
	public void ResetDeviceAdjust()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xAC59DC", Offset = "0xAC59DC", VA = "0xAC59DC")]
	public void ResetDefaultTentacleConfig()
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xACA704", Offset = "0xACA704", VA = "0xACA704")]
	[ContextMenu("Release Tentacle")]
	public void DebugReleaseTentacle()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xACA730", Offset = "0xACA730", VA = "0xACA730")]
	private void CheckCollidersForPenetration()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xAC1740", Offset = "0xAC1740", VA = "0xAC1740")]
	public void SetTentacleCollisions(bool _which = true)
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xACA95C", Offset = "0xACA95C", VA = "0xACA95C")]
	public bool IsTentacleTip(Rigidbody _rb, int lastBones)
	{
		return default(bool);
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xAC5234", Offset = "0xAC5234", VA = "0xAC5234")]
	public void SetTentacleScale(float _which)
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xACA9D8", Offset = "0xACA9D8", VA = "0xACA9D8")]
	private void SetLayer(Collider col)
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xAC41AC", Offset = "0xAC41AC", VA = "0xAC41AC")]
	[ContextMenu("INIT")]
	public void InitTentacle(Transform _controller)
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xACAD54", Offset = "0xACAD54", VA = "0xACAD54")]
	private void CalculateBonesSizes()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xACB0EC", Offset = "0xACB0EC", VA = "0xACB0EC")]
	private void StoreStartPosition()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xACABB8", Offset = "0xACABB8", VA = "0xACABB8")]
	public void StoreAnchors()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xACB468", Offset = "0xACB468", VA = "0xACB468")]
	private void ScaleUpdateAnchors()
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xAC3CB4", Offset = "0xAC3CB4", VA = "0xAC3CB4")]
	public static void InitTBonesLookup()
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xACAF30", Offset = "0xACAF30", VA = "0xACAF30")]
	public void AddBonesToLookup()
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xACB5B4", Offset = "0xACB5B4", VA = "0xACB5B4")]
	public static TentacleLogic GetTentacleFromBR(Rigidbody boneRB)
	{
		return null;
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xAC4104", Offset = "0xAC4104", VA = "0xAC4104")]
	public void LockBones(bool _isKinematic)
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xACB668", Offset = "0xACB668", VA = "0xACB668")]
	public void OverrideDefaultTentacleSettings(TentacleSettings newSettings)
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xACA544", Offset = "0xACA544", VA = "0xACA544")]
	private void ChangeWeight(float smoothTime = 0f)
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xABF04C", Offset = "0xABF04C", VA = "0xABF04C")]
	public void BoneCollisionEvent(Collision _collision)
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xABF0F0", Offset = "0xABF0F0", VA = "0xABF0F0")]
	public void BoneCollisionExit(Collision _collision)
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xACB68C", Offset = "0xACB68C", VA = "0xACB68C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xACBB84", Offset = "0xACBB84", VA = "0xACBB84")]
	[ContextMenu("MakeForeverSloppy")]
	private void MakeForeverSloppy()
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0xACBB14", Offset = "0xACBB14", VA = "0xACBB14")]
	private void SloppyCheck()
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0xACBB90", Offset = "0xACBB90", VA = "0xACBB90")]
	public void DoSloppyFeedbackOnly(float _time)
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0xAC0934", Offset = "0xAC0934", VA = "0xAC0934")]
	public void SloppyTentacles(float _duration, bool _useForces = true)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0xACBC78", Offset = "0xACBC78", VA = "0xACBC78")]
	private int Flop()
	{
		return default(int);
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0xACBCA0", Offset = "0xACBCA0", VA = "0xACBCA0")]
	private void SloppyForce(float _f = 200f)
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0xACBC28", Offset = "0xACBC28", VA = "0xACBC28")]
	private void SloppyFeedback()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0xACBEC4", Offset = "0xACBEC4", VA = "0xACBEC4")]
	private float RandomRange(float min, float max, float factor = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0xACBE50", Offset = "0xACBE50", VA = "0xACBE50")]
	[IteratorStateMachine(typeof(<SloppyHapticFeedback>d__129))]
	private IEnumerator SloppyHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0xAC1B34", Offset = "0xAC1B34", VA = "0xAC1B34")]
	public void StartHapticFeedback(HapticType type = HapticType.prettyShort)
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xACBEE8", Offset = "0xACBEE8", VA = "0xACBEE8")]
	private void HapticFeedbackTick()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xACBF14", Offset = "0xACBF14", VA = "0xACBF14")]
	[IteratorStateMachine(typeof(<HapticFeedbackShort>d__132))]
	private IEnumerator HapticFeedbackShort()
	{
		return null;
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xACBF88", Offset = "0xACBF88", VA = "0xACBF88")]
	[IteratorStateMachine(typeof(<HapticFeedbackWeird>d__133))]
	private IEnumerator HapticFeedbackWeird()
	{
		return null;
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xAC59F0", Offset = "0xAC59F0", VA = "0xAC59F0")]
	public void EndSloppyTentacles()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0xAC5A08", Offset = "0xAC5A08", VA = "0xAC5A08")]
	public void RepositionBones(bool velChange = true)
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xACB6EC", Offset = "0xACB6EC", VA = "0xACB6EC")]
	public void BonesCheck()
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0xACBFFC", Offset = "0xACBFFC", VA = "0xACBFFC")]
	private void CrazyCountCheck()
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0xACC0C8", Offset = "0xACC0C8", VA = "0xACC0C8")]
	private void TooStretchyRipEvent()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0xACC1E4", Offset = "0xACC1E4", VA = "0xACC1E4")]
	[IteratorStateMachine(typeof(<ReEnableCollision>d__140))]
	private IEnumerator ReEnableCollision()
	{
		return null;
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0xACC258", Offset = "0xACC258", VA = "0xACC258")]
	public void StartBusyGrab()
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0xACC2F4", Offset = "0xACC2F4", VA = "0xACC2F4")]
	public void StopBusyGrab()
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0xAC22FC", Offset = "0xAC22FC", VA = "0xAC22FC")]
	public void IgoreCollisionAgainstTentacle(Grabbable _grabbable, bool which)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0xAC8180", Offset = "0xAC8180", VA = "0xAC8180")]
	public void GrabObject(GameObject go, VRControllerMapper _controller, [Optional] Grabbable _grabbable)
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0xACC31C", Offset = "0xACC31C", VA = "0xACC31C")]
	public bool ObjectIsGrabbed(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0xACC374", Offset = "0xACC374", VA = "0xACC374")]
	public void TriggerDown(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0xACC3F4", Offset = "0xACC3F4", VA = "0xACC3F4")]
	public void TriggerUp(VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xACC3A0", Offset = "0xACC3A0", VA = "0xACC3A0")]
	private void GrabStuff()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xAC4F00", Offset = "0xAC4F00", VA = "0xAC4F00")]
	public void CleanUpCarryOver()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xAC612C", Offset = "0xAC612C", VA = "0xAC612C")]
	public void DropAllExceptCarryOver(bool carrOverActive = false)
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xAC5850", Offset = "0xAC5850", VA = "0xAC5850")]
	public void DropAll()
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0xAC0B24", Offset = "0xAC0B24", VA = "0xAC0B24")]
	public void ReleaseObject(GameObject _releaseObject)
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0xACC420", Offset = "0xACC420", VA = "0xACC420")]
	public void ReleaseNonGlueSuckers()
	{
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0xAC87AC", Offset = "0xAC87AC", VA = "0xAC87AC")]
	public void NonGlueReleaseCall(GameObject go)
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0xACC48C", Offset = "0xACC48C", VA = "0xACC48C")]
	[IteratorStateMachine(typeof(<BusyGrab>d__155))]
	public IEnumerator BusyGrab()
	{
		return null;
	}

	[Token(Token = "0x600183A")]
	[Address(RVA = "0xACC500", Offset = "0xACC500", VA = "0xACC500")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0xACC054", Offset = "0xACC054", VA = "0xACC054")]
	[IteratorStateMachine(typeof(<PullHapticFeedback>d__163))]
	private IEnumerator PullHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0xACC67C", Offset = "0xACC67C", VA = "0xACC67C")]
	[ContextMenu("Injured")]
	public void InjureTentacle()
	{
	}

	[Token(Token = "0x600183D")]
	[Address(RVA = "0xAC55B4", Offset = "0xAC55B4", VA = "0xAC55B4")]
	public void Injured(bool status, int _which = -1)
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0xACC688", Offset = "0xACC688", VA = "0xACC688")]
	public TentacleLogic()
	{
	}
}
[Token(Token = "0x20003D4")]
[CreateAssetMenu(fileName = "New Tentacle Settings", menuName = "TentacleSettings", order = 1)]
public class TentacleSettings : ScriptableObject
{
	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve weightCurve;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fakeColliderCurve;

	[Token(Token = "0x600186F")]
	[Address(RVA = "0xACEB94", Offset = "0xACEB94", VA = "0xACEB94")]
	public TentacleSettings()
	{
	}
}
[Token(Token = "0x20003D5")]
public class TentacleSwoosh : MonoBehaviour
{
	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool swooshed;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tentacleThreshold;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float controllerThreshold;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRControllerMapper controller;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string swooshEvent;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 controllerVelocity;

	[Token(Token = "0x6001870")]
	[Address(RVA = "0xACEB9C", Offset = "0xACEB9C", VA = "0xACEB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001871")]
	[Address(RVA = "0xACEC68", Offset = "0xACEC68", VA = "0xACEC68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0xACEE78", Offset = "0xACEE78", VA = "0xACEE78")]
	public TentacleSwoosh()
	{
	}
}
[Token(Token = "0x20003D6")]
public class TentacleSyringe : MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	public delegate void SyringeInsertedDelegate(TentacleSyringe syringe);

	[Token(Token = "0x20003D8")]
	public delegate void SyringeFilledDelegate(TentacleSyringe syringe);

	[Token(Token = "0x20003D9")]
	public delegate void SyringeUnloadStartedDelegate(TentacleSyringe syringe);

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FixedJoint fixedJoint;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syringeInserted;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable grabbable;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform liquid;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform puller;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable pullerGrabbable;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool wasGrabbedAfterInsert;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject visualExtension;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float maxPullDistance;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool bloodCompleted;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ConfigurableJoint joint;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParachuteRespawnTracker tracker;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool unloadSyringe;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 originalTargetPosition;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EntityDefinition triggerEntity;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool syringeUnloaded;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private JointDrive yDrive;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private IEnumerator lockTogether;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dist;

	[Token(Token = "0x14000074")]
	public static event SyringeInsertedDelegate OnSyringeInserted
	{
		[Token(Token = "0x6001873")]
		[Address(RVA = "0xACEE80", Offset = "0xACEE80", VA = "0xACEE80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xACEF38", Offset = "0xACEF38", VA = "0xACEF38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000075")]
	public static event SyringeFilledDelegate OnSyringeFilled
	{
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xACEFF0", Offset = "0xACEFF0", VA = "0xACEFF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xACF0AC", Offset = "0xACF0AC", VA = "0xACF0AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000076")]
	public static event SyringeUnloadStartedDelegate OnSyringeUnloadStarted
	{
		[Token(Token = "0x6001877")]
		[Address(RVA = "0xACF168", Offset = "0xACF168", VA = "0xACF168")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xACF224", Offset = "0xACF224", VA = "0xACF224")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xACF2E0", Offset = "0xACF2E0", VA = "0xACF2E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xACF320", Offset = "0xACF320", VA = "0xACF320")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xACF394", Offset = "0xACF394", VA = "0xACF394")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xACF408", Offset = "0xACF408", VA = "0xACF408", Slot = "4")]
	public virtual void OnOOB(ParachuteRespawnTracker paraTracker, bool _addDebris, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xACF4B0", Offset = "0xACF4B0", VA = "0xACF4B0")]
	private void ReleaseSyringe(bool completed = false)
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xACF610", Offset = "0xACF610", VA = "0xACF610")]
	private void DefaultSyringeValues()
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xACF684", Offset = "0xACF684", VA = "0xACF684")]
	[ContextMenu("StartUnloadSyringe")]
	private void StartUnloadSyringe(Rigidbody colRB)
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xACF76C", Offset = "0xACF76C", VA = "0xACF76C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xACF7F8", Offset = "0xACF7F8", VA = "0xACF7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xACFBB0", Offset = "0xACFBB0", VA = "0xACFBB0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xACFEC4", Offset = "0xACFEC4", VA = "0xACFEC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xAD0000", Offset = "0xAD0000", VA = "0xAD0000")]
	public TentacleSyringe()
	{
	}
}
[Token(Token = "0x20003DA")]
public class TentacleTest : MonoBehaviour
{
	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer tentacle;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] bones;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bonesOn;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool tentacleOn;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x6001891")]
	[Address(RVA = "0xAD0400", Offset = "0xAD0400", VA = "0xAD0400")]
	private void Start()
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0xAD0494", Offset = "0xAD0494", VA = "0xAD0494")]
	private void Update()
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xAD042C", Offset = "0xAD042C", VA = "0xAD042C")]
	private void SetBones()
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0xAD0584", Offset = "0xAD0584", VA = "0xAD0584")]
	public TentacleTest()
	{
	}
}
[Token(Token = "0x20003DB")]
public class TentacleTouchExcavation : MonoBehaviour
{
	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelDirector_C0999 levelDirector;

	[Token(Token = "0x6001895")]
	[Address(RVA = "0xAD0594", Offset = "0xAD0594", VA = "0xAD0594")]
	private void Start()
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0xAD0598", Offset = "0xAD0598", VA = "0xAD0598")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0xAD0610", Offset = "0xAD0610", VA = "0xAD0610")]
	public TentacleTouchExcavation()
	{
	}
}
[Token(Token = "0x20003DC")]
public class TentaculumReplay : MonoBehaviour
{
	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level tentaculumLevel;

	[Token(Token = "0x6001898")]
	[Address(RVA = "0xAD0618", Offset = "0xAD0618", VA = "0xAD0618")]
	private void Start()
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0xAD084C", Offset = "0xAD084C", VA = "0xAD084C")]
	public TentaculumReplay()
	{
	}
}
[Token(Token = "0x20003DD")]
public class ThreatLevelShow : MonoBehaviour
{
	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int startingThreatLevel;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useThreatLevelMultiplier;

	[Token(Token = "0x600189A")]
	[Address(RVA = "0xAD0854", Offset = "0xAD0854", VA = "0xAD0854")]
	private void Start()
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0xAD0994", Offset = "0xAD0994", VA = "0xAD0994")]
	public ThreatLevelShow()
	{
	}
}
[Token(Token = "0x20003DE")]
public class TimeScaleIndependentUpdate : MonoBehaviour
{
	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseWhenGameIsPaused;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double previousTimeSinceStartup;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double realtimeSinceStartup;

	[Token(Token = "0x170001A4")]
	public double deltaTime
	{
		[Token(Token = "0x600189E")]
		[Address(RVA = "0xAD09FC", Offset = "0xAD09FC", VA = "0xAD09FC")]
		[CompilerGenerated]
		get
		{
			return default(double);
		}
		[Token(Token = "0x600189F")]
		[Address(RVA = "0xAD0A04", Offset = "0xAD0A04", VA = "0xAD0A04")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0xAD09A4", Offset = "0xAD09A4", VA = "0xAD09A4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0xAD09C4", Offset = "0xAD09C4", VA = "0xAD09C4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xAD0A0C", Offset = "0xAD0A0C", VA = "0xAD0A0C")]
	public TimeScaleIndependentUpdate()
	{
	}
}
[Token(Token = "0x20003DF")]
public class TipManager : MonoBehaviour
{
	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuestSystem questSytem;

	[Token(Token = "0x4001832")]
	private const string generalTipString = "titleTip_phase";

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> allTips;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int gameTipPhase;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TipManager _instance;

	[Token(Token = "0x170001A5")]
	public static TipManager Instance
	{
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xAD0A1C", Offset = "0xAD0A1C", VA = "0xAD0A1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0xAD0BA8", Offset = "0xAD0BA8", VA = "0xAD0BA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0xAD0C28", Offset = "0xAD0C28", VA = "0xAD0C28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0xAD0CA8", Offset = "0xAD0CA8", VA = "0xAD0CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0xAD0CAC", Offset = "0xAD0CAC", VA = "0xAD0CAC")]
	public void InitTips()
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0xAD0D4C", Offset = "0xAD0D4C", VA = "0xAD0D4C")]
	public void ReadTips(string searchword, int _currentTipPhase)
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0xAD0F10", Offset = "0xAD0F10", VA = "0xAD0F10")]
	private void CallUpdateTips(bool editorLevelStart = false)
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0xAD0CB0", Offset = "0xAD0CB0", VA = "0xAD0CB0")]
	[ContextMenu("UpdateTips")]
	public void UpdateTips()
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0xAD0F14", Offset = "0xAD0F14", VA = "0xAD0F14")]
	private void CheckThrough(bool writeTips)
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0xAD11E0", Offset = "0xAD11E0", VA = "0xAD11E0")]
	[ContextMenu("LogTip")]
	public void LogTip()
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0xAD1248", Offset = "0xAD1248", VA = "0xAD1248")]
	public string GetTipID()
	{
		return null;
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0xAD12E0", Offset = "0xAD12E0", VA = "0xAD12E0")]
	public TipManager()
	{
	}
}
[Token(Token = "0x20003E0")]
public class TitleType : MonoBehaviour
{
	[Token(Token = "0x20003E1")]
	public enum Type
	{
		[Token(Token = "0x4001841")]
		main,
		[Token(Token = "0x4001842")]
		location,
		[Token(Token = "0x4001843")]
		tip,
		[Token(Token = "0x4001844")]
		unlocks
	}

	[Token(Token = "0x20003E2")]
	public enum TitleMode
	{
		[Token(Token = "0x4001846")]
		none,
		[Token(Token = "0x4001847")]
		loadStartScene,
		[Token(Token = "0x4001848")]
		resetLevel,
		[Token(Token = "0x4001849")]
		backToMenu,
		[Token(Token = "0x400184A")]
		startContinueStory,
		[Token(Token = "0x400184B")]
		nextLevel,
		[Token(Token = "0x400184C")]
		options,
		[Token(Token = "0x400184D")]
		backFromOptions,
		[Token(Token = "0x400184E")]
		startGameButton,
		[Token(Token = "0x400184F")]
		sandbox,
		[Token(Token = "0x4001850")]
		unlockedSandbox,
		[Token(Token = "0x4001851")]
		unlockedSideQuest,
		[Token(Token = "0x4001852")]
		unlockedObjects,
		[Token(Token = "0x4001853")]
		unlockedMagnet,
		[Token(Token = "0x4001854")]
		manual
	}

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type titleType;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 offset;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string titleText;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string titleTextID;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string tipText;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string tipTextID;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string locationText;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string locationTextID;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRCameraViewSmoothingIDP myVRCameraViewSmoothingIDP;

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0xAD12F0", Offset = "0xAD12F0", VA = "0xAD12F0")]
	public static string CheckString(string txt)
	{
		return null;
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0xAD1410", Offset = "0xAD1410", VA = "0xAD1410")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0xAD1490", Offset = "0xAD1490", VA = "0xAD1490")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0xAD1510", Offset = "0xAD1510", VA = "0xAD1510")]
	private void ShowTitle(TitleMode _titleMode)
	{
	}

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0xAD1FF4", Offset = "0xAD1FF4", VA = "0xAD1FF4")]
	public static void GetTitle(TitleMode _titleMode, Type _titleType, Level _level, bool editorCall = false)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0xAD1858", Offset = "0xAD1858", VA = "0xAD1858")]
	public static string MainTitle(TitleMode _titleMode, Level _level)
	{
		return null;
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0xAD1B00", Offset = "0xAD1B00", VA = "0xAD1B00")]
	public static string Tip(TitleMode _titleMode, Level _level, bool editorCall = false)
	{
		return null;
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0xAD1E2C", Offset = "0xAD1E2C", VA = "0xAD1E2C")]
	public static string Location(TitleMode _titleMode, Level _level)
	{
		return null;
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0xAD202C", Offset = "0xAD202C", VA = "0xAD202C")]
	public static void GetContent()
	{
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0xAD210C", Offset = "0xAD210C", VA = "0xAD210C")]
	public TitleType()
	{
	}
}
[Token(Token = "0x20003E3")]
public class ToggleConveyor : MonoBehaviour
{
	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material conveyorBeltMat;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float conveyorBeltSpeed;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool conveyorActive;

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0xAD2114", Offset = "0xAD2114", VA = "0xAD2114")]
	private void Start()
	{
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0xAD21C0", Offset = "0xAD21C0", VA = "0xAD21C0")]
	private void Toggle()
	{
	}

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0xAD211C", Offset = "0xAD211C", VA = "0xAD211C")]
	private void SetConveyor(bool _which)
	{
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0xAD21D0", Offset = "0xAD21D0", VA = "0xAD21D0")]
	public ToggleConveyor()
	{
	}
}
[Token(Token = "0x20003E4")]
public class TrackerORB : MonoBehaviour
{
	[Token(Token = "0x20003E5")]
	[CompilerGenerated]
	private sealed class <FireLaser>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackerORB <>4__this;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xAD2DC8", Offset = "0xAD2DC8", VA = "0xAD2DC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xAD2E10", Offset = "0xAD2E10", VA = "0xAD2E10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xAD2788", Offset = "0xAD2788", VA = "0xAD2788")]
		[DebuggerHidden]
		public <FireLaser>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xAD2C50", Offset = "0xAD2C50", VA = "0xAD2C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xAD2C54", Offset = "0xAD2C54", VA = "0xAD2C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xAD2DD0", Offset = "0xAD2DD0", VA = "0xAD2DD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 rot;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float followSpeed;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float trackingSpeedFactor;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentTrackingFactor;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rayStart;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform visualLaser;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 visualScale;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> trespassingID;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LayerMask myLayermask;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float duration;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion originalRotation;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Transform> targetsList;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float distance;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform idleTarget;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform idleTargetCenter;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float maxTrackingDistance;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool detachAndFollow;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject deactivateGroup;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform myParent;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool inActive;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float timer;

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0xAD21E0", Offset = "0xAD21E0", VA = "0xAD21E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0xAD238C", Offset = "0xAD238C", VA = "0xAD238C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0xAD23D0", Offset = "0xAD23D0", VA = "0xAD23D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0xAD2450", Offset = "0xAD2450", VA = "0xAD2450")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0xAD2314", Offset = "0xAD2314", VA = "0xAD2314")]
	private void StartIdleTargets()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0xAD24D0", Offset = "0xAD24D0", VA = "0xAD24D0")]
	private void IdleTargets()
	{
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0xAD263C", Offset = "0xAD263C", VA = "0xAD263C")]
	private void Trespassing(Rigidbody trespasser, string _areaID, NoTrespassing.Type _type)
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0xAD2714", Offset = "0xAD2714", VA = "0xAD2714")]
	[IteratorStateMachine(typeof(<FireLaser>d__30))]
	private IEnumerator FireLaser()
	{
		return null;
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0xAD27B0", Offset = "0xAD27B0", VA = "0xAD27B0")]
	private void LaserVisual()
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0xAD28A4", Offset = "0xAD28A4", VA = "0xAD28A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0xAD2B5C", Offset = "0xAD2B5C", VA = "0xAD2B5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0xAD2C2C", Offset = "0xAD2C2C", VA = "0xAD2C2C")]
	public TrackerORB()
	{
	}
}
[Token(Token = "0x20003E6")]
public class TrailerTools : MonoBehaviour
{
	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGroup;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool trailerToolsEnabled;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputField;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Dropdown dropDown;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] detachPressed;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool released;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool useCameraCenter;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform controllerTransform;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform humanHighlighter;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform humanConvoLoadedHighlighter;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image modeButtonImage;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TrailerTools _instance;

	[Token(Token = "0x170001A8")]
	public static TrailerTools Instance
	{
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xAD2E18", Offset = "0xAD2E18", VA = "0xAD2E18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A9")]
	public bool TrailerToolsEnabled
	{
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xAD307C", Offset = "0xAD307C", VA = "0xAD307C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xAD3084", Offset = "0xAD3084", VA = "0xAD3084")]
		set
		{
		}
	}

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xAD2FA4", Offset = "0xAD2FA4", VA = "0xAD2FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xAD302C", Offset = "0xAD302C", VA = "0xAD302C")]
	private void Start()
	{
	}

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xAD3030", Offset = "0xAD3030", VA = "0xAD3030")]
	public void ToggleSelectionMode()
	{
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xAD3004", Offset = "0xAD3004", VA = "0xAD3004")]
	private void SetTrailerTools(bool which)
	{
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0xAD3090", Offset = "0xAD3090", VA = "0xAD3090")]
	public void InjectPressed()
	{
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0xAD3300", Offset = "0xAD3300", VA = "0xAD3300")]
	public void HideToolsButton()
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0xAD31D0", Offset = "0xAD31D0", VA = "0xAD31D0")]
	private BubbleToCharacter GetTargetBubble(bool convoLoadedRequired)
	{
		return null;
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0xAD3308", Offset = "0xAD3308", VA = "0xAD3308")]
	public void OpenDebuggerButton()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xAD33AC", Offset = "0xAD33AC", VA = "0xAD33AC")]
	public void TalkPressed()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xAD346C", Offset = "0xAD346C", VA = "0xAD346C")]
	public void ClearFocusedPressed()
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0xAD3544", Offset = "0xAD3544", VA = "0xAD3544")]
	public void NoMovingFocused()
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xAD3658", Offset = "0xAD3658", VA = "0xAD3658")]
	public void SetForwardFocusedPressed()
	{
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0xAD36F8", Offset = "0xAD36F8", VA = "0xAD36F8")]
	public void LookToCameraPressed()
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xAD37A8", Offset = "0xAD37A8", VA = "0xAD37A8")]
	public void HideConvosPressed()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0xAD3874", Offset = "0xAD3874", VA = "0xAD3874")]
	public void ClearAllConvos()
	{
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0xAD3A84", Offset = "0xAD3A84", VA = "0xAD3A84")]
	public TrailerTools()
	{
	}
}
[Token(Token = "0x20003E7")]
public class TrespassingAllowed : MonoBehaviour
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool remove;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool explode;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float chancePercentage;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ignore;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool anyZone;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> zoneID;

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xAD3AF0", Offset = "0xAD3AF0", VA = "0xAD3AF0")]
	public TrespassingAllowed()
	{
	}
}
[Token(Token = "0x20003E8")]
public class TriggerRepeater : MonoBehaviour
{
	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DroneRotors droneRotors;

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0xAD3B08", Offset = "0xAD3B08", VA = "0xAD3B08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0xAD3B24", Offset = "0xAD3B24", VA = "0xAD3B24")]
	public TriggerRepeater()
	{
	}
}
[Token(Token = "0x20003E9")]
public class TriggerTargetIgnore : MonoBehaviour
{
	[Token(Token = "0x60018E3")]
	[Address(RVA = "0xAD3B2C", Offset = "0xAD3B2C", VA = "0xAD3B2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0xAD3B30", Offset = "0xAD3B30", VA = "0xAD3B30")]
	private void Update()
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0xAD3B34", Offset = "0xAD3B34", VA = "0xAD3B34")]
	public TriggerTargetIgnore()
	{
	}
}
[Token(Token = "0x20003EA")]
public class TryCatchRecenter : MonoBehaviour
{
	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRInputSubsystem _inputSubSystem;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _boundaries;

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0xAD3B3C", Offset = "0xAD3B3C", VA = "0xAD3B3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0xAD3B4C", Offset = "0xAD3B4C", VA = "0xAD3B4C")]
	private void VRAwake()
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0xAD3E74", Offset = "0xAD3E74", VA = "0xAD3E74")]
	private void BoundaryChanged(XRInputSubsystem inputSubsystem)
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0xAD3EF8", Offset = "0xAD3EF8", VA = "0xAD3EF8")]
	private void TrackingOriginUpdated(XRInputSubsystem inputSubsystem)
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0xAD3EFC", Offset = "0xAD3EFC", VA = "0xAD3EFC")]
	public TryCatchRecenter()
	{
	}
}
[Token(Token = "0x20003EB")]
public class TutorialBillboards : MonoBehaviour
{
	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmProShadow;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D[] deviceImages;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D[] deviceImagesOculusOverrides;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material billboardMat;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlatformManager.deviceController deviceControllerList;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string locaID;

	[Token(Token = "0x400188E")]
	private const string category = "control_";

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool usePlatformOverrides;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D fallBackTexture;

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0xAD3F04", Offset = "0xAD3F04", VA = "0xAD3F04")]
	private void Start()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0xAD3F58", Offset = "0xAD3F58", VA = "0xAD3F58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xAD3FD8", Offset = "0xAD3FD8", VA = "0xAD3FD8")]
	private void SetBillboard()
	{
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xAD41FC", Offset = "0xAD41FC", VA = "0xAD41FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xAD4284", Offset = "0xAD4284", VA = "0xAD4284")]
	public TutorialBillboards()
	{
	}
}
[Token(Token = "0x20003EC")]
public class TutorialSigns : MonoBehaviour
{
	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string locaID;

	[Token(Token = "0x4001893")]
	private const string category = "sign_";

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xAD428C", Offset = "0xAD428C", VA = "0xAD428C")]
	private void Start()
	{
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xAD4300", Offset = "0xAD4300", VA = "0xAD4300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xAD4304", Offset = "0xAD4304", VA = "0xAD4304")]
	public TutorialSigns()
	{
	}
}
[Token(Token = "0x20003ED")]
public class UFOLab : MonoBehaviour
{
	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConstructionTargetManual target;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody armRB;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody sensorRB;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject statusFeedback;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool blocked;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchButtonPhysical lever;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody clamp;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool lockedAtStart;

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xAD430C", Offset = "0xAD430C", VA = "0xAD430C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xAD4418", Offset = "0xAD4418", VA = "0xAD4418")]
	public void Block(bool which)
	{
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0xAD4314", Offset = "0xAD4314", VA = "0xAD4314")]
	public void Lock(bool which)
	{
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xAD4424", Offset = "0xAD4424", VA = "0xAD4424")]
	public UFOLab()
	{
	}
}
[Token(Token = "0x20003EE")]
public class EightSegmentDisplay : MonoBehaviour
{
	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] Digits;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] Numbers;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ID;

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xAD4434", Offset = "0xAD4434", VA = "0xAD4434")]
	public void SetNumber(int num, string _ID = "")
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0xAD45DC", Offset = "0xAD45DC", VA = "0xAD45DC")]
	public EightSegmentDisplay()
	{
	}
}
[Token(Token = "0x20003EF")]
public class GenericPhysicalButtonListener : MonoBehaviour
{
	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent pressEvent;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonTrigger ButtonTrigger;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isReleased;

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0xAD45E4", Offset = "0xAD45E4", VA = "0xAD45E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0xAD4630", Offset = "0xAD4630", VA = "0xAD4630")]
	public GenericPhysicalButtonListener()
	{
	}
}
[Token(Token = "0x20003F0")]
public class SwitchButton : MonoBehaviour
{
	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HingeJoint hinge;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isActivated;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool lastActivated;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool activatedTarget;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool switchLock;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool onDown;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool offDown;

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0xAD4640", Offset = "0xAD4640", VA = "0xAD4640")]
	private void Start()
	{
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0xAD4764", Offset = "0xAD4764", VA = "0xAD4764")]
	private void ToggleSwitch()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xAD4664", Offset = "0xAD4664", VA = "0xAD4664")]
	private void SetSwitch(bool _isActivated)
	{
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0xAD4818", Offset = "0xAD4818", VA = "0xAD4818")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0xAD4914", Offset = "0xAD4914", VA = "0xAD4914")]
	public void TellCollision(string which)
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xAD49E8", Offset = "0xAD49E8", VA = "0xAD49E8")]
	public SwitchButton()
	{
	}
}
[Token(Token = "0x20003F1")]
public class SwitchButtonCollider : MonoBehaviour
{
	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchButton buttonMain;

	[Token(Token = "0x6001901")]
	[Address(RVA = "0xAD49F0", Offset = "0xAD49F0", VA = "0xAD49F0")]
	public SwitchButtonCollider()
	{
	}
}
[Token(Token = "0x20003F2")]
public class SwitchButtonPhysical : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	public delegate void OnGroupButtonChangeDelegate(SwitchButtonPhysical _lever, string _groupID, bool mode);

	[Token(Token = "0x20003F4")]
	[CompilerGenerated]
	private sealed class <CollisionDisable>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchButtonPhysical <>4__this;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xAD5BE0", Offset = "0xAD5BE0", VA = "0xAD5BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xAD5C28", Offset = "0xAD5C28", VA = "0xAD5C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xAD559C", Offset = "0xAD559C", VA = "0xAD559C")]
		[DebuggerHidden]
		public <CollisionDisable>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xAD5A98", Offset = "0xAD5A98", VA = "0xAD5A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xAD5A9C", Offset = "0xAD5A9C", VA = "0xAD5A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xAD5BE8", Offset = "0xAD5BE8", VA = "0xAD5BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string LeverSound;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string buttonID;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string groupID;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool groupDeactivate;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string offText;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string onText;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro offTextTM;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro onTextTM;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HingeJoint hinge;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isActivated;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject activatedButton;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useMotor;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxAngle;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startRotation;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float startAngle;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Rigidbody rb;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool lastActivated;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool activatedTarget;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool switchLock;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private JointSpring js;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JointMotor m;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float targetAngle;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float pressThreshold;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float pressThresholdOverride;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool onDown;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool offDown;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool releaseAfterSwitch;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnEvent;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OffEvent;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isInitialised;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool useType;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool snapBack;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	[Header("can be moved but not activated")]
	public bool lockSwitch;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool callFirstActivation;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool grabbedOnlyActivation;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Grabbable switchGrabbable;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool useHingeGrabbable;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool useSpring;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool detachTentaclesOnForceLimit;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float forceLimit;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator collisionTimeout;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool suppressInitAudio;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool logging;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int dir;

	[Token(Token = "0x14000077")]
	public static event OnGroupButtonChangeDelegate OnGroupButtonChange
	{
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xAD49F8", Offset = "0xAD49F8", VA = "0xAD49F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001903")]
		[Address(RVA = "0xAD4AB0", Offset = "0xAD4AB0", VA = "0xAD4AB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0xAD4B68", Offset = "0xAD4B68", VA = "0xAD4B68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0xAD5060", Offset = "0xAD5060", VA = "0xAD5060")]
	[ContextMenu("LanguageChange")]
	private void LanguageChange()
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0xAD50E0", Offset = "0xAD50E0", VA = "0xAD50E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0xAD52C0", Offset = "0xAD52C0", VA = "0xAD52C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0xAD538C", Offset = "0xAD538C", VA = "0xAD538C")]
	public void SetStartValues()
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0xAD53C0", Offset = "0xAD53C0", VA = "0xAD53C0")]
	[ContextMenu("Toggle")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0xAD53DC", Offset = "0xAD53DC", VA = "0xAD53DC")]
	public void MultiLeverSwitchOff(bool _which, SwitchButtonPhysical caller)
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0xAD53F8", Offset = "0xAD53F8", VA = "0xAD53F8")]
	private void GroupButtonChange(SwitchButtonPhysical _lever, string _groupID, bool _which)
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0xAD4DD4", Offset = "0xAD4DD4", VA = "0xAD4DD4")]
	public void SetSwitch(bool _isActivated, bool noEventCall = false)
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0xAD54B8", Offset = "0xAD54B8", VA = "0xAD54B8")]
	private void AudioEvent()
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0xAD551C", Offset = "0xAD551C", VA = "0xAD551C")]
	private void SetToOff()
	{
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xAD5528", Offset = "0xAD5528", VA = "0xAD5528")]
	[IteratorStateMachine(typeof(<CollisionDisable>d__59))]
	private IEnumerator CollisionDisable()
	{
		return null;
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xAD55C4", Offset = "0xAD55C4", VA = "0xAD55C4")]
	private void SetCollision(bool which)
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xAD56A4", Offset = "0xAD56A4", VA = "0xAD56A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0xAD58F0", Offset = "0xAD58F0", VA = "0xAD58F0")]
	public SwitchButtonPhysical()
	{
	}
}
[Token(Token = "0x20003F5")]
public class SwitchButtonPhysical3States : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	public delegate void OnLeverUpdateDelegate(float _handOverValue, int _ID, int _speedfactor, int _maxSpeedSteps);

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string offText;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string onText;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro speedStepType;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro offTextTM;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro onTextTM;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HingeJoint hinge;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startAngle;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useMotor;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxAngle;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody rb;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private JointMotor m;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float targetAngle;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int dir;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pullDir;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float vel;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float handoverValue;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useType;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int ID;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int maxSpeedSteps;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int speedFactor;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int minStart;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float force;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float newTargetVelocity;

	[Token(Token = "0x14000078")]
	public static event OnLeverUpdateDelegate OnLeverUpdate
	{
		[Token(Token = "0x600191D")]
		[Address(RVA = "0xAD5C30", Offset = "0xAD5C30", VA = "0xAD5C30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600191E")]
		[Address(RVA = "0xAD5CE8", Offset = "0xAD5CE8", VA = "0xAD5CE8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xAD5DA0", Offset = "0xAD5DA0", VA = "0xAD5DA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0xAD5F5C", Offset = "0xAD5F5C", VA = "0xAD5F5C")]
	private void SetSpeedFactorVis()
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0xAD600C", Offset = "0xAD600C", VA = "0xAD600C")]
	public void StepSpeedFactor()
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0xAD602C", Offset = "0xAD602C", VA = "0xAD602C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0xAD6194", Offset = "0xAD6194", VA = "0xAD6194")]
	public SwitchButtonPhysical3States()
	{
	}
}
[Token(Token = "0x20003F7")]
public class TentacleTriggerButton : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	public delegate void TentacleTriggerButtonDelegate(TentacleTriggerButton button, string id, bool isUp);

	[Token(Token = "0x20003F9")]
	[CompilerGenerated]
	private sealed class <ButtonCooldown>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xAD76CC", Offset = "0xAD76CC", VA = "0xAD76CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xAD7714", Offset = "0xAD7714", VA = "0xAD7714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xAD6A0C", Offset = "0xAD6A0C", VA = "0xAD6A0C")]
		[DebuggerHidden]
		public <ButtonCooldown>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xAD75F4", Offset = "0xAD75F4", VA = "0xAD75F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xAD75F8", Offset = "0xAD75F8", VA = "0xAD75F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xAD76D4", Offset = "0xAD76D4", VA = "0xAD76D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FA")]
	[CompilerGenerated]
	private sealed class <ButtonPopup>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xAD77F4", Offset = "0xAD77F4", VA = "0xAD77F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xAD783C", Offset = "0xAD783C", VA = "0xAD783C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xAD6AA8", Offset = "0xAD6AA8", VA = "0xAD6AA8")]
		[DebuggerHidden]
		public <ButtonPopup>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xAD771C", Offset = "0xAD771C", VA = "0xAD771C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xAD7720", Offset = "0xAD7720", VA = "0xAD7720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xAD77FC", Offset = "0xAD77FC", VA = "0xAD77FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FB")]
	[CompilerGenerated]
	private sealed class <ButtonHapticFeedback>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TentacleTriggerButton <>4__this;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xAD7A20", Offset = "0xAD7A20", VA = "0xAD7A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xAD7A68", Offset = "0xAD7A68", VA = "0xAD7A68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xAD6E5C", Offset = "0xAD6E5C", VA = "0xAD6E5C")]
		[DebuggerHidden]
		public <ButtonHapticFeedback>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xAD7844", Offset = "0xAD7844", VA = "0xAD7844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xAD7848", Offset = "0xAD7848", VA = "0xAD7848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xAD7A28", Offset = "0xAD7A28", VA = "0xAD7A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonOff;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonOn;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool buttonIsOn;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool blocked;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool tentacleActivatedOnly;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool ignoreTriggers;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool momentarySwitch;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent ButtonDown;

	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent ButtonUp;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool wasDownBefore;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool useHapticFeedback;

	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool cameraNeedsToLookAt;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float cameraNeedsToLookAtAngle;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string buttonID;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string customSFX;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool playSFX;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRControllerMapper controller;

	[Token(Token = "0x14000079")]
	public static event TentacleTriggerButtonDelegate OnButtonPressed
	{
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xAD63F0", Offset = "0xAD63F0", VA = "0xAD63F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001929")]
		[Address(RVA = "0xAD64A8", Offset = "0xAD64A8", VA = "0xAD64A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0xAD6560", Offset = "0xAD6560", VA = "0xAD6560")]
	private void Awake()
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0xAD6990", Offset = "0xAD6990", VA = "0xAD6990")]
	public void SetButtonState(bool _which)
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0xAD6998", Offset = "0xAD6998", VA = "0xAD6998")]
	[IteratorStateMachine(typeof(<ButtonCooldown>d__23))]
	private IEnumerator ButtonCooldown()
	{
		return null;
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0xAD6A34", Offset = "0xAD6A34", VA = "0xAD6A34")]
	[IteratorStateMachine(typeof(<ButtonPopup>d__24))]
	private IEnumerator ButtonPopup()
	{
		return null;
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xAD6AD0", Offset = "0xAD6AD0", VA = "0xAD6AD0")]
	[ContextMenu("SimCallOn")]
	public void SimCallOn()
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xAD6ADC", Offset = "0xAD6ADC", VA = "0xAD6ADC")]
	private void CallEvents()
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xAD6C5C", Offset = "0xAD6C5C", VA = "0xAD6C5C")]
	private void DoHapticFeedback(GameObject _go)
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xAD6DE8", Offset = "0xAD6DE8", VA = "0xAD6DE8")]
	[IteratorStateMachine(typeof(<ButtonHapticFeedback>d__29))]
	private IEnumerator ButtonHapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xAD65F0", Offset = "0xAD65F0", VA = "0xAD65F0")]
	private void CheckForTentacles(bool _initForceOn = false)
	{
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xAD6E84", Offset = "0xAD6E84", VA = "0xAD6E84")]
	private bool LookAtCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0xAD70FC", Offset = "0xAD70FC", VA = "0xAD70FC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xAD7290", Offset = "0xAD7290", VA = "0xAD7290")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0xAD737C", Offset = "0xAD737C", VA = "0xAD737C")]
	public TentacleTriggerButton()
	{
	}
}
[Token(Token = "0x20003FC")]
public class UniversalRemote : MonoBehaviour
{
	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent pressEvent;

	[Token(Token = "0x600194D")]
	[Address(RVA = "0xAD7A70", Offset = "0xAD7A70", VA = "0xAD7A70")]
	public void Press()
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0xAD7A8C", Offset = "0xAD7A8C", VA = "0xAD7A8C")]
	public UniversalRemote()
	{
	}
}
[Token(Token = "0x20003FD")]
public class UIOnScreenConvo : MonoBehaviour
{
	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextMeshPro textMesh;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro localTextMesh;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform targetTrans;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camTrans;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color clr;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetDiffAngle;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minDist;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxDist;

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xAD7A94", Offset = "0xAD7A94", VA = "0xAD7A94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0xAD7B1C", Offset = "0xAD7B1C", VA = "0xAD7B1C")]
	public static void SetText(Transform _talker, string _text)
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0xAD7BA0", Offset = "0xAD7BA0", VA = "0xAD7BA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0xAD7EC4", Offset = "0xAD7EC4", VA = "0xAD7EC4")]
	public UIOnScreenConvo()
	{
	}
}
[Token(Token = "0x20003FE")]
public class UnlockTrigger : MonoBehaviour
{
	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideIfUnlocked;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Entity entity;

	[Token(Token = "0x6001953")]
	[Address(RVA = "0xAD7EE0", Offset = "0xAD7EE0", VA = "0xAD7EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0xAD7FFC", Offset = "0xAD7FFC", VA = "0xAD7FFC")]
	public void TriggerUnlock()
	{
	}

	[Token(Token = "0x6001955")]
	[Address(RVA = "0xAD80BC", Offset = "0xAD80BC", VA = "0xAD80BC")]
	public UnlockTrigger()
	{
	}
}
[Token(Token = "0x20003FF")]
public class UnparentOnStart : MonoBehaviour
{
	[Token(Token = "0x6001956")]
	[Address(RVA = "0xAD80CC", Offset = "0xAD80CC", VA = "0xAD80CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0xAD80F0", Offset = "0xAD80F0", VA = "0xAD80F0")]
	public UnparentOnStart()
	{
	}
}
[Token(Token = "0x2000400")]
public class AssetHelper
{
	[Token(Token = "0x2000401")]
	[CompilerGenerated]
	private sealed class <LoadAllAssets>d__0<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable where T : UnityEngine.Object
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x170001B2")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600195E")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001960")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195B")]
		[DebuggerHidden]
		public <LoadAllAssets>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600195C")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600195D")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001961")]
		[DebuggerHidden]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x6001958")]
	[IteratorStateMachine(typeof(<LoadAllAssets>d__0<>))]
	public static IEnumerable<T> LoadAllAssets<T>() where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6001959")]
	public static void MarkAllAssetsAsDirty<T>() where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xAD80F8", Offset = "0xAD80F8", VA = "0xAD80F8")]
	public AssetHelper()
	{
	}
}
[Token(Token = "0x2000402")]
public class PSScanner : MonoBehaviour
{
	[Token(Token = "0x6001963")]
	[Address(RVA = "0xAD8100", Offset = "0xAD8100", VA = "0xAD8100")]
	public PSScanner()
	{
	}
}
[Token(Token = "0x2000403")]
[RequireComponent(typeof(Material))]
public class UVAnimator : MonoBehaviour
{
	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2[] UVSpeeds;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6001964")]
	[Address(RVA = "0xAD8108", Offset = "0xAD8108", VA = "0xAD8108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0xAD810C", Offset = "0xAD810C", VA = "0xAD810C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0xAD8258", Offset = "0xAD8258", VA = "0xAD8258")]
	public UVAnimator()
	{
	}
}
[Token(Token = "0x2000404")]
public class VaultLogic : MonoBehaviour
{
	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isTriggered;

	[Token(Token = "0x6001967")]
	[Address(RVA = "0xAD8260", Offset = "0xAD8260", VA = "0xAD8260")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0xAD8280", Offset = "0xAD8280", VA = "0xAD8280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001969")]
	[Address(RVA = "0xAD8300", Offset = "0xAD8300", VA = "0xAD8300")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xAD8380", Offset = "0xAD8380", VA = "0xAD8380")]
	private void GluedTo(Glue _glue, Glued _glued, bool _isGlued)
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xAD8448", Offset = "0xAD8448", VA = "0xAD8448")]
	public void UnlockPlug()
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xAD8540", Offset = "0xAD8540", VA = "0xAD8540")]
	public void VaultJointBreak()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xAD8544", Offset = "0xAD8544", VA = "0xAD8544")]
	public VaultLogic()
	{
	}
}
[Token(Token = "0x2000405")]
public class C_HelicopterManagerDeliverMagnets : MonoBehaviour
{
	[Token(Token = "0x2000406")]
	public delegate void OnDroneSpawnedDelegate(Drone _drone);

	[Token(Token = "0x2000407")]
	public enum State
	{
		[Token(Token = "0x4001934")]
		none,
		[Token(Token = "0x4001935")]
		init,
		[Token(Token = "0x4001936")]
		routeTo,
		[Token(Token = "0x4001937")]
		deliveryWait,
		[Token(Token = "0x4001938")]
		routeBack
	}

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] waypoints;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public State routeState;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helicopterPrefab;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Drone helicopter;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool loopWayPoints;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool stopAtLastWaypoint;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject payloadPrefab;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool delegatesInit;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 hingeAxis;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool lockAngularLimits;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool dropPayloadOnDesinationReached;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool usePayload;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool randomWaypoint;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float manualMassAddon;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform exitTarget;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int startingWaypoint;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool enableCollisionWithPayload;

	[Token(Token = "0x1400007A")]
	public event OnDroneSpawnedDelegate OnDroneSpawned
	{
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xAD854C", Offset = "0xAD854C", VA = "0xAD854C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600196F")]
		[Address(RVA = "0xAD85E8", Offset = "0xAD85E8", VA = "0xAD85E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0xAD8684", Offset = "0xAD8684", VA = "0xAD8684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0xAD8688", Offset = "0xAD8688", VA = "0xAD8688")]
	private void Start()
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xAD8A78", Offset = "0xAD8A78", VA = "0xAD8A78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xAD8934", Offset = "0xAD8934", VA = "0xAD8934")]
	private void SetRoute()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xAD86A0", Offset = "0xAD86A0", VA = "0xAD86A0")]
	private void LoadChopper()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xAD9724", Offset = "0xAD9724", VA = "0xAD9724")]
	public void OnTargetReached(Transform t)
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xAD99AC", Offset = "0xAD99AC", VA = "0xAD99AC")]
	public void OnPackageDelivered(GameObject go)
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xAD9AF4", Offset = "0xAD9AF4", VA = "0xAD9AF4")]
	public C_HelicopterManagerDeliverMagnets()
	{
	}
}
[Token(Token = "0x2000408")]
public class DamageMaterials : MonoBehaviour
{
	[Token(Token = "0x2000409")]
	public enum State
	{
		[Token(Token = "0x4001940")]
		regular,
		[Token(Token = "0x4001941")]
		damaged,
		[Token(Token = "0x4001942")]
		burned
	}

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material regular;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material damaged;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material burned;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State materialState;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MaterialManager matManager;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyDamageMaterial;

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xAD9C6C", Offset = "0xAD9C6C", VA = "0xAD9C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0xAD9D1C", Offset = "0xAD9D1C", VA = "0xAD9D1C")]
	public void SetDamageMaterial(State _state)
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0xAD9E40", Offset = "0xAD9E40", VA = "0xAD9E40")]
	[ContextMenu("SetDamaged")]
	public void SetDamaged()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0xAD9E48", Offset = "0xAD9E48", VA = "0xAD9E48")]
	[ContextMenu("SetBurned")]
	public void SetBurned()
	{
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0xAD9E50", Offset = "0xAD9E50", VA = "0xAD9E50")]
	public DamageMaterials()
	{
	}
}
[Token(Token = "0x200040A")]
public class Drone : CollisionColliderBase
{
	[Token(Token = "0x200040B")]
	public delegate void OnTargetReachedDelegate(Transform target);

	[Token(Token = "0x200040C")]
	public delegate void OnTargetReachedStaticDelegate(Transform target);

	[Token(Token = "0x200040D")]
	[CompilerGenerated]
	private sealed class <GrabbedCheck>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drone <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xADD748", Offset = "0xADD748", VA = "0xADD748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xADD790", Offset = "0xADD790", VA = "0xADD790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xADBC0C", Offset = "0xADBC0C", VA = "0xADBC0C")]
		[DebuggerHidden]
		public <GrabbedCheck>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xADD668", Offset = "0xADD668", VA = "0xADD668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xADD66C", Offset = "0xADD66C", VA = "0xADD66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xADD750", Offset = "0xADD750", VA = "0xADD750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float power;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float realPower;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float turnSpeed;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxTurnSpeed;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minSpeedForMinTurnSpeed;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxVelocity;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 targetOffset;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float forceRangeMax;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minDistForForce;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float powerDistForceFactor;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxPitchAngle;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxRollAngle;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rollToTurnRateFactor;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float rollSpeed;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool heliThrust;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float groundEvasionBelow;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float waypointTreshold;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool stopAtWaypoint;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform target;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform[] targetWaypoints;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject waypointGroup;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject visual;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentWaypoint;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool IsGrabbed;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool RandomizeWaypoints;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool allowSameRandomWaypoint;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	public bool loopWaypoints;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool randomFirstWaypoint;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float speedForceFactorMax;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float velocityDebug;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Rigidbody rb;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform trans;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 rot;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 rotDiff;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform flyTrans;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float targetVelocityFactor;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float currentVisualZRot;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float rollToTurnRate;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 dir;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Quaternion qRot;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float dist;

	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float turnSpeedFactor;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float autoControlTimer;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float startDrag;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 visualRotStore;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 visualRotStoreLocal;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float unGrabSelfSteerWait;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float verticalAdjustSpeed;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PayloadManager payloadManager;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool pauseFlight;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool lookTowardsWP;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	public bool stopAtLastWaypoint;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Vector3 sway;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector3 maxSway;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool destroyed;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject[] deactivateOnDisabled;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Header("only relveant as start condition")]
	public bool justHover;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float mass;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<DroneRotors> rotorsList;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int damagedRotors;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int rotors;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool deactivateInWater;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Rigidbody[] attachedRBs;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool ignorePayloadDamage;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform noWPHelper;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool deactivated;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public bool isInWater;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 realVector;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private FloatRigidbody frb;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Grabbable grabbable;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 modTarget;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public Vector3 torqueTarget;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float uprightTorque;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float steerTorque;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 steerVec;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Quaternion torqueRot;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 torque;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 localRot;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float testRot;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float rotorDamageFactor;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float collisionVelocityDamageFactor;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float heloVelocityDamageTreshhold;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 rotDir;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float speedForceFactor;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Vector3 firstDir;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Vector3 forw;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float distForceFactor;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float powerDistForceFactorStore;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private Vector3 verticalPointAt;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 nrml;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 samePlaneTarget;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float vertDistForceFactor;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float step;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Vector3 newDir;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float targetSpeed;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float temp;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float visRotZTarget;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float rotVAlue;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private Vector3 crossProd;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector3 applyForce;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string lastWaypointCall;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private List<int> wpIndexes;

	[Token(Token = "0x1400007B")]
	public event OnTargetReachedDelegate OnTargetReached
	{
		[Token(Token = "0x6001981")]
		[Address(RVA = "0xAD95E8", Offset = "0xAD95E8", VA = "0xAD95E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001982")]
		[Address(RVA = "0xAD8C80", Offset = "0xAD8C80", VA = "0xAD8C80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007C")]
	public static event OnTargetReachedStaticDelegate OnTargetReachedStatic
	{
		[Token(Token = "0x6001983")]
		[Address(RVA = "0xAD9E60", Offset = "0xAD9E60", VA = "0xAD9E60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001984")]
		[Address(RVA = "0xAD9F18", Offset = "0xAD9F18", VA = "0xAD9F18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xAD9FD0", Offset = "0xAD9FD0", VA = "0xAD9FD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0xADA040", Offset = "0xADA040", VA = "0xADA040")]
	private void GroupCheck()
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0xADA25C", Offset = "0xADA25C", VA = "0xADA25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0xADA5D8", Offset = "0xADA5D8", VA = "0xADA5D8")]
	private void SetDeactivates(bool _mode)
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0xADA8A0", Offset = "0xADA8A0", VA = "0xADA8A0")]
	public void RegisterRotor(DroneRotors _rotor)
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0xADA988", Offset = "0xADA988", VA = "0xADA988")]
	public void ReportRotorsDamage(DroneRotors _rotor)
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0xADAB34", Offset = "0xADAB34", VA = "0xADAB34")]
	public void DamageRotors()
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0xADAC8C", Offset = "0xADAC8C", VA = "0xADAC8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0xADB09C", Offset = "0xADB09C", VA = "0xADB09C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0xADB3F8", Offset = "0xADB3F8", VA = "0xADB3F8")]
	private void PayloadmanagerPackageLoaded(GameObject _gameObject)
	{
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0xADB570", Offset = "0xADB570", VA = "0xADB570")]
	private void PayloadmanagerPackageUnLoaded(GameObject _gameObject)
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0xADB690", Offset = "0xADB690", VA = "0xADB690")]
	private void OnWaterStatusChange(bool _which)
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0xADB74C", Offset = "0xADB74C", VA = "0xADB74C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0xADB818", Offset = "0xADB818", VA = "0xADB818")]
	public void VehicleDamageDestroyCallback()
	{
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0xADB6AC", Offset = "0xADB6AC", VA = "0xADB6AC")]
	private void WaterCrash()
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0xADB8B8", Offset = "0xADB8B8", VA = "0xADB8B8")]
	private void DisableValues()
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0xADB8FC", Offset = "0xADB8FC", VA = "0xADB8FC")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0xADBAC8", Offset = "0xADBAC8", VA = "0xADBAC8")]
	public void ObjectUnGrabbed(GameObject go, VRControllerMapper controller)
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xADBB98", Offset = "0xADBB98", VA = "0xADBB98")]
	[IteratorStateMachine(typeof(<GrabbedCheck>d__97))]
	private IEnumerator GrabbedCheck()
	{
		return null;
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xADBC34", Offset = "0xADBC34", VA = "0xADBC34")]
	private void ResetOrientations()
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xADBC6C", Offset = "0xADBC6C", VA = "0xADBC6C")]
	private void FlightDamage()
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0xADBE5C", Offset = "0xADBE5C", VA = "0xADBE5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0xAD8E70", Offset = "0xAD8E70", VA = "0xAD8E70")]
	public void AddWayoints(Transform[] _waypoints)
	{
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0xAD8F6C", Offset = "0xAD8F6C", VA = "0xAD8F6C")]
	[ContextMenu("StartRoute")]
	public void StartRoute()
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0xADA6F4", Offset = "0xADA6F4", VA = "0xADA6F4")]
	public void PickRandomWaypoint()
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0xADD114", Offset = "0xADD114", VA = "0xADD114")]
	private void NextWaypoint()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0xADD024", Offset = "0xADD024", VA = "0xADD024")]
	private void CheckWaypointReached()
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0xADD334", Offset = "0xADD334", VA = "0xADD334")]
	public Drone()
	{
	}
}
[Token(Token = "0x200040E")]
public class LoadCompensation : MonoBehaviour
{
	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float debugMass;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useDebugMass;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0xADD798", Offset = "0xADD798", VA = "0xADD798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0xADD7F0", Offset = "0xADD7F0", VA = "0xADD7F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xADD858", Offset = "0xADD858", VA = "0xADD858")]
	public LoadCompensation()
	{
	}
}
[Token(Token = "0x200040F")]
public class MultiPayload : MonoBehaviour
{
	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PayloadManager[] payloadManagers;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xADD860", Offset = "0xADD860", VA = "0xADD860")]
	private void Start()
	{
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0xADD8F0", Offset = "0xADD8F0", VA = "0xADD8F0")]
	public MultiPayload()
	{
	}
}
[Token(Token = "0x2000410")]
public class PayloadManager : MonoBehaviour
{
	[Token(Token = "0x2000411")]
	public delegate void OnPackageGrabbedDelegate(GameObject package);

	[Token(Token = "0x2000412")]
	public delegate void OnPackageLoadedDelegate(GameObject package);

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint hinge;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform heliAttachPoint;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform loadAttach;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody myRB;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody attachToRB;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody loadRB;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject payload;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject payloadPrefab;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isLoaded;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isDrone;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Drone myDrone;

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool unloadOnGrab;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float manualMassAddon;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float originalMass;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool enableCollision;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool useLine;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float massAdder;

	[Token(Token = "0x1400007D")]
	public event OnPackageGrabbedDelegate OnPackageGrabbed
	{
		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xAD9688", Offset = "0xAD9688", VA = "0xAD9688")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xAD8DD4", Offset = "0xAD8DD4", VA = "0xAD8DD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400007E")]
	public event OnPackageLoadedDelegate OnPackageLoaded
	{
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xADB000", Offset = "0xADB000", VA = "0xADB000")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xADB35C", Offset = "0xADB35C", VA = "0xADB35C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xADD8F8", Offset = "0xADD8F8", VA = "0xADD8F8")]
	public void ObjectGrabbed(Grabbable go, VRControllerMapper _controller)
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xAD9848", Offset = "0xAD9848", VA = "0xAD9848")]
	[ContextMenu("DetachLoad")]
	public void DetachLoad()
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xADD9F4", Offset = "0xADD9F4", VA = "0xADD9F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xADDAC8", Offset = "0xADDAC8", VA = "0xADDAC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xADDB9C", Offset = "0xADDB9C", VA = "0xADDB9C")]
	private void DestroyerDestroy(GameObject _gameObject)
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xADDC24", Offset = "0xADDC24", VA = "0xADDC24")]
	public void OutOfBounds(ParachuteRespawnTracker _tracker, bool _addDebris = false, bool _useReplacer = true)
	{
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xADDCBC", Offset = "0xADDCBC", VA = "0xADDCBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xAD8FE8", Offset = "0xAD8FE8", VA = "0xAD8FE8")]
	public void AddPayload(GameObject _payloadPrefab, bool _create = true, [Optional] Vector3 hingeAxis, bool lockAngularLimits = true, float _manualMassAddon = 0f, float limits = 150f)
	{
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0xADDE44", Offset = "0xADDE44", VA = "0xADDE44")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0xADDF90", Offset = "0xADDF90", VA = "0xADDF90")]
	private void Update()
	{
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0xADDDE4", Offset = "0xADDDE4", VA = "0xADDDE4")]
	private void SetAnchors()
	{
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xADE0D4", Offset = "0xADE0D4", VA = "0xADE0D4")]
	public PayloadManager()
	{
	}
}
[Token(Token = "0x2000413")]
public class TrafficLight : MonoBehaviour
{
	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject green;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject red;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSetA;

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xADE16C", Offset = "0xADE16C", VA = "0xADE16C")]
	public void SetLight(bool _setAOn)
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xADE1C4", Offset = "0xADE1C4", VA = "0xADE1C4")]
	public TrafficLight()
	{
	}
}
[Token(Token = "0x2000414")]
public class Vehicle : MonoBehaviour
{
	[Token(Token = "0x2000415")]
	public delegate void WaypointReachedDelegate(Vehicle thisVehicle, VehicleWaypoint _waypoint);

	[Token(Token = "0x2000416")]
	public enum VELSTATE
	{
		[Token(Token = "0x4001A52")]
		zero,
		[Token(Token = "0x4001A53")]
		max,
		[Token(Token = "0x4001A54")]
		half,
		[Token(Token = "0x4001A55")]
		car
	}

	[Token(Token = "0x2000417")]
	public enum EngineType
	{
		[Token(Token = "0x4001A57")]
		car,
		[Token(Token = "0x4001A58")]
		bus,
		[Token(Token = "0x4001A59")]
		mofa,
		[Token(Token = "0x4001A5A")]
		none
	}

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("A boat is a boat")]
	public bool isBoat;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool justDriveAhead;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("debug")]
	public VELSTATE velocityMode;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("car turnspeeds randomized from base value")]
	public float turnSpeed;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeedRndFactor;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("cars use velocity / boats addForce")]
	public float maxSpeed;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("look ahead on path to wp")]
	public float lookAheadTargetFactor;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float acceleration;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float deceleration;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float brakeForce;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetSpeed;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("if not overridden by wp value")]
	public float waypointThreshold;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTreshhold;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody rb;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform trans;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform target;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform source;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 distanceToTarget;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 driveTo;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentVelocity;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 vehicleDistToLastWaypoint;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 dirSourceToTarget;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 posOnPath;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float speedToTurnSpeedFactor;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool initPositioning;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private VehicleWaypoint vehicleWaypoint;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform[] sensors;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("collision raycast distance")]
	public float minForwardCheckDistance;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("rythm of movement: RND * 1.5")]
	public float rayCheckWait;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool allowLaneChangeAfterBacktrack;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float targetSpeedFactor;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int rayLookAtWaitCount;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool fakeCornerRounding;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("wait stuff")]
	public int blockedWaitBacktrack;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int blockedWaitBacktrackMax;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int backTrackAmountMin;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int backTrackAmountMax;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int afterBacktrackWaitMin;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int afterBacktrackWaitMax;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool endReached;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool useBrakes;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int waterCollisions;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("debug")]
	public bool noSteering;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool isGrabbed;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Grabbable grabbable;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool hasTriggerWaypoint;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private VehicleWaypoint newTriggerWaypoint;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<VehicleWaypoint> newTriggerWaypointList;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool hasWaypoint;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 driveToCorrected;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("debug")]
	public bool noDriving;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int rayRobin;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int blockedCount;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int clearCount;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int forwardDir;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int backTrackAmount;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int afterBacktrackWait;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[Header("stop at blockers tag --> Stop ")]
	public bool trafficLightStop;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool isLoopEnd;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<Rigidbody, Vehicle> vehicleDict;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform helperTrans;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool allowTriggerChange;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float torqueFactor;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentTorqueFactor;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float torqueIncrease;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float maxTorqueFactor;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Header("multliplier for boat force applied")]
	public float boatMotorPower;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float lastWaypointDistance;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool allowBoatsDistanceCheat;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool boatKeepWaypointOnExitTrigger;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int tentacleContacts;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float turnValue;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool turnedOver;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObject smoke;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject fire;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool inWater;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public EngineType engineType;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private EventInstance engineInstance;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private EventDescription speedEventDescription;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PARAMETER_ID speedParameterId;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private EventInstance hornInstance;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float timeInAir;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[Header("Use ToggleVehicle()")]
	public bool vehicleOn;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	[Header("No  touch pause / still on grab")]
	public bool ignoreTentacleTouching;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[HideInInspector]
	public int myGroundCollisions;

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private FloatRigidbody floatRB;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool allowNoBackwardsForBoats;

	[Token(Token = "0x4001A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	public bool useEvasion;

	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float evasionDistance;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool allowLastWaypoint;

	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float chanceOfLastWaypoint;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[EventRef]
	public string vehicleOnSfx;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private VehicleDamage vehicleDamage;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool lookingForNewWaypoint;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int framesForCheat;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool distanceCheatOn;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float setEngineVel;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float engineTresh;

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float engineFactor;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool engineRunning;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float currentEngineFactor;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float forwardAngle;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 toOther;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3 velRed;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool blockRollout;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
	private bool justReleased;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
	private bool lastOnGround;

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23F")]
	private bool rollout;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool onGround;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool backforceRollout;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private int temper;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int realTemper;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 forward;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float signed;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float torqueValue;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float signedB;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private int backTrackCount;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool isBackTracking;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float collAngle;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Vector3 hitNormal;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int evasionCheck;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Rigidbody hitRB;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float hitDistance;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private bool hasCarInFront;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private RaycastHit hit;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float checkDistance;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Transform checkSensor;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vehicle vehicleInFront;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private LayerMask ignoreLayersMask;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private Ray myRay;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float crashAngle;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Rigidbody collisionRB;

	[Token(Token = "0x1400007F")]
	public static event WaypointReachedDelegate OnWaypointReached
	{
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xADE1D4", Offset = "0xADE1D4", VA = "0xADE1D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xADE28C", Offset = "0xADE28C", VA = "0xADE28C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xADE344", Offset = "0xADE344", VA = "0xADE344")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xADE724", Offset = "0xADE724", VA = "0xADE724")]
	[ContextMenu("ClearWaypoint")]
	public void ClearWaypoint()
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xADE730", Offset = "0xADE730", VA = "0xADE730")]
	public void ToggleVehicle(bool _which)
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xADEB54", Offset = "0xADEB54", VA = "0xADEB54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xADEB90", Offset = "0xADEB90", VA = "0xADEB90")]
	public void VehicleDamageDestroyCallback()
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xADEC14", Offset = "0xADEC14", VA = "0xADEC14")]
	private void InitCarSFX()
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xADEDBC", Offset = "0xADEDBC", VA = "0xADEDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0xADEDC0", Offset = "0xADEDC0", VA = "0xADEDC0")]
	public static void ClearVehicleDict()
	{
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0xADEE50", Offset = "0xADEE50", VA = "0xADEE50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0xADF0B0", Offset = "0xADF0B0", VA = "0xADF0B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0xADF280", Offset = "0xADF280", VA = "0xADF280")]
	private void WaterStatusChange(bool _inWater)
	{
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0xADF28C", Offset = "0xADF28C", VA = "0xADF28C")]
	public void TriggerSetNewTarget(VehicleWaypoint _vehicleWaypoint)
	{
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0xADF5D8", Offset = "0xADF5D8", VA = "0xADF5D8")]
	public void TriggerRemove(VehicleWaypoint _vehicleWaypoint)
	{
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0xADF720", Offset = "0xADF720", VA = "0xADF720")]
	private void WaypointCheck()
	{
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0xADFC98", Offset = "0xADFC98", VA = "0xADFC98")]
	private void PickWaypoint()
	{
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0xADF424", Offset = "0xADF424", VA = "0xADF424")]
	private void NextTarget(VehicleWaypoint _nextWaypoint)
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0xADFCF4", Offset = "0xADFCF4", VA = "0xADFCF4")]
	private void AttachEngineSFX()
	{
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0xADE8D0", Offset = "0xADE8D0", VA = "0xADE8D0")]
	private void EngineSFX()
	{
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0xADE7F0", Offset = "0xADE7F0", VA = "0xADE7F0")]
	private void SetSpeeds()
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0xADFD50", Offset = "0xADFD50", VA = "0xADFD50")]
	private void CheckForwardDir()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0xADFEBC", Offset = "0xADFEBC", VA = "0xADFEBC")]
	private void Honk(bool _isVehicle)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0xADFF7C", Offset = "0xADFF7C", VA = "0xADFF7C")]
	public void SetOverrideTarget(Transform newTarget, bool active, float _targetSpeedFactor = 1f, bool _allowTriggerChange = false)
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0xAE0008", Offset = "0xAE0008", VA = "0xAE0008")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0xAE1A2C", Offset = "0xAE1A2C", VA = "0xAE1A2C")]
	private void CheckAngle()
	{
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0xAE1F48", Offset = "0xAE1F48", VA = "0xAE1F48")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0xAE14E0", Offset = "0xAE14E0", VA = "0xAE14E0")]
	private void Evasion()
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0xAE1F60", Offset = "0xAE1F60", VA = "0xAE1F60")]
	private void CheckObstacles()
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0xAE2298", Offset = "0xAE2298", VA = "0xAE2298")]
	private bool CheckForCollisions()
	{
		return default(bool);
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0xAE29F0", Offset = "0xAE29F0", VA = "0xAE29F0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0xAE2AD8", Offset = "0xAE2AD8", VA = "0xAE2AD8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60019EE")]
	[Address(RVA = "0xAE2BC0", Offset = "0xAE2BC0", VA = "0xAE2BC0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60019EF")]
	[Address(RVA = "0xAE2D04", Offset = "0xAE2D04", VA = "0xAE2D04")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60019F0")]
	[Address(RVA = "0xAE2DCC", Offset = "0xAE2DCC", VA = "0xAE2DCC")]
	[ContextMenu("Log VehicleDict")]
	public void LogVehicleDict()
	{
	}

	[Token(Token = "0x60019F1")]
	[Address(RVA = "0xAE2F84", Offset = "0xAE2F84", VA = "0xAE2F84")]
	public Vehicle()
	{
	}
}
[Token(Token = "0x2000418")]
public class VehicleDamage : MonoBehaviour
{
	[Token(Token = "0x2000419")]
	public delegate void DestroyObjectDelegate();

	[Token(Token = "0x200041A")]
	public delegate void VehicleDamageStatusChangeDelegate(VehicleDamage vehic, Status damageStatus);

	[Token(Token = "0x200041B")]
	public enum Status
	{
		[Token(Token = "0x4001A91")]
		regular,
		[Token(Token = "0x4001A92")]
		damaged,
		[Token(Token = "0x4001A93")]
		smoking,
		[Token(Token = "0x4001A94")]
		burning,
		[Token(Token = "0x4001A95")]
		exploded,
		[Token(Token = "0x4001A96")]
		water
	}

	[Token(Token = "0x200041C")]
	public enum VType
	{
		[Token(Token = "0x4001A98")]
		car,
		[Token(Token = "0x4001A99")]
		boat,
		[Token(Token = "0x4001A9A")]
		plane,
		[Token(Token = "0x4001A9B")]
		helicopter,
		[Token(Token = "0x4001A9C")]
		prop
	}

	[Token(Token = "0x200041D")]
	[CompilerGenerated]
	private sealed class <ExplosionForces>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VehicleDamage <>4__this;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <skip>5__3;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody>.Enumerator <>7__wrap3;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xAE79B8", Offset = "0xAE79B8", VA = "0xAE79B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xAE7A00", Offset = "0xAE7A00", VA = "0xAE7A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xAE5BB4", Offset = "0xAE5BB4", VA = "0xAE5BB4")]
		[DebuggerHidden]
		public <ExplosionForces>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xAE6BF4", Offset = "0xAE6BF4", VA = "0xAE6BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xAE6C20", Offset = "0xAE6C20", VA = "0xAE6C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xAE7640", Offset = "0xAE7640", VA = "0xAE7640")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xAE79C0", Offset = "0xAE79C0", VA = "0xAE79C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform trans;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] smoke;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] fire;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject fx;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody collisionRB;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inWater;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Status damageStatus;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Grabbable grabbable;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isGrabbed;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float hitDamageProgressionCounter;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hitBlock;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float hitFactor;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float damage;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float exploRadius;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float vFXScaleFactor;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask explosionLayers;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float exploPower;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float[] exploPowerMinMax;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DamageMaterials damageMaterials;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool burningStopped;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Damage progress----------------------------")]
	[Space]
	public float[] damageSteps;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float burntime;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float exploUpForce;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float instaExplodeFactor;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Space]
	private float currentBurntime;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float targetBurnTime;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("--------------------------------------------")]
	public VType vehicleType;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] deactivateOnDestruction;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] activateOnDestruction;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform[] VFXattaches;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool replaceOnDestruction;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] replacementenPrefabs;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool swapEntityDefinitionOnDestroyed;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public EntityDefinition destroyedEntityDefinition;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool endBurningInwater;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	public bool showDebugSphere;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Passengers----------------------------")]
	public int[] minMaxPassengers;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SpawnResources.HumanType passengerType;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float chanceToSpawnPassengers;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool useParachute;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool invincible;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float totalDamage;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float timedCheckStep;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 explosionPosition;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool explosionStarted;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float minCol;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float maxCol;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float lastColSFX;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float[] minMaxWeight;

	[Token(Token = "0x14000080")]
	public event DestroyObjectDelegate OnDestroyObject
	{
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xAE41AC", Offset = "0xAE41AC", VA = "0xAE41AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xAE4248", Offset = "0xAE4248", VA = "0xAE4248")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000081")]
	public static event VehicleDamageStatusChangeDelegate OnVehicleDamageStatusChange
	{
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xAE42E4", Offset = "0xAE42E4", VA = "0xAE42E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xAE439C", Offset = "0xAE439C", VA = "0xAE439C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0xAE4454", Offset = "0xAE4454", VA = "0xAE4454")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0xAE484C", Offset = "0xAE484C", VA = "0xAE484C")]
	private void DestroyArray(GameObject[] go)
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xAE493C", Offset = "0xAE493C", VA = "0xAE493C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0xAE4B80", Offset = "0xAE4B80", VA = "0xAE4B80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0xAE4930", Offset = "0xAE4930", VA = "0xAE4930")]
	private void SetBurntime()
	{
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0xAE4CD4", Offset = "0xAE4CD4", VA = "0xAE4CD4")]
	private void WaterStatus(GameObject _which, bool _inWater)
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0xAE4E0C", Offset = "0xAE4E0C", VA = "0xAE4E0C")]
	private void TimedChecks()
	{
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0xAE5158", Offset = "0xAE5158", VA = "0xAE5158")]
	private void HitCountEnable()
	{
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0xAE5160", Offset = "0xAE5160", VA = "0xAE5160")]
	private GameObject[] CreateVFX(GameObject _prefab)
	{
		return null;
	}

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0xAE4E30", Offset = "0xAE4E30", VA = "0xAE4E30")]
	private void DamageHandling()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0xAE4DD8", Offset = "0xAE4DD8", VA = "0xAE4DD8")]
	private void EndBurning()
	{
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0xAE5904", Offset = "0xAE5904", VA = "0xAE5904")]
	private void SpawnPassengers()
	{
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0xAE5444", Offset = "0xAE5444", VA = "0xAE5444")]
	[ContextMenu("Explode")]
	public void Explode()
	{
	}

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0xAE5B40", Offset = "0xAE5B40", VA = "0xAE5B40")]
	[IteratorStateMachine(typeof(<ExplosionForces>d__70))]
	private IEnumerator ExplosionForces()
	{
		return null;
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0xAE5BDC", Offset = "0xAE5BDC", VA = "0xAE5BDC")]
	private void HitEval(Collision collision)
	{
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xAE63C8", Offset = "0xAE63C8", VA = "0xAE63C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xAE641C", Offset = "0xAE641C", VA = "0xAE641C")]
	public void SpeedUpBurning(float speedUpfactor)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xAE6438", Offset = "0xAE6438", VA = "0xAE6438")]
	public void HazardDamage(float _timeInc)
	{
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xAE65C4", Offset = "0xAE65C4", VA = "0xAE65C4")]
	public void ExplosionAddDamage(float _damage)
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xAE650C", Offset = "0xAE650C", VA = "0xAE650C")]
	public void AddDamage(float _damage)
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0xAE6750", Offset = "0xAE6750", VA = "0xAE6750")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0xAE6790", Offset = "0xAE6790", VA = "0xAE6790")]
	public VehicleDamage()
	{
	}
}
[Token(Token = "0x200041E")]
public class VehicleSpawner : MonoBehaviour
{
	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnInterval;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] spawnPrefabs;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool looping;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 prefabRotation;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool random;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int poolsize;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float spawnTime;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vehicle> vehiclesPool;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool manualSpawnOnly;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0xAE7A08", Offset = "0xAE7A08", VA = "0xAE7A08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0xAE7CE4", Offset = "0xAE7CE4", VA = "0xAE7CE4")]
	public void InstantiateSpawn()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0xAE7EC4", Offset = "0xAE7EC4", VA = "0xAE7EC4")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6001A22")]
	[Address(RVA = "0xAE7FE4", Offset = "0xAE7FE4", VA = "0xAE7FE4")]
	private GameObject GetObjectFromList()
	{
		return null;
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xAE7AB8", Offset = "0xAE7AB8", VA = "0xAE7AB8")]
	private GameObject CreateAndAdd()
	{
		return null;
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xAE8110", Offset = "0xAE8110", VA = "0xAE8110")]
	public void cleanPool()
	{
	}

	[Token(Token = "0x6001A25")]
	[Address(RVA = "0xAE8218", Offset = "0xAE8218", VA = "0xAE8218")]
	public void SwapPrefab(GameObject A, GameObject B, Color col)
	{
	}

	[Token(Token = "0x6001A26")]
	[Address(RVA = "0xAE840C", Offset = "0xAE840C", VA = "0xAE840C")]
	public VehicleSpawner()
	{
	}
}
[Token(Token = "0x200041F")]
public class VehicleTrafficLightSwitch : MonoBehaviour
{
	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightsA;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lightsB;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waitTime;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lightsAStart;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrafficLight[] lightsVisuals;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform sensors;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool lightsAOn;

	[Token(Token = "0x6001A27")]
	[Address(RVA = "0xAE849C", Offset = "0xAE849C", VA = "0xAE849C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A28")]
	[Address(RVA = "0xAE850C", Offset = "0xAE850C", VA = "0xAE850C")]
	private void HideRenderers()
	{
	}

	[Token(Token = "0x6001A29")]
	[Address(RVA = "0xAE8618", Offset = "0xAE8618", VA = "0xAE8618")]
	private void ToggleLights()
	{
	}

	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0xAE86C8", Offset = "0xAE86C8", VA = "0xAE86C8")]
	public VehicleTrafficLightSwitch()
	{
	}
}
[Token(Token = "0x2000420")]
[ExecuteInEditMode]
public class VehicleWaypoint : MonoBehaviour
{
	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VehicleWaypoint myWaypoint;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform myWaypointTransform;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VehicleWaypoint myNextWaypoint;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VehicleWaypoint myPreviousWaypoint;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject triggerVolume;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject roadVis;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer renderer;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lengthThing;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float roadWidthOverride;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float roadWidth;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WaypointGroup myGroup;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro tmPro;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float targetSpeedFactor;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool hideRoad;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool allowLaneChange;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float thresholdOverride;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int laneChangeID;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float laneChangeChance;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool noChangingOnThis;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool disableVehicle;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vehicle vehicle;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody colRB;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 pos;

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0xAE86E0", Offset = "0xAE86E0", VA = "0xAE86E0")]
	public void RemoveThisWaypoint()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0xAE86E4", Offset = "0xAE86E4", VA = "0xAE86E4")]
	public void RedrawTrigger()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0xAE884C", Offset = "0xAE884C", VA = "0xAE884C")]
	private void SetPos(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xAE8B04", Offset = "0xAE8B04", VA = "0xAE8B04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0xAE8D08", Offset = "0xAE8D08", VA = "0xAE8D08")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0xAE8EF8", Offset = "0xAE8EF8", VA = "0xAE8EF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0xAE9280", Offset = "0xAE9280", VA = "0xAE9280")]
	public VehicleWaypoint()
	{
	}
}
[Token(Token = "0x2000421")]
[ExecuteInEditMode]
public class WaypointGroup : MonoBehaviour
{
	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VehicleWaypoint[] allWaypoints;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> waypoints;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool looping;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int groupID;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color wpColor;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool showGizmos;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isBoatWaypoint;

	[Token(Token = "0x6001A32")]
	[Address(RVA = "0xAE92BC", Offset = "0xAE92BC", VA = "0xAE92BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A33")]
	[Address(RVA = "0xAE98EC", Offset = "0xAE98EC", VA = "0xAE98EC")]
	public GameObject GetPreviousWaypoint(VehicleWaypoint wp)
	{
		return null;
	}

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0xAE999C", Offset = "0xAE999C", VA = "0xAE999C")]
	public void RedrawWaypointTriggers()
	{
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0xAE9798", Offset = "0xAE9798", VA = "0xAE9798")]
	private void HideRenderers()
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0xAE9A9C", Offset = "0xAE9A9C", VA = "0xAE9A9C")]
	public void ReverseOrder()
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0xAE92EC", Offset = "0xAE92EC", VA = "0xAE92EC")]
	public void CheckChildrenWaypoints()
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0xAE9C78", Offset = "0xAE9C78", VA = "0xAE9C78")]
	public void PlaceToGround()
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0xAE9E60", Offset = "0xAE9E60", VA = "0xAE9E60")]
	public WaypointGroup()
	{
	}
}
[Token(Token = "0x2000422")]
public class WeightCounterForce : MonoBehaviour
{
	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable grabbable;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float counterFactor;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float diff;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetHeight;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ForceMode forceMode;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speedFactor;

	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 sway;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 maxSway;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool allowGrabbedHeightChange;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool useSpawnHeigt;

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0xAE9E70", Offset = "0xAE9E70", VA = "0xAE9E70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0xAE9FBC", Offset = "0xAE9FBC", VA = "0xAE9FBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0xAEA0F4", Offset = "0xAEA0F4", VA = "0xAEA0F4")]
	public WeightCounterForce()
	{
	}
}
[Token(Token = "0x2000423")]
[CreateAssetMenu(fileName = "Version", menuName = "Version", order = 1)]
public class VersionNumber : ScriptableObject
{
	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pcVersionNumber;

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0xAEA128", Offset = "0xAEA128", VA = "0xAEA128")]
	public VersionNumber()
	{
	}
}
[Token(Token = "0x2000424")]
public class VersionSign : MonoBehaviour
{
	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0xAEA130", Offset = "0xAEA130", VA = "0xAEA130")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0xAEA1B4", Offset = "0xAEA1B4", VA = "0xAEA1B4")]
	public VersionSign()
	{
	}
}
[Token(Token = "0x2000425")]
public class VoiceParameterArea : CollisionBase
{
	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string voiceParameter;

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0xAEA1BC", Offset = "0xAEA1BC", VA = "0xAEA1BC", Slot = "4")]
	public override void CollisionDictChanged(Rigidbody rb, bool added = true, string baseID = "")
	{
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0xAEA2C8", Offset = "0xAEA2C8", VA = "0xAEA2C8")]
	public VoiceParameterArea()
	{
	}
}
[Token(Token = "0x2000426")]
public class Vortex : MonoBehaviour
{
	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform cam;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6001A42")]
	[Address(RVA = "0xAEA2D0", Offset = "0xAEA2D0", VA = "0xAEA2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0xAEA358", Offset = "0xAEA358", VA = "0xAEA358")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0xAEA4F0", Offset = "0xAEA4F0", VA = "0xAEA4F0")]
	public Vortex()
	{
	}
}
[Token(Token = "0x2000427")]
public class VRCameraLookHelper : MonoBehaviour
{
	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform VRlookHelper;

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0xAEA4F8", Offset = "0xAEA4F8", VA = "0xAEA4F8")]
	private void CreateLookHelper()
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0xAEA5E8", Offset = "0xAEA5E8", VA = "0xAEA5E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0xAEA5EC", Offset = "0xAEA5EC", VA = "0xAEA5EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A48")]
	[Address(RVA = "0xAEA724", Offset = "0xAEA724", VA = "0xAEA724")]
	public VRCameraLookHelper()
	{
	}
}
[Token(Token = "0x2000428")]
public class VRCameraViewSmoothing : MonoBehaviour
{
	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int middleAmount;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float followFactor;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform helper;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 dir;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> middledPosition;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform transformToSmooth;

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0xAEA72C", Offset = "0xAEA72C", VA = "0xAEA72C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0xAEA83C", Offset = "0xAEA83C", VA = "0xAEA83C")]
	private void ForcePos()
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0xAEA8E0", Offset = "0xAEA8E0", VA = "0xAEA8E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0xAEAB1C", Offset = "0xAEAB1C", VA = "0xAEAB1C")]
	public VRCameraViewSmoothing()
	{
	}
}
[Token(Token = "0x2000429")]
public class VRCameraViewSmoothingIDP : TimeScaleIndependentUpdate
{
	[Token(Token = "0x200042A")]
	[CompilerGenerated]
	private sealed class <ShowTitle>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRCameraViewSmoothingIDP <>4__this;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xAEB284", Offset = "0xAEB284", VA = "0xAEB284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xAEB2CC", Offset = "0xAEB2CC", VA = "0xAEB2CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xAEAD18", Offset = "0xAEAD18", VA = "0xAEAD18")]
		[DebuggerHidden]
		public <ShowTitle>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xAEB118", Offset = "0xAEB118", VA = "0xAEB118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xAEB11C", Offset = "0xAEB11C", VA = "0xAEB11C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xAEB28C", Offset = "0xAEB28C", VA = "0xAEB28C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform VRCamera;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 offset;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int middleAmount;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float followFactor;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 dir;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> middledPosition;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform transformToSmooth;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float newDeltaTime;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform trans;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool initialised;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startPosition;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion lookQuaternion;

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0xAEABB4", Offset = "0xAEABB4", VA = "0xAEABB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0xAEABEC", Offset = "0xAEABEC", VA = "0xAEABEC")]
	private void Init()
	{
	}

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0xAEACA4", Offset = "0xAEACA4", VA = "0xAEACA4")]
	[IteratorStateMachine(typeof(<ShowTitle>d__13))]
	private IEnumerator ShowTitle()
	{
		return null;
	}

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0xAEAD40", Offset = "0xAEAD40", VA = "0xAEAD40")]
	public void StopReveal()
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0xAEAD48", Offset = "0xAEAD48", VA = "0xAEAD48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0xAEAD70", Offset = "0xAEAD70", VA = "0xAEAD70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0xAEADA8", Offset = "0xAEADA8", VA = "0xAEADA8")]
	public void ForcePos()
	{
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0xAEAE94", Offset = "0xAEAE94", VA = "0xAEAE94")]
	private void OverlayUpdate()
	{
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0xAEB058", Offset = "0xAEB058", VA = "0xAEB058", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0xAEB084", Offset = "0xAEB084", VA = "0xAEB084")]
	public VRCameraViewSmoothingIDP()
	{
	}
}
[Token(Token = "0x200042B")]
public class VRInputOpenXR : MonoBehaviour
{
	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRControllerMapper vrControllerMapper;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerMapper.actionType action;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputActionReference inputActionReference;

	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hand;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool buttonDown;

	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0xAEB2D4", Offset = "0xAEB2D4", VA = "0xAEB2D4", Slot = "4")]
	public virtual void Init(int _hand, VRControllerMapper.actionType _action, InputActionReference _inputActionReference)
	{
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0xAEB318", Offset = "0xAEB318", VA = "0xAEB318", Slot = "5")]
	public virtual void Action(bool _mode)
	{
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0xAEB360", Offset = "0xAEB360", VA = "0xAEB360", Slot = "6")]
	public virtual void Action(Vector2 _dir)
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0xAEB384", Offset = "0xAEB384", VA = "0xAEB384", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0xAEB448", Offset = "0xAEB448", VA = "0xAEB448")]
	public VRInputOpenXR()
	{
	}
}
[Token(Token = "0x200042C")]
public class VRInputPico : VRInputOpenXR
{
	[Token(Token = "0x6001A62")]
	[Address(RVA = "0xAEB450", Offset = "0xAEB450", VA = "0xAEB450")]
	public VRInputPico()
	{
	}
}
[Token(Token = "0x200042D")]
public class CalculateVolume : MonoBehaviour
{
	[Token(Token = "0x6001A63")]
	[Address(RVA = "0xAEB458", Offset = "0xAEB458", VA = "0xAEB458")]
	public static float SignedVolumeOfTriangle(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(float);
	}

	[Token(Token = "0x6001A64")]
	[Address(RVA = "0xAEB4B4", Offset = "0xAEB4B4", VA = "0xAEB4B4")]
	public static float VolumeOfMesh(Mesh mesh)
	{
		return default(float);
	}

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0xAEB5E4", Offset = "0xAEB5E4", VA = "0xAEB5E4")]
	public CalculateVolume()
	{
	}
}
[Token(Token = "0x200042E")]
public class DelayedEnableCollisions : MonoBehaviour
{
	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0xAEB5EC", Offset = "0xAEB5EC", VA = "0xAEB5EC")]
	public void Init(Rigidbody _rb, float delay = 1f)
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0xAEB678", Offset = "0xAEB678", VA = "0xAEB678")]
	private void EnableCollision()
	{
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0xAEB698", Offset = "0xAEB698", VA = "0xAEB698")]
	public DelayedEnableCollisions()
	{
	}
}
[Token(Token = "0x200042F")]
public class FloatingObjectsManager : MonoBehaviour
{
	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FloatRigidbody> floatRigidbodies;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int maxFloatRBs;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int minPrio;

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0xAEB6A0", Offset = "0xAEB6A0", VA = "0xAEB6A0")]
	public static void ResetManager()
	{
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0xAEB75C", Offset = "0xAEB75C", VA = "0xAEB75C")]
	public static void ClearList()
	{
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0xAEB7F4", Offset = "0xAEB7F4", VA = "0xAEB7F4")]
	public static void ResetMinPrio()
	{
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0xAEB83C", Offset = "0xAEB83C", VA = "0xAEB83C")]
	public static void SetMinPrio(int _minPrio)
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xAEB888", Offset = "0xAEB888", VA = "0xAEB888")]
	public static int Floaters()
	{
		return default(int);
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xAEB8EC", Offset = "0xAEB8EC", VA = "0xAEB8EC")]
	private static bool RemoveFloater(int _checkPrio)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xAEBBE0", Offset = "0xAEBBE0", VA = "0xAEBBE0")]
	[ContextMenu("Log floatRigidbodies")]
	private void LogFloaters()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0xAEBD48", Offset = "0xAEBD48", VA = "0xAEBD48")]
	public static void WaterStatusChange(FloatRigidbody _floatRB, bool _inWater)
	{
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xAEBF7C", Offset = "0xAEBF7C", VA = "0xAEBF7C")]
	public FloatingObjectsManager()
	{
	}
}
[Token(Token = "0x2000430")]
public class FloatRigidbody : MonoBehaviour
{
	[Token(Token = "0x2000431")]
	public delegate void FloaterWaterStatusChangeDelegate(bool _which);

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool overrideColliderFloatType;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FloatingObject.FLOATTYPE overrideType;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numberOfColliders;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float totalVolume;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatingObject> colliders;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideSecondsToFloat;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float secondsToFloat;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeToFullSink;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool quickSinkOnExit;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool overrideSkipStep;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int skipStep;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool overrideDynamicFactor;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float groupDynamicFactor;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float defaultDynamicFactor;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isInWater;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool wasInWater;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool optimiseDeactivatePossible;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool noWaterTriggerBasedOptimisation;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int startSkipStep;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int outOfWaterWait;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int outOfWaterWaitMax;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool overrideFluidDensity;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float fluidDensity;

	[Token(Token = "0x4001B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool floaterTouchingWater;

	[Token(Token = "0x4001B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int sinkPriority;

	[Token(Token = "0x4001B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool sleepEnabled;

	[Token(Token = "0x4001B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool forceSink;

	[Token(Token = "0x4001B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool useIntertiaTensorHack;

	[Token(Token = "0x4001B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float intertiaTensorFactor;

	[Token(Token = "0x4001B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int SkipStepInc;

	[Token(Token = "0x4001B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool lastTouchingWater;

	[Token(Token = "0x14000082")]
	public event FloaterWaterStatusChangeDelegate OnFloaterWaterStatusChange
	{
		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xAEBF84", Offset = "0xAEBF84", VA = "0xAEBF84")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xAEC020", Offset = "0xAEC020", VA = "0xAEC020")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0xAEC0BC", Offset = "0xAEC0BC", VA = "0xAEC0BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0xAEC454", Offset = "0xAEC454", VA = "0xAEC454")]
	public void ForceFloatPrioGamePlayObjects()
	{
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0xAEC46C", Offset = "0xAEC46C", VA = "0xAEC46C")]
	public void FloatPrioGamePlayObjects()
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0xAEC48C", Offset = "0xAEC48C", VA = "0xAEC48C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0xAEC504", Offset = "0xAEC504", VA = "0xAEC504")]
	public void AddFloatingColliders(FloatingObject _obj, float _volume)
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0xAEC628", Offset = "0xAEC628", VA = "0xAEC628")]
	public void SetManualWaterSurface(bool isTrue, Transform _surfaceTransform, bool skipStepKill)
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0xAE7690", Offset = "0xAE7690", VA = "0xAE7690")]
	[ContextMenu("UpdateFloatingObjects")]
	public void UpdateFloatingObjects()
	{
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0xAEC7CC", Offset = "0xAEC7CC", VA = "0xAEC7CC")]
	private void SetFloatersActive(bool _which)
	{
	}

	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0xAEC924", Offset = "0xAEC924", VA = "0xAEC924")]
	public void WaterManagerStatusChangeMessage(GameObject _go, bool _inWater)
	{
	}

	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0xAECA30", Offset = "0xAECA30", VA = "0xAECA30")]
	public void TimerSink()
	{
	}

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0xAEBA74", Offset = "0xAEBA74", VA = "0xAEBA74")]
	public void ForceSink(float _timeToFullSink = 10f)
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0xAECA38", Offset = "0xAECA38", VA = "0xAECA38")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0xAECBBC", Offset = "0xAECBBC", VA = "0xAECBBC")]
	private void InertiaTensorHack()
	{
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0xAECC34", Offset = "0xAECC34", VA = "0xAECC34")]
	private void CheckInsideWater()
	{
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xAED374", Offset = "0xAED374", VA = "0xAED374")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xAED378", Offset = "0xAED378", VA = "0xAED378")]
	public FloatRigidbody()
	{
	}
}
[Token(Token = "0x2000432")]
public class NoFloatScript : MonoBehaviour
{
	[Token(Token = "0x6001A88")]
	[Address(RVA = "0xAED5A8", Offset = "0xAED5A8", VA = "0xAED5A8")]
	public NoFloatScript()
	{
	}
}
[Token(Token = "0x2000433")]
public class WaterExitLadder : MonoBehaviour
{
	[Token(Token = "0x4001B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4001B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HumansInteraction> myCollisionRBs;

	[Token(Token = "0x4001B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x4001B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x4001B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform checkPoint;

	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 uptarget;

	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion rot;

	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float uprightTorque;

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0xAED5B0", Offset = "0xAED5B0", VA = "0xAED5B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0xAED6D0", Offset = "0xAED6D0", VA = "0xAED6D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0xAED980", Offset = "0xAED980", VA = "0xAED980")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0xAEDBC0", Offset = "0xAEDBC0", VA = "0xAEDBC0")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0xAEDD7C", Offset = "0xAEDD7C", VA = "0xAEDD7C")]
	public WaterExitLadder()
	{
	}
}
[Token(Token = "0x2000434")]
public class WaterFloatingDetection : MonoBehaviour
{
	[Token(Token = "0x4001B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autoAttachComponent;

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xAEDDAC", Offset = "0xAEDDAC", VA = "0xAEDDAC")]
	private void CheckForColliders(Transform _child, Rigidbody _rb, FloatRigidbody frb)
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0xAEDF54", Offset = "0xAEDF54", VA = "0xAEDF54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0xAEE150", Offset = "0xAEE150", VA = "0xAEE150")]
	public WaterFloatingDetection()
	{
	}
}
[Token(Token = "0x2000435")]
public class WaterGroundDeactivate : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	public delegate void OnWaterGroundDeactivateDelegate(Rigidbody _rb);

	[Token(Token = "0x4001B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject waterSystem;

	[Token(Token = "0x14000083")]
	public static event OnWaterGroundDeactivateDelegate OnWaterGroundDeactivate
	{
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xAEE160", Offset = "0xAEE160", VA = "0xAEE160")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xAEE218", Offset = "0xAEE218", VA = "0xAEE218")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xAEE2D0", Offset = "0xAEE2D0", VA = "0xAEE2D0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xAEE5A4", Offset = "0xAEE5A4", VA = "0xAEE5A4")]
	public WaterGroundDeactivate()
	{
	}
}
[Token(Token = "0x2000437")]
public class WaterManager : MonoBehaviour
{
	[Token(Token = "0x2000438")]
	public delegate void WaterStatusChange(GameObject _gameObjectInWater, bool _which);

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tentacleLast;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Rigidbody> myCollisionRBs;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<Collider, Rigidbody> myCollisionDict;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<Rigidbody, FloatRigidbody> myFloatingDict;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject splashFX;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rippleFX;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] Splashes;

	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve SplashesFalloff;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject waterFX;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int numObjectsWater;

	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WaterInterface waterInterface;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject fx;

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string waterSFX;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTime;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastTimesfx;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lastTimeRetriggerObject;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float cooldown;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float nextTrigger;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isCollisionSound;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string waterSoftSFX;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string waterMedSFX;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	public string waterStrongSFX;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool audioSystemSwitch;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int staggeredCheckIndex;

	[Token(Token = "0x4001B4C")]
	private const float velocityMaxOut = 4f;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float vel;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float SplashScale;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float splashDelay;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaterManager _instance;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody outCheckRB;

	[Token(Token = "0x4001B52")]
	private const float maxMass = 20000f;

	[Token(Token = "0x4001B53")]
	private const float maxVel = 5f;

	[Token(Token = "0x170001BA")]
	public static WaterManager Instance
	{
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xAEC280", Offset = "0xAEC280", VA = "0xAEC280")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000084")]
	public static event WaterStatusChange OnWaterStatusChange
	{
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xAE4AC8", Offset = "0xAE4AC8", VA = "0xAE4AC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xAE4C1C", Offset = "0xAE4C1C", VA = "0xAE4C1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0xAEE6FC", Offset = "0xAEE6FC", VA = "0xAEE6FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0xAEE8EC", Offset = "0xAEE8EC", VA = "0xAEE8EC")]
	private void OutSideCheck()
	{
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0xAEEAFC", Offset = "0xAEEAFC", VA = "0xAEEAFC")]
	public void DoParticleWaterEffects(Rigidbody _colRB, Vector3 _position)
	{
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0xAECF0C", Offset = "0xAECF0C", VA = "0xAECF0C")]
	public void DoWaterFX(Rigidbody _colRB)
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0xAEEA24", Offset = "0xAEEA24", VA = "0xAEEA24")]
	private bool InsideLimits(Rigidbody _colRB)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0xAEC3FC", Offset = "0xAEC3FC", VA = "0xAEC3FC")]
	public bool InWater(Rigidbody _rb)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0xAEEF18", Offset = "0xAEEF18", VA = "0xAEEF18")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0xAEF22C", Offset = "0xAEF22C", VA = "0xAEF22C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0xAEF3DC", Offset = "0xAEF3DC", VA = "0xAEF3DC")]
	public WaterManager()
	{
	}
}
[Token(Token = "0x2000439")]
public class WaterTrigger : MonoBehaviour
{
	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0xAEF4B8", Offset = "0xAEF4B8", VA = "0xAEF4B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0xAEF4DC", Offset = "0xAEF4DC", VA = "0xAEF4DC")]
	public WaterTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x200043A")]
public class WeightGameRound
{
	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public GameObject[] Weights;

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0xAEF4E4", Offset = "0xAEF4E4", VA = "0xAEF4E4")]
	public WeightGameRound()
	{
	}
}
[Token(Token = "0x200043B")]
public class WeightGame : MonoBehaviour
{
	[Token(Token = "0x200043C")]
	[CompilerGenerated]
	private sealed class <DelayedSpawn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeightGame <>4__this;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xAF0194", Offset = "0xAF0194", VA = "0xAF0194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xAF01DC", Offset = "0xAF01DC", VA = "0xAF01DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xAEFD6C", Offset = "0xAEFD6C", VA = "0xAEFD6C")]
		[DebuggerHidden]
		public <DelayedSpawn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xAEFE24", Offset = "0xAEFE24", VA = "0xAEFE24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xAEFE28", Offset = "0xAEFE28", VA = "0xAEFE28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xAF019C", Offset = "0xAF019C", VA = "0xAF019C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeightGameRound[] Rounds;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ConstructionTargetManual> targets;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeightWatcher[] Scales;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] masses;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int miniGameRound;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] SpawnPoints;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Transform> SpawnPointsCopy;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> SpawnedWeights;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float tresh;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool roundRunning;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LevelDirector_C116_WeightWatchers LevelDirector;

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0xAEF4EC", Offset = "0xAEF4EC", VA = "0xAEF4EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0xAEF664", Offset = "0xAEF664", VA = "0xAEF664")]
	[ContextMenu("checkweight")]
	public void CheckWeight()
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0xAEF4F8", Offset = "0xAEF4F8", VA = "0xAEF4F8")]
	[ContextMenu("SpawnTargets")]
	public void SpawnRoundTargets()
	{
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0xAEF898", Offset = "0xAEF898", VA = "0xAEF898")]
	[ContextMenu("StartNextRound")]
	public void StartRound()
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0xAEF984", Offset = "0xAEF984", VA = "0xAEF984")]
	private void CleanOldRound()
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0xAEFCAC", Offset = "0xAEFCAC", VA = "0xAEFCAC")]
	private void SpawnRoundObjects()
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0xAEFCF8", Offset = "0xAEFCF8", VA = "0xAEFCF8")]
	[IteratorStateMachine(typeof(<DelayedSpawn>d__17))]
	private IEnumerator DelayedSpawn()
	{
		return null;
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0xAEFD94", Offset = "0xAEFD94", VA = "0xAEFD94")]
	public WeightGame()
	{
	}
}
[Token(Token = "0x200043D")]
public class WeightWatcher : MonoBehaviour
{
	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int combinedWeight;

	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable grabbable;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CollisionKeeper collisionKeeper;

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0xAF01E4", Offset = "0xAF01E4", VA = "0xAF01E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0xAEF88C", Offset = "0xAEF88C", VA = "0xAEF88C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0xAF0274", Offset = "0xAF0274", VA = "0xAF0274")]
	private void CheckWeights()
	{
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0xAF05B4", Offset = "0xAF05B4", VA = "0xAF05B4")]
	public WeightWatcher()
	{
	}
}
[Token(Token = "0x200043E")]
public class WoodenBoxExplosion : MonoBehaviour
{
	[Token(Token = "0x200043F")]
	[CompilerGenerated]
	private sealed class <Remove>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WoodenBoxExplosion <>4__this;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xAF088C", Offset = "0xAF088C", VA = "0xAF088C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xAF08D4", Offset = "0xAF08D4", VA = "0xAF08D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xAF0704", Offset = "0xAF0704", VA = "0xAF0704")]
		[DebuggerHidden]
		public <Remove>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xAF0734", Offset = "0xAF0734", VA = "0xAF0734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xAF0738", Offset = "0xAF0738", VA = "0xAF0738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xAF0894", Offset = "0xAF0894", VA = "0xAF0894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] Pieces;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4001B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Center;

	[Token(Token = "0x4001B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Radius;

	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0xAF05BC", Offset = "0xAF05BC", VA = "0xAF05BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0xAF05C0", Offset = "0xAF05C0", VA = "0xAF05C0")]
	[ContextMenu("Explode")]
	public void Explode()
	{
	}

	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0xAF0690", Offset = "0xAF0690", VA = "0xAF0690")]
	[IteratorStateMachine(typeof(<Remove>d__6))]
	private IEnumerator Remove()
	{
		return null;
	}

	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0xAF072C", Offset = "0xAF072C", VA = "0xAF072C")]
	public WoodenBoxExplosion()
	{
	}
}
[Token(Token = "0x2000440")]
public class WreckSplitter : MonoBehaviour
{
	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] wreckParts;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int chanceOfSeperation;

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0xAF08DC", Offset = "0xAF08DC", VA = "0xAF08DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0xAF0A8C", Offset = "0xAF0A8C", VA = "0xAF0A8C")]
	public WreckSplitter()
	{
	}
}
[Token(Token = "0x2000441")]
public class AnimateRadar : MonoBehaviour
{
	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rim;

	[Token(Token = "0x4001B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool AnimatingRim;

	[Token(Token = "0x4001B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.001f, 1f)]
	public float RimMargin;

	[Token(Token = "0x4001B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RimSpeed;

	[Token(Token = "0x4001B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AnimatingNoise;

	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 NoiseSpeed;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material Mat;

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float RimWidth;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float RimFalloff;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 NoiseOffset;

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0xAF0A9C", Offset = "0xAF0A9C", VA = "0xAF0A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0xAF0B64", Offset = "0xAF0B64", VA = "0xAF0B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0xAF0BAC", Offset = "0xAF0BAC", VA = "0xAF0BAC")]
	public void AnimateRim(bool animate, float margin, float speed)
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0xAF0C74", Offset = "0xAF0C74", VA = "0xAF0C74")]
	public void AnimateNoise(bool animate, Vector3 NoiseOffset)
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0xAF0D10", Offset = "0xAF0D10", VA = "0xAF0D10")]
	public AnimateRadar()
	{
	}
}
[Token(Token = "0x2000442")]
public class SROptions : INotifyPropertyChanged
{
	[Token(Token = "0x2000443")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	public sealed class DisplayNameAttribute : System.ComponentModel.DisplayNameAttribute
	{
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xAF5BB4", Offset = "0xAF5BB4", VA = "0xAF5BB4")]
		public DisplayNameAttribute(string displayName)
		{
		}
	}

	[Token(Token = "0x2000444")]
	[AttributeUsage(AttributeTargets.Property)]
	public sealed class IncrementAttribute : SRDebugger.IncrementAttribute
	{
		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xAF5C1C", Offset = "0xAF5C1C", VA = "0xAF5C1C")]
		public IncrementAttribute(double increment)
		{
		}
	}

	[Token(Token = "0x2000445")]
	[AttributeUsage(AttributeTargets.Property)]
	public sealed class NumberRangeAttribute : SRDebugger.NumberRangeAttribute
	{
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xAF5C24", Offset = "0xAF5C24", VA = "0xAF5C24")]
		public NumberRangeAttribute(double min, double max)
		{
		}
	}

	[Token(Token = "0x2000446")]
	[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
	public sealed class SortAttribute : SRDebugger.SortAttribute
	{
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xAF5C2C", Offset = "0xAF5C2C", VA = "0xAF5C2C")]
		public SortAttribute(int priority)
		{
		}
	}

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly SROptions _current;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _levelNumber;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _storyNumber;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _questNumber;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _currentLevel;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minDist;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxDist;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _storyString;

	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _levelString;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _testFloat;

	[Token(Token = "0x170001BF")]
	public static SROptions Current
	{
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xAF0D1C", Offset = "0xAF0D1C", VA = "0xAF0D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C0")]
	[Category("!!!CURRENT.navigation")]
	public string CurrentLevel_________________________________
	{
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xAF1E9C", Offset = "0xAF1E9C", VA = "0xAF1E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C1")]
	[Category("!!STORY.navigation")]
	public string STORY_____________________
	{
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xAF2560", Offset = "0xAF2560", VA = "0xAF2560")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xAF2578", Offset = "0xAF2578", VA = "0xAF2578")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	[Category("!LEVEL.navigation")]
	public string LEVEL_____________________
	{
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xAF26F8", Offset = "0xAF26F8", VA = "0xAF26F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xAF2710", Offset = "0xAF2710", VA = "0xAF2710")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	[Category("capture")]
	public bool BubbleIconsHidden
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xAF2820", Offset = "0xAF2820", VA = "0xAF2820")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xAF2868", Offset = "0xAF2868", VA = "0xAF2868")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	[Sort(0)]
	[Category("capture1")]
	public bool ToggleSmoothCaptureCam
	{
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xAF28F4", Offset = "0xAF28F4", VA = "0xAF28F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xAF2914", Offset = "0xAF2914", VA = "0xAF2914")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	[Category("capture2")]
	[Sort(0)]
	public bool ToggleFlyCam
	{
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xAF29C4", Offset = "0xAF29C4", VA = "0xAF29C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xAF29E4", Offset = "0xAF29E4", VA = "0xAF29E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	[Category("capture2")]
	[NumberRange(0.0, 150.0)]
	public int FlyCamSpeed
	{
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xAF2A80", Offset = "0xAF2A80", VA = "0xAF2A80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xAF2B04", Offset = "0xAF2B04", VA = "0xAF2B04")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	[Category("capture2")]
	[NumberRange(0.0, 150.0)]
	public int FlyCamRiseSpeed
	{
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xAF2BD8", Offset = "0xAF2BD8", VA = "0xAF2BD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xAF2C5C", Offset = "0xAF2C5C", VA = "0xAF2C5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	[Category("capture2")]
	[NumberRange(0.0, 150.0)]
	public int FlyCamYawSpeed
	{
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xAF2D30", Offset = "0xAF2D30", VA = "0xAF2D30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xAF2DB4", Offset = "0xAF2DB4", VA = "0xAF2DB4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	[Category("capture2")]
	[NumberRange(0.0, 150.0)]
	public int FlyCamPitchSpeed
	{
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xAF2E88", Offset = "0xAF2E88", VA = "0xAF2E88")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xAF2F0C", Offset = "0xAF2F0C", VA = "0xAF2F0C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	[Category("capture.screenshots")]
	public bool Screenshots
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xAF3024", Offset = "0xAF3024", VA = "0xAF3024")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xAF306C", Offset = "0xAF306C", VA = "0xAF306C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	[Category("capture.Humans")]
	public bool TalkingTools
	{
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xAF3074", Offset = "0xAF3074", VA = "0xAF3074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xAF3094", Offset = "0xAF3094", VA = "0xAF3094")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	[Category("capture1")]
	[Sort(0)]
	public bool RollLock
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xAF30BC", Offset = "0xAF30BC", VA = "0xAF30BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xAF30DC", Offset = "0xAF30DC", VA = "0xAF30DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	[Category("capture1")]
	[Sort(0)]
	public bool PitchLock
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xAF31A8", Offset = "0xAF31A8", VA = "0xAF31A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xAF31C8", Offset = "0xAF31C8", VA = "0xAF31C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	[Sort(0)]
	[NumberRange(1.0, 150.0)]
	[Category("capture1")]
	public int FOV
	{
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xAF3294", Offset = "0xAF3294", VA = "0xAF3294")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xAF3318", Offset = "0xAF3318", VA = "0xAF3318")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	[Sort(0)]
	[Category("capture1")]
	[NumberRange(1.0, 30.0)]
	public float PositionSmooth
	{
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xAF33D8", Offset = "0xAF33D8", VA = "0xAF33D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xAF33F8", Offset = "0xAF33F8", VA = "0xAF33F8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	[Category("capture1")]
	[Sort(0)]
	[NumberRange(1.0, 30.0)]
	public float RotationSmooth
	{
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xAF34B8", Offset = "0xAF34B8", VA = "0xAF34B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xAF34D8", Offset = "0xAF34D8", VA = "0xAF34D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	[Category("testing.skybox")]
	public bool ToggleSkybox
	{
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xAF35C0", Offset = "0xAF35C0", VA = "0xAF35C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xAF35F4", Offset = "0xAF35F4", VA = "0xAF35F4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	[Category("testing")]
	public bool SuppressSave
	{
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xAF37A0", Offset = "0xAF37A0", VA = "0xAF37A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xAF37F8", Offset = "0xAF37F8", VA = "0xAF37F8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	[Category("movement")]
	public bool ToggleVerticalMove
	{
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xAF3C3C", Offset = "0xAF3C3C", VA = "0xAF3C3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xAF3C5C", Offset = "0xAF3C5C", VA = "0xAF3C5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	[Category("movement")]
	public bool ToggleSmoothTurning
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xAF3CA0", Offset = "0xAF3CA0", VA = "0xAF3CA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xAF3CC0", Offset = "0xAF3CC0", VA = "0xAF3CC0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	[Category("movement")]
	public bool Blinders
	{
		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xAF3D20", Offset = "0xAF3D20", VA = "0xAF3D20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xAF3D40", Offset = "0xAF3D40", VA = "0xAF3D40")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	[Category("options")]
	public bool Typewriter
	{
		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xAF3E68", Offset = "0xAF3E68", VA = "0xAF3E68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xAF3E88", Offset = "0xAF3E88", VA = "0xAF3E88")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	[Category("movement")]
	public bool SnapTurningAllowed
	{
		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xAF3F7C", Offset = "0xAF3F7C", VA = "0xAF3F7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xAF3FC4", Offset = "0xAF3FC4", VA = "0xAF3FC4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	[Category("movement")]
	public bool UseLimits
	{
		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xAF4014", Offset = "0xAF4014", VA = "0xAF4014")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xAF405C", Offset = "0xAF405C", VA = "0xAF405C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	[Category("testing.performance")]
	public bool ToggleLightProbes
	{
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xAF4A70", Offset = "0xAF4A70", VA = "0xAF4A70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xAF4AC8", Offset = "0xAF4AC8", VA = "0xAF4AC8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	[Category("testing.performance")]
	public bool GlobalShakeDeactivated
	{
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xAF4F64", Offset = "0xAF4F64", VA = "0xAF4F64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xAF4FAC", Offset = "0xAF4FAC", VA = "0xAF4FAC")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	[Category("testing.performance")]
	public bool Fog
	{
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xAF4FFC", Offset = "0xAF4FFC", VA = "0xAF4FFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xAF5004", Offset = "0xAF5004", VA = "0xAF5004")]
		set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	[DisplayName("Entites Spawned")]
	[Category("sandbox.performance")]
	public int TotalEntites
	{
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xAF57F4", Offset = "0xAF57F4", VA = "0xAF57F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001DD")]
	[DisplayName("Entites Max")]
	[Category("sandbox.performance")]
	public int Maxobjects
	{
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xAF583C", Offset = "0xAF583C", VA = "0xAF583C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000085")]
	public event SROptionsPropertyChanged PropertyChanged
	{
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xAF0E54", Offset = "0xAF0E54", VA = "0xAF0E54")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xAF0EF0", Offset = "0xAF0EF0", VA = "0xAF0EF0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000086")]
	private event PropertyChangedEventHandler InterfacePropertyChangedEventHandler
	{
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xAF1044", Offset = "0xAF1044", VA = "0xAF1044")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xAF10E0", Offset = "0xAF10E0", VA = "0xAF10E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000087")]
	private event PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	{
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xAF117C", Offset = "0xAF117C", VA = "0xAF117C", Slot = "4")]
		add
		{
		}
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xAF1180", Offset = "0xAF1180", VA = "0xAF1180", Slot = "5")]
		remove
		{
		}
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0xAF0D74", Offset = "0xAF0D74", VA = "0xAF0D74")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)]
	public static void OnStartup()
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0xAF0F8C", Offset = "0xAF0F8C", VA = "0xAF0F8C")]
	public void OnPropertyChanged(string propertyName)
	{
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xAF1184", Offset = "0xAF1184", VA = "0xAF1184")]
	[Category("bossfight.testing")]
	public void Boss_Unchained()
	{
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0xAF1214", Offset = "0xAF1214", VA = "0xAF1214")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint1_Destroyed()
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0xAF12A4", Offset = "0xAF12A4", VA = "0xAF12A4")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint2_Destroyed()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0xAF1334", Offset = "0xAF1334", VA = "0xAF1334")]
	[Category("bossfight.testing")]
	public void Boss_Hitpoint3_Destroyed()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0xAF13C4", Offset = "0xAF13C4", VA = "0xAF13C4")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter1_Destroyed()
	{
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0xAF1454", Offset = "0xAF1454", VA = "0xAF1454")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter2_Destroyed()
	{
	}

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0xAF14E4", Offset = "0xAF14E4", VA = "0xAF14E4")]
	[Category("bossfight.testing")]
	public void Boss_Earthlifter3_Destroyed()
	{
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0xAF1574", Offset = "0xAF1574", VA = "0xAF1574")]
	[Category("heist.testing")]
	public void EnableCrane()
	{
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0xAF1604", Offset = "0xAF1604", VA = "0xAF1604")]
	[Category("heist.testing")]
	public void StartFactory()
	{
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0xAF1694", Offset = "0xAF1694", VA = "0xAF1694")]
	[Category("heist.testing")]
	public void SedateSharks()
	{
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0xAF1724", Offset = "0xAF1724", VA = "0xAF1724")]
	[Category("heist.testing")]
	public void DrainPool()
	{
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0xAF17B4", Offset = "0xAF17B4", VA = "0xAF17B4")]
	[Category("heist.testing")]
	public void ProfessorInVault()
	{
	}

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0xAF1844", Offset = "0xAF1844", VA = "0xAF1844")]
	[Category("heist.testing")]
	public void StartGas()
	{
	}

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0xAF18D4", Offset = "0xAF18D4", VA = "0xAF18D4")]
	[Category("Building Texture.testing")]
	[DisplayName("8k")]
	public void SwitchTo8K()
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0xAF193C", Offset = "0xAF193C", VA = "0xAF193C")]
	[Category("Building Texture.testing")]
	[DisplayName("4k")]
	public void SwitchTo4K()
	{
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0xAF19A4", Offset = "0xAF19A4", VA = "0xAF19A4")]
	[Category("Building Texture.testing")]
	[DisplayName("1k")]
	public void SwitchTo1K()
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0xAF1A0C", Offset = "0xAF1A0C", VA = "0xAF1A0C")]
	[Category("Building Texture.testing")]
	public void EnableFakeMips()
	{
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0xAF1A74", Offset = "0xAF1A74", VA = "0xAF1A74")]
	[Category("Building Texture.testing")]
	public void DisableFakeMips()
	{
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0xAF1AEC", Offset = "0xAF1AEC", VA = "0xAF1AEC")]
	[Category("Building Texture range.testing")]
	public void VisualizeTexture()
	{
	}

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0xAF1B9C", Offset = "0xAF1B9C", VA = "0xAF1B9C")]
	[Category("Building Texture range.testing")]
	public void VisualizeMinMax()
	{
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0xAF1C4C", Offset = "0xAF1C4C", VA = "0xAF1C4C")]
	[DisplayName("Max -")]
	[Category("Building Texture range.testing")]
	public void DecreaseMax()
	{
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0xAF1CE0", Offset = "0xAF1CE0", VA = "0xAF1CE0")]
	[Category("Building Texture range.testing")]
	[DisplayName("Max +")]
	public void IncreaseMax()
	{
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0xAF1D74", Offset = "0xAF1D74", VA = "0xAF1D74")]
	[DisplayName("Min -")]
	[Category("Building Texture range.testing")]
	public void DecreaseMin()
	{
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0xAF1E08", Offset = "0xAF1E08", VA = "0xAF1E08")]
	[Category("Building Texture range.testing")]
	[DisplayName("Min +")]
	public void IncreaseMin()
	{
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0xAF21FC", Offset = "0xAF21FC", VA = "0xAF21FC")]
	[Category("!!!CURRENT.navigation")]
	public void _()
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0xAF2180", Offset = "0xAF2180", VA = "0xAF2180")]
	private string GetTitle(Story story)
	{
		return null;
	}

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0xAF2200", Offset = "0xAF2200", VA = "0xAF2200")]
	[DisplayName("<")]
	[Category("!!STORY.navigation")]
	public void Previous()
	{
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0xAF24BC", Offset = "0xAF24BC", VA = "0xAF24BC")]
	[Category("!!STORY.navigation")]
	[DisplayName(">")]
	public void Next()
	{
	}

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0xAF25E0", Offset = "0xAF25E0", VA = "0xAF25E0")]
	[DisplayName("<")]
	[Category("!LEVEL.navigation")]
	public void DecLevel()
	{
	}

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0xAF25F4", Offset = "0xAF25F4", VA = "0xAF25F4")]
	[Category("!LEVEL.navigation")]
	[DisplayName(">")]
	public void IncLevel()
	{
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0xAF2774", Offset = "0xAF2774", VA = "0xAF2774")]
	[Category("LEVEL.navigation")]
	public void LoadSelectedLevel()
	{
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0xAF22A0", Offset = "0xAF22A0", VA = "0xAF22A0")]
	private void GetStoryName()
	{
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0xAF2FE0", Offset = "0xAF2FE0", VA = "0xAF2FE0")]
	[Category("capture2")]
	public void FlyCamPosReset()
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0xAF3598", Offset = "0xAF3598", VA = "0xAF3598")]
	[Category("testing.performance")]
	public void HideObjects()
	{
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0xAF35B8", Offset = "0xAF35B8", VA = "0xAF35B8")]
	[Category("testing.skybox")]
	public void ClearSkybox()
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0xAF3680", Offset = "0xAF3680", VA = "0xAF3680")]
	[Category("testing")]
	public void ToggleWaterRendering()
	{
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0xAF36A0", Offset = "0xAF36A0", VA = "0xAF36A0")]
	[Category("testing")]
	public void DefaultSurface()
	{
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0xAF36C0", Offset = "0xAF36C0", VA = "0xAF36C0")]
	[Category("testing")]
	public void SurfaceNoCull()
	{
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0xAF36E0", Offset = "0xAF36E0", VA = "0xAF36E0")]
	[Category("testing")]
	public void ToggleFoamline()
	{
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0xAF3700", Offset = "0xAF3700", VA = "0xAF3700")]
	[Category("testing")]
	public void SurfaceFoamNoise()
	{
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0xAF3720", Offset = "0xAF3720", VA = "0xAF3720")]
	[Category("testing")]
	public void SurfaceReflectionNoise()
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0xAF3740", Offset = "0xAF3740", VA = "0xAF3740")]
	[Category("testing")]
	public void SurfaceNoNoise()
	{
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0xAF3760", Offset = "0xAF3760", VA = "0xAF3760")]
	[Category("testing")]
	public void SurfaceQuestNoise()
	{
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0xAF3780", Offset = "0xAF3780", VA = "0xAF3780")]
	[Category("testing")]
	public void DebugTryFindSolution()
	{
	}

	[Token(Token = "0x6001B29")]
	[Address(RVA = "0xAF38BC", Offset = "0xAF38BC", VA = "0xAF38BC")]
	[Category("testing")]
	public void SpawnLevelEndBalloon()
	{
	}

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0xAF38DC", Offset = "0xAF38DC", VA = "0xAF38DC")]
	[DisplayName("F>>")]
	[Category("testing.font")]
	public void IncFontZBig()
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0xAF3A30", Offset = "0xAF3A30", VA = "0xAF3A30")]
	[DisplayName("F<<")]
	[Category("testing.font")]
	public void DecFontZBig()
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0xAF3A3C", Offset = "0xAF3A3C", VA = "0xAF3A3C")]
	[DisplayName("F>")]
	[Category("testing.font")]
	public void IncFontZSmall()
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0xAF3A48", Offset = "0xAF3A48", VA = "0xAF3A48")]
	[DisplayName("F<")]
	[Category("testing.font")]
	public void DecFontZSmall()
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0xAF3A54", Offset = "0xAF3A54", VA = "0xAF3A54")]
	[DisplayName("B>>")]
	[Category("testing.font")]
	public void IncBubbleZBig()
	{
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0xAF3BA8", Offset = "0xAF3BA8", VA = "0xAF3BA8")]
	[DisplayName("B<<")]
	[Category("testing.font")]
	public void DecBubbleZBig()
	{
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0xAF3BB4", Offset = "0xAF3BB4", VA = "0xAF3BB4")]
	[Category("testing.font")]
	[DisplayName("B>")]
	public void IncBubbleZSmall()
	{
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0xAF3BC0", Offset = "0xAF3BC0", VA = "0xAF3BC0")]
	[DisplayName("B<")]
	[Category("testing.font")]
	public void DecBubbleZSmall()
	{
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0xAF38E8", Offset = "0xAF38E8", VA = "0xAF38E8")]
	private void ChangeFontZ(float amount)
	{
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0xAF3A60", Offset = "0xAF3A60", VA = "0xAF3A60")]
	private void ChangeBubbleZ(float amount)
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0xAF3BCC", Offset = "0xAF3BCC", VA = "0xAF3BCC")]
	[Category("movement")]
	public void RigUp()
	{
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0xAF3C04", Offset = "0xAF3C04", VA = "0xAF3C04")]
	[Category("movement")]
	public void RigDown()
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0xAF3DB4", Offset = "0xAF3DB4", VA = "0xAF3DB4")]
	[Category("options.save")]
	public void LoadSlot1()
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0xAF3DC0", Offset = "0xAF3DC0", VA = "0xAF3DC0")]
	[Category("options.save")]
	public void LoadSlot2()
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0xAF3DCC", Offset = "0xAF3DCC", VA = "0xAF3DCC")]
	[Category("options.save")]
	public void LoadSlot3()
	{
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0xAF3DD8", Offset = "0xAF3DD8", VA = "0xAF3DD8")]
	[Category("options.save")]
	public void LoadSlot4()
	{
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0xAF3DE4", Offset = "0xAF3DE4", VA = "0xAF3DE4")]
	[Category("options.save")]
	public void LoadSlot5()
	{
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0xAF3DF0", Offset = "0xAF3DF0", VA = "0xAF3DF0")]
	[Category("options.Language")]
	public void English()
	{
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0xAF3DFC", Offset = "0xAF3DFC", VA = "0xAF3DFC")]
	[Category("options.Language")]
	public void German()
	{
	}

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0xAF3E08", Offset = "0xAF3E08", VA = "0xAF3E08")]
	[Category("options.Language")]
	public void French()
	{
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0xAF3E14", Offset = "0xAF3E14", VA = "0xAF3E14")]
	[Category("options.Language")]
	public void Spanish()
	{
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0xAF3E20", Offset = "0xAF3E20", VA = "0xAF3E20")]
	[Category("options.Language")]
	public void Russian()
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0xAF3E2C", Offset = "0xAF3E2C", VA = "0xAF3E2C")]
	[Category("options.Language")]
	public void BrasilPortoguese()
	{
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0xAF3E38", Offset = "0xAF3E38", VA = "0xAF3E38")]
	[Category("options.Language")]
	public void Japanese()
	{
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0xAF3E44", Offset = "0xAF3E44", VA = "0xAF3E44")]
	[Category("options.Language")]
	public void Korean()
	{
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0xAF3E50", Offset = "0xAF3E50", VA = "0xAF3E50")]
	[Category("options.Language")]
	public void SimplifiedChinese()
	{
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0xAF3E5C", Offset = "0xAF3E5C", VA = "0xAF3E5C")]
	[Category("options.Language")]
	public void TraditionalChinese()
	{
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0xAF3EF8", Offset = "0xAF3EF8", VA = "0xAF3EF8")]
	[Category("options")]
	public void ToggleCanvas()
	{
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0xAF3F5C", Offset = "0xAF3F5C", VA = "0xAF3F5C")]
	[Category("options")]
	public void DeleteOptions()
	{
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xAF4064", Offset = "0xAF4064", VA = "0xAF4064")]
	[Category("navigation")]
	public void ReplayIsland()
	{
	}

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0xAF4118", Offset = "0xAF4118", VA = "0xAF4118")]
	[Category("progression")]
	public void UnlockAllToMenu()
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0xAF41D0", Offset = "0xAF41D0", VA = "0xAF41D0")]
	[Category("progression")]
	public void UnlockAllAndResetLevel()
	{
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0xAF4288", Offset = "0xAF4288", VA = "0xAF4288")]
	[Category("navigation")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0xAF42AC", Offset = "0xAF42AC", VA = "0xAF42AC")]
	[Category("navigation")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0xAF42D0", Offset = "0xAF42D0", VA = "0xAF42D0")]
	[Category("navigation")]
	public void PreviousLevel()
	{
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0xAF42F0", Offset = "0xAF42F0", VA = "0xAF42F0")]
	[Category("navigation")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0xAF4328", Offset = "0xAF4328", VA = "0xAF4328")]
	[Category("progression")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0xAF43E4", Offset = "0xAF43E4", VA = "0xAF43E4")]
	[Category("progression")]
	public void SetLevelComplete()
	{
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0xAF4408", Offset = "0xAF4408", VA = "0xAF4408")]
	[Category("progression")]
	public void MarkThisLevelAsComplete()
	{
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0xAF4428", Offset = "0xAF4428", VA = "0xAF4428")]
	[Category("progression")]
	public void LogQuestStatus()
	{
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0xAF4448", Offset = "0xAF4448", VA = "0xAF4448")]
	[Category("progression")]
	public void LogActiveScenes()
	{
	}

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0xAF4558", Offset = "0xAF4558", VA = "0xAF4558")]
	[Category("options.MS")]
	public void KillWaveMovement()
	{
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0xAF4584", Offset = "0xAF4584", VA = "0xAF4584")]
	[Category("options.MS")]
	public void KillFoamMovement()
	{
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0xAF45B0", Offset = "0xAF45B0", VA = "0xAF45B0")]
	[Category("options.Control")]
	public void RecenterA()
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0xAF460C", Offset = "0xAF460C", VA = "0xAF460C")]
	[Category("options.Control")]
	public void RecenterB()
	{
	}

	[Token(Token = "0x6001B63")]
	[Address(RVA = "0xAF4830", Offset = "0xAF4830", VA = "0xAF4830")]
	[Category("testing.haptics")]
	public void HapticsTest()
	{
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0xAF4844", Offset = "0xAF4844", VA = "0xAF4844")]
	[Category("testing.performance")]
	public void LogCanvasPresent()
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0xAF4900", Offset = "0xAF4900", VA = "0xAF4900")]
	[Category("testing.performance")]
	public void DestroyAllCanvases()
	{
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0xAF4920", Offset = "0xAF4920", VA = "0xAF4920")]
	[Category("testing.performance")]
	public void DefaultFixedUpdate()
	{
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0xAF4970", Offset = "0xAF4970", VA = "0xAF4970")]
	[Category("testing.performance")]
	public void DecreaseFixedUpate()
	{
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0xAF49C8", Offset = "0xAF49C8", VA = "0xAF49C8")]
	[Category("testing.performance")]
	public void IncreaseFixedUpate()
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0xAF4A20", Offset = "0xAF4A20", VA = "0xAF4A20")]
	[Category("testing.performance")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0xAF4B8C", Offset = "0xAF4B8C", VA = "0xAF4B8C")]
	[Category("testing.performance")]
	public void AAX0()
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0xAF4B98", Offset = "0xAF4B98", VA = "0xAF4B98")]
	[Category("testing.performance")]
	public void AAX2()
	{
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0xAF4BA4", Offset = "0xAF4BA4", VA = "0xAF4BA4")]
	[Category("testing.performance")]
	public void AAX4()
	{
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0xAF4BB0", Offset = "0xAF4BB0", VA = "0xAF4BB0")]
	[Category("testing.performance")]
	public void AAX8()
	{
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0xAF4BBC", Offset = "0xAF4BBC", VA = "0xAF4BBC")]
	[Category("testing.performance")]
	public void LogAA()
	{
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0xAF4C64", Offset = "0xAF4C64", VA = "0xAF4C64")]
	[Category("testing.performance")]
	public void LogShadows()
	{
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0xAF4D34", Offset = "0xAF4D34", VA = "0xAF4D34")]
	[Category("testing.performance")]
	public void IncOversampling()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0xAF4DF8", Offset = "0xAF4DF8", VA = "0xAF4DF8")]
	[Category("testing.performance")]
	public void DecOversampling()
	{
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0xAF4EBC", Offset = "0xAF4EBC", VA = "0xAF4EBC")]
	[Category("testing.performance")]
	public void LogOversampling()
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0xAF5024", Offset = "0xAF5024", VA = "0xAF5024")]
	[Category("testing.performance")]
	public void Quest90FPS()
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0xAF5200", Offset = "0xAF5200", VA = "0xAF5200")]
	[Category("testing.performance")]
	public void Quest72FPS()
	{
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0xAF53DC", Offset = "0xAF53DC", VA = "0xAF53DC")]
	[Category("testing.EMO")]
	public void EMO_Talk()
	{
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0xAF5444", Offset = "0xAF5444", VA = "0xAF5444")]
	[Category("testing.EMO")]
	public void EMO_Question()
	{
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0xAF54AC", Offset = "0xAF54AC", VA = "0xAF54AC")]
	[Category("testing.EMO")]
	public void EMO_Hello()
	{
	}

	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0xAF5514", Offset = "0xAF5514", VA = "0xAF5514")]
	[Category("testing.EMO")]
	public void EMO_Fear()
	{
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0xAF557C", Offset = "0xAF557C", VA = "0xAF557C")]
	[Category("testing.EMO")]
	public void EMO_Angry()
	{
	}

	[Token(Token = "0x6001B80")]
	[Address(RVA = "0xAF55E4", Offset = "0xAF55E4", VA = "0xAF55E4")]
	[Category("testing.EMO")]
	public void EMO_Cheer()
	{
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0xAF564C", Offset = "0xAF564C", VA = "0xAF564C")]
	[Category("testing.EMO")]
	public void EMO_Cough()
	{
	}

	[Token(Token = "0x6001B82")]
	[Address(RVA = "0xAF56B4", Offset = "0xAF56B4", VA = "0xAF56B4")]
	[Category("testing.EMO")]
	public void EMO_Sympathy()
	{
	}

	[Token(Token = "0x6001B83")]
	[Address(RVA = "0xAF571C", Offset = "0xAF571C", VA = "0xAF571C")]
	[Category("testing.EMO")]
	public void EMO_Disgust()
	{
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0xAF5784", Offset = "0xAF5784", VA = "0xAF5784")]
	[Category("testing.EMO")]
	public void EMO_Test()
	{
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0xAF57EC", Offset = "0xAF57EC", VA = "0xAF57EC")]
	[Category("sandbox")]
	public void ToggleEditorReplicator()
	{
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0xAF5884", Offset = "0xAF5884", VA = "0xAF5884")]
	[Category("sandbox.performance")]
	[DisplayName("EntitesMax -")]
	public void EntitesDec()
	{
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0xAF597C", Offset = "0xAF597C", VA = "0xAF597C")]
	[Category("sandbox.performance")]
	[DisplayName("EntitesMax +")]
	public void EntitesInc()
	{
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0xAF5A70", Offset = "0xAF5A70", VA = "0xAF5A70")]
	[Category("sandbox")]
	public void SaveSandbox()
	{
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0xAF5A94", Offset = "0xAF5A94", VA = "0xAF5A94")]
	[Category("sandbox")]
	public void SandboxReload()
	{
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0xAF5AB4", Offset = "0xAF5AB4", VA = "0xAF5AB4")]
	[Category("sandbox")]
	public void JSONFieldLoad()
	{
	}

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0xAF25DC", Offset = "0xAF25DC", VA = "0xAF25DC")]
	private void OnValueChanged(string n, object newValue)
	{
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0xAF5AD4", Offset = "0xAF5AD4", VA = "0xAF5AD4")]
	public SROptions()
	{
	}
}
[Token(Token = "0x2000448")]
public delegate void SROptionsPropertyChanged(object sender, string propertyName);
[Token(Token = "0x2000449")]
public class WaterWaveModifier : MonoBehaviour
{
	[Token(Token = "0x200044A")]
	private struct Wave
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 position;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float progress;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float height;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float radius;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xAF6144", Offset = "0xAF6144", VA = "0xAF6144")]
		public Vector4 ToVector4()
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x4001B89")]
	private const int MaxWavesCount = 2;

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int wavesProperty;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Wave> waves;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector4[] wavesUniformArray;

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0xAF5E70", Offset = "0xAF5E70", VA = "0xAF5E70")]
	public static void AddWave(Vector3 position, float radius, float height)
	{
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0xAF5F7C", Offset = "0xAF5F7C", VA = "0xAF5F7C")]
	public static float GetWaves(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0xAF6164", Offset = "0xAF6164", VA = "0xAF6164")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0xAF617C", Offset = "0xAF617C", VA = "0xAF617C")]
	private void UpdateWaves()
	{
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0xAF633C", Offset = "0xAF633C", VA = "0xAF633C")]
	private void UpdateUniforms()
	{
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0xAF64A4", Offset = "0xAF64A4", VA = "0xAF64A4")]
	public WaterWaveModifier()
	{
	}
}
namespace Water
{
	[Token(Token = "0x200044B")]
	public static class Gerstner
	{
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xAF65D0", Offset = "0xAF65D0", VA = "0xAF65D0")]
		public static void Apply(ref Vector3 point, WaterPreset preset, float time)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xAF667C", Offset = "0xAF667C", VA = "0xAF667C")]
		private static float GetNoise(Vector2 x)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xAF6914", Offset = "0xAF6914", VA = "0xAF6914")]
		private static float GetHash(float n)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xAF695C", Offset = "0xAF695C", VA = "0xAF695C")]
		private static float Frac(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xAF68BC", Offset = "0xAF68BC", VA = "0xAF68BC")]
		private static Vector2 Frac(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xAF6990", Offset = "0xAF6990", VA = "0xAF6990")]
		private static float Floor(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xAF686C", Offset = "0xAF686C", VA = "0xAF686C")]
		private static Vector2 Floor(Vector2 v)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200044C")]
	[ExecuteInEditMode]
	public class WaterPreset : MonoBehaviour
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Min(0f)]
		[Header("Shape")]
		public float scale;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Min(0f)]
		public float steepness;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Min(0f)]
		public float length;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Min(0f)]
		public float height;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Min(0f)]
		public float speed;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Min(0f)]
		public float stretch;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 360f)]
		public float direction;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Surface Appearance")]
		public Color surfaceColor;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(1f, 16f)]
		public float surfaceFresnelAngle;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 0.1f)]
		public float surfaceFresnelFade;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color surfaceFresnelColor;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(1f, 16f)]
		public float surfaceSpecularStrength;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Surface Reflections")]
		[Min(0.1f)]
		public float surfaceReflectionsScale;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Min(0f)]
		public float surfaceReflectionsSpeed;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(0f, 1f)]
		public float surfaceReflectionsLight;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Range(0f, 1f)]
		public float surfaceReflectionsSpecular;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color surfaceReflectionsColor;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Surface Foam")]
		[Range(0f, 1f)]
		public float surfaceFoamWavesSticking;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Min(0f)]
		public float surfaceFoamSpeed;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Range(0f, 1f)]
		public float surfaceFoamDensity;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Min(0.1f)]
		public float surfaceFoamScale;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color surfaceFoamColor;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Shore Foam")]
		public Color shoreFoamColor;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Min(0f)]
		public float shoreFoamDistance;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Range(0f, 1f)]
		public float shoreFoamIntensity;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Shore Foam HQ")]
		[Min(0f)]
		public float shoreFoamFrequency;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Min(0f)]
		public float shoreFoamDensity;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Min(0f)]
		public float shoreFoamSpeed;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[Header("Underwater Appearance")]
		[Range(0f, 10f)]
		public float absorption;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color absorptionColor;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Min(0f)]
		public float refractionStrength;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Min(0f)]
		public float refractionIntensity;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Vector4 directionData;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xAF69C0", Offset = "0xAF69C0", VA = "0xAF69C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xAF6A18", Offset = "0xAF6A18", VA = "0xAF6A18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xAF6B88", Offset = "0xAF6B88", VA = "0xAF6B88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xAF6A70", Offset = "0xAF6A70", VA = "0xAF6A70")]
		private void UpdateDirection()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xAF6C3C", Offset = "0xAF6C3C", VA = "0xAF6C3C")]
		public WaterPreset()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public static class WaterSystem
	{
		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WaterPreset preset;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float heightOffset;

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xAF6D2C", Offset = "0xAF6D2C", VA = "0xAF6D2C")]
		public static float GetWaterHeight(float x, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xAF6AC8", Offset = "0xAF6AC8", VA = "0xAF6AC8")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xAF6DC0", Offset = "0xAF6DC0", VA = "0xAF6DC0")]
		private static void UpdateGlobalUniforms()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public static class WaterUniform
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Time;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int Scale;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int Length;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int Height;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int Speed;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int Stretch;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int Direction;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int Offset;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int SurfaceColor;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int SurfaceFresnelAngle;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int SurfaceFresnelFade;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int SurfaceFresnelColor;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int SurfaceSpecularStrength;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int SurfaceReflectionsScale;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int SurfaceReflectionsSpeed;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int SurfaceReflectionsLight;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int SurfaceReflectionsSpecular;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int SurfaceReflectionsColor;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int SurfaceFoamWavesSticking;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static int SurfaceFoamSpeed;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static int SurfaceFoamDensity;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static int SurfaceFoamScale;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static int SurfaceFoamColor;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static int ShoreFoamColor;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static int ShoreFoamDistance;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static int ShoreFoamIntensity;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static int ShoreFoamFrequency;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static int ShoreFoamDensity;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static int ShoreFoamSpeed;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static int Absorption;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static int AbsorptionColor;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static int RefractionStrength;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static int RefractionIntensity;
	}
}
namespace Technie.VirtualConsole
{
	[Token(Token = "0x200044F")]
	public class AutoBreakPanel : DebugPanel
	{
		[Token(Token = "0x2000450")]
		[CompilerGenerated]
		private sealed class <BreakTimerRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoBreakPanel <>4__this;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x170001DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BC1")]
				[Address(RVA = "0xAF7EEC", Offset = "0xAF7EEC", VA = "0xAF7EEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC3")]
				[Address(RVA = "0xAF7F34", Offset = "0xAF7F34", VA = "0xAF7F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xAF7CFC", Offset = "0xAF7CFC", VA = "0xAF7CFC")]
			[DebuggerHidden]
			public <BreakTimerRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xAF7D34", Offset = "0xAF7D34", VA = "0xAF7D34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xAF7D38", Offset = "0xAF7D38", VA = "0xAF7D38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xAF7EF4", Offset = "0xAF7EF4", VA = "0xAF7EF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float breakTimerDelaySecs;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text countdownDisplay;

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xAF7A6C", Offset = "0xAF7A6C", VA = "0xAF7A6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xAF7B18", Offset = "0xAF7B18", VA = "0xAF7B18", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xAF7B1C", Offset = "0xAF7B1C", VA = "0xAF7B1C", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xAF7B20", Offset = "0xAF7B20", VA = "0xAF7B20", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xAF7B24", Offset = "0xAF7B24", VA = "0xAF7B24")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xAF7B74", Offset = "0xAF7B74", VA = "0xAF7B74")]
		public void OnIncBreakTimer()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xAF7BE4", Offset = "0xAF7BE4", VA = "0xAF7BE4")]
		public void OnDecBreakTimer()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xAF7C5C", Offset = "0xAF7C5C", VA = "0xAF7C5C")]
		public void OnStartBreakTimer()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xAF7C88", Offset = "0xAF7C88", VA = "0xAF7C88")]
		[IteratorStateMachine(typeof(<BreakTimerRoutine>d__11))]
		private IEnumerator BreakTimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xAF7D24", Offset = "0xAF7D24", VA = "0xAF7D24")]
		public AutoBreakPanel()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class AutoScreenshot : DebugPanel
	{
		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <TimerRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutoScreenshot <>4__this;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <path>5__3;

			[Token(Token = "0x170001E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD7")]
				[Address(RVA = "0xAF8A78", Offset = "0xAF8A78", VA = "0xAF8A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD9")]
				[Address(RVA = "0xAF8AC0", Offset = "0xAF8AC0", VA = "0xAF8AC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xAF83DC", Offset = "0xAF83DC", VA = "0xAF83DC")]
			[DebuggerHidden]
			public <TimerRoutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xAF8404", Offset = "0xAF8404", VA = "0xAF8404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xAF8408", Offset = "0xAF8408", VA = "0xAF8408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xAF8A80", Offset = "0xAF8A80", VA = "0xAF8A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string screenshotOutputFolder;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float screenshotTimerDelaySecs;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int supersamplingAmount;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hidePanelsOnScreenshot;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text timerDelayDisplay;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text countdownDisplay;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text lastScreenshotPathDisplay;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text captureModeDisplay;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Toggle hidePanelsToggle;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject[] captureModeUiElements;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandAbstraction handAbstraction;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PanelManager panelManager;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ScreenCapture.StereoScreenCaptureMode captureMode;

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xAF7F3C", Offset = "0xAF7F3C", VA = "0xAF7F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xAF80EC", Offset = "0xAF80EC", VA = "0xAF80EC", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xAF80F0", Offset = "0xAF80F0", VA = "0xAF80F0", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xAF80F4", Offset = "0xAF80F4", VA = "0xAF80F4", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xAF80F8", Offset = "0xAF80F8", VA = "0xAF80F8")]
		public void OnAutoBreak()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xAF8148", Offset = "0xAF8148", VA = "0xAF8148")]
		public void OnIncTimer()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xAF81B8", Offset = "0xAF81B8", VA = "0xAF81B8")]
		public void OnDecTimer()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xAF8230", Offset = "0xAF8230", VA = "0xAF8230")]
		public void OnIncSupersampling()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xAF824C", Offset = "0xAF824C", VA = "0xAF824C")]
		public void OnDecSupersampling()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xAF8264", Offset = "0xAF8264", VA = "0xAF8264")]
		public void OnHidePanelsToggled()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xAF8284", Offset = "0xAF8284", VA = "0xAF8284")]
		public void OnNextCaptureMode()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xAF82A8", Offset = "0xAF82A8", VA = "0xAF82A8")]
		public void OnPrevCaptureMode()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xAF8020", Offset = "0xAF8020", VA = "0xAF8020")]
		private void UpdateCaptureModeDisplay()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xAF82CC", Offset = "0xAF82CC", VA = "0xAF82CC")]
		public void OnStartTimer()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xAF82F8", Offset = "0xAF82F8", VA = "0xAF82F8")]
		[IteratorStateMachine(typeof(<TimerRoutine>d__27))]
		private IEnumerator TimerRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xAF836C", Offset = "0xAF836C", VA = "0xAF836C")]
		public AutoScreenshot()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class DebugPanel : MonoBehaviour
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string panelName;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrDebugDisplay vrDisplay;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAttached;

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xAF8AC8", Offset = "0xAF8AC8", VA = "0xAF8AC8")]
		public bool IsAttached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xAF8AD0", Offset = "0xAF8AD0", VA = "0xAF8AD0")]
		public void NotifyOnAttach(VrDebugDisplay _vrDisplay)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xAF8AFC", Offset = "0xAF8AFC", VA = "0xAF8AFC")]
		public void NotifyOnDetach()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xAF8B0C", Offset = "0xAF8B0C", VA = "0xAF8B0C", Slot = "4")]
		public virtual void OnAttach()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xAF8B10", Offset = "0xAF8B10", VA = "0xAF8B10", Slot = "5")]
		public virtual void OnDetach()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xAF8B14", Offset = "0xAF8B14", VA = "0xAF8B14", Slot = "6")]
		public virtual void OnResized(VrDebugDisplay.State _size = VrDebugDisplay.State.NormalSize)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xAF8B18", Offset = "0xAF8B18", VA = "0xAF8B18")]
		public DebugPanel()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class ErrorExample : HandTrigger
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numErrorsTriggered;

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xAF8B20", Offset = "0xAF8B20", VA = "0xAF8B20", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xAF925C", Offset = "0xAF925C", VA = "0xAF925C")]
		public ErrorExample()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class ExceptionExample : HandTrigger
	{
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xAF926C", Offset = "0xAF926C", VA = "0xAF926C", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xAF9380", Offset = "0xAF9380", VA = "0xAF9380")]
		public ExceptionExample()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class HandTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxCollider area;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XrNodeRig xrRig;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasInBox;

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xAF9388", Offset = "0xAF9388", VA = "0xAF9388")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xAF9400", Offset = "0xAF9400", VA = "0xAF9400")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xAF94E8", Offset = "0xAF94E8", VA = "0xAF94E8")]
		private bool IsInBox(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xAF95C4", Offset = "0xAF95C4", VA = "0xAF95C4", Slot = "4")]
		public virtual void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xAF9264", Offset = "0xAF9264", VA = "0xAF9264")]
		public HandTrigger()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class InfoExample : HandTrigger
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int nextBallNumber;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xAF95C8", Offset = "0xAF95C8", VA = "0xAF95C8", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xAF97BC", Offset = "0xAF97BC", VA = "0xAF97BC")]
		public InfoExample()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class WarningExample : HandTrigger
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numWarningsTriggered;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xAF97CC", Offset = "0xAF97CC", VA = "0xAF97CC", Slot = "4")]
		public override void OnHandEntered()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xAF98D4", Offset = "0xAF98D4", VA = "0xAF98D4")]
		public WarningExample()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public enum HandType
	{
		[Token(Token = "0x4001BF8")]
		Invalid,
		[Token(Token = "0x4001BF9")]
		Left,
		[Token(Token = "0x4001BFA")]
		Right
	}
	[Token(Token = "0x200045A")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandType type;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackedTransform;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xAF98DC", Offset = "0xAF98DC", VA = "0xAF98DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xAF98E0", Offset = "0xAF98E0", VA = "0xAF98E0")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xAF9A6C", Offset = "0xAF9A6C", VA = "0xAF9A6C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class HandAbstraction : MonoBehaviour
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualConsole virtualConsole;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material laserMaterial;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite cursorSprite;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material cursorMaterial;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PanelManager panelManager;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WandInputModule wandInputModule;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hand leftHand;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hand rightHand;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UiStylus leftStylus;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UiStylus rightStylus;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool wasLeftDown;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool wasRightDown;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float findHandsTimer;

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xAF9A74", Offset = "0xAF9A74", VA = "0xAF9A74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xAF9A78", Offset = "0xAF9A78", VA = "0xAF9A78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xAF9A7C", Offset = "0xAF9A7C", VA = "0xAF9A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xAF9A80", Offset = "0xAF9A80", VA = "0xAF9A80")]
		private void FindHands()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xAFA4D0", Offset = "0xAFA4D0", VA = "0xAFA4D0")]
		private UiLaser CreateLaser()
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xAF9E4C", Offset = "0xAF9E4C", VA = "0xAF9E4C")]
		private UiStylus CreateStylus(HandType type, Transform handTransform, WandInputModule inputModule)
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xAF9F58", Offset = "0xAF9F58", VA = "0xAF9F58")]
		private void SetStylusPosition(UiStylus stylus, HandType hand, StylusPosition stylusPosition, Vector3 customStylusPosition)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xAFA6E8", Offset = "0xAFA6E8", VA = "0xAFA6E8")]
		public GameObject GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xAFA6F0", Offset = "0xAFA6F0", VA = "0xAFA6F0")]
		public GameObject GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xAFA6F8", Offset = "0xAFA6F8", VA = "0xAFA6F8")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xAFA82C", Offset = "0xAFA82C", VA = "0xAFA82C")]
		public void TriggerInput(HandType targetHand, bool which)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xAF8800", Offset = "0xAF8800", VA = "0xAF8800")]
		public void SetStylusVisible(bool visible)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xAFA9B4", Offset = "0xAFA9B4", VA = "0xAFA9B4")]
		public HandAbstraction()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class IsolatedEventSystem : EventSystem
	{
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xAFA9BC", Offset = "0xAFA9BC", VA = "0xAFA9BC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xAFA9C4", Offset = "0xAFA9C4", VA = "0xAFA9C4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xAFA9C8", Offset = "0xAFA9C8", VA = "0xAFA9C8", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xAFAA44", Offset = "0xAFAA44", VA = "0xAFAA44")]
		public IsolatedEventSystem()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class PanelManager : MonoBehaviour
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XrNodeRig xrRig;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VrDebugDisplay templateDisplay;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DebugPanel[] panels;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<VrDebugDisplay> displays;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInitialised;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timer;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool minimized;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xAFAA9C", Offset = "0xAFAA9C", VA = "0xAFAA9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xAFAB30", Offset = "0xAFAB30", VA = "0xAFAB30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xAFA1AC", Offset = "0xAFA1AC", VA = "0xAFA1AC")]
		public void OnHandsDetected(Camera eventCamera)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xAFB128", Offset = "0xAFB128", VA = "0xAFB128")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xAFAB34", Offset = "0xAFAB34", VA = "0xAFAB34")]
		private void CreateDisplay(HandType handType, Transform targetHand, Camera eventCamera)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xAFAD68", Offset = "0xAFAD68", VA = "0xAFAD68")]
		private VrDebugDisplay FindDisplay(HandType type)
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xAFB1F4", Offset = "0xAFB1F4", VA = "0xAFB1F4")]
		private DebugPanel FindPanel(string panelName)
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xAFAECC", Offset = "0xAFAECC", VA = "0xAFAECC")]
		private void AttachPanel(VrDebugDisplay display, DebugPanel panel)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xAFB5FC", Offset = "0xAFB5FC", VA = "0xAFB5FC")]
		public void ChangePanel(int direction, VrDebugDisplay display, DebugPanel currentPanel)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xAF8924", Offset = "0xAF8924", VA = "0xAF8924")]
		public void SetDisplaysVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xAFB7C8", Offset = "0xAFB7C8", VA = "0xAFB7C8")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xAFB850", Offset = "0xAFB850", VA = "0xAFB850")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class SRDebuggerPanel : DebugPanel
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RectTransform rt;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool reStrip;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timer;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrDebugDisplay.State size;

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xAFB858", Offset = "0xAFB858", VA = "0xAFB858")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xAFBF00", Offset = "0xAFBF00", VA = "0xAFBF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xAFB878", Offset = "0xAFB878", VA = "0xAFB878")]
		private void Strip()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xAFBF58", Offset = "0xAFBF58", VA = "0xAFBF58", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xAFBF5C", Offset = "0xAFBF5C", VA = "0xAFBF5C", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State _size = VrDebugDisplay.State.NormalSize)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xAFC2D4", Offset = "0xAFC2D4", VA = "0xAFC2D4")]
		public SRDebuggerPanel()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class UiIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xAFC2E4", Offset = "0xAFC2E4", VA = "0xAFC2E4", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xAFC2EC", Offset = "0xAFC2EC", VA = "0xAFC2EC")]
		public UiIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class UiLaser : MonoBehaviour
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WandInputModule inputModule;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject cylinder;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastDistance;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xAFC2F4", Offset = "0xAFC2F4", VA = "0xAFC2F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xAFA5B4", Offset = "0xAFA5B4", VA = "0xAFA5B4")]
		public void CreateBeam(Material material)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xAFC3E0", Offset = "0xAFC3E0", VA = "0xAFC3E0")]
		public void OnHandDetected(int index, GameObject handObj, WandInputModule wandInputModule)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xAFC414", Offset = "0xAFC414", VA = "0xAFC414")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xAFC910", Offset = "0xAFC910", VA = "0xAFC910")]
		private float CalcOpacity()
		{
			return default(float);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xAFC984", Offset = "0xAFC984", VA = "0xAFC984")]
		private float CalcOpacity(VrDebugDisplay display)
		{
			return default(float);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xAFC8A8", Offset = "0xAFC8A8", VA = "0xAFC8A8")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xAFCA54", Offset = "0xAFCA54", VA = "0xAFCA54")]
		private bool IsPointingAtPanel(VrDebugDisplay display)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xAFCC14", Offset = "0xAFCC14", VA = "0xAFCC14")]
		public UiLaser()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class UiStylus : MonoBehaviour
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material laserMaterial;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ballMaterial;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WandInputModule inputModule;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VrDebugDisplay[] displays;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject sphereObj;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject laserObj;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float distanceToPanel;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isButtonDown;

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xAFCC28", Offset = "0xAFCC28", VA = "0xAFCC28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xAFCF30", Offset = "0xAFCF30", VA = "0xAFCF30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xAFD424", Offset = "0xAFD424", VA = "0xAFD424")]
		private void SetVisualEnabled(bool visible)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xAFD1E0", Offset = "0xAFD1E0", VA = "0xAFD1E0")]
		private VrDebugDisplay FindClosestDisplay()
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xAFA7C0", Offset = "0xAFA7C0", VA = "0xAFA7C0")]
		public bool IsPointingAtPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xAFD444", Offset = "0xAFD444", VA = "0xAFD444")]
		public UiStylus()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public enum StylusPosition
	{
		[Token(Token = "0x4001C26")]
		Bottom,
		[Token(Token = "0x4001C27")]
		Left,
		[Token(Token = "0x4001C28")]
		Right,
		[Token(Token = "0x4001C29")]
		Top,
		[Token(Token = "0x4001C2A")]
		Custom
	}
	[Token(Token = "0x2000464")]
	public enum CameraDetectionMode
	{
		[Token(Token = "0x4001C2C")]
		Automatic,
		[Token(Token = "0x4001C2D")]
		UseExplicitCameraReference,
		[Token(Token = "0x4001C2E")]
		UseExplicitCameraName
	}
	[Token(Token = "0x2000465")]
	public class VirtualConsole : MonoBehaviour
	{
		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Stylus Locations")]
		public StylusPosition leftStylusPosition;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StylusPosition rightStylusPosition;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Custom Locations")]
		public Vector3 customLeftStylusPosition;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 customRightStylusPosition;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Camera Detection")]
		public CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera explicitVrCameraReference;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string explicitVrCameraName;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject sub;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualConsole instance;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HandAbstraction handAbstraction;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XrNodeRig xrNodeRig;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool isActive;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] menuDown;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool disableVRDebugger;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float downCounter;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool buttonsUp;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float waitTime;

		[Token(Token = "0x170001E2")]
		public static VirtualConsole Instance
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xAFD458", Offset = "0xAFD458", VA = "0xAFD458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xAFD4A0", Offset = "0xAFD4A0", VA = "0xAFD4A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xAFD75C", Offset = "0xAFD75C", VA = "0xAFD75C")]
		private void InitSRDEBUG()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xAFD5D0", Offset = "0xAFD5D0", VA = "0xAFD5D0")]
		public void SetVirtualConsole(bool which)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xAFD780", Offset = "0xAFD780", VA = "0xAFD780")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xAFD984", Offset = "0xAFD984", VA = "0xAFD984")]
		private void SecondButtonDown(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xAFD9C0", Offset = "0xAFD9C0", VA = "0xAFD9C0")]
		private void SecondButtonUp(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xAFD9F8", Offset = "0xAFD9F8", VA = "0xAFD9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xAFDB1C", Offset = "0xAFDB1C", VA = "0xAFDB1C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xAFDBD8", Offset = "0xAFDBD8", VA = "0xAFDBD8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xAFDC60", Offset = "0xAFDC60", VA = "0xAFDC60")]
		public GameObject GetHand(HandType hand)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xAFDCD8", Offset = "0xAFDCD8", VA = "0xAFDCD8")]
		public bool HasTarget(HandType targetHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xAFDD70", Offset = "0xAFDD70", VA = "0xAFDD70")]
		private void TriggerDown(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xAFDE2C", Offset = "0xAFDE2C", VA = "0xAFDE2C")]
		private void TriggerUp(VRControllerMapper mapper)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xAFDD90", Offset = "0xAFDD90", VA = "0xAFDD90")]
		public void TriggerInput(HandType targetHand, bool which)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xAFDE4C", Offset = "0xAFDE4C", VA = "0xAFDE4C")]
		public VirtualConsole()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class VrConsole : DebugPanel
	{
		[Token(Token = "0x2000467")]
		private struct LogMessage
		{
			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LogType type;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int sequenceNumber;

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xAFF2B0", Offset = "0xAFF2B0", VA = "0xAFF2B0")]
			public LogMessage(string t, string trace, LogType type, int seqNum)
			{
			}
		}

		[Token(Token = "0x2000468")]
		private struct LogLine
		{
			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color colour;

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xAFF394", Offset = "0xAFF394", VA = "0xAFF394")]
			public LogLine(string s, Color c)
			{
			}

			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xAFF9C4", Offset = "0xAFF9C4", VA = "0xAFF9C4")]
			public string AsRichText()
			{
				return null;
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xB000FC", Offset = "0xB000FC", VA = "0xB000FC")]
			private static string ToHex(float val)
			{
				return null;
			}
		}

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text consoleArea;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button infoToggleButton;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button warningToggleButton;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button errorToggleButton;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text infoButtonText;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text warningButtonText;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text errorButtonText;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object mutex;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LogMessage> infoMessages;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<LogMessage> warningMessages;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<LogMessage> errorMessages;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int numInfos;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int numWarnings;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int numErrors;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int nextSequenceNumber;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool hasMessagesChanged;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool showInfo;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool showWarnings;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool showErrors;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int maxLines;

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xAFDEC0", Offset = "0xAFDEC0", VA = "0xAFDEC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xAFDF40", Offset = "0xAFDF40", VA = "0xAFDF40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xAFDFC0", Offset = "0xAFDFC0", VA = "0xAFDFC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xAFEFFC", Offset = "0xAFEFFC", VA = "0xAFEFFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xAFF00C", Offset = "0xAFF00C", VA = "0xAFF00C", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xAFF010", Offset = "0xAFF010", VA = "0xAFF010", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xAFF014", Offset = "0xAFF014", VA = "0xAFF014", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xAFF018", Offset = "0xAFF018", VA = "0xAFF018")]
		private void HandleLog(string text, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xAFDFD8", Offset = "0xAFDFD8", VA = "0xAFDFD8")]
		private void UpdateLogVisual()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xAFF7C8", Offset = "0xAFF7C8", VA = "0xAFF7C8")]
		private bool TryGenerateConsoleText(List<LogLine> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xAFF2F8", Offset = "0xAFF2F8", VA = "0xAFF2F8")]
		private List<LogMessage> FindList(LogType type)
		{
			return null;
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xAFF340", Offset = "0xAFF340", VA = "0xAFF340")]
		private void IncLogCount(LogType type)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xAFFAD8", Offset = "0xAFFAD8", VA = "0xAFFAD8")]
		private int SequenceComparator(LogMessage lhs, LogMessage rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xAFF3D4", Offset = "0xAFF3D4", VA = "0xAFF3D4")]
		private bool ParseTrace(string traceLine, out string namespaceName, out string className, out string methodName, out string fileName, out int lineNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xAFFAF8", Offset = "0xAFFAF8", VA = "0xAFFAF8")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xAFFCC0", Offset = "0xAFFCC0", VA = "0xAFFCC0")]
		public void ToggleInfo()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xAFFCD8", Offset = "0xAFFCD8", VA = "0xAFFCD8")]
		public void ToggleWarnings()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xAFFCF0", Offset = "0xAFFCF0", VA = "0xAFFCF0")]
		public void ToggleErrors()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xAFEEB4", Offset = "0xAFEEB4", VA = "0xAFEEB4")]
		private void UpdateButtonColours()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xAFFDA8", Offset = "0xAFFDA8", VA = "0xAFFDA8")]
		private static void SetColour(Button button, Color col)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xAFFE14", Offset = "0xAFFE14", VA = "0xAFFE14")]
		private static void SetText(Text text, int count)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xAFFE68", Offset = "0xAFFE68", VA = "0xAFFE68")]
		public VrConsole()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class VrDebugDisplay : MonoBehaviour
	{
		[Token(Token = "0x200046A")]
		public enum State
		{
			[Token(Token = "0x4001C6B")]
			Collapsed,
			[Token(Token = "0x4001C6C")]
			NormalSize,
			[Token(Token = "0x4001C6D")]
			LargeSize
		}

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas collapsedCanvas;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandType handType;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform center;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform panelAttach;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float panelScale;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text titleText;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text maximiseText;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PanelManager panelManager;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[ReadOnly]
		public GameObject targetHand;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public Camera eventCamera;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public State state;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private State prevState;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DebugPanel attachedPanel;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool disableCanvasWhenNotInView;

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xB00234", Offset = "0xB00234", VA = "0xB00234")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xB00368", Offset = "0xB00368", VA = "0xB00368")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xB0036C", Offset = "0xB0036C", VA = "0xB0036C")]
		private void TrackTargetHand()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xB0061C", Offset = "0xB0061C", VA = "0xB0061C")]
		public void AllowDisableCanvasWhenNotInView(bool allow)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xAFAF80", Offset = "0xAFAF80", VA = "0xAFAF80")]
		public void OnToggleSize(bool forceLarge = false)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xAFB19C", Offset = "0xAFB19C", VA = "0xAFB19C")]
		public void OnCollapse()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xB00628", Offset = "0xB00628", VA = "0xB00628")]
		public void OnRestore()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xB00690", Offset = "0xB00690", VA = "0xB00690")]
		public void OnNextPanel()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xB006B4", Offset = "0xB006B4", VA = "0xB006B4")]
		public void OnPrevPanel()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xAFD388", Offset = "0xAFD388", VA = "0xAFD388")]
		public float DistanceTo(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xAFD2FC", Offset = "0xAFD2FC", VA = "0xAFD2FC")]
		public Vector3 FindClosestPoint(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xB006D8", Offset = "0xB006D8", VA = "0xB006D8")]
		private Vector3 ClosestPoint(Vector3 worldPosition, Canvas canvas, Vector2 canvasSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xAFB274", Offset = "0xAFB274", VA = "0xAFB274")]
		public void Attach(DebugPanel newPanel)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xAFB784", Offset = "0xAFB784", VA = "0xAFB784")]
		public void SetDisplayVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xB00788", Offset = "0xB00788", VA = "0xB00788")]
		public VrDebugDisplay()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class VrDebugStats : DebugPanel
	{
		[Token(Token = "0x200046C")]
		private class StatPage
		{
			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, string> stats;

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xB01AAC", Offset = "0xB01AAC", VA = "0xB01AAC")]
			public StatPage(string cat)
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xB01A44", Offset = "0xB01A44", VA = "0xB01A44")]
			public void SetStat(string name, string value)
			{
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xB01210", Offset = "0xB01210", VA = "0xB01210")]
			public void GetStats(List<string> keys, List<string> values)
			{
			}
		}

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text pageTitle;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text fullPanelText;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text leftCollumnText;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text rightCollumnText;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool allowLogging;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, StatPage> pages;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<string> categories;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool hasStatsChanged;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentCategory;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool useTwoCollumns;

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xB007A0", Offset = "0xB007A0", VA = "0xB007A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xB00850", Offset = "0xB00850", VA = "0xB00850")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xB00EA8", Offset = "0xB00EA8", VA = "0xB00EA8", Slot = "4")]
		public override void OnAttach()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xB00F04", Offset = "0xB00F04", VA = "0xB00F04", Slot = "5")]
		public override void OnDetach()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xB00F08", Offset = "0xB00F08", VA = "0xB00F08", Slot = "6")]
		public override void OnResized(VrDebugDisplay.State size)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xB008D4", Offset = "0xB008D4", VA = "0xB008D4")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xB014AC", Offset = "0xB014AC", VA = "0xB014AC")]
		private bool TryGenerateConsoleText(List<string> lines, Text targetTextArea, int numLines, out string newText)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xB01630", Offset = "0xB01630", VA = "0xB01630")]
		public void ClearStats()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xB01768", Offset = "0xB01768", VA = "0xB01768")]
		public void PrevCategory()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xB01938", Offset = "0xB01938", VA = "0xB01938")]
		public void NextCateogry()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xB01770", Offset = "0xB01770", VA = "0xB01770")]
		private void ChangeCategory(int direction)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xB01940", Offset = "0xB01940", VA = "0xB01940")]
		public static void AllowLogging(bool allow)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xAF92F8", Offset = "0xAF92F8", VA = "0xAF92F8")]
		public static void SetStat(string category, string name, bool value)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xAF91D8", Offset = "0xAF91D8", VA = "0xAF91D8")]
		public static void SetStat(string category, string name, int value)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xB0199C", Offset = "0xB0199C", VA = "0xB0199C")]
		public static void SetStat(string category, string name, string value)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xB00FF4", Offset = "0xB00FF4", VA = "0xB00FF4")]
		private static StatPage FindPage(string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xB01B34", Offset = "0xB01B34", VA = "0xB01B34")]
		public VrDebugStats()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class WandInputModule : BaseInputModule
	{
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WandInputModule Instance;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header(" [Cursor setup]")]
		public Sprite CursorSprite;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material CursorMaterial;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float NormalCursorScale;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Header(" [Runtime variables]")]
		[Space(10f)]
		[Tooltip("Indicates whether or not the gui was hit by any controller this frame")]
		public bool guiHit;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[Tooltip("Indicates whether or not a button was used this frame")]
		public bool ButtonUsed;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Generated cursors")]
		public RectTransform[] Cursors;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Generated non rendering camera (used for raycasting ui)")]
		public Camera ControllerCamera;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color[] cursorColours;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool ignoreOverlayCanvases;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform[] raycastOrigin;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool[] raycastActive;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] CurrentRaycastPosition;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Ray[] LastRays;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool[] latchedDownEdges;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool[] latchedUpEdges;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool Initialized;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xB01C7C", Offset = "0xB01C7C", VA = "0xB01C7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xB01C84", Offset = "0xB01C84", VA = "0xB01C84", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xAFA1A8", Offset = "0xAFA1A8", VA = "0xAFA1A8")]
		public void OnHandsDetected(HandAbstraction hands)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xAFA07C", Offset = "0xAFA07C", VA = "0xAFA07C")]
		public void SetRaycastOrigins(Transform leftOrigin, Transform rightOrigin)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xAFD2B4", Offset = "0xAFD2B4", VA = "0xAFD2B4")]
		public void SetRaycastActive(HandType hand, bool isActive)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xB01C8C", Offset = "0xB01C8C", VA = "0xB01C8C")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xB02590", Offset = "0xB02590", VA = "0xB02590")]
		public Camera GetControllerCamera()
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xB02598", Offset = "0xB02598", VA = "0xB02598")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xB02B00", Offset = "0xB02B00", VA = "0xB02B00")]
		private static Canvas FindParentCanvas(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xB02C18", Offset = "0xB02C18", VA = "0xB02C18")]
		private void UpdateCursor(int index, PointerEventData pointData)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xB02FC0", Offset = "0xB02FC0", VA = "0xB02FC0")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xB0304C", Offset = "0xB0304C", VA = "0xB0304C")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xB03130", Offset = "0xB03130", VA = "0xB03130")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xB03278", Offset = "0xB03278", VA = "0xB03278")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xB03314", Offset = "0xB03314", VA = "0xB03314", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xB03FE8", Offset = "0xB03FE8", VA = "0xB03FE8")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xB0402C", Offset = "0xB0402C", VA = "0xB0402C")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xAFA8D8", Offset = "0xAFA8D8", VA = "0xAFA8D8")]
		public void LatchButtonDown(int index)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xAFA90C", Offset = "0xAFA90C", VA = "0xAFA90C")]
		public void LatchButtonUp(int index)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xAFC7DC", Offset = "0xAFC7DC", VA = "0xAFC7DC")]
		public bool HasCurrentPointTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xAFC86C", Offset = "0xAFC86C", VA = "0xAFC86C")]
		public Vector3 GetCurrentPointPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xB04070", Offset = "0xB04070", VA = "0xB04070")]
		public bool HasLeftPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xB040E8", Offset = "0xB040E8", VA = "0xB040E8")]
		public bool HasRightPointTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xAFA940", Offset = "0xAFA940", VA = "0xAFA940")]
		public void SetCursorsVisible(bool visible)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xB04164", Offset = "0xB04164", VA = "0xB04164")]
		public WandInputModule()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class XrNodeRig : MonoBehaviour
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform headTransform;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHandTransform;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTransform;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraDetectionMode cameraDetectionMode;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera explicitVrCameraReference;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string explicitVrCameraName;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera vrCamera;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool hasShowExplicitCameraWarning;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xAFD598", Offset = "0xAFD598", VA = "0xAFD598")]
		public void SetCameraDetection(CameraDetectionMode mode, Camera explicitRef, string explicitName)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xB04180", Offset = "0xB04180", VA = "0xB04180")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xB049D8", Offset = "0xB049D8", VA = "0xB049D8")]
		private void Sync(XRNodeState node, Transform destTransform)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xB04668", Offset = "0xB04668", VA = "0xB04668")]
		private bool IsVrCameraValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xB04708", Offset = "0xB04708", VA = "0xB04708")]
		private void FindVrCamera()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xB04A9C", Offset = "0xB04A9C", VA = "0xB04A9C")]
		public XrNodeRig()
		{
		}
	}
}
namespace MK.XRay
{
	[Token(Token = "0x200046F")]
	public class AutoEnableObjects : MonoBehaviour
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle xRayToggle;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject basic;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject xray;

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xB04AAC", Offset = "0xB04AAC", VA = "0xB04AAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xB04B10", Offset = "0xB04B10", VA = "0xB04B10")]
		public AutoEnableObjects()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class InfoTextDisable : MonoBehaviour
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject objectToDestroy;

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xB04B18", Offset = "0xB04B18", VA = "0xB04B18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xB04BA8", Offset = "0xB04BA8", VA = "0xB04BA8")]
		public InfoTextDisable()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class MKXRayCopyPropertiesRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material src;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] dst;

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xB04BB0", Offset = "0xB04BB0", VA = "0xB04BB0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xB04D70", Offset = "0xB04D70", VA = "0xB04D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xB05074", Offset = "0xB05074", VA = "0xB05074")]
		public MKXRayCopyPropertiesRuntime()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class MKXRayDemoControl : MonoBehaviour
	{
		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool settingsUsed;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int currentModel;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Material> baseMaterials;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> currentMaterials;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> gameObjects;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider emissionIntensitySlider;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float emissionIntensity;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider xRayInsideSlider;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float xRayInside;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Slider xRayRimSizeSlider;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float xRayRimSize;

		[Token(Token = "0x170001E3")]
		public static bool SettingsUsed
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xB0507C", Offset = "0xB0507C", VA = "0xB0507C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public static int CurrentModel
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xB050D4", Offset = "0xB050D4", VA = "0xB050D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E5")]
		public float EmissionIntensity
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xB0512C", Offset = "0xB0512C", VA = "0xB0512C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xB05134", Offset = "0xB05134", VA = "0xB05134")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public float XRayInside
		{
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xB05208", Offset = "0xB05208", VA = "0xB05208")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xB05210", Offset = "0xB05210", VA = "0xB05210")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public float XRayRimSize
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xB052AC", Offset = "0xB052AC", VA = "0xB052AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xB052B4", Offset = "0xB052B4", VA = "0xB052B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xB05350", Offset = "0xB05350", VA = "0xB05350")]
		private void SetupMaterials()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xB05818", Offset = "0xB05818", VA = "0xB05818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xB05830", Offset = "0xB05830", VA = "0xB05830")]
		public void ChangeModel()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xB05B58", Offset = "0xB05B58", VA = "0xB05B58")]
		private void SetMaterialSettingsToSliders()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xB05A70", Offset = "0xB05A70", VA = "0xB05A70")]
		private void SetValuesFromMaterial()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xB05BBC", Offset = "0xB05BBC", VA = "0xB05BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xB05CFC", Offset = "0xB05CFC", VA = "0xB05CFC")]
		public MKXRayDemoControl()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class MKXRayDemoMouseOrbitImproved : MonoBehaviour
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float x;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float y;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 lastPosTouch;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 currentPosTouch;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastX;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lastY;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xB05EA4", Offset = "0xB05EA4", VA = "0xB05EA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xB05F78", Offset = "0xB05F78", VA = "0xB05F78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xB063A8", Offset = "0xB063A8", VA = "0xB063A8")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xB063E4", Offset = "0xB063E4", VA = "0xB063E4")]
		public MKXRayDemoMouseOrbitImproved()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public static class MKXRayFreeMaterialHelper
	{
		[Token(Token = "0x2000475")]
		public static class PropertyNames
		{
			[Token(Token = "0x4001CB7")]
			public const string SHOW_MAIN_BEHAVIOR = "_MKEditorShowMainBehavior";

			[Token(Token = "0x4001CB8")]
			public const string SHOW_XRAY_BEHAVIOR = "_MKEditorShowXRayBehavior";

			[Token(Token = "0x4001CB9")]
			public const string MAIN_COLOR = "_MainColor";

			[Token(Token = "0x4001CBA")]
			public const string XRAY_RIM_COLOR = "_XRayRimColor";

			[Token(Token = "0x4001CBB")]
			public const string XRAY_RIM_SIZE = "_XRayRimSize";

			[Token(Token = "0x4001CBC")]
			public const string XRAY_INSIDE = "_XRayInside";

			[Token(Token = "0x4001CBD")]
			public const string EMISSION_COLOR = "_EmissionColor";

			[Token(Token = "0x4001CBE")]
			public const string EMISSION = "_Emission";
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xB0640C", Offset = "0xB0640C", VA = "0xB0640C")]
		public static void SetMainColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xB06490", Offset = "0xB06490", VA = "0xB06490")]
		public static Color MainColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xB064E4", Offset = "0xB064E4", VA = "0xB064E4")]
		public static void SetXRayRimColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xB06568", Offset = "0xB06568", VA = "0xB06568")]
		public static Color GetXRayRimColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xB05010", Offset = "0xB05010", VA = "0xB05010")]
		public static void SetXRayRimSize(Material material, float size)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xB04FBC", Offset = "0xB04FBC", VA = "0xB04FBC")]
		public static float GetXRayRimSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xB04F58", Offset = "0xB04F58", VA = "0xB04F58")]
		public static void SetXRayInside(Material material, float v)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xB04F04", Offset = "0xB04F04", VA = "0xB04F04")]
		public static float GetXRayInside(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xB04E80", Offset = "0xB04E80", VA = "0xB04E80")]
		public static void SetEmissionColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xB04E2C", Offset = "0xB04E2C", VA = "0xB04E2C")]
		public static Color GetEmissionColor(Material material)
		{
			return default(Color);
		}
	}
}
namespace Stacked
{
	[Token(Token = "0x2000476")]
	public class Timer : MonoBehaviour
	{
		[Token(Token = "0x2000477")]
		[CompilerGenerated]
		private sealed class <CountDownTimerTick>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timer <>4__this;

			[Token(Token = "0x170001E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC5")]
				[Address(RVA = "0xB06D78", Offset = "0xB06D78", VA = "0xB06D78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC7")]
				[Address(RVA = "0xB06DC0", Offset = "0xB06DC0", VA = "0xB06DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xB06B4C", Offset = "0xB06B4C", VA = "0xB06B4C")]
			[DebuggerHidden]
			public <CountDownTimerTick>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xB06C20", Offset = "0xB06C20", VA = "0xB06C20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xB06C24", Offset = "0xB06C24", VA = "0xB06C24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xB06D80", Offset = "0xB06D80", VA = "0xB06D80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000478")]
		[CompilerGenerated]
		private sealed class <TimerTick>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timer <>4__this;

			[Token(Token = "0x170001EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCB")]
				[Address(RVA = "0xB06EEC", Offset = "0xB06EEC", VA = "0xB06EEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCD")]
				[Address(RVA = "0xB06F34", Offset = "0xB06F34", VA = "0xB06F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xB06B74", Offset = "0xB06B74", VA = "0xB06B74")]
			[DebuggerHidden]
			public <TimerTick>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xB06DC8", Offset = "0xB06DC8", VA = "0xB06DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xB06DCC", Offset = "0xB06DCC", VA = "0xB06DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xB06EF4", Offset = "0xB06EF4", VA = "0xB06EF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite[] DigitsSprite;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] Digits;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Columm;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite ColumnOn;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite ColumnOff;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int TimeSeconds;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool CountDown;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool Paused;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool IsTimeOver;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent TimeOver;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float timeFloat;

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xB065BC", Offset = "0xB065BC", VA = "0xB065BC")]
		public void StopTimer()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xB06A08", Offset = "0xB06A08", VA = "0xB06A08")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xB06B44", Offset = "0xB06B44", VA = "0xB06B44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xB065E0", Offset = "0xB065E0", VA = "0xB065E0")]
		private int GetTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xB06A5C", Offset = "0xB06A5C", VA = "0xB06A5C")]
		[IteratorStateMachine(typeof(<CountDownTimerTick>d__15))]
		public IEnumerator CountDownTimerTick()
		{
			return null;
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xB06AD0", Offset = "0xB06AD0", VA = "0xB06AD0")]
		[IteratorStateMachine(typeof(<TimerTick>d__16))]
		public IEnumerator TimerTick()
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xB06B9C", Offset = "0xB06B9C", VA = "0xB06B9C")]
		private void Reset(int seconds)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xB06BD4", Offset = "0xB06BD4", VA = "0xB06BD4")]
		private void Dash()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xB066C0", Offset = "0xB066C0", VA = "0xB066C0")]
		private void ClockDisplay(int time)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xB06C10", Offset = "0xB06C10", VA = "0xB06C10")]
		public Timer()
		{
		}
	}
}
namespace Liminal
{
	[Token(Token = "0x2000479")]
	public class RecenterController : MonoBehaviour
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float IsHumanTurnLowestThreshold;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float IsHumanTurnThreshold;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RecenterThreshold;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeElapsedThresholdForRecenter;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion _lastHeadRotation;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnRecenterEstimated;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lookDotProduct;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _timeSinceMatched;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentFrame;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _recenterCounted;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timeElaspedDisplay;

		[Token(Token = "0x170001EC")]
		public Camera Head
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xB06F3C", Offset = "0xB06F3C", VA = "0xB06F3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xB06F44", Offset = "0xB06F44", VA = "0xB06F44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xB06FF4", Offset = "0xB06FF4", VA = "0xB06FF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xB07074", Offset = "0xB07074", VA = "0xB07074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xB070F4", Offset = "0xB070F4", VA = "0xB070F4")]
		private void OnMove()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xB070F8", Offset = "0xB070F8", VA = "0xB070F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xB06F48", Offset = "0xB06F48", VA = "0xB06F48")]
		public void Match()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xB07374", Offset = "0xB07374", VA = "0xB07374")]
		public void Recenter()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xB07530", Offset = "0xB07530", VA = "0xB07530")]
		public RecenterController()
		{
		}
	}
}
namespace GameQuest
{
	[Token(Token = "0x200047A")]
	[CreateAssetMenu(fileName = "New Level", menuName = "Quest System/Level", order = 1)]
	public class Level : ScriptableObject
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneReference MainScene;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneReference[] Dependecies;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Story parentStory;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D photo;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsMenuLevel;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool IsOptionsLevel;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int CrystalThreatLevel;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string localisationPlaceID;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool noNavigationScene;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[Header("spawn zeppelin -> can be set via levelDirector?")]
		public bool spawnNextButtonAfterLevelDone;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool sceneHasLightProbes;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool myTempBlockNextButtonAfterLevelDone;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("do transition after level done -> can be set via levelDirector?")]
		public bool autoLoadNextLevelAfterLevelDone;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool completionCountEnabled;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool isSandbox;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[Header("dispenser autospawn & moving around")]
		public bool positionsDispenser;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("replicator autospawn & moving around")]
		public bool positionsReplicator;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[Header("Resetti asks or just talks?")]
		public bool resettiAsksQuestion;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[Header("Then the image/drawing needs to be set")]
		public bool resettiMakesDrawing;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Resetti draws this image")]
		public Texture2D resettiDrawing;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool resettiEmptyConvoOnLevelDone;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		[Header("default locaID From story if empty - override can be any ID")]
		public string overrideTitleLocationID;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool noTitleBeforeLevel;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool overrideTransitionColors;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color transitionColor1;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color transitionColor2;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Space]
		public float levelEndSFXParameterValue;

		[NonSerialized]
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int timesLoadedPerSession;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int tipPhase;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool enableSeagullSFX;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public EventReference levelAudioTrack;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string songTitleRef;

		[Token(Token = "0x170001ED")]
		public bool Completed
		{
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xB07544", Offset = "0xB07544", VA = "0xB07544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xB07604", Offset = "0xB07604", VA = "0xB07604")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public bool TempBlockNextButtonAfterLevelDone
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xB0782C", Offset = "0xB0782C", VA = "0xB0782C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xB07834", Offset = "0xB07834", VA = "0xB07834")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public List<Achievement> AchievementToUnlock
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xB07840", Offset = "0xB07840", VA = "0xB07840")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xB07848", Offset = "0xB07848", VA = "0xB07848")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xB07850", Offset = "0xB07850", VA = "0xB07850")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xB078B4", Offset = "0xB078B4", VA = "0xB078B4")]
		public int GetPosition()
		{
			return default(int);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xB0790C", Offset = "0xB0790C", VA = "0xB0790C")]
		[ContextMenu("Mark this level as completed")]
		public void MarkAsCompleted()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xB07B6C", Offset = "0xB07B6C", VA = "0xB07B6C")]
		[ContextMenu("Mark this level as LAST completed")]
		public void MarkAsLastCompleted()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xB07D14", Offset = "0xB07D14", VA = "0xB07D14")]
		public Level()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047B")]
	[CreateAssetMenu(fileName = "New Quest", menuName = "Quest System/Quest", order = 3)]
	public class Quest : ScriptableObject
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Story[] Stories;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Obsolete]
		public SceneReference[] Dependecies;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ForceActive;

		[NonSerialized]
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] lazy_level_ordered;

		[Token(Token = "0x170001F0")]
		public static string MainQuestID
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xB07DF8", Offset = "0xB07DF8", VA = "0xB07DF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public bool Active
		{
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xB07E50", Offset = "0xB07E50", VA = "0xB07E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xB07F50", Offset = "0xB07F50", VA = "0xB07F50")]
			set
			{
			}
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xB07FCC", Offset = "0xB07FCC", VA = "0xB07FCC")]
		public string[] levels()
		{
			return null;
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xB08180", Offset = "0xB08180", VA = "0xB08180")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xB081E4", Offset = "0xB081E4", VA = "0xB081E4")]
		[ContextMenu("Update parent Story")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xB08248", Offset = "0xB08248", VA = "0xB08248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xB0824C", Offset = "0xB0824C", VA = "0xB0824C")]
		[ContextMenu("Set Quest Active = True")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xB08254", Offset = "0xB08254", VA = "0xB08254")]
		[ContextMenu("Reset Quest")]
		public void ResetQuest()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xB083C0", Offset = "0xB083C0", VA = "0xB083C0")]
		public Quest()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[CreateAssetMenu(fileName = "The Quest System", menuName = "Quest System/Quest System", order = 4)]
	public class QuestSystem : ScriptableObject
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static QuestSystem instance;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quest[] Quests;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space]
		[Space]
		public Level MenuLevel;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public SceneReference[] DefaultScenes;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject DefaultLightingPrefab;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Level startScene;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Level optionsScene;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Story DemoEndsAfterMyCompletion;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space]
		public SceneReference loader;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SceneReference emptyScene;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SceneReference SteamVRSetup;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SceneReference OculusStoreSetup;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SceneReference PSVR2Setup;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SceneReference PicoSetup;

		[Token(Token = "0x170001F2")]
		public static QuestSystem Instance
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xB08504", Offset = "0xB08504", VA = "0xB08504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xB085E0", Offset = "0xB085E0", VA = "0xB085E0")]
		public SceneReference GetVRScene()
		{
			return null;
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xB085E8", Offset = "0xB085E8", VA = "0xB085E8")]
		public static string GetQuestSystemPath()
		{
			return null;
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xB08628", Offset = "0xB08628", VA = "0xB08628")]
		public static string GetQuestSystemPathEditor()
		{
			return null;
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xB08668", Offset = "0xB08668", VA = "0xB08668")]
		public void SetAllQuests(bool _mode, bool saveStatus = true, bool mainQuestOnly = false)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xB089BC", Offset = "0xB089BC", VA = "0xB089BC")]
		[ContextMenu("Log Progress")]
		private void LogProgress()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xB0938C", Offset = "0xB0938C", VA = "0xB0938C")]
		[ContextMenu("CheckForDuplicateIDs")]
		private void CheckForDuplicateIDs()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xB09938", Offset = "0xB09938", VA = "0xB09938")]
		[ContextMenu("ListStoryIDs")]
		private void ListStoryIDs()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xB09E04", Offset = "0xB09E04", VA = "0xB09E04")]
		[ContextMenu("GetCompletionStatus")]
		public int[] GetCompletionStatus()
		{
			return null;
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xB09F64", Offset = "0xB09F64", VA = "0xB09F64")]
		[ContextMenu("GetMainQuestComplete")]
		public bool GetMainQuestComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xB0A008", Offset = "0xB0A008", VA = "0xB0A008")]
		[ContextMenu("Reset all quests")]
		public void DoResetAllQuests()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xB0A0B0", Offset = "0xB0A0B0", VA = "0xB0A0B0")]
		public void ResetAllQuests(bool saveStatus = true)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xB0A0C0", Offset = "0xB0A0C0", VA = "0xB0A0C0")]
		public void DeleteAllSandboxSaves()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xB0A28C", Offset = "0xB0A28C", VA = "0xB0A28C")]
		[ContextMenu("Unlock all quests")]
		public void UnlockAllQuests()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xB0A29C", Offset = "0xB0A29C", VA = "0xB0A29C")]
		[ContextMenu("Unlock MAIN quests ONLY")]
		public void UnlockAllMainQuests()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xB0A2AC", Offset = "0xB0A2AC", VA = "0xB0A2AC")]
		public Level GetNextUncompletedLevelInQuest(string questID)
		{
			return null;
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xB0A55C", Offset = "0xB0A55C", VA = "0xB0A55C")]
		public int GetAmountLevelsInQuest(string questID)
		{
			return default(int);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xB0A580", Offset = "0xB0A580", VA = "0xB0A580")]
		public int GetAmountLevelsInStory(Story story)
		{
			return default(int);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xB0A600", Offset = "0xB0A600", VA = "0xB0A600")]
		public Story GetLatestStory(Quest quest)
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xB0A698", Offset = "0xB0A698", VA = "0xB0A698")]
		public Story GetNextStoryMainQuest(Story currentStory)
		{
			return null;
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xB0A764", Offset = "0xB0A764", VA = "0xB0A764")]
		public Level GetLastUncompleteLevelInStory(Story story)
		{
			return null;
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xB0A7FC", Offset = "0xB0A7FC", VA = "0xB0A7FC")]
		public Level GetFirstLevelInStory(Story story)
		{
			return null;
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xB0A894", Offset = "0xB0A894", VA = "0xB0A894")]
		public Level IsStartScreen(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xB0A8D4", Offset = "0xB0A8D4", VA = "0xB0A8D4")]
		public Level IsOptionsScene(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xB0A914", Offset = "0xB0A914", VA = "0xB0A914")]
		public Level GetLevelFromScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xB0AC28", Offset = "0xB0AC28", VA = "0xB0AC28")]
		public Story GetStoryFromScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xB0AC9C", Offset = "0xB0AC9C", VA = "0xB0AC9C")]
		public Story GetStoryFromLevelScenePath(string scenePath)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xB0A340", Offset = "0xB0A340", VA = "0xB0A340")]
		public Quest GetQuest(string questID)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xB08A24", Offset = "0xB08A24", VA = "0xB08A24")]
		public string DataStructureAsText()
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xB0A3D8", Offset = "0xB0A3D8", VA = "0xB0A3D8")]
		private Level[] GetAllLevelsFromQuest(Quest q)
		{
			return null;
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xB0AE24", Offset = "0xB0AE24", VA = "0xB0AE24")]
		public bool IsAvailableInDemo(Story checkStory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xB0896C", Offset = "0xB0896C", VA = "0xB0896C")]
		[ContextMenu("Save to file")]
		public void Save()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xB0AF54", Offset = "0xB0AF54", VA = "0xB0AF54")]
		public QuestSystem()
		{
		}
	}
	[Token(Token = "0x200047D")]
	[CreateAssetMenu(fileName = "New Story", menuName = "Quest System/Story", order = 2)]
	public class Story : ScriptableObject
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string isCompleted;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("STORY NAME FOR MENU AND TITLE")]
		public string localisationID;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("default location ID - can be overwritten by level")]
		public string titlePlaceID;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Only for Main Quest")]
		public Level MenuNavigationLevel;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Level[] Levels;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quest ParentQuest;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Quest to unlock after completion")]
		public Quest[] Unlock;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Entities to unlock after completion")]
		public EntityDefinition[] EntityUnlock;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showTitleUnlockMessage;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool backToCityAfterStory;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite cartridgeImage;

		[Token(Token = "0x170001F3")]
		public bool Completed
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xB09FB4", Offset = "0xB09FB4", VA = "0xB09FB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xB0AF5C", Offset = "0xB0AF5C", VA = "0xB0AF5C")]
		[ContextMenu("CreateNewID")]
		public void CreateNewID()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xB0AFC0", Offset = "0xB0AFC0", VA = "0xB0AFC0")]
		[ContextMenu("Update parent Story")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xB0B024", Offset = "0xB0B024", VA = "0xB0B024")]
		[ContextMenu("Mark this Story as LAST completed")]
		public void MarkAsLastCompleted()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xB08898", Offset = "0xB08898", VA = "0xB08898")]
		[ContextMenu("Mark this Story as completed")]
		public void MarkAsCompleted()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xB0B130", Offset = "0xB0B130", VA = "0xB0B130")]
		public bool IsMainQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xB0B1D4", Offset = "0xB0B1D4", VA = "0xB0B1D4")]
		public int GetPosition()
		{
			return default(int);
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xB0B22C", Offset = "0xB0B22C", VA = "0xB0B22C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xB07A00", Offset = "0xB07A00", VA = "0xB07A00")]
		public bool IsLastLevelInStory(Level _level)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xB07A78", Offset = "0xB07A78", VA = "0xB07A78")]
		public void SetUnlocksCompleted()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xB0B230", Offset = "0xB0B230", VA = "0xB0B230")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xB0B270", Offset = "0xB0B270", VA = "0xB0B270")]
		public Story()
		{
		}
	}
}
namespace GoogleSheetsDataStructures
{
	[Serializable]
	[Token(Token = "0x200047E")]
	public class ChaptersLocalization
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tabID;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Localization> IDRows;

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xB0B2E8", Offset = "0xB0B2E8", VA = "0xB0B2E8")]
		public ChaptersLocalization()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class StripppedLocalization
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DE;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xB0B2F0", Offset = "0xB0B2F0", VA = "0xB0B2F0")]
		public StripppedLocalization()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000480")]
	public class Localization
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TAB;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string EN;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DE;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FR;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SC;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string JP;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string KR;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string RU;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string ES;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string TC;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string PT;

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xB0B348", Offset = "0xB0B348", VA = "0xB0B348")]
		public string LookUp(Languages _language)
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xB0B404", Offset = "0xB0B404", VA = "0xB0B404")]
		public void SetLanguageValue(Languages _language, string value)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xB0B484", Offset = "0xB0B484", VA = "0xB0B484")]
		public Localization()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public enum Languages
	{
		[Token(Token = "0x4001D2D")]
		english,
		[Token(Token = "0x4001D2E")]
		german,
		[Token(Token = "0x4001D2F")]
		french,
		[Token(Token = "0x4001D30")]
		chinese,
		[Token(Token = "0x4001D31")]
		japanese,
		[Token(Token = "0x4001D32")]
		korean,
		[Token(Token = "0x4001D33")]
		russian,
		[Token(Token = "0x4001D34")]
		spanish,
		[Token(Token = "0x4001D35")]
		traditionalChinese,
		[Token(Token = "0x4001D36")]
		brazilianPortoguese
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class LanguageFontAssets
	{
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Languages language;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Asset[] fontAssets;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string defaultCharacters;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string characters;

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xB0B58C", Offset = "0xB0B58C", VA = "0xB0B58C")]
		public LanguageFontAssets()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class LocalizationDataSO : ScriptableObject
	{
		[Token(Token = "0x2000484")]
		public delegate void OnUpdateDoneDelegate(bool successful);

		[Token(Token = "0x2000485")]
		public enum Network
		{
			[Token(Token = "0x4001D60")]
			none,
			[Token(Token = "0x4001D61")]
			pending,
			[Token(Token = "0x4001D62")]
			success,
			[Token(Token = "0x4001D63")]
			error
		}

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset baseFontAsset;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageFontAssets[] languageFontAssets;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Master sheet")]
		[Space]
		[Space]
		public string googleSheetID;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Network networkStatus;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string missingTranslation;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string missingKey;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string mainTab;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string> localizationTableNameQueue;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Localization> tabsLookUpList;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool errorsInImportAndValidate;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string englishCharacters;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChaptersLocalization localizationDataTables;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ChaptersLocalization localizationDataTablesClone;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ChaptersLocalization downloadedLocalizationDataTables;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Non English language to import")]
		[Space]
		[Space]
		public Languages languageToImport;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Localization locaSheetID;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Results")]
		[Space]
		public Localization locaDateDownloaded;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Localization locaNumKeysMissing;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Localization locaMissingKeys;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Localization locaFontMissingCharacters;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Localization localanguageCellsFilled;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string summaryNumMissingKeys;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string summaryCellsFilled;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Space]
		[Space]
		[Header("Content & Validation")]
		public int maxCharactersPerBubble;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<string> ignoreKeysList;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int uploadStart;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int uploadCount;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Languages uploadLanguage;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float startTime;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		[SerializeField]
		private List<string> messages;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Languages requestedLanguage;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string requestedSheetID;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool doNotCloneOtherLanguages;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Dictionary<Languages, int> keyFound;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> steam_achievement_id_lookup;

		[Token(Token = "0x170001F4")]
		public Network NetworkStatus
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xB0B744", Offset = "0xB0B744", VA = "0xB0B744")]
			get
			{
				return default(Network);
			}
		}

		[Token(Token = "0x170001F5")]
		public List<string> Messages
		{
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xB0B74C", Offset = "0xB0B74C", VA = "0xB0B74C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000088")]
		public static event OnUpdateDoneDelegate OnUpdateDone
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xB0B594", Offset = "0xB0B594", VA = "0xB0B594")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xB0B66C", Offset = "0xB0B66C", VA = "0xB0B66C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xB0B754", Offset = "0xB0B754", VA = "0xB0B754")]
		public static LocalizationDataSO GetLocalisationData()
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xB0B7E4", Offset = "0xB0B7E4", VA = "0xB0B7E4")]
		private void UploadLanguage()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xB0BE7C", Offset = "0xB0BE7C", VA = "0xB0BE7C")]
		[ContextMenu("TestUpload")]
		private void TestUploadKorean()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xB0BEE4", Offset = "0xB0BEE4", VA = "0xB0BEE4")]
		[ContextMenu("StopUpload")]
		private void StopUpload()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xB0BEAC", Offset = "0xB0BEAC", VA = "0xB0BEAC")]
		private void UploadLanguageToMaster(Languages _language)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xB0BEF4", Offset = "0xB0BEF4", VA = "0xB0BEF4")]
		private void HandleDriveResponseUpload(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xB0C184", Offset = "0xB0C184", VA = "0xB0C184")]
		public string MapLanguage(Languages _language, string _key)
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xB0C2AC", Offset = "0xB0C2AC", VA = "0xB0C2AC")]
		private void AddMessage(string newMessage)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xB0C3F4", Offset = "0xB0C3F4", VA = "0xB0C3F4")]
		[ContextMenu("RetrieveCustomLanguage")]
		private void RetrieveCustomLanguage()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xB0C928", Offset = "0xB0C928", VA = "0xB0C928")]
		[ContextMenu("RetrieveMasterLanguage")]
		private void RetrieveMasterLanguage()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xB0C934", Offset = "0xB0C934", VA = "0xB0C934")]
		[ContextMenu("RetrieveMasterLanguageNoOtherLanguages")]
		private void RetrieveMasterLanguageNoOtherLanguages()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xB0C400", Offset = "0xB0C400", VA = "0xB0C400")]
		public void RetrieveAllCloudData(Languages _lang = Languages.english)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xB0C944", Offset = "0xB0C944", VA = "0xB0C944")]
		private void ErrorCallback(string _response)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xB0CB04", Offset = "0xB0CB04", VA = "0xB0CB04")]
		private void HandleDriveResponseAllTabs(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xB0D53C", Offset = "0xB0D53C", VA = "0xB0D53C")]
		private void TransferLanguage(Languages _language, ChaptersLocalization source, ChaptersLocalization master, bool writeDate = false)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xB0D94C", Offset = "0xB0D94C", VA = "0xB0D94C")]
		[ContextMenu("CheckCharacters")]
		private void CheckCharacters()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xB0E8AC", Offset = "0xB0E8AC", VA = "0xB0E8AC")]
		private string WriteCharactersForLanguage(Languages _language)
		{
			return null;
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xB0EE58", Offset = "0xB0EE58", VA = "0xB0EE58")]
		[ContextMenu("CheckForBubbleContentIssues")]
		private void CheckForBubbleContentIssues()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xB0EED8", Offset = "0xB0EED8", VA = "0xB0EED8")]
		private void CheckContentForLanguage(Languages _language)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xB0E4F0", Offset = "0xB0E4F0", VA = "0xB0E4F0")]
		private void CreateMissingLocaDict()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xB0FD10", Offset = "0xB0FD10", VA = "0xB0FD10")]
		[ContextMenu("Generate Achievement Language Translation Files")]
		public void ListAchievementLanguages()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xB0FE74", Offset = "0xB0FE74", VA = "0xB0FE74")]
		private static void WritOculusTranslations(List<Localization> achievement_locas)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xB10724", Offset = "0xB10724", VA = "0xB10724")]
		private static void WritSteamTranslations(List<Localization> achievement_locas)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xB11950", Offset = "0xB11950", VA = "0xB11950")]
		private static string get_language_string(Languages language, Localization loca)
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xB11890", Offset = "0xB11890", VA = "0xB11890")]
		private static void sb_append(int indent, StringBuilder sb_all, StringBuilder sb_lang, string str)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xB117D8", Offset = "0xB117D8", VA = "0xB117D8")]
		private static void sb_append_qoutify(int indent, StringBuilder sb_1, StringBuilder sb_2, string str)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xB11AA0", Offset = "0xB11AA0", VA = "0xB11AA0")]
		public LocalizationDataSO()
		{
		}
	}
}
namespace Humans
{
	[Token(Token = "0x2000488")]
	public class Human : MonoBehaviour
	{
		[Token(Token = "0x2000489")]
		[CompilerGenerated]
		private sealed class <RandomizeBlinking>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Human <>4__this;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D57")]
				[Address(RVA = "0xB1430C", Offset = "0xB1430C", VA = "0xB1430C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D59")]
				[Address(RVA = "0xB14354", Offset = "0xB14354", VA = "0xB14354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xB13948", Offset = "0xB13948", VA = "0xB13948")]
			[DebuggerHidden]
			public <RandomizeBlinking>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xB141E4", Offset = "0xB141E4", VA = "0xB141E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xB141E8", Offset = "0xB141E8", VA = "0xB141E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xB14314", Offset = "0xB14314", VA = "0xB14314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation Mouth;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation Eyes;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Head;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform TargetPos;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LookAt;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool UseIdle;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 idleOffset;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float idleTimer;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float idleWait;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float maxTurn;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HumanAesthetic humanAesthetic;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float gestureWait;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int lookAroundMin;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int lookAroundMax;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 rot;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float dur;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] gestureAnglesR;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] gestureAnglesL;

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xB1377C", Offset = "0xB1377C", VA = "0xB1377C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xB138D4", Offset = "0xB138D4", VA = "0xB138D4")]
		[IteratorStateMachine(typeof(<RandomizeBlinking>d__15))]
		private IEnumerator RandomizeBlinking()
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xB13860", Offset = "0xB13860", VA = "0xB13860")]
		private void NextIdle()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xB13970", Offset = "0xB13970", VA = "0xB13970")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xB13D98", Offset = "0xB13D98", VA = "0xB13D98")]
		private void Idle()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xB13E58", Offset = "0xB13E58", VA = "0xB13E58")]
		private void Talk()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xB13EE0", Offset = "0xB13EE0", VA = "0xB13EE0")]
		private void DoTalkGestures()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xB137B8", Offset = "0xB137B8", VA = "0xB137B8")]
		public void ExpressEmotion(Emotion feel)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xB13D50", Offset = "0xB13D50", VA = "0xB13D50")]
		private float ClampAngle(float angle, float from, float to)
		{
			return default(float);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xB14060", Offset = "0xB14060", VA = "0xB14060")]
		public Human()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public enum Emotion
	{
		[Token(Token = "0x4001D7E")]
		Idle,
		[Token(Token = "0x4001D7F")]
		Panic,
		[Token(Token = "0x4001D80")]
		Talk,
		[Token(Token = "0x4001D81")]
		ClimbLadder
	}
	[Token(Token = "0x200048B")]
	public class HumanAesthetic : MonoBehaviour
	{
		[Token(Token = "0x200048C")]
		public enum ColorType
		{
			[Token(Token = "0x4001D96")]
			skin,
			[Token(Token = "0x4001D97")]
			hair,
			[Token(Token = "0x4001D98")]
			color1,
			[Token(Token = "0x4001D99")]
			color2,
			[Token(Token = "0x4001D9A")]
			color3,
			[Token(Token = "0x4001D9B")]
			all
		}

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanAestheticScriptableObject Features;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(30f)]
		[SerializeField]
		private bool RandomColors;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("BodyParts")]
		public MeshFilter Head;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter Body;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter LeftArm;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter RightArm;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshFilter Eyes;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshFilter CLosedEyes;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshFilter LeftEyebrows;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshFilter RightEyebrows;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshFilter Mouth;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshFilter Hat;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MeshFilter Accessory;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int shaderColorArrayLenght;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int currentSkinColorIndex;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int currentHairColorIndex;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int currentColor1;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int currentColor2;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int currentColor3;

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xB1435C", Offset = "0xB1435C", VA = "0xB1435C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xB14360", Offset = "0xB14360", VA = "0xB14360")]
		public void SetFeatures()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xB14FAC", Offset = "0xB14FAC", VA = "0xB14FAC")]
		private Mesh ChangeMeshVertexColor(Color col, Mesh msh)
		{
			return null;
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xB15118", Offset = "0xB15118", VA = "0xB15118")]
		public void SetFeatures(ColorType _colorType = ColorType.all)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xB1511C", Offset = "0xB1511C", VA = "0xB1511C")]
		public HumanAesthetic()
		{
		}
	}
	[Token(Token = "0x200048D")]
	[CreateAssetMenu(fileName = "Human", menuName = "Human/Create Human", order = 1)]
	public class HumanAestheticScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Head Head;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh Body;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh LeftArm;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh RightArm;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh Eyes;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh EyesClosed;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh LeftEyebrows;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh RightEyebrows;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh Mouth;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Skin;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int Hair;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Color1;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Color2;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int Color3;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int VoiceType;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExtraPart Hat;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ExtraPart Accessory;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HumanDataScriptableObject Data;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isGroup;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float RandomAccessoryProbability;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float RandamHatProbability;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HumanAestheticScriptableObject[] group;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HumanEmoSFX humanEmoSFX;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool IsDog;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 TailOffset;

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xB1512C", Offset = "0xB1512C", VA = "0xB1512C")]
		public HumanAestheticScriptableObject()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class HumanDataScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Palette SkinColors;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Palette HairColor;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Palette OtherColors;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Head[] Heads;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh[] Eyes;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh[] Mouth;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Body[] Bodies;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Eyebrows[] Eyebrows;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ExtraPart[] Hats;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ExtraPart[] Accessories;

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xB15140", Offset = "0xB15140", VA = "0xB15140")]
		public HumanDataScriptableObject()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class RandomHumanCreator : MonoBehaviour
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int head_ID;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int Body_ID;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int Eyes_ID;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int eyebrows_ID;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int Mouths_ID;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int hat_ID;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int Accessory_ID;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int Populationsize;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] VoiceTypes;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int VoiceType_ID;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int voiceType;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HumanAesthetic candidateHuman;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CategoryDefinition peopleCategory;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public HumanDataScriptableObject HumanData;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HumanAestheticScriptableObject[] HumansAlreadyAvailable;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HumanAestheticScriptableObject currentLoadedAesthetics;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int CurrentHumanIDFromList;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public string currentHumanName;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xB15148", Offset = "0xB15148", VA = "0xB15148")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xB151DC", Offset = "0xB151DC", VA = "0xB151DC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xB1514C", Offset = "0xB1514C", VA = "0xB1514C")]
		public void LoadHumansFromResources()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xB151E0", Offset = "0xB151E0", VA = "0xB151E0")]
		public HumanAestheticScriptableObject ShiftLoadedHumanPosition(int _offset = 1)
		{
			return null;
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xB15290", Offset = "0xB15290", VA = "0xB15290")]
		public HumanAestheticScriptableObject CopyHuman(HumanAestheticScriptableObject _candidate)
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xB153DC", Offset = "0xB153DC", VA = "0xB153DC")]
		public void CopyToSO(HumanAestheticScriptableObject _candidate)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xB155A8", Offset = "0xB155A8", VA = "0xB155A8")]
		public HumanAestheticScriptableObject RandomHuman()
		{
			return null;
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xB15A24", Offset = "0xB15A24", VA = "0xB15A24")]
		public void SwapHead(int offset)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xB15AC0", Offset = "0xB15AC0", VA = "0xB15AC0")]
		public void SwapBody(int offset)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xB15BEC", Offset = "0xB15BEC", VA = "0xB15BEC")]
		public void SwapEyes(int offset)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xB15C80", Offset = "0xB15C80", VA = "0xB15C80")]
		public void SwapEyebrows(int offset)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xB15D64", Offset = "0xB15D64", VA = "0xB15D64")]
		public void SwapMouth(int offset)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xB15DF8", Offset = "0xB15DF8", VA = "0xB15DF8")]
		public void SwapSkinColor(int offset)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xB15E6C", Offset = "0xB15E6C", VA = "0xB15E6C")]
		public void SwapHairColor(int offset)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xB15EE0", Offset = "0xB15EE0", VA = "0xB15EE0")]
		public void SwapColor1(int offset)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xB15F54", Offset = "0xB15F54", VA = "0xB15F54")]
		public void SwapColor2(int offset)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xB15FC8", Offset = "0xB15FC8", VA = "0xB15FC8")]
		public void SwapColor3(int offset)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xB1603C", Offset = "0xB1603C", VA = "0xB1603C")]
		public void SwapHat(int offset)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xB160D0", Offset = "0xB160D0", VA = "0xB160D0")]
		public void SwapAccessories(int offset)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xB16164", Offset = "0xB16164", VA = "0xB16164")]
		public RandomHumanCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000490")]
	public class Head
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Mesh;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xB161C4", Offset = "0xB161C4", VA = "0xB161C4")]
		public Head()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class Body
	{
		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Torso;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh LeftArm;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh RightArm;

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xB161CC", Offset = "0xB161CC", VA = "0xB161CC")]
		public Body()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class Eyebrows
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Left;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Right;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xB161D4", Offset = "0xB161D4", VA = "0xB161D4")]
		public Eyebrows()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class ExtraPart
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSpecialItem;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Mesh;

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xB161DC", Offset = "0xB161DC", VA = "0xB161DC")]
		public ExtraPart()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000494")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000089")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xB161E4", Offset = "0xB161E4", VA = "0xB161E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xB1629C", Offset = "0xB1629C", VA = "0xB1629C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xB16354", Offset = "0xB16354", VA = "0xB16354")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xB16410", Offset = "0xB16410", VA = "0xB16410")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xB164CC", Offset = "0xB164CC", VA = "0xB164CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xB168FC", Offset = "0xB168FC", VA = "0xB168FC")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xB16680", Offset = "0xB16680", VA = "0xB16680")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xB1692C", Offset = "0xB1692C", VA = "0xB1692C")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Sandbox
{
	[Token(Token = "0x2000495")]
	public class SandboxPersistence : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		public delegate void ObjectLoadedDelegate(Rigidbody rigidBody);

		[Token(Token = "0x2000497")]
		public delegate void SceneSavedDelegate();

		[Token(Token = "0x2000498")]
		[CompilerGenerated]
		private sealed class <DelaySceneDefaults>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SandboxPersistence <>4__this;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool noFile;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB3")]
				[Address(RVA = "0xB19D7C", Offset = "0xB19D7C", VA = "0xB19D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB5")]
				[Address(RVA = "0xB19DC4", Offset = "0xB19DC4", VA = "0xB19DC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xB172DC", Offset = "0xB172DC", VA = "0xB172DC")]
			[DebuggerHidden]
			public <DelaySceneDefaults>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xB19ACC", Offset = "0xB19ACC", VA = "0xB19ACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xB19AD0", Offset = "0xB19AD0", VA = "0xB19AD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xB19D84", Offset = "0xB19D84", VA = "0xB19D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000499")]
		[CompilerGenerated]
		private sealed class <ReadCreateEntities>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SandboxPersistence <>4__this;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ObjectSaveData> _save;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0xB1B2DC", Offset = "0xB1B2DC", VA = "0xB1B2DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBB")]
				[Address(RVA = "0xB1B324", Offset = "0xB1B324", VA = "0xB1B324", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xB18278", Offset = "0xB18278", VA = "0xB18278")]
			[DebuggerHidden]
			public <ReadCreateEntities>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xB19DCC", Offset = "0xB19DCC", VA = "0xB19DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xB19DD0", Offset = "0xB19DD0", VA = "0xB19DD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xB1B2E4", Offset = "0xB1B2E4", VA = "0xB1B2E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Entity> saveEntities;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> spawns;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string sandBoxEditorFile;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float lastSaveTimeSeconds;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityLookup eLookUp;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string session;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int snap;

		[Token(Token = "0x4001DE6")]
		[Space]
		[Space]
		public const string saveFileEnding = ".dat";

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string fileName;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string jSonSave;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject movablesSaveSpecial;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform editorLoadRoot;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SaveID[] staticSaveIDs;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<SaveID> instantiatedSaveIDs;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool loadOnStart;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool onlySaveEditorReplicatorSpawned;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SandboxPersistence _instance;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ObjectSaveData> loadData;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ObjectSaveData debugOSD;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConstructionData constructionData;

		[Token(Token = "0x170001F8")]
		public static SandboxPersistence Instance
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xB16C24", Offset = "0xB16C24", VA = "0xB16C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008B")]
		public static event ObjectLoadedDelegate OnObjectLoaded
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xB1693C", Offset = "0xB1693C", VA = "0xB1693C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xB169F4", Offset = "0xB169F4", VA = "0xB169F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public static event SceneSavedDelegate OnSceneSaved
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xB16AAC", Offset = "0xB16AAC", VA = "0xB16AAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xB16B68", Offset = "0xB16B68", VA = "0xB16B68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xB16DA0", Offset = "0xB16DA0", VA = "0xB16DA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xB17254", Offset = "0xB17254", VA = "0xB17254")]
		[IteratorStateMachine(typeof(<DelaySceneDefaults>d__28))]
		private IEnumerator DelaySceneDefaults(bool noFile)
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xB17304", Offset = "0xB17304", VA = "0xB17304")]
		public void ScanSaveJson()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xB17804", Offset = "0xB17804", VA = "0xB17804")]
		public void ScanAndSave(bool immediateFileSave = false)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xB1795C", Offset = "0xB1795C", VA = "0xB1795C")]
		public static float TimeSinceLastSave()
		{
			return default(float);
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xB179B0", Offset = "0xB179B0", VA = "0xB179B0")]
		public void ClearButton()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xB179B8", Offset = "0xB179B8", VA = "0xB179B8")]
		[ContextMenu("Reload")]
		public void Reload()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xB179B4", Offset = "0xB179B4", VA = "0xB179B4")]
		public void ClearSave()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xB179DC", Offset = "0xB179DC", VA = "0xB179DC")]
		private void DeleteSaveFile()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xB16FC8", Offset = "0xB16FC8", VA = "0xB16FC8")]
		private string GetFullFilePath()
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xB17A6C", Offset = "0xB17A6C", VA = "0xB17A6C")]
		public static string GetFullFilePathForLevel(string levelName)
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xB17328", Offset = "0xB17328", VA = "0xB17328")]
		public void RegisterSaveEntities()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xB17E74", Offset = "0xB17E74", VA = "0xB17E74")]
		private void RegisterStartEntities()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xB17FBC", Offset = "0xB17FBC", VA = "0xB17FBC")]
		private bool SaveFileCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xB17FD0", Offset = "0xB17FD0", VA = "0xB17FD0")]
		public void ReadFromSO(ObjectSaveData[] _save)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xB181E8", Offset = "0xB181E8", VA = "0xB181E8")]
		[IteratorStateMachine(typeof(<ReadCreateEntities>d__43))]
		private IEnumerator ReadCreateEntities(List<ObjectSaveData> _save)
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xB1818C", Offset = "0xB1818C", VA = "0xB1818C")]
		public void ReadFromSO(List<ObjectSaveData> _save)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xB182A0", Offset = "0xB182A0", VA = "0xB182A0")]
		private Rigidbody FindJointRB(int instanceID)
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xB184B0", Offset = "0xB184B0", VA = "0xB184B0")]
		private ObjectSaveData FindSaveObjectByID(List<ObjectSaveData> _list, int _id)
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xB18658", Offset = "0xB18658", VA = "0xB18658")]
		public ConstructionData SaveParseEntities()
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xB18D78", Offset = "0xB18D78", VA = "0xB18D78")]
		private ObjectSaveData GetData(GameObject _gameObject, Glue _glue)
		{
			return null;
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xB193C8", Offset = "0xB193C8", VA = "0xB193C8")]
		public void RegisterGrabbable(Grabbable _grabbable)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xB17CBC", Offset = "0xB17CBC", VA = "0xB17CBC")]
		public void RegisterEntity(Entity _entity)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xB19428", Offset = "0xB19428", VA = "0xB19428")]
		public void SaveData(ConstructionData _saveData)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xB194E4", Offset = "0xB194E4", VA = "0xB194E4")]
		public ConstructionData LoadData()
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xB17478", Offset = "0xB17478", VA = "0xB17478")]
		[ContextMenu("GenerateSaveData")]
		public void GenerateSaveData()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xB1788C", Offset = "0xB1788C", VA = "0xB1788C")]
		public void BinaryDataSave()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xB195E8", Offset = "0xB195E8", VA = "0xB195E8")]
		public void BinaryDataLoad()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xB19734", Offset = "0xB19734", VA = "0xB19734")]
		[ContextMenu("GetJsonSave")]
		private void GetJsonSave()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xB19738", Offset = "0xB19738", VA = "0xB19738")]
		public string GetJsonSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xB174FC", Offset = "0xB174FC", VA = "0xB174FC")]
		public void SaveJson(ConstructionData _saveData)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xB1979C", Offset = "0xB1979C", VA = "0xB1979C")]
		public void JSONLoad()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xB197A4", Offset = "0xB197A4", VA = "0xB197A4")]
		public void JSONLoad(string _json)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xB19834", Offset = "0xB19834", VA = "0xB19834")]
		public SandboxPersistence()
		{
		}
	}
}
namespace Sound
{
	[Token(Token = "0x200049A")]
	public class ImpactSFX : MonoBehaviour
	{
		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactSFXScriptableObject materialSFXSO;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool onlyPlayHighestForceSFX;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("debug only")]
		[Space]
		public float debugHitForce;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool debugSoundKeyEnabled;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float minImpactVal;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float CoolTime;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] LastTimePlayed;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastImpact;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool usePosition;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rb;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 collisionPosition;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventInstance[] impactInstances;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventDescription impactEventDescription;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PARAMETER_ID impactParameterId;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventInstance fakeOneShotimpactInstance;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool initialised;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float LastTimePlayedNew;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] userProperties;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float minMass;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float maxMass;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float maxMassFactor;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float combinedMass;

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xB1B32C", Offset = "0xB1B32C", VA = "0xB1B32C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xB1B684", Offset = "0xB1B684", VA = "0xB1B684")]
		public void CollisionEvent(Collision _collision, float manualHitForce = -1f)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xB1BB58", Offset = "0xB1BB58", VA = "0xB1BB58")]
		public void CollisionEventFMOD(Collision _collision, float manualHitForce = -1f)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xB1C098", Offset = "0xB1C098", VA = "0xB1C098")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xB1B590", Offset = "0xB1B590", VA = "0xB1B590")]
		private float[] CacheVelocityProperties()
		{
			return null;
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xB1C0C8", Offset = "0xB1C0C8", VA = "0xB1C0C8")]
		public ImpactSFX()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049B")]
	[CreateAssetMenu(fileName = "ImpactSFXSet", menuName = "Sound/ImpactSet", order = 1)]
	public class ImpactSFXScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactSFXSet[] impactSets;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[TextArea]
		public string Notes;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[EventRef]
		public string materialEvent;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool newSystem;

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xB1C0F4", Offset = "0xB1C0F4", VA = "0xB1C0F4")]
		public ImpactSFXScriptableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class ImpactSFXSet
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[EventRef]
		public string impactSFX;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float impactTriggerVelocity;

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xB1C14C", Offset = "0xB1C14C", VA = "0xB1C14C")]
		public ImpactSFXSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049D")]
	[CreateAssetMenu(fileName = "MouthSFXScriptableObject", menuName = "Sound/MouthSFX", order = 1)]
	public class MouthSFXScriptableObject : ScriptableObject
	{
		[Token(Token = "0x200049E")]
		public delegate void MouthEventDelegate(MouthSFXSet set, Entity entity, string ID, Transform mouth);

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MouthSFXSet[] mouthReactionSets;

		[Token(Token = "0x1400008D")]
		public static event MouthEventDelegate OnMouthEvent
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xB1C154", Offset = "0xB1C154", VA = "0xB1C154")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xB1C20C", Offset = "0xB1C20C", VA = "0xB1C20C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xB1C2C4", Offset = "0xB1C2C4", VA = "0xB1C2C4")]
		public void CheckSFXEvent(Collider collider, Transform mouth)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xB1C3B8", Offset = "0xB1C3B8", VA = "0xB1C3B8")]
		private void CheckEvent(MouthSFXSet set, Entity entity, Transform mouth, Collider collider)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xB1C4F8", Offset = "0xB1C4F8", VA = "0xB1C4F8")]
		private void CallEvent(MouthSFXSet set, Entity e, Transform mouth)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xB1C768", Offset = "0xB1C768", VA = "0xB1C768")]
		public MouthSFXScriptableObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049F")]
	public class MouthSFXSet
	{
		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space]
		[Header("NEW MOUTH EVENT------------------------------------")]
		public string eventID;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventRef]
		public string mouthSFX;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tag;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EntityDefinition entityDefinition;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useCategory;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CategoryDefinition categoryDefinition;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Achievement achievement;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject spawnPrefab;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useHeadPositionForParticles;

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xB1C8D0", Offset = "0xB1C8D0", VA = "0xB1C8D0")]
		public MouthSFXSet()
		{
		}
	}
}
namespace PixelArsenal
{
	[Token(Token = "0x20004A0")]
	public class PixelArsenalBeamStatic : MonoBehaviour
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Prefabs")]
		public GameObject beamLineRendererPrefab;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamStartPrefab;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beamEndPrefab;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject beamStart;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamEnd;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beam;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer line;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Beam Options")]
		public bool alwaysOn;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool beamCollides;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float beamLength;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float beamEndOffset;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xB1C930", Offset = "0xB1C930", VA = "0xB1C930")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xB1C934", Offset = "0xB1C934", VA = "0xB1C934")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xB1CC14", Offset = "0xB1CC14", VA = "0xB1CC14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xB1CD2C", Offset = "0xB1CD2C", VA = "0xB1CD2C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xB1C944", Offset = "0xB1C944", VA = "0xB1C944")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xB1CC18", Offset = "0xB1CC18", VA = "0xB1CC18")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xB1D130", Offset = "0xB1D130", VA = "0xB1D130")]
		public PixelArsenalBeamStatic()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class PixelArsenalLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Seconds to dim the light")]
		public float life;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xB1D150", Offset = "0xB1D150", VA = "0xB1D150")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xB1D26C", Offset = "0xB1D26C", VA = "0xB1D26C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xB1D3A8", Offset = "0xB1D3A8", VA = "0xB1D3A8")]
		public PixelArsenalLightFade()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class PixelArsenalLoopScript : MonoBehaviour
	{
		[Token(Token = "0x20004A3")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PixelArsenalLoopScript <>4__this;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0xB1D68C", Offset = "0xB1D68C", VA = "0xB1D68C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE2")]
				[Address(RVA = "0xB1D6D4", Offset = "0xB1D6D4", VA = "0xB1D6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xB1D488", Offset = "0xB1D488", VA = "0xB1D488")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xB1D4C0", Offset = "0xB1D4C0", VA = "0xB1D4C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xB1D4C4", Offset = "0xB1D4C4", VA = "0xB1D4C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xB1D694", Offset = "0xB1D694", VA = "0xB1D694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xB1D3C4", Offset = "0xB1D3C4", VA = "0xB1D3C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xB1D3C8", Offset = "0xB1D3C8", VA = "0xB1D3C8")]
		public void PlayLoopingPEffect()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xB1D414", Offset = "0xB1D414", VA = "0xB1D414")]
		[IteratorStateMachine(typeof(<EffectLoop>d__4))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xB1D4B0", Offset = "0xB1D4B0", VA = "0xB1D4B0")]
		public PixelArsenalLoopScript()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class PixelArsenalRotation : MonoBehaviour
	{
		[Token(Token = "0x20004A5")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001E3C")]
			Local,
			[Token(Token = "0x4001E3D")]
			World
		}

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rotate axises by degrees per second")]
		public Vector3 rotateVector;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xB1D6DC", Offset = "0xB1D6DC", VA = "0xB1D6DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xB1D6E0", Offset = "0xB1D6E0", VA = "0xB1D6E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xB1D7B4", Offset = "0xB1D7B4", VA = "0xB1D7B4")]
		public PixelArsenalRotation()
		{
		}
	}
}
namespace RoadNetwork
{
	[Serializable]
	[Token(Token = "0x20004A6")]
	public class ListWrapper
	{
		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> List;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xB1D814", Offset = "0xB1D814", VA = "0xB1D814")]
		public ListWrapper()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	[SelectionBase]
	public class RoadPiece : MonoBehaviour
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int PosX;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PosY;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RoadRoot Root;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter MyMeshFilter;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoadScriptableObject Data;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Geometry;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int North;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int West;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int East;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int South;

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xB1D81C", Offset = "0xB1D81C", VA = "0xB1D81C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xB1D874", Offset = "0xB1D874", VA = "0xB1D874")]
		public void Resolve(int i)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xB1DA0C", Offset = "0xB1DA0C", VA = "0xB1DA0C")]
		public RoadPiece()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[ExecuteInEditMode]
	public class RoadRoot : MonoBehaviour
	{
		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TileSize;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RoadPiece> Pieces;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Inizialized;

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xB1DA14", Offset = "0xB1DA14", VA = "0xB1DA14")]
		public RoadRoot()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public enum Direction
	{
		[Token(Token = "0x4001E4D")]
		UP,
		[Token(Token = "0x4001E4E")]
		DOWN,
		[Token(Token = "0x4001E4F")]
		LEFT,
		[Token(Token = "0x4001E50")]
		RIGHT
	}
	[Token(Token = "0x20004AA")]
	public enum TileType
	{
		[Token(Token = "0x4001E52")]
		Empty,
		[Token(Token = "0x4001E53")]
		Road,
		[Token(Token = "0x4001E54")]
		Filler
	}
}
namespace GoogleSheetsForUnity
{
	[Token(Token = "0x20004AB")]
	[DisallowMultipleComponent]
	public class ConsoleExample : MonoBehaviour
	{
		[Token(Token = "0x20004AC")]
		public struct LogMsg
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string logString;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logType;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string logNumber;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sessionId;
		}

		[Token(Token = "0x20004AD")]
		public enum TABLE_HEADERS
		{
			[Token(Token = "0x4001E61")]
			logNumber,
			[Token(Token = "0x4001E62")]
			logType,
			[Token(Token = "0x4001E63")]
			logString,
			[Token(Token = "0x4001E64")]
			stackTrace,
			[Token(Token = "0x4001E65")]
			sessionId
		}

		[Token(Token = "0x20004AE")]
		[CompilerGenerated]
		private sealed class <ProcessQueue>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConsoleExample <>4__this;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF7")]
				[Address(RVA = "0xB1EC88", Offset = "0xB1EC88", VA = "0xB1EC88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF9")]
				[Address(RVA = "0xB1ECD0", Offset = "0xB1ECD0", VA = "0xB1ECD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xB1E8D4", Offset = "0xB1E8D4", VA = "0xB1E8D4")]
			[DebuggerHidden]
			public <ProcessQueue>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xB1E904", Offset = "0xB1E904", VA = "0xB1E904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xB1E908", Offset = "0xB1E908", VA = "0xB1E908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xB1EC90", Offset = "0xB1EC90", VA = "0xB1EC90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E55")]
		public const string TABLE_NAME = "ConsoleLog";

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LogMsg> _logMsgQueue;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _processing;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _interval;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _logCounter;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string sessionUuid;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xB1DA24", Offset = "0xB1DA24", VA = "0xB1DA24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xB1DAD4", Offset = "0xB1DAD4", VA = "0xB1DAD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xB1DB88", Offset = "0xB1DB88", VA = "0xB1DB88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xB1DC9C", Offset = "0xB1DC9C", VA = "0xB1DC9C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xB1E008", Offset = "0xB1E008", VA = "0xB1E008")]
		public void CreateConsoleLogTable()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xB1E0FC", Offset = "0xB1E0FC", VA = "0xB1E0FC")]
		public void TestConsoleMessages()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xB1E65C", Offset = "0xB1E65C", VA = "0xB1E65C")]
		private void AddToQueue(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xB1E860", Offset = "0xB1E860", VA = "0xB1E860")]
		[IteratorStateMachine(typeof(<ProcessQueue>d__15))]
		private IEnumerator ProcessQueue()
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xB1E8FC", Offset = "0xB1E8FC", VA = "0xB1E8FC")]
		public ConsoleExample()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class FilesExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B0")]
		public struct PlayerInfo
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _filePath;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cloudFileID;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _binaryFileName;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _textFileName;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerInfo _playerData;

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xB1ECD8", Offset = "0xB1ECD8", VA = "0xB1ECD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xB1EE04", Offset = "0xB1EE04", VA = "0xB1EE04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xB1EF30", Offset = "0xB1EF30", VA = "0xB1EF30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xB1F048", Offset = "0xB1F048", VA = "0xB1F048")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xB203C4", Offset = "0xB203C4", VA = "0xB203C4")]
		private void SaveLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xB205B4", Offset = "0xB205B4", VA = "0xB205B4")]
		private void LoadLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xB2029C", Offset = "0xB2029C", VA = "0xB2029C")]
		private void SaveLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xB204A0", Offset = "0xB204A0", VA = "0xB204A0")]
		private void LoadLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xB20F60", Offset = "0xB20F60", VA = "0xB20F60")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xB20680", Offset = "0xB20680", VA = "0xB20680")]
		private void UploadBinaryFile()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xB207B8", Offset = "0xB207B8", VA = "0xB207B8")]
		private void UploadTextFile()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xB20B5C", Offset = "0xB20B5C", VA = "0xB20B5C")]
		private void OutputData(string source)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xB21890", Offset = "0xB21890", VA = "0xB21890")]
		public FilesExample()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class ImagesExample : MonoBehaviour
	{
		[Token(Token = "0x20004B2")]
		[CompilerGenerated]
		private sealed class <TakeScreenshotManually>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImagesExample <>4__this;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E12")]
				[Address(RVA = "0xB22F74", Offset = "0xB22F74", VA = "0xB22F74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E14")]
				[Address(RVA = "0xB22FBC", Offset = "0xB22FBC", VA = "0xB22FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xB22AB4", Offset = "0xB22AB4", VA = "0xB22AB4")]
			[DebuggerHidden]
			public <TakeScreenshotManually>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xB22DF4", Offset = "0xB22DF4", VA = "0xB22DF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xB22DF8", Offset = "0xB22DF8", VA = "0xB22DF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xB22F7C", Offset = "0xB22F7C", VA = "0xB22F7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect _texturePos;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _text2d;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _cloudFileID;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _imagePath;

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xB21914", Offset = "0xB21914", VA = "0xB21914")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xB21A40", Offset = "0xB21A40", VA = "0xB21A40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xB21B6C", Offset = "0xB21B6C", VA = "0xB21B6C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xB2256C", Offset = "0xB2256C", VA = "0xB2256C")]
		private void TakeScreenshot()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xB22A40", Offset = "0xB22A40", VA = "0xB22A40")]
		[IteratorStateMachine(typeof(<TakeScreenshotManually>d__8))]
		private IEnumerator TakeScreenshotManually()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xB224B8", Offset = "0xB224B8", VA = "0xB224B8")]
		private void LoadPNGFromFile(string filePath)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xB22ADC", Offset = "0xB22ADC", VA = "0xB22ADC")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xB22D30", Offset = "0xB22D30", VA = "0xB22D30")]
		public ImagesExample()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class LoginSessionExample : MonoBehaviour
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D clock;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string credentialsTableName;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _usernameText;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _passwdText;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _mailText;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _lastLogon;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _signupDate;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _showRegistrationForm;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isLoggedIn;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _waitingForServerResponse;

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xB22FC4", Offset = "0xB22FC4", VA = "0xB22FC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xB231C0", Offset = "0xB231C0", VA = "0xB231C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xB233BC", Offset = "0xB233BC", VA = "0xB233BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xB24CC4", Offset = "0xB24CC4", VA = "0xB24CC4")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xB24F7C", Offset = "0xB24F7C", VA = "0xB24F7C")]
		private void HandleErrorResponse(string errorMsg)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xB24F84", Offset = "0xB24F84", VA = "0xB24F84")]
		public LoginSessionExample()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class SpreadsheetsExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B5")]
		public struct PlayerInfo
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerInfo _playerData;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _tableName;

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xB25008", Offset = "0xB25008", VA = "0xB25008")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xB25134", Offset = "0xB25134", VA = "0xB25134")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xB25260", Offset = "0xB25260", VA = "0xB25260")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xB26050", Offset = "0xB26050", VA = "0xB26050")]
		private void CreatePlayerTable()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xB2629C", Offset = "0xB2629C", VA = "0xB2629C")]
		private void SavePlayer()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xB263AC", Offset = "0xB263AC", VA = "0xB263AC")]
		private void UpdatePlayer(bool create)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xB264EC", Offset = "0xB264EC", VA = "0xB264EC")]
		private void RetrievePlayer()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xB265AC", Offset = "0xB265AC", VA = "0xB265AC")]
		private void GetAllPlayers()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xB26664", Offset = "0xB26664", VA = "0xB26664")]
		private void GetAllTables()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xB26D94", Offset = "0xB26D94", VA = "0xB26D94")]
		public void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xB27918", Offset = "0xB27918", VA = "0xB27918")]
		public SpreadsheetsExample()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	[CreateAssetMenu(fileName = "ConnectionData", menuName = "Google Sheets For Unity/Connection Data Asset", order = 0)]
	public class ConnectionData : ScriptableObject
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("URL of the webapp deployed on Google Drive.")]
		public string webServiceUrl;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Id of the spreadsheet to be used for the objects & tables operations. If more than one spreadsheet are required, different connections can be made, or the spreadsheet Ids manually stated on the requests forms.")]
		public string spreadsheetId;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The password to use on the individual queries. Will not be used if the connection is set to useSessionContext.")]
		public string servicePassword;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The time in seconds before declaring the connection as timed out.")]
		public float timeOutLimit;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("WWW Request type: true will use POST and false will use GET.")]
		public bool usePOST;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[Tooltip("When checked, instead of stateless independent queries that use a password, the queries will depend on the session context for authorization. See Login Session Example for more info on how to use sessions.")]
		public bool useSessionContext;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The session duration time, in seconds. The minimum recommended is 7200 seconds (2 hours) and the maximum possible is 21600 seconds (6 hours).")]
		public int sessionTime;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Username for the login session.")]
		public string sessionUser;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Password for the login session.")]
		public string sessionPassword;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The name of the table where the credentials data is holded.")]
		public string tableName;

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xB279FC", Offset = "0xB279FC", VA = "0xB279FC")]
		public ConnectionData()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public static class Drive
	{
		[Token(Token = "0x20004B8")]
		public enum QueryType
		{
			[Token(Token = "0x4001E9C")]
			createObject,
			[Token(Token = "0x4001E9D")]
			createObjects,
			[Token(Token = "0x4001E9E")]
			createTable,
			[Token(Token = "0x4001E9F")]
			createBinaryFile,
			[Token(Token = "0x4001EA0")]
			createTextFile,
			[Token(Token = "0x4001EA1")]
			createImageFile,
			[Token(Token = "0x4001EA2")]
			createFolder,
			[Token(Token = "0x4001EA3")]
			getObjectsByField,
			[Token(Token = "0x4001EA4")]
			getCellValue,
			[Token(Token = "0x4001EA5")]
			getTable,
			[Token(Token = "0x4001EA6")]
			getAllTables,
			[Token(Token = "0x4001EA7")]
			getBinaryFile,
			[Token(Token = "0x4001EA8")]
			getTextFile,
			[Token(Token = "0x4001EA9")]
			getImageFile,
			[Token(Token = "0x4001EAA")]
			updateObjects,
			[Token(Token = "0x4001EAB")]
			setCellValue,
			[Token(Token = "0x4001EAC")]
			deleteObjects,
			[Token(Token = "0x4001EAD")]
			deleteFile,
			[Token(Token = "0x4001EAE")]
			deleteFolderByName,
			[Token(Token = "0x4001EAF")]
			deleteFolderById,
			[Token(Token = "0x4001EB0")]
			signup,
			[Token(Token = "0x4001EB1")]
			login,
			[Token(Token = "0x4001EB2")]
			logout
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public struct DataContainer
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string query;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string result;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string payload;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objType;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string column;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string row;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string fileId;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fileName;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string folderId;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string folderName;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string searchField;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string searchValue;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string value;

			[Token(Token = "0x17000204")]
			public QueryType QueryType
			{
				[Token(Token = "0x6001E4B")]
				[Address(RVA = "0xB2B12C", Offset = "0xB2B12C", VA = "0xB2B12C")]
				get
				{
					return default(QueryType);
				}
			}
		}

		[Token(Token = "0x20004BA")]
		public class SessionContextData
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string userId;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string userName;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string userEmail;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sessionToken;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string lastLogon;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string registrationDate;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int sessionTime;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public DateTime sessionStart;

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xB2B228", Offset = "0xB2B228", VA = "0xB2B228")]
			public SessionContextData()
			{
			}
		}

		[Token(Token = "0x20004BB")]
		public delegate void OnResponseDelegate(bool success);

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SessionContextData _sessionContext;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ConnectionData _connectionData;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _currentStatus;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool debugMode;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DriveConnection driveConnectorRuntime;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction<DataContainer> responseCallback;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction<string> errorResponseCallback;

		[Token(Token = "0x17000203")]
		public static SessionContextData SessionContext
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xB27A8C", Offset = "0xB27A8C", VA = "0xB27A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xB27AE4", Offset = "0xB27AE4", VA = "0xB27AE4")]
			set
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public static event OnResponseDelegate OnResponse
		{
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xB27B4C", Offset = "0xB27B4C", VA = "0xB27B4C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xB27C28", Offset = "0xB27C28", VA = "0xB27C28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xB1EAE4", Offset = "0xB1EAE4", VA = "0xB1EAE4")]
		public static void CreateObject(string jsonObject, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xB284C8", Offset = "0xB284C8", VA = "0xB284C8")]
		public static void CreateObject(Dictionary<string, string> fields, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xB2863C", Offset = "0xB2863C", VA = "0xB2863C")]
		public static void CreateObjects(string jsonObjects, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xB1E418", Offset = "0xB1E418", VA = "0xB1E418")]
		public static void CreateTable(string[] headers, string tableTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xB26940", Offset = "0xB26940", VA = "0xB26940")]
		public static void GetObjectsByField(string objTypeName, string searchFieldName, string searchValue, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xB287E4", Offset = "0xB287E4", VA = "0xB287E4")]
		public static void GetCellValue(string objTypeName, string column, string row, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xB26B00", Offset = "0xB26B00", VA = "0xB26B00")]
		public static void GetTable(string tableTypeName, bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xB26C64", Offset = "0xB26C64", VA = "0xB26C64")]
		public static void GetAllTables(bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xB26710", Offset = "0xB26710", VA = "0xB26710")]
		public static void UpdateObjects(string objTypeName, string searchFieldName, string searchValue, string jsonObject, bool create, bool runtime = true, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xB289BC", Offset = "0xB289BC", VA = "0xB289BC")]
		public static void SetCellValue(string objTypeName, string column, string row, string value, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xB28BC0", Offset = "0xB28BC0", VA = "0xB28BC0")]
		public static void DeleteObjects(string objTypeName, string searchFieldName, string searchValue, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xB20874", Offset = "0xB20874", VA = "0xB20874")]
		public static void GetBinaryFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xB209E8", Offset = "0xB209E8", VA = "0xB209E8")]
		public static void GetTextFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xB228CC", Offset = "0xB228CC", VA = "0xB228CC")]
		public static void GetImageFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xB22590", Offset = "0xB22590", VA = "0xB22590")]
		public static void CreateImageFile(Texture2D texture, string name, bool usePNG = true, int jpgQuality = 90, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xB213D0", Offset = "0xB213D0", VA = "0xB213D0")]
		public static void CreateBinaryFile(byte[] fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xB21648", Offset = "0xB21648", VA = "0xB21648")]
		public static void CreateTextFile(string fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xB28D80", Offset = "0xB28D80", VA = "0xB28D80")]
		public static void DeleteFile(string fileId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xB28EF4", Offset = "0xB28EF4", VA = "0xB28EF4")]
		public static void CreateFolder(string folderName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xB29068", Offset = "0xB29068", VA = "0xB29068")]
		public static void DeleteFolderByName(string folderName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xB291DC", Offset = "0xB291DC", VA = "0xB291DC")]
		public static void DeleteFolderById(string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xB243F4", Offset = "0xB243F4", VA = "0xB243F4")]
		public static void CreateCredentialsTable(string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xB24A30", Offset = "0xB24A30", VA = "0xB24A30")]
		public static void Signup(string userName, string email, string pass, string id, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xB24858", Offset = "0xB24858", VA = "0xB24858")]
		public static void Login(string userName, string pass, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xB24718", Offset = "0xB24718", VA = "0xB24718")]
		public static void Logout(bool runtime = true)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xB29350", Offset = "0xB29350", VA = "0xB29350")]
		private static void SetConnectionData(bool runtime, string googleSheetID)
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xB29888", Offset = "0xB29888", VA = "0xB29888")]
		private static Dictionary<string, string> CompleteForm(Dictionary<string, string> form)
		{
			return null;
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xB27D04", Offset = "0xB27D04", VA = "0xB27D04")]
		private static void CreateRequest(Dictionary<string, string> dataForm, bool runtime, string googleSheetID = "")
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xB29B70", Offset = "0xB29B70", VA = "0xB29B70")]
		public static void ProcessResponse(string response, float time)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xB29F88", Offset = "0xB29F88", VA = "0xB29F88")]
		public static void HandleError(string response, float time)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xB297B0", Offset = "0xB297B0", VA = "0xB297B0")]
		public static void UpdateStatus(params string[] statusDetails)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class JsonHelper
	{
		[Serializable]
		[Token(Token = "0x20004BD")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001E54")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x6001E51")]
		public static T[] ArrayFromJson<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001E52")]
		public static string ToJson<T>(T[] array, bool prettyPrint = false)
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xB2B38C", Offset = "0xB2B38C", VA = "0xB2B38C")]
		public JsonHelper()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class DriveConnection : MonoBehaviour
	{
		[Token(Token = "0x20004BF")]
		[CompilerGenerated]
		private sealed class <CoExecuteRequest>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest www;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveConnection <>4__this;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000205")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E5B")]
				[Address(RVA = "0xB2B68C", Offset = "0xB2B68C", VA = "0xB2B68C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5D")]
				[Address(RVA = "0xB2B6D4", Offset = "0xB2B6D4", VA = "0xB2B6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xB2B444", Offset = "0xB2B444", VA = "0xB2B444")]
			[DebuggerHidden]
			public <CoExecuteRequest>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xB2B474", Offset = "0xB2B474", VA = "0xB2B474", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xB2B478", Offset = "0xB2B478", VA = "0xB2B478", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xB2B694", Offset = "0xB2B694", VA = "0xB2B694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConnectionData connectionData;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xB2B394", Offset = "0xB2B394", VA = "0xB2B394")]
		public void ExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xB2B3B4", Offset = "0xB2B3B4", VA = "0xB2B3B4")]
		[IteratorStateMachine(typeof(<CoExecuteRequest>d__2))]
		private IEnumerator CoExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
			return null;
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xB2B46C", Offset = "0xB2B46C", VA = "0xB2B46C")]
		public DriveConnection()
		{
		}
	}
}
namespace GameAnalyticsSDK
{
	[Token(Token = "0x20004C0")]
	public enum GAErrorSeverity
	{
		[Token(Token = "0x4001ED1")]
		Undefined,
		[Token(Token = "0x4001ED2")]
		Debug,
		[Token(Token = "0x4001ED3")]
		Info,
		[Token(Token = "0x4001ED4")]
		Warning,
		[Token(Token = "0x4001ED5")]
		Error,
		[Token(Token = "0x4001ED6")]
		Critical
	}
	[Token(Token = "0x20004C1")]
	public enum GAProgressionStatus
	{
		[Token(Token = "0x4001ED8")]
		Undefined,
		[Token(Token = "0x4001ED9")]
		Start,
		[Token(Token = "0x4001EDA")]
		Complete,
		[Token(Token = "0x4001EDB")]
		Fail
	}
	[Token(Token = "0x20004C2")]
	public enum GAResourceFlowType
	{
		[Token(Token = "0x4001EDD")]
		Undefined,
		[Token(Token = "0x4001EDE")]
		Source,
		[Token(Token = "0x4001EDF")]
		Sink
	}
	[Token(Token = "0x20004C3")]
	public enum GAAdAction
	{
		[Token(Token = "0x4001EE1")]
		Undefined,
		[Token(Token = "0x4001EE2")]
		Clicked,
		[Token(Token = "0x4001EE3")]
		Show,
		[Token(Token = "0x4001EE4")]
		FailedShow,
		[Token(Token = "0x4001EE5")]
		RewardReceived,
		[Token(Token = "0x4001EE6")]
		Request,
		[Token(Token = "0x4001EE7")]
		Loaded
	}
	[Token(Token = "0x20004C4")]
	public enum GAAdType
	{
		[Token(Token = "0x4001EE9")]
		Undefined,
		[Token(Token = "0x4001EEA")]
		Video,
		[Token(Token = "0x4001EEB")]
		RewardedVideo,
		[Token(Token = "0x4001EEC")]
		Playable,
		[Token(Token = "0x4001EED")]
		Interstitial,
		[Token(Token = "0x4001EEE")]
		OfferWall,
		[Token(Token = "0x4001EEF")]
		Banner
	}
	[Token(Token = "0x20004C5")]
	public enum GAAdError
	{
		[Token(Token = "0x4001EF1")]
		Undefined,
		[Token(Token = "0x4001EF2")]
		Unknown,
		[Token(Token = "0x4001EF3")]
		Offline,
		[Token(Token = "0x4001EF4")]
		NoFill,
		[Token(Token = "0x4001EF5")]
		InternalError,
		[Token(Token = "0x4001EF6")]
		InvalidRequest,
		[Token(Token = "0x4001EF7")]
		UnableToPrecache
	}
	[Token(Token = "0x20004C6")]
	[RequireComponent(typeof(GA_SpecialEvents))]
	[ExecuteInEditMode]
	public class GameAnalytics : MonoBehaviour
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameAnalyticsSDK.Setup.Settings _settings;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameAnalytics _instance;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _hasInitializeBeenCalled;

		[Token(Token = "0x17000207")]
		public static GameAnalyticsSDK.Setup.Settings SettingsGA
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xB2B6DC", Offset = "0xB2B6DC", VA = "0xB2B6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xB2B998", Offset = "0xB2B998", VA = "0xB2B998")]
			private set
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public static event Action OnRemoteConfigsUpdatedEvent
		{
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xB2E4B0", Offset = "0xB2E4B0", VA = "0xB2E4B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xB2E56C", Offset = "0xB2E56C", VA = "0xB2E56C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xB2B9F0", Offset = "0xB2B9F0", VA = "0xB2B9F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xB2BA6C", Offset = "0xB2BA6C", VA = "0xB2BA6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xB2BAE8", Offset = "0xB2BAE8", VA = "0xB2BAE8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xB2BC50", Offset = "0xB2BC50", VA = "0xB2BC50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xB2BCFC", Offset = "0xB2BCFC", VA = "0xB2BCFC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xB2B76C", Offset = "0xB2B76C", VA = "0xB2B76C")]
		private static void InitAPI()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xB2BF28", Offset = "0xB2BF28", VA = "0xB2BF28")]
		private static void InternalInitialize()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xB2CB1C", Offset = "0xB2CB1C", VA = "0xB2CB1C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xB2CDA8", Offset = "0xB2CDA8", VA = "0xB2CDA8")]
		public static void NewBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xB2CF18", Offset = "0xB2CF18", VA = "0xB2CF18")]
		public static void NewBusinessEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xB2D0F0", Offset = "0xB2D0F0", VA = "0xB2D0F0")]
		public static void NewDesignEvent(string eventName)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xB2D1A4", Offset = "0xB2D1A4", VA = "0xB2D1A4")]
		public static void NewDesignEvent(string eventName, float eventValue)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xB2D2E0", Offset = "0xB2D2E0", VA = "0xB2D2E0")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xB2D3B8", Offset = "0xB2D3B8", VA = "0xB2D3B8")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xB2D490", Offset = "0xB2D490", VA = "0xB2D490")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xB2D574", Offset = "0xB2D574", VA = "0xB2D574")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, int score)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xB2D6C0", Offset = "0xB2D6C0", VA = "0xB2D6C0")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xB2D82C", Offset = "0xB2D82C", VA = "0xB2D82C")]
		public static void NewProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xB2D9A4", Offset = "0xB2D9A4", VA = "0xB2D9A4")]
		public static void NewResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xB2DB20", Offset = "0xB2DB20", VA = "0xB2DB20")]
		public static void NewErrorEvent(GAErrorSeverity severity, string message)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xB2DBDC", Offset = "0xB2DBDC", VA = "0xB2DBDC")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xB2DD38", Offset = "0xB2DD38", VA = "0xB2DD38")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xB2DE94", Offset = "0xB2DE94", VA = "0xB2DE94")]
		public static void NewAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xB2DFE0", Offset = "0xB2DFE0", VA = "0xB2DFE0")]
		public static void SetCustomId(string userId)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xB2CAC8", Offset = "0xB2CAC8", VA = "0xB2CAC8")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xB2E140", Offset = "0xB2E140", VA = "0xB2E140")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xB2E1E8", Offset = "0xB2E1E8", VA = "0xB2E1E8")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xB2E2C8", Offset = "0xB2E2C8", VA = "0xB2E2C8")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xB2E3A8", Offset = "0xB2E3A8", VA = "0xB2E3A8")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xB2E400", Offset = "0xB2E400", VA = "0xB2E400")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xB2E458", Offset = "0xB2E458", VA = "0xB2E458")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xB2E628", Offset = "0xB2E628", VA = "0xB2E628")]
		public void OnRemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xB2E68C", Offset = "0xB2E68C", VA = "0xB2E68C")]
		public static void RemoteConfigsUpdated()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xB2E6F0", Offset = "0xB2E6F0", VA = "0xB2E6F0")]
		public static string GetRemoteConfigsValueAsString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xB2E6F8", Offset = "0xB2E6F8", VA = "0xB2E6F8")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xB2E7C0", Offset = "0xB2E7C0", VA = "0xB2E7C0")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xB2E858", Offset = "0xB2E858", VA = "0xB2E858")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xB2E8F0", Offset = "0xB2E8F0", VA = "0xB2E8F0")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xB2E988", Offset = "0xB2E988", VA = "0xB2E988")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xB2EA20", Offset = "0xB2EA20", VA = "0xB2EA20")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xB2EAC8", Offset = "0xB2EAC8", VA = "0xB2EAC8")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xB2EB70", Offset = "0xB2EB70", VA = "0xB2EB70")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xB2EC18", Offset = "0xB2EC18", VA = "0xB2EC18")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xB2ECC0", Offset = "0xB2ECC0", VA = "0xB2ECC0")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xB2ED58", Offset = "0xB2ED58", VA = "0xB2ED58")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xB2EDF0", Offset = "0xB2EDF0", VA = "0xB2EDF0")]
		public static void SubscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xB2EE88", Offset = "0xB2EE88", VA = "0xB2EE88")]
		public static void SubscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xB2EF20", Offset = "0xB2EF20", VA = "0xB2EF20")]
		public static void SubscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xB2EFB8", Offset = "0xB2EFB8", VA = "0xB2EFB8")]
		public static void RequestTrackingAuthorization(IGameAnalyticsATTListener listener)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xB2C514", Offset = "0xB2C514", VA = "0xB2C514")]
		private static string GetUnityVersion()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xB2C390", Offset = "0xB2C390", VA = "0xB2C390")]
		private static int GetPlatformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xB2EFBC", Offset = "0xB2EFBC", VA = "0xB2EFBC")]
		public static void SetBuildAllPlatforms(string build)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xB2F058", Offset = "0xB2F058", VA = "0xB2F058")]
		public GameAnalytics()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public interface IGameAnalyticsATTListener
	{
		[Token(Token = "0x6001E97")]
		void GameAnalyticsATTListenerNotDetermined();

		[Token(Token = "0x6001E98")]
		void GameAnalyticsATTListenerRestricted();

		[Token(Token = "0x6001E99")]
		void GameAnalyticsATTListenerDenied();

		[Token(Token = "0x6001E9A")]
		void GameAnalyticsATTListenerAuthorized();
	}
}
namespace GameAnalyticsSDK.Wrapper
{
	[Token(Token = "0x20004C8")]
	public class GA_Wrapper
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AndroidJavaClass GA;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly AndroidJavaClass UNITY_GA;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly AndroidJavaClass GA_IMEI;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xB2F060", Offset = "0xB2F060", VA = "0xB2F060")]
		private static void configureAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xB2F4E4", Offset = "0xB2F4E4", VA = "0xB2F4E4")]
		private static void configureAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xB2F95C", Offset = "0xB2F95C", VA = "0xB2F95C")]
		private static void configureAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xB2FDD4", Offset = "0xB2FDD4", VA = "0xB2FDD4")]
		private static void configureAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xB3024C", Offset = "0xB3024C", VA = "0xB3024C")]
		private static void configureAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xB306C4", Offset = "0xB306C4", VA = "0xB306C4")]
		private static void configureSdkGameEngineVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xB307B4", Offset = "0xB307B4", VA = "0xB307B4")]
		private static void configureGameEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xB308A4", Offset = "0xB308A4", VA = "0xB308A4")]
		private static void configureBuild(string build)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xB30994", Offset = "0xB30994", VA = "0xB30994")]
		private static void configureUserId(string userId)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xB30A84", Offset = "0xB30A84", VA = "0xB30A84")]
		private static void configureAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xB30BA8", Offset = "0xB30BA8", VA = "0xB30BA8")]
		private static void initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xB3102C", Offset = "0xB3102C", VA = "0xB3102C")]
		private static void setCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xB3111C", Offset = "0xB3111C", VA = "0xB3111C")]
		private static void setCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xB3120C", Offset = "0xB3120C", VA = "0xB3120C")]
		private static void setCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xB312FC", Offset = "0xB312FC", VA = "0xB312FC")]
		private static void addBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, string fields)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xB31510", Offset = "0xB31510", VA = "0xB31510")]
		private static void addBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, string fields)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xB317DC", Offset = "0xB317DC", VA = "0xB317DC")]
		private static void addResourceEvent(int flowType, string currency, float amount, string itemType, string itemId, string fields)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xB31A18", Offset = "0xB31A18", VA = "0xB31A18")]
		private static void addProgressionEvent(int progressionStatus, string progression01, string progression02, string progression03, string fields)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xB31BF4", Offset = "0xB31BF4", VA = "0xB31BF4")]
		private static void addProgressionEventWithScore(int progressionStatus, string progression01, string progression02, string progression03, int score, string fields)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xB31E3C", Offset = "0xB31E3C", VA = "0xB31E3C")]
		private static void addDesignEvent(string eventId, string fields)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xB31F2C", Offset = "0xB31F2C", VA = "0xB31F2C")]
		private static void addDesignEventWithValue(string eventId, float value, string fields)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xB3209C", Offset = "0xB3209C", VA = "0xB3209C")]
		private static void addErrorEvent(int severity, string message, string fields)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xB32200", Offset = "0xB32200", VA = "0xB32200")]
		private static void addAdEventWithDuration(int adAction, int adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xB32458", Offset = "0xB32458", VA = "0xB32458")]
		private static void addAdEventWithReason(int adAction, int adType, string adSdkName, string adPlacement, int noAdReason)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xB3269C", Offset = "0xB3269C", VA = "0xB3269C")]
		private static void addAdEvent(int adAction, int adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xB3288C", Offset = "0xB3288C", VA = "0xB3288C")]
		private static void setEnabledInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xB329B0", Offset = "0xB329B0", VA = "0xB329B0")]
		private static void setEnabledVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xB32AD4", Offset = "0xB32AD4", VA = "0xB32AD4")]
		private static void setManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xB32BF8", Offset = "0xB32BF8", VA = "0xB32BF8")]
		private static void setEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xB32D1C", Offset = "0xB32D1C", VA = "0xB32D1C")]
		private static void gameAnalyticsStartSession()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xB32DF4", Offset = "0xB32DF4", VA = "0xB32DF4")]
		private static void gameAnalyticsEndSession()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xB32ECC", Offset = "0xB32ECC", VA = "0xB32ECC")]
		private static string getRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xB33010", Offset = "0xB33010", VA = "0xB33010")]
		private static bool isRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xB330FC", Offset = "0xB330FC", VA = "0xB330FC")]
		private static string getRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xB331E8", Offset = "0xB331E8", VA = "0xB331E8")]
		private static string getABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xB332D4", Offset = "0xB332D4", VA = "0xB332D4")]
		private static string getABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xB333C0", Offset = "0xB333C0", VA = "0xB333C0")]
		private static void startTimer(string key)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xB334B0", Offset = "0xB334B0", VA = "0xB334B0")]
		private static void pauseTimer(string key)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xB335A0", Offset = "0xB335A0", VA = "0xB335A0")]
		private static void resumeTimer(string key)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xB33690", Offset = "0xB33690", VA = "0xB33690")]
		private static long stopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xB33794", Offset = "0xB33794", VA = "0xB33794")]
		private static void subscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xB33810", Offset = "0xB33810", VA = "0xB33810")]
		private static void MopubImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xB33814", Offset = "0xB33814", VA = "0xB33814")]
		private static void subscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xB33890", Offset = "0xB33890", VA = "0xB33890")]
		private static void FyberImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xB33894", Offset = "0xB33894", VA = "0xB33894")]
		private static void subscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xB33910", Offset = "0xB33910", VA = "0xB33910")]
		private static void IronSourceImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xB33914", Offset = "0xB33914", VA = "0xB33914")]
		private static void subscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xB33990", Offset = "0xB33990", VA = "0xB33990")]
		private static void TopOnImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xB33994", Offset = "0xB33994", VA = "0xB33994")]
		private static void subscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xB33A10", Offset = "0xB33A10", VA = "0xB33A10")]
		private static void MaxImpressionHandler(string json)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xB33A14", Offset = "0xB33A14", VA = "0xB33A14")]
		public static void SetAvailableCustomDimensions01(string list)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xB33A68", Offset = "0xB33A68", VA = "0xB33A68")]
		public static void SetAvailableCustomDimensions02(string list)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xB33ABC", Offset = "0xB33ABC", VA = "0xB33ABC")]
		public static void SetAvailableCustomDimensions03(string list)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xB33B10", Offset = "0xB33B10", VA = "0xB33B10")]
		public static void SetAvailableResourceCurrencies(string list)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xB33B64", Offset = "0xB33B64", VA = "0xB33B64")]
		public static void SetAvailableResourceItemTypes(string list)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xB2C4C0", Offset = "0xB2C4C0", VA = "0xB2C4C0")]
		public static void SetUnitySdkVersion(string unitySdkVersion)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xB2C6AC", Offset = "0xB2C6AC", VA = "0xB2C6AC")]
		public static void SetUnityEngineVersion(string unityEngineVersion)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xB2C754", Offset = "0xB2C754", VA = "0xB2C754")]
		public static void SetBuild(string build)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xB2E098", Offset = "0xB2E098", VA = "0xB2E098")]
		public static void SetCustomUserId(string userId)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xB2E0EC", Offset = "0xB2E0EC", VA = "0xB2E0EC")]
		public static void SetEnabledManualSessionHandling(bool enabled)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xB2E194", Offset = "0xB2E194", VA = "0xB2E194")]
		public static void SetEnabledEventSubmission(bool enabled)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xB2C700", Offset = "0xB2C700", VA = "0xB2C700")]
		public static void SetAutoDetectAppVersion(bool flag)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xB2E234", Offset = "0xB2E234", VA = "0xB2E234")]
		public static void StartSession()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xB2E314", Offset = "0xB2E314", VA = "0xB2E314")]
		public static void EndSession()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xB2CD44", Offset = "0xB2CD44", VA = "0xB2CD44")]
		public static void Initialize(string gamekey, string gamesecret)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xB33C0C", Offset = "0xB33C0C", VA = "0xB33C0C")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xB33C60", Offset = "0xB33C60", VA = "0xB33C60")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xB33CB4", Offset = "0xB33CB4", VA = "0xB33CB4")]
		public static void SetCustomDimension03(string customDimension)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xB33D08", Offset = "0xB33D08", VA = "0xB33D08")]
		public static void AddBusinessEventWithReceipt(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string store, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xB340F0", Offset = "0xB340F0", VA = "0xB340F0")]
		public static void AddBusinessEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xB34188", Offset = "0xB34188", VA = "0xB34188")]
		public static void AddResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xB34220", Offset = "0xB34220", VA = "0xB34220")]
		public static void AddProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xB342A8", Offset = "0xB342A8", VA = "0xB342A8")]
		public static void AddProgressionEventWithScore(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xB34340", Offset = "0xB34340", VA = "0xB34340")]
		public static void AddDesignEvent(string eventID, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xB343B8", Offset = "0xB343B8", VA = "0xB343B8")]
		public static void AddDesignEvent(string eventID, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xB34420", Offset = "0xB34420", VA = "0xB34420")]
		public static void AddErrorEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xB34490", Offset = "0xB34490", VA = "0xB34490")]
		public static void AddAdEventWithDuration(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xB34514", Offset = "0xB34514", VA = "0xB34514")]
		public static void AddAdEventWithReason(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xB34598", Offset = "0xB34598", VA = "0xB34598")]
		public static void AddAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xB34614", Offset = "0xB34614", VA = "0xB34614")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xB34668", Offset = "0xB34668", VA = "0xB34668")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xB2E75C", Offset = "0xB2E75C", VA = "0xB2E75C")]
		public static string GetRemoteConfigsValueAsString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xB2E80C", Offset = "0xB2E80C", VA = "0xB2E80C")]
		public static bool IsRemoteConfigsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xB2E8A4", Offset = "0xB2E8A4", VA = "0xB2E8A4")]
		public static string GetRemoteConfigsContentAsString()
		{
			return null;
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xB2E93C", Offset = "0xB2E93C", VA = "0xB2E93C")]
		public static string GetABTestingId()
		{
			return null;
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xB2E9D4", Offset = "0xB2E9D4", VA = "0xB2E9D4")]
		public static string GetABTestingVariantId()
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xB33DC0", Offset = "0xB33DC0", VA = "0xB33DC0")]
		private static string DictionaryToJsonString(IDictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xB2EA74", Offset = "0xB2EA74", VA = "0xB2EA74")]
		public static void StartTimer(string key)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xB2EB1C", Offset = "0xB2EB1C", VA = "0xB2EB1C")]
		public static void PauseTimer(string key)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xB2EBC4", Offset = "0xB2EBC4", VA = "0xB2EBC4")]
		public static void ResumeTimer(string key)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xB2EC6C", Offset = "0xB2EC6C", VA = "0xB2EC6C")]
		public static long StopTimer(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xB2ED0C", Offset = "0xB2ED0C", VA = "0xB2ED0C")]
		public static void SubscribeMoPubImpressions()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xB2EDA4", Offset = "0xB2EDA4", VA = "0xB2EDA4")]
		public static void SubscribeFyberImpressions()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xB2EE3C", Offset = "0xB2EE3C", VA = "0xB2EE3C")]
		public static void SubscribeIronSourceImpressions()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xB2EED4", Offset = "0xB2EED4", VA = "0xB2EED4")]
		public static void SubscribeTopOnImpressions()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xB2EF6C", Offset = "0xB2EF6C", VA = "0xB2EF6C")]
		public static void SubscribeMaxImpressions()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xB346C0", Offset = "0xB346C0", VA = "0xB346C0")]
		public GA_Wrapper()
		{
		}
	}
}
namespace GameAnalyticsSDK.Utilities
{
	[Token(Token = "0x20004C9")]
	public class GA_MiniJSON
	{
		[Token(Token = "0x20004CA")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20004CB")]
			private enum TOKEN
			{
				[Token(Token = "0x4001F02")]
				NONE,
				[Token(Token = "0x4001F03")]
				CURLY_OPEN,
				[Token(Token = "0x4001F04")]
				CURLY_CLOSE,
				[Token(Token = "0x4001F05")]
				SQUARED_OPEN,
				[Token(Token = "0x4001F06")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001F07")]
				COLON,
				[Token(Token = "0x4001F08")]
				COMMA,
				[Token(Token = "0x4001F09")]
				STRING,
				[Token(Token = "0x4001F0A")]
				NUMBER,
				[Token(Token = "0x4001F0B")]
				TRUE,
				[Token(Token = "0x4001F0C")]
				FALSE,
				[Token(Token = "0x4001F0D")]
				NULL
			}

			[Token(Token = "0x4001EFF")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x17000208")]
			private char PeekChar
			{
				[Token(Token = "0x6001F0B")]
				[Address(RVA = "0xB35560", Offset = "0xB35560", VA = "0xB35560")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000209")]
			private char NextChar
			{
				[Token(Token = "0x6001F0C")]
				[Address(RVA = "0xB35398", Offset = "0xB35398", VA = "0xB35398")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x1700020A")]
			private string NextWord
			{
				[Token(Token = "0x6001F0D")]
				[Address(RVA = "0xB35410", Offset = "0xB35410", VA = "0xB35410")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6001F0E")]
				[Address(RVA = "0xB34C94", Offset = "0xB34C94", VA = "0xB34C94")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xB34A04", Offset = "0xB34A04", VA = "0xB34A04")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xB34AA0", Offset = "0xB34AA0", VA = "0xB34AA0")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xB347EC", Offset = "0xB347EC", VA = "0xB347EC")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xB34B40", Offset = "0xB34B40", VA = "0xB34B40", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xB34B70", Offset = "0xB34B70", VA = "0xB34B70")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xB350B8", Offset = "0xB350B8", VA = "0xB350B8")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xB34B24", Offset = "0xB34B24", VA = "0xB34B24")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xB351E0", Offset = "0xB351E0", VA = "0xB351E0")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xB34E58", Offset = "0xB34E58", VA = "0xB34E58")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xB352C8", Offset = "0xB352C8", VA = "0xB352C8")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xB354BC", Offset = "0xB354BC", VA = "0xB354BC")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xB355D8", Offset = "0xB355D8", VA = "0xB355D8")]
			private Serializer()
			{
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xB34988", Offset = "0xB34988", VA = "0xB34988")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xB3564C", Offset = "0xB3564C", VA = "0xB3564C")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xB35E38", Offset = "0xB35E38", VA = "0xB35E38")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xB35AD8", Offset = "0xB35AD8", VA = "0xB35AD8")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xB3581C", Offset = "0xB3581C", VA = "0xB3581C")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xB362C4", Offset = "0xB362C4", VA = "0xB362C4")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xB2F4D8", Offset = "0xB2F4D8", VA = "0xB2F4D8")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xB346BC", Offset = "0xB346BC", VA = "0xB346BC")]
		public static string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xB349FC", Offset = "0xB349FC", VA = "0xB349FC")]
		public GA_MiniJSON()
		{
		}
	}
}
namespace GameAnalyticsSDK.State
{
	[Token(Token = "0x20004CD")]
	internal static class GAState
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameAnalyticsSDK.Setup.Settings _settings;

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xB2BD00", Offset = "0xB2BD00", VA = "0xB2BD00")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xB36540", Offset = "0xB36540", VA = "0xB36540")]
		private static bool ListContainsString(List<string> _list, string _string)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xB33BB8", Offset = "0xB33BB8", VA = "0xB33BB8")]
		public static bool IsManualSessionHandlingEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xB36598", Offset = "0xB36598", VA = "0xB36598")]
		public static bool HasAvailableResourceCurrency(string _currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xB365F4", Offset = "0xB365F4", VA = "0xB365F4")]
		public static bool HasAvailableResourceItemType(string _itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xB36650", Offset = "0xB36650", VA = "0xB36650")]
		public static bool HasAvailableCustomDimensions01(string _dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xB366AC", Offset = "0xB366AC", VA = "0xB366AC")]
		public static bool HasAvailableCustomDimensions02(string _dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xB36708", Offset = "0xB36708", VA = "0xB36708")]
		public static bool HasAvailableCustomDimensions03(string _dimension03)
		{
			return default(bool);
		}
	}
}
namespace GameAnalyticsSDK.Setup
{
	[Token(Token = "0x20004CE")]
	public class Settings : ScriptableObject
	{
		[Token(Token = "0x20004CF")]
		public enum HelpTypes
		{
			[Token(Token = "0x4001F6A")]
			None,
			[Token(Token = "0x4001F6B")]
			IncludeSystemSpecsHelp,
			[Token(Token = "0x4001F6C")]
			ProvideCustomUserID
		}

		[Token(Token = "0x20004D0")]
		public enum MessageTypes
		{
			[Token(Token = "0x4001F6E")]
			None,
			[Token(Token = "0x4001F6F")]
			Error,
			[Token(Token = "0x4001F70")]
			Info,
			[Token(Token = "0x4001F71")]
			Warning
		}

		[Token(Token = "0x20004D1")]
		public struct HelpInfo
		{
			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Message;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MessageTypes MsgType;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HelpTypes HelpType;
		}

		[Token(Token = "0x20004D2")]
		public enum InspectorStates
		{
			[Token(Token = "0x4001F76")]
			Account,
			[Token(Token = "0x4001F77")]
			Basic,
			[Token(Token = "0x4001F78")]
			Debugging,
			[Token(Token = "0x4001F79")]
			Pref
		}

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static string VERSION;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static bool CheckingForUpdates;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalMessagesSubmitted;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TotalMessagesFailed;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DesignMessagesSubmitted;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DesignMessagesFailed;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int QualityMessagesSubmitted;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int QualityMessagesFailed;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ErrorMessagesSubmitted;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int ErrorMessagesFailed;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int BusinessMessagesSubmitted;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int BusinessMessagesFailed;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int UserMessagesSubmitted;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int UserMessagesFailed;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string CustomArea;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> gameKey;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<string> secretKey;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public List<string> Build;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<string> SelectedPlatformOrganization;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<string> SelectedPlatformStudio;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<string> SelectedPlatformGame;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<int> SelectedPlatformGameID;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public List<int> SelectedOrganization;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public List<int> SelectedStudio;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public List<int> SelectedGame;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string NewVersion;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string Changes;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool SignUpOpen;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string StudioName;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string GameName;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string OrganizationName;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string OrganizationIdentifier;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string EmailGA;

		[NonSerialized]
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string PasswordGA;

		[NonSerialized]
		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string TokenGA;

		[NonSerialized]
		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string ExpireTime;

		[NonSerialized]
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string LoginStatus;

		[NonSerialized]
		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool JustSignedUp;

		[NonSerialized]
		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool HideSignupWarning;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IntroScreen;

		[NonSerialized]
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<Organization> Organizations;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool InfoLogEditor;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool InfoLogBuild;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool VerboseLogBuild;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool UseManualSessionHandling;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool SendExampleGameDataToMyGame;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool UseIMEI;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		public bool InternetConnectivity;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<string> CustomDimensions01;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<string> CustomDimensions02;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<string> CustomDimensions03;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<string> ResourceItemTypes;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<string> ResourceCurrencies;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public RuntimePlatform LastCreatedGamePlatform;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<RuntimePlatform> Platforms;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public InspectorStates CurrentInspectorState;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<HelpTypes> ClosedHints;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool DisplayHints;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Vector2 DisplayHintsScrollState;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Texture2D Logo;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Texture2D UpdateIcon;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Texture2D InfoIcon;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Texture2D DeleteIcon;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Texture2D GameIcon;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D HomeIcon;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D InstrumentIcon;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D QuestionIcon;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Texture2D UserIcon;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Texture2D AmazonIcon;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Texture2D GooglePlayIcon;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Texture2D iosIcon;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Texture2D macIcon;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Texture2D windowsPhoneIcon;

		[NonSerialized]
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GUIStyle SignupButton;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool UsePlayerSettingsBuildNumber;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public bool SubmitErrors;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public int MaxErrorCount;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool SubmitFpsAverage;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool SubmitFpsCritical;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool IncludeGooglePlay;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public int FpsCriticalThreshold;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int FpsCirticalSubmitInterval;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public List<bool> PlatformFoldOut;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public bool CustomDimensions01FoldOut;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		public bool CustomDimensions02FoldOut;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		public bool CustomDimensions03FoldOut;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		public bool ResourceItemTypesFoldOut;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public bool ResourceCurrenciesFoldOut;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RuntimePlatform[] AvailablePlatforms;

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xB36764", Offset = "0xB36764", VA = "0xB36764")]
		public void SetCustomUserID(string customID)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xB367B8", Offset = "0xB367B8", VA = "0xB367B8")]
		public void RemovePlatformAtIndex(int index)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xB36958", Offset = "0xB36958", VA = "0xB36958")]
		public void AddPlatform(RuntimePlatform platform)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xB36E9C", Offset = "0xB36E9C", VA = "0xB36E9C")]
		public string[] GetAvailablePlatforms()
		{
			return null;
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xB371A0", Offset = "0xB371A0", VA = "0xB371A0")]
		public bool IsGameKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xB37264", Offset = "0xB37264", VA = "0xB37264")]
		public bool IsSecretKeyValid(int index, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xB37328", Offset = "0xB37328", VA = "0xB37328")]
		public void UpdateGameKey(int index, string value)
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xB3742C", Offset = "0xB3742C", VA = "0xB3742C")]
		public void UpdateSecretKey(int index, string value)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xB2CC94", Offset = "0xB2CC94", VA = "0xB2CC94")]
		public string GetGameKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xB2CCEC", Offset = "0xB2CCEC", VA = "0xB2CCEC")]
		public string GetSecretKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xB37530", Offset = "0xB37530", VA = "0xB37530")]
		public void SetCustomArea(string customArea)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xB37534", Offset = "0xB37534", VA = "0xB37534")]
		public void SetKeys(string gamekey, string secretkey)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xB37538", Offset = "0xB37538", VA = "0xB37538")]
		public Settings()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class Organization
	{
		[Token(Token = "0x1700020C")]
		public string Name
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xB37B38", Offset = "0xB37B38", VA = "0xB37B38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xB37B40", Offset = "0xB37B40", VA = "0xB37B40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public string ID
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xB37B48", Offset = "0xB37B48", VA = "0xB37B48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xB37B50", Offset = "0xB37B50", VA = "0xB37B50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public List<Studio> Studios
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xB37B58", Offset = "0xB37B58", VA = "0xB37B58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xB37B60", Offset = "0xB37B60", VA = "0xB37B60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xB37B68", Offset = "0xB37B68", VA = "0xB37B68")]
		public Organization(string name, string id)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xB37C20", Offset = "0xB37C20", VA = "0xB37C20")]
		public static string[] GetOrganizationNames(List<Organization> organizations, bool addFirstEmpty = true)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D4")]
	public class Studio
	{
		[Token(Token = "0x1700020F")]
		public string Name
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xB37F00", Offset = "0xB37F00", VA = "0xB37F00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xB37F08", Offset = "0xB37F08", VA = "0xB37F08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public string ID
		{
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xB37F10", Offset = "0xB37F10", VA = "0xB37F10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xB37F18", Offset = "0xB37F18", VA = "0xB37F18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public string OrganizationID
		{
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xB37F20", Offset = "0xB37F20", VA = "0xB37F20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xB37F28", Offset = "0xB37F28", VA = "0xB37F28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public List<Game> Games
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xB37F30", Offset = "0xB37F30", VA = "0xB37F30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xB37F38", Offset = "0xB37F38", VA = "0xB37F38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xB37F40", Offset = "0xB37F40", VA = "0xB37F40")]
		public Studio(string name, string id, string orgId, List<Game> games)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xB37FB4", Offset = "0xB37FB4", VA = "0xB37FB4")]
		public static string[] GetStudioNames(List<Studio> studios, bool addFirstEmpty = true)
		{
			return null;
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xB38294", Offset = "0xB38294", VA = "0xB38294")]
		public static string[] GetGameNames(int index, List<Studio> studios)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D5")]
	public class Game
	{
		[Token(Token = "0x17000213")]
		public string Name
		{
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xB38554", Offset = "0xB38554", VA = "0xB38554")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xB3855C", Offset = "0xB3855C", VA = "0xB3855C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public int ID
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xB38564", Offset = "0xB38564", VA = "0xB38564")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xB3856C", Offset = "0xB3856C", VA = "0xB3856C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public string GameKey
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xB38574", Offset = "0xB38574", VA = "0xB38574")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xB3857C", Offset = "0xB3857C", VA = "0xB3857C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public string SecretKey
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xB38584", Offset = "0xB38584", VA = "0xB38584")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xB3858C", Offset = "0xB3858C", VA = "0xB3858C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xB38594", Offset = "0xB38594", VA = "0xB38594")]
		public Game(string name, int id, string gameKey, string secretKey)
		{
		}
	}
}
namespace GameAnalyticsSDK.Events
{
	[Token(Token = "0x20004D6")]
	public static class GA_Ads
	{
		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xB2DCB4", Offset = "0xB2DCB4", VA = "0xB2DCB4")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, long duration)
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xB2DE10", Offset = "0xB2DE10", VA = "0xB2DE10")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement, GAAdError noAdReason)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xB2DF64", Offset = "0xB2DF64", VA = "0xB2DF64")]
		public static void NewEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public static class GA_Business
	{
		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xB2D020", Offset = "0xB2D020", VA = "0xB2D020")]
		public static void NewEventGooglePlay(string currency, int amount, string itemType, string itemId, string cartType, string receipt, string signature, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xB2CE84", Offset = "0xB2CE84", VA = "0xB2CE84")]
		public static void NewEvent(string currency, int amount, string itemType, string itemId, string cartType, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public static class GA_Debug
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaxErrorCount;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _errorCount;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _showLogOnGUI;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<string> Messages;

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xB385FC", Offset = "0xB385FC", VA = "0xB385FC")]
		public static void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xB38978", Offset = "0xB38978", VA = "0xB38978")]
		private static void SubmitError(string message, LogType type)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xB389A4", Offset = "0xB389A4", VA = "0xB389A4")]
		public static void EnabledLog()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public static class GA_Design
	{
		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xB2D25C", Offset = "0xB2D25C", VA = "0xB2D25C")]
		public static void NewEvent(string eventName, float eventValue, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xB2D198", Offset = "0xB2D198", VA = "0xB2D198")]
		public static void NewEvent(string eventName, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB38A54", Offset = "0xB38A54", VA = "0xB38A54")]
		private static void CreateNewEvent(string eventName, float? eventValue, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public static class GA_Error
	{
		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xB2DBD8", Offset = "0xB2DBD8", VA = "0xB2DBD8")]
		public static void NewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xB38B40", Offset = "0xB38B40", VA = "0xB38B40")]
		private static void CreateNewEvent(GAErrorSeverity severity, string message, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public static class GA_Progression
	{
		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xB2D3A4", Offset = "0xB2D3A4", VA = "0xB2D3A4")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xB2D480", Offset = "0xB2D480", VA = "0xB2D480")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xB2D568", Offset = "0xB2D568", VA = "0xB2D568")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xB2D634", Offset = "0xB2D634", VA = "0xB2D634")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xB2D794", Offset = "0xB2D794", VA = "0xB2D794")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xB2D908", Offset = "0xB2D908", VA = "0xB2D908")]
		public static void NewEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int score, IDictionary<string, object> fields)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xB38BAC", Offset = "0xB38BAC", VA = "0xB38BAC")]
		private static void CreateEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03, int? score, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public static class GA_Resource
	{
		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xB2DA8C", Offset = "0xB2DA8C", VA = "0xB2DA8C")]
		public static void NewEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId, IDictionary<string, object> fields)
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public static class GA_Setup
	{
		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xB2C7A8", Offset = "0xB2C7A8", VA = "0xB2C7A8")]
		public static void SetAvailableCustomDimensions01(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xB2C848", Offset = "0xB2C848", VA = "0xB2C848")]
		public static void SetAvailableCustomDimensions02(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xB2C8E8", Offset = "0xB2C8E8", VA = "0xB2C8E8")]
		public static void SetAvailableCustomDimensions03(List<string> customDimensions)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xB2CA28", Offset = "0xB2CA28", VA = "0xB2CA28")]
		public static void SetAvailableResourceCurrencies(List<string> resourceCurrencies)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xB2C988", Offset = "0xB2C988", VA = "0xB2C988")]
		public static void SetAvailableResourceItemTypes(List<string> resourceItemTypes)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xB2C2E8", Offset = "0xB2C2E8", VA = "0xB2C2E8")]
		public static void SetInfoLog(bool enabled)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xB2C33C", Offset = "0xB2C33C", VA = "0xB2C33C")]
		public static void SetVerboseLog(bool enabled)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xB2E3AC", Offset = "0xB2E3AC", VA = "0xB2E3AC")]
		public static void SetCustomDimension01(string customDimension)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xB2E404", Offset = "0xB2E404", VA = "0xB2E404")]
		public static void SetCustomDimension02(string customDimension)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xB2E45C", Offset = "0xB2E45C", VA = "0xB2E45C")]
		public static void SetCustomDimension03(string customDimension)
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class GA_SpecialEvents : MonoBehaviour
	{
		[Token(Token = "0x20004DF")]
		[CompilerGenerated]
		private sealed class <SubmitFPSRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F72")]
				[Address(RVA = "0xB39590", Offset = "0xB39590", VA = "0xB39590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F74")]
				[Address(RVA = "0xB395D8", Offset = "0xB395D8", VA = "0xB395D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xB39088", Offset = "0xB39088", VA = "0xB39088")]
			[DebuggerHidden]
			public <SubmitFPSRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xB39484", Offset = "0xB39484", VA = "0xB39484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xB39488", Offset = "0xB39488", VA = "0xB39488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xB39598", Offset = "0xB39598", VA = "0xB39598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private sealed class <CheckCriticalFPSRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GA_SpecialEvents <>4__this;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F78")]
				[Address(RVA = "0xB39700", Offset = "0xB39700", VA = "0xB39700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7A")]
				[Address(RVA = "0xB39748", Offset = "0xB39748", VA = "0xB39748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xB390B0", Offset = "0xB390B0", VA = "0xB390B0")]
			[DebuggerHidden]
			public <CheckCriticalFPSRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xB395E0", Offset = "0xB395E0", VA = "0xB395E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xB395E4", Offset = "0xB395E4", VA = "0xB395E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xB39708", Offset = "0xB39708", VA = "0xB39708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _frameCountAvg;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _lastUpdateAvg;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameCountCrit;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastUpdateCrit;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _criticalFpsCount;

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xB38F7C", Offset = "0xB38F7C", VA = "0xB38F7C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xB38FB4", Offset = "0xB38FB4", VA = "0xB38FB4")]
		[IteratorStateMachine(typeof(<SubmitFPSRoutine>d__6))]
		private IEnumerator SubmitFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xB39014", Offset = "0xB39014", VA = "0xB39014")]
		[IteratorStateMachine(typeof(<CheckCriticalFPSRoutine>d__7))]
		private IEnumerator CheckCriticalFPSRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xB390D8", Offset = "0xB390D8", VA = "0xB390D8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xB391D0", Offset = "0xB391D0", VA = "0xB391D0")]
		public static void SubmitFPS()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xB39378", Offset = "0xB39378", VA = "0xB39378")]
		public void CheckCriticalFPS()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xB3947C", Offset = "0xB3947C", VA = "0xB3947C")]
		public GA_SpecialEvents()
		{
		}
	}
}
namespace GameAnalyticsSDK.Validators
{
	[Token(Token = "0x20004E1")]
	internal static class GAValidator
	{
		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xB39750", Offset = "0xB39750", VA = "0xB39750")]
		public static bool StringMatch(string s, string pattern)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xB397C8", Offset = "0xB397C8", VA = "0xB397C8")]
		public static bool ValidateBusinessEvent(string currency, int amount, string cartType, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xB39AB0", Offset = "0xB39AB0", VA = "0xB39AB0")]
		public static bool ValidateResourceEvent(GAResourceFlowType flowType, string currency, float amount, string itemType, string itemId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xB39D1C", Offset = "0xB39D1C", VA = "0xB39D1C")]
		public static bool ValidateProgressionEvent(GAProgressionStatus progressionStatus, string progression01, string progression02, string progression03)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xB39FBC", Offset = "0xB39FBC", VA = "0xB39FBC")]
		public static bool ValidateDesignEvent(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xB3A150", Offset = "0xB3A150", VA = "0xB3A150")]
		public static bool ValidateErrorEvent(GAErrorSeverity severity, string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xB3A264", Offset = "0xB3A264", VA = "0xB3A264")]
		public static bool ValidateAdEvent(GAAdAction adAction, GAAdType adType, string adSdkName, string adPlacement)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xB3A3EC", Offset = "0xB3A3EC", VA = "0xB3A3EC")]
		public static bool ValidateSdkErrorEvent(string gameKey, string gameSecret, GAErrorSeverity type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xB3A48C", Offset = "0xB3A48C", VA = "0xB3A48C")]
		public static bool ValidateKeys(string gameKey, string gameSecret)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xB39950", Offset = "0xB39950", VA = "0xB39950")]
		public static bool ValidateCurrency(string currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xB39A10", Offset = "0xB39A10", VA = "0xB39A10")]
		public static bool ValidateEventPartLength(string eventPart, bool allowNull)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xB39A68", Offset = "0xB39A68", VA = "0xB39A68")]
		public static bool ValidateEventPartCharacters(string eventPart)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xB3A080", Offset = "0xB3A080", VA = "0xB3A080")]
		public static bool ValidateEventIdLength(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xB3A0E8", Offset = "0xB3A0E8", VA = "0xB3A0E8")]
		public static bool ValidateEventIdCharacters(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xB3A518", Offset = "0xB3A518", VA = "0xB3A518")]
		public static bool ValidateBuild(string build)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xB3A520", Offset = "0xB3A520", VA = "0xB3A520")]
		public static bool ValidateUserId(string uId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xB399B8", Offset = "0xB399B8", VA = "0xB399B8")]
		public static bool ValidateShortString(string shortString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xB3A394", Offset = "0xB3A394", VA = "0xB3A394")]
		public static bool ValidateString(string s, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xB3A20C", Offset = "0xB3A20C", VA = "0xB3A20C")]
		public static bool ValidateLongString(string longString, bool canBeEmpty)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xB3A5AC", Offset = "0xB3A5AC", VA = "0xB3A5AC")]
		public static bool ValidateConnectionType(string connectionType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xB38CC0", Offset = "0xB38CC0", VA = "0xB38CC0")]
		public static bool ValidateCustomDimensions(params string[] customDimensions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xB38D14", Offset = "0xB38D14", VA = "0xB38D14")]
		public static bool ValidateResourceCurrencies(params string[] resourceCurrencies)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xB38E54", Offset = "0xB38E54", VA = "0xB38E54")]
		public static bool ValidateResourceItemTypes(params string[] resourceItemTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xB3AB18", Offset = "0xB3AB18", VA = "0xB3AB18")]
		public static bool ValidateDimension01(string dimension01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xB3ABF4", Offset = "0xB3ABF4", VA = "0xB3ABF4")]
		public static bool ValidateDimension02(string dimension02)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xB3ACD0", Offset = "0xB3ACD0", VA = "0xB3ACD0")]
		public static bool ValidateDimension03(string dimension03)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xB3A5F4", Offset = "0xB3A5F4", VA = "0xB3A5F4")]
		public static bool ValidateArrayOfStrings(long maxCount, long maxStringLength, bool allowNoValues, string logTag, params string[] arrayOfStrings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xB3ADAC", Offset = "0xB3ADAC", VA = "0xB3ADAC")]
		public static bool ValidateClientTs(long clientTs)
		{
			return default(bool);
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20004E2")]
	[RequireComponent(typeof(WaterBase))]
	[ExecuteInEditMode]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xB3ADD0", Offset = "0xB3ADD0", VA = "0xB3ADD0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xB3ADF0", Offset = "0xB3ADF0", VA = "0xB3ADF0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xB3AE54", Offset = "0xB3AE54", VA = "0xB3AE54")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xB3AEB8", Offset = "0xB3AEB8", VA = "0xB3AEB8")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xB3AEC0", Offset = "0xB3AEC0", VA = "0xB3AEC0")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class MeshContainer
	{
		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xB3AEC8", Offset = "0xB3AEC8", VA = "0xB3AEC8")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xB3AF38", Offset = "0xB3AF38", VA = "0xB3AF38")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xB3AF70", Offset = "0xB3AF70", VA = "0xB3AF70")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xB3B06C", Offset = "0xB3B06C", VA = "0xB3B06C")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xB3B37C", Offset = "0xB3B37C", VA = "0xB3B37C")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xB3B430", Offset = "0xB3B430", VA = "0xB3B430")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xB3B588", Offset = "0xB3B588", VA = "0xB3B588")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xB3BDFC", Offset = "0xB3BDFC", VA = "0xB3BDFC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xB3BE54", Offset = "0xB3BE54", VA = "0xB3BE54")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xB3BF34", Offset = "0xB3BF34", VA = "0xB3BF34")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xB3BF98", Offset = "0xB3BF98", VA = "0xB3BF98")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xB3B744", Offset = "0xB3B744", VA = "0xB3B744")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xB3BFFC", Offset = "0xB3BFFC", VA = "0xB3BFFC")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xB3C2B0", Offset = "0xB3C2B0", VA = "0xB3C2B0")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xB3C05C", Offset = "0xB3C05C", VA = "0xB3C05C")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xB3C41C", Offset = "0xB3C41C", VA = "0xB3C41C")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xB3C100", Offset = "0xB3C100", VA = "0xB3C100")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xB3C43C", Offset = "0xB3C43C", VA = "0xB3C43C")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	[RequireComponent(typeof(WaterBase))]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xB3C4AC", Offset = "0xB3C4AC", VA = "0xB3C4AC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xB3C5D4", Offset = "0xB3C5D4", VA = "0xB3C5D4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xB3C7EC", Offset = "0xB3C7EC", VA = "0xB3C7EC")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x20004E8")]
		public enum WaterMode
		{
			[Token(Token = "0x4001FB0")]
			Simple,
			[Token(Token = "0x4001FB1")]
			Reflective,
			[Token(Token = "0x4001FB2")]
			Refractive
		}

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xB3C7F4", Offset = "0xB3C7F4", VA = "0xB3C7F4")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xB3E128", Offset = "0xB3E128", VA = "0xB3E128")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xB3E490", Offset = "0xB3E490", VA = "0xB3E490")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xB3DCA8", Offset = "0xB3DCA8", VA = "0xB3DCA8")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xB3D33C", Offset = "0xB3D33C", VA = "0xB3D33C")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xB3D328", Offset = "0xB3D328", VA = "0xB3D328")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xB3D1C8", Offset = "0xB3D1C8", VA = "0xB3D1C8")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xB3DF78", Offset = "0xB3DF78", VA = "0xB3DF78")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xB3DEE4", Offset = "0xB3DEE4", VA = "0xB3DEE4")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xB3E73C", Offset = "0xB3E73C", VA = "0xB3E73C")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public enum WaterQuality
	{
		[Token(Token = "0x4001FB4")]
		High = 2,
		[Token(Token = "0x4001FB5")]
		Medium = 1,
		[Token(Token = "0x4001FB6")]
		Low = 0
	}
	[Token(Token = "0x20004EA")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xB3E83C", Offset = "0xB3E83C", VA = "0xB3E83C")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xB3E9B4", Offset = "0xB3E9B4", VA = "0xB3E9B4")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xB3EA58", Offset = "0xB3EA58", VA = "0xB3EA58")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xB3EACC", Offset = "0xB3EACC", VA = "0xB3EACC")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xB3EAE4", Offset = "0xB3EAE4", VA = "0xB3EAE4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xB3EAE8", Offset = "0xB3EAE8", VA = "0xB3EAE8")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xB3ECA8", Offset = "0xB3ECA8", VA = "0xB3ECA8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xB3ED8C", Offset = "0xB3ED8C", VA = "0xB3ED8C")]
		public WaterTile()
		{
		}
	}
}
namespace MIConvexHull
{
	[Token(Token = "0x20004EC")]
	internal static class Constants
	{
		[Token(Token = "0x4001FBC")]
		internal const double DefaultPlaneDistanceTolerance = 1E-10;

		[Token(Token = "0x4001FBD")]
		internal const double StartingDeltaDotProductInSimplex = 0.5;

		[Token(Token = "0x4001FBE")]
		internal const int ConnectorTableSize = 2017;
	}
	[Token(Token = "0x20004ED")]
	public static class ConvexHull
	{
		[Token(Token = "0x6001FC3")]
		public static ConvexHull<TVertex, TFace> Create<TVertex, TFace>(IList<TVertex> data, double PlaneDistanceTolerance = 1E-10) where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FC4")]
		public static ConvexHull<TVertex, DefaultConvexFace<TVertex>> Create<TVertex>(IList<TVertex> data, double PlaneDistanceTolerance = 1E-10) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xB3ED94", Offset = "0xB3ED94", VA = "0xB3ED94")]
		public static ConvexHull<DefaultVertex, DefaultConvexFace<DefaultVertex>> Create(IList<double[]> data, double PlaneDistanceTolerance = 1E-10)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EF")]
	public class ConvexHull<TVertex, TFace> where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
	{
		[Token(Token = "0x1700021B")]
		public IEnumerable<TVertex> Points
		{
			[Token(Token = "0x6001FCA")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FCB")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public IEnumerable<TFace> Faces
		{
			[Token(Token = "0x6001FCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FCD")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001FC9")]
		internal ConvexHull()
		{
		}

		[Token(Token = "0x6001FCE")]
		public static ConvexHull<TVertex, TFace> Create(IList<TVertex> data, double PlaneDistanceTolerance)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F0")]
	internal class SimpleList<T>
	{
		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int capacity;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] items;

		[Token(Token = "0x1700021D")]
		public T this[int i]
		{
			[Token(Token = "0x6001FCF")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001FD0")]
			set
			{
			}
		}

		[Token(Token = "0x6001FD1")]
		private void EnsureCapacity()
		{
		}

		[Token(Token = "0x6001FD2")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001FD3")]
		public void Push(T item)
		{
		}

		[Token(Token = "0x6001FD4")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x6001FD5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001FD6")]
		public SimpleList()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	internal class IndexBuffer : SimpleList<int>
	{
		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xB3EFC4", Offset = "0xB3EFC4", VA = "0xB3EFC4")]
		public IndexBuffer()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	internal sealed class FaceList
	{
		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ConvexFaceInternal last;

		[Token(Token = "0x1700021E")]
		public ConvexFaceInternal First
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xB3F00C", Offset = "0xB3F00C", VA = "0xB3F00C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xB3F014", Offset = "0xB3F014", VA = "0xB3F014")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xB3F01C", Offset = "0xB3F01C", VA = "0xB3F01C")]
		private void AddFirst(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xB3F078", Offset = "0xB3F078", VA = "0xB3F078")]
		public void Add(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xB3F19C", Offset = "0xB3F19C", VA = "0xB3F19C")]
		public void Remove(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xB3F238", Offset = "0xB3F238", VA = "0xB3F238")]
		public FaceList()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	internal sealed class ConnectorList
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FaceConnector last;

		[Token(Token = "0x1700021F")]
		public FaceConnector First
		{
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xB3F240", Offset = "0xB3F240", VA = "0xB3F240")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xB3F248", Offset = "0xB3F248", VA = "0xB3F248")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xB3F250", Offset = "0xB3F250", VA = "0xB3F250")]
		private void AddFirst(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xB3F2A0", Offset = "0xB3F2A0", VA = "0xB3F2A0")]
		public void Add(FaceConnector element)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xB3F324", Offset = "0xB3F324", VA = "0xB3F324")]
		public void Remove(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xB3F3A8", Offset = "0xB3F3A8", VA = "0xB3F3A8")]
		public ConnectorList()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public abstract class ConvexFace<TVertex, TFace> where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>
	{
		[Token(Token = "0x17000220")]
		public TFace[] Adjacency
		{
			[Token(Token = "0x6001FE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FE5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public TVertex[] Vertices
		{
			[Token(Token = "0x6001FE6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FE7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public double[] Normal
		{
			[Token(Token = "0x6001FE8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FE9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001FEA")]
		protected ConvexFace()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class DefaultConvexFace<TVertex> : ConvexFace<TVertex, DefaultConvexFace<TVertex>> where TVertex : IVertex
	{
		[Token(Token = "0x6001FEB")]
		public DefaultConvexFace()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	internal class ConvexHullAlgorithm
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly int NumOfDimensions;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly bool IsLifted;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly double PlaneDistanceTolerance;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IVertex[] Vertices;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] Positions;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool[] VertexVisited;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int NumberOfVertices;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal ConvexFaceInternal[] FacePool;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal bool[] AffectedFaceFlags;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ConvexHullSize;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly FaceList UnprocessedFaces;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly IndexBuffer ConvexFaces;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int CurrentVertex;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double MaxDistance;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int FurthestVertex;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly double[] Center;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] UpdateBuffer;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] UpdateIndices;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly IndexBuffer TraverseStack;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly IndexBuffer EmptyBuffer;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IndexBuffer BeyondBuffer;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly IndexBuffer AffectedFaceBuffer;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly SimpleList<DeferredFace> ConeFaceBuffer;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly HashSet<int> SingularVertices;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ConnectorList[] ConnectorTable;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly ObjectManager ObjectManager;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly MathHelper MathHelper;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<int>[] boundingBoxPoints;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int indexOfDimensionWithLeastExtremes;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly double[] minima;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly double[] maxima;

		[Token(Token = "0x6001FEC")]
		internal static ConvexHull<TVertex, TFace> GetConvexHull<TVertex, TFace>(IList<TVertex> data, double PlaneDistanceTolerance) where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xB3F3B0", Offset = "0xB3F3B0", VA = "0xB3F3B0")]
		private ConvexHullAlgorithm(IVertex[] vertices, bool lift, double PlaneDistanceTolerance)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xB3F9E4", Offset = "0xB3F9E4", VA = "0xB3F9E4")]
		private int DetermineDimension()
		{
			return default(int);
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xB3FD5C", Offset = "0xB3FD5C", VA = "0xB3FD5C")]
		private void GetConvexHull()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xB3FEAC", Offset = "0xB3FEAC", VA = "0xB3FEAC")]
		private void SerializeVerticesToPositions()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xB40154", Offset = "0xB40154", VA = "0xB40154")]
		private void FindBoundingBoxPoints()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xB406FC", Offset = "0xB406FC", VA = "0xB406FC")]
		private void ShiftAndScalePositions()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xB40AB8", Offset = "0xB40AB8", VA = "0xB40AB8")]
		private void CreateInitialSimplex()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xB4193C", Offset = "0xB4193C", VA = "0xB4193C")]
		private List<int> FindInitialPoints()
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xB425F4", Offset = "0xB425F4", VA = "0xB425F4")]
		private void UpdateAdjacency(ConvexFaceInternal l, ConvexFaceInternal r)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xB42804", Offset = "0xB42804", VA = "0xB42804")]
		private void FindBeyondVertices(ConvexFaceInternal face)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xB40FE8", Offset = "0xB40FE8", VA = "0xB40FE8")]
		private void TagAffectedFaces(ConvexFaceInternal currentFace)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xB42BBC", Offset = "0xB42BBC", VA = "0xB42BBC")]
		private void TraverseAffectedFaces(int currentFace)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xB42E50", Offset = "0xB42E50", VA = "0xB42E50")]
		private DeferredFace MakeDeferredFace(ConvexFaceInternal face, int faceIndex, ConvexFaceInternal pivot, int pivotIndex, ConvexFaceInternal oldFace)
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xB42EDC", Offset = "0xB42EDC", VA = "0xB42EDC")]
		private void ConnectFace(FaceConnector connector)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xB41074", Offset = "0xB41074", VA = "0xB41074")]
		private bool CreateCone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xB4148C", Offset = "0xB4148C", VA = "0xB4148C")]
		private void CommitCone()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xB42ADC", Offset = "0xB42ADC", VA = "0xB42ADC")]
		private void IsBeyond(ConvexFaceInternal face, IndexBuffer beyondVertices, int v)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xB4354C", Offset = "0xB4354C", VA = "0xB4354C")]
		private int LexCompare(int u, int v)
		{
			return default(int);
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xB43320", Offset = "0xB43320", VA = "0xB43320")]
		private void FindBeyondVertices(ConvexFaceInternal face, IndexBuffer beyond, IndexBuffer beyond1)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xB43200", Offset = "0xB43200", VA = "0xB43200")]
		private void FindBeyondVertices(ConvexFaceInternal face, IndexBuffer beyond)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xB40EF4", Offset = "0xB40EF4", VA = "0xB40EF4")]
		private void UpdateCenter()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xB43610", Offset = "0xB43610", VA = "0xB43610")]
		private void RollbackCenter()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xB4175C", Offset = "0xB4175C", VA = "0xB4175C")]
		private void HandleSingular()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xB41904", Offset = "0xB41904", VA = "0xB41904")]
		private double GetCoordinate(int vIndex, int dimension)
		{
			return default(double);
		}

		[Token(Token = "0x6002005")]
		private TVertex[] GetHullVertices<TVertex>(IList<TVertex> data)
		{
			return null;
		}

		[Token(Token = "0x6002006")]
		private TFace[] GetConvexFaces<TVertex, TFace>() where TVertex : IVertex where TFace : ConvexFace<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6002007")]
		internal static TCell[] GetDelaunayTriangulation<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xB43714", Offset = "0xB43714", VA = "0xB43714")]
		private void RemoveUpperFaces()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	internal sealed class DeferredFace
	{
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConvexFaceInternal Face;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConvexFaceInternal Pivot;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConvexFaceInternal OldFace;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FaceIndex;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int PivotIndex;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xB43AD4", Offset = "0xB43AD4", VA = "0xB43AD4")]
		public DeferredFace()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	internal sealed class FaceConnector
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int EdgeIndex;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConvexFaceInternal Face;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint HashCode;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FaceConnector Next;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FaceConnector Previous;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] Vertices;

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xB43ADC", Offset = "0xB43ADC", VA = "0xB43ADC")]
		public FaceConnector(int dimension)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xB430E8", Offset = "0xB430E8", VA = "0xB430E8")]
		public void Update(ConvexFaceInternal face, int edgeIndex, int dim)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xB42FE8", Offset = "0xB42FE8", VA = "0xB42FE8")]
		public static bool AreConnectable(FaceConnector a, FaceConnector b, int dim)
		{
			return default(bool);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xB43074", Offset = "0xB43074", VA = "0xB43074")]
		public static void Connect(FaceConnector a, FaceConnector b)
		{
		}
	}
	[Token(Token = "0x20004FC")]
	internal sealed class ConvexFaceInternal
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] AdjacentFaces;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int FurthestVertex;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Index;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool InList;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsNormalFlipped;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConvexFaceInternal Next;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double[] Normal;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double Offset;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConvexFaceInternal Previous;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int Tag;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] Vertices;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IndexBuffer VerticesBeyond;

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xB43B4C", Offset = "0xB43B4C", VA = "0xB43B4C")]
		public ConvexFaceInternal(int dimension, int index, IndexBuffer beyondList)
		{
		}
	}
	[Token(Token = "0x20004FD")]
	internal class MathHelper
	{
		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int Dimension;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int[] matrixPivots;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly double[] nDMatrix;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly double[] nDNormalHelperVector;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly double[] ntX;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly double[] ntY;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly double[] ntZ;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly double[] PositionData;

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xB3FC28", Offset = "0xB3FC28", VA = "0xB3FC28")]
		internal MathHelper(int dimension, double[] positions)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xB42448", Offset = "0xB42448", VA = "0xB42448")]
		internal bool CalculateFacePlane(ConvexFaceInternal face, double[] center)
		{
			return default(bool);
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xB42DBC", Offset = "0xB42DBC", VA = "0xB42DBC")]
		internal double GetVertexDistance(int v, ConvexFaceInternal f)
		{
			return default(double);
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xB428A8", Offset = "0xB428A8", VA = "0xB428A8")]
		internal double[] VectorBetweenVertices(int toIndex, int fromIndex)
		{
			return null;
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xB43C58", Offset = "0xB43C58", VA = "0xB43C58")]
		private void VectorBetweenVertices(int toIndex, int fromIndex, double[] target)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xB43C2C", Offset = "0xB43C2C", VA = "0xB43C2C")]
		private void FindNormalVector(int[] vertices, double[] normalData)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xB43CE8", Offset = "0xB43CE8", VA = "0xB43CE8")]
		private void FindNormalVector2D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xB43DCC", Offset = "0xB43DCC", VA = "0xB43DCC")]
		private void FindNormalVector3D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xB43F40", Offset = "0xB43F40", VA = "0xB43F40")]
		private void FindNormalVector4D(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xB441C8", Offset = "0xB441C8", VA = "0xB441C8")]
		private void FindNormalVectorND(int[] vertices, double[] normal)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xB42920", Offset = "0xB42920", VA = "0xB42920")]
		internal double GetSimplexVolume(double[][] edgeVectors, int lastIndex, double bigNumber)
		{
			return default(double);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xB447E4", Offset = "0xB447E4", VA = "0xB447E4")]
		private double DeterminantDestructive(double[] A)
		{
			return default(double);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xB4440C", Offset = "0xB4440C", VA = "0xB4440C")]
		private static void LUFactor(double[] data, int order, int[] ipiv, double[] vecLUcolj)
		{
		}
	}
	[Token(Token = "0x20004FE")]
	internal class ObjectManager
	{
		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int Dimension;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FaceConnector ConnectorStack;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly SimpleList<DeferredFace> DeferredFaceStack;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly SimpleList<IndexBuffer> EmptyBufferStack;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConvexFaceInternal[] FacePool;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int FacePoolSize;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int FacePoolCapacity;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly IndexBuffer FreeFaceIndices;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ConvexHullAlgorithm Hull;

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xB6E878", Offset = "0xB6E878", VA = "0xB6E878")]
		public ObjectManager(ConvexHullAlgorithm hull)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xB6E9D4", Offset = "0xB6E9D4", VA = "0xB6E9D4")]
		public void DepositFace(int faceIndex)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xB6EA90", Offset = "0xB6EA90", VA = "0xB6EA90")]
		private void ReallocateFacePool()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xB6EB98", Offset = "0xB6EB98", VA = "0xB6EB98")]
		private int CreateFace()
		{
			return default(int);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xB6ED1C", Offset = "0xB6ED1C", VA = "0xB6ED1C")]
		public int GetFace()
		{
			return default(int);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xB6ED88", Offset = "0xB6ED88", VA = "0xB6ED88")]
		public void DepositConnector(FaceConnector connector)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xB6EDE4", Offset = "0xB6EDE4", VA = "0xB6EDE4")]
		public FaceConnector GetConnector()
		{
			return null;
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xB6EE7C", Offset = "0xB6EE7C", VA = "0xB6EE7C")]
		public void DepositVertexBuffer(IndexBuffer buffer)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xB6EC88", Offset = "0xB6EC88", VA = "0xB6EC88")]
		public IndexBuffer GetVertexBuffer()
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xB6EEF8", Offset = "0xB6EEF8", VA = "0xB6EEF8")]
		public void DepositDeferredFace(DeferredFace face)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xB6EF50", Offset = "0xB6EF50", VA = "0xB6EF50")]
		public DeferredFace GetDeferredFace()
		{
			return null;
		}
	}
	[Token(Token = "0x20004FF")]
	public interface IVertex
	{
		[Token(Token = "0x17000223")]
		double[] Position
		{
			[Token(Token = "0x6002030")]
			get;
		}
	}
	[Token(Token = "0x2000500")]
	public class DefaultVertex : IVertex
	{
		[Token(Token = "0x17000224")]
		public double[] Position
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xB6EFE4", Offset = "0xB6EFE4", VA = "0xB6EFE4", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002032")]
			[Address(RVA = "0xB6EFEC", Offset = "0xB6EFEC", VA = "0xB6EFEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xB6EFF4", Offset = "0xB6EFF4", VA = "0xB6EFF4")]
		public DefaultVertex()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public interface ITriangulation<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
	{
		[Token(Token = "0x17000225")]
		IEnumerable<TCell> Cells
		{
			[Token(Token = "0x6002034")]
			get;
		}
	}
	[Token(Token = "0x2000502")]
	public static class Triangulation
	{
		[Token(Token = "0x6002035")]
		public static ITriangulation<TVertex, DefaultTriangulationCell<TVertex>> CreateDelaunay<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xB6EFFC", Offset = "0xB6EFFC", VA = "0xB6EFFC")]
		public static ITriangulation<DefaultVertex, DefaultTriangulationCell<DefaultVertex>> CreateDelaunay(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x6002037")]
		public static ITriangulation<TVertex, TFace> CreateDelaunay<TVertex, TFace>(IList<TVertex> data) where TVertex : IVertex where TFace : TriangulationCell<TVertex, TFace>, new()
		{
			return null;
		}

		[Token(Token = "0x6002038")]
		public static VoronoiMesh<TVertex, TCell, TEdge> CreateVoronoi<TVertex, TCell, TEdge>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x6002039")]
		public static VoronoiMesh<TVertex, DefaultTriangulationCell<TVertex>, VoronoiEdge<TVertex, DefaultTriangulationCell<TVertex>>> CreateVoronoi<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xB6F134", Offset = "0xB6F134", VA = "0xB6F134")]
		public static VoronoiMesh<DefaultVertex, DefaultTriangulationCell<DefaultVertex>, VoronoiEdge<DefaultVertex, DefaultTriangulationCell<DefaultVertex>>> CreateVoronoi(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x600203B")]
		public static VoronoiMesh<TVertex, TCell, VoronoiEdge<TVertex, TCell>> CreateVoronoi<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}
	}
	[Token(Token = "0x2000504")]
	public class DelaunayTriangulation<TVertex, TCell> : ITriangulation<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
	{
		[Token(Token = "0x17000226")]
		public IEnumerable<TCell> Cells
		{
			[Token(Token = "0x6002041")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002042")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002040")]
		private DelaunayTriangulation()
		{
		}

		[Token(Token = "0x6002043")]
		public static DelaunayTriangulation<TVertex, TCell> Create(IList<TVertex> data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000505")]
	public abstract class TriangulationCell<TVertex, TCell> : ConvexFace<TVertex, TCell> where TVertex : IVertex where TCell : ConvexFace<TVertex, TCell>
	{
		[Token(Token = "0x6002044")]
		protected TriangulationCell()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class DefaultTriangulationCell<TVertex> : TriangulationCell<TVertex, DefaultTriangulationCell<TVertex>> where TVertex : IVertex
	{
		[Token(Token = "0x6002045")]
		public DefaultTriangulationCell()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class VoronoiEdge<TVertex, TCell> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>
	{
		[Token(Token = "0x17000227")]
		public TCell Source
		{
			[Token(Token = "0x6002048")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002049")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public TCell Target
		{
			[Token(Token = "0x600204A")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600204B")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6002046")]
		public VoronoiEdge()
		{
		}

		[Token(Token = "0x6002047")]
		public VoronoiEdge(TCell source, TCell target)
		{
		}

		[Token(Token = "0x600204C")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600204D")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000508")]
	public static class VoronoiMesh
	{
		[Token(Token = "0x600204E")]
		public static VoronoiMesh<TVertex, TCell, TEdge> Create<TVertex, TCell, TEdge>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
		{
			return null;
		}

		[Token(Token = "0x600204F")]
		public static VoronoiMesh<TVertex, DefaultTriangulationCell<TVertex>, VoronoiEdge<TVertex, DefaultTriangulationCell<TVertex>>> Create<TVertex>(IList<TVertex> data) where TVertex : IVertex
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xB6F3E4", Offset = "0xB6F3E4", VA = "0xB6F3E4")]
		public static VoronoiMesh<DefaultVertex, DefaultTriangulationCell<DefaultVertex>, VoronoiEdge<DefaultVertex, DefaultTriangulationCell<DefaultVertex>>> Create(IList<double[]> data)
		{
			return null;
		}

		[Token(Token = "0x6002051")]
		public static VoronoiMesh<TVertex, TCell, VoronoiEdge<TVertex, TCell>> Create<TVertex, TCell>(IList<TVertex> data) where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new()
		{
			return null;
		}
	}
	[Token(Token = "0x200050A")]
	public class VoronoiMesh<TVertex, TCell, TEdge> where TVertex : IVertex where TCell : TriangulationCell<TVertex, TCell>, new() where TEdge : VoronoiEdge<TVertex, TCell>, new()
	{
		[Token(Token = "0x200050B")]
		private class EdgeComparer : IEqualityComparer<TEdge>
		{
			[Token(Token = "0x600205B")]
			public bool Equals(TEdge x, TEdge y)
			{
				return default(bool);
			}

			[Token(Token = "0x600205C")]
			public int GetHashCode(TEdge obj)
			{
				return default(int);
			}

			[Token(Token = "0x600205D")]
			public EdgeComparer()
			{
			}
		}

		[Token(Token = "0x17000229")]
		public IEnumerable<TCell> Vertices
		{
			[Token(Token = "0x6002056")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002057")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public IEnumerable<TEdge> Edges
		{
			[Token(Token = "0x6002058")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002059")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002055")]
		private VoronoiMesh()
		{
		}

		[Token(Token = "0x600205A")]
		public static VoronoiMesh<TVertex, TCell, TEdge> Create(IList<TVertex> data)
		{
			return null;
		}
	}
}
namespace NWH
{
	[Token(Token = "0x200050C")]
	public class Comparer : IComparer
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vert vx;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vert vy;

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xB6F624", Offset = "0xB6F624", VA = "0xB6F624", Slot = "4")]
		public int Compare(object x, object y)
		{
			return default(int);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xB6F794", Offset = "0xB6F794", VA = "0xB6F794")]
		public Comparer()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class History
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> removedTriangles;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ArrayList> replacedVertex;

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xB6F79C", Offset = "0xB6F79C", VA = "0xB6F79C")]
		public void RemovedTriangle(int f)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xB6F844", Offset = "0xB6F844", VA = "0xB6F844")]
		public void ReplaceVertex(int f, int u, int v, Vector3 normal, Vector2 uv, int newV, Vector3 newNormal, Vector2 newUv)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xB6FB38", Offset = "0xB6FB38", VA = "0xB6FB38")]
		public History()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class MeshDecimate
	{
		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ratio;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float smoothAngle;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float smoothAngleDot;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool lockSelPoint;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> selectedVertices;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bRecalculateNormals;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lodDataSize;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tri[] myTriangles;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vert[] myLODVertices;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private History[] collapseHistory;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vert> cache;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int cacheSize;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triOrder;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] originalTriangles;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] originalVertices;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2[] originalUVs;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] originalNormals;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] sharedTriangles;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] sharedVertices;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3[] finalVertices;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3[] finalNormals;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2[] finalUVs;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int[] finalTriangles;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool preCalculateDone;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int lastTarget;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentcnt;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int searchIndex;

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xB6FC10", Offset = "0xB6FC10", VA = "0xB6FC10")]
		private float ComputeEdgeCollapseCosts(Vert u, Vert v)
		{
			return default(float);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xB702C0", Offset = "0xB702C0", VA = "0xB702C0")]
		private void ComputeEdgeCostAtVertex(Vert v)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xB703F4", Offset = "0xB703F4", VA = "0xB703F4")]
		private void ComputeAllEdgeCollapseCosts()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xB704B0", Offset = "0xB704B0", VA = "0xB704B0")]
		private void UnCollapse(History his)
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xB70990", Offset = "0xB70990", VA = "0xB70990")]
		private void Collapse(History his)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xB70E74", Offset = "0xB70E74", VA = "0xB70E74")]
		private void CollapseTest()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xB71B44", Offset = "0xB71B44", VA = "0xB71B44")]
		private void SortRight(Vert v)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xB719CC", Offset = "0xB719CC", VA = "0xB719CC")]
		private void SortLeft(Vert v)
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xB71CC4", Offset = "0xB71CC4", VA = "0xB71CC4")]
		public void PreCalculate(Mesh tmpMesh)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xB729C4", Offset = "0xB729C4", VA = "0xB729C4")]
		public void Calculate(Mesh tmpMesh)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xB7225C", Offset = "0xB7225C", VA = "0xB7225C")]
		private void ComputeProgressiveMesh()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xB73398", Offset = "0xB73398", VA = "0xB73398")]
		private void ProgressiveMesh(float ratio)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xB73710", Offset = "0xB73710", VA = "0xB73710")]
		private void RecalculateNormal()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xB73E48", Offset = "0xB73E48", VA = "0xB73E48")]
		public MeshDecimate()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class Tri
	{
		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vert v0;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vert v1;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vert v2;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int defaultIndex0;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int defaultIndex1;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int defaultIndex2;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 uv0;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 uv1;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 uv2;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 vn0;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 vn1;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 vn2;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 normal;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool deleted;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xB735DC", Offset = "0xB735DC", VA = "0xB735DC")]
		public Tri(int id, Vert v0, Vert v1, Vert v2, Vector2 uv0, Vector2 uv1, Vector2 uv2)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xB73704", Offset = "0xB73704", VA = "0xB73704")]
		public void SetDefaultIndices(int n0, int n1, int n2)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xB71518", Offset = "0xB71518", VA = "0xB71518")]
		public void RemoveTriangle(History his)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xB701C4", Offset = "0xB701C4", VA = "0xB701C4")]
		public Vector2 uvAt(Vert v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xB715DC", Offset = "0xB715DC", VA = "0xB715DC")]
		public Vector3 normalAt(Vert v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xB744FC", Offset = "0xB744FC", VA = "0xB744FC")]
		public void setUV(Vert v, Vector2 newuv)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xB745EC", Offset = "0xB745EC", VA = "0xB745EC")]
		public void setVN(Vert v, Vector3 newNormal)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xB6FFC0", Offset = "0xB6FFC0", VA = "0xB6FFC0")]
		public bool HasVertex(Vert v)
		{
			return default(bool);
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xB73FC4", Offset = "0xB73FC4", VA = "0xB73FC4")]
		public void RecalculateNormal()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xB73784", Offset = "0xB73784", VA = "0xB73784")]
		public void RecalculateAvgNormals(float smoothAngleDot)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xB716D4", Offset = "0xB716D4", VA = "0xB716D4")]
		public void ReplaceVertex(Vert vo, Vert vnew, Vector2 newUV, Vector3 newVN, History his)
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class Vert
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Tri> face;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vert> neighbor;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cost;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vert collapse;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool selected;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool deleted;

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xB734B4", Offset = "0xB734B4", VA = "0xB734B4")]
		public Vert(Vector3 position, int id, bool selected)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xB7144C", Offset = "0xB7144C", VA = "0xB7144C")]
		public void RemoveVert()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xB70094", Offset = "0xB70094", VA = "0xB70094")]
		public bool IsBorder()
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xB7417C", Offset = "0xB7417C", VA = "0xB7417C")]
		public void AddFace(Tri f)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xB74358", Offset = "0xB74358", VA = "0xB74358")]
		public void RemoveFace(Tri f)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xB7422C", Offset = "0xB7422C", VA = "0xB7422C")]
		public void AddNeighbor(Vert v)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xB743B0", Offset = "0xB743B0", VA = "0xB743B0")]
		public void RemoveIfNonNeighbor(Vert v)
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class VertexData
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float dist;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int index;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xB746D8", Offset = "0xB746D8", VA = "0xB746D8")]
		public VertexData()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[RequireComponent(typeof(Text))]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4002065")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4002069")]
		private const string display = "{0} FPS";

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xB746E0", Offset = "0xB746E0", VA = "0xB746E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xB7474C", Offset = "0xB7474C", VA = "0xB7474C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xB74840", Offset = "0xB74840", VA = "0xB74840")]
		public FPSCounter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000514")]
	public class InputHandler
	{
		[Token(Token = "0x2000515")]
		public enum InputMode
		{
			[Token(Token = "0x4002072")]
			Mouse,
			[Token(Token = "0x4002073")]
			Keyboard
		}

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputMode inputMode;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool shiftUp;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool shiftDown;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xAxis;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yAxis;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool handbrake;

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xB74848", Offset = "0xB74848", VA = "0xB74848")]
		public void Update()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xB748D8", Offset = "0xB748D8", VA = "0xB748D8")]
		private float xMouse()
		{
			return default(float);
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xB74950", Offset = "0xB74950", VA = "0xB74950")]
		private float yMouse()
		{
			return default(float);
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xB749C8", Offset = "0xB749C8", VA = "0xB749C8")]
		public InputHandler()
		{
		}
	}
}
namespace Wilberforce.VAO
{
	[Token(Token = "0x2000516")]
	[AddComponentMenu("Image Effects/Rendering/Volumetric Ambient Occlusion")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	[HelpURL("https://projectwilberforce.github.io/vaomanual/")]
	public class VAOEffect : VAOEffectCommandBuffer
	{
		[Token(Token = "0x600208E")]
		[Address(RVA = "0xB749D0", Offset = "0xB749D0", VA = "0xB749D0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xB749D8", Offset = "0xB749D8", VA = "0xB749D8")]
		public VAOEffect()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[ExecuteInEditMode]
	[HelpURL("https://projectwilberforce.github.io/vaomanual/")]
	[RequireComponent(typeof(Camera))]
	public class VAOEffectCommandBuffer : MonoBehaviour
	{
		[Token(Token = "0x2000518")]
		public enum EffectMode
		{
			[Token(Token = "0x400210B")]
			Simple = 1,
			[Token(Token = "0x400210C")]
			ColorTint,
			[Token(Token = "0x400210D")]
			ColorBleed
		}

		[Token(Token = "0x2000519")]
		public enum LuminanceModeType
		{
			[Token(Token = "0x400210F")]
			Luma = 1,
			[Token(Token = "0x4002110")]
			HSVValue
		}

		[Token(Token = "0x200051A")]
		public enum GiBlurAmmount
		{
			[Token(Token = "0x4002112")]
			Auto = 1,
			[Token(Token = "0x4002113")]
			Less,
			[Token(Token = "0x4002114")]
			More
		}

		[Token(Token = "0x200051B")]
		public enum CullingPrepassModeType
		{
			[Token(Token = "0x4002116")]
			Off,
			[Token(Token = "0x4002117")]
			Greedy,
			[Token(Token = "0x4002118")]
			Careful
		}

		[Token(Token = "0x200051C")]
		public enum AdaptiveSamplingType
		{
			[Token(Token = "0x400211A")]
			Disabled,
			[Token(Token = "0x400211B")]
			EnabledAutomatic,
			[Token(Token = "0x400211C")]
			EnabledManual
		}

		[Token(Token = "0x200051D")]
		public enum BlurModeType
		{
			[Token(Token = "0x400211E")]
			Disabled,
			[Token(Token = "0x400211F")]
			Basic,
			[Token(Token = "0x4002120")]
			Enhanced
		}

		[Token(Token = "0x200051E")]
		public enum BlurQualityType
		{
			[Token(Token = "0x4002122")]
			Fast,
			[Token(Token = "0x4002123")]
			Precise
		}

		[Token(Token = "0x200051F")]
		public enum ColorBleedSelfOcclusionFixLevelType
		{
			[Token(Token = "0x4002125")]
			Off,
			[Token(Token = "0x4002126")]
			Soft,
			[Token(Token = "0x4002127")]
			Hard
		}

		[Token(Token = "0x2000520")]
		public enum ScreenTextureFormat
		{
			[Token(Token = "0x4002129")]
			Auto,
			[Token(Token = "0x400212A")]
			ARGB32,
			[Token(Token = "0x400212B")]
			ARGBHalf,
			[Token(Token = "0x400212C")]
			ARGBFloat,
			[Token(Token = "0x400212D")]
			Default,
			[Token(Token = "0x400212E")]
			DefaultHDR
		}

		[Token(Token = "0x2000521")]
		public enum FarPlaneSourceType
		{
			[Token(Token = "0x4002130")]
			ProjectionParams,
			[Token(Token = "0x4002131")]
			Camera
		}

		[Token(Token = "0x2000522")]
		public enum DistanceFalloffModeType
		{
			[Token(Token = "0x4002133")]
			Off,
			[Token(Token = "0x4002134")]
			Absolute,
			[Token(Token = "0x4002135")]
			Relative
		}

		[Token(Token = "0x2000523")]
		public enum VAOCameraEventType
		{
			[Token(Token = "0x4002137")]
			AfterLighting,
			[Token(Token = "0x4002138")]
			BeforeReflections,
			[Token(Token = "0x4002139")]
			BeforeImageEffectsOpaque
		}

		[Token(Token = "0x2000524")]
		public enum HierarchicalBufferStateType
		{
			[Token(Token = "0x400213B")]
			Off,
			[Token(Token = "0x400213C")]
			On,
			[Token(Token = "0x400213D")]
			Auto
		}

		[Token(Token = "0x2000525")]
		public enum NormalsSourceType
		{
			[Token(Token = "0x400213F")]
			GBuffer = 1,
			[Token(Token = "0x4002140")]
			Calculate
		}

		[Token(Token = "0x2000526")]
		public enum DetailQualityType
		{
			[Token(Token = "0x4002142")]
			Medium = 1,
			[Token(Token = "0x4002143")]
			High
		}

		[Token(Token = "0x2000527")]
		public enum AlgorithmType
		{
			[Token(Token = "0x4002145")]
			StandardVAO = 1,
			[Token(Token = "0x4002146")]
			RaycastAO
		}

		[Token(Token = "0x2000528")]
		private enum ShaderPass
		{
			[Token(Token = "0x4002148")]
			CullingPrepass,
			[Token(Token = "0x4002149")]
			MainPass,
			[Token(Token = "0x400214A")]
			MainPassDoubleRadius,
			[Token(Token = "0x400214B")]
			MainPassTripleRadius,
			[Token(Token = "0x400214C")]
			MainPassDoubleRadiusHQ,
			[Token(Token = "0x400214D")]
			MainPassTripleRadiusHQ
		}

		[Token(Token = "0x2000529")]
		private enum ShaderFinalPass
		{
			[Token(Token = "0x400214F")]
			StandardBlurUniform,
			[Token(Token = "0x4002150")]
			StandardBlurUniformMultiplyBlend,
			[Token(Token = "0x4002151")]
			StandardBlurUniformFast,
			[Token(Token = "0x4002152")]
			StandardBlurUniformFastMultiplyBlend,
			[Token(Token = "0x4002153")]
			EnhancedBlurFirstPass,
			[Token(Token = "0x4002154")]
			EnhancedBlurSecondPass,
			[Token(Token = "0x4002155")]
			EnhancedBlurSecondPassMultiplyBlend,
			[Token(Token = "0x4002156")]
			Mixing,
			[Token(Token = "0x4002157")]
			MixingMultiplyBlend,
			[Token(Token = "0x4002158")]
			DownscaleDepthNormalsPass,
			[Token(Token = "0x4002159")]
			Copy,
			[Token(Token = "0x400215A")]
			BlendAfterLightingLog,
			[Token(Token = "0x400215B")]
			TexCopyImageEffectSPSR,
			[Token(Token = "0x400215C")]
			CalculateNormals,
			[Token(Token = "0x400215D")]
			TexCopyTemporalSPSR
		}

		[Token(Token = "0x200052A")]
		private enum ShaderBeforeReflectionsBlendPass
		{
			[Token(Token = "0x400215F")]
			BlendBeforeReflections,
			[Token(Token = "0x4002160")]
			BlendBeforeReflectionsLog
		}

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Power;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Presence;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Thickness;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float BordersIntensity;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DetailAmountVAO;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DetailQualityType DetailQuality;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DetailAmountRaycast;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Quality;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float SSAOBias;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool MaxRadiusEnabled;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaxRadius;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AlgorithmType Algorithm;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public DistanceFalloffModeType DistanceFalloffMode;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float DistanceFalloffStartAbsolute;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DistanceFalloffStartRelative;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float DistanceFalloffSpeedAbsolute;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float DistanceFalloffSpeedRelative;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AdaptiveSamplingType AdaptiveType;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AdaptiveQualityCoefficient;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CullingPrepassModeType CullingPrepassMode;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int Downsampling;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HierarchicalBufferStateType HierarchicalBufferState;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool CommandBufferEnabled;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool UseGBuffer;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool UsePreciseDepthBuffer;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		public bool EnableTemporalFiltering;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VAOCameraEventType VaoCameraEvent;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public FarPlaneSourceType FarPlaneSource;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool IsLumaSensitive;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public LuminanceModeType LuminanceMode;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float LumaThreshold;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float LumaKneeWidth;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float LumaKneeLinearity;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public EffectMode Mode;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color ColorTint;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float ColorBleedPower;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float ColorBleedPresence;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ScreenTextureFormat IntermediateScreenTextureFormat;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool ColorbleedHueSuppresionEnabled;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float ColorBleedHueSuppresionThreshold;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float ColorBleedHueSuppresionWidth;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float ColorBleedHueSuppresionSaturationThreshold;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float ColorBleedHueSuppresionSaturationWidth;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float ColorBleedHueSuppresionBrightness;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int ColorBleedQuality;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ColorBleedSelfOcclusionFixLevelType ColorBleedSelfOcclusionFixLevel;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool GiBackfaces;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BlurQualityType BlurQuality;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public BlurModeType BlurMode;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int EnhancedBlurSize;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float EnhancedBlurDeviation;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool OutputAOOnly;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public NormalsSourceType NormalsSource;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float HierarchicalBufferPixelsPerLevel;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int CullingPrepassDownsamplingFactor;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float AdaptiveQuality;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float AdaptiveMin;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float AdaptiveMax;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool lumaFoldout;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool colorBleedFoldout;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		public bool optimizationFoldout;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		public bool radiusLimitsFoldout;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool pipelineFoldout;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool blurFoldout;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		public bool aboutFoldout;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<CameraEvent, CommandBuffer> cameraEventsRegistered;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isCommandBufferAlive;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Mesh screenQuad;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int destinationWidth;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int destinationHeight;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool onDestroyCalled;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Shader vaoMainShader;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Shader vaoMainColorbleedShader;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Shader raycastMainShader;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Shader raycastMainColorbleedShader;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Shader vaoFinalPassShader;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Shader vaoBeforeReflectionsBlendShader;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera myCamera;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool isSupported;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material VAOMaterial;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material VAOColorbleedMaterial;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material VAOFinalPassMaterial;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material RaycastMaterial;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Material RaycastColorbleedMaterial;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Material BeforeReflectionsBlendMaterial;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public bool ForcedSwitchPerformed;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public bool ForcedSwitchPerformedSinglePassStereo;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public bool ForcedSwitchPerformedSinglePassStereoGBuffer;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int lastDownsampling;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int lastAlgorithm;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private AdaptiveSamplingType lastAdaptiveType;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private CameraEvent? lastOverrideCameraEvent;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool lastEnableTemporalFiltering;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int? lastOverrideWidth;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int? lastOverrideHeight;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int lastQuality;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CullingPrepassModeType lastcullingPrepassType;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int lastCullingPrepassDownsamplingFactor;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private BlurModeType lastBlurMode;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private BlurQualityType lastBlurQuality;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int lastMainPass;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private EffectMode lastMode;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool lastUseGBuffer;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		private bool lastOutputAOOnly;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private CameraEvent lastCameraEvent;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool lastIsHDR;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		private bool lastIsSPSR;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		private bool lastIsMPSR;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int lastScreenTextureWidth;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int lastScreenTextureHeight;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool isHDR;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
		public bool isSPSR;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x206")]
		public bool isMPSR;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ScreenTextureFormat lastIntermediateScreenTextureFormat;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int lastCmdBufferEnhancedBlurSize;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool lastHierarchicalBufferEnabled;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		public bool historyReady;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Matrix4x4 previousCameraToWorldMatrix;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Matrix4x4 previousProjectionMatrix;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private Matrix4x4 previousCameraToWorldMatrixLeft;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private Matrix4x4 previousProjectionMatrixLeft;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Texture2D noiseTexture;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Texture2D temporalSamplesTexture;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int frameNumber;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private bool isEvenFrame;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Vector4[] adaptiveSamples;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector4[] carefulCache;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture[] aoHistory;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int aoHistoryCurrentIdx;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector4[] gaussian;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Vector4[] gaussianBuffer;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private Vector4[] samplesLarge;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private int lastSamplesLength;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int lastEnhancedBlurSize;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float gaussianWeight;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float lastDeviation;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public CameraEvent? OverrideCameraEvent;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public int? OverrideWidth;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public int? OverrideHeight;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Vector4[] samplesPacked;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] noiseSamples;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector4[] samp2;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector4[] samp4;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector4[] samp8;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4[] samp16;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector4[] samp32;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector4[] samp64;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector4[] packedSamples;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Color[] temporalSamplesPacked;

		[Token(Token = "0x1700022B")]
		public bool HierarchicalBufferEnabled
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xB65820", Offset = "0xB65820", VA = "0xB65820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xB600F8", Offset = "0xB600F8", VA = "0xB600F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xB61270", Offset = "0xB61270", VA = "0xB61270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xB616BC", Offset = "0xB616BC", VA = "0xB616BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xB616F8", Offset = "0xB616F8", VA = "0xB616F8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xB645DC", Offset = "0xB645DC", VA = "0xB645DC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xB648B0", Offset = "0xB648B0", VA = "0xB648B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xB648B4", Offset = "0xB648B4", VA = "0xB648B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xB648D0", Offset = "0xB648D0", VA = "0xB648D0")]
		private ShaderPass GetMainPass(AlgorithmType algorithm, bool doQuarterRadius, bool doHalfRadius)
		{
			return default(ShaderPass);
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xB64910", Offset = "0xB64910", VA = "0xB64910")]
		private Material getAlgorithmMaterial()
		{
			return null;
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xB64954", Offset = "0xB64954", VA = "0xB64954")]
		protected void PerformOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xB644DC", Offset = "0xB644DC", VA = "0xB644DC")]
		private void EnsureCommandBuffer(bool settingsDirty = false)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xB65AA4", Offset = "0xB65AA4", VA = "0xB65AA4")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xB612E8", Offset = "0xB612E8", VA = "0xB612E8")]
		private void TeardownCommandBuffer()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xB685C8", Offset = "0xB685C8", VA = "0xB685C8")]
		protected Mesh GetScreenQuad()
		{
			return null;
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xB6849C", Offset = "0xB6849C", VA = "0xB6849C")]
		private CameraEvent GetCameraEvent(VAOCameraEventType vaoCameraEvent)
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xB65848", Offset = "0xB65848", VA = "0xB65848")]
		private void DoShaderBlitCopy(Texture sourceTexture, RenderTexture destinationTexture)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xB687E0", Offset = "0xB687E0", VA = "0xB687E0")]
		protected void DoMixingBlit(CommandBuffer commandBuffer, int? source, int? primaryTarget, RenderTargetIdentifier secondaryTarget, int pass, Material material)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xB688B4", Offset = "0xB688B4", VA = "0xB688B4")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, int target, int pass, Material material)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xB68A18", Offset = "0xB68A18", VA = "0xB68A18")]
		protected void DoBlit(CommandBuffer commandBuffer, int? source, RenderTargetIdentifier target, int pass, Material material)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xB61C14", Offset = "0xB61C14", VA = "0xB61C14")]
		private void TrySetUniforms()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xB6592C", Offset = "0xB6592C", VA = "0xB6592C")]
		private void prepareAoHistory(int screenTextureWidth, int screenTextureHeight)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xB65734", Offset = "0xB65734", VA = "0xB65734")]
		private void releaseAoHistory()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xB68EF8", Offset = "0xB68EF8", VA = "0xB68EF8")]
		private Vector4[] GetCombinedSamples(Vector4[] a, Vector4[] b, [Optional] Vector4[] c, [Optional] Vector4[] d)
		{
			return null;
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xB69080", Offset = "0xB69080", VA = "0xB69080")]
		private Vector4[] selectSampleSet(int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xB691BC", Offset = "0xB691BC", VA = "0xB691BC")]
		private int getAdaptiveSamplesOffset(int samplesCount)
		{
			return default(int);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xB68C54", Offset = "0xB68C54", VA = "0xB68C54")]
		private void SetKeywords(Material material, string offState, string onState, bool state)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xB60910", Offset = "0xB60910", VA = "0xB60910")]
		private void EnsureMaterials()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xB69204", Offset = "0xB69204", VA = "0xB69204")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xB692B0", Offset = "0xB692B0", VA = "0xB692B0")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xB68C98", Offset = "0xB68C98", VA = "0xB68C98")]
		private void SetVectorArrayNoBuffer(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xB68E74", Offset = "0xB68E74", VA = "0xB68E74")]
		private void SetVectorArray(string name, Material Material, Vector4[] samples, ref Vector4[] samplesBuffer, ref int lastBufferLength, bool needsUpdate)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xB69334", Offset = "0xB69334", VA = "0xB69334")]
		private void SetSampleSet(string name, Material material, Vector4[] samples)
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xB6945C", Offset = "0xB6945C", VA = "0xB6945C")]
		private Vector4[] GetAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xB61144", Offset = "0xB61144", VA = "0xB61144")]
		private Vector4[] GenerateAdaptiveSamples()
		{
			return null;
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xB60EA4", Offset = "0xB60EA4", VA = "0xB60EA4")]
		private void EnsureNoiseTexture()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xB60FE8", Offset = "0xB60FE8", VA = "0xB60FE8")]
		private void EnsureTemporalSamplesTexture()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xB68CB4", Offset = "0xB68CB4", VA = "0xB68CB4")]
		private static Vector4[] GenerateGaussian(int size, float d, out float weight, bool normalize = true)
		{
			return null;
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xB68B58", Offset = "0xB68B58", VA = "0xB68B58")]
		private float GetDepthForScreenSize(Camera camera, float sizeOnScreen)
		{
			return default(float);
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xB69490", Offset = "0xB69490", VA = "0xB69490")]
		public bool ShouldUseHierarchicalBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xB68BA8", Offset = "0xB68BA8", VA = "0xB68BA8")]
		public bool ShouldUseGBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xB61910", Offset = "0xB61910", VA = "0xB61910")]
		protected void EnsureVAOVersion()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xB640A8", Offset = "0xB640A8", VA = "0xB640A8")]
		private bool CheckSettingsChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xB68598", Offset = "0xB68598", VA = "0xB68598")]
		private RenderTextureFormat GetRenderTextureFormat(ScreenTextureFormat format, bool isHDR)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xB60864", Offset = "0xB60864", VA = "0xB60864")]
		private void ReportError(string error)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xB6992C", Offset = "0xB6992C", VA = "0xB6992C")]
		private void ReportWarning(string error)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xB61618", Offset = "0xB61618", VA = "0xB61618")]
		private bool isCameraSPSR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xB698A8", Offset = "0xB698A8", VA = "0xB698A8")]
		private bool isCameraHDR(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xB68BA0", Offset = "0xB68BA0", VA = "0xB68BA0")]
		private bool MustForceFlip(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xB69594", Offset = "0xB69594", VA = "0xB69594")]
		protected List<KeyValuePair<FieldInfo, object>> GetParameters()
		{
			return null;
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xB69740", Offset = "0xB69740", VA = "0xB69740")]
		protected void SetParameters(List<KeyValuePair<FieldInfo, object>> parameters)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xB699D8", Offset = "0xB699D8", VA = "0xB699D8")]
		public VAOEffectCommandBuffer()
		{
		}
	}
}
